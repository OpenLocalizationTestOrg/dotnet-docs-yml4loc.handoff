{"nodes":[{"content":"Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.","nodes":[{"pos":[0,127],"content":"Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.","nodes":[{"content":"Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.","pos":[0,127]}]}],"pos":[882,1010],"yaml":true},{"content":"A weak reference allows the garbage collector to collect an object while still allowing an application to access the object. If you need the object, you can still obtain a strong reference to it and prevent it from being collected. For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).","nodes":[{"pos":[0,379],"content":"A weak reference allows the garbage collector to collect an object while still allowing an application to access the object. If you need the object, you can still obtain a strong reference to it and prevent it from being collected. For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).","nodes":[{"content":"A weak reference allows the garbage collector to collect an object while still allowing an application to access the object.","pos":[0,124]},{"content":"If you need the object, you can still obtain a strong reference to it and prevent it from being collected.","pos":[125,231]},{"content":"For more information about how to use short and long weak references, see <bpt id=\"p1\">[</bpt>Weak References<ept id=\"p1\">](~/docs/standard/garbage-collection/weak-references.md)</ept>.","pos":[232,379],"source":" For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md)."}]}],"pos":[1021,1401],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, referencing the specified object.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> class, referencing the specified object.","source":"Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, referencing the specified object."}],"pos":[5143,5260],"yaml":true},{"content":"This constructor creates a short weak reference to `target`.","nodes":[{"pos":[0,60],"content":"This constructor creates a short weak reference to <ph id=\"ph1\">`target`</ph>.","source":"This constructor creates a short weak reference to `target`."}],"pos":[5271,5332],"yaml":true,"extradata":"MT"},{"content":"The object to track or `null`.","nodes":[{"pos":[0,30],"content":"The object to track or <ph id=\"ph1\">`null`</ph>.","source":"The object to track or `null`."}],"pos":[5471,5502],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, referencing the specified object and using the specified resurrection tracking.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> class, referencing the specified object and using the specified resurrection tracking.","source":"Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, referencing the specified object and using the specified resurrection tracking."}],"pos":[7121,7284],"yaml":true},{"content":"If `trackResurrection` is `false`, a short weak reference is created. If `trackResurrection` is `true`, a long weak reference is created.","nodes":[{"pos":[0,137],"content":"If `trackResurrection` is `false`, a short weak reference is created. If `trackResurrection` is `true`, a long weak reference is created.","nodes":[{"content":"If <ph id=\"ph1\">`trackResurrection`</ph> is <ph id=\"ph2\">`false`</ph>, a short weak reference is created.","pos":[0,69],"source":"If `trackResurrection` is `false`, a short weak reference is created."},{"content":"If <ph id=\"ph1\">`trackResurrection`</ph> is <ph id=\"ph2\">`true`</ph>, a long weak reference is created.","pos":[70,137],"source":" If `trackResurrection` is `true`, a long weak reference is created."}]}],"pos":[7295,7433],"yaml":true,"extradata":"MT"},{"content":"An object to track.","nodes":[{"pos":[0,19],"content":"An object to track.","nodes":[{"content":"An object to track.","pos":[0,19]}]}],"pos":[8009,8029],"yaml":true},{"content":"Indicates when to stop tracking the object. If `true`, the object is tracked after finalization; if `false`, the object is only tracked until finalization.","nodes":[{"pos":[0,155],"content":"Indicates when to stop tracking the object. If `true`, the object is tracked after finalization; if `false`, the object is only tracked until finalization.","nodes":[{"content":"Indicates when to stop tracking the object.","pos":[0,43]},{"content":"If <ph id=\"ph1\">`true`</ph>, the object is tracked after finalization; if <ph id=\"ph2\">`false`</ph>, the object is only tracked until finalization.","pos":[44,155],"source":" If `true`, the object is tracked after finalization; if `false`, the object is only tracked until finalization."}]}],"pos":[8103,8259],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, using deserialized data from the specified serialization and stream objects.","nodes":[{"pos":[0,159],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> class, using deserialized data from the specified serialization and stream objects.","source":"Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, using deserialized data from the specified serialization and stream objects."}],"pos":[10130,10290],"yaml":true},{"content":"The `context` parameter is reserved, and does not currently participate in this operation.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">`context`</ph> parameter is reserved, and does not currently participate in this operation.","source":"The `context` parameter is reserved, and does not currently participate in this operation."}],"pos":[10301,10392],"yaml":true,"extradata":"MT"},{"content":"An object that holds all the data needed to serialize or deserialize the current <xref href=\"System.WeakReference\"></xref> object.","nodes":[{"pos":[0,130],"content":"An object that holds all the data needed to serialize or deserialize the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object.","source":"An object that holds all the data needed to serialize or deserialize the current <xref href=\"System.WeakReference\"></xref> object."}],"pos":[10658,10789],"yaml":true},{"content":"(Reserved) Describes the source and destination of the serialized stream specified by <code>info</code>.","nodes":[{"pos":[0,104],"content":"(Reserved) Describes the source and destination of the serialized stream specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"(Reserved) Describes the source and destination of the serialized stream specified by <code>info</code>."}],"pos":[10884,10989],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[11145,11174],"yaml":true},{"content":"Discards the reference to the target represented by the current <xref href=\"System.WeakReference\"></xref> object.","nodes":[{"pos":[0,113],"content":"Discards the reference to the target represented by the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object.","source":"Discards the reference to the target represented by the current <xref href=\"System.WeakReference\"></xref> object."}],"pos":[12244,12358],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data needed to serialize the current <xref href=\"System.WeakReference\"></xref> object.","nodes":[{"pos":[0,186],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with all the data needed to serialize the current <ph id=\"ph2\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data needed to serialize the current <xref href=\"System.WeakReference\"></xref> object."}],"pos":[14310,14497],"yaml":true},{"content":"This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object.  \n  \n The `context` parameter is reserved and is not currently used in the execution of this method.","nodes":[{"pos":[0,119],"content":"This method stores all the information in <ph id=\"ph1\">`info`</ph> necessary to serialize the current <ph id=\"ph2\">&lt;xref:System.WeakReference&gt;</ph> object.","source":"This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object."},{"pos":[126,220],"content":"The <ph id=\"ph1\">`context`</ph> parameter is reserved and is not currently used in the execution of this method.","source":"The `context` parameter is reserved and is not currently used in the execution of this method."}],"pos":[14508,14733],"yaml":true,"extradata":"MT"},{"content":"An object that holds all the data needed to serialize or deserialize the current <xref href=\"System.WeakReference\"></xref> object.","nodes":[{"pos":[0,130],"content":"An object that holds all the data needed to serialize or deserialize the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object.","source":"An object that holds all the data needed to serialize or deserialize the current <xref href=\"System.WeakReference\"></xref> object."}],"pos":[15009,15140],"yaml":true},{"content":"(Reserved) The location where serialized data is stored and retrieved.","nodes":[{"pos":[0,70],"content":"(Reserved) The location where serialized data is stored and retrieved.","nodes":[{"content":"(Reserved) The location where serialized data is stored and retrieved.","pos":[0,70]}]}],"pos":[15235,15306],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[15470,15499],"yaml":true},{"content":"Gets an indication whether the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has been garbage collected.","nodes":[{"pos":[0,140],"content":"Gets an indication whether the object referenced by the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object has been garbage collected.","source":"Gets an indication whether the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has been garbage collected."}],"pos":[16559,16700],"yaml":true},{"content":"Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.","nodes":[{"pos":[0,252],"content":"Because an object could potentially be reclaimed for garbage collection immediately after the <ph id=\"ph1\">&lt;xref:System.WeakReference.IsAlive%2A&gt;</ph> property returns <ph id=\"ph2\">`true`</ph>, using this property is not recommended unless you are testing only for a <ph id=\"ph3\">`false`</ph> return value.","source":"Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value."}],"pos":[16711,16964],"yaml":true,"extradata":"MT"},{"content":"`true` if the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has not been garbage collected and is still accessible; otherwise, `false`.","nodes":[{"pos":[0,171],"content":"<ph id=\"ph1\">`true`</ph> if the object referenced by the current <ph id=\"ph2\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object has not been garbage collected and is still accessible; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has not been garbage collected and is still accessible; otherwise, `false`."}],"pos":[17082,17256],"yaml":true},{"content":"Gets or sets the object (the target) referenced by the current <xref href=\"System.WeakReference\"></xref> object.","nodes":[{"pos":[0,112],"content":"Gets or sets the object (the target) referenced by the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the object (the target) referenced by the current <xref href=\"System.WeakReference\"></xref> object."}],"pos":[18713,18826],"yaml":true},{"content":"After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.","nodes":[{"pos":[0,153],"content":"After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.","nodes":[{"content":"After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.","pos":[0,153]}]}],"pos":[18837,18991],"yaml":true,"extradata":"MT"},{"content":"`null` if the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has been garbage collected; otherwise, a reference to the object referenced by the current <xref href=\"System.WeakReference\"></xref> object.","nodes":[{"pos":[0,236],"content":"<ph id=\"ph1\">`null`</ph> if the object referenced by the current <ph id=\"ph2\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object has been garbage collected; otherwise, a reference to the object referenced by the current <ph id=\"ph3\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object.","source":"`null` if the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has been garbage collected; otherwise, a reference to the object referenced by the current <xref href=\"System.WeakReference\"></xref> object."}],"pos":[19618,19857],"yaml":true},{"content":"The reference to the target object is invalid. This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.","nodes":[{"pos":[0,198],"content":"The reference to the target object is invalid. This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.","nodes":[{"content":"The reference to the target object is invalid. This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.","pos":[0,198],"nodes":[{"content":"The reference to the target object is invalid.","pos":[0,46]},{"content":"This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.","pos":[47,198]}]}]}],"pos":[20022,20221],"yaml":true},{"content":"Gets an indication whether the object referenced by the current <xref href=\"System.WeakReference\"></xref> object is tracked after it is finalized.","nodes":[{"pos":[0,146],"content":"Gets an indication whether the object referenced by the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object is tracked after it is finalized.","source":"Gets an indication whether the object referenced by the current <xref href=\"System.WeakReference\"></xref> object is tracked after it is finalized."}],"pos":[21685,21832],"yaml":true},{"content":"If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor.","nodes":[{"pos":[0,165],"content":"If <ph id=\"ph1\">`true`</ph>, the weak reference is a long weak reference and <ph id=\"ph2\">`true`</ph> was specified for the <ph id=\"ph3\">`trackResurrection`</ph> parameter in the <ph id=\"ph4\">&lt;xref:System.WeakReference&gt;</ph> constructor.","source":"If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor."}],"pos":[21843,22009],"yaml":true,"extradata":"MT"},{"content":"`true` if the object the current <xref href=\"System.WeakReference\"></xref> object refers to is tracked after finalization; or `false` if the object is only tracked until finalization.","nodes":[{"pos":[0,183],"content":"<ph id=\"ph1\">`true`</ph> if the object the current <ph id=\"ph2\">&lt;xref href=\"System.WeakReference\"&gt;&lt;/xref&gt;</ph> object refers to is tracked after finalization; or <ph id=\"ph3\">`false`</ph> if the object is only tracked until finalization.","source":"`true` if the object the current <xref href=\"System.WeakReference\"></xref> object refers to is tracked after finalization; or `false` if the object is only tracked until finalization."}],"pos":[22137,22323],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.WeakReference\n  commentId: T:System.WeakReference\n  id: WeakReference\n  children:\n  - System.WeakReference.#ctor\n  - System.WeakReference.#ctor(System.Object)\n  - System.WeakReference.#ctor(System.Object,System.Boolean)\n  - System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.WeakReference.Finalize\n  - System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.WeakReference.IsAlive\n  - System.WeakReference.Target\n  - System.WeakReference.TrackResurrection\n  langs:\n  - csharp\n  name: WeakReference\n  nameWithType: WeakReference\n  fullName: System.WeakReference\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.\n  remarks: A weak reference allows the garbage collector to collect an object while still allowing an application to access the object. If you need the object, you can still obtain a strong reference to it and prevent it from being collected. For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).\n  example:\n  - \"The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application. The cache is constructed using an <xref:System.Collections.Generic.IDictionary%602> of <xref:System.WeakReference> objects keyed by an index value. The <xref:System.WeakReference.Target%2A> property for the <xref:System.WeakReference> objects is an object in a byte array that represents data.  \\n  \\n The example randomly accesses objects in the cache. If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.  \\n  \\n [!code-csharp[WeakReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#1)]\\n [!code-vb[WeakReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class WeakReference : System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.#ctor\n  commentId: M:System.WeakReference.#ctor\n  id: '#ctor'\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: WeakReference()\n  nameWithType: WeakReference.WeakReference()\n  fullName: WeakReference.WeakReference()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected WeakReference ();\n    parameters: []\n  overload: System.WeakReference.#ctor*\n  exceptions: []\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.#ctor(System.Object)\n  commentId: M:System.WeakReference.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: WeakReference(Object)\n  nameWithType: WeakReference.WeakReference(Object)\n  fullName: WeakReference.WeakReference(Object)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, referencing the specified object.\n  remarks: This constructor creates a short weak reference to `target`.\n  syntax:\n    content: public WeakReference (object target);\n    parameters:\n    - id: target\n      type: System.Object\n      description: The object to track or `null`.\n  overload: System.WeakReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.#ctor(System.Object,System.Boolean)\n  commentId: M:System.WeakReference.#ctor(System.Object,System.Boolean)\n  id: '#ctor(System.Object,System.Boolean)'\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: WeakReference(Object, Boolean)\n  nameWithType: WeakReference.WeakReference(Object, Boolean)\n  fullName: WeakReference.WeakReference(Object, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, referencing the specified object and using the specified resurrection tracking.\n  remarks: If `trackResurrection` is `false`, a short weak reference is created. If `trackResurrection` is `true`, a long weak reference is created.\n  example:\n  - \"The following example creates a cache of data objects with short weak references. This example is part of a larger example provided for the <xref:System.WeakReference> class.  \\n  \\n [!code-csharp[WeakReference#2](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#2)]\\n [!code-vb[WeakReference#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#2)]\"\n  syntax:\n    content: public WeakReference (object target, bool trackResurrection);\n    parameters:\n    - id: target\n      type: System.Object\n      description: An object to track.\n    - id: trackResurrection\n      type: System.Boolean\n      description: Indicates when to stop tracking the object. If `true`, the object is tracked after finalization; if `false`, the object is only tracked until finalization.\n  overload: System.WeakReference.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: WeakReference(SerializationInfo, StreamingContext)\n  nameWithType: WeakReference.WeakReference(SerializationInfo, StreamingContext)\n  fullName: WeakReference.WeakReference(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.WeakReference\"></xref> class, using deserialized data from the specified serialization and stream objects.\n  remarks: The `context` parameter is reserved, and does not currently participate in this operation.\n  syntax:\n    content: protected WeakReference (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: An object that holds all the data needed to serialize or deserialize the current <xref href=\"System.WeakReference\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: (Reserved) Describes the source and destination of the serialized stream specified by <code>info</code>.\n  overload: System.WeakReference.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.Finalize\n  commentId: M:System.WeakReference.Finalize\n  id: Finalize\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: WeakReference.Finalize()\n  fullName: WeakReference.Finalize()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Discards the reference to the target represented by the current <xref href=\"System.WeakReference\"></xref> object.\n  syntax:\n    content: ~WeakReference ();\n    parameters: []\n  overload: System.WeakReference.Finalize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: WeakReference.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: WeakReference.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data needed to serialize the current <xref href=\"System.WeakReference\"></xref> object.\n  remarks: \"This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object.  \\n  \\n The `context` parameter is reserved and is not currently used in the execution of this method.\"\n  syntax:\n    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: An object that holds all the data needed to serialize or deserialize the current <xref href=\"System.WeakReference\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: (Reserved) The location where serialized data is stored and retrieved.\n  overload: System.WeakReference.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.IsAlive\n  commentId: P:System.WeakReference.IsAlive\n  id: IsAlive\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: IsAlive\n  nameWithType: WeakReference.IsAlive\n  fullName: WeakReference.IsAlive\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets an indication whether the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has been garbage collected.\n  remarks: Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.\n  syntax:\n    content: public virtual bool IsAlive { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has not been garbage collected and is still accessible; otherwise, `false`.'\n  overload: System.WeakReference.IsAlive*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.Target\n  commentId: P:System.WeakReference.Target\n  id: Target\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: Target\n  nameWithType: WeakReference.Target\n  fullName: WeakReference.Target\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets or sets the object (the target) referenced by the current <xref href=\"System.WeakReference\"></xref> object.\n  remarks: After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.\n  example:\n  - \"The following example tries to obtain an object from a cache of objects with weak references. If the object was reclaimed for garbage collection, a new object is generated. This example is part of a larger example provided for the <xref:System.WeakReference> class.  \\n  \\n [!code-csharp[WeakReference#3](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#3)]\\n [!code-vb[WeakReference#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#3)]\"\n  syntax:\n    content: public virtual object Target { get; set; }\n    return:\n      type: System.Object\n      description: '`null` if the object referenced by the current <xref href=\"System.WeakReference\"></xref> object has been garbage collected; otherwise, a reference to the object referenced by the current <xref href=\"System.WeakReference\"></xref> object.'\n  overload: System.WeakReference.Target*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The reference to the target object is invalid. This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference.TrackResurrection\n  commentId: P:System.WeakReference.TrackResurrection\n  id: TrackResurrection\n  parent: System.WeakReference\n  langs:\n  - csharp\n  name: TrackResurrection\n  nameWithType: WeakReference.TrackResurrection\n  fullName: WeakReference.TrackResurrection\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets an indication whether the object referenced by the current <xref href=\"System.WeakReference\"></xref> object is tracked after it is finalized.\n  remarks: If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor.\n  syntax:\n    content: public virtual bool TrackResurrection { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the object the current <xref href=\"System.WeakReference\"></xref> object refers to is tracked after finalization; or `false` if the object is only tracked until finalization.'\n  overload: System.WeakReference.TrackResurrection*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.WeakReference.#ctor\n  parent: System.WeakReference\n  isExternal: false\n  name: WeakReference()\n  nameWithType: WeakReference.WeakReference()\n  fullName: WeakReference.WeakReference()\n- uid: System.WeakReference.#ctor(System.Object)\n  parent: System.WeakReference\n  isExternal: false\n  name: WeakReference(Object)\n  nameWithType: WeakReference.WeakReference(Object)\n  fullName: WeakReference.WeakReference(Object)\n- uid: System.WeakReference.#ctor(System.Object,System.Boolean)\n  parent: System.WeakReference\n  isExternal: false\n  name: WeakReference(Object, Boolean)\n  nameWithType: WeakReference.WeakReference(Object, Boolean)\n  fullName: WeakReference.WeakReference(Object, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.WeakReference\n  isExternal: false\n  name: WeakReference(SerializationInfo, StreamingContext)\n  nameWithType: WeakReference.WeakReference(SerializationInfo, StreamingContext)\n  fullName: WeakReference.WeakReference(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.WeakReference.Finalize\n  parent: System.WeakReference\n  isExternal: false\n  name: Finalize()\n  nameWithType: WeakReference.Finalize()\n  fullName: WeakReference.Finalize()\n- uid: System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.WeakReference\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: WeakReference.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: WeakReference.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.WeakReference.IsAlive\n  parent: System.WeakReference\n  isExternal: false\n  name: IsAlive\n  nameWithType: WeakReference.IsAlive\n  fullName: WeakReference.IsAlive\n- uid: System.WeakReference.Target\n  parent: System.WeakReference\n  isExternal: false\n  name: Target\n  nameWithType: WeakReference.Target\n  fullName: WeakReference.Target\n- uid: System.WeakReference.TrackResurrection\n  parent: System.WeakReference\n  isExternal: false\n  name: TrackResurrection\n  nameWithType: WeakReference.TrackResurrection\n  fullName: WeakReference.TrackResurrection\n- uid: System.WeakReference.#ctor*\n  parent: System.WeakReference\n  isExternal: false\n  name: WeakReference\n  nameWithType: WeakReference.WeakReference\n  fullName: WeakReference.WeakReference\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n- uid: System.WeakReference.Finalize*\n  parent: System.WeakReference\n  isExternal: false\n  name: Finalize\n  nameWithType: WeakReference.Finalize\n  fullName: WeakReference.Finalize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n- uid: System.WeakReference.GetObjectData*\n  parent: System.WeakReference\n  isExternal: false\n  name: GetObjectData\n  nameWithType: WeakReference.GetObjectData\n  fullName: WeakReference.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n- uid: System.WeakReference.IsAlive*\n  parent: System.WeakReference\n  isExternal: false\n  name: IsAlive\n  nameWithType: WeakReference.IsAlive\n  fullName: WeakReference.IsAlive\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n- uid: System.WeakReference.Target*\n  parent: System.WeakReference\n  isExternal: false\n  name: Target\n  nameWithType: WeakReference.Target\n  fullName: WeakReference.Target\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n- uid: System.WeakReference.TrackResurrection*\n  parent: System.WeakReference\n  isExternal: false\n  name: TrackResurrection\n  nameWithType: WeakReference.TrackResurrection\n  fullName: WeakReference.TrackResurrection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}