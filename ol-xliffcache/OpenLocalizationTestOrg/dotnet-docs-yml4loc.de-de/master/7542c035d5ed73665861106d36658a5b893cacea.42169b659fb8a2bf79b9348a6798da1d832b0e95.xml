{"nodes":[{"content":"Contains the extension methods for the <xref href=\"System.Data.TypedTableBase`1\"></xref> class.","nodes":[{"pos":[0,95],"content":"Contains the extension methods for the <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Contains the extension methods for the <xref href=\"System.Data.TypedTableBase`1\"></xref> class."}],"pos":[1363,1459],"yaml":true},{"content":"The class contains static extension methods that define the <xref:System.Data.TypedTableBaseExtensions.AsEnumerable%2A> method and standard query operations for typed data sets.  \n  \n This class cannot be instantiated.","nodes":[{"pos":[0,177],"content":"The class contains static extension methods that define the <xref:System.Data.TypedTableBaseExtensions.AsEnumerable%2A> method and standard query operations for typed data sets.","nodes":[{"content":"The class contains static extension methods that define the <ph id=\"ph1\">&lt;xref:System.Data.TypedTableBaseExtensions.AsEnumerable%2A&gt;</ph> method and standard query operations for typed data sets.","pos":[0,177],"source":"The class contains static extension methods that define the <xref:System.Data.TypedTableBaseExtensions.AsEnumerable%2A> method and standard query operations for typed data sets."}]},{"pos":[184,218],"content":"This class cannot be instantiated.","nodes":[{"content":"This class cannot be instantiated.","pos":[0,34]}]}],"pos":[1470,1693],"yaml":true,"extradata":"MT"},{"content":"Enumerates the data row elements of the <xref href=\"System.Data.TypedTableBase`1\"></xref> and returns an <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.","nodes":[{"pos":[0,366],"content":"Enumerates the data row elements of the <xref href=\"System.Data.TypedTableBase`1\"></xref> and returns an <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.","nodes":[{"content":"Enumerates the data row elements of the <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> and returns an <ph id=\"ph2\">&lt;xref href=\"System.Data.EnumerableRowCollection`1\"&gt;&lt;/xref&gt;</ph> object, where the generic parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph4\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","pos":[0,259],"source":"Enumerates the data row elements of the <xref href=\"System.Data.TypedTableBase`1\"></xref> and returns an <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>."},{"content":"This object can be used in a <ph id=\"ph1\">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> expression or method query.","pos":[260,366],"source":" This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query."}]}],"pos":[3267,3634],"yaml":true},{"content":"The source <xref href=\"System.Data.TypedTableBase`1\"></xref> to make enumerable.","nodes":[{"pos":[0,80],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> to make enumerable.","source":"The source <xref href=\"System.Data.TypedTableBase`1\"></xref> to make enumerable."}],"pos":[3912,3993],"yaml":true},{"content":"The type to convert the elements of the source to.","nodes":[{"pos":[0,50],"content":"The type to convert the elements of the source to.","nodes":[{"content":"The type to convert the elements of the source to.","pos":[0,50]}]}],"pos":[4047,4098],"yaml":true},{"content":"An <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,157],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.EnumerableRowCollection`1\"&gt;&lt;/xref&gt;</ph> object, where the generic parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[4179,4337],"yaml":true},{"content":"Returns the element at a specified row in a sequence or a default value if the row is out of range.","nodes":[{"pos":[0,99],"content":"Returns the element at a specified row in a sequence or a default value if the row is out of range.","nodes":[{"content":"Returns the element at a specified row in a sequence or a default value if the row is out of range.","pos":[0,99]}]}],"pos":[5678,5778],"yaml":true},{"content":"An enumerable object to return an element from.","nodes":[{"pos":[0,47],"content":"An enumerable object to return an element from.","nodes":[{"content":"An enumerable object to return an element from.","pos":[0,47]}]}],"pos":[6036,6084],"yaml":true},{"content":"The zero-based index of the element to retrieve.","nodes":[{"pos":[0,48],"content":"The zero-based index of the element to retrieve.","nodes":[{"content":"The zero-based index of the element to retrieve.","pos":[0,48]}]}],"pos":[6144,6193],"yaml":true},{"content":"The type of the elements or the row.","nodes":[{"pos":[0,36],"content":"The type of the elements or the row.","nodes":[{"content":"The type of the elements or the row.","pos":[0,36]}]}],"pos":[6247,6284],"yaml":true},{"content":"The element at a specified row in a sequence.","nodes":[{"pos":[0,45],"content":"The element at a specified row in a sequence.","nodes":[{"content":"The element at a specified row in a sequence.","pos":[0,45]}]}],"pos":[6332,6378],"yaml":true},{"content":"Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in ascending order according to the specified key.","nodes":[{"pos":[0,120],"content":"Sorts the rows of a <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> in ascending order according to the specified key.","source":"Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in ascending order according to the specified key."}],"pos":[7728,7849],"yaml":true},{"content":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> elements to be ordered.","source":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered."}],"pos":[8163,8298],"yaml":true},{"content":"A function to extract a key from an element.","nodes":[{"pos":[0,44],"content":"A function to extract a key from an element.","nodes":[{"content":"A function to extract a key from an element.","pos":[0,44]}]}],"pos":[8374,8419],"yaml":true},{"content":"The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,104],"content":"The type of the row elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, typically <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[8473,8578],"yaml":true},{"content":"The type of the key returned by <code>keySelector</code>.","nodes":[{"pos":[0,57],"content":"The type of the key returned by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keySelector</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the key returned by <code>keySelector</code>."}],"pos":[8612,8670],"yaml":true},{"content":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key.","nodes":[{"pos":[0,116],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.OrderedEnumerableRowCollection`1\"&gt;&lt;/xref&gt;</ph> whose elements are sorted by the specified key.","source":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key."}],"pos":[8758,8875],"yaml":true},{"content":"Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in ascending order according to the specified key and comparer.","nodes":[{"pos":[0,133],"content":"Sorts the rows of a <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> in ascending order according to the specified key and comparer.","source":"Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in ascending order according to the specified key and comparer."}],"pos":[10391,10525],"yaml":true},{"content":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> elements to be ordered.","source":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered."}],"pos":[10892,11027],"yaml":true},{"content":"A function to extract a key from an element.","nodes":[{"pos":[0,44],"content":"A function to extract a key from an element.","nodes":[{"content":"A function to extract a key from an element.","pos":[0,44]}]}],"pos":[11103,11148],"yaml":true},{"content":"An <xref href=\"System.Collections.Generic.IComparer`1\"></xref> to compare keys.","nodes":[{"pos":[0,79],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IComparer`1\"&gt;&lt;/xref&gt;</ph> to compare keys.","source":"An <xref href=\"System.Collections.Generic.IComparer`1\"></xref> to compare keys."}],"pos":[11241,11321],"yaml":true},{"content":"The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,104],"content":"The type of the row elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, typically <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[11375,11480],"yaml":true},{"content":"The type of the key returned by <code>keySelector</code>.","nodes":[{"pos":[0,57],"content":"The type of the key returned by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keySelector</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the key returned by <code>keySelector</code>."}],"pos":[11514,11572],"yaml":true},{"content":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key and comparer.","nodes":[{"pos":[0,129],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.OrderedEnumerableRowCollection`1\"&gt;&lt;/xref&gt;</ph> whose elements are sorted by the specified key and comparer.","source":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key and comparer."}],"pos":[11660,11790],"yaml":true},{"content":"Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in descending order according to the specified key.","nodes":[{"pos":[0,121],"content":"Sorts the rows of a <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> in descending order according to the specified key.","source":"Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in descending order according to the specified key."}],"pos":[13189,13311],"yaml":true},{"content":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> elements to be ordered.","source":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered."}],"pos":[13635,13770],"yaml":true},{"content":"A function to extract a key from an element.","nodes":[{"pos":[0,44],"content":"A function to extract a key from an element.","nodes":[{"content":"A function to extract a key from an element.","pos":[0,44]}]}],"pos":[13846,13891],"yaml":true},{"content":"The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,104],"content":"The type of the row elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, typically <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[13945,14050],"yaml":true},{"content":"The type of the key returned by <code>keySelector</code>.","nodes":[{"pos":[0,57],"content":"The type of the key returned by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keySelector</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the key returned by <code>keySelector</code>."}],"pos":[14084,14142],"yaml":true},{"content":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key.","nodes":[{"pos":[0,116],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.OrderedEnumerableRowCollection`1\"&gt;&lt;/xref&gt;</ph> whose elements are sorted by the specified key.","source":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key."}],"pos":[14230,14347],"yaml":true},{"content":"Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in descending order according to the specified key and comparer.","nodes":[{"pos":[0,134],"content":"Sorts the rows of a <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> in descending order according to the specified key and comparer.","source":"Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in descending order according to the specified key and comparer."}],"pos":[15933,16068],"yaml":true},{"content":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> elements to be ordered.","source":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered."}],"pos":[16445,16580],"yaml":true},{"content":"A function to extract a key from an element.","nodes":[{"pos":[0,44],"content":"A function to extract a key from an element.","nodes":[{"content":"A function to extract a key from an element.","pos":[0,44]}]}],"pos":[16656,16701],"yaml":true},{"content":"An <xref href=\"System.Collections.Generic.IComparer`1\"></xref> to compare keys.","nodes":[{"pos":[0,79],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IComparer`1\"&gt;&lt;/xref&gt;</ph> to compare keys.","source":"An <xref href=\"System.Collections.Generic.IComparer`1\"></xref> to compare keys."}],"pos":[16794,16874],"yaml":true},{"content":"The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,104],"content":"The type of the row elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, typically <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[16928,17033],"yaml":true},{"content":"The type of the key returned by <code>keySelector</code>.","nodes":[{"pos":[0,57],"content":"The type of the key returned by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keySelector</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the key returned by <code>keySelector</code>."}],"pos":[17067,17125],"yaml":true},{"content":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key and comparer.","nodes":[{"pos":[0,129],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.OrderedEnumerableRowCollection`1\"&gt;&lt;/xref&gt;</ph> whose elements are sorted by the specified key and comparer.","source":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key and comparer."}],"pos":[17213,17343],"yaml":true},{"content":"Projects each element of a <xref href=\"System.Data.TypedTableBase`1\"></xref> into a new form.","nodes":[{"pos":[0,93],"content":"Projects each element of a <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> into a new form.","source":"Projects each element of a <xref href=\"System.Data.TypedTableBase`1\"></xref> into a new form."}],"pos":[18668,18762],"yaml":true},{"content":"This projection method requires the transformation function, `selector`, to produce one value for each value in the source sequence, `source`. If `selector` returns a value that is itself a collection, the consumer must traverse the sub-sequences manually.","nodes":[{"pos":[0,256],"content":"This projection method requires the transformation function, `selector`, to produce one value for each value in the source sequence, `source`. If `selector` returns a value that is itself a collection, the consumer must traverse the sub-sequences manually.","nodes":[{"content":"This projection method requires the transformation function, <ph id=\"ph1\">`selector`</ph>, to produce one value for each value in the source sequence, <ph id=\"ph2\">`source`</ph>.","pos":[0,142],"source":"This projection method requires the transformation function, `selector`, to produce one value for each value in the source sequence, `source`."},{"content":"If <ph id=\"ph1\">`selector`</ph> returns a value that is itself a collection, the consumer must traverse the sub-sequences manually.","pos":[143,256],"source":" If `selector` returns a value that is itself a collection, the consumer must traverse the sub-sequences manually."}]}],"pos":[18773,19030],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to invoke a transformation function upon.","nodes":[{"pos":[0,161],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> elements to invoke a transformation function upon.","source":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to invoke a transformation function upon."}],"pos":[19324,19486],"yaml":true},{"content":"A transformation function to apply to each element.","nodes":[{"pos":[0,51],"content":"A transformation function to apply to each element.","nodes":[{"content":"A transformation function to apply to each element.","pos":[0,51]}]}],"pos":[19556,19608],"yaml":true},{"content":"The type of the row elements in <code>source</code>, <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,94],"content":"The type of the row elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the row elements in <code>source</code>, <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[19662,19757],"yaml":true},{"content":"An <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> whose elements are the result of invoking the transformation function on each element of <code>source</code>.","nodes":[{"pos":[0,171],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.EnumerableRowCollection`1\"&gt;&lt;/xref&gt;</ph> whose elements are the result of invoking the transformation function on each element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> whose elements are the result of invoking the transformation function on each element of <code>source</code>."}],"pos":[19873,20045],"yaml":true},{"content":"Filters a sequence of rows based on the specified predicate.","nodes":[{"pos":[0,60],"content":"Filters a sequence of rows based on the specified predicate.","nodes":[{"content":"Filters a sequence of rows based on the specified predicate.","pos":[0,60]}]}],"pos":[21398,21459],"yaml":true},{"content":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to filter.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.TypedTableBase`1\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> elements to filter.","source":"A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to filter."}],"pos":[21757,21888],"yaml":true},{"content":"A function to test each element for a condition.","nodes":[{"pos":[0,48],"content":"A function to test each element for a condition.","nodes":[{"content":"A function to test each element for a condition.","pos":[0,48]}]}],"pos":[21972,22021],"yaml":true},{"content":"The type of the row elements in <code>source</code>, <xref href=\"System.Data.DataRow\"></xref>.","nodes":[{"pos":[0,94],"content":"The type of the row elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <ph id=\"ph2\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the row elements in <code>source</code>, <xref href=\"System.Data.DataRow\"></xref>."}],"pos":[22075,22170],"yaml":true},{"content":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> that contains rows from the input sequence that satisfy the condition.","nodes":[{"pos":[0,139],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.OrderedEnumerableRowCollection`1\"&gt;&lt;/xref&gt;</ph> that contains rows from the input sequence that satisfy the condition.","source":"An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> that contains rows from the input sequence that satisfy the condition."}],"pos":[22251,22391],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.TypedTableBaseExtensions\n  commentId: T:System.Data.TypedTableBaseExtensions\n  id: TypedTableBaseExtensions\n  children:\n  - System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})\n  - System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)\n  - System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  - System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  - System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  - System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})\n  langs:\n  - csharp\n  name: TypedTableBaseExtensions\n  nameWithType: TypedTableBaseExtensions\n  fullName: System.Data.TypedTableBaseExtensions\n  type: Class\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Contains the extension methods for the <xref href=\"System.Data.TypedTableBase`1\"></xref> class.\n  remarks: \"The class contains static extension methods that define the <xref:System.Data.TypedTableBaseExtensions.AsEnumerable%2A> method and standard query operations for typed data sets.  \\n  \\n This class cannot be instantiated.\"\n  syntax:\n    content: public static class TypedTableBaseExtensions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})\n  commentId: M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})\n  id: AsEnumerable``1(System.Data.TypedTableBase{``0})\n  parent: System.Data.TypedTableBaseExtensions\n  langs:\n  - csharp\n  name: AsEnumerable<TRow>(TypedTableBase<TRow>)\n  nameWithType: TypedTableBaseExtensions.AsEnumerable<TRow>(TypedTableBase<TRow>)\n  fullName: TypedTableBaseExtensions.AsEnumerable<TRow>(TypedTableBase<TRow>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Enumerates the data row elements of the <xref href=\"System.Data.TypedTableBase`1\"></xref> and returns an <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.\n  syntax:\n    content: 'public static System.Data.EnumerableRowCollection<TRow> AsEnumerable<TRow> (this System.Data.TypedTableBase<TRow> source) where TRow : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.TypedTableBase{TRow}\n      description: The source <xref href=\"System.Data.TypedTableBase`1\"></xref> to make enumerable.\n    typeParameters:\n    - id: TRow\n      description: The type to convert the elements of the source to.\n    return:\n      type: System.Data.EnumerableRowCollection`1\n      description: An <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> object, where the generic parameter <code>T</code> is <xref href=\"System.Data.DataRow\"></xref>.\n  overload: System.Data.TypedTableBaseExtensions.AsEnumerable``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)\n  commentId: M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)\n  id: ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)\n  parent: System.Data.TypedTableBaseExtensions\n  langs:\n  - csharp\n  name: ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)\n  nameWithType: TypedTableBaseExtensions.ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)\n  fullName: TypedTableBaseExtensions.ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Returns the element at a specified row in a sequence or a default value if the row is out of range.\n  syntax:\n    content: 'public static TRow ElementAtOrDefault<TRow> (this System.Data.TypedTableBase<TRow> source, int index) where TRow : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.TypedTableBase{TRow}\n      description: An enumerable object to return an element from.\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to retrieve.\n    typeParameters:\n    - id: TRow\n      description: The type of the elements or the row.\n    return:\n      type: TRow\n      description: The element at a specified row in a sequence.\n  overload: System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  commentId: M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  id: OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  parent: System.Data.TypedTableBaseExtensions\n  langs:\n  - csharp\n  name: OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in ascending order according to the specified key.\n  syntax:\n    content: 'public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.TypedTableBase<TRow> source, Func<TRow,TKey> keySelector) where TRow : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.TypedTableBase{TRow}\n      description: A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: A function to extract a key from an element.\n    typeParameters:\n    - id: TRow\n      description: The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>.\n    - id: TKey\n      description: The type of the key returned by <code>keySelector</code>.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key.\n  overload: System.Data.TypedTableBaseExtensions.OrderBy``2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  commentId: M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  id: OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.TypedTableBaseExtensions\n  langs:\n  - csharp\n  name: OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in ascending order according to the specified key and comparer.\n  syntax:\n    content: 'public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.TypedTableBase<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer) where TRow : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.TypedTableBase{TRow}\n      description: A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: A function to extract a key from an element.\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: An <xref href=\"System.Collections.Generic.IComparer`1\"></xref> to compare keys.\n    typeParameters:\n    - id: TRow\n      description: The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>.\n    - id: TKey\n      description: The type of the key returned by <code>keySelector</code>.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key and comparer.\n  overload: System.Data.TypedTableBaseExtensions.OrderBy``2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  commentId: M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  id: OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  parent: System.Data.TypedTableBaseExtensions\n  langs:\n  - csharp\n  name: OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in descending order according to the specified key.\n  syntax:\n    content: 'public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.TypedTableBase<TRow> source, Func<TRow,TKey> keySelector) where TRow : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.TypedTableBase{TRow}\n      description: A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: A function to extract a key from an element.\n    typeParameters:\n    - id: TRow\n      description: The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>.\n    - id: TKey\n      description: The type of the key returned by <code>keySelector</code>.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key.\n  overload: System.Data.TypedTableBaseExtensions.OrderByDescending``2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  commentId: M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  id: OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.TypedTableBaseExtensions\n  langs:\n  - csharp\n  name: OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Sorts the rows of a <xref href=\"System.Data.TypedTableBase`1\"></xref> in descending order according to the specified key and comparer.\n  syntax:\n    content: 'public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.TypedTableBase<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer) where TRow : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.TypedTableBase{TRow}\n      description: A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to be ordered.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: A function to extract a key from an element.\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: An <xref href=\"System.Collections.Generic.IComparer`1\"></xref> to compare keys.\n    typeParameters:\n    - id: TRow\n      description: The type of the row elements in <code>source</code>, typically <xref href=\"System.Data.DataRow\"></xref>.\n    - id: TKey\n      description: The type of the key returned by <code>keySelector</code>.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> whose elements are sorted by the specified key and comparer.\n  overload: System.Data.TypedTableBaseExtensions.OrderByDescending``2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  commentId: M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  id: Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  parent: System.Data.TypedTableBaseExtensions\n  langs:\n  - csharp\n  name: Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)\n  nameWithType: TypedTableBaseExtensions.Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)\n  fullName: TypedTableBaseExtensions.Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Projects each element of a <xref href=\"System.Data.TypedTableBase`1\"></xref> into a new form.\n  remarks: This projection method requires the transformation function, `selector`, to produce one value for each value in the source sequence, `source`. If `selector` returns a value that is itself a collection, the consumer must traverse the sub-sequences manually.\n  syntax:\n    content: 'public static System.Data.EnumerableRowCollection<S> Select<TRow,S> (this System.Data.TypedTableBase<TRow> source, Func<TRow,S> selector) where TRow : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.TypedTableBase{TRow}\n      description: A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to invoke a transformation function upon.\n    - id: selector\n      type: System.Func{TRow,S}\n      description: A transformation function to apply to each element.\n    typeParameters:\n    - id: TRow\n      description: The type of the row elements in <code>source</code>, <xref href=\"System.Data.DataRow\"></xref>.\n    - id: S\n      description: ''\n    return:\n      type: System.Data.EnumerableRowCollection{S}\n      description: An <xref href=\"System.Data.EnumerableRowCollection`1\"></xref> whose elements are the result of invoking the transformation function on each element of <code>source</code>.\n  overload: System.Data.TypedTableBaseExtensions.Select``2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})\n  commentId: M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})\n  id: Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})\n  parent: System.Data.TypedTableBaseExtensions\n  langs:\n  - csharp\n  name: Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)\n  nameWithType: TypedTableBaseExtensions.Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)\n  fullName: TypedTableBaseExtensions.Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  summary: Filters a sequence of rows based on the specified predicate.\n  syntax:\n    content: 'public static System.Data.EnumerableRowCollection<TRow> Where<TRow> (this System.Data.TypedTableBase<TRow> source, Func<TRow,bool> predicate) where TRow : System.Data.DataRow;'\n    parameters:\n    - id: source\n      type: System.Data.TypedTableBase{TRow}\n      description: A <xref href=\"System.Data.TypedTableBase`1\"></xref> that contains the <xref href=\"System.Data.DataRow\"></xref> elements to filter.\n    - id: predicate\n      type: System.Func{TRow,System.Boolean}\n      description: A function to test each element for a condition.\n    typeParameters:\n    - id: TRow\n      description: The type of the row elements in <code>source</code>, <xref href=\"System.Data.DataRow\"></xref>.\n    return:\n      type: System.Data.EnumerableRowCollection`1\n      description: An <xref href=\"System.Data.OrderedEnumerableRowCollection`1\"></xref> that contains rows from the input sequence that satisfy the condition.\n  overload: System.Data.TypedTableBaseExtensions.Where``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: AsEnumerable<TRow>(TypedTableBase<TRow>)\n  nameWithType: TypedTableBaseExtensions.AsEnumerable<TRow>(TypedTableBase<TRow>)\n  fullName: TypedTableBaseExtensions.AsEnumerable<TRow>(TypedTableBase<TRow>)\n- uid: System.Data.EnumerableRowCollection`1\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection<TRow>\n  nameWithType: EnumerableRowCollection<TRow>\n  fullName: System.Data.EnumerableRowCollection<TRow>\n- uid: System.Data.TypedTableBase`1\n  name: TypedTableBase<T>\n  nameWithType: TypedTableBase<T>\n  fullName: System.Data.TypedTableBase<T>\n- uid: TRow\n  name: TRow\n  nameWithType: TRow\n  fullName: TRow\n- uid: System.Data.TypedTableBase{TRow}\n  parent: System.Data\n  isExternal: false\n  name: TypedTableBase<TRow>\n  nameWithType: TypedTableBase<TRow>\n  fullName: System.Data.TypedTableBase<TRow>\n  spec.csharp:\n  - uid: System.Data.TypedTableBase`1\n    name: TypedTableBase\n    nameWithType: TypedTableBase\n    fullName: System.Data.TypedTableBase\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TRow\n    name: TRow\n    nameWithType: TRow\n    fullName: TRow\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)\n  nameWithType: TypedTableBaseExtensions.ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)\n  fullName: TypedTableBaseExtensions.ElementAtOrDefault<TRow>(TypedTableBase<TRow>, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n- uid: System.Data.OrderedEnumerableRowCollection`1\n  parent: System.Data\n  isExternal: false\n  name: OrderedEnumerableRowCollection<TRow>\n  nameWithType: OrderedEnumerableRowCollection<TRow>\n  fullName: System.Data.OrderedEnumerableRowCollection<TRow>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: TKey\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Func{TRow,TKey}\n  parent: System\n  isExternal: false\n  name: Func<TRow,TKey>\n  nameWithType: Func<TRow,TKey>\n  fullName: System.Func<TRow,TKey>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TRow\n    name: TRow\n    nameWithType: TRow\n    fullName: TRow\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n- uid: System.Collections.Generic.IComparer`1\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n- uid: System.Collections.Generic.IComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<TKey>\n  nameWithType: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    nameWithType: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>)\n- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>(TypedTableBase<TRow>, Func<TRow,TKey>, IComparer<TKey>)\n- uid: System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)\n  nameWithType: TypedTableBaseExtensions.Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)\n  fullName: TypedTableBaseExtensions.Select<TRow,S>(TypedTableBase<TRow>, Func<TRow,S>)\n- uid: S\n  name: S\n  nameWithType: S\n  fullName: S\n- uid: System.Data.EnumerableRowCollection{S}\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection<S>\n  nameWithType: EnumerableRowCollection<S>\n  fullName: System.Data.EnumerableRowCollection<S>\n  spec.csharp:\n  - uid: System.Data.EnumerableRowCollection`1\n    name: EnumerableRowCollection\n    nameWithType: EnumerableRowCollection\n    fullName: System.Data.EnumerableRowCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: S\n    name: S\n    nameWithType: S\n    fullName: S\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Func{TRow,S}\n  parent: System\n  isExternal: false\n  name: Func<TRow,S>\n  nameWithType: Func<TRow,S>\n  fullName: System.Func<TRow,S>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TRow\n    name: TRow\n    nameWithType: TRow\n    fullName: TRow\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: S\n    name: S\n    nameWithType: S\n    fullName: S\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)\n  nameWithType: TypedTableBaseExtensions.Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)\n  fullName: TypedTableBaseExtensions.Where<TRow>(TypedTableBase<TRow>, Func<TRow,Boolean>)\n- uid: System.Boolean\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Func{TRow,System.Boolean}\n  parent: System\n  isExternal: false\n  name: Func<TRow,Boolean>\n  nameWithType: Func<TRow,Boolean>\n  fullName: System.Func<TRow,System.Boolean>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TRow\n    name: TRow\n    nameWithType: TRow\n    fullName: TRow\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.TypedTableBaseExtensions.AsEnumerable``1*\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: AsEnumerable<TRow>\n  nameWithType: TypedTableBaseExtensions.AsEnumerable<TRow>\n  fullName: TypedTableBaseExtensions.AsEnumerable<TRow>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n- uid: System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1*\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: ElementAtOrDefault<TRow>\n  nameWithType: TypedTableBaseExtensions.ElementAtOrDefault<TRow>\n  fullName: TypedTableBaseExtensions.ElementAtOrDefault<TRow>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n- uid: System.Data.TypedTableBaseExtensions.OrderBy``2*\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: OrderBy<TRow,TKey>\n  nameWithType: TypedTableBaseExtensions.OrderBy<TRow,TKey>\n  fullName: TypedTableBaseExtensions.OrderBy<TRow,TKey>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n- uid: System.Data.TypedTableBaseExtensions.OrderByDescending``2*\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: OrderByDescending<TRow,TKey>\n  nameWithType: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>\n  fullName: TypedTableBaseExtensions.OrderByDescending<TRow,TKey>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n- uid: System.Data.TypedTableBaseExtensions.Select``2*\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: Select<TRow,S>\n  nameWithType: TypedTableBaseExtensions.Select<TRow,S>\n  fullName: TypedTableBaseExtensions.Select<TRow,S>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n- uid: System.Data.TypedTableBaseExtensions.Where``1*\n  parent: System.Data.TypedTableBaseExtensions\n  isExternal: false\n  name: Where<TRow>\n  nameWithType: TypedTableBaseExtensions.Where<TRow>\n  fullName: TypedTableBaseExtensions.Where<TRow>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/TypedTableBaseExtensions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}