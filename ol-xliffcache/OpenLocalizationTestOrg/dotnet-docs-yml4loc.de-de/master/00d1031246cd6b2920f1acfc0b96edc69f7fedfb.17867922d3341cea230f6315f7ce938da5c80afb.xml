{"nodes":[{"content":"Represents a statement that consists of a single expression.","nodes":[{"pos":[0,60],"content":"Represents a statement that consists of a single expression.","nodes":[{"content":"Represents a statement that consists of a single expression.","pos":[0,60]}]}],"pos":[601,662],"yaml":true},{"content":"A <xref:System.CodeDom.CodeExpressionStatement> contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone. For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a <xref:System.CodeDom.CodeExpressionStatement> can represent a method call without a return value.","nodes":[{"pos":[0,401],"content":"A <xref:System.CodeDom.CodeExpressionStatement> contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone. For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a <xref:System.CodeDom.CodeExpressionStatement> can represent a method call without a return value.","nodes":[{"content":"A <xref:System.CodeDom.CodeExpressionStatement> contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone. For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a <xref:System.CodeDom.CodeExpressionStatement> can represent a method call without a return value.","pos":[0,401],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> contains a <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> object, and it can be added to a <ph id=\"ph3\">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph> object, allowing some expressions to stand alone.","pos":[0,224],"source":"A <xref:System.CodeDom.CodeExpressionStatement> contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone."},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeMethodInvokeExpression&gt;</ph> contained by a <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> can represent a method call without a return value.","pos":[225,401],"source":" For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a <xref:System.CodeDom.CodeExpressionStatement> can represent a method call without a return value."}]}]}],"pos":[673,1075],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpressionStatement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class."}],"pos":[3690,3791],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class by using the specified expression.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpressionStatement\"&gt;&lt;/xref&gt;</ph> class by using the specified expression.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class by using the specified expression."}],"pos":[5147,5282],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> for the statement.","nodes":[{"pos":[0,71],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> for the statement.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> for the statement."}],"pos":[6049,6121],"yaml":true},{"content":"Gets or sets the expression for the statement.","nodes":[{"pos":[0,46],"content":"Gets or sets the expression for the statement.","nodes":[{"content":"Gets or sets the expression for the statement.","pos":[0,46]}]}],"pos":[7230,7277],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression for the statement.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> that indicates the expression for the statement.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression for the statement."}],"pos":[7435,7537],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeExpressionStatement\n  commentId: T:System.CodeDom.CodeExpressionStatement\n  id: CodeExpressionStatement\n  children:\n  - System.CodeDom.CodeExpressionStatement.#ctor\n  - System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)\n  - System.CodeDom.CodeExpressionStatement.Expression\n  langs:\n  - csharp\n  name: CodeExpressionStatement\n  nameWithType: CodeExpressionStatement\n  fullName: System.CodeDom.CodeExpressionStatement\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Represents a statement that consists of a single expression.\n  remarks: A <xref:System.CodeDom.CodeExpressionStatement> contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone. For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a <xref:System.CodeDom.CodeExpressionStatement> can represent a method call without a return value.\n  example:\n  - \"The following example demonstrates how to create an instance of the <xref:System.CodeDom.CodeExpressionStatement> class by using a <xref:System.CodeDom.CodeExpression> object.  \\n  \\n [!code-cpp[CodeDomSampleBatch#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#1)]\\n [!code-csharp[CodeDomSampleBatch#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#1)]\\n [!code-vb[CodeDomSampleBatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeExpressionStatement : System.CodeDom.CodeStatement\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeStatement\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeStatement.EndDirectives\n  - System.CodeDom.CodeStatement.LinePragma\n  - System.CodeDom.CodeStatement.StartDirectives\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeExpressionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeExpressionStatement.#ctor\n  commentId: M:System.CodeDom.CodeExpressionStatement.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeExpressionStatement\n  langs:\n  - csharp\n  name: CodeExpressionStatement()\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement()\n  fullName: CodeExpressionStatement.CodeExpressionStatement()\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class.\n  syntax:\n    content: public CodeExpressionStatement ();\n    parameters: []\n  overload: System.CodeDom.CodeExpressionStatement.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeExpressionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)\n  commentId: M:System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)\n  id: '#ctor(System.CodeDom.CodeExpression)'\n  parent: System.CodeDom.CodeExpressionStatement\n  langs:\n  - csharp\n  name: CodeExpressionStatement(CodeExpression)\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement(CodeExpression)\n  fullName: CodeExpressionStatement.CodeExpressionStatement(CodeExpression)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class by using the specified expression.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.CodeDom.CodeExpression> object and uses it as a parameter to initialize an instance of the <xref:System.CodeDom.CodeExpressionStatement> class.  \\n  \\n [!code-cpp[CodeDomSampleBatch#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#1)]\\n [!code-csharp[CodeDomSampleBatch#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#1)]\\n [!code-vb[CodeDomSampleBatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#1)]\"\n  syntax:\n    content: public CodeExpressionStatement (System.CodeDom.CodeExpression expression);\n    parameters:\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> for the statement.\n  overload: System.CodeDom.CodeExpressionStatement.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeExpressionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.CodeExpressionStatement.Expression\n  commentId: P:System.CodeDom.CodeExpressionStatement.Expression\n  id: Expression\n  parent: System.CodeDom.CodeExpressionStatement\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: CodeExpressionStatement.Expression\n  fullName: CodeExpressionStatement.Expression\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom\n  summary: Gets or sets the expression for the statement.\n  syntax:\n    content: public System.CodeDom.CodeExpression Expression { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression for the statement.\n  overload: System.CodeDom.CodeExpressionStatement.Expression*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeExpressionStatement.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.CodeDom.CodeStatement\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeStatement\n  nameWithType: CodeStatement\n  fullName: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeExpressionStatement.#ctor\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: CodeExpressionStatement()\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement()\n  fullName: CodeExpressionStatement.CodeExpressionStatement()\n- uid: System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: CodeExpressionStatement(CodeExpression)\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement(CodeExpression)\n  fullName: CodeExpressionStatement.CodeExpressionStatement(CodeExpression)\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeExpressionStatement.Expression\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: Expression\n  nameWithType: CodeExpressionStatement.Expression\n  fullName: CodeExpressionStatement.Expression\n- uid: System.CodeDom.CodeExpressionStatement.#ctor*\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: CodeExpressionStatement\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement\n  fullName: CodeExpressionStatement.CodeExpressionStatement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeExpressionStatement.xml\n- uid: System.CodeDom.CodeExpressionStatement.Expression*\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: Expression\n  nameWithType: CodeExpressionStatement.Expression\n  fullName: CodeExpressionStatement.Expression\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom/CodeExpressionStatement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.CodeDom.CodeObject.UserData\n  parent: System.CodeDom.CodeObject\n  isExternal: false\n  name: UserData\n  nameWithType: CodeObject.UserData\n  fullName: CodeObject.UserData\n- uid: System.CodeDom.CodeStatement.EndDirectives\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: EndDirectives\n  nameWithType: CodeStatement.EndDirectives\n  fullName: CodeStatement.EndDirectives\n- uid: System.CodeDom.CodeStatement.LinePragma\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: LinePragma\n  nameWithType: CodeStatement.LinePragma\n  fullName: CodeStatement.LinePragma\n- uid: System.CodeDom.CodeStatement.StartDirectives\n  parent: System.CodeDom.CodeStatement\n  isExternal: false\n  name: StartDirectives\n  nameWithType: CodeStatement.StartDirectives\n  fullName: CodeStatement.StartDirectives\n"}