{"nodes":[{"content":"Controls access to network information and traffic statistics for the local computer. This class cannot be inherited.","nodes":[{"pos":[0,117],"content":"Controls access to network information and traffic statistics for the local computer. This class cannot be inherited.","nodes":[{"content":"Controls access to network information and traffic statistics for the local computer. This class cannot be inherited.","pos":[0,117],"nodes":[{"content":"Controls access to network information and traffic statistics for the local computer.","pos":[0,85]},{"content":"This class cannot be inherited.","pos":[86,117]}]}]}],"pos":[1585,1703],"yaml":true},{"content":"This permission is used to secure data returned by the classes in the <xref:System.Net.NetworkInformation> namespace.  \n  \n For declarative security, use the <xref:System.Net.NetworkInformation.NetworkInformationPermissionAttribute> class.","nodes":[{"pos":[0,117],"content":"This permission is used to secure data returned by the classes in the <xref:System.Net.NetworkInformation> namespace.","nodes":[{"content":"This permission is used to secure data returned by the classes in the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation&gt;</ph> namespace.","pos":[0,117],"source":"This permission is used to secure data returned by the classes in the <xref:System.Net.NetworkInformation> namespace."}]},{"pos":[124,239],"content":"For declarative security, use the <xref:System.Net.NetworkInformation.NetworkInformationPermissionAttribute> class.","nodes":[{"content":"For declarative security, use the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInformationPermissionAttribute&gt;</ph> class.","pos":[0,115],"source":"For declarative security, use the <xref:System.Net.NetworkInformation.NetworkInformationPermissionAttribute> class."}]}],"pos":[1714,1958],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> class using the specified <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> value.","nodes":[{"pos":[0,222],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"&gt;&lt;/xref&gt;</ph> value.","source":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> class using the specified <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> value."}],"pos":[5375,5598],"yaml":true},{"content":"The permission created by this constructor can be used to secure access to network information.","nodes":[{"pos":[0,95],"content":"The permission created by this constructor can be used to secure access to network information.","nodes":[{"content":"The permission created by this constructor can be used to secure access to network information.","pos":[0,95]}]}],"pos":[5609,5705],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values.","nodes":[{"pos":[0,94],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values."}],"pos":[6467,6562],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,204],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[8065,8270],"yaml":true},{"content":"The permission created by this constructor can be used to secure access to network information.","nodes":[{"pos":[0,95],"content":"The permission created by this constructor can be used to secure access to network information.","nodes":[{"content":"The permission created by this constructor can be used to secure access to network information.","pos":[0,95]}]}],"pos":[8281,8377],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[9085,9169],"yaml":true},{"content":"Gets the level of access to network information controlled by this permission.","nodes":[{"pos":[0,78],"content":"Gets the level of access to network information controlled by this permission.","nodes":[{"content":"Gets the level of access to network information controlled by this permission.","pos":[0,78]}]}],"pos":[10418,10497],"yaml":true},{"content":"A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.Ping> &#124; <xref:System.Net.NetworkInformation.NetworkInformationAccess.Read> access. A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.None> access.","nodes":[{"pos":[0,555],"content":"A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.Ping> &#124; <xref:System.Net.NetworkInformation.NetworkInformationAccess.Read> access. A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.None> access.","nodes":[{"content":"A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.Ping> &#124; <xref:System.Net.NetworkInformation.NetworkInformationAccess.Read> access. A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.None> access.","pos":[0,555],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInformationPermission&gt;</ph> created with <ph id=\"ph2\">&lt;xref:System.Security.Permissions.PermissionState?displayProperty=fullName&gt;</ph> is given <ph id=\"ph3\">&lt;xref:System.Net.NetworkInformation.NetworkInformationAccess.Ping&gt;</ph> &amp;#124; <ph id=\"ph4\">&lt;xref:System.Net.NetworkInformation.NetworkInformationAccess.Read&gt;</ph> access.","pos":[0,314],"source":"A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.Ping> &#124; <xref:System.Net.NetworkInformation.NetworkInformationAccess.Read> access."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInformationPermission&gt;</ph> created with <ph id=\"ph2\">&lt;xref:System.Security.Permissions.PermissionState?displayProperty=fullName&gt;</ph> is given <ph id=\"ph3\">&lt;xref:System.Net.NetworkInformation.NetworkInformationAccess.None&gt;</ph> access.","pos":[315,555],"source":" A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.None> access."}]}]}],"pos":[10508,11064],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values.","nodes":[{"pos":[0,94],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values."}],"pos":[11914,12009],"yaml":true},{"content":"Adds the specified value to this permission.","nodes":[{"pos":[0,44],"content":"Adds the specified value to this permission.","nodes":[{"content":"Adds the specified value to this permission.","pos":[0,44]}]}],"pos":[13545,13590],"yaml":true},{"content":"Use this method to modify access to network information by adding to the state of the current permission.","nodes":[{"pos":[0,105],"content":"Use this method to modify access to network information by adding to the state of the current permission.","nodes":[{"content":"Use this method to modify access to network information by adding to the state of the current permission.","pos":[0,105]}]}],"pos":[13601,13707],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values.","nodes":[{"pos":[0,94],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values."}],"pos":[14442,14537],"yaml":true},{"content":"Creates and returns an identical copy of this permission.","nodes":[{"pos":[0,57],"content":"Creates and returns an identical copy of this permission.","nodes":[{"content":"Creates and returns an identical copy of this permission.","pos":[0,57]}]}],"pos":[15786,15844],"yaml":true},{"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"pos":[0,90],"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]}],"pos":[15855,15946],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> that is identical to the current permission","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"&gt;&lt;/xref&gt;</ph> that is identical to the current permission","source":"A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> that is identical to the current permission"}],"pos":[16595,16721],"yaml":true},{"content":"Sets the state of this permission using the specified XML encoding.","nodes":[{"pos":[0,67],"content":"Sets the state of this permission using the specified XML encoding.","nodes":[{"content":"Sets the state of this permission using the specified XML encoding.","pos":[0,67]}]}],"pos":[18123,18191],"yaml":true},{"content":"This method is used by the security system and is not normally called by application code.","nodes":[{"pos":[0,90],"content":"This method is used by the security system and is not normally called by application code.","nodes":[{"content":"This method is used by the security system and is not normally called by application code.","pos":[0,90]}]}],"pos":[18202,18293],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding to use to set the state of the current permission","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> that contains the XML encoding to use to set the state of the current permission","source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding to use to set the state of the current permission"}],"pos":[18501,18637],"yaml":true},{"content":"<code>securityElement</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityElement</code> is `null`."}],"pos":[18833,18873],"yaml":true},{"content":"<code>securityElement</code> is not a permission encoding.  \n  \n -or-  \n  \n <code>securityElement</code> is not an encoding of a <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref>.  \n  \n -or-  \n  \n <code>securityElement</code> has invalid <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not a permission encoding.","source":"<code>securityElement</code> is not a permission encoding."},{"pos":[65,69],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[76,209],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not an encoding of a <ph id=\"ph2\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"&gt;&lt;/xref&gt;</ph>.","source":"<code>securityElement</code> is not an encoding of a <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref>."},{"pos":[216,220],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[227,351],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> has invalid <ph id=\"ph2\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>securityElement</code> has invalid <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values."}],"pos":[18967,19333],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,113],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]}],"pos":[20629,20743],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"pos":[0,186],"content":"The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"content":"The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection.","pos":[0,186],"nodes":[{"content":"The intersection of two permissions is a permission that describes the state they both describe in common.","pos":[0,106]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[107,186]}]}]}],"pos":[20754,20941],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.IPermission\"></xref> to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,148],"content":"An <xref href=\"System.Security.IPermission\"></xref> to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph> to intersect with the current permission.","pos":[0,93],"source":"An <xref href=\"System.Security.IPermission\"></xref> to intersect with the current permission."},{"content":"It must be of the same type as the current permission.","pos":[94,148]}]}],"pos":[21679,21828],"yaml":true},{"content":"A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty or <code>target</code> is `null`.","nodes":[{"pos":[0,263],"content":"A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty or <code>target</code> is `null`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"&gt;&lt;/xref&gt;</ph> that represents the intersection of the current permission and the specified permission.","pos":[0,170],"source":"A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> that represents the intersection of the current permission and the specified permission."},{"content":"This new permission is <ph id=\"ph1\">`null`</ph> if the intersection is empty or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","pos":[171,263],"source":" This new permission is `null` if the intersection is empty or <code>target</code> is `null`."}]}],"pos":[21899,22163],"yaml":true},{"content":"<code>target</code> is not a <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref>.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"&gt;&lt;/xref&gt;</ph>.","source":"<code>target</code> is not a <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref>."}],"pos":[22353,22463],"yaml":true},{"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,82],"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]}],"pos":[23765,23848],"yaml":true},{"content":"The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission. If this method returns true, the current permission represents no more access to the protected resource than does the specified permission.","nodes":[{"pos":[0,300],"content":"The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission. If this method returns true, the current permission represents no more access to the protected resource than does the specified permission.","nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission. If this method returns true, the current permission represents no more access to the protected resource than does the specified permission.","pos":[0,300],"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission.","pos":[0,160]},{"content":"If this method returns true, the current permission represents no more access to the protected resource than does the specified permission.","pos":[161,300]}]}]}],"pos":[23859,24160],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.IPermission\"></xref> that is to be tested for the subset relationship. This permission must be of the same type as the current permission","nodes":[{"pos":[0,168],"content":"An <xref href=\"System.Security.IPermission\"></xref> that is to be tested for the subset relationship. This permission must be of the same type as the current permission","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph> that is to be tested for the subset relationship.","pos":[0,101],"source":"An <xref href=\"System.Security.IPermission\"></xref> that is to be tested for the subset relationship."},{"content":"This permission must be of the same type as the current permission","pos":[102,168]}]}],"pos":[24854,25023],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[25081,25177],"yaml":true},{"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"pos":[0,74],"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]}],"pos":[26483,26558],"yaml":true},{"content":"An unrestricted permission is created using the <xref:System.Net.NetworkInformation.NetworkInformationPermission.%23ctor%2A> constructor.","nodes":[{"pos":[0,137],"content":"An unrestricted permission is created using the <xref:System.Net.NetworkInformation.NetworkInformationPermission.%23ctor%2A> constructor.","nodes":[{"content":"An unrestricted permission is created using the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInformationPermission.%23ctor%2A&gt;</ph> constructor.","pos":[0,137],"source":"An unrestricted permission is created using the <xref:System.Net.NetworkInformation.NetworkInformationPermission.%23ctor%2A> constructor."}]}],"pos":[26569,26707],"yaml":true,"extradata":"MT"},{"content":"`true` if the current permission is unrestricted; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is unrestricted; otherwise, `false`."}],"pos":[27336,27408],"yaml":true},{"content":"Creates an XML encoding of the state of this permission.","nodes":[{"pos":[0,56],"content":"Creates an XML encoding of the state of this permission.","nodes":[{"content":"Creates an XML encoding of the state of this permission.","pos":[0,56]}]}],"pos":[28664,28721],"yaml":true},{"content":"This method is used by the security system and is not normally called by application code.","nodes":[{"pos":[0,90],"content":"This method is used by the security system and is not normally called by application code.","nodes":[{"content":"This method is used by the security system and is not normally called by application code.","pos":[0,90]}]}],"pos":[28732,28823],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding of the current permission.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> that contains the XML encoding of the current permission.","source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding of the current permission."}],"pos":[28998,29111],"yaml":true},{"content":"Creates a permission that is the union of this permission and the specified permission.","nodes":[{"pos":[0,87],"content":"Creates a permission that is the union of this permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of this permission and the specified permission.","pos":[0,87]}]}],"pos":[30478,30566],"yaml":true},{"content":"The <xref:System.Net.NetworkInformation.NetworkInformationPermission.Union%2A> method returns a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"pos":[0,271],"content":"The <xref:System.Net.NetworkInformation.NetworkInformationPermission.Union%2A> method returns a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"content":"The <xref:System.Net.NetworkInformation.NetworkInformationPermission.Union%2A> method returns a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,271],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetworkInformationPermission.Union%2A&gt;</ph> method returns a permission that represents all the states represented by both the current permission and the specified permission.","pos":[0,210],"source":"The <xref:System.Net.NetworkInformation.NetworkInformationPermission.Union%2A> method returns a permission that represents all the states represented by both the current permission and the specified permission."},{"content":"Any demand that passes either permission passes their union.","pos":[211,271]}]}]}],"pos":[30577,30849],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> permission to combine with the current permission.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"&gt;&lt;/xref&gt;</ph> permission to combine with the current permission.","source":"A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> permission to combine with the current permission."}],"pos":[31576,31709],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[31780,31879],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.NetworkInformation.NetworkInformationPermission\n  commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  id: NetworkInformationPermission\n  children:\n  - System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)\n  - System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Net.NetworkInformation.NetworkInformationPermission.Access\n  - System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)\n  - System.Net.NetworkInformation.NetworkInformationPermission.Copy\n  - System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)\n  - System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)\n  - System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted\n  - System.Net.NetworkInformation.NetworkInformationPermission.ToXml\n  - System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: NetworkInformationPermission\n  nameWithType: NetworkInformationPermission\n  fullName: System.Net.NetworkInformation.NetworkInformationPermission\n  type: Class\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Controls access to network information and traffic statistics for the local computer. This class cannot be inherited.\n  remarks: \"This permission is used to secure data returned by the classes in the <xref:System.Net.NetworkInformation> namespace.  \\n  \\n For declarative security, use the <xref:System.Net.NetworkInformation.NetworkInformationPermissionAttribute> class.\"\n  example:\n  - \"The following example creates an unrestricted permission object.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#1)]\\n [!code-csharp[NclNetworkInfoPerms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#1)]\\n [!code-vb[NclNetworkInfoPerms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#1)]\"\n  syntax:\n    content: 'public sealed class NetworkInformationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)\n  id: '#ctor(System.Net.NetworkInformation.NetworkInformationAccess)'\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: NetworkInformationPermission(NetworkInformationAccess)\n  nameWithType: NetworkInformationPermission.NetworkInformationPermission(NetworkInformationAccess)\n  fullName: NetworkInformationPermission.NetworkInformationPermission(NetworkInformationAccess)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> class using the specified <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> value.\n  remarks: The permission created by this constructor can be used to secure access to network information.\n  example:\n  - \"The following example creates a permission object that controls access to network information.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#3)]\\n [!code-csharp[NclNetworkInfoPerms#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#3)]\\n [!code-vb[NclNetworkInfoPerms#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#3)]\"\n  syntax:\n    content: public NetworkInformationPermission (System.Net.NetworkInformation.NetworkInformationAccess access);\n    parameters:\n    - id: access\n      type: System.Net.NetworkInformation.NetworkInformationAccess\n      description: One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values.\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: NetworkInformationPermission(PermissionState)\n  nameWithType: NetworkInformationPermission.NetworkInformationPermission(PermissionState)\n  fullName: NetworkInformationPermission.NetworkInformationPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  remarks: The permission created by this constructor can be used to secure access to network information.\n  example:\n  - \"The following example creates an unrestricted permission object.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#1)]\\n [!code-csharp[NclNetworkInfoPerms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#1)]\\n [!code-vb[NclNetworkInfoPerms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#1)]\"\n  syntax:\n    content: public NetworkInformationPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Access\n  commentId: P:System.Net.NetworkInformation.NetworkInformationPermission.Access\n  id: Access\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: Access\n  nameWithType: NetworkInformationPermission.Access\n  fullName: NetworkInformationPermission.Access\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Gets the level of access to network information controlled by this permission.\n  remarks: A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.Ping> &#124; <xref:System.Net.NetworkInformation.NetworkInformationAccess.Read> access. A <xref:System.Net.NetworkInformation.NetworkInformationPermission> created with <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> is given <xref:System.Net.NetworkInformation.NetworkInformationAccess.None> access.\n  example:\n  - \"The following code example creates a <xref:System.Net.NetworkInformation.NetworkInformationPermission>, adds a <xref:System.Net.NetworkInformation.NetworkInformationAccess> value to it, and displays the value of this property.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#7)]\\n [!code-csharp[NclNetworkInfoPerms#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#7)]\\n [!code-vb[NclNetworkInfoPerms#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#7)]\"\n  syntax:\n    content: public System.Net.NetworkInformation.NetworkInformationAccess Access { get; }\n    return:\n      type: System.Net.NetworkInformation.NetworkInformationAccess\n      description: One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values.\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.Access*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)\n  id: AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: AddPermission(NetworkInformationAccess)\n  nameWithType: NetworkInformationPermission.AddPermission(NetworkInformationAccess)\n  fullName: NetworkInformationPermission.AddPermission(NetworkInformationAccess)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Adds the specified value to this permission.\n  remarks: Use this method to modify access to network information by adding to the state of the current permission.\n  example:\n  - \"The following example creates an empty permission object and then adds to it.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#7)]\\n [!code-csharp[NclNetworkInfoPerms#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#7)]\\n [!code-vb[NclNetworkInfoPerms#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#7)]\"\n  syntax:\n    content: public void AddPermission (System.Net.NetworkInformation.NetworkInformationAccess access);\n    parameters:\n    - id: access\n      type: System.Net.NetworkInformation.NetworkInformationAccess\n      description: One of the <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess\"></xref> values.\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Copy\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.Copy\n  id: Copy\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: NetworkInformationPermission.Copy()\n  fullName: NetworkInformationPermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Creates and returns an identical copy of this permission.\n  remarks: A copy of a permission represents the same access to resources as the original permission.\n  example:\n  - \"The following example creates copy of a permission object.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#4)]\\n [!code-csharp[NclNetworkInfoPerms#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#4)]\\n [!code-vb[NclNetworkInfoPerms#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#4)]\"\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> that is identical to the current permission\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: NetworkInformationPermission.FromXml(SecurityElement)\n  fullName: NetworkInformationPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Sets the state of this permission using the specified XML encoding.\n  remarks: This method is used by the security system and is not normally called by application code.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding to use to set the state of the current permission\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityElement</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>securityElement</code> is not a permission encoding.  \\n  \\n -or-  \\n  \\n <code>securityElement</code> is not an encoding of a <xref href=\\\"System.Net.NetworkInformation.NetworkInformationPermission\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>securityElement</code> has invalid <xref href=\\\"System.Net.NetworkInformation.NetworkInformationAccess\\\"></xref> values.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: NetworkInformationPermission.Intersect(IPermission)\n  fullName: NetworkInformationPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection.\n  example:\n  - \"The following example creates a permission object that is the intersection of existing permission objects.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#6)]\\n [!code-csharp[NclNetworkInfoPerms#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#6)]\\n [!code-vb[NclNetworkInfoPerms#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#6)]\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty or <code>target</code> is `null`.\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not a <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: NetworkInformationPermission.IsSubsetOf(IPermission)\n  fullName: NetworkInformationPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission. If this method returns true, the current permission represents no more access to the protected resource than does the specified permission.\n  example:\n  - \"The following code example displays the subset relationship between two permissions.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#5)]\\n [!code-csharp[NclNetworkInfoPerms#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#5)]\\n [!code-vb[NclNetworkInfoPerms#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#5)]\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that is to be tested for the subset relationship. This permission must be of the same type as the current permission\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: NetworkInformationPermission.IsUnrestricted()\n  fullName: NetworkInformationPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission is created using the <xref:System.Net.NetworkInformation.NetworkInformationPermission.%23ctor%2A> constructor.\n  example:\n  - \"The following example creates a permission object and displays its state.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#2)]\\n [!code-csharp[NclNetworkInfoPerms#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#2)]\\n [!code-vb[NclNetworkInfoPerms#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#2)]\"\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is unrestricted; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.ToXml\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml\n  id: ToXml\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: NetworkInformationPermission.ToXml()\n  fullName: NetworkInformationPermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Creates an XML encoding of the state of this permission.\n  remarks: This method is used by the security system and is not normally called by application code.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding of the current permission.\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)\n  commentId: M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: NetworkInformationPermission.Union(IPermission)\n  fullName: NetworkInformationPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net.NetworkInformation\n  summary: Creates a permission that is the union of this permission and the specified permission.\n  remarks: The <xref:System.Net.NetworkInformation.NetworkInformationPermission.Union%2A> method returns a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  example:\n  - \"The following example creates a permission object that is the union of existing permission objects.  \\n  \\n [!code-cpp[NclNetworkInfoPerms#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNetworkInfoPerms/CPP/NclNetworkInfoPerms.cpp#5)]\\n [!code-csharp[NclNetworkInfoPerms#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNetworkInfoPerms/CS/permissionexample.cs#5)]\\n [!code-vb[NclNetworkInfoPerms#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNetworkInfoPerms/VB/permissionexample.vb#5)]\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Net.NetworkInformation.NetworkInformationPermission\"></xref> permission to combine with the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Net.NetworkInformation.NetworkInformationPermission.Union*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: NetworkInformationPermission(NetworkInformationAccess)\n  nameWithType: NetworkInformationPermission.NetworkInformationPermission(NetworkInformationAccess)\n  fullName: NetworkInformationPermission.NetworkInformationPermission(NetworkInformationAccess)\n- uid: System.Net.NetworkInformation.NetworkInformationAccess\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetworkInformationAccess\n  nameWithType: NetworkInformationAccess\n  fullName: System.Net.NetworkInformation.NetworkInformationAccess\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: NetworkInformationPermission(PermissionState)\n  nameWithType: NetworkInformationPermission.NetworkInformationPermission(PermissionState)\n  fullName: NetworkInformationPermission.NetworkInformationPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Access\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: Access\n  nameWithType: NetworkInformationPermission.Access\n  fullName: NetworkInformationPermission.Access\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: AddPermission(NetworkInformationAccess)\n  nameWithType: NetworkInformationPermission.AddPermission(NetworkInformationAccess)\n  fullName: NetworkInformationPermission.AddPermission(NetworkInformationAccess)\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Copy\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: NetworkInformationPermission.Copy()\n  fullName: NetworkInformationPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: NetworkInformationPermission.FromXml(SecurityElement)\n  fullName: NetworkInformationPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: NetworkInformationPermission.Intersect(IPermission)\n  fullName: NetworkInformationPermission.Intersect(IPermission)\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: NetworkInformationPermission.IsSubsetOf(IPermission)\n  fullName: NetworkInformationPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: NetworkInformationPermission.IsUnrestricted()\n  fullName: NetworkInformationPermission.IsUnrestricted()\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.ToXml\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: NetworkInformationPermission.ToXml()\n  fullName: NetworkInformationPermission.ToXml()\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: NetworkInformationPermission.Union(IPermission)\n  fullName: NetworkInformationPermission.Union(IPermission)\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.#ctor*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: NetworkInformationPermission\n  nameWithType: NetworkInformationPermission.NetworkInformationPermission\n  fullName: NetworkInformationPermission.NetworkInformationPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Access*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: Access\n  nameWithType: NetworkInformationPermission.Access\n  fullName: NetworkInformationPermission.Access\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.AddPermission*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: AddPermission\n  nameWithType: NetworkInformationPermission.AddPermission\n  fullName: NetworkInformationPermission.AddPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Copy*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: Copy\n  nameWithType: NetworkInformationPermission.Copy\n  fullName: NetworkInformationPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.FromXml*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: NetworkInformationPermission.FromXml\n  fullName: NetworkInformationPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Intersect*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: NetworkInformationPermission.Intersect\n  fullName: NetworkInformationPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: NetworkInformationPermission.IsSubsetOf\n  fullName: NetworkInformationPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: NetworkInformationPermission.IsUnrestricted\n  fullName: NetworkInformationPermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.ToXml*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: NetworkInformationPermission.ToXml\n  fullName: NetworkInformationPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Net.NetworkInformation.NetworkInformationPermission.Union*\n  parent: System.Net.NetworkInformation.NetworkInformationPermission\n  isExternal: false\n  name: Union\n  nameWithType: NetworkInformationPermission.Union\n  fullName: NetworkInformationPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/NetworkInformationPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}