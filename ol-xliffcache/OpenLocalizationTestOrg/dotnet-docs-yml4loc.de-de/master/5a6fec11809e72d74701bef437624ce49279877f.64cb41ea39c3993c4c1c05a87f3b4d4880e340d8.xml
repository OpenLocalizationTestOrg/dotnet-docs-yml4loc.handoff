{"nodes":[{"content":"Provides a lazy indirect reference to an object and its associated metadata for use by the Managed Extensibility Framework.","nodes":[{"pos":[0,123],"content":"Provides a lazy indirect reference to an object and its associated metadata for use by the Managed Extensibility Framework.","nodes":[{"content":"Provides a lazy indirect reference to an object and its associated metadata for use by the Managed Extensibility Framework.","pos":[0,123]}]}],"pos":[709,833],"yaml":true},{"content":"The type of the object referenced.","nodes":[{"pos":[0,34],"content":"The type of the object referenced.","nodes":[{"content":"The type of the object referenced.","pos":[0,34]}]}],"pos":[950,985],"yaml":true},{"content":"The type of the metadata.","nodes":[{"pos":[0,25],"content":"The type of the metadata.","nodes":[{"content":"The type of the metadata.","pos":[0,25]}]}],"pos":[1024,1050],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Lazy`2\"&gt;&lt;/xref&gt;</ph> class with the specified metadata.","source":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata."}],"pos":[2952,3056],"yaml":true},{"content":"The metadata associated with the referenced object.","nodes":[{"pos":[0,51],"content":"The metadata associated with the referenced object.","nodes":[{"content":"The metadata associated with the referenced object.","pos":[0,51]}]}],"pos":[3189,3241],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata that uses the specified function to get the referenced object.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Lazy`2\"&gt;&lt;/xref&gt;</ph> class with the specified metadata that uses the specified function to get the referenced object.","source":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata that uses the specified function to get the referenced object."}],"pos":[4849,5015],"yaml":true},{"content":"A function that returns the referenced object.","nodes":[{"pos":[0,46],"content":"A function that returns the referenced object.","nodes":[{"content":"A function that returns the referenced object.","pos":[0,46]}]}],"pos":[5179,5226],"yaml":true},{"content":"The metadata associated with the referenced object.","nodes":[{"pos":[0,51],"content":"The metadata associated with the referenced object.","nodes":[{"content":"The metadata associated with the referenced object.","pos":[0,51]}]}],"pos":[5286,5338],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread safety value.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Lazy`2\"&gt;&lt;/xref&gt;</ph> class with the specified metadata and thread safety value.","source":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread safety value."}],"pos":[6943,7071],"yaml":true},{"content":"The metadata associated with the referenced object.","nodes":[{"pos":[0,51],"content":"The metadata associated with the referenced object.","nodes":[{"content":"The metadata associated with the referenced object.","pos":[0,51]}]}],"pos":[7223,7275],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Lazy`2\"></xref> object that is created will be thread-safe.","nodes":[{"pos":[0,100],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Lazy`2\"&gt;&lt;/xref&gt;</ph> object that is created will be thread-safe.","source":"Indicates whether the <xref href=\"System.Lazy`2\"></xref> object that is created will be thread-safe."}],"pos":[7344,7445],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread synchronization mode.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Lazy`2\"&gt;&lt;/xref&gt;</ph> class with the specified metadata and thread synchronization mode.","source":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread synchronization mode."}],"pos":[9158,9294],"yaml":true},{"content":"See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.","nodes":[{"pos":[0,123],"content":"See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.","nodes":[{"content":"See <ph id=\"ph1\">&lt;xref:System.Threading.LazyThreadSafetyMode&gt;</ph> for more information on thread synchronization and <ph id=\"ph2\">&lt;xref:System.Lazy%602&gt;</ph>.","pos":[0,123],"source":"See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>."}]}],"pos":[9305,9429],"yaml":true,"extradata":"MT"},{"content":"The metadata associated with the referenced object.","nodes":[{"pos":[0,51],"content":"The metadata associated with the referenced object.","nodes":[{"content":"The metadata associated with the referenced object.","pos":[0,51]}]}],"pos":[9606,9658],"yaml":true},{"content":"The thread synchronization mode.","nodes":[{"pos":[0,32],"content":"The thread synchronization mode.","nodes":[{"content":"The thread synchronization mode.","pos":[0,32]}]}],"pos":[9742,9775],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread safety value that uses the specified function to get the referenced object.","nodes":[{"pos":[0,189],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Lazy`2\"&gt;&lt;/xref&gt;</ph> class with the specified metadata and thread safety value that uses the specified function to get the referenced object.","source":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread safety value that uses the specified function to get the referenced object."}],"pos":[11455,11645],"yaml":true},{"content":"A function that returns the referenced object.","nodes":[{"pos":[0,46],"content":"A function that returns the referenced object.","nodes":[{"content":"A function that returns the referenced object.","pos":[0,46]}]}],"pos":[11828,11875],"yaml":true},{"content":"The metadata associated with the referenced object.","nodes":[{"pos":[0,51],"content":"The metadata associated with the referenced object.","nodes":[{"content":"The metadata associated with the referenced object.","pos":[0,51]}]}],"pos":[11935,11987],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Lazy`2\"></xref> object that is created will be thread-safe.","nodes":[{"pos":[0,100],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Lazy`2\"&gt;&lt;/xref&gt;</ph> object that is created will be thread-safe.","source":"Indicates whether the <xref href=\"System.Lazy`2\"></xref> object that is created will be thread-safe."}],"pos":[12056,12157],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread synchronization mode that uses the specified function to get the referenced object.","nodes":[{"pos":[0,197],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Lazy`2\"&gt;&lt;/xref&gt;</ph> class with the specified metadata and thread synchronization mode that uses the specified function to get the referenced object.","source":"Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread synchronization mode that uses the specified function to get the referenced object."}],"pos":[13945,14143],"yaml":true},{"content":"See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.","nodes":[{"pos":[0,123],"content":"See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.","nodes":[{"content":"See <ph id=\"ph1\">&lt;xref:System.Threading.LazyThreadSafetyMode&gt;</ph> for more information on thread synchronization and <ph id=\"ph2\">&lt;xref:System.Lazy%602&gt;</ph>.","pos":[0,123],"source":"See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>."}]}],"pos":[14154,14278],"yaml":true,"extradata":"MT"},{"content":"A function that returns the referenced object","nodes":[{"pos":[0,45],"content":"A function that returns the referenced object","nodes":[{"content":"A function that returns the referenced object","pos":[0,45]}]}],"pos":[14486,14532],"yaml":true},{"content":"The metadata associated with the referenced object.","nodes":[{"pos":[0,51],"content":"The metadata associated with the referenced object.","nodes":[{"content":"The metadata associated with the referenced object.","pos":[0,51]}]}],"pos":[14592,14644],"yaml":true},{"content":"The thread synchronization mode","nodes":[{"pos":[0,31],"content":"The thread synchronization mode","nodes":[{"content":"The thread synchronization mode","pos":[0,31]}]}],"pos":[14728,14760],"yaml":true},{"content":"Gets the metadata associated with the referenced object.","nodes":[{"pos":[0,56],"content":"Gets the metadata associated with the referenced object.","nodes":[{"content":"Gets the metadata associated with the referenced object.","pos":[0,56]}]}],"pos":[16225,16282],"yaml":true},{"content":"The metadata associated with the referenced object.","nodes":[{"pos":[0,51],"content":"The metadata associated with the referenced object.","nodes":[{"content":"The metadata associated with the referenced object.","pos":[0,51]}]}],"pos":[16393,16445],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Lazy`2\n  commentId: T:System.Lazy`2\n  id: Lazy`2\n  children:\n  - System.Lazy`2.#ctor(`1)\n  - System.Lazy`2.#ctor(System.Func{`0},`1)\n  - System.Lazy`2.#ctor(`1,System.Boolean)\n  - System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)\n  - System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)\n  - System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)\n  - System.Lazy`2.Metadata\n  langs:\n  - csharp\n  name: Lazy<T,TMetadata>\n  nameWithType: Lazy<T,TMetadata>\n  fullName: System.Lazy<T,TMetadata>\n  type: Class\n  assemblies:\n  - System.Runtime\n  - System.ComponentModel.Composition\n  - netstandard\n  namespace: System\n  summary: Provides a lazy indirect reference to an object and its associated metadata for use by the Managed Extensibility Framework.\n  syntax:\n    content: 'public class Lazy<T,TMetadata> : Lazy<T>'\n    typeParameters:\n    - id: T\n      description: The type of the object referenced.\n    - id: TMetadata\n      description: The type of the metadata.\n  inheritance:\n  - System.Object\n  - System.Lazy`1\n  implements: []\n  inheritedMembers:\n  - System.Lazy`1.IsValueCreated\n  - System.Lazy`1.ToString\n  - System.Lazy`1.Value\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Lazy`2.#ctor(`1)\n  commentId: M:System.Lazy`2.#ctor(`1)\n  id: '#ctor(`1)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy<T,TMetadata>(TMetadata)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - System.ComponentModel.Composition\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata.\n  syntax:\n    content: public Lazy (TMetadata metadata);\n    parameters:\n    - id: metadata\n      type: TMetadata\n      description: The metadata associated with the referenced object.\n  overload: System.Lazy`2.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Lazy`2.#ctor(System.Func{`0},`1)\n  commentId: M:System.Lazy`2.#ctor(System.Func{`0},`1)\n  id: '#ctor(System.Func{`0},`1)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy<T,TMetadata>(Func<T>, TMetadata)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - System.ComponentModel.Composition\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata that uses the specified function to get the referenced object.\n  syntax:\n    content: public Lazy (Func<T> valueFactory, TMetadata metadata);\n    parameters:\n    - id: valueFactory\n      type: System.Func{T}\n      description: A function that returns the referenced object.\n    - id: metadata\n      type: TMetadata\n      description: The metadata associated with the referenced object.\n  overload: System.Lazy`2.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Lazy`2.#ctor(`1,System.Boolean)\n  commentId: M:System.Lazy`2.#ctor(`1,System.Boolean)\n  id: '#ctor(`1,System.Boolean)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy<T,TMetadata>(TMetadata, Boolean)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, Boolean)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - System.ComponentModel.Composition\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread safety value.\n  syntax:\n    content: public Lazy (TMetadata metadata, bool isThreadSafe);\n    parameters:\n    - id: metadata\n      type: TMetadata\n      description: The metadata associated with the referenced object.\n    - id: isThreadSafe\n      type: System.Boolean\n      description: Indicates whether the <xref href=\"System.Lazy`2\"></xref> object that is created will be thread-safe.\n  overload: System.Lazy`2.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)\n  commentId: M:System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)\n  id: '#ctor(`1,System.Threading.LazyThreadSafetyMode)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - System.ComponentModel.Composition\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread synchronization mode.\n  remarks: See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.\n  syntax:\n    content: public Lazy (TMetadata metadata, System.Threading.LazyThreadSafetyMode mode);\n    parameters:\n    - id: metadata\n      type: TMetadata\n      description: The metadata associated with the referenced object.\n    - id: mode\n      type: System.Threading.LazyThreadSafetyMode\n      description: The thread synchronization mode.\n  overload: System.Lazy`2.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)\n  commentId: M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)\n  id: '#ctor(System.Func{`0},`1,System.Boolean)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - System.ComponentModel.Composition\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread safety value that uses the specified function to get the referenced object.\n  syntax:\n    content: public Lazy (Func<T> valueFactory, TMetadata metadata, bool isThreadSafe);\n    parameters:\n    - id: valueFactory\n      type: System.Func{T}\n      description: A function that returns the referenced object.\n    - id: metadata\n      type: TMetadata\n      description: The metadata associated with the referenced object.\n    - id: isThreadSafe\n      type: System.Boolean\n      description: Indicates whether the <xref href=\"System.Lazy`2\"></xref> object that is created will be thread-safe.\n  overload: System.Lazy`2.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)\n  commentId: M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)\n  id: '#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - System.ComponentModel.Composition\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Lazy`2\"></xref> class with the specified metadata and thread synchronization mode that uses the specified function to get the referenced object.\n  remarks: See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.\n  syntax:\n    content: public Lazy (Func<T> valueFactory, TMetadata metadata, System.Threading.LazyThreadSafetyMode mode);\n    parameters:\n    - id: valueFactory\n      type: System.Func{T}\n      description: A function that returns the referenced object\n    - id: metadata\n      type: TMetadata\n      description: The metadata associated with the referenced object.\n    - id: mode\n      type: System.Threading.LazyThreadSafetyMode\n      description: The thread synchronization mode\n  overload: System.Lazy`2.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Lazy`2.Metadata\n  commentId: P:System.Lazy`2.Metadata\n  id: Metadata\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Metadata\n  nameWithType: Lazy<T,TMetadata>.Metadata\n  fullName: Lazy<T,TMetadata>.Metadata\n  type: Property\n  assemblies:\n  - System.Runtime\n  - System.ComponentModel.Composition\n  - netstandard\n  namespace: System\n  summary: Gets the metadata associated with the referenced object.\n  syntax:\n    content: public TMetadata Metadata { get; }\n    return:\n      type: TMetadata\n      description: The metadata associated with the referenced object.\n  overload: System.Lazy`2.Metadata*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Lazy`1\n  parent: System\n  isExternal: false\n  name: Lazy<T>\n  nameWithType: Lazy<T>\n  fullName: System.Lazy<T>\n- uid: System.Lazy`2.#ctor(`1)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy<T,TMetadata>(TMetadata)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)\n- uid: TMetadata\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n- uid: System.Lazy`2.#ctor(System.Func{`0},`1)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy<T,TMetadata>(Func<T>, TMetadata)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata)\n- uid: System.Func`1\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Func{T}\n  parent: System\n  isExternal: false\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Lazy`2.#ctor(`1,System.Boolean)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy<T,TMetadata>(TMetadata, Boolean)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, Boolean)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata, LazyThreadSafetyMode)\n- uid: System.Threading.LazyThreadSafetyMode\n  parent: System.Threading\n  isExternal: false\n  name: LazyThreadSafetyMode\n  nameWithType: LazyThreadSafetyMode\n  fullName: System.Threading.LazyThreadSafetyMode\n- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, Boolean)\n- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>, TMetadata, LazyThreadSafetyMode)\n- uid: System.Lazy`2.Metadata\n  parent: System.Lazy`2\n  isExternal: false\n  name: Metadata\n  nameWithType: Lazy<T,TMetadata>.Metadata\n  fullName: Lazy<T,TMetadata>.Metadata\n- uid: System.Lazy`2.#ctor*\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy<T,TMetadata>\n  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>\n  fullName: Lazy<T,TMetadata>.Lazy<T,TMetadata>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n- uid: System.Lazy`2.Metadata*\n  parent: System.Lazy`2\n  isExternal: false\n  name: Metadata\n  nameWithType: Lazy<T,TMetadata>.Metadata\n  fullName: Lazy<T,TMetadata>.Metadata\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Lazy`2.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Lazy`1.ToString\n  parent: System.Lazy`1\n  isExternal: false\n  name: ToString()\n  nameWithType: Lazy<T>.ToString()\n  fullName: Lazy<T>.ToString()\n- uid: System.Lazy`1.IsValueCreated\n  parent: System.Lazy`1\n  isExternal: false\n  name: IsValueCreated\n  nameWithType: Lazy<T>.IsValueCreated\n  fullName: Lazy<T>.IsValueCreated\n- uid: System.Lazy`1.Value\n  parent: System.Lazy`1\n  isExternal: false\n  name: Value\n  nameWithType: Lazy<T>.Value\n  fullName: Lazy<T>.Value\n"}