### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  commentId: T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  id: ConcurrentExclusiveSchedulerPair
  children:
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair
  nameWithType: ConcurrentExclusiveSchedulerPair
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  type: Class
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.
  remarks: ''
  example:
  - "The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> class. Readers run on the concurrent part of the scheduler. The writer runs on the exclusive part of the scheduler. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.  \n  \n [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]"
  syntax:
    content: public class ConcurrentExclusiveSchedulerPair
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair()
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <xref href="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair"></xref> class.
  remarks: ''
  example:
  - "The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.%23ctor%2A> constructor to create a new <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> object. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.  \n  \n [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]"
  syntax:
    content: public ConcurrentExclusiveSchedulerPair ();
    parameters: []
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  id: '#ctor(System.Threading.Tasks.TaskScheduler)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <xref href="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair"></xref> class that targets the specified scheduler.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: The target scheduler on which this pair should execute.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  id: '#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <xref href="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair"></xref> class that targets the specified scheduler with a maximum concurrency level.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: The target scheduler on which this pair should execute.
    - id: maxConcurrencyLevel
      type: System.Int32
      description: The maximum number of tasks to run concurrently.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  id: '#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <xref href="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair"></xref> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: The target scheduler on which this pair should execute.
    - id: maxConcurrencyLevel
      type: System.Int32
      description: The maximum number of tasks to run concurrently.
    - id: maxItemsPerTask
      type: System.Int32
      description: The maximum number of tasks to process for each underlying scheduled task used by the pair.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  id: Complete
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: Complete()
  nameWithType: ConcurrentExclusiveSchedulerPair.Complete()
  fullName: ConcurrentExclusiveSchedulerPair.Complete()
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Informs the scheduler pair that it should not accept any more tasks.
  remarks: Calling <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> is optional. It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed.
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  commentId: P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  id: Completion
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: Completion
  nameWithType: ConcurrentExclusiveSchedulerPair.Completion
  fullName: ConcurrentExclusiveSchedulerPair.Completion
  type: Property
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Gets a <xref href="System.Threading.Tasks.Task"></xref> that will complete when the scheduler has completed processing.
  syntax:
    content: public System.Threading.Tasks.Task Completion { get; }
    return:
      type: System.Threading.Tasks.Task
      description: The asynchronous operation that will complete when the scheduler finishes processing.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  commentId: P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  id: ConcurrentScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  type: Property
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Gets a <xref href="System.Threading.Tasks.TaskScheduler"></xref> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair.
  remarks: ''
  example:
  - "The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler%2A> property to run a reader. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.  \n  \n [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]"
  syntax:
    content: public System.Threading.Tasks.TaskScheduler ConcurrentScheduler { get; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: An object that can be used to schedule tasks concurrently.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  commentId: P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  id: ExclusiveScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ExclusiveScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  fullName: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  type: Property
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  namespace: System.Threading.Tasks
  summary: Gets a <xref href="System.Threading.Tasks.TaskScheduler"></xref> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair.
  remarks: ''
  example:
  - "The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler%2A> property to run a writer. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.  \n  \n [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]"
  syntax:
    content: public System.Threading.Tasks.TaskScheduler ExclusiveScheduler { get; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: An object that can be used to schedule tasks that do not run concurrently with other tasks.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair()
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Complete()
  nameWithType: ConcurrentExclusiveSchedulerPair.Complete()
  fullName: ConcurrentExclusiveSchedulerPair.Complete()
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Completion
  nameWithType: ConcurrentExclusiveSchedulerPair.Completion
  fullName: ConcurrentExclusiveSchedulerPair.Completion
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ExclusiveScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  fullName: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Complete
  nameWithType: ConcurrentExclusiveSchedulerPair.Complete
  fullName: ConcurrentExclusiveSchedulerPair.Complete
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Completion
  nameWithType: ConcurrentExclusiveSchedulerPair.Completion
  fullName: ConcurrentExclusiveSchedulerPair.Completion
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ExclusiveScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  fullName: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
