### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.StrongNameSignatureInformation
  commentId: T:System.Security.Cryptography.StrongNameSignatureInformation
  id: StrongNameSignatureInformation
  children:
  - System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm
  - System.Security.Cryptography.StrongNameSignatureInformation.HResult
  - System.Security.Cryptography.StrongNameSignatureInformation.IsValid
  - System.Security.Cryptography.StrongNameSignatureInformation.PublicKey
  - System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult
  langs:
  - csharp
  name: StrongNameSignatureInformation
  nameWithType: StrongNameSignatureInformation
  fullName: System.Security.Cryptography.StrongNameSignatureInformation
  type: Class
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Holds the strong name signature information for a manifest.
  syntax:
    content: public sealed class StrongNameSignatureInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm
  commentId: P:System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm
  id: HashAlgorithm
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: StrongNameSignatureInformation.HashAlgorithm
  fullName: StrongNameSignatureInformation.HashAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the hash algorithm that is used to calculate the strong name signature.
  syntax:
    content: public string HashAlgorithm { get; }
    return:
      type: System.String
      description: The name of the hash algorithm that is used to calculate the strong name signature.
  overload: System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.StrongNameSignatureInformation.HResult
  commentId: P:System.Security.Cryptography.StrongNameSignatureInformation.HResult
  id: HResult
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  langs:
  - csharp
  name: HResult
  nameWithType: StrongNameSignatureInformation.HResult
  fullName: StrongNameSignatureInformation.HResult
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the HRESULT value of the result code.
  syntax:
    content: public int HResult { get; }
    return:
      type: System.Int32
      description: The HRESULT value of the result code.
  overload: System.Security.Cryptography.StrongNameSignatureInformation.HResult*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.StrongNameSignatureInformation.IsValid
  commentId: P:System.Security.Cryptography.StrongNameSignatureInformation.IsValid
  id: IsValid
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  langs:
  - csharp
  name: IsValid
  nameWithType: StrongNameSignatureInformation.IsValid
  fullName: StrongNameSignatureInformation.IsValid
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets a value indicating whether the strong name signature is valid.
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: '`true` if the strong name signature is valid; otherwise, `false`.'
  overload: System.Security.Cryptography.StrongNameSignatureInformation.IsValid*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.StrongNameSignatureInformation.PublicKey
  commentId: P:System.Security.Cryptography.StrongNameSignatureInformation.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  langs:
  - csharp
  name: PublicKey
  nameWithType: StrongNameSignatureInformation.PublicKey
  fullName: StrongNameSignatureInformation.PublicKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the public key that is used to verify the signature.
  remarks: The only case that returns `null` is when <xref:System.Security.Cryptography.StrongNameSignatureInformation.IsValid%2A> is `false`.  If the signature is valid, there will always be a key.
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm PublicKey { get; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: The public key that is used to verify the signature.
  overload: System.Security.Cryptography.StrongNameSignatureInformation.PublicKey*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult
  commentId: P:System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult
  id: VerificationResult
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  langs:
  - csharp
  name: VerificationResult
  nameWithType: StrongNameSignatureInformation.VerificationResult
  fullName: StrongNameSignatureInformation.VerificationResult
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the results of verifying the strong name signature.
  remarks: This property and the <xref:System.Security.Cryptography.StrongNameSignatureInformation.HResult%2A> property are two ways to determine whether an error occurred during verification. This property lists well-known errors that might occur. The <xref:System.Security.Cryptography.StrongNameSignatureInformation.HResult%2A> property can be checked if the error is not covered by the <xref:System.Security.Cryptography.SignatureVerificationResult> enumeration.
  syntax:
    content: public System.Security.Cryptography.SignatureVerificationResult VerificationResult { get; }
    return:
      type: System.Security.Cryptography.SignatureVerificationResult
      description: The result codes for signature verification.
  overload: System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: HashAlgorithm
  nameWithType: StrongNameSignatureInformation.HashAlgorithm
  fullName: StrongNameSignatureInformation.HashAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.StrongNameSignatureInformation.HResult
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: HResult
  nameWithType: StrongNameSignatureInformation.HResult
  fullName: StrongNameSignatureInformation.HResult
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.StrongNameSignatureInformation.IsValid
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: IsValid
  nameWithType: StrongNameSignatureInformation.IsValid
  fullName: StrongNameSignatureInformation.IsValid
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.StrongNameSignatureInformation.PublicKey
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameSignatureInformation.PublicKey
  fullName: StrongNameSignatureInformation.PublicKey
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: VerificationResult
  nameWithType: StrongNameSignatureInformation.VerificationResult
  fullName: StrongNameSignatureInformation.VerificationResult
- uid: System.Security.Cryptography.SignatureVerificationResult
  parent: System.Security.Cryptography
  isExternal: false
  name: SignatureVerificationResult
  nameWithType: SignatureVerificationResult
  fullName: System.Security.Cryptography.SignatureVerificationResult
- uid: System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm*
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: HashAlgorithm
  nameWithType: StrongNameSignatureInformation.HashAlgorithm
  fullName: StrongNameSignatureInformation.HashAlgorithm
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
- uid: System.Security.Cryptography.StrongNameSignatureInformation.HResult*
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: HResult
  nameWithType: StrongNameSignatureInformation.HResult
  fullName: StrongNameSignatureInformation.HResult
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
- uid: System.Security.Cryptography.StrongNameSignatureInformation.IsValid*
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: IsValid
  nameWithType: StrongNameSignatureInformation.IsValid
  fullName: StrongNameSignatureInformation.IsValid
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
- uid: System.Security.Cryptography.StrongNameSignatureInformation.PublicKey*
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameSignatureInformation.PublicKey
  fullName: StrongNameSignatureInformation.PublicKey
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
- uid: System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult*
  parent: System.Security.Cryptography.StrongNameSignatureInformation
  isExternal: false
  name: VerificationResult
  nameWithType: StrongNameSignatureInformation.VerificationResult
  fullName: StrongNameSignatureInformation.VerificationResult
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/StrongNameSignatureInformation.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
