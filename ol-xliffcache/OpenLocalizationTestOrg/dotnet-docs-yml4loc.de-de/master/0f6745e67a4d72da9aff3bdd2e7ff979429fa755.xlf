<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f6745e67a4d72da9aff3bdd2e7ff979429fa755</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Collections.IStructuralEquatable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac4008c9079e04eaba450945c5f913b7531f9ea6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb493119e9b5eaca74ef1f5371e89534ac6adacb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods to support the comparison of objects for structural equality.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Structural equality means that two objects are equal because they have equal values.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The interface has two members: <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>, which tests for equality by using a specified <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation, and <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.GetHashCode%2A&gt;</ph>, which returns identical hash codes for objects that are equal.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface supports only custom comparisons for structural equality.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface supports custom structural comparisons for sorting and ordering.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework also provides default equality comparers, which are returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=fullName&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the example.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generic tuple classes (<ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph>, and so on) and the <ph id="ph4">&lt;xref:System.Array&gt;</ph> class provide explicit implementations of the <ph id="ph5">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface value and providing your <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation as an argument to the <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method, you can define a custom equality comparison for the array or collection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Determines whether an object is structurally equal to the current instance.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method supports custom structural comparison of array and tuple objects.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method in turn calls the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName&gt;</ph> method to compare individual array elements or tuple components, starting with the first element or component.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The individual calls to <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName&gt;</ph> end and the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=fullName&gt;</ph> method returns a value either when a method call returns <ph id="ph3">`false`</ph> or after all array elements or tuple components have been compared.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The object to compare with the current instance.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An object that determines whether the current instance and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p1">&lt;/code&gt;</ept> are equal.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the two objects are equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a hash code for the current instance.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An object that computes the hash code of the current object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>