{"nodes":[{"content":"Indicates that the type should be registered as a user-defined aggregate. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.","nodes":[{"pos":[0,219],"content":"Indicates that the type should be registered as a user-defined aggregate. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.","nodes":[{"content":"Indicates that the type should be registered as a user-defined aggregate. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.","pos":[0,219],"nodes":[{"content":"Indicates that the type should be registered as a user-defined aggregate.","pos":[0,73]},{"content":"The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server.","pos":[74,187]},{"content":"This class cannot be inherited.","pos":[188,219]}]}]}],"pos":[1240,1460],"yaml":true},{"content":"SQL Server creates a user-defined aggregate that is bound to the class definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> custom attribute. Every user-defined aggregate must be annotated with this attribute.  \n  \n See \"CLR User-Defined Aggregates\" in SQL Server 2005 Books Online for more information on user-defined aggregates and examples.","nodes":[{"pos":[0,247],"content":"SQL Server creates a user-defined aggregate that is bound to the class definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> custom attribute. Every user-defined aggregate must be annotated with this attribute.","nodes":[{"content":"SQL Server creates a user-defined aggregate that is bound to the class definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> custom attribute. Every user-defined aggregate must be annotated with this attribute.","pos":[0,247],"nodes":[{"content":"SQL Server creates a user-defined aggregate that is bound to the class definition that has the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute&gt;</ph> custom attribute.","pos":[0,179],"source":"SQL Server creates a user-defined aggregate that is bound to the class definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> custom attribute."},{"content":"Every user-defined aggregate must be annotated with this attribute.","pos":[180,247]}]}]},{"pos":[254,381],"content":"See \"CLR User-Defined Aggregates\" in SQL Server 2005 Books Online for more information on user-defined aggregates and examples.","nodes":[{"content":"See \"CLR User-Defined Aggregates\" in SQL Server 2005 Books Online for more information on user-defined aggregates and examples.","pos":[0,127]}]}],"pos":[1471,1859],"yaml":true,"extradata":"MT"},{"content":"A required attribute on a user-defined aggregate, used to indicate that the given type is a user-defined aggregate and the storage format of the user-defined aggregate.","nodes":[{"pos":[0,168],"content":"A required attribute on a user-defined aggregate, used to indicate that the given type is a user-defined aggregate and the storage format of the user-defined aggregate.","nodes":[{"content":"A required attribute on a user-defined aggregate, used to indicate that the given type is a user-defined aggregate and the storage format of the user-defined aggregate.","pos":[0,168]}]}],"pos":[7819,7988],"yaml":true},{"content":"One of the <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> values representing the serialization format of the aggregate.","nodes":[{"pos":[0,128],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.SqlServer.Server.Format\"&gt;&lt;/xref&gt;</ph> values representing the serialization format of the aggregate.","source":"One of the <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> values representing the serialization format of the aggregate."}],"pos":[8193,8322],"yaml":true},{"content":"The serialization format as a <xref href=\"Microsoft.SqlServer.Server.Format\"></xref>.","nodes":[{"pos":[0,85],"content":"The serialization format as a <ph id=\"ph1\">&lt;xref href=\"Microsoft.SqlServer.Server.Format\"&gt;&lt;/xref&gt;</ph>.","source":"The serialization format as a <xref href=\"Microsoft.SqlServer.Server.Format\"></xref>."}],"pos":[9504,9590],"yaml":true},{"content":"A <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> representing the serialization format.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"Microsoft.SqlServer.Server.Format\"&gt;&lt;/xref&gt;</ph> representing the serialization format.","source":"A <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> representing the serialization format."}],"pos":[10039,10135],"yaml":true},{"content":"Indicates whether the aggregate is invariant to duplicates.","nodes":[{"pos":[0,59],"content":"Indicates whether the aggregate is invariant to duplicates.","nodes":[{"content":"Indicates whether the aggregate is invariant to duplicates.","pos":[0,59]}]}],"pos":[11420,11480],"yaml":true},{"content":"Used by the query processor, this property is `true` if the aggregate is invariant to duplicates. That is, the aggregate of S, {X} is the same as aggregate of S when X is already in S. For example, aggregate functions such as MIN and MAX satisfy this property, while SUM does not.  \n  \n Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects both the plan selected and the results returned by the query.","nodes":[{"pos":[0,280],"content":"Used by the query processor, this property is `true` if the aggregate is invariant to duplicates. That is, the aggregate of S, {X} is the same as aggregate of S when X is already in S. For example, aggregate functions such as MIN and MAX satisfy this property, while SUM does not.","nodes":[{"content":"Used by the query processor, this property is <ph id=\"ph1\">`true`</ph> if the aggregate is invariant to duplicates.","pos":[0,97],"source":"Used by the query processor, this property is `true` if the aggregate is invariant to duplicates."},{"content":"That is, the aggregate of S, {X} is the same as aggregate of S when X is already in S. For example, aggregate functions such as MIN and MAX satisfy this property, while SUM does not.","pos":[98,280]}]},{"pos":[287,472],"content":"Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects both the plan selected and the results returned by the query.","nodes":[{"content":"Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects both the plan selected and the results returned by the query.","pos":[0,185],"nodes":[{"content":"Incorrectly setting this property can result in incorrect query results.","pos":[0,72]},{"content":"This property is not an optimizer hint; it affects both the plan selected and the results returned by the query.","pos":[73,185]}]}]}],"pos":[11491,11968],"yaml":true,"extradata":"MT"},{"content":"`true` if the aggregate is invariant to duplicates; otherwise `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the aggregate is invariant to duplicates; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the aggregate is invariant to duplicates; otherwise `false`."}],"pos":[12099,12172],"yaml":true},{"content":"Indicates whether the aggregate is invariant to nulls.","nodes":[{"pos":[0,54],"content":"Indicates whether the aggregate is invariant to nulls.","nodes":[{"content":"Indicates whether the aggregate is invariant to nulls.","pos":[0,54]}]}],"pos":[13444,13499],"yaml":true},{"content":"Used by the query processor, this property is `true` if the aggregate is invariant to nulls. That is, the aggregate of S, {NULL} is the same as aggregate of S. For example, aggregate functions such as MIN and MAX satisfy this property, while COUNT(*) does not.  \n  \n Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","nodes":[{"pos":[0,260],"content":"Used by the query processor, this property is `true` if the aggregate is invariant to nulls. That is, the aggregate of S, {NULL} is the same as aggregate of S. For example, aggregate functions such as MIN and MAX satisfy this property, while COUNT(*) does not.","nodes":[{"content":"Used by the query processor, this property is <ph id=\"ph1\">`true`</ph> if the aggregate is invariant to nulls.","pos":[0,92],"source":"Used by the query processor, this property is `true` if the aggregate is invariant to nulls."},{"content":"That is, the aggregate of S, {NULL} is the same as aggregate of S. For example, aggregate functions such as MIN and MAX satisfy this property, while COUNT(*) does not.","pos":[93,260]}]},{"pos":[267,447],"content":"Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","nodes":[{"content":"Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","pos":[0,180],"nodes":[{"content":"Incorrectly setting this property can result in incorrect query results.","pos":[0,72]},{"content":"This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","pos":[73,180]}]}]}],"pos":[13510,13962],"yaml":true,"extradata":"MT"},{"content":"`true` if the aggregate is invariant to nulls; otherwise `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the aggregate is invariant to nulls; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the aggregate is invariant to nulls; otherwise `false`."}],"pos":[14088,14156],"yaml":true},{"content":"Indicates whether the aggregate is invariant to order.","nodes":[{"pos":[0,54],"content":"Indicates whether the aggregate is invariant to order.","nodes":[{"content":"Indicates whether the aggregate is invariant to order.","pos":[0,54]}]}],"pos":[15423,15478],"yaml":true},{"content":"Reserved for future use. This property is not currently used by the query processor: order is currently not guaranteed.  \n  \n Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.  \n  \n The default value for this property is `false`.","nodes":[{"pos":[0,119],"content":"Reserved for future use. This property is not currently used by the query processor: order is currently not guaranteed.","nodes":[{"content":"Reserved for future use. This property is not currently used by the query processor: order is currently not guaranteed.","pos":[0,119],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"This property is not currently used by the query processor: order is currently not guaranteed.","pos":[25,119]}]}]},{"pos":[126,306],"content":"Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","nodes":[{"content":"Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","pos":[0,180],"nodes":[{"content":"Incorrectly setting this property can result in incorrect query results.","pos":[0,72]},{"content":"This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","pos":[73,180]}]}]},{"pos":[313,360],"content":"The default value for this property is <ph id=\"ph1\">`false`</ph>.","source":"The default value for this property is `false`."}],"pos":[15489,15856],"yaml":true,"extradata":"MT"},{"content":"`true` if the aggregate is invariant to order; otherwise `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the aggregate is invariant to order; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the aggregate is invariant to order; otherwise `false`."}],"pos":[15982,16050],"yaml":true},{"content":"Indicates whether the aggregate returns `null` if no values have been accumulated.","nodes":[{"pos":[0,82],"content":"Indicates whether the aggregate returns <ph id=\"ph1\">`null`</ph> if no values have been accumulated.","source":"Indicates whether the aggregate returns `null` if no values have been accumulated."}],"pos":[17287,17370],"yaml":true},{"content":"Used by the query processor, this property is `true` if the aggregate returns `null` if no values have been accumulated.  \n  \n Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","nodes":[{"pos":[0,120],"content":"Used by the query processor, this property is <ph id=\"ph1\">`true`</ph> if the aggregate returns <ph id=\"ph2\">`null`</ph> if no values have been accumulated.","source":"Used by the query processor, this property is `true` if the aggregate returns `null` if no values have been accumulated."},{"pos":[127,307],"content":"Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","nodes":[{"content":"Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","pos":[0,180],"nodes":[{"content":"Incorrectly setting this property can result in incorrect query results.","pos":[0,72]},{"content":"This property is not an optimizer hint; it affects the plan selected and the results returned by the query.","pos":[73,180]}]}]}],"pos":[17381,17693],"yaml":true,"extradata":"MT"},{"content":"`true` if the aggregate returns `null` if no values have been accumulated; otherwise `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the aggregate returns <ph id=\"ph2\">`null`</ph> if no values have been accumulated; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the aggregate returns `null` if no values have been accumulated; otherwise `false`."}],"pos":[17814,17910],"yaml":true},{"content":"The maximum size, in bytes, of the aggregate instance.","nodes":[{"pos":[0,54],"content":"The maximum size, in bytes, of the aggregate instance.","nodes":[{"content":"The maximum size, in bytes, of the aggregate instance.","pos":[0,54]}]}],"pos":[19130,19185],"yaml":true},{"content":"This property does not have to be specified for Native format serialization.  \n  \n You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> property with the UserDefined serialization <xref:Microsoft.SqlServer.Server.Format>.  \n  \n The maximum allowed value for this property is specified by the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue> field.  \n  \n The maximum size allowed is 2 gigabytes (GB). You can specify a number from 1 to 8000 bytes, or -1 to represent a value larger than 8000 bytes, up to 2 gigabytes.  \n  \n For an aggregate with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> refers to the total size of the serialized data. Consider an aggregate serializing a string of 10 characters (<xref:System.Char>). When the string is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream. So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A>, the total size of the serialized data must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.","nodes":[{"pos":[0,76],"content":"This property does not have to be specified for Native format serialization.","nodes":[{"content":"This property does not have to be specified for Native format serialization.","pos":[0,76]}]},{"pos":[83,271],"content":"You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> property with the UserDefined serialization <xref:Microsoft.SqlServer.Server.Format>.","nodes":[{"content":"You must specify the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A&gt;</ph> property with the UserDefined serialization <ph id=\"ph2\">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.","pos":[0,188],"source":"You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> property with the UserDefined serialization <xref:Microsoft.SqlServer.Server.Format>."}]},{"pos":[278,432],"content":"The maximum allowed value for this property is specified by the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue> field.","nodes":[{"content":"The maximum allowed value for this property is specified by the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue&gt;</ph> field.","pos":[0,154],"source":"The maximum allowed value for this property is specified by the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue> field."}]},{"pos":[439,601],"content":"The maximum size allowed is 2 gigabytes (GB). You can specify a number from 1 to 8000 bytes, or -1 to represent a value larger than 8000 bytes, up to 2 gigabytes.","nodes":[{"content":"The maximum size allowed is 2 gigabytes (GB). You can specify a number from 1 to 8000 bytes, or -1 to represent a value larger than 8000 bytes, up to 2 gigabytes.","pos":[0,162],"nodes":[{"content":"The maximum size allowed is 2 gigabytes (GB).","pos":[0,45]},{"content":"You can specify a number from 1 to 8000 bytes, or -1 to represent a value larger than 8000 bytes, up to 2 gigabytes.","pos":[46,162]}]}]},{"pos":[608,1431],"content":"For an aggregate with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> refers to the total size of the serialized data. Consider an aggregate serializing a string of 10 characters (<xref:System.Char>). When the string is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream. So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A>, the total size of the serialized data must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.","nodes":[{"content":"For an aggregate with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> refers to the total size of the serialized data. Consider an aggregate serializing a string of 10 characters (<xref:System.Char>). When the string is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream. So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A>, the total size of the serialized data must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.","pos":[0,823],"nodes":[{"content":"For an aggregate with user-defined serialization specified, <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A&gt;</ph> refers to the total size of the serialized data.","pos":[0,190],"source":"For an aggregate with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> refers to the total size of the serialized data."},{"content":"Consider an aggregate serializing a string of 10 characters (<ph id=\"ph1\">&lt;xref:System.Char&gt;</ph>).","pos":[191,272],"source":" Consider an aggregate serializing a string of 10 characters (<xref:System.Char>)."},{"content":"When the string is serialized using a <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter&gt;</ph>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.","pos":[273,556],"source":" When the string is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream."},{"content":"So, when determining the value of <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A&gt;</ph>, the total size of the serialized data must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.","pos":[557,823],"source":" So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A>, the total size of the serialized data must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization."}]}]}],"pos":[19196,20638],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> value representing the maximum size of the aggregate instance.","nodes":[{"pos":[0,99],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value representing the maximum size of the aggregate instance.","source":"An <xref href=\"System.Int32\"></xref> value representing the maximum size of the aggregate instance."}],"pos":[20754,20854],"yaml":true},{"content":"The maximum size, in bytes, required to store the state of this aggregate instance during computation.","nodes":[{"pos":[0,102],"content":"The maximum size, in bytes, required to store the state of this aggregate instance during computation.","nodes":[{"content":"The maximum size, in bytes, required to store the state of this aggregate instance during computation.","pos":[0,102]}]}],"pos":[22099,22202],"yaml":true},{"content":"An <xref:System.Int32> value representing the maximum size of the aggregate instance.","nodes":[{"pos":[0,85],"content":"An <xref:System.Int32> value representing the maximum size of the aggregate instance.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> value representing the maximum size of the aggregate instance.","pos":[0,85],"source":"An <xref:System.Int32> value representing the maximum size of the aggregate instance."}]}],"pos":[22213,22299],"yaml":true,"extradata":"MT"},{"content":"The name of the aggregate.","nodes":[{"pos":[0,26],"content":"The name of the aggregate.","nodes":[{"content":"The name of the aggregate.","pos":[0,26]}]}],"pos":[23514,23541],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> value representing the name of the aggregate.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value representing the name of the aggregate.","source":"A <xref href=\"System.String\"></xref> value representing the name of the aggregate."}],"pos":[23654,23737],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  commentId: T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  id: SqlUserDefinedAggregateAttribute\n  children:\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor(Microsoft.SqlServer.Server.Format)\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue\n  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name\n  langs:\n  - csharp\n  name: SqlUserDefinedAggregateAttribute\n  nameWithType: SqlUserDefinedAggregateAttribute\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  type: Class\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates that the type should be registered as a user-defined aggregate. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.\n  remarks: \"SQL Server creates a user-defined aggregate that is bound to the class definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> custom attribute. Every user-defined aggregate must be annotated with this attribute.  \\n  \\n See \\\"CLR User-Defined Aggregates\\\" in SQL Server 2005 Books Online for more information on user-defined aggregates and examples.\"\n  example:\n  - \"The following example shows the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> attribute for a user-defined aggregate.  The aggregate uses custom serialization, has a maximum size of 8000 bytes when serialized, and is invariant to nulls, duplicates, and order.  \\n  \\n [!code-csharp[DataWorks SqlUserDefinedAggregateAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedAggregateAttribute Sample/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlUserDefinedAggregateAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedAggregateAttribute Sample/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)]\n\n      public sealed class SqlUserDefinedAggregateAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor(Microsoft.SqlServer.Server.Format)\n  commentId: M:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor(Microsoft.SqlServer.Server.Format)\n  id: '#ctor(Microsoft.SqlServer.Server.Format)'\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: SqlUserDefinedAggregateAttribute(Format)\n  nameWithType: SqlUserDefinedAggregateAttribute.SqlUserDefinedAggregateAttribute(Format)\n  fullName: SqlUserDefinedAggregateAttribute.SqlUserDefinedAggregateAttribute(Format)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: A required attribute on a user-defined aggregate, used to indicate that the given type is a user-defined aggregate and the storage format of the user-defined aggregate.\n  syntax:\n    content: public SqlUserDefinedAggregateAttribute (Microsoft.SqlServer.Server.Format format);\n    parameters:\n    - id: format\n      type: Microsoft.SqlServer.Server.Format\n      description: One of the <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> values representing the serialization format of the aggregate.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format\n  commentId: P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format\n  id: Format\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: Format\n  nameWithType: SqlUserDefinedAggregateAttribute.Format\n  fullName: SqlUserDefinedAggregateAttribute.Format\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The serialization format as a <xref href=\"Microsoft.SqlServer.Server.Format\"></xref>.\n  remarks: ''\n  example:\n  - >-\n    [!code-csharp[VbRaddataSQLObjects#6](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Aggregate1.cs#6)]\n     [!code-vb[VbRaddataSQLObjects#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Aggregate1.vb#6)]\n  syntax:\n    content: public Microsoft.SqlServer.Server.Format Format { get; }\n    return:\n      type: Microsoft.SqlServer.Server.Format\n      description: A <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> representing the serialization format.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  commentId: P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  id: IsInvariantToDuplicates\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: IsInvariantToDuplicates\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether the aggregate is invariant to duplicates.\n  remarks: \"Used by the query processor, this property is `true` if the aggregate is invariant to duplicates. That is, the aggregate of S, {X} is the same as aggregate of S when X is already in S. For example, aggregate functions such as MIN and MAX satisfy this property, while SUM does not.  \\n  \\n Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects both the plan selected and the results returned by the query.\"\n  syntax:\n    content: public bool IsInvariantToDuplicates { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the aggregate is invariant to duplicates; otherwise `false`.'\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  commentId: P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  id: IsInvariantToNulls\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: IsInvariantToNulls\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether the aggregate is invariant to nulls.\n  remarks: \"Used by the query processor, this property is `true` if the aggregate is invariant to nulls. That is, the aggregate of S, {NULL} is the same as aggregate of S. For example, aggregate functions such as MIN and MAX satisfy this property, while COUNT(*) does not.  \\n  \\n Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.\"\n  syntax:\n    content: public bool IsInvariantToNulls { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the aggregate is invariant to nulls; otherwise `false`.'\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  commentId: P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  id: IsInvariantToOrder\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: IsInvariantToOrder\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether the aggregate is invariant to order.\n  remarks: \"Reserved for future use. This property is not currently used by the query processor: order is currently not guaranteed.  \\n  \\n Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.  \\n  \\n The default value for this property is `false`.\"\n  syntax:\n    content: public bool IsInvariantToOrder { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the aggregate is invariant to order; otherwise `false`.'\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  commentId: P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  id: IsNullIfEmpty\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: IsNullIfEmpty\n  nameWithType: SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  fullName: SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether the aggregate returns `null` if no values have been accumulated.\n  remarks: \"Used by the query processor, this property is `true` if the aggregate returns `null` if no values have been accumulated.  \\n  \\n Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.\"\n  syntax:\n    content: public bool IsNullIfEmpty { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the aggregate returns `null` if no values have been accumulated; otherwise `false`.'\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize\n  commentId: P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize\n  id: MaxByteSize\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: MaxByteSize\n  nameWithType: SqlUserDefinedAggregateAttribute.MaxByteSize\n  fullName: SqlUserDefinedAggregateAttribute.MaxByteSize\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The maximum size, in bytes, of the aggregate instance.\n  remarks: \"This property does not have to be specified for Native format serialization.  \\n  \\n You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> property with the UserDefined serialization <xref:Microsoft.SqlServer.Server.Format>.  \\n  \\n The maximum allowed value for this property is specified by the <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue> field.  \\n  \\n The maximum size allowed is 2 gigabytes (GB). You can specify a number from 1 to 8000 bytes, or -1 to represent a value larger than 8000 bytes, up to 2 gigabytes.  \\n  \\n For an aggregate with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A> refers to the total size of the serialized data. Consider an aggregate serializing a string of 10 characters (<xref:System.Char>). When the string is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream. So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize%2A>, the total size of the serialized data must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.\"\n  syntax:\n    content: public int MaxByteSize { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value representing the maximum size of the aggregate instance.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue\n  commentId: F:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue\n  id: MaxByteSizeValue\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: MaxByteSizeValue\n  nameWithType: SqlUserDefinedAggregateAttribute.MaxByteSizeValue\n  fullName: SqlUserDefinedAggregateAttribute.MaxByteSizeValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The maximum size, in bytes, required to store the state of this aggregate instance during computation.\n  remarks: An <xref:System.Int32> value representing the maximum size of the aggregate instance.\n  syntax:\n    content: public const int MaxByteSizeValue = 8000;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name\n  commentId: P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name\n  id: Name\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: SqlUserDefinedAggregateAttribute.Name\n  fullName: SqlUserDefinedAggregateAttribute.Name\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The name of the aggregate.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> value representing the name of the aggregate.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n  manager: mblythe\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor(Microsoft.SqlServer.Server.Format)\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: SqlUserDefinedAggregateAttribute(Format)\n  nameWithType: SqlUserDefinedAggregateAttribute.SqlUserDefinedAggregateAttribute(Format)\n  fullName: SqlUserDefinedAggregateAttribute.SqlUserDefinedAggregateAttribute(Format)\n- uid: Microsoft.SqlServer.Server.Format\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: Format\n  nameWithType: Format\n  fullName: Microsoft.SqlServer.Server.Format\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: Format\n  nameWithType: SqlUserDefinedAggregateAttribute.Format\n  fullName: SqlUserDefinedAggregateAttribute.Format\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: IsInvariantToDuplicates\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: IsInvariantToNulls\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: IsInvariantToOrder\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: IsNullIfEmpty\n  nameWithType: SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  fullName: SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: MaxByteSize\n  nameWithType: SqlUserDefinedAggregateAttribute.MaxByteSize\n  fullName: SqlUserDefinedAggregateAttribute.MaxByteSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: MaxByteSizeValue\n  nameWithType: SqlUserDefinedAggregateAttribute.MaxByteSizeValue\n  fullName: SqlUserDefinedAggregateAttribute.MaxByteSizeValue\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: Name\n  nameWithType: SqlUserDefinedAggregateAttribute.Name\n  fullName: SqlUserDefinedAggregateAttribute.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: SqlUserDefinedAggregateAttribute\n  nameWithType: SqlUserDefinedAggregateAttribute.SqlUserDefinedAggregateAttribute\n  fullName: SqlUserDefinedAggregateAttribute.SqlUserDefinedAggregateAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: Format\n  nameWithType: SqlUserDefinedAggregateAttribute.Format\n  fullName: SqlUserDefinedAggregateAttribute.Format\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: IsInvariantToDuplicates\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: IsInvariantToNulls\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToNulls\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: IsInvariantToOrder\n  nameWithType: SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  fullName: SqlUserDefinedAggregateAttribute.IsInvariantToOrder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: IsNullIfEmpty\n  nameWithType: SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  fullName: SqlUserDefinedAggregateAttribute.IsNullIfEmpty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: MaxByteSize\n  nameWithType: SqlUserDefinedAggregateAttribute.MaxByteSize\n  fullName: SqlUserDefinedAggregateAttribute.MaxByteSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute\n  isExternal: false\n  name: Name\n  nameWithType: SqlUserDefinedAggregateAttribute.Name\n  fullName: SqlUserDefinedAggregateAttribute.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlUserDefinedAggregateAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}