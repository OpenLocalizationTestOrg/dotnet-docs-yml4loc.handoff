### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueInstaller
  commentId: T:System.Messaging.MessageQueueInstaller
  id: MessageQueueInstaller
  children:
  - System.Messaging.MessageQueueInstaller.#ctor
  - System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)
  - System.Messaging.MessageQueueInstaller.Authenticate
  - System.Messaging.MessageQueueInstaller.BasePriority
  - System.Messaging.MessageQueueInstaller.Category
  - System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)
  - System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  - System.Messaging.MessageQueueInstaller.EncryptionRequired
  - System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)
  - System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  - System.Messaging.MessageQueueInstaller.Label
  - System.Messaging.MessageQueueInstaller.MaximumJournalSize
  - System.Messaging.MessageQueueInstaller.MaximumQueueSize
  - System.Messaging.MessageQueueInstaller.MulticastAddress
  - System.Messaging.MessageQueueInstaller.Path
  - System.Messaging.MessageQueueInstaller.Permissions
  - System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)
  - System.Messaging.MessageQueueInstaller.Transactional
  - System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)
  - System.Messaging.MessageQueueInstaller.UninstallAction
  - System.Messaging.MessageQueueInstaller.UseJournalQueue
  langs:
  - csharp
  name: MessageQueueInstaller
  nameWithType: MessageQueueInstaller
  fullName: System.Messaging.MessageQueueInstaller
  type: Class
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Allows you to install and configure a queue that your application needs in order to run. This class is called by the installation utility, for example, InstallUtil.exe, when installing a <xref href="System.Messaging.MessageQueue"></xref>.
  remarks: "The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue. For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).  \n  \n To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`. Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.  \n  \n When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor. This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in. Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.  \n  \n When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>. If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer. If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.  \n  \n You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer. For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.  \n  \n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception. It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.  \n  \n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility. It is not usually necessary for your code to explicitly modify the state information."
  syntax:
    content: 'public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Configuration.Install.Installer
  - System.Configuration.Install.ComponentInstaller
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.HelpText
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.#ctor
  commentId: M:System.Messaging.MessageQueueInstaller.#ctor
  id: '#ctor'
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: MessageQueueInstaller()
  nameWithType: MessageQueueInstaller.MessageQueueInstaller()
  fullName: MessageQueueInstaller.MessageQueueInstaller()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Initializes a new instance of the <xref href="System.Messaging.MessageQueueInstaller"></xref> class. Does not set any instance properties.
  syntax:
    content: public MessageQueueInstaller ();
    parameters: []
  overload: System.Messaging.MessageQueueInstaller.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)
  commentId: M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)
  id: '#ctor(System.Messaging.MessageQueue)'
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: MessageQueueInstaller(MessageQueue)
  nameWithType: MessageQueueInstaller.MessageQueueInstaller(MessageQueue)
  fullName: MessageQueueInstaller.MessageQueueInstaller(MessageQueue)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Initializes a new instance of the <xref href="System.Messaging.MessageQueueInstaller"></xref> class, initializing the installation settings to those of an existing <xref href="System.Messaging.MessageQueue"></xref> instance.
  syntax:
    content: public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);
    parameters:
    - id: componentToCopy
      type: System.Messaging.MessageQueue
      description: The <xref href="System.Messaging.MessageQueue"></xref> component whose settings determine the property settings of the new queue installed.
  overload: System.Messaging.MessageQueueInstaller.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Authenticate
  commentId: P:System.Messaging.MessageQueueInstaller.Authenticate
  id: Authenticate
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Authenticate
  nameWithType: MessageQueueInstaller.Authenticate
  fullName: MessageQueueInstaller.Authenticate
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.
  remarks: When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected. The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message. Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.
  syntax:
    content: public bool Authenticate { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the queue accepts only authenticated messages; otherwise, `false`. The default is `false`.'
  overload: System.Messaging.MessageQueueInstaller.Authenticate*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.BasePriority
  commentId: P:System.Messaging.MessageQueueInstaller.BasePriority
  id: BasePriority
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: BasePriority
  nameWithType: MessageQueueInstaller.BasePriority
  fullName: MessageQueueInstaller.BasePriority
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets the base priority that is used to route a public queue's messages over the network.
  remarks: "The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network. Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues. When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority. The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.  \n  \n The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name). The base priority of private queues and of directly accessed public queues is always zero."
  syntax:
    content: public short BasePriority { get; set; }
    return:
      type: System.Int16
      description: The single base priority for all messages sent to the public queue. The default is zero (0).
  overload: System.Messaging.MessageQueueInstaller.BasePriority*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Category
  commentId: P:System.Messaging.MessageQueueInstaller.Category
  id: Category
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Category
  nameWithType: MessageQueueInstaller.Category
  fullName: MessageQueueInstaller.Category
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets an implementation-specific queue type.
  remarks: "The queue category enables an application to categorize associated queues according to the way they are used. The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference. You can also define a new category.  \n  \n The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write. You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values. However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values. For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))]

      public Guid Category { get; set; }
    return:
      type: System.Guid
      description: A <xref href="System.Guid"></xref> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used. The default is `Guid.empty`.
  overload: System.Messaging.MessageQueueInstaller.Category*
  exceptions: []
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)
  commentId: M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)
  id: Commit(System.Collections.IDictionary)
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Commit(IDictionary)
  nameWithType: MessageQueueInstaller.Commit(IDictionary)
  fullName: MessageQueueInstaller.Commit(IDictionary)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Completes the installation process by committing the <xref href="System.Messaging.MessageQueue"></xref> installation information that the <xref href="System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)"></xref> method wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.
  remarks: "Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.  \n  \n After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.  \n  \n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information. When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation."
  syntax:
    content: public override void Commit (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: A <xref href="System.Collections.IDictionary"></xref> that contains the post-installation state of the computer.
  overload: System.Messaging.MessageQueueInstaller.Commit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  commentId: M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  id: CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: CopyFromComponent(IComponent)
  nameWithType: MessageQueueInstaller.CopyFromComponent(IComponent)
  fullName: MessageQueueInstaller.CopyFromComponent(IComponent)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Copies the property values of a <xref href="System.Messaging.MessageQueue"></xref> component that are required at install time for a message queue.
  remarks: "Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.  \n  \n If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (\"\"), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes."
  syntax:
    content: public override void CopyFromComponent (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: A <xref href="System.ComponentModel.IComponent"></xref> to use as a template for the <xref href="System.Messaging.MessageQueueInstaller"></xref>.
  overload: System.Messaging.MessageQueueInstaller.CopyFromComponent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The component associated with this <xref href="System.Messaging.MessageQueueInstaller"></xref> is not a <xref href="System.Messaging.MessageQueue"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.EncryptionRequired
  commentId: P:System.Messaging.MessageQueueInstaller.EncryptionRequired
  id: EncryptionRequired
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: EncryptionRequired
  nameWithType: MessageQueueInstaller.EncryptionRequired
  fullName: MessageQueueInstaller.EncryptionRequired
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.
  remarks: When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted. Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.
  syntax:
    content: public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }
    return:
      type: System.Messaging.EncryptionRequired
      description: One of the <xref href="System.Messaging.EncryptionRequired"></xref> values that indicates the encryption level required on messages sent to the queue. The default is `Optional`.
  overload: System.Messaging.MessageQueueInstaller.EncryptionRequired*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)
  commentId: M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)
  id: Install(System.Collections.IDictionary)
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Install(IDictionary)
  nameWithType: MessageQueueInstaller.Install(IDictionary)
  fullName: MessageQueueInstaller.Install(IDictionary)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Performs the installation and writes message queue information to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.
  remarks: "The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property. If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue. <xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>. If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>. If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.  \n  \n> [!CAUTION]\n>  If it is necessary to recreate the queue, messages in the queue will be lost.  \n  \n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states. This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.  \n  \n After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state. If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.  \n  \n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information."
  syntax:
    content: public override void Install (System.Collections.IDictionary stateSaver);
    parameters:
    - id: stateSaver
      type: System.Collections.IDictionary
      description: A <xref href="System.Collections.IDictionary"></xref> used to save information needed to perform a commit, rollback, or uninstall operation.
  overload: System.Messaging.MessageQueueInstaller.Install*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  commentId: M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  id: IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: IsEquivalentInstaller(ComponentInstaller)
  nameWithType: MessageQueueInstaller.IsEquivalentInstaller(ComponentInstaller)
  fullName: MessageQueueInstaller.IsEquivalentInstaller(ComponentInstaller)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Determines whether the specified installer can handle the same kind of installation as this installer.
  remarks: Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type.
  syntax:
    content: public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);
    parameters:
    - id: otherInstaller
      type: System.Configuration.Install.ComponentInstaller
      description: The installer to compare.
    return:
      type: System.Boolean
      description: '`true` if this installer and the installer specified by the <code>otherInstaller</code> parameter can handle the same kind of installation; otherwise, `false`.'
  overload: System.Messaging.MessageQueueInstaller.IsEquivalentInstaller*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Label
  commentId: P:System.Messaging.MessageQueueInstaller.Label
  id: Label
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Label
  nameWithType: MessageQueueInstaller.Label
  fullName: MessageQueueInstaller.Label
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets a description of the queue.
  remarks: The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: The label that describes the message queue. The default is an empty string ("").
  overload: System.Messaging.MessageQueueInstaller.Label*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Messaging.MessageQueueInstaller.Label"></xref> is `null`.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.MaximumJournalSize
  commentId: P:System.Messaging.MessageQueueInstaller.MaximumJournalSize
  id: MaximumJournalSize
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: MaximumJournalSize
  nameWithType: MessageQueueInstaller.MaximumJournalSize
  fullName: MessageQueueInstaller.MaximumJournalSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets the maximum size of the journal that is associated with the queue.
  remarks: "When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue. The queue journal is used to track the messages that are removed from the queue.  \n  \n Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.  \n  \n Applications cannot send messages to the journal queue. However, you must periodically clear the queue to remove the messages that are no longer needed. Messages stored in journal queues count toward the quota for the computer where the queues reside. (The computer quota is set by the administrator.)"
  syntax:
    content: public long MaximumJournalSize { get; set; }
    return:
      type: System.Int64
      description: The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue. The Message Queuing default is no limit.
  overload: System.Messaging.MessageQueueInstaller.MaximumJournalSize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.MaximumQueueSize
  commentId: P:System.Messaging.MessageQueueInstaller.MaximumQueueSize
  id: MaximumQueueSize
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: MaximumQueueSize
  nameWithType: MessageQueueInstaller.MaximumQueueSize
  fullName: MessageQueueInstaller.MaximumQueueSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets the maximum size of the queue.
  remarks: The maximum queue size is typically set at the time of queue creation, although it can be reset later.
  syntax:
    content: public long MaximumQueueSize { get; set; }
    return:
      type: System.Int64
      description: The maximum size, in kilobytes, of the queue. The Message Queuing default is no limit.
  overload: System.Messaging.MessageQueueInstaller.MaximumQueueSize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.MulticastAddress
  commentId: P:System.Messaging.MessageQueueInstaller.MulticastAddress
  id: MulticastAddress
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: MulticastAddress
  nameWithType: MessageQueueInstaller.MulticastAddress
  fullName: MessageQueueInstaller.MulticastAddress
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.
  syntax:
    content: public string MulticastAddress { get; set; }
    return:
      type: System.String
      description: "A <xref href=\"System.String\"></xref> that contains a valid multicast address (in the form shown below) or `null`, which indicates that the queue is not associated with a multicast address.  \n  \n```  \n<address>:<port>  \n```"
  overload: System.Messaging.MessageQueueInstaller.MulticastAddress*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: MSMQ 3.0 is not installed.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Path
  commentId: P:System.Messaging.MessageQueueInstaller.Path
  id: Path
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Path
  nameWithType: MessageQueueInstaller.Path
  fullName: MessageQueueInstaller.Path
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets the location of the queue that is referenced by this object.
  remarks: "The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references. The following table shows the syntax you should use for queues of various types.  \n  \n|Queue type|Syntax|  \n|----------------|------------|  \n|Public queue|`machineName`\\\\`queueName`|  \n|Private queue|`machineName`\\\\`Private$`\\\\`queueName`|  \n|Journal queue|`machineName`\\\\`queueName`\\\\`Journal$`|  \n|Machine journal queue|`machineName`\\\\`Journal$`|  \n|Machine dead-letter queue|`machineName`\\\\`Deadletter$`|  \n|Machine transactional dead-letter queue|`machineName`\\\\`XactDeadletter$`|  \n  \n Use \".\" for the local computer.  \n  \n You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path. The following table shows the proper syntax for each type of reference.  \n  \n|Reference|Syntax|  \n|---------------|------------|  \n|Format name|FormatName:[ *format name* ]|  \n|Label|Label:[ *label* ]|  \n  \n If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>. If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public string Path { get; set; }
    return:
      type: System.String
      description: The path that represents the location of the queue in the network.
  overload: System.Messaging.MessageQueueInstaller.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Messaging.MessageQueueInstaller.Path\"></xref> was set to an invalid value, possibly because the syntax is not valid.  \n  \n -or-  \n  \n The <xref href=\"System.Messaging.MessageQueueInstaller.Path\"></xref> is `null`."
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Permissions
  commentId: P:System.Messaging.MessageQueueInstaller.Permissions
  id: Permissions
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Permissions
  nameWithType: MessageQueueInstaller.Permissions
  fullName: MessageQueueInstaller.Permissions
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets permissions associated with the queue.
  remarks: "By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue. Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action. As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.  \n  \n When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection. When you construct each access control entry, you can specify generic or standard access rights. The rights to a queue can be any combination of the following:  \n  \n-   Delete  \n  \n-   Read Security  \n  \n-   Write Security  \n  \n-   Synchronize  \n  \n-   Modify Owner  \n  \n-   Read  \n  \n-   Write  \n  \n-   Execute  \n  \n-   Required  \n  \n-   All  \n  \n-   None  \n  \n These rights are a set of bit flags that you can combine using the bitwise OR:  \n  \n-   Full Control  \n  \n-   Delete Message  \n  \n-   Receive Message  \n  \n-   Peek Message  \n  \n-   Receive Journal Message  \n  \n-   Get Queue Properties  \n  \n-   Set Queue Properties  \n  \n-   Get Permissions  \n  \n-   Set Permissions  \n  \n-   Take Queue Ownership  \n  \n-   Write Message"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Messaging.AccessControlList Permissions { get; set; }
    return:
      type: System.Messaging.AccessControlList
      description: A <xref href="System.Messaging.AccessControlList"></xref> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.
  overload: System.Messaging.MessageQueueInstaller.Permissions*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)
  commentId: M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)
  id: Rollback(System.Collections.IDictionary)
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Rollback(IDictionary)
  nameWithType: MessageQueueInstaller.Rollback(IDictionary)
  fullName: MessageQueueInstaller.Rollback(IDictionary)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.
  remarks: "The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails. The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.  \n  \n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility. The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.  \n  \n An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been installed. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information."
  syntax:
    content: public override void Rollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: A <xref href="System.Collections.IDictionary"></xref> that contains the pre-installation state of the computer.
  overload: System.Messaging.MessageQueueInstaller.Rollback*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Transactional
  commentId: P:System.Messaging.MessageQueueInstaller.Transactional
  id: Transactional
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Transactional
  nameWithType: MessageQueueInstaller.Transactional
  fullName: MessageQueueInstaller.Transactional
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.
  remarks: Messages can be retrieved from a local transaction queue with or without using a transaction. If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.
  syntax:
    content: public bool Transactional { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the queue can only accept messages sent as part of a transaction; otherwise, `false`. The default is `false`.'
  overload: System.Messaging.MessageQueueInstaller.Transactional*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)
  commentId: M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)
  id: Uninstall(System.Collections.IDictionary)
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: Uninstall(IDictionary)
  nameWithType: MessageQueueInstaller.Uninstall(IDictionary)
  fullName: MessageQueueInstaller.Uninstall(IDictionary)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Removes an installation by removing queue information from the registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.
  remarks: "If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>.  \n  \n Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode). The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states. This includes deleting registry information that is associated with the MessageQueue being uninstalled.  \n  \n An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> to automatically maintain information about the components that have already been uninstalled. This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance. Usually, it is not necessary for your code to explicitly modify this state information."
  syntax:
    content: public override void Uninstall (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: A <xref href="System.Collections.IDictionary"></xref> that contains the post-installation state of the computer.
  overload: System.Messaging.MessageQueueInstaller.Uninstall*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.UninstallAction
  commentId: P:System.Messaging.MessageQueueInstaller.UninstallAction
  id: UninstallAction
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: UninstallAction
  nameWithType: MessageQueueInstaller.UninstallAction
  fullName: MessageQueueInstaller.UninstallAction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: 'Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.'
  remarks: When you install a queue, you can optionally use an existing queue. If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state. If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored. You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.
  syntax:
    content: public System.Configuration.Install.UninstallAction UninstallAction { get; set; }
    return:
      type: System.Configuration.Install.UninstallAction
      description: One of the <xref href="System.Configuration.Install.UninstallAction"></xref> values that indicates what state to leave the queue in when the <xref href="System.Messaging.MessageQueue"></xref> is uninstalled. The default is `Remove`.
  overload: System.Messaging.MessageQueueInstaller.UninstallAction*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.MessageQueueInstaller.UseJournalQueue
  commentId: P:System.Messaging.MessageQueueInstaller.UseJournalQueue
  id: UseJournalQueue
  parent: System.Messaging.MessageQueueInstaller
  langs:
  - csharp
  name: UseJournalQueue
  nameWithType: MessageQueueInstaller.UseJournalQueue
  fullName: MessageQueueInstaller.UseJournalQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.
  remarks: "A journal queue lets you keep track of messages even after they have been retrieved from the queue. However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.  \n  \n A journal queue should be cleared periodically to remove messages that are no longer needed. Messages stored in the journal queue count toward the quota for the computer on which the journal is located."
  syntax:
    content: public bool UseJournalQueue { get; set; }
    return:
      type: System.Boolean
      description: '`true` to copy messages that are retrieved from the queue to the journal queue; otherwise, `false`. The default is `false`.'
  overload: System.Messaging.MessageQueueInstaller.UseJournalQueue*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
references:
- uid: System.Configuration.Install.ComponentInstaller
  parent: System.Configuration.Install
  isExternal: false
  name: ComponentInstaller
  nameWithType: ComponentInstaller
  fullName: System.Configuration.Install.ComponentInstaller
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.PlatformNotSupportedException
  parent: System
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Messaging.MessageQueueInstaller.#ctor
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MessageQueueInstaller()
  nameWithType: MessageQueueInstaller.MessageQueueInstaller()
  fullName: MessageQueueInstaller.MessageQueueInstaller()
- uid: System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MessageQueueInstaller(MessageQueue)
  nameWithType: MessageQueueInstaller.MessageQueueInstaller(MessageQueue)
  fullName: MessageQueueInstaller.MessageQueueInstaller(MessageQueue)
- uid: System.Messaging.MessageQueue
  parent: System.Messaging
  isExternal: false
  name: MessageQueue
  nameWithType: MessageQueue
  fullName: System.Messaging.MessageQueue
- uid: System.Messaging.MessageQueueInstaller.Authenticate
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Authenticate
  nameWithType: MessageQueueInstaller.Authenticate
  fullName: MessageQueueInstaller.Authenticate
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.MessageQueueInstaller.BasePriority
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: BasePriority
  nameWithType: MessageQueueInstaller.BasePriority
  fullName: MessageQueueInstaller.BasePriority
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Messaging.MessageQueueInstaller.Category
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Category
  nameWithType: MessageQueueInstaller.Category
  fullName: MessageQueueInstaller.Category
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Commit(IDictionary)
  nameWithType: MessageQueueInstaller.Commit(IDictionary)
  fullName: MessageQueueInstaller.Commit(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: CopyFromComponent(IComponent)
  nameWithType: MessageQueueInstaller.CopyFromComponent(IComponent)
  fullName: MessageQueueInstaller.CopyFromComponent(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Messaging.MessageQueueInstaller.EncryptionRequired
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: EncryptionRequired
  nameWithType: MessageQueueInstaller.EncryptionRequired
  fullName: MessageQueueInstaller.EncryptionRequired
- uid: System.Messaging.EncryptionRequired
  parent: System.Messaging
  isExternal: false
  name: EncryptionRequired
  nameWithType: EncryptionRequired
  fullName: System.Messaging.EncryptionRequired
- uid: System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Install(IDictionary)
  nameWithType: MessageQueueInstaller.Install(IDictionary)
  fullName: MessageQueueInstaller.Install(IDictionary)
- uid: System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: IsEquivalentInstaller(ComponentInstaller)
  nameWithType: MessageQueueInstaller.IsEquivalentInstaller(ComponentInstaller)
  fullName: MessageQueueInstaller.IsEquivalentInstaller(ComponentInstaller)
- uid: System.Messaging.MessageQueueInstaller.Label
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Label
  nameWithType: MessageQueueInstaller.Label
  fullName: MessageQueueInstaller.Label
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.MessageQueueInstaller.MaximumJournalSize
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MaximumJournalSize
  nameWithType: MessageQueueInstaller.MaximumJournalSize
  fullName: MessageQueueInstaller.MaximumJournalSize
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Messaging.MessageQueueInstaller.MaximumQueueSize
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MaximumQueueSize
  nameWithType: MessageQueueInstaller.MaximumQueueSize
  fullName: MessageQueueInstaller.MaximumQueueSize
- uid: System.Messaging.MessageQueueInstaller.MulticastAddress
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MulticastAddress
  nameWithType: MessageQueueInstaller.MulticastAddress
  fullName: MessageQueueInstaller.MulticastAddress
- uid: System.Messaging.MessageQueueInstaller.Path
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Path
  nameWithType: MessageQueueInstaller.Path
  fullName: MessageQueueInstaller.Path
- uid: System.Messaging.MessageQueueInstaller.Permissions
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Permissions
  nameWithType: MessageQueueInstaller.Permissions
  fullName: MessageQueueInstaller.Permissions
- uid: System.Messaging.AccessControlList
  parent: System.Messaging
  isExternal: false
  name: AccessControlList
  nameWithType: AccessControlList
  fullName: System.Messaging.AccessControlList
- uid: System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Rollback(IDictionary)
  nameWithType: MessageQueueInstaller.Rollback(IDictionary)
  fullName: MessageQueueInstaller.Rollback(IDictionary)
- uid: System.Messaging.MessageQueueInstaller.Transactional
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Transactional
  nameWithType: MessageQueueInstaller.Transactional
  fullName: MessageQueueInstaller.Transactional
- uid: System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Uninstall(IDictionary)
  nameWithType: MessageQueueInstaller.Uninstall(IDictionary)
  fullName: MessageQueueInstaller.Uninstall(IDictionary)
- uid: System.Messaging.MessageQueueInstaller.UninstallAction
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: UninstallAction
  nameWithType: MessageQueueInstaller.UninstallAction
  fullName: MessageQueueInstaller.UninstallAction
- uid: System.Configuration.Install.UninstallAction
  parent: System.Configuration.Install
  isExternal: false
  name: UninstallAction
  nameWithType: UninstallAction
  fullName: System.Configuration.Install.UninstallAction
- uid: System.Messaging.MessageQueueInstaller.UseJournalQueue
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessageQueueInstaller.UseJournalQueue
  fullName: MessageQueueInstaller.UseJournalQueue
- uid: System.Messaging.MessageQueueInstaller.#ctor*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MessageQueueInstaller
  nameWithType: MessageQueueInstaller.MessageQueueInstaller
  fullName: MessageQueueInstaller.MessageQueueInstaller
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Authenticate*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Authenticate
  nameWithType: MessageQueueInstaller.Authenticate
  fullName: MessageQueueInstaller.Authenticate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.BasePriority*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: BasePriority
  nameWithType: MessageQueueInstaller.BasePriority
  fullName: MessageQueueInstaller.BasePriority
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Category*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Category
  nameWithType: MessageQueueInstaller.Category
  fullName: MessageQueueInstaller.Category
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Commit*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Commit
  nameWithType: MessageQueueInstaller.Commit
  fullName: MessageQueueInstaller.Commit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.CopyFromComponent*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: CopyFromComponent
  nameWithType: MessageQueueInstaller.CopyFromComponent
  fullName: MessageQueueInstaller.CopyFromComponent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.EncryptionRequired*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: EncryptionRequired
  nameWithType: MessageQueueInstaller.EncryptionRequired
  fullName: MessageQueueInstaller.EncryptionRequired
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Install*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Install
  nameWithType: MessageQueueInstaller.Install
  fullName: MessageQueueInstaller.Install
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.IsEquivalentInstaller*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: IsEquivalentInstaller
  nameWithType: MessageQueueInstaller.IsEquivalentInstaller
  fullName: MessageQueueInstaller.IsEquivalentInstaller
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Label*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Label
  nameWithType: MessageQueueInstaller.Label
  fullName: MessageQueueInstaller.Label
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.MaximumJournalSize*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MaximumJournalSize
  nameWithType: MessageQueueInstaller.MaximumJournalSize
  fullName: MessageQueueInstaller.MaximumJournalSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.MaximumQueueSize*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MaximumQueueSize
  nameWithType: MessageQueueInstaller.MaximumQueueSize
  fullName: MessageQueueInstaller.MaximumQueueSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.MulticastAddress*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: MulticastAddress
  nameWithType: MessageQueueInstaller.MulticastAddress
  fullName: MessageQueueInstaller.MulticastAddress
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Path*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Path
  nameWithType: MessageQueueInstaller.Path
  fullName: MessageQueueInstaller.Path
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Permissions*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Permissions
  nameWithType: MessageQueueInstaller.Permissions
  fullName: MessageQueueInstaller.Permissions
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Rollback*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Rollback
  nameWithType: MessageQueueInstaller.Rollback
  fullName: MessageQueueInstaller.Rollback
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Transactional*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Transactional
  nameWithType: MessageQueueInstaller.Transactional
  fullName: MessageQueueInstaller.Transactional
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.Uninstall*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: Uninstall
  nameWithType: MessageQueueInstaller.Uninstall
  fullName: MessageQueueInstaller.Uninstall
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.UninstallAction*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: UninstallAction
  nameWithType: MessageQueueInstaller.UninstallAction
  fullName: MessageQueueInstaller.UninstallAction
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Messaging.MessageQueueInstaller.UseJournalQueue*
  parent: System.Messaging.MessageQueueInstaller
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessageQueueInstaller.UseJournalQueue
  fullName: MessageQueueInstaller.UseJournalQueue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/MessageQueueInstaller.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString()
  nameWithType: Component.ToString()
  fullName: Component.ToString()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: Component.Container
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: Component.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: Component.Disposed
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: Component.Events
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: Component.GetService(Type)
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: Component.Site
- uid: System.Configuration.Install.Installer.AfterInstall
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: AfterInstall
  nameWithType: Installer.AfterInstall
  fullName: Installer.AfterInstall
- uid: System.Configuration.Install.Installer.AfterRollback
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: AfterRollback
  nameWithType: Installer.AfterRollback
  fullName: Installer.AfterRollback
- uid: System.Configuration.Install.Installer.AfterUninstall
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: AfterUninstall
  nameWithType: Installer.AfterUninstall
  fullName: Installer.AfterUninstall
- uid: System.Configuration.Install.Installer.BeforeInstall
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: BeforeInstall
  nameWithType: Installer.BeforeInstall
  fullName: Installer.BeforeInstall
- uid: System.Configuration.Install.Installer.BeforeRollback
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: BeforeRollback
  nameWithType: Installer.BeforeRollback
  fullName: Installer.BeforeRollback
- uid: System.Configuration.Install.Installer.BeforeUninstall
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: BeforeUninstall
  nameWithType: Installer.BeforeUninstall
  fullName: Installer.BeforeUninstall
- uid: System.Configuration.Install.Installer.Committed
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Committed
  nameWithType: Installer.Committed
  fullName: Installer.Committed
- uid: System.Configuration.Install.Installer.Committing
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Committing
  nameWithType: Installer.Committing
  fullName: Installer.Committing
- uid: System.Configuration.Install.Installer.Context
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Context
  nameWithType: Installer.Context
  fullName: Installer.Context
- uid: System.Configuration.Install.Installer.HelpText
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: HelpText
  nameWithType: Installer.HelpText
  fullName: Installer.HelpText
- uid: System.Configuration.Install.Installer.Installers
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Installers
  nameWithType: Installer.Installers
  fullName: Installer.Installers
- uid: System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnAfterInstall(IDictionary)
  nameWithType: Installer.OnAfterInstall(IDictionary)
  fullName: Installer.OnAfterInstall(IDictionary)
- uid: System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnAfterRollback(IDictionary)
  nameWithType: Installer.OnAfterRollback(IDictionary)
  fullName: Installer.OnAfterRollback(IDictionary)
- uid: System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnAfterUninstall(IDictionary)
  nameWithType: Installer.OnAfterUninstall(IDictionary)
  fullName: Installer.OnAfterUninstall(IDictionary)
- uid: System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnBeforeInstall(IDictionary)
  nameWithType: Installer.OnBeforeInstall(IDictionary)
  fullName: Installer.OnBeforeInstall(IDictionary)
- uid: System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnBeforeRollback(IDictionary)
  nameWithType: Installer.OnBeforeRollback(IDictionary)
  fullName: Installer.OnBeforeRollback(IDictionary)
- uid: System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnBeforeUninstall(IDictionary)
  nameWithType: Installer.OnBeforeUninstall(IDictionary)
  fullName: Installer.OnBeforeUninstall(IDictionary)
- uid: System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnCommitted(IDictionary)
  nameWithType: Installer.OnCommitted(IDictionary)
  fullName: Installer.OnCommitted(IDictionary)
- uid: System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnCommitting(IDictionary)
  nameWithType: Installer.OnCommitting(IDictionary)
  fullName: Installer.OnCommitting(IDictionary)
- uid: System.Configuration.Install.Installer.Parent
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Parent
  nameWithType: Installer.Parent
  fullName: Installer.Parent
