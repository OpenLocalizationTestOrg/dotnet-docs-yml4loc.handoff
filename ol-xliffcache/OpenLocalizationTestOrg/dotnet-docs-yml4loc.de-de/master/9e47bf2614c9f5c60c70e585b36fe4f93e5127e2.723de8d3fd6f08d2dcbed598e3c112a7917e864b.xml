{"nodes":[{"content":"Represents a base class that implements the <xref href=\"System.Data.Common.DbProviderManifest\"></xref> based on an XML definition. You can use the <xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"></xref> class to obtain provider-specific information at runtime.","nodes":[{"pos":[0,273],"content":"Represents a base class that implements the <xref href=\"System.Data.Common.DbProviderManifest\"></xref> based on an XML definition. You can use the <xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"></xref> class to obtain provider-specific information at runtime.","nodes":[{"content":"Represents a base class that implements the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbProviderManifest\"&gt;&lt;/xref&gt;</ph> based on an XML definition.","pos":[0,130],"source":"Represents a base class that implements the <xref href=\"System.Data.Common.DbProviderManifest\"></xref> based on an XML definition."},{"content":"You can use the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"&gt;&lt;/xref&gt;</ph> class to obtain provider-specific information at runtime.","pos":[131,273],"source":" You can use the <xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"></xref> class to obtain provider-specific information at runtime."}]}],"pos":[1016,1290],"yaml":true},{"content":"The <xref:System.Data.Common.DbXmlEnabledProviderManifest> class is especially appropriate for the providers whose type mapping to EDM is symmetrical. In symmetrical type mapping scenarios, each storage type maps to a single Entity Data Model (EDM) type regardless of the mapping direction. In other words, the EDM-to-provider type mapping is the same as the provider-to-EDM type mapping.  \n  \n In symmetric mapping scenarios, you can either derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class or the <xref:System.Data.Common.DbProviderManifest> class. We recommend that you derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class for symmetric mapping scenarios because the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class will allow you to specify the manifests declaratively.","nodes":[{"pos":[0,388],"content":"The <xref:System.Data.Common.DbXmlEnabledProviderManifest> class is especially appropriate for the providers whose type mapping to EDM is symmetrical. In symmetrical type mapping scenarios, each storage type maps to a single Entity Data Model (EDM) type regardless of the mapping direction. In other words, the EDM-to-provider type mapping is the same as the provider-to-EDM type mapping.","nodes":[{"content":"The <xref:System.Data.Common.DbXmlEnabledProviderManifest> class is especially appropriate for the providers whose type mapping to EDM is symmetrical. In symmetrical type mapping scenarios, each storage type maps to a single Entity Data Model (EDM) type regardless of the mapping direction. In other words, the EDM-to-provider type mapping is the same as the provider-to-EDM type mapping.","pos":[0,388],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> class is especially appropriate for the providers whose type mapping to EDM is symmetrical.","pos":[0,150],"source":"The <xref:System.Data.Common.DbXmlEnabledProviderManifest> class is especially appropriate for the providers whose type mapping to EDM is symmetrical."},{"content":"In symmetrical type mapping scenarios, each storage type maps to a single Entity Data Model (EDM) type regardless of the mapping direction.","pos":[151,290]},{"content":"In other words, the EDM-to-provider type mapping is the same as the provider-to-EDM type mapping.","pos":[291,388]}]}]},{"pos":[395,890],"content":"In symmetric mapping scenarios, you can either derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class or the <xref:System.Data.Common.DbProviderManifest> class. We recommend that you derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class for symmetric mapping scenarios because the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class will allow you to specify the manifests declaratively.","nodes":[{"content":"In symmetric mapping scenarios, you can either derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class or the <xref:System.Data.Common.DbProviderManifest> class. We recommend that you derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class for symmetric mapping scenarios because the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class will allow you to specify the manifests declaratively.","pos":[0,495],"nodes":[{"content":"In symmetric mapping scenarios, you can either derive your custom provider class from the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> class or the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbProviderManifest&gt;</ph> class.","pos":[0,209],"source":"In symmetric mapping scenarios, you can either derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class or the <xref:System.Data.Common.DbProviderManifest> class."},{"content":"We recommend that you derive your custom provider class from the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> class for symmetric mapping scenarios because the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> class will allow you to specify the manifests declaratively.","pos":[210,495],"source":" We recommend that you derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class for symmetric mapping scenarios because the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class will allow you to specify the manifests declaratively."}]}]}],"pos":[1301,2196],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"></xref> class."}],"pos":[4748,4858],"yaml":true},{"content":"The Entity Framework provides a default implementation that builds the provider manifest information from the given XmlReader.","nodes":[{"pos":[0,126],"content":"The Entity Framework provides a default implementation that builds the provider manifest information from the given XmlReader.","nodes":[{"content":"The Entity Framework provides a default implementation that builds the provider manifest information from the given XmlReader.","pos":[0,126]}]}],"pos":[4869,4996],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlReader\"></xref> object that provides access to the XML data in the provider manifest file.","nodes":[{"pos":[0,119],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> object that provides access to the XML data in the provider manifest file.","source":"An <xref href=\"System.Xml.XmlReader\"></xref> object that provides access to the XML data in the provider manifest file."}],"pos":[5174,5294],"yaml":true},{"content":"Returns the list of facet descriptions for the specified Entity Data Model (EDM) type.","nodes":[{"pos":[0,86],"content":"Returns the list of facet descriptions for the specified Entity Data Model (EDM) type.","nodes":[{"content":"Returns the list of facet descriptions for the specified Entity Data Model (EDM) type.","pos":[0,86]}]}],"pos":[6573,6660],"yaml":true},{"content":"An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> for which the facet descriptions are to be retrieved.","nodes":[{"pos":[0,110],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Metadata.Edm.EdmType\"&gt;&lt;/xref&gt;</ph> for which the facet descriptions are to be retrieved.","source":"An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> for which the facet descriptions are to be retrieved."}],"pos":[6949,7060],"yaml":true},{"content":"A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of facet descriptions for the specified EDM type.","nodes":[{"pos":[0,166],"content":"A collection of type <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> that contains the list of facet descriptions for the specified EDM type.","source":"A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of facet descriptions for the specified EDM type."}],"pos":[7196,7363],"yaml":true},{"content":"Returns the list of provider-supported functions.","nodes":[{"pos":[0,49],"content":"Returns the list of provider-supported functions.","nodes":[{"content":"Returns the list of provider-supported functions.","pos":[0,49]}]}],"pos":[8516,8566],"yaml":true},{"content":"This (not nullable) method does not return user-defined functions. If the provider does not support any functions, this method returns an empty collection.","nodes":[{"pos":[0,155],"content":"This (not nullable) method does not return user-defined functions. If the provider does not support any functions, this method returns an empty collection.","nodes":[{"content":"This (not nullable) method does not return user-defined functions. If the provider does not support any functions, this method returns an empty collection.","pos":[0,155],"nodes":[{"content":"This (not nullable) method does not return user-defined functions.","pos":[0,66]},{"content":"If the provider does not support any functions, this method returns an empty collection.","pos":[67,155]}]}]}],"pos":[8577,8733],"yaml":true,"extradata":"MT"},{"content":"A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of provider-supported functions.","nodes":[{"pos":[0,149],"content":"A collection of type <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> that contains the list of provider-supported functions.","source":"A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of provider-supported functions."}],"pos":[9032,9182],"yaml":true},{"content":"Returns the list of primitive types supported by the storage provider.","nodes":[{"pos":[0,70],"content":"Returns the list of primitive types supported by the storage provider.","nodes":[{"content":"Returns the list of primitive types supported by the storage provider.","pos":[0,70]}]}],"pos":[10308,10379],"yaml":true},{"content":"If the store does not support any type, this (not nullable) method returns an empty collection.","nodes":[{"pos":[0,95],"content":"If the store does not support any type, this (not nullable) method returns an empty collection.","nodes":[{"content":"If the store does not support any type, this (not nullable) method returns an empty collection.","pos":[0,95]}]}],"pos":[10390,10486],"yaml":true,"extradata":"MT"},{"content":"A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of primitive types supported by the storage provider.","nodes":[{"pos":[0,170],"content":"A collection of type <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> that contains the list of primitive types supported by the storage provider.","source":"A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of primitive types supported by the storage provider."}],"pos":[10785,10956],"yaml":true},{"content":"Gets the namespace name supported by this provider manifest.","nodes":[{"pos":[0,60],"content":"Gets the namespace name supported by this provider manifest.","nodes":[{"content":"Gets the namespace name supported by this provider manifest.","pos":[0,60]}]}],"pos":[12074,12135],"yaml":true},{"content":"The namespace name supported by this provider manifest.","nodes":[{"pos":[0,55],"content":"The namespace name supported by this provider manifest.","nodes":[{"content":"The namespace name supported by this provider manifest.","pos":[0,55]}]}],"pos":[12261,12317],"yaml":true},{"content":"Gets the best mapped equivalent Entity Data Model (EDM) type for a specified storage type name.","nodes":[{"pos":[0,95],"content":"Gets the best mapped equivalent Entity Data Model (EDM) type for a specified storage type name.","nodes":[{"content":"Gets the best mapped equivalent Entity Data Model (EDM) type for a specified storage type name.","pos":[0,95]}]}],"pos":[13543,13639],"yaml":true},{"content":"This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary> object, which accepts a storage type name as a key and returns its associated EDM type value.","nodes":[{"pos":[0,179],"content":"This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary> object, which accepts a storage type name as a key and returns its associated EDM type value.","nodes":[{"content":"This property (not nullable) returns the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary&gt;</ph> object, which accepts a storage type name as a key and returns its associated EDM type value.","pos":[0,179],"source":"This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary> object, which accepts a storage type name as a key and returns its associated EDM type value."}]}],"pos":[13650,13830],"yaml":true,"extradata":"MT"},{"content":"The best mapped equivalent EDM type for a specified storage type name.","nodes":[{"pos":[0,70],"content":"The best mapped equivalent EDM type for a specified storage type name.","nodes":[{"content":"The best mapped equivalent EDM type for a specified storage type name.","pos":[0,70]}]}],"pos":[14124,14195],"yaml":true},{"content":"Gets the best mapped equivalent storage primitive type for a specified storage type name.","nodes":[{"pos":[0,89],"content":"Gets the best mapped equivalent storage primitive type for a specified storage type name.","nodes":[{"content":"Gets the best mapped equivalent storage primitive type for a specified storage type name.","pos":[0,89]}]}],"pos":[15451,15541],"yaml":true},{"content":"This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary> object, which accepts a storage type name as a key and returns its associated storage primitive type value.","nodes":[{"pos":[0,193],"content":"This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary> object, which accepts a storage type name as a key and returns its associated storage primitive type value.","nodes":[{"content":"This property (not nullable) returns the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary&gt;</ph> object, which accepts a storage type name as a key and returns its associated storage primitive type value.","pos":[0,193],"source":"This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary> object, which accepts a storage type name as a key and returns its associated storage primitive type value."}]}],"pos":[15552,15746],"yaml":true,"extradata":"MT"},{"content":"The best mapped equivalent storage primitive type for a specified storage type name.","nodes":[{"pos":[0,84],"content":"The best mapped equivalent storage primitive type for a specified storage type name.","nodes":[{"content":"The best mapped equivalent storage primitive type for a specified storage type name.","pos":[0,84]}]}],"pos":[16042,16127],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.DbXmlEnabledProviderManifest\n  commentId: T:System.Data.Common.DbXmlEnabledProviderManifest\n  id: DbXmlEnabledProviderManifest\n  children:\n  - System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)\n  - System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  - System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions\n  - System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes\n  - System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName\n  - System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  - System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  langs:\n  - csharp\n  name: DbXmlEnabledProviderManifest\n  nameWithType: DbXmlEnabledProviderManifest\n  fullName: System.Data.Common.DbXmlEnabledProviderManifest\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Represents a base class that implements the <xref href=\"System.Data.Common.DbProviderManifest\"></xref> based on an XML definition. You can use the <xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"></xref> class to obtain provider-specific information at runtime.\n  remarks: \"The <xref:System.Data.Common.DbXmlEnabledProviderManifest> class is especially appropriate for the providers whose type mapping to EDM is symmetrical. In symmetrical type mapping scenarios, each storage type maps to a single Entity Data Model (EDM) type regardless of the mapping direction. In other words, the EDM-to-provider type mapping is the same as the provider-to-EDM type mapping.  \\n  \\n In symmetric mapping scenarios, you can either derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class or the <xref:System.Data.Common.DbProviderManifest> class. We recommend that you derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class for symmetric mapping scenarios because the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class will allow you to specify the manifests declaratively.\"\n  syntax:\n    content: 'public abstract class DbXmlEnabledProviderManifest : System.Data.Common.DbProviderManifest'\n  inheritance:\n  - System.Object\n  - System.Data.Common.DbProviderManifest\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition\n  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  - System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)\n  - System.Data.Common.DbProviderManifest.GetDbInformation(System.String)\n  - System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.DbProviderManifest.GetInformation(System.String)\n  - System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.DbProviderManifest.StoreSchemaDefinition\n  - System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3\n  - System.Data.Common.DbProviderManifest.StoreSchemaMapping\n  - System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3\n  - System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)\n  commentId: M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)\n  id: '#ctor(System.Xml.XmlReader)'\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  langs:\n  - csharp\n  name: DbXmlEnabledProviderManifest(XmlReader)\n  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)\n  fullName: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Initializes a new instance of the <xref href=\"System.Data.Common.DbXmlEnabledProviderManifest\"></xref> class.\n  remarks: The Entity Framework provides a default implementation that builds the provider manifest information from the given XmlReader.\n  syntax:\n    content: protected DbXmlEnabledProviderManifest (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An <xref href=\"System.Xml.XmlReader\"></xref> object that provides access to the XML data in the provider manifest file.\n  overload: System.Data.Common.DbXmlEnabledProviderManifest.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  commentId: M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  id: GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  langs:\n  - csharp\n  name: GetFacetDescriptions(EdmType)\n  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)\n  fullName: DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Returns the list of facet descriptions for the specified Entity Data Model (EDM) type.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription> GetFacetDescriptions (System.Data.Metadata.Edm.EdmType type);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.EdmType\n      description: An <xref href=\"System.Data.Metadata.Edm.EdmType\"></xref> for which the facet descriptions are to be retrieved.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}\n      description: A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of facet descriptions for the specified EDM type.\n  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions\n  commentId: M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions\n  id: GetStoreFunctions\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  langs:\n  - csharp\n  name: GetStoreFunctions()\n  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions()\n  fullName: DbXmlEnabledProviderManifest.GetStoreFunctions()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Returns the list of provider-supported functions.\n  remarks: This (not nullable) method does not return user-defined functions. If the provider does not support any functions, this method returns an empty collection.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetStoreFunctions ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}\n      description: A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of provider-supported functions.\n  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes\n  commentId: M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes\n  id: GetStoreTypes\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  langs:\n  - csharp\n  name: GetStoreTypes()\n  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes()\n  fullName: DbXmlEnabledProviderManifest.GetStoreTypes()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Returns the list of primitive types supported by the storage provider.\n  remarks: If the store does not support any type, this (not nullable) method returns an empty collection.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetStoreTypes ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}\n      description: A collection of type <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> that contains the list of primitive types supported by the storage provider.\n  overload: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName\n  commentId: P:System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName\n  id: NamespaceName\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  langs:\n  - csharp\n  name: NamespaceName\n  nameWithType: DbXmlEnabledProviderManifest.NamespaceName\n  fullName: DbXmlEnabledProviderManifest.NamespaceName\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Gets the namespace name supported by this provider manifest.\n  syntax:\n    content: public override string NamespaceName { get; }\n    return:\n      type: System.String\n      description: The namespace name supported by this provider manifest.\n  overload: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  commentId: P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  id: StoreTypeNameToEdmPrimitiveType\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  langs:\n  - csharp\n  name: StoreTypeNameToEdmPrimitiveType\n  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  fullName: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Gets the best mapped equivalent Entity Data Model (EDM) type for a specified storage type name.\n  remarks: This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary> object, which accepts a storage type name as a key and returns its associated EDM type value.\n  syntax:\n    content: protected System.Collections.Generic.Dictionary<string,System.Data.Metadata.Edm.PrimitiveType> StoreTypeNameToEdmPrimitiveType { get; }\n    return:\n      type: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}\n      description: The best mapped equivalent EDM type for a specified storage type name.\n  overload: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  commentId: P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  id: StoreTypeNameToStorePrimitiveType\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  langs:\n  - csharp\n  name: StoreTypeNameToStorePrimitiveType\n  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  fullName: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common\n  summary: Gets the best mapped equivalent storage primitive type for a specified storage type name.\n  remarks: This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary> object, which accepts a storage type name as a key and returns its associated storage primitive type value.\n  syntax:\n    content: protected System.Collections.Generic.Dictionary<string,System.Data.Metadata.Edm.PrimitiveType> StoreTypeNameToStorePrimitiveType { get; }\n    return:\n      type: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}\n      description: The best mapped equivalent storage primitive type for a specified storage type name.\n  overload: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.DbProviderManifest\n  parent: System.Data.Common\n  isExternal: false\n  name: DbProviderManifest\n  nameWithType: DbProviderManifest\n  fullName: System.Data.Common.DbProviderManifest\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: DbXmlEnabledProviderManifest(XmlReader)\n  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)\n  fullName: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: GetFacetDescriptions(EdmType)\n  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)\n  fullName: DbXmlEnabledProviderManifest.GetFacetDescriptions(EdmType)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Data.Metadata.Edm.FacetDescription\n  name: FacetDescription\n  nameWithType: FacetDescription\n  fullName: System.Data.Metadata.Edm.FacetDescription\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<FacetDescription>\n  nameWithType: ReadOnlyCollection<FacetDescription>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Metadata.Edm.FacetDescription\n    name: FacetDescription\n    nameWithType: FacetDescription\n    fullName: System.Data.Metadata.Edm.FacetDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Metadata.Edm.EdmType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmType\n  nameWithType: EdmType\n  fullName: System.Data.Metadata.Edm.EdmType\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: GetStoreFunctions()\n  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions()\n  fullName: DbXmlEnabledProviderManifest.GetStoreFunctions()\n- uid: System.Data.Metadata.Edm.EdmFunction\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<EdmFunction>\n  nameWithType: ReadOnlyCollection<EdmFunction>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Metadata.Edm.EdmFunction\n    name: EdmFunction\n    nameWithType: EdmFunction\n    fullName: System.Data.Metadata.Edm.EdmFunction\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: GetStoreTypes()\n  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes()\n  fullName: DbXmlEnabledProviderManifest.GetStoreTypes()\n- uid: System.Data.Metadata.Edm.PrimitiveType\n  name: PrimitiveType\n  nameWithType: PrimitiveType\n  fullName: System.Data.Metadata.Edm.PrimitiveType\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<PrimitiveType>\n  nameWithType: ReadOnlyCollection<PrimitiveType>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Metadata.Edm.PrimitiveType\n    name: PrimitiveType\n    nameWithType: PrimitiveType\n    fullName: System.Data.Metadata.Edm.PrimitiveType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: NamespaceName\n  nameWithType: DbXmlEnabledProviderManifest.NamespaceName\n  fullName: DbXmlEnabledProviderManifest.NamespaceName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: StoreTypeNameToEdmPrimitiveType\n  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  fullName: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n- uid: System.Collections.Generic.Dictionary`2\n  name: Dictionary<TKey,TValue>\n  nameWithType: Dictionary<TKey,TValue>\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>\n- uid: System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.PrimitiveType}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<String,PrimitiveType>\n  nameWithType: Dictionary<String,PrimitiveType>\n  fullName: System.Collections.Generic.Dictionary<System.String,System.Data.Metadata.Edm.PrimitiveType>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: System.Collections.Generic.Dictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Metadata.Edm.PrimitiveType\n    name: PrimitiveType\n    nameWithType: PrimitiveType\n    fullName: System.Data.Metadata.Edm.PrimitiveType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: StoreTypeNameToStorePrimitiveType\n  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  fullName: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.#ctor*\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: DbXmlEnabledProviderManifest\n  nameWithType: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest\n  fullName: DbXmlEnabledProviderManifest.DbXmlEnabledProviderManifest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions*\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: GetFacetDescriptions\n  nameWithType: DbXmlEnabledProviderManifest.GetFacetDescriptions\n  fullName: DbXmlEnabledProviderManifest.GetFacetDescriptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions*\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: GetStoreFunctions\n  nameWithType: DbXmlEnabledProviderManifest.GetStoreFunctions\n  fullName: DbXmlEnabledProviderManifest.GetStoreFunctions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes*\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: GetStoreTypes\n  nameWithType: DbXmlEnabledProviderManifest.GetStoreTypes\n  fullName: DbXmlEnabledProviderManifest.GetStoreTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName*\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: NamespaceName\n  nameWithType: DbXmlEnabledProviderManifest.NamespaceName\n  fullName: DbXmlEnabledProviderManifest.NamespaceName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType*\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: StoreTypeNameToEdmPrimitiveType\n  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  fullName: DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n- uid: System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType*\n  parent: System.Data.Common.DbXmlEnabledProviderManifest\n  isExternal: false\n  name: StoreTypeNameToStorePrimitiveType\n  nameWithType: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  fullName: DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbXmlEnabledProviderManifest.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: ConceptualSchemaDefinition\n  nameWithType: DbProviderManifest.ConceptualSchemaDefinition\n  fullName: DbProviderManifest.ConceptualSchemaDefinition\n- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: ConceptualSchemaDefinitionVersion3\n  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3\n  fullName: DbProviderManifest.ConceptualSchemaDefinitionVersion3\n- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: EscapeLikeArgument(String)\n  nameWithType: DbProviderManifest.EscapeLikeArgument(String)\n  fullName: DbProviderManifest.EscapeLikeArgument(String)\n- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetDbInformation(String)\n  nameWithType: DbProviderManifest.GetDbInformation(String)\n  fullName: DbProviderManifest.GetDbInformation(String)\n- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetEdmType(TypeUsage)\n  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)\n  fullName: DbProviderManifest.GetEdmType(TypeUsage)\n- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetInformation(String)\n  nameWithType: DbProviderManifest.GetInformation(String)\n  fullName: DbProviderManifest.GetInformation(String)\n- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: GetStoreType(TypeUsage)\n  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)\n  fullName: DbProviderManifest.GetStoreType(TypeUsage)\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: StoreSchemaDefinition\n  nameWithType: DbProviderManifest.StoreSchemaDefinition\n  fullName: DbProviderManifest.StoreSchemaDefinition\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: StoreSchemaDefinitionVersion3\n  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3\n  fullName: DbProviderManifest.StoreSchemaDefinitionVersion3\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: StoreSchemaMapping\n  nameWithType: DbProviderManifest.StoreSchemaMapping\n  fullName: DbProviderManifest.StoreSchemaMapping\n- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: StoreSchemaMappingVersion3\n  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3\n  fullName: DbProviderManifest.StoreSchemaMappingVersion3\n- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)\n  parent: System.Data.Common.DbProviderManifest\n  isExternal: false\n  name: SupportsEscapingLikeArgument(Char)\n  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)\n  fullName: DbProviderManifest.SupportsEscapingLikeArgument(Char)\n"}