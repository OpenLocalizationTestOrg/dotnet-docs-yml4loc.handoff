### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.DataContractResolver
  commentId: T:System.Runtime.Serialization.DataContractResolver
  id: DataContractResolver
  children:
  - System.Runtime.Serialization.DataContractResolver.#ctor
  - System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  - System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  langs:
  - csharp
  name: DataContractResolver
  nameWithType: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
  type: Class
  assemblies:
  - System.Runtime.Serialization.Xml
  - System.Runtime.Serialization
  - netstandard
  namespace: System.Runtime.Serialization
  summary: Provides a mechanism for dynamically mapping types to and from `xsi:type` representations during serialization and deserialization.
  remarks: "Developers should be careful about what data is being sent over the wire. You can use transport or message security to secure that data. [!INCLUDE[crdefault](~/includes/crdefault-md.md)] see [Security](~/docs/framework/wcf/samples/security-in-wcf.md).  \n  \n> [!WARNING]\n>  Only use <xref:System.Runtime.Serialization.DataContractResolver> if you are completely sure of what information is being serialized. Malicious types can cause unexpected behavior."
  example:
  - "The following example shows how to derive a class from <xref:System.Runtime.Serialization.DataContractResolver>. For a working sample, see [DataContractResolver](~/docs/framework/wcf/samples/datacontractresolver.md).  \n  \n [!code-csharp[DataContractResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractresolver/cs/datacontractresolver.cs#2)]"
  syntax:
    content: public abstract class DataContractResolver
  inheritance:
  - System.Object
  derivedClasses:
  - System.Data.Objects.ProxyDataContractResolver
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/DataContractResolver.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Runtime.Serialization.DataContractResolver.#ctor
  commentId: M:System.Runtime.Serialization.DataContractResolver.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.DataContractResolver
  langs:
  - csharp
  name: DataContractResolver()
  nameWithType: DataContractResolver.DataContractResolver()
  fullName: DataContractResolver.DataContractResolver()
  type: Constructor
  assemblies:
  - System.Runtime.Serialization.Xml
  - System.Runtime.Serialization
  - netstandard
  namespace: System.Runtime.Serialization
  summary: Initializes a new instance of the <xref href="System.Runtime.Serialization.DataContractResolver"></xref> class.
  syntax:
    content: protected DataContractResolver ();
    parameters: []
  overload: System.Runtime.Serialization.DataContractResolver.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/DataContractResolver.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  commentId: M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  id: ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: System.Runtime.Serialization.DataContractResolver
  langs:
  - csharp
  name: ResolveName(String, String, Type, DataContractResolver)
  nameWithType: DataContractResolver.ResolveName(String, String, Type, DataContractResolver)
  fullName: DataContractResolver.ResolveName(String, String, Type, DataContractResolver)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Xml
  - System.Runtime.Serialization
  - netstandard
  namespace: System.Runtime.Serialization
  summary: Override this method to map the specified `xsi:type` name and namespace to a data contract type during deserialization.
  remarks: If you want to use the known type resolution logic inside your implementation, a reference to it is passed in as the `knownTypeResolver` parameter.
  example:
  - "The following example shows an implementation of the <xref:System.Runtime.Serialization.DataContractResolver.ResolveName%2A> method.  \n  \n [!code-csharp[DataContractResolver#0](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractresolver/cs/datacontractresolver.cs#0)]"
  syntax:
    content: public abstract Type ResolveName (string typeName, string typeNamespace, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver);
    parameters:
    - id: typeName
      type: System.String
      description: The `xsi:type` name to map.
    - id: typeNamespace
      type: System.String
      description: The `xsi:type` namespace to map.
    - id: declaredType
      type: System.Type
      description: The type declared in the data contract.
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
      description: The known type resolver.
    return:
      type: System.Type
      description: The type the `xsi:type` name and namespace is mapped to.
  overload: System.Runtime.Serialization.DataContractResolver.ResolveName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/DataContractResolver.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  commentId: M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  id: TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: System.Runtime.Serialization.DataContractResolver
  langs:
  - csharp
  name: TryResolveType(Type, Type, DataContractResolver, XmlDictionaryString, XmlDictionaryString)
  nameWithType: DataContractResolver.TryResolveType(Type, Type, DataContractResolver, XmlDictionaryString, XmlDictionaryString)
  fullName: DataContractResolver.TryResolveType(Type, Type, DataContractResolver, XmlDictionaryString, XmlDictionaryString)
  type: Method
  assemblies:
  - System.Runtime.Serialization.Xml
  - System.Runtime.Serialization
  - netstandard
  namespace: System.Runtime.Serialization
  summary: Override this method to map a data contract type to an `xsi:type` name and namespace during serialization.
  remarks: If you want to use the known type resolution logic inside your implementation, a reference to it is passed in as the `knownTypeResolver` parameter.
  example:
  - "The following example shows an implementation of the <xref:System.Runtime.Serialization.DataContractResolver.TryResolveType%2A> method.  \n  \n [!code-csharp[DataContractResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractresolver/cs/datacontractresolver.cs#1)]"
  syntax:
    content: public abstract bool TryResolveType (Type type, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver, out System.Xml.XmlDictionaryString typeName, out System.Xml.XmlDictionaryString typeNamespace);
    parameters:
    - id: type
      type: System.Type
      description: The type to map.
    - id: declaredType
      type: System.Type
      description: The type declared in the data contract.
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
      description: The known type resolver.
    - id: typeName
      type: System.Xml.XmlDictionaryString
      description: The xsi:type name.
    - id: typeNamespace
      type: System.Xml.XmlDictionaryString
      description: The xsi:type namespace.
    return:
      type: System.Boolean
      description: '`true` if mapping succeeded; otherwise, `false`.'
  overload: System.Runtime.Serialization.DataContractResolver.TryResolveType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/DataContractResolver.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.DataContractResolver.#ctor
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: DataContractResolver()
  nameWithType: DataContractResolver.DataContractResolver()
  fullName: DataContractResolver.DataContractResolver()
- uid: System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: ResolveName(String, String, Type, DataContractResolver)
  nameWithType: DataContractResolver.ResolveName(String, String, Type, DataContractResolver)
  fullName: DataContractResolver.ResolveName(String, String, Type, DataContractResolver)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.DataContractResolver
  parent: System.Runtime.Serialization
  isExternal: false
  name: DataContractResolver
  nameWithType: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
- uid: System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: TryResolveType(Type, Type, DataContractResolver, XmlDictionaryString, XmlDictionaryString)
  nameWithType: DataContractResolver.TryResolveType(Type, Type, DataContractResolver, XmlDictionaryString, XmlDictionaryString)
  fullName: DataContractResolver.TryResolveType(Type, Type, DataContractResolver, XmlDictionaryString, XmlDictionaryString)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryString
  nameWithType: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Runtime.Serialization.DataContractResolver.#ctor*
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: DataContractResolver
  nameWithType: DataContractResolver.DataContractResolver
  fullName: DataContractResolver.DataContractResolver
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/DataContractResolver.xml
- uid: System.Runtime.Serialization.DataContractResolver.ResolveName*
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: ResolveName
  nameWithType: DataContractResolver.ResolveName
  fullName: DataContractResolver.ResolveName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/DataContractResolver.xml
- uid: System.Runtime.Serialization.DataContractResolver.TryResolveType*
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: TryResolveType
  nameWithType: DataContractResolver.TryResolveType
  fullName: DataContractResolver.TryResolveType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/DataContractResolver.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
