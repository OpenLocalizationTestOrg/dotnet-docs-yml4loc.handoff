{"nodes":[{"content":"The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code.","nodes":[{"pos":[0,145],"content":"The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code.","nodes":[{"content":"The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code.","pos":[0,145]}]}],"pos":[689,835],"yaml":true},{"content":"> [!NOTE]\n>  This exception is not included in the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), but it is thrown by some members that are. To catch the exception in that case, write a `catch` statement for <xref:System.MemberAccessException> instead.  \n  \n This exception is thrown in situations such as the following:  \n  \n-   A private, protected, or internal method that would not be accessible from normal compiled code is accessed from partially trusted code by using reflection.  \n  \n-   A security-critical method is accessed from transparent code.  \n  \n-   The access level of a method in a class library has changed, and one or more assemblies that reference the library have not been recompiled.  \n  \n> [!NOTE]\n>  Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime treats application code as transparent when it is run with partial trust. See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).  \n  \n <xref:System.MethodAccessException> uses the HRESULT COR_E_METHODACCESS, that has the value 0x80131510.  \n  \n For a list of initial property values for an instance of <xref:System.MethodAccessException>, see the <xref:System.MethodAccessException.%23ctor%2A> constructors.","nodes":[{"pos":[2,409],"content":"[!NOTE]\n This exception is not included in the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), but it is thrown by some members that are. To catch the exception in that case, write a `catch` statement for <xref:System.MemberAccessException> instead.","leadings":["","> "],"nodes":[{"content":" This exception is not included in the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), but it is thrown by some members that are. To catch the exception in that case, write a `catch` statement for <xref:System.MemberAccessException> instead.","pos":[8,405],"nodes":[{"content":"This exception is not included in the <bpt id=\"p1\">[</bpt>.NET for Windows Store apps<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id=\"p2\">[</bpt>Portable Class Library<ept id=\"p2\">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, but it is thrown by some members that are.","pos":[1,285],"source":" This exception is not included in the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), but it is thrown by some members that are."},{"content":"To catch the exception in that case, write a <ph id=\"ph1\">`catch`</ph> statement for <ph id=\"ph2\">&lt;xref:System.MemberAccessException&gt;</ph> instead.","pos":[286,397],"source":" To catch the exception in that case, write a `catch` statement for <xref:System.MemberAccessException> instead."}]}]},{"pos":[416,477],"content":"This exception is thrown in situations such as the following:","nodes":[{"content":"This exception is thrown in situations such as the following:","pos":[0,61]}]},{"pos":[487,643],"content":"A private, protected, or internal method that would not be accessible from normal compiled code is accessed from partially trusted code by using reflection.","nodes":[{"content":"A private, protected, or internal method that would not be accessible from normal compiled code is accessed from partially trusted code by using reflection.","pos":[0,156]}]},{"pos":[653,714],"content":"A security-critical method is accessed from transparent code.","nodes":[{"content":"A security-critical method is accessed from transparent code.","pos":[0,61]}]},{"pos":[724,864],"content":"The access level of a method in a class library has changed, and one or more assemblies that reference the library have not been recompiled.","nodes":[{"content":"The access level of a method in a class library has changed, and one or more assemblies that reference the library have not been recompiled.","pos":[0,140]}]},{"pos":[872,1189],"content":"[!NOTE]\n Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime treats application code as transparent when it is run with partial trust. See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).","leadings":["","> "],"nodes":[{"content":" Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime treats application code as transparent when it is run with partial trust. See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).","pos":[8,315],"nodes":[{"content":"Beginning with the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the common language runtime treats application code as transparent when it is run with partial trust.","pos":[1,178],"source":" Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime treats application code as transparent when it is run with partial trust."},{"content":"See <bpt id=\"p1\">[</bpt>Security Considerations for Reflection<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.","pos":[179,307],"source":" See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)."}]}]},{"pos":[1196,1299],"content":"<xref:System.MethodAccessException> uses the HRESULT COR_E_METHODACCESS, that has the value 0x80131510.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.MethodAccessException&gt;</ph> uses the HRESULT COR_E_METHODACCESS, that has the value 0x80131510.","pos":[0,103],"source":"<xref:System.MethodAccessException> uses the HRESULT COR_E_METHODACCESS, that has the value 0x80131510."}]},{"pos":[1306,1468],"content":"For a list of initial property values for an instance of <xref:System.MethodAccessException>, see the <xref:System.MethodAccessException.%23ctor%2A> constructors.","nodes":[{"content":"For a list of initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.MethodAccessException&gt;</ph>, see the <ph id=\"ph2\">&lt;xref:System.MethodAccessException.%23ctor%2A&gt;</ph> constructors.","pos":[0,162],"source":"For a list of initial property values for an instance of <xref:System.MethodAccessException>, see the <xref:System.MethodAccessException.%23ctor%2A> constructors."}]}],"pos":[846,2333],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class, setting the <xref href=\"System.Exception.Message\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"Attempt to access the method failed.\" This message takes into account the current system culture.","nodes":[{"pos":[0,339],"content":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class, setting the <xref href=\"System.Exception.Message\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"Attempt to access the method failed.\" This message takes into account the current system culture.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MethodAccessException\"&gt;&lt;/xref&gt;</ph> class, setting the <ph id=\"ph2\">&lt;xref href=\"System.Exception.Message\"&gt;&lt;/xref&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"Attempt to access the method failed.\"","pos":[0,279],"source":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class, setting the <xref href=\"System.Exception.Message\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"Attempt to access the method failed.\""},{"content":"This message takes into account the current system culture.","pos":[280,339]}]}],"pos":[4790,5130],"yaml":true},{"content":"The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|","nodes":[{"pos":[0,109],"content":"The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.MethodAccessException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.MethodAccessException>."}]},{"pos":[116,124],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[125,130],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[166,207],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[208,253],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[258,292],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[293,328],"content":"The localized error message string.","nodes":[{"content":"The localized error message string.","pos":[0,35]}]}],"pos":[5141,5478],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with a specified error message.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MethodAccessException\"&gt;&lt;/xref&gt;</ph> class with a specified error message.","source":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with a specified error message."}],"pos":[7060,7182],"yaml":true},{"content":"The content of `message` should be understandable to the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,183],"content":"The content of `message` should be understandable to the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of <ph id=\"ph1\">`message`</ph> should be understandable to the user.","pos":[0,62],"source":"The content of `message` should be understandable to the user."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[63,183]}]},{"pos":[190,299],"content":"The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.MethodAccessException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.MethodAccessException>."}]},{"pos":[306,314],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[315,320],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[356,397],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[398,443],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[448,482],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[483,508],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[7193,7712],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that describes the error.","nodes":[{"pos":[0,62],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that describes the error.","source":"A <xref href=\"System.String\"></xref> that describes the error."}],"pos":[7861,7924],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with serialized data.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MethodAccessException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with serialized data."}],"pos":[9755,9867],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"pos":[0,231],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.","pos":[114,231],"source":" For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md)."}]}],"pos":[9878,10110],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[10384,10434],"yaml":true},{"content":"The contextual information about the source or destination.","nodes":[{"pos":[0,59],"content":"The contextual information about the source or destination.","nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]}],"pos":[10529,10589],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,196],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MethodAccessException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[11956,12153],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,462],"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,179],"source":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic) if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[180,462],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[469,578],"content":"The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.MethodAccessException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.MethodAccessException>."}]},{"pos":[585,593],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[594,599],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[635,676],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[677,707],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[712,746],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[747,772],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[12164,12947],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[13113,13175],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,231],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic), the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,231],"source":" If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[13239,13471],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.MethodAccessException\n  commentId: T:System.MethodAccessException\n  id: MethodAccessException\n  children:\n  - System.MethodAccessException.#ctor\n  - System.MethodAccessException.#ctor(System.String)\n  - System.MethodAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.MethodAccessException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: MethodAccessException\n  nameWithType: MethodAccessException\n  fullName: System.MethodAccessException\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code.\n  remarks: \"> [!NOTE]\\n>  This exception is not included in the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), but it is thrown by some members that are. To catch the exception in that case, write a `catch` statement for <xref:System.MemberAccessException> instead.  \\n  \\n This exception is thrown in situations such as the following:  \\n  \\n-   A private, protected, or internal method that would not be accessible from normal compiled code is accessed from partially trusted code by using reflection.  \\n  \\n-   A security-critical method is accessed from transparent code.  \\n  \\n-   The access level of a method in a class library has changed, and one or more assemblies that reference the library have not been recompiled.  \\n  \\n> [!NOTE]\\n>  Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the common language runtime treats application code as transparent when it is run with partial trust. See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).  \\n  \\n <xref:System.MethodAccessException> uses the HRESULT COR_E_METHODACCESS, that has the value 0x80131510.  \\n  \\n For a list of initial property values for an instance of <xref:System.MethodAccessException>, see the <xref:System.MethodAccessException.%23ctor%2A> constructors.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MethodAccessException : MemberAccessException\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.MemberAccessException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MethodAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MethodAccessException.#ctor\n  commentId: M:System.MethodAccessException.#ctor\n  id: '#ctor'\n  parent: System.MethodAccessException\n  langs:\n  - csharp\n  name: MethodAccessException()\n  nameWithType: MethodAccessException.MethodAccessException()\n  fullName: MethodAccessException.MethodAccessException()\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class, setting the <xref href=\"System.Exception.Message\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"Attempt to access the method failed.\" This message takes into account the current system culture.\n  remarks: \"The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The localized error message string.|\"\n  syntax:\n    content: public MethodAccessException ();\n    parameters: []\n  overload: System.MethodAccessException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MethodAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MethodAccessException.#ctor(System.String)\n  commentId: M:System.MethodAccessException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.MethodAccessException\n  langs:\n  - csharp\n  name: MethodAccessException(String)\n  nameWithType: MethodAccessException.MethodAccessException(String)\n  fullName: MethodAccessException.MethodAccessException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with a specified error message.\n  remarks: \"The content of `message` should be understandable to the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public MethodAccessException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that describes the error.\n  overload: System.MethodAccessException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MethodAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MethodAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.MethodAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.MethodAccessException\n  langs:\n  - csharp\n  name: MethodAccessException(SerializationInfo, StreamingContext)\n  nameWithType: MethodAccessException.MethodAccessException(SerializationInfo, StreamingContext)\n  fullName: MethodAccessException.MethodAccessException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).\n  syntax:\n    content: protected MethodAccessException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.MethodAccessException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MethodAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MethodAccessException.#ctor(System.String,System.Exception)\n  commentId: M:System.MethodAccessException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.MethodAccessException\n  langs:\n  - csharp\n  name: MethodAccessException(String, Exception)\n  nameWithType: MethodAccessException.MethodAccessException(String, Exception)\n  fullName: MethodAccessException.MethodAccessException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MethodAccessException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.MethodAccessException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public MethodAccessException (string message, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.MethodAccessException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MethodAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.MemberAccessException\n  parent: System\n  isExternal: false\n  name: MemberAccessException\n  nameWithType: MemberAccessException\n  fullName: System.MemberAccessException\n- uid: System.MethodAccessException.#ctor\n  parent: System.MethodAccessException\n  isExternal: false\n  name: MethodAccessException()\n  nameWithType: MethodAccessException.MethodAccessException()\n  fullName: MethodAccessException.MethodAccessException()\n- uid: System.MethodAccessException.#ctor(System.String)\n  parent: System.MethodAccessException\n  isExternal: false\n  name: MethodAccessException(String)\n  nameWithType: MethodAccessException.MethodAccessException(String)\n  fullName: MethodAccessException.MethodAccessException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.MethodAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.MethodAccessException\n  isExternal: false\n  name: MethodAccessException(SerializationInfo, StreamingContext)\n  nameWithType: MethodAccessException.MethodAccessException(SerializationInfo, StreamingContext)\n  fullName: MethodAccessException.MethodAccessException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.MethodAccessException.#ctor(System.String,System.Exception)\n  parent: System.MethodAccessException\n  isExternal: false\n  name: MethodAccessException(String, Exception)\n  nameWithType: MethodAccessException.MethodAccessException(String, Exception)\n  fullName: MethodAccessException.MethodAccessException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.MethodAccessException.#ctor*\n  parent: System.MethodAccessException\n  isExternal: false\n  name: MethodAccessException\n  nameWithType: MethodAccessException.MethodAccessException\n  fullName: MethodAccessException.MethodAccessException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MethodAccessException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}