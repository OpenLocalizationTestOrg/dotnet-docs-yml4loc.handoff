{"nodes":[{"content":"Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.","nodes":[{"pos":[0,103],"content":"Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.","nodes":[{"content":"Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.","pos":[0,103]}]}],"pos":[2173,2277],"yaml":true},{"content":"Use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas. <xref:System.Runtime.Serialization.XsdDataContractImporter> will transform a set of XML schemas and create the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types that represent the data contract in a selected programming language. To create the code, use the classes in the <xref:System.CodeDom> namespace.  \n  \n Conversely, use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services. That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into a set of XML schemas.  \n  \n> [!NOTE]\n>  To generate CLR types from XML schemas at design time, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). To generated code from XSD files, use the `/dataContractOnly` switch of the tool. You can also use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you need more control over the process or need to do it programmatically.","nodes":[{"pos":[0,521],"content":"Use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas. <xref:System.Runtime.Serialization.XsdDataContractImporter> will transform a set of XML schemas and create the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types that represent the data contract in a selected programming language. To create the code, use the classes in the <xref:System.CodeDom> namespace.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas.","pos":[0,205],"source":"Use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas."},{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> will transform a set of XML schemas and create the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> types that represent the data contract in a selected programming language.","pos":[206,445],"source":" <xref:System.Runtime.Serialization.XsdDataContractImporter> will transform a set of XML schemas and create the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types that represent the data contract in a selected programming language."},{"content":"To create the code, use the classes in the <ph id=\"ph1\">&lt;xref:System.CodeDom&gt;</ph> namespace.","pos":[446,521],"source":" To create the code, use the classes in the <xref:System.CodeDom> namespace."}]},{"pos":[528,920],"content":"Conversely, use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services. That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into a set of XML schemas.","nodes":[{"content":"Conversely, use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services. That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into a set of XML schemas.","pos":[0,392],"nodes":[{"content":"Conversely, use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services.","pos":[0,266],"source":"Conversely, use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services."},{"content":"That is, <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> transforms a set of CLR types into a set of XML schemas.","pos":[267,392],"source":" That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into a set of XML schemas."}]}]},{"pos":[928,1365],"content":"[!NOTE]\n To generate CLR types from XML schemas at design time, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). To generated code from XSD files, use the `/dataContractOnly` switch of the tool. You can also use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you need more control over the process or need to do it programmatically.","leadings":["","> "],"nodes":[{"content":" To generate CLR types from XML schemas at design time, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). To generated code from XSD files, use the `/dataContractOnly` switch of the tool. You can also use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you need more control over the process or need to do it programmatically.","pos":[8,435],"nodes":[{"content":"To generate CLR types from XML schemas at design time, use the <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.","pos":[1,187],"source":" To generate CLR types from XML schemas at design time, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)."},{"content":"To generated code from XSD files, use the <ph id=\"ph1\">`/dataContractOnly`</ph> switch of the tool.","pos":[188,269],"source":" To generated code from XSD files, use the `/dataContractOnly` switch of the tool."},{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> if you need more control over the process or need to do it programmatically.","pos":[270,427],"source":" You can also use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you need more control over the process or need to do it programmatically."}]}]}],"pos":[2288,3661],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractImporter\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.XsdDataContractImporter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractImporter\"></xref> class."}],"pos":[5816,5931],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractImporter\"></xref> class with the <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that will be used to generate CLR code.","nodes":[{"pos":[0,214],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.XsdDataContractImporter\"&gt;&lt;/xref&gt;</ph> class with the <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph> that will be used to generate CLR code.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractImporter\"></xref> class with the <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that will be used to generate CLR code."}],"pos":[7343,7558],"yaml":true},{"content":"Use this constructor to add more code into a <xref:System.CodeDom.CodeCompileUnit> that has already been generated.","nodes":[{"pos":[0,115],"content":"Use this constructor to add more code into a <xref:System.CodeDom.CodeCompileUnit> that has already been generated.","nodes":[{"content":"Use this constructor to add more code into a <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> that has already been generated.","pos":[0,115],"source":"Use this constructor to add more code into a <xref:System.CodeDom.CodeCompileUnit> that has already been generated."}]}],"pos":[7569,7685],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that will be used to store the code.","nodes":[{"pos":[0,92],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph> that will be used to store the code.","source":"The <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that will be used to store the code."}],"pos":[8539,8632],"yaml":true},{"content":"Gets a value that indicates whether the schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.","nodes":[{"pos":[0,194],"content":"Gets a value that indicates whether the schemas contained in an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> can be transformed into a <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether the schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>."}],"pos":[9921,10116],"yaml":true},{"content":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schemas to transform.","source":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform."}],"pos":[10830,10924],"yaml":true},{"content":"`true` if the schemas can be transformed to data contract types; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the schemas can be transformed to data contract types; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the schemas can be transformed to data contract types; otherwise, `false`."}],"pos":[10982,11069],"yaml":true},{"content":"The <code>schemas</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemas</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>schemas</code> parameter is `null`."}],"pos":[11261,11307],"yaml":true},{"content":"A data contract involved in the import is invalid.","nodes":[{"pos":[0,50],"content":"A data contract involved in the import is invalid.","nodes":[{"content":"A data contract involved in the import is invalid.","pos":[0,50]}]}],"pos":[11467,11518],"yaml":true},{"content":"Gets a value that indicates whether the specified set of types contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into CLR types generated into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.","nodes":[{"pos":[0,234],"content":"Gets a value that indicates whether the specified set of types contained in an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> can be transformed into CLR types generated into a <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether the specified set of types contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into CLR types generated into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>."}],"pos":[13015,13250],"yaml":true},{"content":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schemas to transform.","source":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform."}],"pos":[13512,13606],"yaml":true},{"content":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the set of schema types to import.","nodes":[{"pos":[0,167],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that represents the set of schema types to import.","source":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the set of schema types to import."}],"pos":[13725,13893],"yaml":true},{"content":"`true` if the schemas can be transformed; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if the schemas can be transformed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the schemas can be transformed; otherwise, `false`."}],"pos":[13951,14015],"yaml":true},{"content":"The <code>schemas</code> or <code>typeNames</code> parameter is `null`.","nodes":[{"pos":[0,71],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemas</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">typeNames</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"The <code>schemas</code> or <code>typeNames</code> parameter is `null`."}],"pos":[14207,14279],"yaml":true},{"content":"A data contract involved in the import is invalid.","nodes":[{"pos":[0,50],"content":"A data contract involved in the import is invalid.","nodes":[{"content":"A data contract involved in the import is invalid.","pos":[0,50]}]}],"pos":[14439,14490],"yaml":true},{"content":"Gets a value that indicates whether a specific schema element contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be imported.","nodes":[{"pos":[0,146],"content":"Gets a value that indicates whether a specific schema element contained in an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> can be imported.","source":"Gets a value that indicates whether a specific schema element contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be imported."}],"pos":[15849,15996],"yaml":true},{"content":"This method checks the type and all schema types referenced from it.","nodes":[{"pos":[0,68],"content":"This method checks the type and all schema types referenced from it.","nodes":[{"content":"This method checks the type and all schema types referenced from it.","pos":[0,68]}]}],"pos":[16007,16076],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to import.","nodes":[{"pos":[0,65],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> to import.","source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to import."}],"pos":[16303,16369],"yaml":true},{"content":"A specific <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> to check in the set of schemas.","nodes":[{"pos":[0,98],"content":"A specific <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaElement\"&gt;&lt;/xref&gt;</ph> to check in the set of schemas.","source":"A specific <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> to check in the set of schemas."}],"pos":[16453,16552],"yaml":true},{"content":"`true` if the element can be imported; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the element can be imported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the element can be imported; otherwise, `false`."}],"pos":[16610,16671],"yaml":true},{"content":"The <code>schemas</code> or <code>element</code> parameter is `null`.","nodes":[{"pos":[0,69],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemas</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">element</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"The <code>schemas</code> or <code>element</code> parameter is `null`."}],"pos":[16863,16933],"yaml":true},{"content":"A data contract involved in the import is invalid.","nodes":[{"pos":[0,50],"content":"A data contract involved in the import is invalid.","nodes":[{"content":"A data contract involved in the import is invalid.","pos":[0,50]}]}],"pos":[17093,17144],"yaml":true},{"content":"Gets a value that indicates whether the schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.","nodes":[{"pos":[0,194],"content":"Gets a value that indicates whether the schemas contained in an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> can be transformed into a <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether the schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>."}],"pos":[18482,18677],"yaml":true},{"content":"For more information about types that can be imported, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).","nodes":[{"pos":[0,198],"content":"For more information about types that can be imported, see <bpt id=\"p1\">[</bpt>Types Supported by the Data Contract Serializer<ept id=\"p1\">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.","source":"For more information about types that can be imported, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)."}],"pos":[18688,18887],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schema representations.","source":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations."}],"pos":[19108,19204],"yaml":true},{"content":"An <xref href=\"System.Collections.IList\"></xref> of <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the names of the schema types that need to be imported from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.","nodes":[{"pos":[0,232],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that specifies the names of the schema types that need to be imported from the <ph id=\"ph3\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IList\"></xref> of <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the names of the schema types that need to be imported from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."}],"pos":[19282,19515],"yaml":true},{"content":"`true` if the schemas can be transformed to data contract types; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the schemas can be transformed to data contract types; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the schemas can be transformed to data contract types; otherwise, `false`."}],"pos":[19573,19660],"yaml":true},{"content":"The <code>schemas</code> or <code>typeName</code> parameter is `null`.","nodes":[{"pos":[0,70],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemas</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">typeName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"The <code>schemas</code> or <code>typeName</code> parameter is `null`."}],"pos":[19852,19923],"yaml":true},{"content":"A data contract involved in the import is invalid.","nodes":[{"pos":[0,50],"content":"A data contract involved in the import is invalid.","nodes":[{"content":"A data contract involved in the import is invalid.","pos":[0,50]}]}],"pos":[20083,20134],"yaml":true},{"content":"Gets a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> used for storing the CLR types generated.","nodes":[{"pos":[0,100],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph> used for storing the CLR types generated.","source":"Gets a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> used for storing the CLR types generated."}],"pos":[21234,21335],"yaml":true},{"content":"Call this property after importing schemas using the <xref:System.Runtime.Serialization.XsdDataContractImporter> to access the <xref:System.CodeDom.CodeCompileUnit> in which all the generated code is stored.","nodes":[{"pos":[0,207],"content":"Call this property after importing schemas using the <xref:System.Runtime.Serialization.XsdDataContractImporter> to access the <xref:System.CodeDom.CodeCompileUnit> in which all the generated code is stored.","nodes":[{"content":"Call this property after importing schemas using the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> to access the <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> in which all the generated code is stored.","pos":[0,207],"source":"Call this property after importing schemas using the <xref:System.Runtime.Serialization.XsdDataContractImporter> to access the <xref:System.CodeDom.CodeCompileUnit> in which all the generated code is stored."}]}],"pos":[21346,21554],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> used to store the CLR types generated.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph> used to store the CLR types generated.","source":"A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> used to store the CLR types generated."}],"pos":[22224,22317],"yaml":true},{"content":"Returns a <xref href=\"System.CodeDom.CodeTypeReference\"></xref> to the CLR type generated for the schema type with the specified <xref href=\"System.Xml.XmlQualifiedName\"></xref>.","nodes":[{"pos":[0,178],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> to the CLR type generated for the schema type with the specified <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.CodeDom.CodeTypeReference\"></xref> to the CLR type generated for the schema type with the specified <xref href=\"System.Xml.XmlQualifiedName\"></xref>."}],"pos":[23685,23864],"yaml":true},{"content":"Use this method to look up the reference to a generated CLR type after calling the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method. The <xref:System.CodeDom.CodeTypeReference> contains the name of the generated type and can be used to look up the corresponding <xref:System.CodeDom.CodeTypeDeclaration> in the <xref:System.CodeDom.CodeCompileUnit>.","nodes":[{"pos":[0,377],"content":"Use this method to look up the reference to a generated CLR type after calling the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method. The <xref:System.CodeDom.CodeTypeReference> contains the name of the generated type and can be used to look up the corresponding <xref:System.CodeDom.CodeTypeDeclaration> in the <xref:System.CodeDom.CodeCompileUnit>.","nodes":[{"content":"Use this method to look up the reference to a generated CLR type after calling the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method. The <xref:System.CodeDom.CodeTypeReference> contains the name of the generated type and can be used to look up the corresponding <xref:System.CodeDom.CodeTypeDeclaration> in the <xref:System.CodeDom.CodeCompileUnit>.","pos":[0,377],"nodes":[{"content":"Use this method to look up the reference to a generated CLR type after calling the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method.","pos":[0,160],"source":"Use this method to look up the reference to a generated CLR type after calling the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> contains the name of the generated type and can be used to look up the corresponding <ph id=\"ph2\">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.","pos":[161,377],"source":" The <xref:System.CodeDom.CodeTypeReference> contains the name of the generated type and can be used to look up the corresponding <xref:System.CodeDom.CodeTypeDeclaration> in the <xref:System.CodeDom.CodeCompileUnit>."}]}]}],"pos":[23875,24253],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the schema type to look up.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that specifies the schema type to look up.","source":"The <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the schema type to look up."}],"pos":[24471,24567],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> reference to the CLR type generated for the schema type with the <code>typeName</code> specified.","nodes":[{"pos":[0,153],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> reference to the CLR type generated for the schema type with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">typeName</ph><ept id=\"p1\">&lt;/code&gt;</ept> specified.","source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> reference to the CLR type generated for the schema type with the <code>typeName</code> specified."}],"pos":[24643,24797],"yaml":true},{"content":"Returns a <xref href=\"System.CodeDom.CodeTypeReference\"></xref> for the specified XML qualified element and schema element.","nodes":[{"pos":[0,123],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> for the specified XML qualified element and schema element.","source":"Returns a <xref href=\"System.CodeDom.CodeTypeReference\"></xref> for the specified XML qualified element and schema element."}],"pos":[26329,26453],"yaml":true},{"content":"The schema element is needed for data about the type that is specified at the element scope. The main example of this is the XSD attribute `nillable`. In schema, setting `nillable` to `true` is specified on the containing schema element whereas the concept of null is expressed in the CLR type <xref:System.Nullable%601>. The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.  \n  \n When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.","nodes":[{"pos":[0,461],"content":"The schema element is needed for data about the type that is specified at the element scope. The main example of this is the XSD attribute `nillable`. In schema, setting `nillable` to `true` is specified on the containing schema element whereas the concept of null is expressed in the CLR type <xref:System.Nullable%601>. The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.","nodes":[{"content":"The schema element is needed for data about the type that is specified at the element scope.","pos":[0,92]},{"content":"The main example of this is the XSD attribute <ph id=\"ph1\">`nillable`</ph>.","pos":[93,150],"source":" The main example of this is the XSD attribute `nillable`."},{"content":"In schema, setting <ph id=\"ph1\">`nillable`</ph> to <ph id=\"ph2\">`true`</ph> is specified on the containing schema element whereas the concept of null is expressed in the CLR type <ph id=\"ph3\">&lt;xref:System.Nullable%601&gt;</ph>.","pos":[151,321],"source":" In schema, setting `nillable` to `true` is specified on the containing schema element whereas the concept of null is expressed in the CLR type <xref:System.Nullable%601>."},{"content":"The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.","pos":[322,461]}]},{"pos":[468,596],"content":"When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.","nodes":[{"content":"When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.","pos":[0,128]}]}],"pos":[26464,27065],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the XML qualified name of the schema type to look up.","nodes":[{"pos":[0,120],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that specifies the XML qualified name of the schema type to look up.","source":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the XML qualified name of the schema type to look up."}],"pos":[27327,27448],"yaml":true},{"content":"An <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> that specifies an element in an XML schema.","nodes":[{"pos":[0,102],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaElement\"&gt;&lt;/xref&gt;</ph> that specifies an element in an XML schema.","source":"An <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> that specifies an element in an XML schema."}],"pos":[27532,27635],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that represents the type that was generated for the specified schema type.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> that represents the type that was generated for the specified schema type.","source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that represents the type that was generated for the specified schema type."}],"pos":[27711,27842],"yaml":true},{"content":"Returns a list of <xref href=\"System.CodeDom.CodeTypeReference\"></xref> objects that represents the known types generated when generating code for the specified schema type.","nodes":[{"pos":[0,173],"content":"Returns a list of <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph> objects that represents the known types generated when generating code for the specified schema type.","source":"Returns a list of <xref href=\"System.CodeDom.CodeTypeReference\"></xref> objects that represents the known types generated when generating code for the specified schema type."}],"pos":[29227,29401],"yaml":true},{"content":"When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema. In many cases, these known types are added using attributes to the generated code. (For example, see the <xref:System.Runtime.Serialization.KnownTypeAttribute> class. ) However, for the top-level type, there needs to be a way to return the set of known types generated. This method returns the <xref:System.CodeDom.CodeTypeReference> for known types that were generated for a specific schema type.  \n  \n For more information, see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md).","nodes":[{"pos":[0,526],"content":"When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema. In many cases, these known types are added using attributes to the generated code. (For example, see the <xref:System.Runtime.Serialization.KnownTypeAttribute> class. ) However, for the top-level type, there needs to be a way to return the set of known types generated. This method returns the <xref:System.CodeDom.CodeTypeReference> for known types that were generated for a specific schema type.","nodes":[{"content":"When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema. In many cases, these known types are added using attributes to the generated code. (For example, see the <xref:System.Runtime.Serialization.KnownTypeAttribute> class. ) However, for the top-level type, there needs to be a way to return the set of known types generated. This method returns the <xref:System.CodeDom.CodeTypeReference> for known types that were generated for a specific schema type.","pos":[0,526],"nodes":[{"content":"When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema.","pos":[0,128]},{"content":"In many cases, these known types are added using attributes to the generated code.","pos":[129,211]},{"content":"(For example, see the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> class.","pos":[212,295],"source":" (For example, see the <xref:System.Runtime.Serialization.KnownTypeAttribute> class."},{"content":") However, for the top-level type, there needs to be a way to return the set of known types generated.","pos":[296,398]},{"content":"This method returns the <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> for known types that were generated for a specific schema type.","pos":[399,526],"source":" This method returns the <xref:System.CodeDom.CodeTypeReference> for known types that were generated for a specific schema type."}]}]},{"pos":[533,654],"content":"For more information, see <bpt id=\"p1\">[</bpt>Data Contract Known Types<ept id=\"p1\">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>.","source":"For more information, see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md)."}],"pos":[29412,30071],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the schema type to look up known types for.","nodes":[{"pos":[0,111],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that represents the schema type to look up known types for.","source":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the schema type to look up known types for."}],"pos":[30331,30443],"yaml":true},{"content":"A <xref href=\"System.Collections.Generic.IList`1\"></xref> of type <xref href=\"System.CodeDom.CodeTypeReference\"></xref>.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Collections.Generic.IList`1\"></xref> of type <xref href=\"System.CodeDom.CodeTypeReference\"></xref>."}],"pos":[30559,30680],"yaml":true},{"content":"Transforms the specified set of XML schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.","nodes":[{"pos":[0,171],"content":"Transforms the specified set of XML schemas contained in an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> into a <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph>.","source":"Transforms the specified set of XML schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>."}],"pos":[31968,32140],"yaml":true},{"content":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations to generate CLR types for.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schema representations to generate CLR types for.","source":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations to generate CLR types for."}],"pos":[33021,33143],"yaml":true},{"content":"The <code>schemas</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemas</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>schemas</code> parameter is `null`."}],"pos":[33332,33378],"yaml":true},{"content":"Transforms the specified set of schema types contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into CLR types generated into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.","nodes":[{"pos":[0,197],"content":"Transforms the specified set of schema types contained in an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> into CLR types generated into a <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph>.","source":"Transforms the specified set of schema types contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into CLR types generated into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>."}],"pos":[34857,35055],"yaml":true},{"content":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schema representations.","source":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations."}],"pos":[35314,35410],"yaml":true},{"content":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Xml.XmlQualifiedName\"></xref>) that represents the set of schema types to import.","nodes":[{"pos":[0,168],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> (of <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph>) that represents the set of schema types to import.","source":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Xml.XmlQualifiedName\"></xref>) that represents the set of schema types to import."}],"pos":[35529,35698],"yaml":true},{"content":"Transforms the specified schema element in the set of specified XML schemas into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> and returns an <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the data contract name for the specified element.","nodes":[{"pos":[0,264],"content":"Transforms the specified schema element in the set of specified XML schemas into a <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph> and returns an <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that represents the data contract name for the specified element.","source":"Transforms the specified schema element in the set of specified XML schemas into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> and returns an <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the data contract name for the specified element."}],"pos":[37129,37394],"yaml":true},{"content":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform.","nodes":[{"pos":[0,94],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schemas to transform.","source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform."}],"pos":[37641,37736],"yaml":true},{"content":"An <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> that represents the specific schema element to transform.","nodes":[{"pos":[0,116],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaElement\"&gt;&lt;/xref&gt;</ph> that represents the specific schema element to transform.","source":"An <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> that represents the specific schema element to transform."}],"pos":[37820,37937],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the specified element.","nodes":[{"pos":[0,90],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that represents the specified element.","source":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the specified element."}],"pos":[38008,38099],"yaml":true},{"content":"The <code>schemas</code> or <code>element</code> parameter is `null`.","nodes":[{"pos":[0,69],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemas</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">element</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"The <code>schemas</code> or <code>element</code> parameter is `null`."}],"pos":[38288,38358],"yaml":true},{"content":"Transforms the specified XML schema type contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.","nodes":[{"pos":[0,168],"content":"Transforms the specified XML schema type contained in an <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> into a <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph>.","source":"Transforms the specified XML schema type contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>."}],"pos":[39678,39847],"yaml":true},{"content":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schema representations.","source":"A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations."}],"pos":[40065,40161],"yaml":true},{"content":"A <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents a specific schema type to import.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that represents a specific schema type to import.","source":"A <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents a specific schema type to import."}],"pos":[40239,40340],"yaml":true},{"content":"The <code>schemas</code> or <code>typeName</code> parameter is `null`.","nodes":[{"pos":[0,70],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemas</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">typeName</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"The <code>schemas</code> or <code>typeName</code> parameter is `null`."}],"pos":[40529,40600],"yaml":true},{"content":"Gets or sets an <xref href=\"System.Runtime.Serialization.ImportOptions\"></xref> that contains settable options for the import operation.","nodes":[{"pos":[0,136],"content":"Gets or sets an <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ImportOptions\"&gt;&lt;/xref&gt;</ph> that contains settable options for the import operation.","source":"Gets or sets an <xref href=\"System.Runtime.Serialization.ImportOptions\"></xref> that contains settable options for the import operation."}],"pos":[41652,41789],"yaml":true},{"content":"Use the <xref:System.Runtime.Serialization.ImportOptions> class to customize how the CLR types are generated during schema import.","nodes":[{"pos":[0,130],"content":"Use the <xref:System.Runtime.Serialization.ImportOptions> class to customize how the CLR types are generated during schema import.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph> class to customize how the CLR types are generated during schema import.","pos":[0,130],"source":"Use the <xref:System.Runtime.Serialization.ImportOptions> class to customize how the CLR types are generated during schema import."}]}],"pos":[41800,41931],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.Serialization.ImportOptions\"></xref> that contains settable options.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ImportOptions\"&gt;&lt;/xref&gt;</ph> that contains settable options.","source":"A <xref href=\"System.Runtime.Serialization.ImportOptions\"></xref> that contains settable options."}],"pos":[42112,42210],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.XsdDataContractImporter\n  commentId: T:System.Runtime.Serialization.XsdDataContractImporter\n  id: XsdDataContractImporter\n  children:\n  - System.Runtime.Serialization.XsdDataContractImporter.#ctor\n  - System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)\n  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)\n  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  - System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit\n  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)\n  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)\n  - System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)\n  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)\n  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  - System.Runtime.Serialization.XsdDataContractImporter.Options\n  langs:\n  - csharp\n  name: XsdDataContractImporter\n  nameWithType: XsdDataContractImporter\n  fullName: System.Runtime.Serialization.XsdDataContractImporter\n  type: Class\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.\n  remarks: \"Use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas. <xref:System.Runtime.Serialization.XsdDataContractImporter> will transform a set of XML schemas and create the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types that represent the data contract in a selected programming language. To create the code, use the classes in the <xref:System.CodeDom> namespace.  \\n  \\n Conversely, use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services. That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into a set of XML schemas.  \\n  \\n> [!NOTE]\\n>  To generate CLR types from XML schemas at design time, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md). To generated code from XSD files, use the `/dataContractOnly` switch of the tool. You can also use the <xref:System.Runtime.Serialization.XsdDataContractImporter> if you need more control over the process or need to do it programmatically.\"\n  example:\n  - \"The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \\n  \\n [!code-csharp[XsdDataContractImporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#0)]\\n [!code-vb[XsdDataContractImporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#0)]\"\n  syntax:\n    content: public class XsdDataContractImporter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: XsdDataContractImporter()\n  nameWithType: XsdDataContractImporter.XsdDataContractImporter()\n  fullName: XsdDataContractImporter.XsdDataContractImporter()\n  type: Constructor\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractImporter\"></xref> class.\n  syntax:\n    content: public XsdDataContractImporter ();\n    parameters: []\n  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)\n  id: '#ctor(System.CodeDom.CodeCompileUnit)'\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: XsdDataContractImporter(CodeCompileUnit)\n  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)\n  fullName: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractImporter\"></xref> class with the <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that will be used to generate CLR code.\n  remarks: Use this constructor to add more code into a <xref:System.CodeDom.CodeCompileUnit> that has already been generated.\n  example:\n  - \"The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \\n  \\n [!code-csharp[XsdDataContractImporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#1)]\\n [!code-vb[XsdDataContractImporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#1)]\"\n  syntax:\n    content: public XsdDataContractImporter (System.CodeDom.CodeCompileUnit codeCompileUnit);\n    parameters:\n    - id: codeCompileUnit\n      type: System.CodeDom.CodeCompileUnit\n      description: The <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> that will be used to store the code.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)\n  id: CanImport(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: CanImport(XmlSchemaSet)\n  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)\n  fullName: XsdDataContractImporter.CanImport(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Gets a value that indicates whether the schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to determine whether the <xref:System.CodeDom.CodeCompileUnit> can be generated.  \\n  \\n [!code-csharp[XsdDataContractImporter#2](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#2)]\\n [!code-vb[XsdDataContractImporter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#2)]\"\n  syntax:\n    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform.\n    return:\n      type: System.Boolean\n      description: '`true` if the schemas can be transformed to data contract types; otherwise, `false`.'\n  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemas</code> parameter is `null`.\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: A data contract involved in the import is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: CanImport(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  fullName: XsdDataContractImporter.CanImport(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Gets a value that indicates whether the specified set of types contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into CLR types generated into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.\n  syntax:\n    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform.\n    - id: typeNames\n      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}\n      description: An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the set of schema types to import.\n    return:\n      type: System.Boolean\n      description: '`true` if the schemas can be transformed; otherwise, `false`.'\n  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemas</code> or <code>typeNames</code> parameter is `null`.\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: A data contract involved in the import is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: CanImport(XmlSchemaSet, XmlSchemaElement)\n  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet, XmlSchemaElement)\n  fullName: XsdDataContractImporter.CanImport(XmlSchemaSet, XmlSchemaElement)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Gets a value that indicates whether a specific schema element contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be imported.\n  remarks: This method checks the type and all schema types referenced from it.\n  syntax:\n    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> to import.\n    - id: element\n      type: System.Xml.Schema.XmlSchemaElement\n      description: A specific <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> to check in the set of schemas.\n    return:\n      type: System.Boolean\n      description: '`true` if the element can be imported; otherwise, `false`.'\n  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemas</code> or <code>element</code> parameter is `null`.\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: A data contract involved in the import is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: CanImport(XmlSchemaSet, XmlQualifiedName)\n  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet, XmlQualifiedName)\n  fullName: XsdDataContractImporter.CanImport(XmlSchemaSet, XmlQualifiedName)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Gets a value that indicates whether the schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> can be transformed into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.\n  remarks: For more information about types that can be imported, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).\n  syntax:\n    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations.\n    - id: typeName\n      type: System.Xml.XmlQualifiedName\n      description: An <xref href=\"System.Collections.IList\"></xref> of <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the names of the schema types that need to be imported from the <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the schemas can be transformed to data contract types; otherwise, `false`.'\n  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemas</code> or <code>typeName</code> parameter is `null`.\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: A data contract involved in the import is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit\n  commentId: P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit\n  id: CodeCompileUnit\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: CodeCompileUnit\n  nameWithType: XsdDataContractImporter.CodeCompileUnit\n  fullName: XsdDataContractImporter.CodeCompileUnit\n  type: Property\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Gets a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> used for storing the CLR types generated.\n  remarks: Call this property after importing schemas using the <xref:System.Runtime.Serialization.XsdDataContractImporter> to access the <xref:System.CodeDom.CodeCompileUnit> in which all the generated code is stored.\n  example:\n  - \"The following example uses creates a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both a Visual C# and Visual Basic code file.  \\n  \\n [!code-csharp[XsdDataContractImporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#1)]\\n [!code-vb[XsdDataContractImporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#1)]\"\n  syntax:\n    content: public System.CodeDom.CodeCompileUnit CodeCompileUnit { get; }\n    return:\n      type: System.CodeDom.CodeCompileUnit\n      description: A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> used to store the CLR types generated.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)\n  id: GetCodeTypeReference(System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: GetCodeTypeReference(XmlQualifiedName)\n  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)\n  fullName: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Returns a <xref href=\"System.CodeDom.CodeTypeReference\"></xref> to the CLR type generated for the schema type with the specified <xref href=\"System.Xml.XmlQualifiedName\"></xref>.\n  remarks: Use this method to look up the reference to a generated CLR type after calling the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method. The <xref:System.CodeDom.CodeTypeReference> contains the name of the generated type and can be used to look up the corresponding <xref:System.CodeDom.CodeTypeDeclaration> in the <xref:System.CodeDom.CodeCompileUnit>.\n  syntax:\n    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName);\n    parameters:\n    - id: typeName\n      type: System.Xml.XmlQualifiedName\n      description: The <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the schema type to look up.\n    return:\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> reference to the CLR type generated for the schema type with the <code>typeName</code> specified.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)\n  id: GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: GetCodeTypeReference(XmlQualifiedName, XmlSchemaElement)\n  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName, XmlSchemaElement)\n  fullName: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName, XmlSchemaElement)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Returns a <xref href=\"System.CodeDom.CodeTypeReference\"></xref> for the specified XML qualified element and schema element.\n  remarks: \"The schema element is needed for data about the type that is specified at the element scope. The main example of this is the XSD attribute `nillable`. In schema, setting `nillable` to `true` is specified on the containing schema element whereas the concept of null is expressed in the CLR type <xref:System.Nullable%601>. The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.  \\n  \\n When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.\"\n  syntax:\n    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName, System.Xml.Schema.XmlSchemaElement element);\n    parameters:\n    - id: typeName\n      type: System.Xml.XmlQualifiedName\n      description: An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that specifies the XML qualified name of the schema type to look up.\n    - id: element\n      type: System.Xml.Schema.XmlSchemaElement\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> that specifies an element in an XML schema.\n    return:\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that represents the type that was generated for the specified schema type.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)\n  id: GetKnownTypeReferences(System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: GetKnownTypeReferences(XmlQualifiedName)\n  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)\n  fullName: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Returns a list of <xref href=\"System.CodeDom.CodeTypeReference\"></xref> objects that represents the known types generated when generating code for the specified schema type.\n  remarks: \"When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema. In many cases, these known types are added using attributes to the generated code. (For example, see the <xref:System.Runtime.Serialization.KnownTypeAttribute> class. ) However, for the top-level type, there needs to be a way to return the set of known types generated. This method returns the <xref:System.CodeDom.CodeTypeReference> for known types that were generated for a specific schema type.  \\n  \\n For more information, see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md).\"\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference> GetKnownTypeReferences (System.Xml.XmlQualifiedName typeName);\n    parameters:\n    - id: typeName\n      type: System.Xml.XmlQualifiedName\n      description: An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the schema type to look up known types for.\n    return:\n      type: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}\n      description: A <xref href=\"System.Collections.Generic.IList`1\"></xref> of type <xref href=\"System.CodeDom.CodeTypeReference\"></xref>.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)\n  id: Import(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: Import(XmlSchemaSet)\n  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)\n  fullName: XsdDataContractImporter.Import(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Transforms the specified set of XML schemas contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to test whether a set of schemas can be imported. If the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method returns `true`, the code invokes the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method.  \\n  \\n [!code-csharp[XsdDataContractImporter#2](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#2)]\\n [!code-vb[XsdDataContractImporter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#2)]\"\n  syntax:\n    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations to generate CLR types for.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemas</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  id: Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: Import(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  fullName: XsdDataContractImporter.Import(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Transforms the specified set of schema types contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into CLR types generated into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.\n  syntax:\n    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations.\n    - id: typeNames\n      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}\n      description: A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Xml.XmlQualifiedName\"></xref>) that represents the set of schema types to import.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: Import(XmlSchemaSet, XmlSchemaElement)\n  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet, XmlSchemaElement)\n  fullName: XsdDataContractImporter.Import(XmlSchemaSet, XmlSchemaElement)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Transforms the specified schema element in the set of specified XML schemas into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> and returns an <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the data contract name for the specified element.\n  syntax:\n    content: public System.Xml.XmlQualifiedName Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to transform.\n    - id: element\n      type: System.Xml.Schema.XmlSchemaElement\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaElement\"></xref> that represents the specific schema element to transform.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the specified element.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemas</code> or <code>element</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  commentId: M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: Import(XmlSchemaSet, XmlQualifiedName)\n  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet, XmlQualifiedName)\n  fullName: XsdDataContractImporter.Import(XmlSchemaSet, XmlQualifiedName)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Transforms the specified XML schema type contained in an <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> into a <xref href=\"System.CodeDom.CodeCompileUnit\"></xref>.\n  syntax:\n    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: A <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schema representations.\n    - id: typeName\n      type: System.Xml.XmlQualifiedName\n      description: A <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents a specific schema type to import.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemas</code> or <code>typeName</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Options\n  commentId: P:System.Runtime.Serialization.XsdDataContractImporter.Options\n  id: Options\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  langs:\n  - csharp\n  name: Options\n  nameWithType: XsdDataContractImporter.Options\n  fullName: XsdDataContractImporter.Options\n  type: Property\n  assemblies:\n  - System.Runtime.Serialization\n  namespace: System.Runtime.Serialization\n  summary: Gets or sets an <xref href=\"System.Runtime.Serialization.ImportOptions\"></xref> that contains settable options for the import operation.\n  remarks: Use the <xref:System.Runtime.Serialization.ImportOptions> class to customize how the CLR types are generated during schema import.\n  syntax:\n    content: public System.Runtime.Serialization.ImportOptions Options { get; set; }\n    return:\n      type: System.Runtime.Serialization.ImportOptions\n      description: A <xref href=\"System.Runtime.Serialization.ImportOptions\"></xref> that contains settable options.\n  overload: System.Runtime.Serialization.XsdDataContractImporter.Options*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Runtime.Serialization.InvalidDataContractException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: InvalidDataContractException\n  nameWithType: InvalidDataContractException\n  fullName: System.Runtime.Serialization.InvalidDataContractException\n- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: XsdDataContractImporter()\n  nameWithType: XsdDataContractImporter.XsdDataContractImporter()\n  fullName: XsdDataContractImporter.XsdDataContractImporter()\n- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: XsdDataContractImporter(CodeCompileUnit)\n  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)\n  fullName: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)\n- uid: System.CodeDom.CodeCompileUnit\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeCompileUnit\n  nameWithType: CodeCompileUnit\n  fullName: System.CodeDom.CodeCompileUnit\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: CanImport(XmlSchemaSet)\n  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)\n  fullName: XsdDataContractImporter.CanImport(XmlSchemaSet)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: CanImport(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  fullName: XsdDataContractImporter.CanImport(XmlSchemaSet, ICollection<XmlQualifiedName>)\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Xml.XmlQualifiedName\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<XmlQualifiedName>\n  nameWithType: ICollection<XmlQualifiedName>\n  fullName: System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    nameWithType: XmlQualifiedName\n    fullName: System.Xml.XmlQualifiedName\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: CanImport(XmlSchemaSet, XmlSchemaElement)\n  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet, XmlSchemaElement)\n  fullName: XsdDataContractImporter.CanImport(XmlSchemaSet, XmlSchemaElement)\n- uid: System.Xml.Schema.XmlSchemaElement\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaElement\n  nameWithType: XmlSchemaElement\n  fullName: System.Xml.Schema.XmlSchemaElement\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: CanImport(XmlSchemaSet, XmlQualifiedName)\n  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet, XmlQualifiedName)\n  fullName: XsdDataContractImporter.CanImport(XmlSchemaSet, XmlQualifiedName)\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: CodeCompileUnit\n  nameWithType: XsdDataContractImporter.CodeCompileUnit\n  fullName: XsdDataContractImporter.CodeCompileUnit\n- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: GetCodeTypeReference(XmlQualifiedName)\n  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)\n  fullName: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)\n- uid: System.CodeDom.CodeTypeReference\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: GetCodeTypeReference(XmlQualifiedName, XmlSchemaElement)\n  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName, XmlSchemaElement)\n  fullName: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName, XmlSchemaElement)\n- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: GetKnownTypeReferences(XmlQualifiedName)\n  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)\n  fullName: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)\n- uid: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<CodeTypeReference>\n  nameWithType: ICollection<CodeTypeReference>\n  fullName: System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.CodeDom.CodeTypeReference\n    name: CodeTypeReference\n    nameWithType: CodeTypeReference\n    fullName: System.CodeDom.CodeTypeReference\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: Import(XmlSchemaSet)\n  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)\n  fullName: XsdDataContractImporter.Import(XmlSchemaSet)\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: Import(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet, ICollection<XmlQualifiedName>)\n  fullName: XsdDataContractImporter.Import(XmlSchemaSet, ICollection<XmlQualifiedName>)\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: Import(XmlSchemaSet, XmlSchemaElement)\n  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet, XmlSchemaElement)\n  fullName: XsdDataContractImporter.Import(XmlSchemaSet, XmlSchemaElement)\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: Import(XmlSchemaSet, XmlQualifiedName)\n  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet, XmlQualifiedName)\n  fullName: XsdDataContractImporter.Import(XmlSchemaSet, XmlQualifiedName)\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Options\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: Options\n  nameWithType: XsdDataContractImporter.Options\n  fullName: XsdDataContractImporter.Options\n- uid: System.Runtime.Serialization.ImportOptions\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ImportOptions\n  nameWithType: ImportOptions\n  fullName: System.Runtime.Serialization.ImportOptions\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport*\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: CanImport\n  nameWithType: XsdDataContractImporter.CanImport\n  fullName: XsdDataContractImporter.CanImport\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor*\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: XsdDataContractImporter\n  nameWithType: XsdDataContractImporter.XsdDataContractImporter\n  fullName: XsdDataContractImporter.XsdDataContractImporter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: CodeCompileUnit\n  nameWithType: XsdDataContractImporter.CodeCompileUnit\n  fullName: XsdDataContractImporter.CodeCompileUnit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: GetCodeTypeReference\n  nameWithType: XsdDataContractImporter.GetCodeTypeReference\n  fullName: XsdDataContractImporter.GetCodeTypeReference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: GetKnownTypeReferences\n  nameWithType: XsdDataContractImporter.GetKnownTypeReferences\n  fullName: XsdDataContractImporter.GetKnownTypeReferences\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Import*\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: Import\n  nameWithType: XsdDataContractImporter.Import\n  fullName: XsdDataContractImporter.Import\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractImporter.Options*\n  parent: System.Runtime.Serialization.XsdDataContractImporter\n  isExternal: false\n  name: Options\n  nameWithType: XsdDataContractImporter.Options\n  fullName: XsdDataContractImporter.Options\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractImporter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}