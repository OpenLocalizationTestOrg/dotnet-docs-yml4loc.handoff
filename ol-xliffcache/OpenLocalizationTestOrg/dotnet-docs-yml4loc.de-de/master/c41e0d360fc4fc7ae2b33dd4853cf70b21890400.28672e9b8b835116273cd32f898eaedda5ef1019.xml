{"nodes":[{"content":"Modifies code generation for runtime just-in-time (JIT) debugging. This class cannot be inherited.","nodes":[{"pos":[0,98],"content":"Modifies code generation for runtime just-in-time (JIT) debugging. This class cannot be inherited.","nodes":[{"content":"Modifies code generation for runtime just-in-time (JIT) debugging. This class cannot be inherited.","pos":[0,98],"nodes":[{"content":"Modifies code generation for runtime just-in-time (JIT) debugging.","pos":[0,66]},{"content":"This class cannot be inherited.","pos":[67,98]}]}]}],"pos":[800,899],"yaml":true},{"content":"The <xref:System.Diagnostics.DebuggableAttribute> controls how the runtime treats code within the module. The runtime might track extra information about generated code, and it might disable certain optimizations based on the values contained within this attribute.  \n  \n A debugger might choose to ignore the <xref:System.Diagnostics.DebuggableAttribute> settings when loading an assembly. However, attaching a debugger to a running program may prevent the debugger from changing the settings because they have already been applied.  \n  \n To use the <xref:System.Diagnostics.DebuggableAttribute> with dynamic assemblies using the Reflection Emit <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> methods, emit the <xref:System.Diagnostics.DebuggableAttribute> before calling the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> methods to ensure that the settings are applied to the entire assembly.  \n  \n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,265],"content":"The <xref:System.Diagnostics.DebuggableAttribute> controls how the runtime treats code within the module. The runtime might track extra information about generated code, and it might disable certain optimizations based on the values contained within this attribute.","nodes":[{"content":"The <xref:System.Diagnostics.DebuggableAttribute> controls how the runtime treats code within the module. The runtime might track extra information about generated code, and it might disable certain optimizations based on the values contained within this attribute.","pos":[0,265],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> controls how the runtime treats code within the module.","pos":[0,105],"source":"The <xref:System.Diagnostics.DebuggableAttribute> controls how the runtime treats code within the module."},{"content":"The runtime might track extra information about generated code, and it might disable certain optimizations based on the values contained within this attribute.","pos":[106,265]}]}]},{"pos":[272,533],"content":"A debugger might choose to ignore the <xref:System.Diagnostics.DebuggableAttribute> settings when loading an assembly. However, attaching a debugger to a running program may prevent the debugger from changing the settings because they have already been applied.","nodes":[{"content":"A debugger might choose to ignore the <xref:System.Diagnostics.DebuggableAttribute> settings when loading an assembly. However, attaching a debugger to a running program may prevent the debugger from changing the settings because they have already been applied.","pos":[0,261],"nodes":[{"content":"A debugger might choose to ignore the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> settings when loading an assembly.","pos":[0,118],"source":"A debugger might choose to ignore the <xref:System.Diagnostics.DebuggableAttribute> settings when loading an assembly."},{"content":"However, attaching a debugger to a running program may prevent the debugger from changing the settings because they have already been applied.","pos":[119,261]}]}]},{"pos":[540,939],"content":"To use the <xref:System.Diagnostics.DebuggableAttribute> with dynamic assemblies using the Reflection Emit <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> methods, emit the <xref:System.Diagnostics.DebuggableAttribute> before calling the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> methods to ensure that the settings are applied to the entire assembly.","nodes":[{"content":"To use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> with dynamic assemblies using the Reflection Emit <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph> methods, emit the <ph id=\"ph3\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> before calling the <ph id=\"ph4\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph> methods to ensure that the settings are applied to the entire assembly.","pos":[0,399],"source":"To use the <xref:System.Diagnostics.DebuggableAttribute> with dynamic assemblies using the Reflection Emit <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> methods, emit the <xref:System.Diagnostics.DebuggableAttribute> before calling the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> methods to ensure that the settings are applied to the entire assembly."}]},{"pos":[946,1080],"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[910,1999],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class, using the specified debugging modes for the just-in-time (JIT) compiler.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggableAttribute\"&gt;&lt;/xref&gt;</ph> class, using the specified debugging modes for the just-in-time (JIT) compiler.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class, using the specified debugging modes for the just-in-time (JIT) compiler."}],"pos":[7891,8065],"yaml":true},{"content":"Calling the <xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Diagnostics.DebuggableAttribute.DebuggingModes%29> constructor with a `modes` parameter value of <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default> is equivalent to calling the <xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor with an `isJITTrackingEnabled` parameter value of `true`.","nodes":[{"pos":[0,429],"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Diagnostics.DebuggableAttribute.DebuggingModes%29&gt;</ph> constructor with a <ph id=\"ph2\">`modes`</ph> parameter value of <ph id=\"ph3\">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default&gt;</ph> is equivalent to calling the <ph id=\"ph4\">&lt;xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Boolean%2CSystem.Boolean%29&gt;</ph> constructor with an <ph id=\"ph5\">`isJITTrackingEnabled`</ph> parameter value of <ph id=\"ph6\">`true`</ph>.","source":"Calling the <xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Diagnostics.DebuggableAttribute.DebuggingModes%29> constructor with a `modes` parameter value of <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default> is equivalent to calling the <xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor with an `isJITTrackingEnabled` parameter value of `true`."}],"pos":[8076,8506],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"></xref> values specifying the debugging mode for the JIT compiler.","nodes":[{"pos":[0,162],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"&gt;&lt;/xref&gt;</ph> values specifying the debugging mode for the JIT compiler.","source":"A bitwise combination of the <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"></xref> values specifying the debugging mode for the JIT compiler."}],"pos":[8736,8899],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class, using the specified tracking and optimization options for the just-in-time (JIT) compiler.","nodes":[{"pos":[0,191],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggableAttribute\"&gt;&lt;/xref&gt;</ph> class, using the specified tracking and optimization options for the just-in-time (JIT) compiler.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class, using the specified tracking and optimization options for the just-in-time (JIT) compiler."}],"pos":[10653,10845],"yaml":true},{"content":"This constructor sets the properties <xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> and <xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A>.  \n  \n An `isJITTrackingEnabaled` parameter value of `true` causes the runtime to track information important to the debugger during code generation; a value of `false` results in no tracking, but does not prevent debugging. This parameter has no effect in the .NET Framework version 2.0.  In version 2.0, JIT tracking information, the Microsoft intermediate language (MSIL) offset to the native-code offset within a method, is always generated.  \n  \n An `isJITOptimizerDisabled` parameter value of `true` optimizes for debugging; a value of `false` optimizes for execution.","nodes":[{"pos":[0,183],"content":"This constructor sets the properties <xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> and <xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A>.","nodes":[{"content":"This constructor sets the properties <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A&gt;</ph>.","pos":[0,183],"source":"This constructor sets the properties <xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> and <xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A>."}]},{"pos":[190,628],"content":"An `isJITTrackingEnabaled` parameter value of `true` causes the runtime to track information important to the debugger during code generation; a value of `false` results in no tracking, but does not prevent debugging. This parameter has no effect in the .NET Framework version 2.0.  In version 2.0, JIT tracking information, the Microsoft intermediate language (MSIL) offset to the native-code offset within a method, is always generated.","nodes":[{"content":"An <ph id=\"ph1\">`isJITTrackingEnabaled`</ph> parameter value of <ph id=\"ph2\">`true`</ph> causes the runtime to track information important to the debugger during code generation; a value of <ph id=\"ph3\">`false`</ph> results in no tracking, but does not prevent debugging.","pos":[0,217],"source":"An `isJITTrackingEnabaled` parameter value of `true` causes the runtime to track information important to the debugger during code generation; a value of `false` results in no tracking, but does not prevent debugging."},{"content":"This parameter has no effect in the .NET Framework version 2.0.","pos":[218,281]},{"content":"In version 2.0, JIT tracking information, the Microsoft intermediate language (MSIL) offset to the native-code offset within a method, is always generated.","pos":[283,438]}]},{"pos":[635,757],"content":"An <ph id=\"ph1\">`isJITOptimizerDisabled`</ph> parameter value of <ph id=\"ph2\">`true`</ph> optimizes for debugging; a value of <ph id=\"ph3\">`false`</ph> optimizes for execution.","source":"An `isJITOptimizerDisabled` parameter value of `true` optimizes for debugging; a value of `false` optimizes for execution."}],"pos":[10856,11620],"yaml":true,"extradata":"MT"},{"content":"`true` to enable debugging; otherwise, `false`.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">`true`</ph> to enable debugging; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to enable debugging; otherwise, `false`."}],"pos":[11821,11871],"yaml":true},{"content":"`true` to disable the optimizer for execution; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> to disable the optimizer for execution; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to disable the optimizer for execution; otherwise, `false`."}],"pos":[11950,12019],"yaml":true},{"content":"Gets the debugging modes for the attribute.","nodes":[{"pos":[0,43],"content":"Gets the debugging modes for the attribute.","nodes":[{"content":"Gets the debugging modes for the attribute.","pos":[0,43]}]}],"pos":[13289,13333],"yaml":true},{"content":"The <xref:System.Diagnostics.DebuggableAttribute.DebuggingFlags%2A> property controls how the runtime tracks information important to the debugger during code generation. This information helps the debugger provide a rich debugging experience.","nodes":[{"pos":[0,243],"content":"The <xref:System.Diagnostics.DebuggableAttribute.DebuggingFlags%2A> property controls how the runtime tracks information important to the debugger during code generation. This information helps the debugger provide a rich debugging experience.","nodes":[{"content":"The <xref:System.Diagnostics.DebuggableAttribute.DebuggingFlags%2A> property controls how the runtime tracks information important to the debugger during code generation. This information helps the debugger provide a rich debugging experience.","pos":[0,243],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingFlags%2A&gt;</ph> property controls how the runtime tracks information important to the debugger during code generation.","pos":[0,170],"source":"The <xref:System.Diagnostics.DebuggableAttribute.DebuggingFlags%2A> property controls how the runtime tracks information important to the debugger during code generation."},{"content":"This information helps the debugger provide a rich debugging experience.","pos":[171,243]}]}]}],"pos":[13344,13588],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"></xref> values describing the debugging mode for the just-in-time (JIT) compiler. The default is <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\"></xref>.","nodes":[{"pos":[0,276],"content":"A bitwise combination of the <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"></xref> values describing the debugging mode for the just-in-time (JIT) compiler. The default is <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\"></xref>.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"&gt;&lt;/xref&gt;</ph> values describing the debugging mode for the just-in-time (JIT) compiler.","pos":[0,177],"source":"A bitwise combination of the <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"></xref> values describing the debugging mode for the just-in-time (JIT) compiler."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\"&gt;&lt;/xref&gt;</ph>.","pos":[178,276],"source":" The default is <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\"></xref>."}]}],"pos":[13793,14070],"yaml":true},{"content":"Gets a value that indicates whether the runtime optimizer is disabled.","nodes":[{"pos":[0,70],"content":"Gets a value that indicates whether the runtime optimizer is disabled.","nodes":[{"content":"Gets a value that indicates whether the runtime optimizer is disabled.","pos":[0,70]}]}],"pos":[15397,15468],"yaml":true},{"content":"A value of `true` enhances performance for runtime debugging, which can cause a decline in execution performance. A value of `false` enhances performance for execution. When <xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A> is set to `false`, stepping through code might result in a different behavior than when set to `true` because the compiler might reorder instructions or insert jumps to common code.","nodes":[{"pos":[0,427],"content":"A value of `true` enhances performance for runtime debugging, which can cause a decline in execution performance. A value of `false` enhances performance for execution. When <xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A> is set to `false`, stepping through code might result in a different behavior than when set to `true` because the compiler might reorder instructions or insert jumps to common code.","nodes":[{"content":"A value of <ph id=\"ph1\">`true`</ph> enhances performance for runtime debugging, which can cause a decline in execution performance.","pos":[0,113],"source":"A value of `true` enhances performance for runtime debugging, which can cause a decline in execution performance."},{"content":"A value of <ph id=\"ph1\">`false`</ph> enhances performance for execution.","pos":[114,168],"source":" A value of `false` enhances performance for execution."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A&gt;</ph> is set to <ph id=\"ph2\">`false`</ph>, stepping through code might result in a different behavior than when set to <ph id=\"ph3\">`true`</ph> because the compiler might reorder instructions or insert jumps to common code.","pos":[169,427],"source":" When <xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A> is set to `false`, stepping through code might result in a different behavior than when set to `true` because the compiler might reorder instructions or insert jumps to common code."}]}],"pos":[15479,15907],"yaml":true,"extradata":"MT"},{"content":"`true` if the runtime optimizer is disabled; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the runtime optimizer is disabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the runtime optimizer is disabled; otherwise, `false`."}],"pos":[16032,16099],"yaml":true},{"content":"Gets a value that indicates whether the runtime will track information during code generation for the debugger.","nodes":[{"pos":[0,111],"content":"Gets a value that indicates whether the runtime will track information during code generation for the debugger.","nodes":[{"content":"Gets a value that indicates whether the runtime will track information during code generation for the debugger.","pos":[0,111]}]}],"pos":[17422,17534],"yaml":true},{"content":"<xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> controls whether the runtime tracks information important to the debugger during code generation. This information helps the debugger provide a rich debugging experience.  \n  \n Starting with the .NET Framework 2.0, JIT tracking information is always enabled during debugging, and this property value is ignored.  \n  \n> [!NOTE]\n>  This property does not control the ability to debug, but tells the just-in-time (JIT) compiler to generate tracking information. Specifically, the compiler tracks the Microsoft Intermediate Language (MSIL)-offset to the native-code offset within a method.","nodes":[{"pos":[0,240],"content":"<xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> controls whether the runtime tracks information important to the debugger during code generation. This information helps the debugger provide a rich debugging experience.","nodes":[{"content":"<xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> controls whether the runtime tracks information important to the debugger during code generation. This information helps the debugger provide a rich debugging experience.","pos":[0,240],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A&gt;</ph> controls whether the runtime tracks information important to the debugger during code generation.","pos":[0,167],"source":"<xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> controls whether the runtime tracks information important to the debugger during code generation."},{"content":"This information helps the debugger provide a rich debugging experience.","pos":[168,240]}]}]},{"pos":[247,381],"content":"Starting with the .NET Framework 2.0, JIT tracking information is always enabled during debugging, and this property value is ignored.","nodes":[{"content":"Starting with the .NET Framework 2.0, JIT tracking information is always enabled during debugging, and this property value is ignored.","pos":[0,134]}]},{"pos":[389,655],"content":"[!NOTE]\n This property does not control the ability to debug, but tells the just-in-time (JIT) compiler to generate tracking information. Specifically, the compiler tracks the Microsoft Intermediate Language (MSIL)-offset to the native-code offset within a method.","leadings":["","> "],"nodes":[{"content":" This property does not control the ability to debug, but tells the just-in-time (JIT) compiler to generate tracking information. Specifically, the compiler tracks the Microsoft Intermediate Language (MSIL)-offset to the native-code offset within a method.","pos":[8,264],"nodes":[{"content":"This property does not control the ability to debug, but tells the just-in-time (JIT) compiler to generate tracking information.","pos":[1,129]},{"content":"Specifically, the compiler tracks the Microsoft Intermediate Language (MSIL)-offset to the native-code offset within a method.","pos":[130,256]}]}]}],"pos":[17545,18208],"yaml":true,"extradata":"MT"},{"content":"`true` if the runtime will track information during code generation for the debugger; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the runtime will track information during code generation for the debugger; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the runtime will track information during code generation for the debugger; otherwise, `false`."}],"pos":[18331,18439],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.DebuggableAttribute\n  commentId: T:System.Diagnostics.DebuggableAttribute\n  id: DebuggableAttribute\n  children:\n  - System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)\n  - System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)\n  - System.Diagnostics.DebuggableAttribute.DebuggingFlags\n  - System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled\n  - System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled\n  langs:\n  - csharp\n  name: DebuggableAttribute\n  nameWithType: DebuggableAttribute\n  fullName: System.Diagnostics.DebuggableAttribute\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Modifies code generation for runtime just-in-time (JIT) debugging. This class cannot be inherited.\n  remarks: \"The <xref:System.Diagnostics.DebuggableAttribute> controls how the runtime treats code within the module. The runtime might track extra information about generated code, and it might disable certain optimizations based on the values contained within this attribute.  \\n  \\n A debugger might choose to ignore the <xref:System.Diagnostics.DebuggableAttribute> settings when loading an assembly. However, attaching a debugger to a running program may prevent the debugger from changing the settings because they have already been applied.  \\n  \\n To use the <xref:System.Diagnostics.DebuggableAttribute> with dynamic assemblies using the Reflection Emit <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> methods, emit the <xref:System.Diagnostics.DebuggableAttribute> before calling the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> methods to ensure that the settings are applied to the entire assembly.  \\n  \\n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module, AllowMultiple=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class DebuggableAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)\n  commentId: M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)\n  id: '#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)'\n  parent: System.Diagnostics.DebuggableAttribute\n  langs:\n  - csharp\n  name: DebuggableAttribute(DebuggableAttribute+DebuggingModes)\n  nameWithType: DebuggableAttribute.DebuggableAttribute(DebuggableAttribute+DebuggingModes)\n  fullName: DebuggableAttribute.DebuggableAttribute(DebuggableAttribute+DebuggingModes)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class, using the specified debugging modes for the just-in-time (JIT) compiler.\n  remarks: Calling the <xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Diagnostics.DebuggableAttribute.DebuggingModes%29> constructor with a `modes` parameter value of <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default> is equivalent to calling the <xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor with an `isJITTrackingEnabled` parameter value of `true`.\n  syntax:\n    content: public DebuggableAttribute (System.Diagnostics.DebuggableAttribute.DebuggingModes modes);\n    parameters:\n    - id: modes\n      type: System.Diagnostics.DebuggableAttribute+DebuggingModes\n      description: A bitwise combination of the <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"></xref> values specifying the debugging mode for the JIT compiler.\n  overload: System.Diagnostics.DebuggableAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)\n  commentId: M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)\n  id: '#ctor(System.Boolean,System.Boolean)'\n  parent: System.Diagnostics.DebuggableAttribute\n  langs:\n  - csharp\n  name: DebuggableAttribute(Boolean, Boolean)\n  nameWithType: DebuggableAttribute.DebuggableAttribute(Boolean, Boolean)\n  fullName: DebuggableAttribute.DebuggableAttribute(Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class, using the specified tracking and optimization options for the just-in-time (JIT) compiler.\n  remarks: \"This constructor sets the properties <xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> and <xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A>.  \\n  \\n An `isJITTrackingEnabaled` parameter value of `true` causes the runtime to track information important to the debugger during code generation; a value of `false` results in no tracking, but does not prevent debugging. This parameter has no effect in the .NET Framework version 2.0.  In version 2.0, JIT tracking information, the Microsoft intermediate language (MSIL) offset to the native-code offset within a method, is always generated.  \\n  \\n An `isJITOptimizerDisabled` parameter value of `true` optimizes for debugging; a value of `false` optimizes for execution.\"\n  syntax:\n    content: public DebuggableAttribute (bool isJITTrackingEnabled, bool isJITOptimizerDisabled);\n    parameters:\n    - id: isJITTrackingEnabled\n      type: System.Boolean\n      description: '`true` to enable debugging; otherwise, `false`.'\n    - id: isJITOptimizerDisabled\n      type: System.Boolean\n      description: '`true` to disable the optimizer for execution; otherwise, `false`.'\n  overload: System.Diagnostics.DebuggableAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingFlags\n  commentId: P:System.Diagnostics.DebuggableAttribute.DebuggingFlags\n  id: DebuggingFlags\n  parent: System.Diagnostics.DebuggableAttribute\n  langs:\n  - csharp\n  name: DebuggingFlags\n  nameWithType: DebuggableAttribute.DebuggingFlags\n  fullName: DebuggableAttribute.DebuggingFlags\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: Gets the debugging modes for the attribute.\n  remarks: The <xref:System.Diagnostics.DebuggableAttribute.DebuggingFlags%2A> property controls how the runtime tracks information important to the debugger during code generation. This information helps the debugger provide a rich debugging experience.\n  syntax:\n    content: public System.Diagnostics.DebuggableAttribute.DebuggingModes DebuggingFlags { get; }\n    return:\n      type: System.Diagnostics.DebuggableAttribute+DebuggingModes\n      description: A bitwise combination of the <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes\"></xref> values describing the debugging mode for the just-in-time (JIT) compiler. The default is <xref href=\"System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\"></xref>.\n  overload: System.Diagnostics.DebuggableAttribute.DebuggingFlags*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled\n  commentId: P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled\n  id: IsJITOptimizerDisabled\n  parent: System.Diagnostics.DebuggableAttribute\n  langs:\n  - csharp\n  name: IsJITOptimizerDisabled\n  nameWithType: DebuggableAttribute.IsJITOptimizerDisabled\n  fullName: DebuggableAttribute.IsJITOptimizerDisabled\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: Gets a value that indicates whether the runtime optimizer is disabled.\n  remarks: A value of `true` enhances performance for runtime debugging, which can cause a decline in execution performance. A value of `false` enhances performance for execution. When <xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A> is set to `false`, stepping through code might result in a different behavior than when set to `true` because the compiler might reorder instructions or insert jumps to common code.\n  syntax:\n    content: public bool IsJITOptimizerDisabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the runtime optimizer is disabled; otherwise, `false`.'\n  overload: System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled\n  commentId: P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled\n  id: IsJITTrackingEnabled\n  parent: System.Diagnostics.DebuggableAttribute\n  langs:\n  - csharp\n  name: IsJITTrackingEnabled\n  nameWithType: DebuggableAttribute.IsJITTrackingEnabled\n  fullName: DebuggableAttribute.IsJITTrackingEnabled\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: Gets a value that indicates whether the runtime will track information during code generation for the debugger.\n  remarks: \"<xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A> controls whether the runtime tracks information important to the debugger during code generation. This information helps the debugger provide a rich debugging experience.  \\n  \\n Starting with the .NET Framework 2.0, JIT tracking information is always enabled during debugging, and this property value is ignored.  \\n  \\n> [!NOTE]\\n>  This property does not control the ability to debug, but tells the just-in-time (JIT) compiler to generate tracking information. Specifically, the compiler tracks the Microsoft Intermediate Language (MSIL)-offset to the native-code offset within a method.\"\n  syntax:\n    content: public bool IsJITTrackingEnabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the runtime will track information during code generation for the debugger; otherwise, `false`.'\n  overload: System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: DebuggableAttribute(DebuggableAttribute+DebuggingModes)\n  nameWithType: DebuggableAttribute.DebuggableAttribute(DebuggableAttribute+DebuggingModes)\n  fullName: DebuggableAttribute.DebuggableAttribute(DebuggableAttribute+DebuggingModes)\n- uid: System.Diagnostics.DebuggableAttribute\n  parent: System.Diagnostics\n  isExternal: false\n  name: DebuggableAttribute\n  nameWithType: DebuggableAttribute\n  fullName: System.Diagnostics.DebuggableAttribute+DebuggingModes\n- uid: System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: DebuggableAttribute(Boolean, Boolean)\n  nameWithType: DebuggableAttribute.DebuggableAttribute(Boolean, Boolean)\n  fullName: DebuggableAttribute.DebuggableAttribute(Boolean, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingFlags\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: DebuggingFlags\n  nameWithType: DebuggableAttribute.DebuggingFlags\n  fullName: DebuggableAttribute.DebuggingFlags\n- uid: System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: IsJITOptimizerDisabled\n  nameWithType: DebuggableAttribute.IsJITOptimizerDisabled\n  fullName: DebuggableAttribute.IsJITOptimizerDisabled\n- uid: System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: IsJITTrackingEnabled\n  nameWithType: DebuggableAttribute.IsJITTrackingEnabled\n  fullName: DebuggableAttribute.IsJITTrackingEnabled\n- uid: System.Diagnostics.DebuggableAttribute.#ctor*\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: DebuggableAttribute\n  nameWithType: DebuggableAttribute.DebuggableAttribute\n  fullName: DebuggableAttribute.DebuggableAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingFlags*\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: DebuggingFlags\n  nameWithType: DebuggableAttribute.DebuggingFlags\n  fullName: DebuggableAttribute.DebuggingFlags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n- uid: System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled*\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: IsJITOptimizerDisabled\n  nameWithType: DebuggableAttribute.IsJITOptimizerDisabled\n  fullName: DebuggableAttribute.IsJITOptimizerDisabled\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n- uid: System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled*\n  parent: System.Diagnostics.DebuggableAttribute\n  isExternal: false\n  name: IsJITTrackingEnabled\n  nameWithType: DebuggableAttribute.IsJITTrackingEnabled\n  fullName: DebuggableAttribute.IsJITTrackingEnabled\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggableAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}