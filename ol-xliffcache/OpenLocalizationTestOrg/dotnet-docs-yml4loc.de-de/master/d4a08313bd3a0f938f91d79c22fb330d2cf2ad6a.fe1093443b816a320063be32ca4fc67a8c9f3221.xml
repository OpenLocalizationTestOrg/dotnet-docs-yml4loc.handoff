{"nodes":[{"content":"Represents a collection of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects.","nodes":[{"pos":[0,94],"content":"Represents a collection of <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> objects.","source":"Represents a collection of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects."}],"pos":[1743,1838],"yaml":true},{"content":"The <xref:System.CodeDom.Compiler.CompilerErrorCollection> class provides a simple collection object that can be used to store a set of <xref:System.CodeDom.Compiler.CompilerError> objects.  \n  \n> [!NOTE]\n>  This class contains an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission. For details about inheritance demands, see  [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9).","nodes":[{"pos":[0,189],"content":"The <xref:System.CodeDom.Compiler.CompilerErrorCollection> class provides a simple collection object that can be used to store a set of <xref:System.CodeDom.Compiler.CompilerError> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.CodeDom.Compiler.CompilerErrorCollection&gt;</ph> class provides a simple collection object that can be used to store a set of <ph id=\"ph2\">&lt;xref:System.CodeDom.Compiler.CompilerError&gt;</ph> objects.","pos":[0,189],"source":"The <xref:System.CodeDom.Compiler.CompilerErrorCollection> class provides a simple collection object that can be used to store a set of <xref:System.CodeDom.Compiler.CompilerError> objects."}]},{"pos":[197,547],"content":"[!NOTE]\n This class contains an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission. For details about inheritance demands, see  [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9).","leadings":["","> "],"nodes":[{"content":" This class contains an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission. For details about inheritance demands, see  [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9).","pos":[8,348],"nodes":[{"content":"This class contains an inheritance demand at the class level that applies to all members.","pos":[1,90]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the derived class does not have full-trust permission.","pos":[91,203],"source":" A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission."},{"content":"For details about inheritance demands, see  <bpt id=\"p1\">[</bpt>Inheritance Demands<ept id=\"p1\">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.","pos":[204,340],"source":" For details about inheritance demands, see  [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."}]}]}],"pos":[1849,2402],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> class."}],"pos":[6971,7081],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> that contains the specified array of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects.","nodes":[{"pos":[0,203],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph> that contains the specified array of <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> objects.","source":"Initializes a new instance of <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> that contains the specified array of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects."}],"pos":[9114,9318],"yaml":true},{"content":"An array of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects to initialize the collection with.","nodes":[{"pos":[0,113],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> objects to initialize the collection with.","source":"An array of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects to initialize the collection with."}],"pos":[9524,9638],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[9821,9851],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> class that contains the contents of the specified <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>.","nodes":[{"pos":[0,222],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph> class that contains the contents of the specified <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> class that contains the contents of the specified <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>."}],"pos":[11181,11404],"yaml":true},{"content":"A <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> object with which to initialize the collection.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph> object with which to initialize the collection.","source":"A <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> object with which to initialize the collection."}],"pos":[11626,11745],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[11928,11958],"yaml":true},{"content":"Adds the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object to the error collection.","nodes":[{"pos":[0,109],"content":"Adds the specified <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> object to the error collection.","source":"Adds the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object to the error collection."}],"pos":[13155,13265],"yaml":true},{"content":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object to add.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> object to add.","source":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object to add."}],"pos":[14146,14224],"yaml":true},{"content":"The index at which the new element was inserted.","nodes":[{"pos":[0,48],"content":"The index at which the new element was inserted.","nodes":[{"content":"The index at which the new element was inserted.","pos":[0,48]}]}],"pos":[14280,14329],"yaml":true},{"content":"Copies the elements of an array to the end of the error collection.","nodes":[{"pos":[0,67],"content":"Copies the elements of an array to the end of the error collection.","nodes":[{"content":"Copies the elements of an array to the end of the error collection.","pos":[0,67]}]}],"pos":[15650,15718],"yaml":true},{"content":"An array of type <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> that contains the objects to add to the collection.","nodes":[{"pos":[0,127],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> that contains the objects to add to the collection.","source":"An array of type <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> that contains the objects to add to the collection."}],"pos":[16680,16808],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[16994,17024],"yaml":true},{"content":"Adds the contents of the specified compiler error collection to the end of the error collection.","nodes":[{"pos":[0,96],"content":"Adds the contents of the specified compiler error collection to the end of the error collection.","nodes":[{"content":"Adds the contents of the specified compiler error collection to the end of the error collection.","pos":[0,96]}]}],"pos":[18311,18408],"yaml":true},{"content":"A <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> object that contains the objects to add to the collection.","nodes":[{"pos":[0,129],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph> object that contains the objects to add to the collection.","source":"A <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> object that contains the objects to add to the collection."}],"pos":[19448,19578],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[19764,19794],"yaml":true},{"content":"Gets a value that indicates whether the collection contains the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object.","nodes":[{"pos":[0,140],"content":"Gets a value that indicates whether the collection contains the specified <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a value that indicates whether the collection contains the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object."}],"pos":[21021,21162],"yaml":true},{"content":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to locate.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> to locate.","source":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to locate."}],"pos":[22039,22113],"yaml":true},{"content":"`true` if the <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> is contained in the collection; otherwise, `false`.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> is contained in the collection; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> is contained in the collection; otherwise, `false`."}],"pos":[22171,22298],"yaml":true},{"content":"Copies the collection values to a one-dimensional <xref href=\"System.Array\"></xref> instance at the specified index.","nodes":[{"pos":[0,116],"content":"Copies the collection values to a one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> instance at the specified index.","source":"Copies the collection values to a one-dimensional <xref href=\"System.Array\"></xref> instance at the specified index."}],"pos":[23672,23789],"yaml":true},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the values copied from <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>.","nodes":[{"pos":[0,173],"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the values copied from <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the values copied from <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>."}],"pos":[24703,24877],"yaml":true},{"content":"The index in the array at which to start copying.","nodes":[{"pos":[0,49],"content":"The index in the array at which to start copying.","nodes":[{"content":"The index in the array at which to start copying.","pos":[0,49]}]}],"pos":[24937,24987],"yaml":true},{"content":"The array indicated by the <code>array</code> parameter is multidimensional.  \n  \n -or-  \n  \n The number of elements in the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> is greater than the available space between the index value of the <code>arrayIndex</code> parameter in the array indicated by the <code>array</code> parameter and the end of the array indicated by the <code>array</code> parameter.","nodes":[{"pos":[0,76],"content":"The array indicated by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is multidimensional.","source":"The array indicated by the <code>array</code> parameter is multidimensional."},{"pos":[83,87],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[94,424],"content":"The number of elements in the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph> is greater than the available space between the index value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">arrayIndex</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter in the array indicated by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter and the end of the array indicated by the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">array</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","source":"The number of elements in the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> is greater than the available space between the index value of the <code>arrayIndex</code> parameter in the array indicated by the <code>array</code> parameter and the end of the array indicated by the <code>array</code> parameter."}],"pos":[25163,25596],"yaml":true},{"content":"The <code>array</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>array</code> parameter is `null`."}],"pos":[25698,25742],"yaml":true},{"content":"The <code>index</code> parameter is less than the lowbound of the array indicated by the <code>array</code> parameter.","nodes":[{"pos":[0,118],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than the lowbound of the array indicated by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"The <code>index</code> parameter is less than the lowbound of the array indicated by the <code>array</code> parameter."}],"pos":[25856,25975],"yaml":true},{"content":"Gets a value that indicates whether the collection contains errors.","nodes":[{"pos":[0,67],"content":"Gets a value that indicates whether the collection contains errors.","nodes":[{"content":"Gets a value that indicates whether the collection contains errors.","pos":[0,67]}]}],"pos":[27048,27116],"yaml":true},{"content":"`true` if the collection contains errors; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if the collection contains errors; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection contains errors; otherwise, `false`."}],"pos":[27228,27292],"yaml":true},{"content":"Gets a value that indicates whether the collection contains warnings.","nodes":[{"pos":[0,69],"content":"Gets a value that indicates whether the collection contains warnings.","nodes":[{"content":"Gets a value that indicates whether the collection contains warnings.","pos":[0,69]}]}],"pos":[28465,28535],"yaml":true},{"content":"`true` if the collection contains warnings; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the collection contains warnings; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection contains warnings; otherwise, `false`."}],"pos":[28649,28715],"yaml":true},{"content":"Gets the index of the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object in the collection, if it exists in the collection.","nodes":[{"pos":[0,148],"content":"Gets the index of the specified <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> object in the collection, if it exists in the collection.","source":"Gets the index of the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object in the collection, if it exists in the collection."}],"pos":[30026,30175],"yaml":true},{"content":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to locate.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> to locate.","source":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to locate."}],"pos":[31055,31129],"yaml":true},{"content":"The index of the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> in the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>, if found; otherwise, -1.","nodes":[{"pos":[0,187],"content":"The index of the specified <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, -1.","source":"The index of the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> in the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>, if found; otherwise, -1."}],"pos":[31185,31373],"yaml":true},{"content":"Inserts the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> into the collection at the specified index.","nodes":[{"pos":[0,124],"content":"Inserts the specified <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> into the collection at the specified index.","source":"Inserts the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> into the collection at the specified index."}],"pos":[32734,32859],"yaml":true},{"content":"The zero-based index where the compiler error should be inserted.","nodes":[{"pos":[0,65],"content":"The zero-based index where the compiler error should be inserted.","nodes":[{"content":"The zero-based index where the compiler error should be inserted.","pos":[0,65]}]}],"pos":[33738,33804],"yaml":true},{"content":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to insert.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> to insert.","source":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to insert."}],"pos":[33889,33963],"yaml":true},{"content":"Gets or sets the <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> at the specified index.","nodes":[{"pos":[0,99],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Gets or sets the <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> at the specified index."}],"pos":[35154,35254],"yaml":true},{"content":"The zero-based index of the entry to locate in the collection.","nodes":[{"pos":[0,62],"content":"The zero-based index of the entry to locate in the collection.","nodes":[{"content":"The zero-based index of the entry to locate in the collection.","pos":[0,62]}]}],"pos":[35428,35491],"yaml":true},{"content":"A <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> at each valid index.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> at each valid index.","source":"A <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> at each valid index."}],"pos":[35572,35654],"yaml":true},{"content":"The index value indicated by the <code>index</code> parameter is outside the valid range of indexes for the collection.","nodes":[{"pos":[0,119],"content":"The index value indicated by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is outside the valid range of indexes for the collection.","source":"The index value indicated by the <code>index</code> parameter is outside the valid range of indexes for the collection."}],"pos":[35848,35968],"yaml":true},{"content":"Removes a specific <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> from the collection.","nodes":[{"pos":[0,98],"content":"Removes a specific <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> from the collection.","source":"Removes a specific <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> from the collection."}],"pos":[37183,37282],"yaml":true},{"content":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to remove from the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>.","nodes":[{"pos":[0,151],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.Compiler.CompilerError\"&gt;&lt;/xref&gt;</ph> to remove from the <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to remove from the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>."}],"pos":[38090,38242],"yaml":true},{"content":"The specified object is not found in the collection.","nodes":[{"pos":[0,52],"content":"The specified object is not found in the collection.","nodes":[{"content":"The specified object is not found in the collection.","pos":[0,52]}]}],"pos":[38418,38471],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.Compiler.CompilerErrorCollection\n  commentId: T:System.CodeDom.Compiler.CompilerErrorCollection\n  id: CompilerErrorCollection\n  children:\n  - System.CodeDom.Compiler.CompilerErrorCollection.#ctor\n  - System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])\n  - System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)\n  - System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)\n  - System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])\n  - System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerErrorCollection)\n  - System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)\n  - System.CodeDom.Compiler.CompilerErrorCollection.CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)\n  - System.CodeDom.Compiler.CompilerErrorCollection.HasErrors\n  - System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings\n  - System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)\n  - System.CodeDom.Compiler.CompilerErrorCollection.Insert(System.Int32,System.CodeDom.Compiler.CompilerError)\n  - System.CodeDom.Compiler.CompilerErrorCollection.Item(System.Int32)\n  - System.CodeDom.Compiler.CompilerErrorCollection.Remove(System.CodeDom.Compiler.CompilerError)\n  langs:\n  - csharp\n  name: CompilerErrorCollection\n  nameWithType: CompilerErrorCollection\n  fullName: System.CodeDom.Compiler.CompilerErrorCollection\n  type: Class\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Represents a collection of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects.\n  remarks: \"The <xref:System.CodeDom.Compiler.CompilerErrorCollection> class provides a simple collection object that can be used to store a set of <xref:System.CodeDom.Compiler.CompilerError> objects.  \\n  \\n> [!NOTE]\\n>  This class contains an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission. For details about inheritance demands, see  [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9).\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection> class. The example creates a new instance of the class and uses several methods to add statements to the collection, return their index, and add or remove attributes at a specific index point.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#1)]\\n [!code-csharp[CompilerErrorCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#1)]\\n [!code-vb[CompilerErrorCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#1)]\"\n  syntax:\n    content: 'public class CompilerErrorCollection : System.Collections.CollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.CollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.CollectionBase.Capacity\n  - System.Collections.CollectionBase.Clear\n  - System.Collections.CollectionBase.Count\n  - System.Collections.CollectionBase.GetEnumerator\n  - System.Collections.CollectionBase.InnerList\n  - System.Collections.CollectionBase.List\n  - System.Collections.CollectionBase.OnClear\n  - System.Collections.CollectionBase.OnClearComplete\n  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnValidate(System.Object)\n  - System.Collections.CollectionBase.RemoveAt(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.#ctor\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: CompilerErrorCollection()\n  nameWithType: CompilerErrorCollection.CompilerErrorCollection()\n  fullName: CompilerErrorCollection.CompilerErrorCollection()\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to create an empty instance of the <xref:System.CodeDom.Compiler.CompilerErrorCollection> class.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#2)]\\n [!code-csharp[CompilerErrorCollectionExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#2)]\\n [!code-vb[CompilerErrorCollectionExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#2)]\"\n  syntax:\n    content: public CompilerErrorCollection ();\n    parameters: []\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])\n  id: '#ctor(System.CodeDom.Compiler.CompilerError[])'\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: CompilerErrorCollection(CompilerError[])\n  nameWithType: CompilerErrorCollection.CompilerErrorCollection(CompilerError[])\n  fullName: CompilerErrorCollection.CompilerErrorCollection(CompilerError[])\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Initializes a new instance of <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> that contains the specified array of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects.\n  syntax:\n    content: public CompilerErrorCollection (System.CodeDom.Compiler.CompilerError[] value);\n    parameters:\n    - id: value\n      type: System.CodeDom.Compiler.CompilerError[]\n      description: An array of <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> objects to initialize the collection with.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)\n  id: '#ctor(System.CodeDom.Compiler.CompilerErrorCollection)'\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: CompilerErrorCollection(CompilerErrorCollection)\n  nameWithType: CompilerErrorCollection.CompilerErrorCollection(CompilerErrorCollection)\n  fullName: CompilerErrorCollection.CompilerErrorCollection(CompilerErrorCollection)\n  type: Constructor\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> class that contains the contents of the specified <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>.\n  syntax:\n    content: public CompilerErrorCollection (System.CodeDom.Compiler.CompilerErrorCollection value);\n    parameters:\n    - id: value\n      type: System.CodeDom.Compiler.CompilerErrorCollection\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> object with which to initialize the collection.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)\n  id: Add(System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: Add(CompilerError)\n  nameWithType: CompilerErrorCollection.Add(CompilerError)\n  fullName: CompilerErrorCollection.Add(CompilerError)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Adds the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object to the error collection.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.Add%2A> method to add a <xref:System.CodeDom.Compiler.CompilerError> object to a <xref:System.CodeDom.Compiler.CompilerErrorCollection>.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#3)]\\n [!code-csharp[CompilerErrorCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#3)]\\n [!code-vb[CompilerErrorCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#3)]\"\n  syntax:\n    content: public int Add (System.CodeDom.Compiler.CompilerError value);\n    parameters:\n    - id: value\n      type: System.CodeDom.Compiler.CompilerError\n      description: The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object to add.\n    return:\n      type: System.Int32\n      description: The index at which the new element was inserted.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.Add*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])\n  id: AddRange(System.CodeDom.Compiler.CompilerError[])\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: AddRange(CompilerError[])\n  nameWithType: CompilerErrorCollection.AddRange(CompilerError[])\n  fullName: CompilerErrorCollection.AddRange(CompilerError[])\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Copies the elements of an array to the end of the error collection.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.AddRange%28System.CodeDom.Compiler.CompilerError%5B%5D%29> method overload to add an array of <xref:System.CodeDom.Compiler.CompilerError> objects to a <xref:System.CodeDom.Compiler.CompilerErrorCollection>.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#4)]\\n [!code-csharp[CompilerErrorCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#4)]\\n [!code-vb[CompilerErrorCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#4)]\"\n  syntax:\n    content: public void AddRange (System.CodeDom.Compiler.CompilerError[] value);\n    parameters:\n    - id: value\n      type: System.CodeDom.Compiler.CompilerError[]\n      description: An array of type <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> that contains the objects to add to the collection.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerErrorCollection)\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerErrorCollection)\n  id: AddRange(System.CodeDom.Compiler.CompilerErrorCollection)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: AddRange(CompilerErrorCollection)\n  nameWithType: CompilerErrorCollection.AddRange(CompilerErrorCollection)\n  fullName: CompilerErrorCollection.AddRange(CompilerErrorCollection)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Adds the contents of the specified compiler error collection to the end of the error collection.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.AddRange%28System.CodeDom.Compiler.CompilerErrorCollection%29> method overload to add <xref:System.CodeDom.Compiler.CompilerError> objects from one <xref:System.CodeDom.Compiler.CompilerErrorCollection> to another <xref:System.CodeDom.Compiler.CompilerErrorCollection>.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#4)]\\n [!code-csharp[CompilerErrorCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#4)]\\n [!code-vb[CompilerErrorCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#4)]\"\n  syntax:\n    content: public void AddRange (System.CodeDom.Compiler.CompilerErrorCollection value);\n    parameters:\n    - id: value\n      type: System.CodeDom.Compiler.CompilerErrorCollection\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref> object that contains the objects to add to the collection.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)\n  id: Contains(System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: Contains(CompilerError)\n  nameWithType: CompilerErrorCollection.Contains(CompilerError)\n  fullName: CompilerErrorCollection.Contains(CompilerError)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Gets a value that indicates whether the collection contains the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.CodeDom.Compiler.CompilerErrorCollection.Contains%2A> method to locate a specific <xref:System.CodeDom.Compiler.CompilerError> object and determine the index value at which it was found.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#5)]\\n [!code-csharp[CompilerErrorCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#5)]\\n [!code-vb[CompilerErrorCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#5)]\"\n  syntax:\n    content: public bool Contains (System.CodeDom.Compiler.CompilerError value);\n    parameters:\n    - id: value\n      type: System.CodeDom.Compiler.CompilerError\n      description: The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to locate.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> is contained in the collection; otherwise, `false`.'\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.Contains*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)\n  id: CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: CopyTo(CompilerError[], Int32)\n  nameWithType: CompilerErrorCollection.CopyTo(CompilerError[], Int32)\n  fullName: CompilerErrorCollection.CopyTo(CompilerError[], Int32)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Copies the collection values to a one-dimensional <xref href=\"System.Array\"></xref> instance at the specified index.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.CopyTo%2A> method to copy the contents of a <xref:System.CodeDom.Compiler.CompilerErrorCollection> to an array, starting at the specified index value.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#6)]\\n [!code-csharp[CompilerErrorCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#6)]\\n [!code-vb[CompilerErrorCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#6)]\"\n  syntax:\n    content: public void CopyTo (System.CodeDom.Compiler.CompilerError[] array, int index);\n    parameters:\n    - id: array\n      type: System.CodeDom.Compiler.CompilerError[]\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the values copied from <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The index in the array at which to start copying.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The array indicated by the <code>array</code> parameter is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the <xref href=\\\"System.CodeDom.Compiler.CompilerErrorCollection\\\"></xref> is greater than the available space between the index value of the <code>arrayIndex</code> parameter in the array indicated by the <code>array</code> parameter and the end of the array indicated by the <code>array</code> parameter.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>array</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>index</code> parameter is less than the lowbound of the array indicated by the <code>array</code> parameter.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.HasErrors\n  commentId: P:System.CodeDom.Compiler.CompilerErrorCollection.HasErrors\n  id: HasErrors\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: HasErrors\n  nameWithType: CompilerErrorCollection.HasErrors\n  fullName: CompilerErrorCollection.HasErrors\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Gets a value that indicates whether the collection contains errors.\n  syntax:\n    content: public bool HasErrors { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection contains errors; otherwise, `false`.'\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.HasErrors*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings\n  commentId: P:System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings\n  id: HasWarnings\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: HasWarnings\n  nameWithType: CompilerErrorCollection.HasWarnings\n  fullName: CompilerErrorCollection.HasWarnings\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Gets a value that indicates whether the collection contains warnings.\n  syntax:\n    content: public bool HasWarnings { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection contains warnings; otherwise, `false`.'\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)\n  id: IndexOf(System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: IndexOf(CompilerError)\n  nameWithType: CompilerErrorCollection.IndexOf(CompilerError)\n  fullName: CompilerErrorCollection.IndexOf(CompilerError)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Gets the index of the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> object in the collection, if it exists in the collection.\n  remarks: ''\n  example:\n  - \"The following example searches for a specific <xref:System.CodeDom.Compiler.CompilerError> object and uses the <xref:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf%2A> method to determine the index value at which it was found.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#5)]\\n [!code-csharp[CompilerErrorCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#5)]\\n [!code-vb[CompilerErrorCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#5)]\"\n  syntax:\n    content: public int IndexOf (System.CodeDom.Compiler.CompilerError value);\n    parameters:\n    - id: value\n      type: System.CodeDom.Compiler.CompilerError\n      description: The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to locate.\n    return:\n      type: System.Int32\n      description: The index of the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> in the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>, if found; otherwise, -1.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.IndexOf*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Insert(System.Int32,System.CodeDom.Compiler.CompilerError)\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.Insert(System.Int32,System.CodeDom.Compiler.CompilerError)\n  id: Insert(System.Int32,System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: Insert(Int32, CompilerError)\n  nameWithType: CompilerErrorCollection.Insert(Int32, CompilerError)\n  fullName: CompilerErrorCollection.Insert(Int32, CompilerError)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Inserts the specified <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> into the collection at the specified index.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.Insert%2A> method to insert a <xref:System.CodeDom.Compiler.CompilerError> object into a <xref:System.CodeDom.Compiler.CompilerErrorCollection>.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#8)]\\n [!code-csharp[CompilerErrorCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#8)]\\n [!code-vb[CompilerErrorCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#8)]\"\n  syntax:\n    content: public void Insert (int index, System.CodeDom.Compiler.CompilerError value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index where the compiler error should be inserted.\n    - id: value\n      type: System.CodeDom.Compiler.CompilerError\n      description: The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to insert.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.Insert*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Item(System.Int32)\n  commentId: P:System.CodeDom.Compiler.CompilerErrorCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: CompilerErrorCollection.Item(Int32)\n  fullName: CompilerErrorCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Gets or sets the <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> at the specified index.\n  syntax:\n    content: public System.CodeDom.Compiler.CompilerError this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry to locate in the collection.\n    return:\n      type: System.CodeDom.Compiler.CompilerError\n      description: A <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> at each valid index.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The index value indicated by the <code>index</code> parameter is outside the valid range of indexes for the collection.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Remove(System.CodeDom.Compiler.CompilerError)\n  commentId: M:System.CodeDom.Compiler.CompilerErrorCollection.Remove(System.CodeDom.Compiler.CompilerError)\n  id: Remove(System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  langs:\n  - csharp\n  name: Remove(CompilerError)\n  nameWithType: CompilerErrorCollection.Remove(CompilerError)\n  fullName: CompilerErrorCollection.Remove(CompilerError)\n  type: Method\n  assemblies:\n  - System\n  - System.CodeDom\n  namespace: System.CodeDom.Compiler\n  summary: Removes a specific <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> from the collection.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove a <xref:System.CodeDom.Compiler.CompilerError> item from a <xref:System.CodeDom.Compiler.CompilerErrorCollection>.  \\n  \\n [!code-cpp[CompilerErrorCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#9)]\\n [!code-csharp[CompilerErrorCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#9)]\\n [!code-vb[CompilerErrorCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#9)]\"\n  syntax:\n    content: public void Remove (System.CodeDom.Compiler.CompilerError value);\n    parameters:\n    - id: value\n      type: System.CodeDom.Compiler.CompilerError\n      description: The <xref href=\"System.CodeDom.Compiler.CompilerError\"></xref> to remove from the <xref href=\"System.CodeDom.Compiler.CompilerErrorCollection\"></xref>.\n  overload: System.CodeDom.Compiler.CompilerErrorCollection.Remove*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified object is not found in the collection.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Collections.CollectionBase\n  parent: System.Collections\n  isExternal: false\n  name: CollectionBase\n  nameWithType: CollectionBase\n  fullName: System.Collections.CollectionBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.#ctor\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: CompilerErrorCollection()\n  nameWithType: CompilerErrorCollection.CompilerErrorCollection()\n  fullName: CompilerErrorCollection.CompilerErrorCollection()\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: CompilerErrorCollection(CompilerError[])\n  nameWithType: CompilerErrorCollection.CompilerErrorCollection(CompilerError[])\n  fullName: CompilerErrorCollection.CompilerErrorCollection(CompilerError[])\n- uid: System.CodeDom.Compiler.CompilerError\n  name: CompilerError\n  nameWithType: CompilerError\n  fullName: System.CodeDom.Compiler.CompilerError\n- uid: System.CodeDom.Compiler.CompilerError[]\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CompilerError[]\n  nameWithType: CompilerError[]\n  fullName: System.CodeDom.Compiler.CompilerError[]\n  spec.csharp:\n  - uid: System.CodeDom.Compiler.CompilerError\n    name: CompilerError\n    nameWithType: CompilerError\n    fullName: System.CodeDom.Compiler.CompilerError\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: CompilerErrorCollection(CompilerErrorCollection)\n  nameWithType: CompilerErrorCollection.CompilerErrorCollection(CompilerErrorCollection)\n  fullName: CompilerErrorCollection.CompilerErrorCollection(CompilerErrorCollection)\n- uid: System.CodeDom.Compiler.CompilerErrorCollection\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CompilerErrorCollection\n  nameWithType: CompilerErrorCollection\n  fullName: System.CodeDom.Compiler.CompilerErrorCollection\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Add(CompilerError)\n  nameWithType: CompilerErrorCollection.Add(CompilerError)\n  fullName: CompilerErrorCollection.Add(CompilerError)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: AddRange(CompilerError[])\n  nameWithType: CompilerErrorCollection.AddRange(CompilerError[])\n  fullName: CompilerErrorCollection.AddRange(CompilerError[])\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerErrorCollection)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: AddRange(CompilerErrorCollection)\n  nameWithType: CompilerErrorCollection.AddRange(CompilerErrorCollection)\n  fullName: CompilerErrorCollection.AddRange(CompilerErrorCollection)\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Contains(CompilerError)\n  nameWithType: CompilerErrorCollection.Contains(CompilerError)\n  fullName: CompilerErrorCollection.Contains(CompilerError)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: CopyTo(CompilerError[], Int32)\n  nameWithType: CompilerErrorCollection.CopyTo(CompilerError[], Int32)\n  fullName: CompilerErrorCollection.CopyTo(CompilerError[], Int32)\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.HasErrors\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: HasErrors\n  nameWithType: CompilerErrorCollection.HasErrors\n  fullName: CompilerErrorCollection.HasErrors\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: HasWarnings\n  nameWithType: CompilerErrorCollection.HasWarnings\n  fullName: CompilerErrorCollection.HasWarnings\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: IndexOf(CompilerError)\n  nameWithType: CompilerErrorCollection.IndexOf(CompilerError)\n  fullName: CompilerErrorCollection.IndexOf(CompilerError)\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Insert(System.Int32,System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Insert(Int32, CompilerError)\n  nameWithType: CompilerErrorCollection.Insert(Int32, CompilerError)\n  fullName: CompilerErrorCollection.Insert(Int32, CompilerError)\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Item(System.Int32)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: CompilerErrorCollection.Item(Int32)\n  fullName: CompilerErrorCollection.Item(Int32)\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Remove(System.CodeDom.Compiler.CompilerError)\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Remove(CompilerError)\n  nameWithType: CompilerErrorCollection.Remove(CompilerError)\n  fullName: CompilerErrorCollection.Remove(CompilerError)\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.#ctor*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: CompilerErrorCollection\n  nameWithType: CompilerErrorCollection.CompilerErrorCollection\n  fullName: CompilerErrorCollection.CompilerErrorCollection\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Add*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Add\n  nameWithType: CompilerErrorCollection.Add\n  fullName: CompilerErrorCollection.Add\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.AddRange*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: CompilerErrorCollection.AddRange\n  fullName: CompilerErrorCollection.AddRange\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Contains*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Contains\n  nameWithType: CompilerErrorCollection.Contains\n  fullName: CompilerErrorCollection.Contains\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.CopyTo*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: CompilerErrorCollection.CopyTo\n  fullName: CompilerErrorCollection.CopyTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.HasErrors*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: HasErrors\n  nameWithType: CompilerErrorCollection.HasErrors\n  fullName: CompilerErrorCollection.HasErrors\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: HasWarnings\n  nameWithType: CompilerErrorCollection.HasWarnings\n  fullName: CompilerErrorCollection.HasWarnings\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.IndexOf*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: CompilerErrorCollection.IndexOf\n  fullName: CompilerErrorCollection.IndexOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Insert*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Insert\n  nameWithType: CompilerErrorCollection.Insert\n  fullName: CompilerErrorCollection.Insert\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Item*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Item\n  nameWithType: CompilerErrorCollection.Item\n  fullName: CompilerErrorCollection.Item\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.CodeDom.Compiler.CompilerErrorCollection.Remove*\n  parent: System.CodeDom.Compiler.CompilerErrorCollection\n  isExternal: false\n  name: Remove\n  nameWithType: CompilerErrorCollection.Remove\n  fullName: CompilerErrorCollection.Remove\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.CodeDom.Compiler/CompilerErrorCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.CollectionBase.Capacity\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Capacity\n  nameWithType: CollectionBase.Capacity\n  fullName: CollectionBase.Capacity\n- uid: System.Collections.CollectionBase.Clear\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Clear()\n  nameWithType: CollectionBase.Clear()\n  fullName: CollectionBase.Clear()\n- uid: System.Collections.CollectionBase.Count\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Count\n  nameWithType: CollectionBase.Count\n  fullName: CollectionBase.Count\n- uid: System.Collections.CollectionBase.GetEnumerator\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: CollectionBase.GetEnumerator()\n  fullName: CollectionBase.GetEnumerator()\n- uid: System.Collections.CollectionBase.InnerList\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: InnerList\n  nameWithType: CollectionBase.InnerList\n  fullName: CollectionBase.InnerList\n- uid: System.Collections.CollectionBase.List\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: List\n  nameWithType: CollectionBase.List\n  fullName: CollectionBase.List\n- uid: System.Collections.CollectionBase.OnClear\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnClear()\n  nameWithType: CollectionBase.OnClear()\n  fullName: CollectionBase.OnClear()\n- uid: System.Collections.CollectionBase.OnClearComplete\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnClearComplete()\n  nameWithType: CollectionBase.OnClearComplete()\n  fullName: CollectionBase.OnClearComplete()\n- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnInsert(Int32, Object)\n  nameWithType: CollectionBase.OnInsert(Int32, Object)\n  fullName: CollectionBase.OnInsert(Int32, Object)\n- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnInsertComplete(Int32, Object)\n  nameWithType: CollectionBase.OnInsertComplete(Int32, Object)\n  fullName: CollectionBase.OnInsertComplete(Int32, Object)\n- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnRemove(Int32, Object)\n  nameWithType: CollectionBase.OnRemove(Int32, Object)\n  fullName: CollectionBase.OnRemove(Int32, Object)\n- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnRemoveComplete(Int32, Object)\n  nameWithType: CollectionBase.OnRemoveComplete(Int32, Object)\n  fullName: CollectionBase.OnRemoveComplete(Int32, Object)\n- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnSet(Int32, Object, Object)\n  nameWithType: CollectionBase.OnSet(Int32, Object, Object)\n  fullName: CollectionBase.OnSet(Int32, Object, Object)\n- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnSetComplete(Int32, Object, Object)\n  nameWithType: CollectionBase.OnSetComplete(Int32, Object, Object)\n  fullName: CollectionBase.OnSetComplete(Int32, Object, Object)\n- uid: System.Collections.CollectionBase.OnValidate(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnValidate(Object)\n  nameWithType: CollectionBase.OnValidate(Object)\n  fullName: CollectionBase.OnValidate(Object)\n- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: CollectionBase.RemoveAt(Int32)\n  fullName: CollectionBase.RemoveAt(Int32)\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: CollectionBase.ICollection.CopyTo(Array, Int32)\n  fullName: CollectionBase.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: CollectionBase.ICollection.IsSynchronized\n  fullName: CollectionBase.ICollection.IsSynchronized\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: CollectionBase.ICollection.SyncRoot\n  fullName: CollectionBase.ICollection.SyncRoot\n- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: CollectionBase.IList.Add(Object)\n  fullName: CollectionBase.IList.Add(Object)\n- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: CollectionBase.IList.Contains(Object)\n  fullName: CollectionBase.IList.Contains(Object)\n- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: CollectionBase.IList.IndexOf(Object)\n  fullName: CollectionBase.IList.IndexOf(Object)\n- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: CollectionBase.IList.Insert(Int32, Object)\n  fullName: CollectionBase.IList.Insert(Int32, Object)\n- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: CollectionBase.IList.IsFixedSize\n  fullName: CollectionBase.IList.IsFixedSize\n- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: CollectionBase.IList.IsReadOnly\n  fullName: CollectionBase.IList.IsReadOnly\n- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: CollectionBase.IList.Item(Int32)\n  fullName: CollectionBase.IList.Item(Int32)\n- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: CollectionBase.IList.Remove(Object)\n  fullName: CollectionBase.IList.Remove(Object)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}