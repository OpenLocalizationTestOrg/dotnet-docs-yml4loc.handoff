{"nodes":[{"content":"Converts colors from one data type to another. Access this class through the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,135],"content":"Converts colors from one data type to another. Access this class through the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"content":"Converts colors from one data type to another.","pos":[0,46]},{"content":"Access this class through the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","pos":[47,135],"source":" Access this class through the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}]}],"pos":[1138,1274],"yaml":true},{"content":"When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process. For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method.","nodes":[{"pos":[0,354],"content":"When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process. For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method.","nodes":[{"content":"When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process. For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method.","pos":[0,354],"nodes":[{"content":"When converting from a string to a <ph id=\"ph1\">&lt;xref:System.Drawing.Color&gt;</ph> the <ph id=\"ph2\">&lt;xref:System.Drawing.ColorConverter&gt;</ph> expects the unqualified color name; otherwise, an exception will occur in the conversion process.","pos":[0,201],"source":"When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process."},{"content":"For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <ph id=\"ph1\">&lt;xref:System.Drawing.ColorConverter.ConvertFrom%2A&gt;</ph> method.","pos":[202,354],"source":" For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method."}]}]}],"pos":[1285,1640],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.ColorConverter\"></xref> class.","nodes":[{"pos":[0,91],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ColorConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Drawing.ColorConverter\"></xref> class."}],"pos":[6988,7080],"yaml":true},{"content":"Determines if this converter can convert an object in the given source type to the native type of the converter.","nodes":[{"pos":[0,112],"content":"Determines if this converter can convert an object in the given source type to the native type of the converter.","nodes":[{"content":"Determines if this converter can convert an object in the given source type to the native type of the converter.","pos":[0,112]}]}],"pos":[8470,8583],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,220],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","pos":[0,100],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"content":"You can use this object to get additional information about the environment from which this converter is being invoked.","pos":[101,220]}]}],"pos":[8825,9046],"yaml":true},{"content":"The type from which you want to convert.","nodes":[{"pos":[0,40],"content":"The type from which you want to convert.","nodes":[{"content":"The type from which you want to convert.","pos":[0,40]}]}],"pos":[9110,9151],"yaml":true},{"content":"`true` if this object can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if this object can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this object can perform the conversion; otherwise, `false`."}],"pos":[9209,9281],"yaml":true},{"content":"Returns a value indicating whether this converter can convert an object to the given destination type using the context.","nodes":[{"pos":[0,120],"content":"Returns a value indicating whether this converter can convert an object to the given destination type using the context.","nodes":[{"content":"Returns a value indicating whether this converter can convert an object to the given destination type using the context.","pos":[0,120]}]}],"pos":[10600,10721],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[10966,11067],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type to which you want to convert.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type to which you want to convert.","source":"A <xref href=\"System.Type\"></xref> that represents the type to which you want to convert."}],"pos":[11136,11226],"yaml":true},{"content":"`true` if this converter can perform the operation; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if this converter can perform the operation; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter can perform the operation; otherwise, `false`."}],"pos":[11284,11358],"yaml":true},{"content":"Converts the given object to the converter's native type.","nodes":[{"pos":[0,57],"content":"Converts the given object to the converter's native type.","nodes":[{"content":"Converts the given object to the converter's native type.","pos":[0,57]}]}],"pos":[12819,12877],"yaml":true},{"content":"When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process. For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method.","nodes":[{"pos":[0,354],"content":"When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process. For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method.","nodes":[{"content":"When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process. For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method.","pos":[0,354],"nodes":[{"content":"When converting from a string to a <ph id=\"ph1\">&lt;xref:System.Drawing.Color&gt;</ph> the <ph id=\"ph2\">&lt;xref:System.Drawing.ColorConverter&gt;</ph> expects the unqualified color name; otherwise, an exception will occur in the conversion process.","pos":[0,201],"source":"When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process."},{"content":"For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <ph id=\"ph1\">&lt;xref:System.Drawing.ColorConverter.ConvertFrom%2A&gt;</ph> method.","pos":[202,354],"source":" For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method."}]}]}],"pos":[12888,13243],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,211],"content":"A <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph> that provides a format context.","pos":[0,91],"source":"A <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> that provides a format context."},{"content":"You can use this object to get additional information about the environment from which this converter is being invoked.","pos":[92,211]}]}],"pos":[13523,13735],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture to represent the color.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that specifies the culture to represent the color.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture to represent the color."}],"pos":[13817,13924],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[13985,14008],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> representing the converted value.","nodes":[{"pos":[0,71],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> representing the converted value.","source":"An <xref href=\"System.Object\"></xref> representing the converted value."}],"pos":[14065,14137],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[14300,14336],"yaml":true},{"content":"Converts the specified object to another type.","nodes":[{"pos":[0,46],"content":"Converts the specified object to another type.","nodes":[{"content":"Converts the specified object to another type.","pos":[0,46]}]}],"pos":[15766,15813],"yaml":true},{"content":"The most common conversion is to or from a string.","nodes":[{"pos":[0,50],"content":"The most common conversion is to or from a string.","nodes":[{"content":"The most common conversion is to or from a string.","pos":[0,50]}]}],"pos":[15824,15875],"yaml":true,"extradata":"MT"},{"content":"A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is `null`. Also, properties on the context object may return `null`.","nodes":[{"pos":[0,237],"content":"A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is `null`. Also, properties on the context object may return `null`.","nodes":[{"content":"A formatter context.","pos":[0,20]},{"content":"Use this object to extract additional information about the environment from which this converter is being invoked.","pos":[21,136]},{"content":"Always check whether this value is <ph id=\"ph1\">`null`</ph>.","pos":[137,179],"source":" Always check whether this value is `null`."},{"content":"Also, properties on the context object may return <ph id=\"ph1\">`null`</ph>.","pos":[180,237],"source":" Also, properties on the context object may return `null`."}]}],"pos":[16175,16413],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture to represent the color.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that specifies the culture to represent the color.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture to represent the color."}],"pos":[16495,16602],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[16663,16686],"yaml":true},{"content":"The type to convert the object to.","nodes":[{"pos":[0,34],"content":"The type to convert the object to.","nodes":[{"content":"The type to convert the object to.","pos":[0,34]}]}],"pos":[16755,16790],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> representing the converted value.","nodes":[{"pos":[0,71],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> representing the converted value.","source":"An <xref href=\"System.Object\"></xref> representing the converted value."}],"pos":[16847,16919],"yaml":true},{"content":"<code>destinationtype</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;destinationtype&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destinationtype</code> is `null`."}],"pos":[17088,17128],"yaml":true},{"content":"The conversion cannot be performed.","nodes":[{"pos":[0,35],"content":"The conversion cannot be performed.","nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]}],"pos":[17230,17266],"yaml":true},{"content":"Retrieves a collection containing a set of standard values for the data type for which this validator is designed. This will return `null` if the data type does not support a standard set of values.","nodes":[{"pos":[0,198],"content":"Retrieves a collection containing a set of standard values for the data type for which this validator is designed. This will return `null` if the data type does not support a standard set of values.","nodes":[{"content":"Retrieves a collection containing a set of standard values for the data type for which this validator is designed.","pos":[0,114]},{"content":"This will return <ph id=\"ph1\">`null`</ph> if the data type does not support a standard set of values.","pos":[115,198],"source":" This will return `null` if the data type does not support a standard set of values."}]}],"pos":[18486,18685],"yaml":true},{"content":"A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is `null`. Also, properties on the context object may return `null`.","nodes":[{"pos":[0,237],"content":"A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is `null`. Also, properties on the context object may return `null`.","nodes":[{"content":"A formatter context.","pos":[0,20]},{"content":"Use this object to extract additional information about the environment from which this converter is being invoked.","pos":[21,136]},{"content":"Always check whether this value is <ph id=\"ph1\">`null`</ph>.","pos":[137,179],"source":" Always check whether this value is `null`."},{"content":"Also, properties on the context object may return <ph id=\"ph1\">`null`</ph>.","pos":[180,237],"source":" Also, properties on the context object may return `null`."}]}],"pos":[18969,19207],"yaml":true},{"content":"A collection containing `null` or a standard set of valid values. The default implementation always returns `null`.","nodes":[{"pos":[0,115],"content":"A collection containing `null` or a standard set of valid values. The default implementation always returns `null`.","nodes":[{"content":"A collection containing <ph id=\"ph1\">`null`</ph> or a standard set of valid values.","pos":[0,65],"source":"A collection containing `null` or a standard set of valid values."},{"content":"The default implementation always returns <ph id=\"ph1\">`null`</ph>.","pos":[66,115],"source":" The default implementation always returns `null`."}]}],"pos":[19311,19427],"yaml":true},{"content":"Determines if this object supports a standard set of values that can be chosen from a list.","nodes":[{"pos":[0,91],"content":"Determines if this object supports a standard set of values that can be chosen from a list.","nodes":[{"content":"Determines if this object supports a standard set of values that can be chosen from a list.","pos":[0,91]}]}],"pos":[20779,20871],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> through which additional context can be provided.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph> through which additional context can be provided.","source":"A <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> through which additional context can be provided."}],"pos":[21108,21218],"yaml":true},{"content":"`true` if <xref href=\"System.Drawing.ColorConverter.GetStandardValues*\"></xref> must be called to find a common set of values the object supports; otherwise, `false`.","nodes":[{"pos":[0,166],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ColorConverter.GetStandardValues*\"&gt;&lt;/xref&gt;</ph> must be called to find a common set of values the object supports; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <xref href=\"System.Drawing.ColorConverter.GetStandardValues*\"></xref> must be called to find a common set of values the object supports; otherwise, `false`."}],"pos":[21276,21445],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.ColorConverter\n  commentId: T:System.Drawing.ColorConverter\n  id: ColorConverter\n  children:\n  - System.Drawing.ColorConverter.#ctor\n  - System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: ColorConverter\n  nameWithType: ColorConverter\n  fullName: System.Drawing.ColorConverter\n  type: Class\n  assemblies:\n  - System.Drawing\n  - System.ComponentModel.TypeConverter\n  namespace: System.Drawing\n  summary: Converts colors from one data type to another. Access this class through the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process. For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> method. This example is designed to be used with Windows Forms. Paste this code into a form and call the `ShowColorConverter` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.Converters#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Converters/CPP/form1.cpp#2)]\\n [!code-csharp[System.Drawing.Converters#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Converters/CS/form1.cs#2)]\\n [!code-vb[System.Drawing.Converters#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Converters/VB/form1.vb#2)]\"\n  syntax:\n    content: 'public class ColorConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  derivedClasses:\n  - System.Web.UI.WebControls.WebColorConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ColorConverter.#ctor\n  commentId: M:System.Drawing.ColorConverter.#ctor\n  id: '#ctor'\n  parent: System.Drawing.ColorConverter\n  langs:\n  - csharp\n  name: ColorConverter()\n  nameWithType: ColorConverter.ColorConverter()\n  fullName: ColorConverter.ColorConverter()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  - System.ComponentModel.TypeConverter\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.ColorConverter\"></xref> class.\n  syntax:\n    content: public ColorConverter ();\n    parameters: []\n  overload: System.Drawing.ColorConverter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.ColorConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: ColorConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: ColorConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.ComponentModel.TypeConverter\n  namespace: System.Drawing\n  summary: Determines if this converter can convert an object in the given source type to the native type of the converter.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.\n    - id: sourceType\n      type: System.Type\n      description: The type from which you want to convert.\n    return:\n      type: System.Boolean\n      description: '`true` if this object can perform the conversion; otherwise, `false`.'\n  overload: System.Drawing.ColorConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.ColorConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: ColorConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: ColorConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.ComponentModel.TypeConverter\n  namespace: System.Drawing\n  summary: Returns a value indicating whether this converter can convert an object to the given destination type using the context.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type to which you want to convert.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter can perform the operation; otherwise, `false`.'\n  overload: System.Drawing.ColorConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.ColorConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: ColorConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: ColorConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.ComponentModel.TypeConverter\n  namespace: System.Drawing\n  summary: Converts the given object to the converter's native type.\n  remarks: When converting from a string to a <xref:System.Drawing.Color> the <xref:System.Drawing.ColorConverter> expects the unqualified color name; otherwise, an exception will occur in the conversion process. For example, you should pass \"Blue\", not \"System.Drawing.Color.Blue\" or \"Color.Blue\", to the <xref:System.Drawing.ColorConverter.ConvertFrom%2A> method.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture to represent the color.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> representing the converted value.\n  overload: System.Drawing.ColorConverter.ConvertFrom*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Drawing.ColorConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: ColorConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: ColorConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.ComponentModel.TypeConverter\n  namespace: System.Drawing\n  summary: Converts the specified object to another type.\n  remarks: The most common conversion is to or from a string.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is `null`. Also, properties on the context object may return `null`.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that specifies the culture to represent the color.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the object to.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> representing the converted value.\n  overload: System.Drawing.ColorConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationtype</code> is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.ColorConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: ColorConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: ColorConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.ComponentModel.TypeConverter\n  namespace: System.Drawing\n  summary: Retrieves a collection containing a set of standard values for the data type for which this validator is designed. This will return `null` if the data type does not support a standard set of values.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is `null`. Also, properties on the context object may return `null`.\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: A collection containing `null` or a standard set of valid values. The default implementation always returns `null`.\n  overload: System.Drawing.ColorConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.ColorConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: ColorConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: ColorConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  - System.ComponentModel.TypeConverter\n  namespace: System.Drawing\n  summary: Determines if this object supports a standard set of values that can be chosen from a list.\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> through which additional context can be provided.\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.Drawing.ColorConverter.GetStandardValues*\"></xref> must be called to find a common set of values the object supports; otherwise, `false`.'\n  overload: System.Drawing.ColorConverter.GetStandardValuesSupported*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Drawing.ColorConverter.#ctor\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: ColorConverter()\n  nameWithType: ColorConverter.ColorConverter()\n  fullName: ColorConverter.ColorConverter()\n- uid: System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: ColorConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: ColorConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: ColorConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: ColorConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: ColorConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: ColorConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: ColorConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: ColorConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: ColorConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: ColorConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: ColorConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: ColorConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Drawing.ColorConverter.#ctor*\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: ColorConverter\n  nameWithType: ColorConverter.ColorConverter\n  fullName: ColorConverter.ColorConverter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n- uid: System.Drawing.ColorConverter.CanConvertFrom*\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: ColorConverter.CanConvertFrom\n  fullName: ColorConverter.CanConvertFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n- uid: System.Drawing.ColorConverter.CanConvertTo*\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: ColorConverter.CanConvertTo\n  fullName: ColorConverter.CanConvertTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n- uid: System.Drawing.ColorConverter.ConvertFrom*\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: ColorConverter.ConvertFrom\n  fullName: ColorConverter.ConvertFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n- uid: System.Drawing.ColorConverter.ConvertTo*\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: ColorConverter.ConvertTo\n  fullName: ColorConverter.ConvertTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n- uid: System.Drawing.ColorConverter.GetStandardValues*\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: ColorConverter.GetStandardValues\n  fullName: ColorConverter.GetStandardValues\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n- uid: System.Drawing.ColorConverter.GetStandardValuesSupported*\n  parent: System.Drawing.ColorConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: ColorConverter.GetStandardValuesSupported\n  fullName: ColorConverter.GetStandardValuesSupported\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ColorConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}