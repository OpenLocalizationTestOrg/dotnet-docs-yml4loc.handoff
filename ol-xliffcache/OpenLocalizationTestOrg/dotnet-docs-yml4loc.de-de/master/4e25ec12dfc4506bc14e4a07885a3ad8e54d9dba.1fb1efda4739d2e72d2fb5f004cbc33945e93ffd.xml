{"nodes":[{"content":"Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).","nodes":[{"pos":[0,122],"content":"Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).","nodes":[{"content":"Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).","pos":[0,122]}]}],"pos":[1740,1863],"yaml":true},{"content":"Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services. That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas. (For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.  \n  \n Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.  \n  \n The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas. Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.  \n  \n> [!NOTE]\n>  To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.  \n  \n## Exporting Schemas Into an XmlSchemaSet  \n To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.  \n  \n The set of types you are exporting are recorded as an internal set of data contracts. Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set. During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added. If there are conflicts, an exception will be thrown. A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.  \n  \n## Using the Exporter  \n A recommended way of using this class is as follows:  \n  \n1.  Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported. Use one of the overloads that is appropriate to your requirements.  \n  \n2.  Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.  \n  \n3.  Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>property.","nodes":[{"pos":[0,747],"content":"Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services. That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas. (For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.","pos":[0,275],"source":"Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services."},{"content":"That is, <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> transforms a set of CLR types into XML schemas.","pos":[276,392],"source":" That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas."},{"content":"(For more information about the types that can be used, see <bpt id=\"p1\">[</bpt>Types Supported by the Data Contract Serializer<ept id=\"p1\">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.","pos":[393,747],"source":" (For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service."}]},{"pos":[754,1030],"content":"Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.","nodes":[{"content":"Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> to transform XML schemas and create the CLR types that represent the data in a selected programming language.","pos":[0,276],"source":"Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language."}]},{"pos":[1037,1296],"content":"The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas. Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.","nodes":[{"content":"The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas. Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.","pos":[0,259],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> generates an <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object that contains the collection of schemas.","pos":[0,162],"source":"The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas."},{"content":"Access the set of schemas through the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property.","pos":[163,259],"source":" Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property."}]}]},{"pos":[1304,1474],"content":"[!NOTE]\n To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.","leadings":["","> "],"nodes":[{"content":"To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph>.","pos":[9,168],"source":" To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>."}]},{"pos":[1483,1521],"content":"Exporting Schemas Into an XmlSchemaSet","linkify":"Exporting Schemas Into an XmlSchemaSet","nodes":[{"content":"Exporting Schemas Into an XmlSchemaSet","pos":[0,38]}]},{"pos":[1525,1667],"content":"To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.","nodes":[{"content":"To create an instance of the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class that contains XML schema files, you should be aware of the following.","pos":[0,142],"source":"To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following."}]},{"pos":[1674,2422],"content":"The set of types you are exporting are recorded as an internal set of data contracts. Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set. During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added. If there are conflicts, an exception will be thrown. A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.","nodes":[{"content":"The set of types you are exporting are recorded as an internal set of data contracts. Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set. During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added. If there are conflicts, an exception will be thrown. A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.","pos":[0,748],"nodes":[{"content":"The set of types you are exporting are recorded as an internal set of data contracts.","pos":[0,85]},{"content":"Thus, you can call the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.","pos":[86,321],"source":" Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set."},{"content":"During the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> operation, the existing schemas are compared to the new schemas being added.","pos":[322,479],"source":" During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added."},{"content":"If there are conflicts, an exception will be thrown.","pos":[480,532]},{"content":"A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> instance.","pos":[533,748],"source":" A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance."}]}]},{"pos":[2431,2449],"content":"Using the Exporter","linkify":"Using the Exporter","nodes":[{"content":"Using the Exporter","pos":[0,18]}]},{"pos":[2453,2505],"content":"A recommended way of using this class is as follows:","nodes":[{"content":"A recommended way of using this class is as follows:","pos":[0,52]}]},{"pos":[2515,2752],"content":"Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported. Use one of the overloads that is appropriate to your requirements.","nodes":[{"content":"Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported. Use one of the overloads that is appropriate to your requirements.","pos":[0,237],"nodes":[{"content":"Use one of the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> overloads to determine whether the specified type or set of types can be exported.","pos":[0,170],"source":"Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported."},{"content":"Use one of the overloads that is appropriate to your requirements.","pos":[171,237]}]}]},{"pos":[2762,2862],"content":"Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.","nodes":[{"content":"Call the corresponding <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method.","pos":[0,100],"source":"Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method."}]},{"pos":[2872,2981],"content":"Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>property.","nodes":[{"content":"Retrieve the schemas from the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph>property.","pos":[0,109],"source":"Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>property."}]}],"pos":[1874,4879],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.XsdDataContractExporter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter\"></xref> class."}],"pos":[7094,7209],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter\"></xref> class with the specified set of schemas.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.XsdDataContractExporter\"&gt;&lt;/xref&gt;</ph> class with the specified set of schemas.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter\"></xref> class with the specified set of schemas."}],"pos":[8823,8972],"yaml":true},{"content":"Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas. After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.","nodes":[{"pos":[0,345],"content":"Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas. After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.","nodes":[{"content":"Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas. After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.","pos":[0,345],"nodes":[{"content":"Use this overload when you have an existing <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to which you want to add new schemas.","pos":[0,119],"source":"Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas."},{"content":"After you construct a <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> with this overload, call the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method to add new types to the existing set.","pos":[120,345],"source":" After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set."}]}]}],"pos":[8983,9329],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to be exported.","nodes":[{"pos":[0,96],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schemas to be exported.","source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to be exported."}],"pos":[9521,9618],"yaml":true},{"content":"Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.","nodes":[{"pos":[0,133],"content":"Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.","nodes":[{"content":"Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.","pos":[0,133]}]}],"pos":[11253,11387],"yaml":true},{"content":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of <xref href=\"System.Reflection.Assembly\"></xref> that contains the assemblies with the types to export.","nodes":[{"pos":[0,169],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.Reflection.Assembly\"&gt;&lt;/xref&gt;</ph> that contains the assemblies with the types to export.","source":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of <xref href=\"System.Reflection.Assembly\"></xref> that contains the assemblies with the types to export."}],"pos":[11648,11818],"yaml":true},{"content":"`true` if the types can be exported; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the types can be exported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the types can be exported; otherwise, `false`."}],"pos":[11876,11935],"yaml":true},{"content":"Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <xref href=\"System.Collections.Generic.ICollection`1\"></xref> can be exported.","nodes":[{"pos":[0,177],"content":"Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> can be exported.","source":"Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <xref href=\"System.Collections.Generic.ICollection`1\"></xref> can be exported."}],"pos":[13517,13695],"yaml":true},{"content":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> that contains the specified types to export.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> that contains the specified types to export.","source":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> that contains the specified types to export."}],"pos":[13909,14018],"yaml":true},{"content":"`true` if the types can be exported; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the types can be exported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the types can be exported; otherwise, `false`."}],"pos":[14076,14135],"yaml":true},{"content":"Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.","nodes":[{"pos":[0,101],"content":"Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.","nodes":[{"content":"Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.","pos":[0,101]}]}],"pos":[15558,15660],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to export.","nodes":[{"pos":[0,47],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to export.","source":"The <xref href=\"System.Type\"></xref> to export."}],"pos":[16323,16371],"yaml":true},{"content":"`true` if the type can be exported; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the type can be exported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the type can be exported; otherwise, `false`."}],"pos":[16429,16487],"yaml":true},{"content":"Transforms the types contained in the specified collection of assemblies.","nodes":[{"pos":[0,73],"content":"Transforms the types contained in the specified collection of assemblies.","nodes":[{"content":"Transforms the types contained in the specified collection of assemblies.","pos":[0,73]}]}],"pos":[18108,18182],"yaml":true},{"content":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Reflection.Assembly\"></xref>) that contains the types to export.","nodes":[{"pos":[0,151],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> (of <ph id=\"ph2\">&lt;xref href=\"System.Reflection.Assembly\"&gt;&lt;/xref&gt;</ph>) that contains the types to export.","source":"A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Reflection.Assembly\"></xref>) that contains the types to export."}],"pos":[18440,18592],"yaml":true},{"content":"The <code>assemblies</code> argument is `null`.","nodes":[{"pos":[0,47],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assemblies</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>assemblies</code> argument is `null`."}],"pos":[18781,18829],"yaml":true},{"content":"An <xref href=\"System.Reflection.Assembly\"></xref> in the collection is `null`.","nodes":[{"pos":[0,79],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Assembly\"&gt;&lt;/xref&gt;</ph> in the collection is <ph id=\"ph2\">`null`</ph>.","source":"An <xref href=\"System.Reflection.Assembly\"></xref> in the collection is `null`."}],"pos":[18923,19003],"yaml":true},{"content":"Transforms the types contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> passed to this method.","nodes":[{"pos":[0,122],"content":"Transforms the types contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> passed to this method.","source":"Transforms the types contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> passed to this method."}],"pos":[20474,20597],"yaml":true},{"content":"A  <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Type\"></xref>) that contains the types to export.","nodes":[{"pos":[0,137],"content":"A  <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> (of <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>) that contains the types to export.","source":"A  <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Type\"></xref>) that contains the types to export."}],"pos":[20808,20946],"yaml":true},{"content":"The <code>types</code> argument is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>types</code> argument is `null`."}],"pos":[21135,21178],"yaml":true},{"content":"A type in the collection is `null`.","nodes":[{"pos":[0,35],"content":"A type in the collection is <ph id=\"ph1\">`null`</ph>.","source":"A type in the collection is `null`."}],"pos":[21272,21308],"yaml":true},{"content":"Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema.","nodes":[{"pos":[0,136],"content":"Transforms the specified <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> type into an XML schema definition language (XSD) schema.","source":"Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema."}],"pos":[22620,22757],"yaml":true},{"content":"Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported. After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.","nodes":[{"pos":[0,345],"content":"Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported. After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.","nodes":[{"content":"Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported. After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.","pos":[0,345],"nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A&gt;</ph> to determine whether the type can be exported.","pos":[0,128],"source":"Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported."},{"content":"After calling the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A&gt;</ph> method, the schema can be retrieved through the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A&gt;</ph> property.","pos":[129,345],"source":" After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property."}]}]}],"pos":[22768,23114],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> to transform into an XML schema.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to transform into an XML schema.","source":"The <xref href=\"System.Type\"></xref> to transform into an XML schema."}],"pos":[23243,23313],"yaml":true},{"content":"The <code>type</code> argument is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>type</code> argument is `null`."}],"pos":[23502,23544],"yaml":true},{"content":"Returns the top-level name and namespace for the <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,82],"content":"Returns the top-level name and namespace for the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the top-level name and namespace for the <xref href=\"System.Type\"></xref>."}],"pos":[24928,25011],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to query.","nodes":[{"pos":[0,46],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to query.","source":"The <xref href=\"System.Type\"></xref> to query."}],"pos":[25175,25222],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the top-level name and namespace for this <xref href=\"System.Type\"></xref>, which is written to the stream when writing this object.","nodes":[{"pos":[0,201],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that represents the top-level name and namespace for this <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, which is written to the stream when writing this object.","source":"The <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the top-level name and namespace for this <xref href=\"System.Type\"></xref>, which is written to the stream when writing this object."}],"pos":[25293,25495],"yaml":true},{"content":"The <code>type</code> argument is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>type</code> argument is `null`."}],"pos":[25696,25738],"yaml":true},{"content":"Returns the XML schema type for the specified type.","nodes":[{"pos":[0,51],"content":"Returns the XML schema type for the specified type.","nodes":[{"content":"Returns the XML schema type for the specified type.","pos":[0,51]}]}],"pos":[27092,27144],"yaml":true},{"content":"The main purpose of this method is to allow anonymous types in XML schema to be represented. Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>. This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types. The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.","nodes":[{"pos":[0,528],"content":"The main purpose of this method is to allow anonymous types in XML schema to be represented. Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>. This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types. The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.","nodes":[{"content":"The main purpose of this method is to allow anonymous types in XML schema to be represented.","pos":[0,92]},{"content":"Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph>.","pos":[93,276],"source":" Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>."},{"content":"This method returns the <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaType&gt;</ph> definition for such types.","pos":[277,366],"source":" This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types."},{"content":"The types for which the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A&gt;</ph> method returns a valid name, this method returns <ph id=\"ph2\">`null`</ph>.","pos":[367,528],"source":" The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`."}]}],"pos":[27155,27684],"yaml":true,"extradata":"MT"},{"content":"The type to return a schema for.","nodes":[{"pos":[0,32],"content":"The type to return a schema for.","nodes":[{"content":"The type to return a schema for.","pos":[0,32]}]}],"pos":[27847,27880],"yaml":true},{"content":"An <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> that contains the XML schema.","nodes":[{"pos":[0,85],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaType\"&gt;&lt;/xref&gt;</ph> that contains the XML schema.","source":"An <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> that contains the XML schema."}],"pos":[27955,28041],"yaml":true},{"content":"The <code>type</code> argument is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>type</code> argument is `null`."}],"pos":[28237,28279],"yaml":true},{"content":"Returns the contract name and contract namespace for the <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,90],"content":"Returns the contract name and contract namespace for the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the contract name and contract namespace for the <xref href=\"System.Type\"></xref>."}],"pos":[29657,29748],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that was exported.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that was exported.","source":"The <xref href=\"System.Type\"></xref> that was exported."}],"pos":[29911,29967],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the contract name of the type and its namespace.","nodes":[{"pos":[0,116],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> that represents the contract name of the type and its namespace.","source":"An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the contract name of the type and its namespace."}],"pos":[30038,30155],"yaml":true},{"content":"The <code>type</code> argument is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>type</code> argument is `null`."}],"pos":[30355,30397],"yaml":true},{"content":"Gets or sets an <xref href=\"System.Runtime.Serialization.ExportOptions\"></xref> that contains options that can be set for the export operation.","nodes":[{"pos":[0,143],"content":"Gets or sets an <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ExportOptions\"&gt;&lt;/xref&gt;</ph> that contains options that can be set for the export operation.","source":"Gets or sets an <xref href=\"System.Runtime.Serialization.ExportOptions\"></xref> that contains options that can be set for the export operation."}],"pos":[31660,31804],"yaml":true},{"content":"An <xref href=\"System.Runtime.Serialization.ExportOptions\"></xref> that contains options used to customize how types are exported to schemas.","nodes":[{"pos":[0,141],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ExportOptions\"&gt;&lt;/xref&gt;</ph> that contains options used to customize how types are exported to schemas.","source":"An <xref href=\"System.Runtime.Serialization.ExportOptions\"></xref> that contains options used to customize how types are exported to schemas."}],"pos":[31985,32127],"yaml":true},{"content":"Gets the collection of exported XML schemas.","nodes":[{"pos":[0,44],"content":"Gets the collection of exported XML schemas.","nodes":[{"content":"Gets the collection of exported XML schemas.","pos":[0,44]}]}],"pos":[33481,33526],"yaml":true},{"content":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter.Export*\"></xref> method.","nodes":[{"pos":[0,252],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;&lt;/xref&gt;</ph> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.XsdDataContractExporter.Export*\"&gt;&lt;/xref&gt;</ph> method.","source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter.Export*\"></xref> method."}],"pos":[33678,33931],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.XsdDataContractExporter\n  commentId: T:System.Runtime.Serialization.XsdDataContractExporter\n  id: XsdDataContractExporter\n  children:\n  - System.Runtime.Serialization.XsdDataContractExporter.#ctor\n  - System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)\n  - System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  - System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})\n  - System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)\n  - System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  - System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})\n  - System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)\n  - System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)\n  - System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)\n  - System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)\n  - System.Runtime.Serialization.XsdDataContractExporter.Options\n  - System.Runtime.Serialization.XsdDataContractExporter.Schemas\n  langs:\n  - csharp\n  name: XsdDataContractExporter\n  nameWithType: XsdDataContractExporter\n  fullName: System.Runtime.Serialization.XsdDataContractExporter\n  type: Class\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).\n  remarks: \"Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services. That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas. (For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.  \\n  \\n Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.  \\n  \\n The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas. Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.  \\n  \\n> [!NOTE]\\n>  To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.  \\n  \\n## Exporting Schemas Into an XmlSchemaSet  \\n To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.  \\n  \\n The set of types you are exporting are recorded as an internal set of data contracts. Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set. During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added. If there are conflicts, an exception will be thrown. A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.  \\n  \\n## Using the Exporter  \\n A recommended way of using this class is as follows:  \\n  \\n1.  Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported. Use one of the overloads that is appropriate to your requirements.  \\n  \\n2.  Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.  \\n  \\n3.  Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>property.\"\n  example:\n  - \"The following example creates an instance of the <xref:System.Runtime.Serialization.XsdDataContractExporter> and calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.  \\n  \\n [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]\\n [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]\"\n  syntax:\n    content: public class XsdDataContractExporter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: XsdDataContractExporter()\n  nameWithType: XsdDataContractExporter.XsdDataContractExporter()\n  fullName: XsdDataContractExporter.XsdDataContractExporter()\n  type: Constructor\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter\"></xref> class.\n  syntax:\n    content: public XsdDataContractExporter ();\n    parameters: []\n  overload: System.Runtime.Serialization.XsdDataContractExporter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)\n  id: '#ctor(System.Xml.Schema.XmlSchemaSet)'\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: XsdDataContractExporter(XmlSchemaSet)\n  nameWithType: XsdDataContractExporter.XsdDataContractExporter(XmlSchemaSet)\n  fullName: XsdDataContractExporter.XsdDataContractExporter(XmlSchemaSet)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter\"></xref> class with the specified set of schemas.\n  remarks: Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas. After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.\n  syntax:\n    content: public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);\n    parameters:\n    - id: schemas\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas to be exported.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  id: CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: CanExport(ICollection<Assembly>)\n  nameWithType: XsdDataContractExporter.CanExport(ICollection<Assembly>)\n  fullName: XsdDataContractExporter.CanExport(ICollection<Assembly>)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.\n  syntax:\n    content: public bool CanExport (System.Collections.Generic.ICollection<System.Reflection.Assembly> assemblies);\n    parameters:\n    - id: assemblies\n      type: System.Collections.Generic.ICollection{System.Reflection.Assembly}\n      description: A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of <xref href=\"System.Reflection.Assembly\"></xref> that contains the assemblies with the types to export.\n    return:\n      type: System.Boolean\n      description: '`true` if the types can be exported; otherwise, `false`.'\n  overload: System.Runtime.Serialization.XsdDataContractExporter.CanExport*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})\n  id: CanExport(System.Collections.Generic.ICollection{System.Type})\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: CanExport(ICollection<Type>)\n  nameWithType: XsdDataContractExporter.CanExport(ICollection<Type>)\n  fullName: XsdDataContractExporter.CanExport(ICollection<Type>)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <xref href=\"System.Collections.Generic.ICollection`1\"></xref> can be exported.\n  syntax:\n    content: public bool CanExport (System.Collections.Generic.ICollection<Type> types);\n    parameters:\n    - id: types\n      type: System.Collections.Generic.ICollection{System.Type}\n      description: A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> that contains the specified types to export.\n    return:\n      type: System.Boolean\n      description: '`true` if the types can be exported; otherwise, `false`.'\n  overload: System.Runtime.Serialization.XsdDataContractExporter.CanExport*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)\n  id: CanExport(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: CanExport(Type)\n  nameWithType: XsdDataContractExporter.CanExport(Type)\n  fullName: XsdDataContractExporter.CanExport(Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.\n  remarks: ''\n  example:\n  - \"The following example calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> method before calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.  \\n  \\n [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]\\n [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]\"\n  syntax:\n    content: public bool CanExport (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to export.\n    return:\n      type: System.Boolean\n      description: '`true` if the type can be exported; otherwise, `false`.'\n  overload: System.Runtime.Serialization.XsdDataContractExporter.CanExport*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  id: Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: Export(ICollection<Assembly>)\n  nameWithType: XsdDataContractExporter.Export(ICollection<Assembly>)\n  fullName: XsdDataContractExporter.Export(ICollection<Assembly>)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Transforms the types contained in the specified collection of assemblies.\n  syntax:\n    content: public void Export (System.Collections.Generic.ICollection<System.Reflection.Assembly> assemblies);\n    parameters:\n    - id: assemblies\n      type: System.Collections.Generic.ICollection{System.Reflection.Assembly}\n      description: A <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Reflection.Assembly\"></xref>) that contains the types to export.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.Export*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>assemblies</code> argument is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An <xref href=\"System.Reflection.Assembly\"></xref> in the collection is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})\n  id: Export(System.Collections.Generic.ICollection{System.Type})\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: Export(ICollection<Type>)\n  nameWithType: XsdDataContractExporter.Export(ICollection<Type>)\n  fullName: XsdDataContractExporter.Export(ICollection<Type>)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Transforms the types contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> passed to this method.\n  syntax:\n    content: public void Export (System.Collections.Generic.ICollection<Type> types);\n    parameters:\n    - id: types\n      type: System.Collections.Generic.ICollection{System.Type}\n      description: A  <xref href=\"System.Collections.Generic.ICollection`1\"></xref> (of <xref href=\"System.Type\"></xref>) that contains the types to export.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.Export*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>types</code> argument is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A type in the collection is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)\n  id: Export(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: Export(Type)\n  nameWithType: XsdDataContractExporter.Export(Type)\n  fullName: XsdDataContractExporter.Export(Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema.\n  remarks: Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported. After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.\n  syntax:\n    content: public void Export (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to transform into an XML schema.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.Export*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>type</code> argument is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)\n  id: GetRootElementName(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: GetRootElementName(Type)\n  nameWithType: XsdDataContractExporter.GetRootElementName(Type)\n  fullName: XsdDataContractExporter.GetRootElementName(Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Returns the top-level name and namespace for the <xref href=\"System.Type\"></xref>.\n  syntax:\n    content: public System.Xml.XmlQualifiedName GetRootElementName (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to query.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: The <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the top-level name and namespace for this <xref href=\"System.Type\"></xref>, which is written to the stream when writing this object.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>type</code> argument is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)\n  id: GetSchemaType(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: GetSchemaType(Type)\n  nameWithType: XsdDataContractExporter.GetSchemaType(Type)\n  fullName: XsdDataContractExporter.GetSchemaType(Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Returns the XML schema type for the specified type.\n  remarks: The main purpose of this method is to allow anonymous types in XML schema to be represented. Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>. This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types. The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to return a schema for.\n    return:\n      type: System.Xml.Schema.XmlSchemaType\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> that contains the XML schema.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>type</code> argument is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)\n  commentId: M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)\n  id: GetSchemaTypeName(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: GetSchemaTypeName(Type)\n  nameWithType: XsdDataContractExporter.GetSchemaTypeName(Type)\n  fullName: XsdDataContractExporter.GetSchemaTypeName(Type)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Returns the contract name and contract namespace for the <xref href=\"System.Type\"></xref>.\n  syntax:\n    content: public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that was exported.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: An <xref href=\"System.Xml.XmlQualifiedName\"></xref> that represents the contract name of the type and its namespace.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>type</code> argument is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Options\n  commentId: P:System.Runtime.Serialization.XsdDataContractExporter.Options\n  id: Options\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: Options\n  nameWithType: XsdDataContractExporter.Options\n  fullName: XsdDataContractExporter.Options\n  type: Property\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Gets or sets an <xref href=\"System.Runtime.Serialization.ExportOptions\"></xref> that contains options that can be set for the export operation.\n  syntax:\n    content: public System.Runtime.Serialization.ExportOptions Options { get; set; }\n    return:\n      type: System.Runtime.Serialization.ExportOptions\n      description: An <xref href=\"System.Runtime.Serialization.ExportOptions\"></xref> that contains options used to customize how types are exported to schemas.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.Options*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Schemas\n  commentId: P:System.Runtime.Serialization.XsdDataContractExporter.Schemas\n  id: Schemas\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  langs:\n  - csharp\n  name: Schemas\n  nameWithType: XsdDataContractExporter.Schemas\n  fullName: XsdDataContractExporter.Schemas\n  type: Property\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: Gets the collection of exported XML schemas.\n  syntax:\n    content: public System.Xml.Schema.XmlSchemaSet Schemas { get; }\n    return:\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <xref href=\"System.Runtime.Serialization.XsdDataContractExporter.Export*\"></xref> method.\n  overload: System.Runtime.Serialization.XsdDataContractExporter.Schemas*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: XsdDataContractExporter()\n  nameWithType: XsdDataContractExporter.XsdDataContractExporter()\n  fullName: XsdDataContractExporter.XsdDataContractExporter()\n- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: XsdDataContractExporter(XmlSchemaSet)\n  nameWithType: XsdDataContractExporter.XsdDataContractExporter(XmlSchemaSet)\n  fullName: XsdDataContractExporter.XsdDataContractExporter(XmlSchemaSet)\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: CanExport(ICollection<Assembly>)\n  nameWithType: XsdDataContractExporter.CanExport(ICollection<Assembly>)\n  fullName: XsdDataContractExporter.CanExport(ICollection<Assembly>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Reflection.Assembly\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Collections.Generic.ICollection{System.Reflection.Assembly}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<Assembly>\n  nameWithType: ICollection<Assembly>\n  fullName: System.Collections.Generic.ICollection<System.Reflection.Assembly>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    nameWithType: Assembly\n    fullName: System.Reflection.Assembly\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: CanExport(ICollection<Type>)\n  nameWithType: XsdDataContractExporter.CanExport(ICollection<Type>)\n  fullName: XsdDataContractExporter.CanExport(ICollection<Type>)\n- uid: System.Type\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.Generic.ICollection{System.Type}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<Type>\n  nameWithType: ICollection<Type>\n  fullName: System.Collections.Generic.ICollection<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: CanExport(Type)\n  nameWithType: XsdDataContractExporter.CanExport(Type)\n  fullName: XsdDataContractExporter.CanExport(Type)\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: Export(ICollection<Assembly>)\n  nameWithType: XsdDataContractExporter.Export(ICollection<Assembly>)\n  fullName: XsdDataContractExporter.Export(ICollection<Assembly>)\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: Export(ICollection<Type>)\n  nameWithType: XsdDataContractExporter.Export(ICollection<Type>)\n  fullName: XsdDataContractExporter.Export(ICollection<Type>)\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: Export(Type)\n  nameWithType: XsdDataContractExporter.Export(Type)\n  fullName: XsdDataContractExporter.Export(Type)\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: GetRootElementName(Type)\n  nameWithType: XsdDataContractExporter.GetRootElementName(Type)\n  fullName: XsdDataContractExporter.GetRootElementName(Type)\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: false\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: GetSchemaType(Type)\n  nameWithType: XsdDataContractExporter.GetSchemaType(Type)\n  fullName: XsdDataContractExporter.GetSchemaType(Type)\n- uid: System.Xml.Schema.XmlSchemaType\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaType\n  nameWithType: XmlSchemaType\n  fullName: System.Xml.Schema.XmlSchemaType\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: GetSchemaTypeName(Type)\n  nameWithType: XsdDataContractExporter.GetSchemaTypeName(Type)\n  fullName: XsdDataContractExporter.GetSchemaTypeName(Type)\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Options\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: Options\n  nameWithType: XsdDataContractExporter.Options\n  fullName: XsdDataContractExporter.Options\n- uid: System.Runtime.Serialization.ExportOptions\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ExportOptions\n  nameWithType: ExportOptions\n  fullName: System.Runtime.Serialization.ExportOptions\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Schemas\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: Schemas\n  nameWithType: XsdDataContractExporter.Schemas\n  fullName: XsdDataContractExporter.Schemas\n- uid: System.Runtime.Serialization.XsdDataContractExporter.CanExport*\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: CanExport\n  nameWithType: XsdDataContractExporter.CanExport\n  fullName: XsdDataContractExporter.CanExport\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Export*\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: Export\n  nameWithType: XsdDataContractExporter.Export\n  fullName: XsdDataContractExporter.Export\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractExporter.#ctor*\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: XsdDataContractExporter\n  nameWithType: XsdDataContractExporter.XsdDataContractExporter\n  fullName: XsdDataContractExporter.XsdDataContractExporter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName*\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: GetRootElementName\n  nameWithType: XsdDataContractExporter.GetRootElementName\n  fullName: XsdDataContractExporter.GetRootElementName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType*\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: GetSchemaType\n  nameWithType: XsdDataContractExporter.GetSchemaType\n  fullName: XsdDataContractExporter.GetSchemaType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName*\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: GetSchemaTypeName\n  nameWithType: XsdDataContractExporter.GetSchemaTypeName\n  fullName: XsdDataContractExporter.GetSchemaTypeName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Options*\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: Options\n  nameWithType: XsdDataContractExporter.Options\n  fullName: XsdDataContractExporter.Options\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n- uid: System.Runtime.Serialization.XsdDataContractExporter.Schemas*\n  parent: System.Runtime.Serialization.XsdDataContractExporter\n  isExternal: false\n  name: Schemas\n  nameWithType: XsdDataContractExporter.Schemas\n  fullName: XsdDataContractExporter.Schemas\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/XsdDataContractExporter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}