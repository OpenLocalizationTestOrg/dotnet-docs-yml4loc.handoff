<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8daf0443556dc1ba832fc24efe44d5babd18ac0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Remoting.Proxies.RealProxy.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da9d8f3e494ea72d52126b55826cc5e66e8d706d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf42cb3f930be11b2a501a6ed46be7cc09c4d88b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides base functionality for proxies.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> class is the <ph id="ph2">`abstract`</ph> base class from which proxies must derive.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transparent proxy provides the illusion that the actual object resides in the client's space.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transparent proxy is itself housed by an instance of a managed runtime class of type <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> implements a part of the functionality that is needed to forward the operations from the transparent proxy.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that a proxy object inherits the associated semantics of managed objects such as garbage collection, support for fields and methods, and can be extended to form new classes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proxy has a dual nature: it acts as an object of the same class as the remote object (transparent proxy), and it is a managed object itself.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A proxy object can be used without regard to any remoting subdivisions within a <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class makes a link demand and an inheritance demand at the class level.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have infrastructure permission.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph> class with default values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph> class that represents a remote object of the specified <ph id="ph2">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current method creates a transparent proxy, which can be accessed through the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transparent proxy gives the impression that the actual object resides in the client's space.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transparent proxy is housed by an instance of a managed runtime class <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> implements a part of the functionality that is needed to forward the operations from the transparent proxy.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that a proxy object inherits the associated semantics of managed objects such as garbage collection and support for fields and methods, and can be extended to form new classes.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proxy has a dual nature: it acts as an object of the same class as the remote object (transparent proxy), and is a managed object itself.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the remote object for which to create a proxy.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;classToProxy&lt;/code&gt;</ph> is not an interface, and is not derived from <ph id="ph2">&lt;xref href="System.MarshalByRefObject"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stub data is used by custom proxy users to decide what to do with an incoming method call.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the remote object for which to create a proxy.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A stub to associate with the new proxy instance.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The stub data to set for the specified stub and the new proxy instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;classToProxy&lt;/code&gt;</ph> is not an interface, and is not derived from <ph id="ph2">&lt;xref href="System.MarshalByRefObject"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Attaches the current proxy instance to the specified remote <ph id="ph1">&lt;xref href="System.MarshalByRefObject"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.MarshalByRefObject"&gt;&lt;/xref&gt;</ph> that the current proxy instance represents.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have UnmanagedCode permission.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;&lt;/xref&gt;</ph> for the specified object type, and registers it with the remoting infrastructure as a client-activated object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object type that an <ph id="ph1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;&lt;/xref&gt;</ph> is created for.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A new instance of <ph id="ph1">&lt;xref href="System.Runtime.Remoting.ObjRef"&gt;&lt;/xref&gt;</ph> that is created for the specified type.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Detaches the current proxy instance from the remote server object that it represents.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The detached server object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have UnmanagedCode permission.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Requests an unmanaged reference to the object represented by the current proxy instance.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the proxy is requested for marshaling, then an <ph id="ph1">`IUnknown`</ph> interface for the object represented by the current proxy instance is returned.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">`IUnknown`</ph> was previously cached by the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown%2A&gt;</ph> method, then that instance is returned; otherwise, a new instance is returned.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the proxy is requested not for marshaling but for communication with unmanaged objects in the current process, then a <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept> (CCW), which can be used in the current process for communication through COM, is returned.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the object reference is requested for marshaling to a remote location; <ph id="ph2">`false`</ph> if the object reference is requested for communication with unmanaged objects in the current process through COM.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A pointer to a <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept> if the object reference is requested for communication with unmanaged objects in the current process through COM, or a pointer to a cached or newly generated <ph id="ph1">`IUnknown`</ph> COM interface if the object reference is requested for marshaling to a remote location.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Adds the transparent proxy of the object represented by the current instance of <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph> to the specified <ph id="ph2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> into which the transparent proxy is serialized.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The source and destination of the serialization.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">context</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have SerializationFormatter permission.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the object that the current instance of <ph id="ph2">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the object that the current instance of <ph id="ph2">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Retrieves stub data that is stored for the specified proxy.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stub data is used by custom proxy users to decide what to do with an incoming method call.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The proxy for which stub data is requested.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Stub data for the specified proxy.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have UnmanagedCode permission.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns the transparent proxy for the current instance of <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The transparent proxy for the current proxy instance.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns the server object that is represented by the current proxy instance.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer%2A&gt;</ph> method is used in scenarios involving an external <ph id="ph2">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph> in the same <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The server object that is represented by the current proxy instance.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have UnmanagedCode permission.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the object <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the remote object that the current instance of <ph id="ph2">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph> represents with the specified <ph id="ph3">&lt;xref href="System.Runtime.Remoting.Activation.IConstructionCallMessage"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`ctorMsg`</ph> parameter is <ph id="ph2">`null`</ph>, then the <ph id="ph3">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject%2A&gt;</ph> method calls the default constructor for the new instance of the remote object that is represented by the current <ph id="ph4">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A construction call message that contains the constructor parameters for the new instance of the remote object that is represented by the current <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Proxies.RealProxy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The result of the construction request.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have UnmanagedCode permission.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, invokes the method that is specified in the provided <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;&lt;/xref&gt;</ph> on the remote object that is represented by the current instance.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the transparent proxy that is backed by the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph> is called, it delegates the calls to the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy.Invoke%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy.Invoke%2A&gt;</ph> method transforms the message in the <ph id="ph2">`msg`</ph> parameter into a <ph id="ph3">&lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt;</ph>, and sends it to the remote object that is represented by the current instance of <ph id="ph4">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;</ph> parameter provides a dictionary through the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.IMessage.Properties%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The dictionary contains name/value pairs of information about the method call, such as the name of the method called and its parameters.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Messaging.IMessage"&gt;&lt;/xref&gt;</ph> that contains a <ph id="ph2">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> of information about the method call.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The message returned by the invoked method, containing the return value and any <ph id="ph1">`out`</ph> or <ph id="ph2">`ref`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Stores an unmanaged proxy of the object that is represented by the current instance.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an unmanaged proxy attempts to communicate with the common language runtime through COM, the runtime resolves the remote object that is represented by the unmanaged proxy.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the remote object is managed and also resides in a common language environment, then instead of communicating with it through distributed COM, the object is sent to the current process.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the remote object is not derived from <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>, then it is serialized and copied to the current location.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is derived from <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>, then it returns a transparent proxy, and the remoting infrastructure caches the unmanaged proxy (the <ph id="ph2">`IUnknown`</ph> interface) in the transparent proxy for future use.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">`IUnknown`</ph> interface for the object that is represented by the current proxy instance.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Sets the stub data for the specified proxy.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stub data is used by custom proxy users to decide what to do with an incoming method call.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The proxy for which to set stub data.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The new stub data.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have UnmanagedCode permission.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Requests a COM interface with the specified ID.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface%2A&gt;</ph> method allows the current proxy instance to implement additional COM interfaces on behalf of the server object that the current instance represents.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current method generates the requested interface and returns a pointer to it.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types of COM interfaces that can be generated by this method depend on the proxy type, which in turn might depend on the type of the server object that the current proxy instance represents.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.Remoting.Proxies.ProxyAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A reference to the requested interface.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A pointer to the requested interface.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>