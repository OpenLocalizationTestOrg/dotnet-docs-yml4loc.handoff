{"nodes":[{"content":"Provides data for the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdated\"></xref> event.","nodes":[{"pos":[0,95],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.GridView.RowUpdated\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides data for the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdated\"></xref> event."}],"pos":[1010,1106],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.GridView> control raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event when an Update button in the control is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the record. (An Update button is a button control whose `CommandName` property is set to \"Update\".) You can perform a custom routine whenever this event occurs, such as checking the results of an update operation.  \n  \n A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred. To determine the number of records that were affected by the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property. To determine whether any exceptions occurred, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property. You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property.  \n  \n To access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property. You can access the original non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property. You can access the updated non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> properties.  \n  \n By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation. When you handle an exception that occurred during the update operation, you can keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.  \n  \n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class, see the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> constructor.","nodes":[{"pos":[0,458],"content":"The <xref:System.Web.UI.WebControls.GridView> control raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event when an Update button in the control is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the record. (An Update button is a button control whose `CommandName` property is set to \"Update\".) You can perform a custom routine whenever this event occurs, such as checking the results of an update operation.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control raises the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridView.RowUpdated&gt;</ph> event when an Update button in the control is clicked, but after the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control updates the record.","pos":[0,256],"source":"The <xref:System.Web.UI.WebControls.GridView> control raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event when an Update button in the control is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the record."},{"content":"(An Update button is a button control whose <ph id=\"ph1\">`CommandName`</ph> property is set to \"Update\".) You can perform a custom routine whenever this event occurs, such as checking the results of an update operation.","pos":[257,458],"source":" (An Update button is a button control whose `CommandName` property is set to \"Update\".) You can perform a custom routine whenever this event occurs, such as checking the results of an update operation."}]},{"pos":[465,1166],"content":"A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred. To determine the number of records that were affected by the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property. To determine whether any exceptions occurred, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property. You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property.","nodes":[{"content":"A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred. To determine the number of records that were affected by the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property. To determine whether any exceptions occurred, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property. You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property.","pos":[0,701],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs&gt;</ph> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred.","pos":[0,215],"source":"A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred."},{"content":"To determine the number of records that were affected by the update operation, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A&gt;</ph> property.","pos":[216,386],"source":" To determine the number of records that were affected by the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property."},{"content":"To determine whether any exceptions occurred, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A&gt;</ph> property.","pos":[387,521],"source":" To determine whether any exceptions occurred, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property."},{"content":"You can also indicate whether the exception was handled in the event handler by setting the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A&gt;</ph> property.","pos":[522,701],"source":" You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property."}]}]},{"pos":[1173,1598],"content":"To access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property. You can access the original non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property. You can access the updated non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> properties.","nodes":[{"content":"To access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property. You can access the original non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property. You can access the updated non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> properties.","pos":[0,425],"nodes":[{"content":"To access the key field values for the updated record, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A&gt;</ph> property.","pos":[0,138],"source":"To access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property."},{"content":"You can access the original non-key field values by using the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A&gt;</ph> property.","pos":[139,281],"source":" You can access the original non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property."},{"content":"You can access the updated non-key field values by using the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A&gt;</ph> properties.","pos":[282,425],"source":" You can access the updated non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> properties."}]}]},{"pos":[1605,1986],"content":"By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation. When you handle an exception that occurred during the update operation, you can keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control returns to read-only mode after an update operation.","pos":[0,118],"source":"By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation."},{"content":"When you handle an exception that occurred during the update operation, you can keep the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control in edit mode by setting the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A&gt;</ph> property to <ph id=\"ph3\">`true`</ph>.","pos":[119,381],"source":" When you handle an exception that occurred during the update operation, you can keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`."}]},{"pos":[1993,2140],"content":"For more information about how to handle events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[2147,2362],"content":"For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class, see the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> constructor.","nodes":[{"content":"For a list of initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs&gt;</ph> class, see the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A&gt;</ph> constructor.","pos":[0,215],"source":"For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class, see the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> constructor."}]}],"pos":[1117,3494],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.GridViewUpdatedEventArgs\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.GridViewUpdatedEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.GridViewUpdatedEventArgs\"></xref> class."}],"pos":[5645,5758],"yaml":true},{"content":"The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class.  \n  \n|Property|Initial Value|  \n|--------------|-------------------|  \n|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>|The value of the `affectedRows` parameter.|  \n|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>|The <xref:System.Exception?displayProperty=fullName> object that is contained in the `e` parameter.|  \n|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>|Initialized to `false`.|  \n|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>|Initialized to `false`.|  \n  \n> [!NOTE]\n>  This constructor is primarily used by control developers when they raise events.","nodes":[{"pos":[0,137],"content":"The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class.","nodes":[{"content":"The following table shows initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs&gt;</ph> class.","pos":[0,137],"source":"The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class."}]},{"pos":[144,152],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[153,166],"content":"Initial Value","nodes":[{"content":"Initial Value","pos":[0,13]}]},{"pos":[210,283],"content":"<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>","nodes":[]},{"pos":[284,326],"content":"The value of the <ph id=\"ph1\">`affectedRows`</ph> parameter.","source":"The value of the `affectedRows` parameter."},{"pos":[331,401],"content":"<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>","nodes":[]},{"pos":[402,501],"content":"The <ph id=\"ph1\">&lt;xref:System.Exception?displayProperty=fullName&gt;</ph> object that is contained in the <ph id=\"ph2\">`e`</ph> parameter.","source":"The <xref:System.Exception?displayProperty=fullName> object that is contained in the `e` parameter."},{"pos":[506,583],"content":"<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>","nodes":[]},{"pos":[584,607],"content":"Initialized to <ph id=\"ph1\">`false`</ph>.","source":"Initialized to `false`."},{"pos":[612,687],"content":"<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>","nodes":[]},{"pos":[688,711],"content":"Initialized to <ph id=\"ph1\">`false`</ph>.","source":"Initialized to `false`."},{"pos":[720,811],"content":"[!NOTE]\n This constructor is primarily used by control developers when they raise events.","leadings":["","> "],"nodes":[{"content":"This constructor is primarily used by control developers when they raise events.","pos":[9,89]}]}],"pos":[5769,6593],"yaml":true,"extradata":"MT"},{"content":"The number of rows that were affected by the update operation.","nodes":[{"pos":[0,62],"content":"The number of rows that were affected by the update operation.","nodes":[{"content":"The number of rows that were affected by the update operation.","pos":[0,62]}]}],"pos":[6764,6827],"yaml":true},{"content":"The exception that was raised when the update operation was performed. If no exception was raised, use `null` for this parameter.","nodes":[{"pos":[0,129],"content":"The exception that was raised when the update operation was performed. If no exception was raised, use `null` for this parameter.","nodes":[{"content":"The exception that was raised when the update operation was performed.","pos":[0,70]},{"content":"If no exception was raised, use <ph id=\"ph1\">`null`</ph> for this parameter.","pos":[71,129],"source":" If no exception was raised, use `null` for this parameter."}]}],"pos":[6887,7017],"yaml":true},{"content":"Gets the number of rows that were affected by the update operation.","nodes":[{"pos":[0,67],"content":"Gets the number of rows that were affected by the update operation.","nodes":[{"content":"Gets the number of rows that were affected by the update operation.","pos":[0,67]}]}],"pos":[8106,8174],"yaml":true},{"content":"Because only one record is typically updated, this property usually contains a value of 0 or 1.  \n  \n An error can occur during the update operation that does not raise an exception. You can use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to make sure that a record was updated.","nodes":[{"pos":[0,95],"content":"Because only one record is typically updated, this property usually contains a value of 0 or 1.","nodes":[{"content":"Because only one record is typically updated, this property usually contains a value of 0 or 1.","pos":[0,95]}]},{"pos":[102,321],"content":"An error can occur during the update operation that does not raise an exception. You can use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to make sure that a record was updated.","nodes":[{"content":"An error can occur during the update operation that does not raise an exception. You can use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to make sure that a record was updated.","pos":[0,219],"nodes":[{"content":"An error can occur during the update operation that does not raise an exception.","pos":[0,80]},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A&gt;</ph> property to make sure that a record was updated.","pos":[81,219],"source":" You can use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to make sure that a record was updated."}]}]}],"pos":[8185,8511],"yaml":true,"extradata":"MT"},{"content":"The number of rows that were affected by the update operation.","nodes":[{"pos":[0,62],"content":"The number of rows that were affected by the update operation.","nodes":[{"content":"The number of rows that were affected by the update operation.","pos":[0,62]}]}],"pos":[9198,9261],"yaml":true},{"content":"Gets the exception (if any) that was raised during the update operation.","nodes":[{"pos":[0,72],"content":"Gets the exception (if any) that was raised during the update operation.","nodes":[{"content":"Gets the exception (if any) that was raised during the update operation.","pos":[0,72]}]}],"pos":[10339,10412],"yaml":true},{"content":"If an exception was raised and you decide to handle the exception in the event handler, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`. Otherwise, the exception is thrown again by the <xref:System.Web.UI.WebControls.GridView> control.","nodes":[{"pos":[0,292],"content":"If an exception was raised and you decide to handle the exception in the event handler, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`. Otherwise, the exception is thrown again by the <xref:System.Web.UI.WebControls.GridView> control.","nodes":[{"content":"If an exception was raised and you decide to handle the exception in the event handler, set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[0,193],"source":"If an exception was raised and you decide to handle the exception in the event handler, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`."},{"content":"Otherwise, the exception is thrown again by the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.","pos":[194,292],"source":" Otherwise, the exception is thrown again by the <xref:System.Web.UI.WebControls.GridView> control."}]}],"pos":[10423,10716],"yaml":true,"extradata":"MT"},{"content":"The exception that was raised during the update operation. If no exceptions were raised, this property returns `null`.","nodes":[{"pos":[0,118],"content":"The exception that was raised during the update operation. If no exceptions were raised, this property returns `null`.","nodes":[{"content":"The exception that was raised during the update operation.","pos":[0,58]},{"content":"If no exceptions were raised, this property returns <ph id=\"ph1\">`null`</ph>.","pos":[59,118],"source":" If no exceptions were raised, this property returns `null`."}]}],"pos":[11350,11469],"yaml":true},{"content":"Gets or sets a value that indicates whether an exception that was raised during the update operation was handled in the event handler.","nodes":[{"pos":[0,134],"content":"Gets or sets a value that indicates whether an exception that was raised during the update operation was handled in the event handler.","nodes":[{"content":"Gets or sets a value that indicates whether an exception that was raised during the update operation was handled in the event handler.","pos":[0,134]}]}],"pos":[12586,12721],"yaml":true},{"content":"When an exception is raised during the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to indicate whether you handled the exception in the event handler. When this property is set to `true`, the exception is considered handled and is not thrown again by the <xref:System.Web.UI.WebControls.GridView> control. If this property is set to `false`, the exception is thrown again. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property.","nodes":[{"pos":[0,571],"content":"When an exception is raised during the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to indicate whether you handled the exception in the event handler. When this property is set to `true`, the exception is considered handled and is not thrown again by the <xref:System.Web.UI.WebControls.GridView> control. If this property is set to `false`, the exception is thrown again. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property.","nodes":[{"content":"When an exception is raised during the update operation, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A&gt;</ph> property to indicate whether you handled the exception in the event handler.","pos":[0,219],"source":"When an exception is raised during the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to indicate whether you handled the exception in the event handler."},{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the exception is considered handled and is not thrown again by the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.","pos":[220,374],"source":" When this property is set to `true`, the exception is considered handled and is not thrown again by the <xref:System.Web.UI.WebControls.GridView> control."},{"content":"If this property is set to <ph id=\"ph1\">`false`</ph>, the exception is thrown again.","pos":[375,441],"source":" If this property is set to `false`, the exception is thrown again."},{"content":"To determine which exception was raised, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A&gt;</ph> property.","pos":[442,571],"source":" To determine which exception was raised, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property."}]}],"pos":[12732,13304],"yaml":true,"extradata":"MT"},{"content":"`true` if the exception was handled in the event handler; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,101],"content":"`true` if the exception was handled in the event handler; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the exception was handled in the event handler; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,77],"source":"`true` if the exception was handled in the event handler; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[78,101],"source":" The default is `false`."}]}],"pos":[13937,14041],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control should remain in edit mode after an update operation.","nodes":[{"pos":[0,165],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.GridView\"&gt;&lt;/xref&gt;</ph> control should remain in edit mode after an update operation.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control should remain in edit mode after an update operation."}],"pos":[15153,15319],"yaml":true},{"content":"By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation. To keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.","nodes":[{"pos":[0,298],"content":"By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation. To keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control returns to read-only mode after an update operation.","pos":[0,118],"source":"By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation."},{"content":"To keep the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control in edit mode, set the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A&gt;</ph> property to <ph id=\"ph3\">`true`</ph>.","pos":[119,298],"source":" To keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`."}]}],"pos":[15330,15629],"yaml":true,"extradata":"MT"},{"content":"`true` if the control will remain in edit mode after an update operation; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,117],"content":"`true` if the control will remain in edit mode after an update operation; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the control will remain in edit mode after an update operation; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,93],"source":"`true` if the control will remain in edit mode after an update operation; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[94,117],"source":" The default is `false`."}]}],"pos":[16294,16414],"yaml":true},{"content":"Gets a dictionary that contains the key field name/value pairs for the updated record.","nodes":[{"pos":[0,86],"content":"Gets a dictionary that contains the key field name/value pairs for the updated record.","nodes":[{"content":"Gets a dictionary that contains the key field name/value pairs for the updated record.","pos":[0,86]}]}],"pos":[17464,17551],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record. For example, you can use these values to keep a log of updated records.  \n  \n The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record.  \n  \n> [!NOTE]\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","nodes":[{"pos":[0,215],"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record. For example, you can use these values to keep a log of updated records.","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record. For example, you can use these values to keep a log of updated records.","pos":[0,215],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A&gt;</ph> property to access the values of the key field for an updated record.","pos":[0,143],"source":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record."},{"content":"For example, you can use these values to keep a log of updated records.","pos":[144,215]}]}]},{"pos":[222,575],"content":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record.","pos":[0,353],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A&gt;</ph> property returns an object that implements the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt;</ph> interface.","pos":[0,209],"source":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface."},{"content":"The object contains <ph id=\"ph1\">&lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt;</ph> objects that represent the fields of the updated record.","pos":[210,353],"source":" The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record."}]}]},{"pos":[583,745],"content":"[!NOTE]\n As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","leadings":["","> "],"nodes":[{"content":"As a shortcut, you can also use the indexer of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> object to access the field values directly.","pos":[9,160],"source":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly."}]}],"pos":[17562,18315],"yaml":true,"extradata":"MT"},{"content":"A dictionary of key field name/value pairs for the updated record.","nodes":[{"pos":[0,66],"content":"A dictionary of key field name/value pairs for the updated record.","nodes":[{"content":"A dictionary of key field name/value pairs for the updated record.","pos":[0,66]}]}],"pos":[19007,19074],"yaml":true},{"content":"Gets a dictionary that contains the new field name/value pairs for the updated record.","nodes":[{"pos":[0,86],"content":"Gets a dictionary that contains the new field name/value pairs for the updated record.","nodes":[{"content":"Gets a dictionary that contains the new field name/value pairs for the updated record.","pos":[0,86]}]}],"pos":[20144,20231],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property to access the new field values for the updated record. For example, you can use these values to keep a log of updated records.  \n  \n The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record.  \n  \n> [!NOTE]\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","nodes":[{"pos":[0,214],"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property to access the new field values for the updated record. For example, you can use these values to keep a log of updated records.","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property to access the new field values for the updated record. For example, you can use these values to keep a log of updated records.","pos":[0,214],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A&gt;</ph> property to access the new field values for the updated record.","pos":[0,142],"source":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property to access the new field values for the updated record."},{"content":"For example, you can use these values to keep a log of updated records.","pos":[143,214]}]}]},{"pos":[221,579],"content":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record.","pos":[0,358],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A&gt;</ph> property returns an object that implements the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt;</ph> interface.","pos":[0,214],"source":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface."},{"content":"The object contains <ph id=\"ph1\">&lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt;</ph> objects that represent the fields of the updated record.","pos":[215,358],"source":" The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record."}]}]},{"pos":[587,749],"content":"[!NOTE]\n As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","leadings":["","> "],"nodes":[{"content":"As a shortcut, you can also use the indexer of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> object to access the field values directly.","pos":[9,160],"source":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly."}]}],"pos":[20242,20999],"yaml":true,"extradata":"MT"},{"content":"A dictionary of the new field name/value pairs for the updated record.","nodes":[{"pos":[0,70],"content":"A dictionary of the new field name/value pairs for the updated record.","nodes":[{"content":"A dictionary of the new field name/value pairs for the updated record.","pos":[0,70]}]}],"pos":[21726,21797],"yaml":true},{"content":"Gets a dictionary that contains the original field name/value pairs for the updated record.","nodes":[{"pos":[0,91],"content":"Gets a dictionary that contains the original field name/value pairs for the updated record.","nodes":[{"content":"Gets a dictionary that contains the original field name/value pairs for the updated record.","pos":[0,91]}]}],"pos":[22872,22964],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.  \n  \n The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record with their original values.  \n  \n> [!NOTE]\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","nodes":[{"pos":[0,219],"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.","pos":[0,219],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A&gt;</ph> property to access the original field values for the updated record.","pos":[0,147],"source":"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property to access the original field values for the updated record."},{"content":"For example, you can use these values to keep a log of updated records.","pos":[148,219]}]}]},{"pos":[226,611],"content":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record with their original values.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record with their original values.","pos":[0,385],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A&gt;</ph> property returns an object that implements the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt;</ph> interface.","pos":[0,214],"source":"The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface."},{"content":"The object contains <ph id=\"ph1\">&lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt;</ph> objects that represent the fields of the updated record with their original values.","pos":[215,385],"source":" The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record with their original values."}]}]},{"pos":[619,781],"content":"[!NOTE]\n As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.","leadings":["","> "],"nodes":[{"content":"As a shortcut, you can also use the indexer of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> object to access the field values directly.","pos":[9,160],"source":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly."}]}],"pos":[22975,23764],"yaml":true,"extradata":"MT"},{"content":"A dictionary of the original field name/value pairs for the updated record.","nodes":[{"pos":[0,75],"content":"A dictionary of the original field name/value pairs for the updated record.","nodes":[{"content":"A dictionary of the original field name/value pairs for the updated record.","pos":[0,75]}]}],"pos":[24476,24552],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  commentId: T:System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  id: GridViewUpdatedEventArgs\n  children:\n  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)\n  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows\n  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception\n  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled\n  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode\n  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys\n  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues\n  - System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues\n  langs:\n  - csharp\n  name: GridViewUpdatedEventArgs\n  nameWithType: GridViewUpdatedEventArgs\n  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Provides data for the <xref href=\"System.Web.UI.WebControls.GridView.RowUpdated\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.GridView> control raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event when an Update button in the control is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the record. (An Update button is a button control whose `CommandName` property is set to \\\"Update\\\".) You can perform a custom routine whenever this event occurs, such as checking the results of an update operation.  \\n  \\n A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred. To determine the number of records that were affected by the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property. To determine whether any exceptions occurred, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property. You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property.  \\n  \\n To access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property. You can access the original non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property. You can access the updated non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> properties.  \\n  \\n By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation. When you handle an exception that occurred during the update operation, you can keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.  \\n  \\n For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class, see the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> constructor.\"\n  example:\n  - \"The following example shows how to determine whether an exception occurred during an update operation.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: 'public class GridViewUpdatedEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)\n  commentId: M:System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)\n  id: '#ctor(System.Int32,System.Exception)'\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: GridViewUpdatedEventArgs(Int32, Exception)\n  nameWithType: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs(Int32, Exception)\n  fullName: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs(Int32, Exception)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.GridViewUpdatedEventArgs\"></xref> class.\n  remarks: \"The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class.  \\n  \\n|Property|Initial Value|  \\n|--------------|-------------------|  \\n|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>|The value of the `affectedRows` parameter.|  \\n|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>|The <xref:System.Exception?displayProperty=fullName> object that is contained in the `e` parameter.|  \\n|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>|Initialized to `false`.|  \\n|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>|Initialized to `false`.|  \\n  \\n> [!NOTE]\\n>  This constructor is primarily used by control developers when they raise events.\"\n  syntax:\n    content: public GridViewUpdatedEventArgs (int affectedRows, Exception e);\n    parameters:\n    - id: affectedRows\n      type: System.Int32\n      description: The number of rows that were affected by the update operation.\n    - id: e\n      type: System.Exception\n      description: The exception that was raised when the update operation was performed. If no exception was raised, use `null` for this parameter.\n  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows\n  commentId: P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows\n  id: AffectedRows\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: AffectedRows\n  nameWithType: GridViewUpdatedEventArgs.AffectedRows\n  fullName: GridViewUpdatedEventArgs.AffectedRows\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the number of rows that were affected by the update operation.\n  remarks: \"Because only one record is typically updated, this property usually contains a value of 0 or 1.  \\n  \\n An error can occur during the update operation that does not raise an exception. You can use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to make sure that a record was updated.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to verify that a record was updated.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public int AffectedRows { get; }\n    return:\n      type: System.Int32\n      description: The number of rows that were affected by the update operation.\n  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception\n  commentId: P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception\n  id: Exception\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: GridViewUpdatedEventArgs.Exception\n  fullName: GridViewUpdatedEventArgs.Exception\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the exception (if any) that was raised during the update operation.\n  remarks: If an exception was raised and you decide to handle the exception in the event handler, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`. Otherwise, the exception is thrown again by the <xref:System.Web.UI.WebControls.GridView> control.\n  example:\n  - \"The following example shows how to determine whether an exception occurred during an update operation.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public Exception Exception { get; }\n    return:\n      type: System.Exception\n      description: The exception that was raised during the update operation. If no exceptions were raised, this property returns `null`.\n  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled\n  commentId: P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled\n  id: ExceptionHandled\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: ExceptionHandled\n  nameWithType: GridViewUpdatedEventArgs.ExceptionHandled\n  fullName: GridViewUpdatedEventArgs.ExceptionHandled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether an exception that was raised during the update operation was handled in the event handler.\n  remarks: When an exception is raised during the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to indicate whether you handled the exception in the event handler. When this property is set to `true`, the exception is considered handled and is not thrown again by the <xref:System.Web.UI.WebControls.GridView> control. If this property is set to `false`, the exception is thrown again. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property.\n  example:\n  - \"The following example shows how to indicate that the exception was handled in the event handler.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public bool ExceptionHandled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the exception was handled in the event handler; otherwise, `false`. The default is `false`.'\n  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode\n  commentId: P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode\n  id: KeepInEditMode\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: KeepInEditMode\n  nameWithType: GridViewUpdatedEventArgs.KeepInEditMode\n  fullName: GridViewUpdatedEventArgs.KeepInEditMode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.GridView\"></xref> control should remain in edit mode after an update operation.\n  remarks: By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation. To keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.\n  example:\n  - \"The following example shows how to keep a <xref:System.Web.UI.WebControls.GridView> control in edit mode when an exception occurs.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public bool KeepInEditMode { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control will remain in edit mode after an update operation; otherwise, `false`. The default is `false`.'\n  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys\n  commentId: P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys\n  id: Keys\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: GridViewUpdatedEventArgs.Keys\n  fullName: GridViewUpdatedEventArgs.Keys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the key field name/value pairs for the updated record.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record. For example, you can use these values to keep a log of updated records.  \\n  \\n The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.\"\n  example:\n  - \"The following example shows how to access the values of the key field for an updated record.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: A dictionary of key field name/value pairs for the updated record.\n  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues\n  commentId: P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues\n  id: NewValues\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: NewValues\n  nameWithType: GridViewUpdatedEventArgs.NewValues\n  fullName: GridViewUpdatedEventArgs.NewValues\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the new field name/value pairs for the updated record.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property to access the new field values for the updated record. For example, you can use these values to keep a log of updated records.  \\n  \\n The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.\"\n  example:\n  - \"The following example shows how to access the new values entered by the user for the non-key fields of the updated record.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: A dictionary of the new field name/value pairs for the updated record.\n  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues\n  commentId: P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues\n  id: OldValues\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  langs:\n  - csharp\n  name: OldValues\n  nameWithType: GridViewUpdatedEventArgs.OldValues\n  fullName: GridViewUpdatedEventArgs.OldValues\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the original field name/value pairs for the updated record.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.  \\n  \\n The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record with their original values.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.\"\n  example:\n  - \"The following example shows how to access the original values of the non-key fields for the updated record.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: A dictionary of the original field name/value pairs for the updated record.\n  overload: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: GridViewUpdatedEventArgs(Int32, Exception)\n  nameWithType: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs(Int32, Exception)\n  fullName: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs(Int32, Exception)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: AffectedRows\n  nameWithType: GridViewUpdatedEventArgs.AffectedRows\n  fullName: GridViewUpdatedEventArgs.AffectedRows\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: GridViewUpdatedEventArgs.Exception\n  fullName: GridViewUpdatedEventArgs.Exception\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: ExceptionHandled\n  nameWithType: GridViewUpdatedEventArgs.ExceptionHandled\n  fullName: GridViewUpdatedEventArgs.ExceptionHandled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: KeepInEditMode\n  nameWithType: GridViewUpdatedEventArgs.KeepInEditMode\n  fullName: GridViewUpdatedEventArgs.KeepInEditMode\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: Keys\n  nameWithType: GridViewUpdatedEventArgs.Keys\n  fullName: GridViewUpdatedEventArgs.Keys\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: NewValues\n  nameWithType: GridViewUpdatedEventArgs.NewValues\n  fullName: GridViewUpdatedEventArgs.NewValues\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: OldValues\n  nameWithType: GridViewUpdatedEventArgs.OldValues\n  fullName: GridViewUpdatedEventArgs.OldValues\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor*\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: GridViewUpdatedEventArgs\n  nameWithType: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs\n  fullName: GridViewUpdatedEventArgs.GridViewUpdatedEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows*\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: AffectedRows\n  nameWithType: GridViewUpdatedEventArgs.AffectedRows\n  fullName: GridViewUpdatedEventArgs.AffectedRows\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception*\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: GridViewUpdatedEventArgs.Exception\n  fullName: GridViewUpdatedEventArgs.Exception\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled*\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: ExceptionHandled\n  nameWithType: GridViewUpdatedEventArgs.ExceptionHandled\n  fullName: GridViewUpdatedEventArgs.ExceptionHandled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode*\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: KeepInEditMode\n  nameWithType: GridViewUpdatedEventArgs.KeepInEditMode\n  fullName: GridViewUpdatedEventArgs.KeepInEditMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys*\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: Keys\n  nameWithType: GridViewUpdatedEventArgs.Keys\n  fullName: GridViewUpdatedEventArgs.Keys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues*\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: NewValues\n  nameWithType: GridViewUpdatedEventArgs.NewValues\n  fullName: GridViewUpdatedEventArgs.NewValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues*\n  parent: System.Web.UI.WebControls.GridViewUpdatedEventArgs\n  isExternal: false\n  name: OldValues\n  nameWithType: GridViewUpdatedEventArgs.OldValues\n  fullName: GridViewUpdatedEventArgs.OldValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/GridViewUpdatedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}