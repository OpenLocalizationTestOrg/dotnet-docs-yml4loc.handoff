<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4e3d2940835265902aa20f0396435f1ac176091</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Serialization.Formatters.Soap.SoapFormatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">67b907699c477250c6f41689146faae31afb6727</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b955930cee01b0f231a77513867c8d4d262abdb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Serializes and deserializes an object, or an entire graph of connected objects, in SOAP format.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Beginning with the .NET Framework 2.0, this class is obsolete.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> classes implement the <ph id="ph3">&lt;xref:System.Runtime.Remoting.Messaging.IRemotingFormatter&gt;</ph> interface to support remote procedure calls (RPCs), and the <ph id="ph4">&lt;xref:System.Runtime.Serialization.IFormatter&gt;</ph> interface (inherited by the <ph id="ph5">&lt;xref:System.Runtime.Remoting.Messaging.IRemotingFormatter&gt;</ph>) to support serialization of a graph of objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph> class also supports RPCs with <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.ISoapMessage&gt;</ph> objects, without using the <ph id="ph3">&lt;xref:System.Runtime.Remoting.Messaging.IRemotingFormatter&gt;</ph> functionality.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>During RPCs, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IRemotingFormatter&gt;</ph> interface allows the specification of two separate object graphs: the graph of objects to serialize, and an additional graph that contains an array of header objects that convey information about the remote function call (for example, transaction ID or a method signature).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For proper serialization, the root object of the first graph must be an object that implements either the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt;</ph> interface or the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization of an RPC, a <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.HeaderHandler&gt;</ph> delegate is specified to the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A&gt;</ph> method of the formatter.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remoting infrastructure uses the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.HeaderHandler&gt;</ph> delegate to produce an object that supports the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This object contains the information stored in the headers, and becomes the root of the graph returned by the deserializer.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph> can also handle RPCs that are produced with objects that implement the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.ISoapMessage&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create an RPC without using the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IRemotingFormatter&gt;</ph> functionality, place an object that supports the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.ISoapMessage&gt;</ph> interface at the root of a graph being serialized.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To deserialize an RPC created in this manner the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A&gt;</ph> property must be set to another object that supports the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.ISoapMessage&gt;</ph> interface, and contains the relevant remote call information.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>TimeSpan Serialization</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>TimeSpan objects are serialized according to the ISO 8601: 1998 section 5.5.3.2.1 "Alternative" standard.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version Information</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph> does not support serialization compatibility between versions of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serialization between versions 1.1 and 2.0 types in the Framework often fails.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following actions can be taken to remedy this issue:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Convert to use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>, which provides compatibility between 1.1 and 2.0.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Convert existing persisted data to the new format.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Convert all producers and consumers of serialized data to version 2.0.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid using types that changed from 1.1 to 2.0.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"&gt;&lt;/xref&gt;</ph> class with default property values.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new <ph id="ph1">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> initialized to specify that the serialized data can be transmitted to or received from any of the other contexts</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"&gt;&lt;/xref&gt;</ph> class with the specified <ph id="ph2">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Runtime.Serialization.StreamingContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are serialized to, or deserialized from, the specified <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization or deserialization process uses the specified <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISurrogateSelector&gt;</ph> to search for surrogates that are registered for the object types you want to deserialize.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Surrogates are helpers that serialize and deserialize objects of specific classes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISurrogateSelector&gt;</ph> cannot handle the serialization of objects that derive from the <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph> for remoting purposes.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a remoting situation the specified <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISurrogateSelector&gt;</ph> replaces the object derived from <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph> with a <ph id="ph3">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> object that is serialized by the specified surrogate selector.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if you want to use remote objects, set the <ph id="ph1">`selector`</ph> parameter to an instance of <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not need surrogates, set the <ph id="ph1">`selector`</ph> parameter to be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;&lt;/xref&gt;</ph> to use with the new instance of <ph id="ph2">&lt;xref href="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.StreamingContext"&gt;&lt;/xref&gt;</ph> that holds the source and destination of the serialization.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">context</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>, then the <ph id="ph3">&lt;xref href="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context"&gt;&lt;/xref&gt;</ph> defaults to <ph id="ph4">&lt;xref href="System.Runtime.Serialization.StreamingContextStates.CrossMachine"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the behavior of the deserializer with regards to finding and loading assemblies.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"&gt;&lt;/xref&gt;</ph> values that specifies the deserializer behavior.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;&lt;/xref&gt;</ph> that controls the binding of a serialized object to a type.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;&lt;/xref&gt;</ph> used with this <ph id="ph2">&lt;xref href="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.StreamingContext"&gt;&lt;/xref&gt;</ph> used with this <ph id="ph2">&lt;xref href="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> provides an enumeration that describes the source and the destination for a given serialized stream, as well as a way for serialization to retain that context and an additional caller-defined context.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.StreamingContext"&gt;&lt;/xref&gt;</ph> used with this <ph id="ph2">&lt;xref href="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Deserializes the data on the provided stream and reconstitutes the graph of objects.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For successful deserialization, the current position in the stream must be at the beginning of the object graph.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method with untrusted data is a security risk.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method only with trusted data.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The stream that contains the data to deserialize.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The top object of the deserialized graph (root).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serializationStream&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Deserializes the stream into an object graph with any headers in that stream being handled by the given <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Messaging.HeaderHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Headers are used only for specific remoting applications.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.HeaderHandler&gt;</ph> parameter is one of two ways to return headers from a stream in SOAP Remote Procedure Call (RPC) format.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other way is to use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For successful deserialization, the current position in the stream must be at the beginning of the object graph.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>TimeSpan Serialization</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>TimeSpan objects are serialized according to the ISO 8601: 1998 section 5.5.3.2.1 "Alternative" standard.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method with untrusted data is a security risk.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method only with trusted data.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The stream that contains the data to deserialize.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Delegate to handle any headers found on the stream.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The top object of the deserialized graph (root).</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serializationStream&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serializationStream&lt;/code&gt;</ph> supports seeking, and its length is 0.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatters.TypeFilterLevel"&gt;&lt;/xref&gt;</ph> of automatic deserialization for .NET Framework remoting.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Supported values are <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> (the default).</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about deserialization levels, see <bpt id="p1">[</bpt>Automatic Deserialization in .NET Remoting<ept id="p1">](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatters.TypeFilterLevel"&gt;&lt;/xref&gt;</ph> that represents the current automatic deserialization level.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Serializes an object or graph of objects with the specified root to the given <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>TimeSpan objects are serialized according to the ISO 8601: 1998 section 5.5.3.2.1 "Alternative" standard.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The stream onto which the formatter puts the data to serialize.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The object, or root of the object graph, to serialize.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>All child objects of this root object are automatically serialized.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serializationStream&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Serializes an object or graph of objects with the specified root to the given <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> in the SOAP Remote Procedure Call (RPC) format.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Headers are used only for specific remoting applications.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>TimeSpan objects are serialized according to the ISO 8601: 1998 section 5.5.3.2.1 "Alternative" standard.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The stream onto which the formatter puts the data to serialize.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The object or root of the object graph to serialize.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>All child objects of this root object are automatically serialized.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Remoting headers to include in the serialization.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serializationStream&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;&lt;/xref&gt;</ph> that controls type substitution during serialization and deserialization.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Used by <ph id="ph1">&lt;xref:System.Runtime.Remoting&gt;</ph> to generate <ph id="ph2">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> instances for <ph id="ph3">&lt;xref:System.MarshalByRefObject&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;&lt;/xref&gt;</ph> used with this <ph id="ph2">&lt;xref href="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatters.ISoapMessage"&gt;&lt;/xref&gt;</ph> into which the SOAP top object is deserialized.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used for SOAP remote procedure call (RPC) format and specifies that the SOAP top record is a method called remotely, not a common language runtime object type.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatters.ISoapMessage"&gt;&lt;/xref&gt;</ph> into which the SOAP top object is deserialized.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets or sets the format in which type descriptions are laid out in the serialized stream.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The format in which type descriptions are laid out in the serialized stream.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>