### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.FaultConverter
  commentId: T:System.ServiceModel.Channels.FaultConverter
  id: FaultConverter
  children:
  - System.ServiceModel.Channels.FaultConverter.#ctor
  - System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  - System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  - System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  - System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  - System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  langs:
  - csharp
  name: FaultConverter
  nameWithType: FaultConverter
  fullName: System.ServiceModel.Channels.FaultConverter
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.
  syntax:
    content: public abstract class FaultConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.FaultConverter.#ctor
  commentId: M:System.ServiceModel.Channels.FaultConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  name: FaultConverter()
  nameWithType: FaultConverter.FaultConverter()
  fullName: FaultConverter.FaultConverter()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.FaultConverter"></xref> class.
  syntax:
    content: protected FaultConverter ();
    parameters: []
  overload: System.ServiceModel.Channels.FaultConverter.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  commentId: M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  id: GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  name: GetDefaultFaultConverter(MessageVersion)
  nameWithType: FaultConverter.GetDefaultFaultConverter(MessageVersion)
  fullName: FaultConverter.GetDefaultFaultConverter(MessageVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the default fault converter.
  remarks: Transport channels should delegate to this method to get the default SOAP WS-Addressing fault converter.
  syntax:
    content: public static System.ServiceModel.Channels.FaultConverter GetDefaultFaultConverter (System.ServiceModel.Channels.MessageVersion version);
    parameters:
    - id: version
      type: System.ServiceModel.Channels.MessageVersion
      description: The message version.
    return:
      type: System.ServiceModel.Channels.FaultConverter
      description: An instance of <xref href="System.ServiceModel.Channels.FaultConverter"></xref>.
  overload: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  commentId: M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  id: OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  name: OnTryCreateException(Message, MessageFault, Exception)
  nameWithType: FaultConverter.OnTryCreateException(Message, MessageFault, Exception)
  fullName: FaultConverter.OnTryCreateException(Message, MessageFault, Exception)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Tries to create the exception.
  remarks: "For a channel layer to implement `GetProperty<FaultConverter>` to support converting fault messages to SOAP exceptions, override this method to create an exception by doing the following steps:  \n  \n-   Inspect the fault message.  \n  \n-   If recognized, do the appropriate conversion.  \n  \n-   If not recognized, convert it by a call to `GetProperty<FaultConverter>` on the inner channel.  \n  \n Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter."
  syntax:
    content: protected abstract bool OnTryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The fault message.
    - id: fault
      type: System.ServiceModel.Channels.MessageFault
      description: The fault.
    - id: exception
      type: System.Exception
      description: If conversion is successful, the SOAP exception, returned as an `out` parameter.
    return:
      type: System.Boolean
      description: '`true` if fault was successfully converted; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Channels.FaultConverter.OnTryCreateException*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  commentId: M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  id: OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  name: OnTryCreateFaultMessage(Exception, Message)
  nameWithType: FaultConverter.OnTryCreateFaultMessage(Exception, Message)
  fullName: FaultConverter.OnTryCreateFaultMessage(Exception, Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Tries to create the fault message once the fault has been converted to a SOAP exception.
  remarks: Channels that support fault conversion implement `GetProperty<FaultConverter>` and override this method to do the following. If a layer can convert the exception it does; otherwise it calls `GetProperty<FaultConverter>` on its inner channel. Transport channels should delegate to <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> to get the default SOAP/WS-Addressing fault converter.
  syntax:
    content: protected abstract bool OnTryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);
    parameters:
    - id: exception
      type: System.Exception
      description: The SOAP exception.
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The fault message returned as an `out` parameter.
    return:
      type: System.Boolean
      description: '`true` if fault message was successfully created; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  commentId: M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  id: TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  name: TryCreateException(Message, MessageFault, Exception)
  nameWithType: FaultConverter.TryCreateException(Message, MessageFault, Exception)
  fullName: FaultConverter.TryCreateException(Message, MessageFault, Exception)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Wraps <xref href="System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)"></xref> with error checking.
  remarks: <xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> is an abstract class that you must implement. The current method wraps several parameter error tests around a call to that method.
  syntax:
    content: public bool TryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The fault message.
    - id: fault
      type: System.ServiceModel.Channels.MessageFault
      description: The fault.
    - id: exception
      type: System.Exception
      description: If conversion is successful, the SOAP exception, returned as an `out` parameter.
    return:
      type: System.Boolean
      description: '`true` if fault was successfully converted; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Channels.FaultConverter.TryCreateException*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <xref href="System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)"></xref> returned `false` but <code>exception</code> is not `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  commentId: M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  id: TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  name: TryCreateFaultMessage(Exception, Message)
  nameWithType: FaultConverter.TryCreateFaultMessage(Exception, Message)
  fullName: FaultConverter.TryCreateFaultMessage(Exception, Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Wraps <xref href="System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)"></xref> with error checking.
  remarks: <xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> is an abstract class that you must implement. The current method wraps several error tests around a call to that method.
  syntax:
    content: public bool TryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);
    parameters:
    - id: exception
      type: System.Exception
      description: The SOAP exception.
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The fault message returned as an `out` parameter.
    return:
      type: System.Boolean
      description: '`true` if fault message was successfully created; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <xref href="System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)"></xref> returned `false` but <code>message</code> is not `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ServiceModel.Channels.FaultConverter.#ctor
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: FaultConverter()
  nameWithType: FaultConverter.FaultConverter()
  fullName: FaultConverter.FaultConverter()
- uid: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: GetDefaultFaultConverter(MessageVersion)
  nameWithType: FaultConverter.GetDefaultFaultConverter(MessageVersion)
  fullName: FaultConverter.GetDefaultFaultConverter(MessageVersion)
- uid: System.ServiceModel.Channels.FaultConverter
  parent: System.ServiceModel.Channels
  isExternal: false
  name: FaultConverter
  nameWithType: FaultConverter
  fullName: System.ServiceModel.Channels.FaultConverter
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: OnTryCreateException(Message, MessageFault, Exception)
  nameWithType: FaultConverter.OnTryCreateException(Message, MessageFault, Exception)
  fullName: FaultConverter.OnTryCreateException(Message, MessageFault, Exception)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.MessageFault
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageFault
  nameWithType: MessageFault
  fullName: System.ServiceModel.Channels.MessageFault
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: OnTryCreateFaultMessage(Exception, Message)
  nameWithType: FaultConverter.OnTryCreateFaultMessage(Exception, Message)
  fullName: FaultConverter.OnTryCreateFaultMessage(Exception, Message)
- uid: System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: TryCreateException(Message, MessageFault, Exception)
  nameWithType: FaultConverter.TryCreateException(Message, MessageFault, Exception)
  fullName: FaultConverter.TryCreateException(Message, MessageFault, Exception)
- uid: System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: TryCreateFaultMessage(Exception, Message)
  nameWithType: FaultConverter.TryCreateFaultMessage(Exception, Message)
  fullName: FaultConverter.TryCreateFaultMessage(Exception, Message)
- uid: System.ServiceModel.Channels.FaultConverter.#ctor*
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: FaultConverter
  nameWithType: FaultConverter.FaultConverter
  fullName: FaultConverter.FaultConverter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
- uid: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter*
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: GetDefaultFaultConverter
  nameWithType: FaultConverter.GetDefaultFaultConverter
  fullName: FaultConverter.GetDefaultFaultConverter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateException*
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: OnTryCreateException
  nameWithType: FaultConverter.OnTryCreateException
  fullName: FaultConverter.OnTryCreateException
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage*
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: OnTryCreateFaultMessage
  nameWithType: FaultConverter.OnTryCreateFaultMessage
  fullName: FaultConverter.OnTryCreateFaultMessage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
- uid: System.ServiceModel.Channels.FaultConverter.TryCreateException*
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: TryCreateException
  nameWithType: FaultConverter.TryCreateException
  fullName: FaultConverter.TryCreateException
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
- uid: System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage*
  parent: System.ServiceModel.Channels.FaultConverter
  isExternal: false
  name: TryCreateFaultMessage
  nameWithType: FaultConverter.TryCreateFaultMessage
  fullName: FaultConverter.TryCreateFaultMessage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/FaultConverter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
