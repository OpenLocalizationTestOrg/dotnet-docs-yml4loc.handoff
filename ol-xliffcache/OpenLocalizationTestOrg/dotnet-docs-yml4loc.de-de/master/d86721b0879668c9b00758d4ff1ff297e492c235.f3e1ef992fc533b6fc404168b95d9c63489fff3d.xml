{"nodes":[{"content":"Defines methods for dynamically materializing objects.","nodes":[{"pos":[0,54],"content":"Defines methods for dynamically materializing objects.","nodes":[{"content":"Defines methods for dynamically materializing objects.","pos":[0,54]}]}],"pos":[2296,2351],"yaml":true},{"content":"The type of the data reader.","nodes":[{"pos":[0,28],"content":"The type of the data reader.","nodes":[{"content":"The type of the data reader.","pos":[0,28]}]}],"pos":[2524,2553],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\"></xref> class.","nodes":[{"pos":[0,124],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\"></xref> class."}],"pos":[4115,4240],"yaml":true},{"content":"Captures internal state for the fast materializer.","nodes":[{"pos":[0,50],"content":"Captures internal state for the fast materializer.","nodes":[{"content":"Captures internal state for the fast materializer.","pos":[0,50]}]}],"pos":[5561,5612],"yaml":true},{"content":"Represents a reader that reads data rows in a forward-only manner.","nodes":[{"pos":[0,66],"content":"Represents a reader that reads data rows in a forward-only manner.","nodes":[{"content":"Represents a reader that reads data rows in a forward-only manner.","pos":[0,66]}]}],"pos":[6909,6976],"yaml":true},{"content":"When overridden in a derived class, gets a value that indicates whether deferred loading is enabled.","nodes":[{"pos":[0,100],"content":"When overridden in a derived class, gets a value that indicates whether deferred loading is enabled.","nodes":[{"content":"When overridden in a derived class, gets a value that indicates whether deferred loading is enabled.","pos":[0,100]}]}],"pos":[8318,8419],"yaml":true},{"content":"`true` if deferred loading is enabled; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if deferred loading is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if deferred loading is enabled; otherwise, `false`."}],"pos":[8543,8604],"yaml":true},{"content":"Changes the type of each element in a specified sequence.","nodes":[{"pos":[0,57],"content":"Changes the type of each element in a specified sequence.","nodes":[{"content":"Changes the type of each element in a specified sequence.","pos":[0,57]}]}],"pos":[10020,10078],"yaml":true},{"content":"A sequence that contains elements to convert.","nodes":[{"pos":[0,45],"content":"A sequence that contains elements to convert.","nodes":[{"content":"A sequence that contains elements to convert.","pos":[0,45]}]}],"pos":[10316,10362],"yaml":true},{"content":"The type to convert the elements to.","nodes":[{"pos":[0,36],"content":"The type to convert the elements to.","nodes":[{"content":"The type to convert the elements to.","pos":[0,36]}]}],"pos":[10419,10456],"yaml":true},{"content":"A sequence that contains the type-converted elements.","nodes":[{"pos":[0,53],"content":"A sequence that contains the type-converted elements.","nodes":[{"content":"A sequence that contains the type-converted elements.","pos":[0,53]}]}],"pos":[10547,10601],"yaml":true},{"content":"Creates a group from a specified key and collection of values.","nodes":[{"pos":[0,62],"content":"Creates a group from a specified key and collection of values.","nodes":[{"content":"Creates a group from a specified key and collection of values.","pos":[0,62]}]}],"pos":[12156,12219],"yaml":true},{"content":"The key for the group.","nodes":[{"pos":[0,22],"content":"The key for the group.","nodes":[{"content":"The key for the group.","pos":[0,22]}]}],"pos":[12454,12477],"yaml":true},{"content":"The values for the group.","nodes":[{"pos":[0,25],"content":"The values for the group.","nodes":[{"content":"The values for the group.","pos":[0,25]}]}],"pos":[12573,12599],"yaml":true},{"content":"The type of the key of the group.","nodes":[{"pos":[0,33],"content":"The type of the key of the group.","nodes":[{"content":"The type of the key of the group.","pos":[0,33]}]}],"pos":[12653,12687],"yaml":true},{"content":"The type of the values in the group.","nodes":[{"pos":[0,36],"content":"The type of the values in the group.","nodes":[{"content":"The type of the values in the group.","pos":[0,36]}]}],"pos":[12725,12762],"yaml":true},{"content":"A group that has the specified key and the specified collection of values.","nodes":[{"pos":[0,74],"content":"A group that has the specified key and the specified collection of values.","nodes":[{"content":"A group that has the specified key and the specified collection of values.","pos":[0,74]}]}],"pos":[12829,12904],"yaml":true},{"content":"Creates an ordered sequence from a specified collection of values.","nodes":[{"pos":[0,66],"content":"Creates an ordered sequence from a specified collection of values.","nodes":[{"content":"Creates an ordered sequence from a specified collection of values.","pos":[0,66]}]}],"pos":[14490,14557],"yaml":true},{"content":"The values to put in the ordered sequence.","nodes":[{"pos":[0,42],"content":"The values to put in the ordered sequence.","nodes":[{"content":"The values to put in the ordered sequence.","pos":[0,42]}]}],"pos":[14839,14882],"yaml":true},{"content":"The type of the values in the ordered sequence.","nodes":[{"pos":[0,47],"content":"The type of the values in the ordered sequence.","nodes":[{"content":"The type of the values in the ordered sequence.","pos":[0,47]}]}],"pos":[14940,14988],"yaml":true},{"content":"An ordered sequence that contains the specified values.","nodes":[{"pos":[0,55],"content":"An ordered sequence that contains the specified values.","nodes":[{"content":"An ordered sequence that contains the specified values.","pos":[0,55]}]}],"pos":[15064,15120],"yaml":true},{"content":"Represents a data reader.","nodes":[{"pos":[0,25],"content":"Represents a data reader.","nodes":[{"content":"Represents a data reader.","pos":[0,25]}]}],"pos":[16396,16422],"yaml":true},{"content":"Returns an exception that indicates that a `null` value was tried to be assigned to a non-nullable value type.","nodes":[{"pos":[0,110],"content":"Returns an exception that indicates that a <ph id=\"ph1\">`null`</ph> value was tried to be assigned to a non-nullable value type.","source":"Returns an exception that indicates that a `null` value was tried to be assigned to a non-nullable value type."}],"pos":[17831,17942],"yaml":true},{"content":"The type to which a `null` value was attempted to be assigned.","nodes":[{"pos":[0,62],"content":"The type to which a <ph id=\"ph1\">`null`</ph> value was attempted to be assigned.","source":"The type to which a `null` value was attempted to be assigned."}],"pos":[18098,18161],"yaml":true},{"content":"An exception that indicates that a `null` value was attempted to be assigned to a non-nullable value type.","nodes":[{"pos":[0,106],"content":"An exception that indicates that a <ph id=\"ph1\">`null`</ph> value was attempted to be assigned to a non-nullable value type.","source":"An exception that indicates that a `null` value was attempted to be assigned to a non-nullable value type."}],"pos":[18221,18328],"yaml":true},{"content":"When overridden in a derived class, executes a query.","nodes":[{"pos":[0,53],"content":"When overridden in a derived class, executes a query.","nodes":[{"content":"When overridden in a derived class, executes a query.","pos":[0,53]}]}],"pos":[19771,19825],"yaml":true},{"content":"The index of the query.","nodes":[{"pos":[0,23],"content":"The index of the query.","nodes":[{"content":"The index of the query.","pos":[0,23]}]}],"pos":[20023,20047],"yaml":true},{"content":"The arguments to the query.","nodes":[{"pos":[0,27],"content":"The arguments to the query.","nodes":[{"content":"The arguments to the query.","pos":[0,27]}]}],"pos":[20109,20137],"yaml":true},{"content":"The results from executing the query.","nodes":[{"pos":[0,37],"content":"The results from executing the query.","nodes":[{"content":"The results from executing the query.","pos":[0,37]}]}],"pos":[20211,20249],"yaml":true},{"content":"When overridden in a derived class, creates a new deferred source.","nodes":[{"pos":[0,66],"content":"When overridden in a derived class, creates a new deferred source.","nodes":[{"content":"When overridden in a derived class, creates a new deferred source.","pos":[0,66]}]}],"pos":[21752,21819],"yaml":true},{"content":"The index of the link.","nodes":[{"pos":[0,22],"content":"The index of the link.","nodes":[{"content":"The index of the link.","pos":[0,22]}]}],"pos":[22054,22077],"yaml":true},{"content":"The index of the factory.","nodes":[{"pos":[0,25],"content":"The index of the factory.","nodes":[{"content":"The index of the factory.","pos":[0,25]}]}],"pos":[22144,22170],"yaml":true},{"content":"The key values for the deferred source.","nodes":[{"pos":[0,39],"content":"The key values for the deferred source.","nodes":[{"content":"The key values for the deferred source.","pos":[0,39]}]}],"pos":[22237,22277],"yaml":true},{"content":"The type of the result elements.","nodes":[{"pos":[0,32],"content":"The type of the result elements.","nodes":[{"content":"The type of the result elements.","pos":[0,32]}]}],"pos":[22328,22361],"yaml":true},{"content":"An enumerable deferred source.","nodes":[{"pos":[0,30],"content":"An enumerable deferred source.","nodes":[{"content":"An enumerable deferred source.","pos":[0,30]}]}],"pos":[22445,22476],"yaml":true},{"content":"When overridden in a derived class, creates a new deferred source.","nodes":[{"pos":[0,66],"content":"When overridden in a derived class, creates a new deferred source.","nodes":[{"content":"When overridden in a derived class, creates a new deferred source.","pos":[0,66]}]}],"pos":[24004,24071],"yaml":true},{"content":"The index of the link.","nodes":[{"pos":[0,22],"content":"The index of the link.","nodes":[{"content":"The index of the link.","pos":[0,22]}]}],"pos":[24309,24332],"yaml":true},{"content":"The index of the factory.","nodes":[{"pos":[0,25],"content":"The index of the factory.","nodes":[{"content":"The index of the factory.","pos":[0,25]}]}],"pos":[24399,24425],"yaml":true},{"content":"The instance for the deferred source.","nodes":[{"pos":[0,37],"content":"The instance for the deferred source.","nodes":[{"content":"The instance for the deferred source.","pos":[0,37]}]}],"pos":[24489,24527],"yaml":true},{"content":"The type of the result elements.","nodes":[{"pos":[0,32],"content":"The type of the result elements.","nodes":[{"content":"The type of the result elements.","pos":[0,32]}]}],"pos":[24578,24611],"yaml":true},{"content":"An enumerable deferred source.","nodes":[{"pos":[0,30],"content":"An enumerable deferred source.","nodes":[{"content":"An enumerable deferred source.","pos":[0,30]}]}],"pos":[24695,24726],"yaml":true},{"content":"Captures internal state for the fast materializer.","nodes":[{"pos":[0,50],"content":"Captures internal state for the fast materializer.","nodes":[{"content":"Captures internal state for the fast materializer.","pos":[0,50]}]}],"pos":[25980,26031],"yaml":true},{"content":"When overridden in a derived class, inserts a value into a data structure.","nodes":[{"pos":[0,74],"content":"When overridden in a derived class, inserts a value into a data structure.","nodes":[{"content":"When overridden in a derived class, inserts a value into a data structure.","pos":[0,74]}]}],"pos":[27456,27531],"yaml":true},{"content":"The index of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>.","nodes":[{"pos":[0,72],"content":"The index of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;&lt;/xref&gt;</ph>.","source":"The index of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>."}],"pos":[27714,27787],"yaml":true},{"content":"The object to insert into the data structure.","nodes":[{"pos":[0,45],"content":"The object to insert into the data structure.","nodes":[{"content":"The object to insert into the data structure.","pos":[0,45]}]}],"pos":[27851,27897],"yaml":true},{"content":"The value that was inserted into the data structure.","nodes":[{"pos":[0,52],"content":"The value that was inserted into the data structure.","nodes":[{"content":"The value that was inserted into the data structure.","pos":[0,52]}]}],"pos":[27954,28007],"yaml":true},{"content":"Captures internal state for the fast materializer.","nodes":[{"pos":[0,50],"content":"Captures internal state for the fast materializer.","nodes":[{"content":"Captures internal state for the fast materializer.","pos":[0,50]}]}],"pos":[29245,29296],"yaml":true},{"content":"Represents column ordinals of a data reader.","nodes":[{"pos":[0,44],"content":"Represents column ordinals of a data reader.","nodes":[{"content":"Represents column ordinals of a data reader.","pos":[0,44]}]}],"pos":[30566,30611],"yaml":true},{"content":"When overridden in a derived class, advances the reader to the next record.","nodes":[{"pos":[0,75],"content":"When overridden in a derived class, advances the reader to the next record.","nodes":[{"content":"When overridden in a derived class, advances the reader to the next record.","pos":[0,75]}]}],"pos":[31862,31938],"yaml":true},{"content":"`true` if there are more rows; otherwise, `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if there are more rows; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are more rows; otherwise, `false`."}],"pos":[32068,32121],"yaml":true},{"content":"When overridden in a derived class, invokes the method represented by <xref href=\"System.Data.Linq.Mapping.MetaType.OnLoadedMethod\"></xref>.","nodes":[{"pos":[0,140],"content":"When overridden in a derived class, invokes the method represented by <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType.OnLoadedMethod\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, invokes the method represented by <xref href=\"System.Data.Linq.Mapping.MetaType.OnLoadedMethod\"></xref>."}],"pos":[33577,33718],"yaml":true},{"content":"The index of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>.","nodes":[{"pos":[0,72],"content":"The index of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;&lt;/xref&gt;</ph>.","source":"The index of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>."}],"pos":[33909,33982],"yaml":true},{"content":"The parameter to pass to the invoked method.","nodes":[{"pos":[0,44],"content":"The parameter to pass to the invoked method.","nodes":[{"content":"The parameter to pass to the invoked method.","pos":[0,44]}]}],"pos":[34046,34091],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  commentId: T:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  id: ObjectMaterializer`1\n  children:\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.#ctor\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Arguments\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.BufferReader\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CanDeferLoad\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Convert``1(System.Collections.IEnumerable)\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateGroup``2(``0,System.Collections.Generic.IEnumerable{``1})\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateOrderedEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.DataReader\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ErrorAssignmentToNull(System.Type)\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ExecuteSubQuery(System.Int32,System.Object[])\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetLinkSource``1(System.Int32,System.Int32,System.Object[])\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetNestedLinkSource``1(System.Int32,System.Int32,System.Object)\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Globals\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.InsertLookup(System.Int32,System.Object)\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Locals\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Ordinals\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Read\n  - System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.SendEntityMaterialized(System.Int32,System.Object)\n  langs:\n  - csharp\n  name: ObjectMaterializer<TDataReader>\n  nameWithType: ObjectMaterializer<TDataReader>\n  fullName: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer<TDataReader>\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Defines methods for dynamically materializing objects.\n  syntax:\n    content: 'public abstract class ObjectMaterializer<TDataReader> where TDataReader : DbDataReader'\n    typeParameters:\n    - id: TDataReader\n      description: The type of the data reader.\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.#ctor\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: ObjectMaterializer<TDataReader>()\n  nameWithType: ObjectMaterializer<TDataReader>.ObjectMaterializer<TDataReader>()\n  fullName: ObjectMaterializer<TDataReader>.ObjectMaterializer<TDataReader>()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\"></xref> class.\n  syntax:\n    content: public ObjectMaterializer ();\n    parameters: []\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Arguments\n  commentId: F:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Arguments\n  id: Arguments\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: Arguments\n  nameWithType: ObjectMaterializer<TDataReader>.Arguments\n  fullName: ObjectMaterializer<TDataReader>.Arguments\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Captures internal state for the fast materializer.\n  syntax:\n    content: public object[] Arguments;\n    return:\n      type: System.Object[]\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.BufferReader\n  commentId: F:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.BufferReader\n  id: BufferReader\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: BufferReader\n  nameWithType: ObjectMaterializer<TDataReader>.BufferReader\n  fullName: ObjectMaterializer<TDataReader>.BufferReader\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Represents a reader that reads data rows in a forward-only manner.\n  syntax:\n    content: public System.Data.Common.DbDataReader BufferReader;\n    return:\n      type: System.Data.Common.DbDataReader\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CanDeferLoad\n  commentId: P:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CanDeferLoad\n  id: CanDeferLoad\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: CanDeferLoad\n  nameWithType: ObjectMaterializer<TDataReader>.CanDeferLoad\n  fullName: ObjectMaterializer<TDataReader>.CanDeferLoad\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: When overridden in a derived class, gets a value that indicates whether deferred loading is enabled.\n  syntax:\n    content: public abstract bool CanDeferLoad { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if deferred loading is enabled; otherwise, `false`.'\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CanDeferLoad*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Convert``1(System.Collections.IEnumerable)\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Convert``1(System.Collections.IEnumerable)\n  id: Convert``1(System.Collections.IEnumerable)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: Convert<TOutput>(IEnumerable)\n  nameWithType: ObjectMaterializer<TDataReader>.Convert<TOutput>(IEnumerable)\n  fullName: ObjectMaterializer<TDataReader>.Convert<TOutput>(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Changes the type of each element in a specified sequence.\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<TOutput> Convert<TOutput> (System.Collections.IEnumerable source);\n    parameters:\n    - id: source\n      type: System.Collections.IEnumerable\n      description: A sequence that contains elements to convert.\n    typeParameters:\n    - id: TOutput\n      description: The type to convert the elements to.\n    return:\n      type: System.Collections.Generic.IEnumerable{TOutput}\n      description: A sequence that contains the type-converted elements.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Convert``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateGroup``2(``0,System.Collections.Generic.IEnumerable{``1})\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateGroup``2(``0,System.Collections.Generic.IEnumerable{``1})\n  id: CreateGroup``2(``0,System.Collections.Generic.IEnumerable{``1})\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: CreateGroup<TKey,TElement>(TKey, IEnumerable<TElement>)\n  nameWithType: ObjectMaterializer<TDataReader>.CreateGroup<TKey,TElement>(TKey, IEnumerable<TElement>)\n  fullName: ObjectMaterializer<TDataReader>.CreateGroup<TKey,TElement>(TKey, IEnumerable<TElement>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Creates a group from a specified key and collection of values.\n  syntax:\n    content: public static System.Linq.IGrouping<TKey,TElement> CreateGroup<TKey,TElement> (TKey key, System.Collections.Generic.IEnumerable<TElement> items);\n    parameters:\n    - id: key\n      type: TKey\n      description: The key for the group.\n    - id: items\n      type: System.Collections.Generic.IEnumerable{TElement}\n      description: The values for the group.\n    typeParameters:\n    - id: TKey\n      description: The type of the key of the group.\n    - id: TElement\n      description: The type of the values in the group.\n    return:\n      type: System.Linq.IGrouping`2\n      description: A group that has the specified key and the specified collection of values.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateGroup``2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateOrderedEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateOrderedEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  id: CreateOrderedEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: CreateOrderedEnumerable<TElement>(IEnumerable<TElement>)\n  nameWithType: ObjectMaterializer<TDataReader>.CreateOrderedEnumerable<TElement>(IEnumerable<TElement>)\n  fullName: ObjectMaterializer<TDataReader>.CreateOrderedEnumerable<TElement>(IEnumerable<TElement>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Creates an ordered sequence from a specified collection of values.\n  syntax:\n    content: public static System.Linq.IOrderedEnumerable<TElement> CreateOrderedEnumerable<TElement> (System.Collections.Generic.IEnumerable<TElement> items);\n    parameters:\n    - id: items\n      type: System.Collections.Generic.IEnumerable{TElement}\n      description: The values to put in the ordered sequence.\n    typeParameters:\n    - id: TElement\n      description: The type of the values in the ordered sequence.\n    return:\n      type: System.Linq.IOrderedEnumerable`1\n      description: An ordered sequence that contains the specified values.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateOrderedEnumerable``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.DataReader\n  commentId: F:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.DataReader\n  id: DataReader\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: DataReader\n  nameWithType: ObjectMaterializer<TDataReader>.DataReader\n  fullName: ObjectMaterializer<TDataReader>.DataReader\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Represents a data reader.\n  syntax:\n    content: public TDataReader DataReader;\n    return:\n      type: TDataReader\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ErrorAssignmentToNull(System.Type)\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ErrorAssignmentToNull(System.Type)\n  id: ErrorAssignmentToNull(System.Type)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: ErrorAssignmentToNull(Type)\n  nameWithType: ObjectMaterializer<TDataReader>.ErrorAssignmentToNull(Type)\n  fullName: ObjectMaterializer<TDataReader>.ErrorAssignmentToNull(Type)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Returns an exception that indicates that a `null` value was tried to be assigned to a non-nullable value type.\n  syntax:\n    content: public static Exception ErrorAssignmentToNull (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to which a `null` value was attempted to be assigned.\n    return:\n      type: System.Exception\n      description: An exception that indicates that a `null` value was attempted to be assigned to a non-nullable value type.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ErrorAssignmentToNull*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ExecuteSubQuery(System.Int32,System.Object[])\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ExecuteSubQuery(System.Int32,System.Object[])\n  id: ExecuteSubQuery(System.Int32,System.Object[])\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: ExecuteSubQuery(Int32, Object[])\n  nameWithType: ObjectMaterializer<TDataReader>.ExecuteSubQuery(Int32, Object[])\n  fullName: ObjectMaterializer<TDataReader>.ExecuteSubQuery(Int32, Object[])\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: When overridden in a derived class, executes a query.\n  syntax:\n    content: public abstract System.Collections.IEnumerable ExecuteSubQuery (int iSubQuery, object[] args);\n    parameters:\n    - id: iSubQuery\n      type: System.Int32\n      description: The index of the query.\n    - id: args\n      type: System.Object[]\n      description: The arguments to the query.\n    return:\n      type: System.Collections.IEnumerable\n      description: The results from executing the query.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ExecuteSubQuery*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetLinkSource``1(System.Int32,System.Int32,System.Object[])\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetLinkSource``1(System.Int32,System.Int32,System.Object[])\n  id: GetLinkSource``1(System.Int32,System.Int32,System.Object[])\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: GetLinkSource<T>(Int32, Int32, Object[])\n  nameWithType: ObjectMaterializer<TDataReader>.GetLinkSource<T>(Int32, Int32, Object[])\n  fullName: ObjectMaterializer<TDataReader>.GetLinkSource<T>(Int32, Int32, Object[])\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: When overridden in a derived class, creates a new deferred source.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<T> GetLinkSource<T> (int globalLink, int localFactory, object[] keyValues);\n    parameters:\n    - id: globalLink\n      type: System.Int32\n      description: The index of the link.\n    - id: localFactory\n      type: System.Int32\n      description: The index of the factory.\n    - id: keyValues\n      type: System.Object[]\n      description: The key values for the deferred source.\n    typeParameters:\n    - id: T\n      description: The type of the result elements.\n    return:\n      type: System.Collections.Generic.IEnumerable`1\n      description: An enumerable deferred source.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetLinkSource``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetNestedLinkSource``1(System.Int32,System.Int32,System.Object)\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetNestedLinkSource``1(System.Int32,System.Int32,System.Object)\n  id: GetNestedLinkSource``1(System.Int32,System.Int32,System.Object)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: GetNestedLinkSource<T>(Int32, Int32, Object)\n  nameWithType: ObjectMaterializer<TDataReader>.GetNestedLinkSource<T>(Int32, Int32, Object)\n  fullName: ObjectMaterializer<TDataReader>.GetNestedLinkSource<T>(Int32, Int32, Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: When overridden in a derived class, creates a new deferred source.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<T> GetNestedLinkSource<T> (int globalLink, int localFactory, object instance);\n    parameters:\n    - id: globalLink\n      type: System.Int32\n      description: The index of the link.\n    - id: localFactory\n      type: System.Int32\n      description: The index of the factory.\n    - id: instance\n      type: System.Object\n      description: The instance for the deferred source.\n    typeParameters:\n    - id: T\n      description: The type of the result elements.\n    return:\n      type: System.Collections.Generic.IEnumerable`1\n      description: An enumerable deferred source.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetNestedLinkSource``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Globals\n  commentId: F:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Globals\n  id: Globals\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: Globals\n  nameWithType: ObjectMaterializer<TDataReader>.Globals\n  fullName: ObjectMaterializer<TDataReader>.Globals\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Captures internal state for the fast materializer.\n  syntax:\n    content: public object[] Globals;\n    return:\n      type: System.Object[]\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.InsertLookup(System.Int32,System.Object)\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.InsertLookup(System.Int32,System.Object)\n  id: InsertLookup(System.Int32,System.Object)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: InsertLookup(Int32, Object)\n  nameWithType: ObjectMaterializer<TDataReader>.InsertLookup(Int32, Object)\n  fullName: ObjectMaterializer<TDataReader>.InsertLookup(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: When overridden in a derived class, inserts a value into a data structure.\n  syntax:\n    content: public abstract object InsertLookup (int globalMetaType, object instance);\n    parameters:\n    - id: globalMetaType\n      type: System.Int32\n      description: The index of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>.\n    - id: instance\n      type: System.Object\n      description: The object to insert into the data structure.\n    return:\n      type: System.Object\n      description: The value that was inserted into the data structure.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.InsertLookup*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Locals\n  commentId: F:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Locals\n  id: Locals\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: Locals\n  nameWithType: ObjectMaterializer<TDataReader>.Locals\n  fullName: ObjectMaterializer<TDataReader>.Locals\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Captures internal state for the fast materializer.\n  syntax:\n    content: public object[] Locals;\n    return:\n      type: System.Object[]\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Ordinals\n  commentId: F:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Ordinals\n  id: Ordinals\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: Ordinals\n  nameWithType: ObjectMaterializer<TDataReader>.Ordinals\n  fullName: ObjectMaterializer<TDataReader>.Ordinals\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: Represents column ordinals of a data reader.\n  syntax:\n    content: public int[] Ordinals;\n    return:\n      type: System.Int32[]\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Read\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Read\n  id: Read\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: ObjectMaterializer<TDataReader>.Read()\n  fullName: ObjectMaterializer<TDataReader>.Read()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: When overridden in a derived class, advances the reader to the next record.\n  syntax:\n    content: public abstract bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if there are more rows; otherwise, `false`.'\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Read*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.SendEntityMaterialized(System.Int32,System.Object)\n  commentId: M:System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.SendEntityMaterialized(System.Int32,System.Object)\n  id: SendEntityMaterialized(System.Int32,System.Object)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  langs:\n  - csharp\n  name: SendEntityMaterialized(Int32, Object)\n  nameWithType: ObjectMaterializer<TDataReader>.SendEntityMaterialized(Int32, Object)\n  fullName: ObjectMaterializer<TDataReader>.SendEntityMaterialized(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient.Implementation\n  summary: When overridden in a derived class, invokes the method represented by <xref href=\"System.Data.Linq.Mapping.MetaType.OnLoadedMethod\"></xref>.\n  syntax:\n    content: public abstract void SendEntityMaterialized (int globalMetaType, object instance);\n    parameters:\n    - id: globalMetaType\n      type: System.Int32\n      description: The index of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>.\n    - id: instance\n      type: System.Object\n      description: The parameter to pass to the invoked method.\n  overload: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.SendEntityMaterialized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.#ctor\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: ObjectMaterializer<TDataReader>()\n  nameWithType: ObjectMaterializer<TDataReader>.ObjectMaterializer<TDataReader>()\n  fullName: ObjectMaterializer<TDataReader>.ObjectMaterializer<TDataReader>()\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Arguments\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: Arguments\n  nameWithType: ObjectMaterializer<TDataReader>.Arguments\n  fullName: ObjectMaterializer<TDataReader>.Arguments\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.BufferReader\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: BufferReader\n  nameWithType: ObjectMaterializer<TDataReader>.BufferReader\n  fullName: ObjectMaterializer<TDataReader>.BufferReader\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CanDeferLoad\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: CanDeferLoad\n  nameWithType: ObjectMaterializer<TDataReader>.CanDeferLoad\n  fullName: ObjectMaterializer<TDataReader>.CanDeferLoad\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Convert``1(System.Collections.IEnumerable)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: Convert<TOutput>(IEnumerable)\n  nameWithType: ObjectMaterializer<TDataReader>.Convert<TOutput>(IEnumerable)\n  fullName: ObjectMaterializer<TDataReader>.Convert<TOutput>(IEnumerable)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: TOutput\n  name: TOutput\n  nameWithType: TOutput\n  fullName: TOutput\n- uid: System.Collections.Generic.IEnumerable{TOutput}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TOutput>\n  nameWithType: IEnumerable<TOutput>\n  fullName: System.Collections.Generic.IEnumerable<TOutput>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TOutput\n    name: TOutput\n    nameWithType: TOutput\n    fullName: TOutput\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateGroup``2(``0,System.Collections.Generic.IEnumerable{``1})\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: CreateGroup<TKey,TElement>(TKey, IEnumerable<TElement>)\n  nameWithType: ObjectMaterializer<TDataReader>.CreateGroup<TKey,TElement>(TKey, IEnumerable<TElement>)\n  fullName: ObjectMaterializer<TDataReader>.CreateGroup<TKey,TElement>(TKey, IEnumerable<TElement>)\n- uid: System.Linq.IGrouping`2\n  parent: System.Linq\n  isExternal: false\n  name: IGrouping<TKey,TElement>\n  nameWithType: IGrouping<TKey,TElement>\n  fullName: System.Linq.IGrouping<TKey,TElement>\n- uid: TKey\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TElement\n  name: TElement\n  nameWithType: TElement\n  fullName: TElement\n- uid: System.Collections.Generic.IEnumerable{TElement}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TElement>\n  nameWithType: IEnumerable<TElement>\n  fullName: System.Collections.Generic.IEnumerable<TElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TElement\n    name: TElement\n    nameWithType: TElement\n    fullName: TElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateOrderedEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: CreateOrderedEnumerable<TElement>(IEnumerable<TElement>)\n  nameWithType: ObjectMaterializer<TDataReader>.CreateOrderedEnumerable<TElement>(IEnumerable<TElement>)\n  fullName: ObjectMaterializer<TDataReader>.CreateOrderedEnumerable<TElement>(IEnumerable<TElement>)\n- uid: System.Linq.IOrderedEnumerable`1\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedEnumerable<TElement>\n  nameWithType: IOrderedEnumerable<TElement>\n  fullName: System.Linq.IOrderedEnumerable<TElement>\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.DataReader\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: DataReader\n  nameWithType: ObjectMaterializer<TDataReader>.DataReader\n  fullName: ObjectMaterializer<TDataReader>.DataReader\n- uid: TDataReader\n  isExternal: true\n  name: TDataReader\n  nameWithType: TDataReader\n  fullName: TDataReader\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ErrorAssignmentToNull(System.Type)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: ErrorAssignmentToNull(Type)\n  nameWithType: ObjectMaterializer<TDataReader>.ErrorAssignmentToNull(Type)\n  fullName: ObjectMaterializer<TDataReader>.ErrorAssignmentToNull(Type)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ExecuteSubQuery(System.Int32,System.Object[])\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: ExecuteSubQuery(Int32, Object[])\n  nameWithType: ObjectMaterializer<TDataReader>.ExecuteSubQuery(Int32, Object[])\n  fullName: ObjectMaterializer<TDataReader>.ExecuteSubQuery(Int32, Object[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetLinkSource``1(System.Int32,System.Int32,System.Object[])\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: GetLinkSource<T>(Int32, Int32, Object[])\n  nameWithType: ObjectMaterializer<TDataReader>.GetLinkSource<T>(Int32, Int32, Object[])\n  fullName: ObjectMaterializer<TDataReader>.GetLinkSource<T>(Int32, Int32, Object[])\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetNestedLinkSource``1(System.Int32,System.Int32,System.Object)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: GetNestedLinkSource<T>(Int32, Int32, Object)\n  nameWithType: ObjectMaterializer<TDataReader>.GetNestedLinkSource<T>(Int32, Int32, Object)\n  fullName: ObjectMaterializer<TDataReader>.GetNestedLinkSource<T>(Int32, Int32, Object)\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Globals\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: Globals\n  nameWithType: ObjectMaterializer<TDataReader>.Globals\n  fullName: ObjectMaterializer<TDataReader>.Globals\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.InsertLookup(System.Int32,System.Object)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: InsertLookup(Int32, Object)\n  nameWithType: ObjectMaterializer<TDataReader>.InsertLookup(Int32, Object)\n  fullName: ObjectMaterializer<TDataReader>.InsertLookup(Int32, Object)\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Locals\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: Locals\n  nameWithType: ObjectMaterializer<TDataReader>.Locals\n  fullName: ObjectMaterializer<TDataReader>.Locals\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Ordinals\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: Ordinals\n  nameWithType: ObjectMaterializer<TDataReader>.Ordinals\n  fullName: ObjectMaterializer<TDataReader>.Ordinals\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Read\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: Read()\n  nameWithType: ObjectMaterializer<TDataReader>.Read()\n  fullName: ObjectMaterializer<TDataReader>.Read()\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.SendEntityMaterialized(System.Int32,System.Object)\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: SendEntityMaterialized(Int32, Object)\n  nameWithType: ObjectMaterializer<TDataReader>.SendEntityMaterialized(Int32, Object)\n  fullName: ObjectMaterializer<TDataReader>.SendEntityMaterialized(Int32, Object)\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.#ctor*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: ObjectMaterializer<TDataReader>\n  nameWithType: ObjectMaterializer<TDataReader>.ObjectMaterializer<TDataReader>\n  fullName: ObjectMaterializer<TDataReader>.ObjectMaterializer<TDataReader>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CanDeferLoad*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: CanDeferLoad\n  nameWithType: ObjectMaterializer<TDataReader>.CanDeferLoad\n  fullName: ObjectMaterializer<TDataReader>.CanDeferLoad\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Convert``1*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: Convert<TOutput>\n  nameWithType: ObjectMaterializer<TDataReader>.Convert<TOutput>\n  fullName: ObjectMaterializer<TDataReader>.Convert<TOutput>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateGroup``2*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: CreateGroup<TKey,TElement>\n  nameWithType: ObjectMaterializer<TDataReader>.CreateGroup<TKey,TElement>\n  fullName: ObjectMaterializer<TDataReader>.CreateGroup<TKey,TElement>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.CreateOrderedEnumerable``1*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: CreateOrderedEnumerable<TElement>\n  nameWithType: ObjectMaterializer<TDataReader>.CreateOrderedEnumerable<TElement>\n  fullName: ObjectMaterializer<TDataReader>.CreateOrderedEnumerable<TElement>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ErrorAssignmentToNull*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: ErrorAssignmentToNull\n  nameWithType: ObjectMaterializer<TDataReader>.ErrorAssignmentToNull\n  fullName: ObjectMaterializer<TDataReader>.ErrorAssignmentToNull\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.ExecuteSubQuery*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: ExecuteSubQuery\n  nameWithType: ObjectMaterializer<TDataReader>.ExecuteSubQuery\n  fullName: ObjectMaterializer<TDataReader>.ExecuteSubQuery\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetLinkSource``1*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: GetLinkSource<T>\n  nameWithType: ObjectMaterializer<TDataReader>.GetLinkSource<T>\n  fullName: ObjectMaterializer<TDataReader>.GetLinkSource<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.GetNestedLinkSource``1*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: GetNestedLinkSource<T>\n  nameWithType: ObjectMaterializer<TDataReader>.GetNestedLinkSource<T>\n  fullName: ObjectMaterializer<TDataReader>.GetNestedLinkSource<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.InsertLookup*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: InsertLookup\n  nameWithType: ObjectMaterializer<TDataReader>.InsertLookup\n  fullName: ObjectMaterializer<TDataReader>.InsertLookup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.Read*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: Read\n  nameWithType: ObjectMaterializer<TDataReader>.Read\n  fullName: ObjectMaterializer<TDataReader>.Read\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1.SendEntityMaterialized*\n  parent: System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1\n  isExternal: false\n  name: SendEntityMaterialized\n  nameWithType: ObjectMaterializer<TDataReader>.SendEntityMaterialized\n  fullName: ObjectMaterializer<TDataReader>.SendEntityMaterialized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient.Implementation/ObjectMaterializer`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}