### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  commentId: T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  id: SqlDataSourceCommandEventArgs
  children:
  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  langs:
  - csharp
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Provides data for the <xref href="System.Web.UI.WebControls.SqlDataSource.Updating"></xref>, <xref href="System.Web.UI.WebControls.SqlDataSource.Deleting"></xref> and <xref href="System.Web.UI.WebControls.SqlDataSource.Inserting"></xref> events of the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control.
  remarks: "By adding an event handler delegate to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> events, you can perform any additional preprocessing required or cancel the database command entirely.  \n  \n Because the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> class is derived from the <xref:System.ComponentModel.CancelEventArgs> class, you can cancel a pending <xref:System.Web.UI.WebControls.SqlDataSource> database command by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`. You can examine and manipulate the <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> collection, and other command properties prior to running the command by accessing the <xref:System.Data.Common.DbCommand> object exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> property.  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> class is used in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> methods to provide access to a <xref:System.Web.UI.WebControls.SqlDataSource> database command before it is run. The <xref:System.Web.UI.WebControls.SqlDataSource> control exposes many events that you can handle to work with the underlying data objects during the course of a data operation. The following table lists the events and associated <xref:System.EventArgs> and event handler classes, to better guide you to the various events that correspond to the lifecycle of a data operation using the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n|Event|EventArgs|EventHandler|  \n|-----------|---------------|------------------|  \n|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> occurs before the data is retrieved.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  \n|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> occur before an insert, update, or delete operation is performed.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  \n|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> occur after the data retrieval, insert, update, or delete operations completes.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|"
  example:
  - "The following code example demonstrates how to display data retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control, and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  -->"
  syntax:
    content: 'public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  - System.ComponentModel.CancelEventArgs
  derivedClasses:
  - System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
  implements: []
  inheritedMembers:
  - System.ComponentModel.CancelEventArgs.Cancel
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceCommandEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  id: '#ctor(System.Data.Common.DbCommand)'
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  langs:
  - csharp
  name: SqlDataSourceCommandEventArgs(DbCommand)
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  fullName: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs"></xref> class, using the specified database command object.
  syntax:
    content: public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: An <xref href="System.Data.Common.DbCommand"></xref> object that represents the cancelable <xref href="System.Web.UI.WebControls.SqlDataSource.Update"></xref>, <xref href="System.Web.UI.WebControls.SqlDataSource.Insert"></xref>, or <xref href="System.Web.UI.WebControls.SqlDataSource.Delete"></xref> command.
  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceCommandEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  commentId: P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  id: Command
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  langs:
  - csharp
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: SqlDataSourceCommandEventArgs.Command
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the pending database command.
  remarks: You can handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to examine and manipulate the properties of the <xref:System.Data.Common.DbCommand> before it is run by the <xref:System.Web.UI.WebControls.SqlDataSource> control. The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the database operation by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object directly. However, you can cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The data is initially displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> that ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically-generated insert button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records, and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField>, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  -->"
  syntax:
    content: public System.Data.Common.DbCommand Command { get; }
    return:
      type: System.Data.Common.DbCommand
      description: An <xref href="System.Data.Common.DbCommand"></xref> object that represents the pending database command.
  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceCommandEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: SqlDataSourceCommandEventArgs(DbCommand)
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  fullName: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: SqlDataSourceCommandEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs
  fullName: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceCommandEventArgs.xml
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: SqlDataSourceCommandEventArgs.Command
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceCommandEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
- uid: System.ComponentModel.CancelEventArgs.Cancel
  parent: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: Cancel
  nameWithType: CancelEventArgs.Cancel
  fullName: CancelEventArgs.Cancel
