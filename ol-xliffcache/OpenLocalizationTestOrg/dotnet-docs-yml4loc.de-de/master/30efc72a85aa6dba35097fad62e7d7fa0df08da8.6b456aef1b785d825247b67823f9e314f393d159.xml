{"nodes":[{"content":"Represents a 7-tuple, or septuple.","nodes":[{"pos":[0,34],"content":"Represents a 7-tuple, or septuple.","nodes":[{"content":"Represents a 7-tuple, or septuple.","pos":[0,34]}]}],"pos":[1236,1271],"yaml":true},{"content":"A tuple is a data structure that has a specific number and sequence of values. The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components.  \n  \n You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method. You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.  \n  \n Tuples are commonly used in four different ways:  \n  \n-   To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.  \n  \n-   To provide easy access to, and manipulation of, a data set. The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000. The septuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period.  \n  \n     [!code-csharp[System.Tuple\\`7.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.class/cs/example1.cs#1)]\n     [!code-vb[System.Tuple\\`7.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.class/vb/example1.vb#1)]  \n  \n-   To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic). For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.  \n  \n-   To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.","nodes":[{"pos":[0,191],"content":"A tuple is a data structure that has a specific number and sequence of values. The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components.","nodes":[{"content":"A tuple is a data structure that has a specific number and sequence of values. The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components.","pos":[0,191],"nodes":[{"content":"A tuple is a data structure that has a specific number and sequence of values.","pos":[0,78]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> class represents a 7-tuple, or septuple, which is a tuple that has seven components.","pos":[79,191],"source":" The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components."}]}]},{"pos":[198,799],"content":"You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method. You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.","nodes":[{"content":"You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method. You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.","pos":[0,601],"nodes":[{"content":"You can instantiate a <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> object by calling either the <ph id=\"ph2\">&lt;xref:System.Tuple%607.%23ctor%2A&gt;</ph> or the static <ph id=\"ph3\">&lt;xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName&gt;</ph> method.","pos":[0,263],"source":"You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method."},{"content":"You can retrieve the value of the tuple's components by using the read-only <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item1%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item2%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Tuple%607.Item3%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Tuple%607.Item4%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Tuple%607.Item5%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Tuple%607.Item6%2A&gt;</ph>, and <ph id=\"ph7\">&lt;xref:System.Tuple%607.Item7%2A&gt;</ph> instance properties.","pos":[264,601],"source":" You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties."}]}]},{"pos":[806,854],"content":"Tuples are commonly used in four different ways:","nodes":[{"content":"Tuples are commonly used in four different ways:","pos":[0,48]}]},{"pos":[864,1018],"content":"To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.","nodes":[{"content":"To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.","pos":[0,154],"nodes":[{"content":"To represent a single set of data.","pos":[0,34]},{"content":"For example, a tuple can represent a database record, and its components can represent individual fields of the record.","pos":[35,154]}]}]},{"pos":[1028,1431],"content":"To provide easy access to, and manipulation of, a data set. The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000. The septuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period.","nodes":[{"content":"To provide easy access to, and manipulation of, a data set.","pos":[0,59]},{"content":"The following example defines a <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> object that contains population data for New York City for each census from 1950 through 2000.","pos":[60,210],"source":" The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000."},{"content":"The septuple is passed to the <ph id=\"ph1\">`ComputePopulationChange`</ph> method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period.","pos":[211,403],"source":" The septuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period."}]},{"pos":[1442,1703],"content":"<bpt id=\"p1\">[</bpt>!code-csharp<bpt id=\"p2\">[</bpt>System.Tuple<ph id=\"ph1\">\\`</ph>7.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.class/cs/example1.cs#1)</ept>]  [!code-vb[System.Tuple<ph id=\"ph2\">\\`</ph>7.Class#1<ept id=\"p1\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.class/vb/example1.vb#1)</ept>]","leadings":["","    "],"source":"[!code-csharp[System.Tuple\\`7.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.class/cs/example1.cs#1)]\n [!code-vb[System.Tuple\\`7.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.class/vb/example1.vb#1)]"},{"pos":[1713,1967],"content":"To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic). For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.","nodes":[{"content":"To return multiple values from a method without the use of <ph id=\"ph1\">`out`</ph> parameters (in C#) or <ph id=\"ph2\">`ByRef`</ph> parameters (in Visual Basic).","pos":[0,124],"source":"To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic)."},{"content":"For example, the previous example returns its computed statistics, along with the city name, in a <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> object.","pos":[125,254],"source":" For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object."}]},{"pos":[1977,2391],"content":"To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.","nodes":[{"content":"To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.","pos":[0,414],"nodes":[{"content":"To pass multiple values to a method through a single parameter.","pos":[0,63]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.","pos":[64,273],"source":" For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup."},{"content":"If you supply a <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.","pos":[274,414],"source":" If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data."}]}]}],"pos":[1282,3693],"yaml":true,"extradata":"MT"},{"content":"The type of the tuple's first component.","nodes":[{"pos":[0,40],"content":"The type of the tuple's first component.","nodes":[{"content":"The type of the tuple's first component.","pos":[0,40]}]}],"pos":[3908,3949],"yaml":true},{"content":"The type of the tuple's second component.","nodes":[{"pos":[0,41],"content":"The type of the tuple's second component.","nodes":[{"content":"The type of the tuple's second component.","pos":[0,41]}]}],"pos":[3981,4023],"yaml":true},{"content":"The type of the tuple's third component.","nodes":[{"pos":[0,40],"content":"The type of the tuple's third component.","nodes":[{"content":"The type of the tuple's third component.","pos":[0,40]}]}],"pos":[4055,4096],"yaml":true},{"content":"The type of the tuple's fourth component.","nodes":[{"pos":[0,41],"content":"The type of the tuple's fourth component.","nodes":[{"content":"The type of the tuple's fourth component.","pos":[0,41]}]}],"pos":[4128,4170],"yaml":true},{"content":"The type of the tuple's fifth component.","nodes":[{"pos":[0,40],"content":"The type of the tuple's fifth component.","nodes":[{"content":"The type of the tuple's fifth component.","pos":[0,40]}]}],"pos":[4202,4243],"yaml":true},{"content":"The type of the tuple's sixth component.","nodes":[{"pos":[0,40],"content":"The type of the tuple's sixth component.","nodes":[{"content":"The type of the tuple's sixth component.","pos":[0,40]}]}],"pos":[4275,4316],"yaml":true},{"content":"The type of the tuple's seventh component.","nodes":[{"pos":[0,42],"content":"The type of the tuple's seventh component.","nodes":[{"content":"The type of the tuple's seventh component.","pos":[0,42]}]}],"pos":[4348,4391],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Tuple`7\"></xref> class.","nodes":[{"pos":[0,76],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Tuple`7\"></xref> class."}],"pos":[6590,6667],"yaml":true},{"content":"You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.  \n  \n [!code-csharp[System.Tuple.Create#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)]\n [!code-vb[System.Tuple.Create#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)]  \n  \n This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.  \n  \n [!code-csharp[System.Tuple.Create#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)]\n [!code-vb[System.Tuple.Create#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)]","nodes":[{"pos":[0,572],"content":"You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.","nodes":[{"content":"You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.","pos":[0,572],"nodes":[{"content":"You can use the static <ph id=\"ph1\">&lt;xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName&gt;</ph> method to instantiate a 7-tuple object without having to explicitly specify the types of its components.","pos":[0,259],"source":"You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple object without having to explicitly specify the types of its components."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName&gt;</ph> method to instantiate a 7-tuple whose first component is of type <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> and whose remaining components are of type <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph>.","pos":[260,572],"source":" The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>."}]}]},{"pos":[579,832],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Tuple.Create#13<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Tuple.Create#13<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Tuple.Create#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)]\n [!code-vb[System.Tuple.Create#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)]"},{"pos":[839,940],"content":"This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.","nodes":[{"content":"This is equivalent to the following call to the <ph id=\"ph1\">&lt;xref:System.Tuple%607.%23ctor%2A&gt;</ph> class constructor.","pos":[0,101],"source":"This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor."}]},{"pos":[947,1200],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Tuple.Create#14<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Tuple.Create#14<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Tuple.Create#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)]\n [!code-vb[System.Tuple.Create#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)]"}],"pos":[6678,7889],"yaml":true,"extradata":"MT"},{"content":"The value of the tuple's first component.","nodes":[{"pos":[0,41],"content":"The value of the tuple's first component.","nodes":[{"content":"The value of the tuple's first component.","pos":[0,41]}]}],"pos":[8063,8105],"yaml":true},{"content":"The value of the tuple's second component.","nodes":[{"pos":[0,42],"content":"The value of the tuple's second component.","nodes":[{"content":"The value of the tuple's second component.","pos":[0,42]}]}],"pos":[8155,8198],"yaml":true},{"content":"The value of the tuple's third component.","nodes":[{"pos":[0,41],"content":"The value of the tuple's third component.","nodes":[{"content":"The value of the tuple's third component.","pos":[0,41]}]}],"pos":[8248,8290],"yaml":true},{"content":"The value of the tuple's fourth component","nodes":[{"pos":[0,41],"content":"The value of the tuple's fourth component","nodes":[{"content":"The value of the tuple's fourth component","pos":[0,41]}]}],"pos":[8340,8382],"yaml":true},{"content":"The value of the tuple's fifth component.","nodes":[{"pos":[0,41],"content":"The value of the tuple's fifth component.","nodes":[{"content":"The value of the tuple's fifth component.","pos":[0,41]}]}],"pos":[8432,8474],"yaml":true},{"content":"The value of the tuple's sixth component.","nodes":[{"pos":[0,41],"content":"The value of the tuple's sixth component.","nodes":[{"content":"The value of the tuple's sixth component.","pos":[0,41]}]}],"pos":[8524,8566],"yaml":true},{"content":"The value of the tuple's seventh component.","nodes":[{"pos":[0,43],"content":"The value of the tuple's seventh component.","nodes":[{"content":"The value of the tuple's seventh component.","pos":[0,43]}]}],"pos":[8616,8660],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.Tuple`7\"></xref> object is equal to a specified object.","nodes":[{"pos":[0,125],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object is equal to a specified object.","source":"Returns a value that indicates whether the current <xref href=\"System.Tuple`7\"></xref> object is equal to a specified object."}],"pos":[10180,10306],"yaml":true},{"content":"The `obj` parameter is considered to be equal to the current instance under the following conditions:  \n  \n-   It is a <xref:System.Tuple%607> object.  \n  \n-   Its seven components are of the same types as the current instance.  \n  \n-   Its seven components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:","source":"The `obj` parameter is considered to be equal to the current instance under the following conditions:"},{"pos":[111,150],"content":"It is a <xref:System.Tuple%607> object.","nodes":[{"content":"It is a <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> object.","pos":[0,39],"source":"It is a <xref:System.Tuple%607> object."}]},{"pos":[160,227],"content":"Its seven components are of the same types as the current instance.","nodes":[{"content":"Its seven components are of the same types as the current instance.","pos":[0,67]}]},{"pos":[237,384],"content":"Its seven components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.","nodes":[{"content":"Its seven components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.","pos":[0,147],"nodes":[{"content":"Its seven components are equal to those of the current instance.","pos":[0,64]},{"content":"Equality is determined by the default object equality comparer for each component.","pos":[65,147]}]}]}],"pos":[10317,10710],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[11613,11655],"yaml":true},{"content":"`true` if the current instance is equal to the specified object; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified object; otherwise, `false`."}],"pos":[11713,11800],"yaml":true},{"content":"Returns the hash code for the current <xref href=\"System.Tuple`7\"></xref> object.","nodes":[{"pos":[0,81],"content":"Returns the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the hash code for the current <xref href=\"System.Tuple`7\"></xref> object."}],"pos":[13288,13370],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[13504,13539],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's first component.","nodes":[{"pos":[0,91],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's first component.","source":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's first component."}],"pos":[14992,15084],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item1%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item1%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item1%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item1%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%607.Item1%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item1%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item1%2A> property."},{"pos":[239,481],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%607&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[15095,15583],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's first component.","nodes":[{"pos":[0,86],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's first component.","source":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's first component."}],"pos":[16340,16427],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's second component.","nodes":[{"pos":[0,92],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's second component.","source":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's second component."}],"pos":[17874,17967],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item2%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item2%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item2%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item2%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%607.Item2%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item2%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item2%2A> property."},{"pos":[239,482],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%607&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,243],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[17978,18467],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's second component.","nodes":[{"pos":[0,87],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's second component.","source":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's second component."}],"pos":[19233,19321],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's third component.","nodes":[{"pos":[0,91],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's third component.","source":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's third component."}],"pos":[20768,20860],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item3%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item3%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item3%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item3%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%607.Item3%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item3%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item3%2A> property."},{"pos":[239,481],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%607&gt;</ph> object, and retrieving the third element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[20871,21359],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's third component.","nodes":[{"pos":[0,86],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's third component.","source":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's third component."}],"pos":[22125,22212],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's fourth component.","nodes":[{"pos":[0,92],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's fourth component.","source":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's fourth component."}],"pos":[23659,23752],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item4%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item4%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item4%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item4%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%607.Item4%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item4%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item4%2A> property."},{"pos":[239,482],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%607&gt;</ph> object, and retrieving the fourth element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,243],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[23763,24252],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's fourth component.","nodes":[{"pos":[0,87],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's fourth component.","source":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's fourth component."}],"pos":[25018,25106],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's fifth component.","nodes":[{"pos":[0,91],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's fifth component.","source":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's fifth component."}],"pos":[26553,26645],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item5%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item5%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item5%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item5%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%607.Item5%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item5%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item5%2A> property."},{"pos":[239,481],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%607&gt;</ph> object, and retrieving the fifth element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[26656,27144],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's fifth component.","nodes":[{"pos":[0,86],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's fifth component.","source":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's fifth component."}],"pos":[27910,27997],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's sixth component.","nodes":[{"pos":[0,91],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's sixth component.","source":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's sixth component."}],"pos":[29444,29536],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item6%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item6%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item6%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item6%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%607.Item6%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item6%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item6%2A> property."},{"pos":[239,481],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%607&gt;</ph> object, and retrieving the sixth element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[29547,30035],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's sixth component.","nodes":[{"pos":[0,86],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's sixth component.","source":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's sixth component."}],"pos":[30801,30888],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's seventh component.","nodes":[{"pos":[0,93],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's seventh component.","source":"Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's seventh component."}],"pos":[32335,32429],"yaml":true},{"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item7%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item7%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,108],"content":"You can dynamically determine the type of the <xref:System.Tuple%607.Item7%2A> component in one of two ways:","nodes":[{"content":"You can dynamically determine the type of the <ph id=\"ph1\">&lt;xref:System.Tuple%607.Item7%2A&gt;</ph> component in one of two ways:","pos":[0,108],"source":"You can dynamically determine the type of the <xref:System.Tuple%607.Item7%2A> component in one of two ways:"}]},{"pos":[118,229],"content":"By calling the <ph id=\"ph1\">`GetType`</ph> method on the value that is returned by the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item7%2A&gt;</ph> property.","source":"By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item7%2A> property."},{"pos":[239,483],"content":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.","nodes":[{"content":"By retrieving the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object that represents the <ph id=\"ph2\">&lt;xref:System.Tuple%607&gt;</ph> object, and retrieving the seventh element from the array that is returned by its <ph id=\"ph3\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,244],"source":"By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."}]}],"pos":[32440,32930],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's seventh component.","nodes":[{"pos":[0,88],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object's seventh component.","source":"The value of the current <xref href=\"System.Tuple`7\"></xref> object's seventh component."}],"pos":[33696,33785],"yaml":true},{"content":"Returns a string that represents the value of this <xref href=\"System.Tuple`7\"></xref> instance.","nodes":[{"pos":[0,96],"content":"Returns a string that represents the value of this <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a string that represents the value of this <xref href=\"System.Tuple`7\"></xref> instance."}],"pos":[35254,35351],"yaml":true},{"content":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> properties, respectively. If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"pos":[0,592],"content":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> properties, respectively. If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"content":"The string returned by this method takes the form (<bpt id=\"p1\">*</bpt>Item1<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>Item2<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>Item3<ept id=\"p3\">*</ept>, <bpt id=\"p4\">*</bpt>Item4<ept id=\"p4\">*</ept>, <ph id=\"ph1\">`Item5, Item6, Item7`</ph>), where <bpt id=\"p5\">*</bpt>Item1<ept id=\"p5\">*</ept>, <bpt id=\"p6\">*</bpt>Item2<ept id=\"p6\">*</ept>, <bpt id=\"p7\">*</bpt>Item3<ept id=\"p7\">*</ept>, <bpt id=\"p8\">*</bpt>Item4<ept id=\"p8\">*</ept>, <bpt id=\"p9\">*</bpt>Item5<ept id=\"p9\">*</ept>, <bpt id=\"p10\">*</bpt>Item6<ept id=\"p10\">*</ept>, and <bpt id=\"p11\">*</bpt>Item7<ept id=\"p11\">*</ept> represent the values of the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item1%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Tuple%607.Item2%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Tuple%607.Item3%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Tuple%607.Item4%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Tuple%607.Item5%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Tuple%607.Item6%2A&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Tuple%607.Item7%2A&gt;</ph> properties, respectively.","pos":[0,477],"source":"The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> properties, respectively."},{"content":"If any of the property values is <ph id=\"ph1\">`null`</ph>, it is represented as <ph id=\"ph2\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.","pos":[478,592],"source":" If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>."}]}],"pos":[35362,35955],"yaml":true,"extradata":"MT"},{"content":"The string representation of this <xref href=\"System.Tuple`7\"></xref> object.","nodes":[{"pos":[0,77],"content":"The string representation of this <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object.","source":"The string representation of this <xref href=\"System.Tuple`7\"></xref> object."}],"pos":[36652,36730],"yaml":true},{"content":"Compares the current <xref href=\"System.Tuple`7\"></xref> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","nodes":[{"pos":[0,266],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","source":"Compares the current <xref href=\"System.Tuple`7\"></xref> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order."}],"pos":[38594,38861],"yaml":true},{"content":"This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.  \n  \n This method lets you define customized comparisons of <xref:System.Tuple%607> objects. For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component.  \n  \n Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.  \n  \n> [!CAUTION]\n>  The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","nodes":[{"pos":[0,187],"content":"This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.","nodes":[{"content":"This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.","pos":[0,187],"nodes":[{"content":"This member is an explicit interface implementation.","pos":[0,52]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.","pos":[53,187],"source":" It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface."}]}]},{"pos":[194,402],"content":"This method lets you define customized comparisons of <xref:System.Tuple%607> objects. For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component.","nodes":[{"content":"This method lets you define customized comparisons of <xref:System.Tuple%607> objects. For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component.","pos":[0,208],"nodes":[{"content":"This method lets you define customized comparisons of <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> objects.","pos":[0,86],"source":"This method lets you define customized comparisons of <xref:System.Tuple%607> objects."},{"content":"For example, you can use this method to order <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> objects based on the value of a specific component.","pos":[87,208],"source":" For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component."}]}]},{"pos":[409,1006],"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.","nodes":[{"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.","pos":[0,597],"nodes":[{"content":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <ph id=\"ph1\">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.","pos":[0,199],"source":"Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection."},{"content":"For example, it is called by the <ph id=\"ph1\">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id=\"ph3\">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id=\"ph4\">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName&gt;</ph> constructor.","pos":[200,597],"source":" For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor."}]}]},{"pos":[1014,1416],"content":"[!CAUTION]\n The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method.","pos":[11,400],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.","pos":[1,138],"source":" The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations."},{"content":"It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.","pos":[139,248]},{"content":"To determine whether two objects are equal, call the <ph id=\"ph1\">&lt;xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> method.","pos":[249,389],"source":" To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method."}]}]}],"pos":[38872,40298],"yaml":true,"extradata":"MT"},{"content":"An object to compare with the current instance.","nodes":[{"pos":[0,47],"content":"An object to compare with the current instance.","nodes":[{"content":"An object to compare with the current instance.","pos":[0,47]}]}],"pos":[41771,41819],"yaml":true},{"content":"An object that provides custom rules for comparison.","nodes":[{"pos":[0,52],"content":"An object that provides custom rules for comparison.","nodes":[{"content":"An object that provides custom rules for comparison.","pos":[0,52]}]}],"pos":[41898,41951],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,145],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following table.","source":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following table."},{"pos":[152,587],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Description","pos":[45,61],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[97,120],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>other</code>.  \n  \n ","pos":[131,181],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>other</code>."}]},{"content":"Zero","pos":[200,209],"source":" Zero  \n  \n "},{"content":" This instance and <code>other</code> have the same position in the sort order.  \n  \n ","pos":[220,306],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,79],"source":" This instance and <code>other</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[325,348],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>other</code>.  \n  \n ","pos":[359,408],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,42],"source":" This instance follows <code>other</code>."}]}]}],"pos":[42007,42614],"yaml":true},{"content":"<code>other</code> is not a <xref href=\"System.Tuple`7\"></xref> object.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>other</code> is not a <xref href=\"System.Tuple`7\"></xref> object."}],"pos":[42801,42873],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.Tuple`7\"></xref> object is equal to a specified object based on a specified comparison method.","nodes":[{"pos":[0,164],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object is equal to a specified object based on a specified comparison method.","source":"Returns a value that indicates whether the current <xref href=\"System.Tuple`7\"></xref> object is equal to a specified object based on a specified comparison method."}],"pos":[44707,44872],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \n  \n The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if other is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%607> object whose components are of the same types as the current instance. The <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%607.Item1%2A> values of the <xref:System.Tuple%607> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%607.Item2%2A> values of the two <xref:System.Tuple%607> objects. This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%607.Item7%2A> values are passed to the method.","nodes":[{"pos":[0,193],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.","pos":[0,193],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.","pos":[60,193],"source":" It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface."}]}]},{"pos":[200,1212],"content":"The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if other is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%607> object whose components are of the same types as the current instance. The <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%607.Item1%2A> values of the <xref:System.Tuple%607> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%607.Item2%2A> values of the two <xref:System.Tuple%607> objects. This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%607.Item7%2A> values are passed to the method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName&gt;</ph> implementation is called only if other is not <ph id=\"ph2\">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id=\"ph3\">&lt;xref:System.Tuple%607&gt;</ph> object whose components are of the same types as the current instance.","pos":[0,310],"source":"The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if other is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%607> object whose components are of the same types as the current instance."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method first passes the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item1%2A&gt;</ph> values of the <ph id=\"ph3\">&lt;xref:System.Tuple%607&gt;</ph> objects to be compared to the <ph id=\"ph4\">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName&gt;</ph> implementation.","pos":[311,669],"source":" The <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%607.Item1%2A> values of the <xref:System.Tuple%607> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation."},{"content":"If this method call returns <ph id=\"ph1\">`true`</ph>, the method is called again and passed the <ph id=\"ph2\">&lt;xref:System.Tuple%607.Item2%2A&gt;</ph> values of the two <ph id=\"ph3\">&lt;xref:System.Tuple%607&gt;</ph> objects.","pos":[670,831],"source":" If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%607.Item2%2A> values of the two <xref:System.Tuple%607> objects."},{"content":"This continues until the method call returns <ph id=\"ph1\">`false`</ph> when it compares a specific pair of <ph id=\"ph2\">`Item`</ph> values, or the two <ph id=\"ph3\">&lt;xref:System.Tuple%607.Item7%2A&gt;</ph> values are passed to the method.","pos":[832,1012],"source":" This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%607.Item7%2A> values are passed to the method."}]}],"pos":[44883,46100],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[47225,47267],"yaml":true},{"content":"An object that defines the method to use to evaluate whether the two objects are equal.","nodes":[{"pos":[0,87],"content":"An object that defines the method to use to evaluate whether the two objects are equal.","nodes":[{"content":"An object that defines the method to use to evaluate whether the two objects are equal.","pos":[0,87]}]}],"pos":[47354,47442],"yaml":true},{"content":"`true` if the current instance is equal to the specified object; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified object; otherwise, `false`."}],"pos":[47500,47587],"yaml":true},{"content":"Calculates the hash code for the current <xref href=\"System.Tuple`7\"></xref> object by using a specified computation method.","nodes":[{"pos":[0,124],"content":"Calculates the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object by using a specified computation method.","source":"Calculates the hash code for the current <xref href=\"System.Tuple`7\"></xref> object by using a specified computation method."}],"pos":[49477,49602],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \n  \n the method simply wraps a call to the comparer object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.  \n  \n The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%607> objects that are considered to be equal.","nodes":[{"pos":[0,193],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.","pos":[0,193],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.","pos":[60,193],"source":" It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface."}]}]},{"pos":[200,355],"content":"the method simply wraps a call to the comparer object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.","nodes":[{"content":"the method simply wraps a call to the comparer object's <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName&gt;</ph> implementation.","pos":[0,155],"source":"the method simply wraps a call to the comparer object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation."}]},{"pos":[362,511],"content":"The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%607> objects that are considered to be equal.","nodes":[{"content":"The algorithm used to compute the hash code should return the same hash code for two <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> objects that are considered to be equal.","pos":[0,149],"source":"The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%607> objects that are considered to be equal."}]}],"pos":[49613,50131],"yaml":true,"extradata":"MT"},{"content":"An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.Tuple`7\"></xref> object.","nodes":[{"pos":[0,191],"content":"An object whose <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"&gt;&lt;/xref&gt;</ph> method calculates the hash code of the current <ph id=\"ph2\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object.","source":"An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.Tuple`7\"></xref> object."}],"pos":[50343,50535],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[50591,50626],"yaml":true},{"content":"Compares the current <xref href=\"System.Tuple`7\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","nodes":[{"pos":[0,235],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","source":"Compares the current <xref href=\"System.Tuple`7\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order."}],"pos":[52317,52553],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface.  \n  \n This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%607> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.  \n  \n> [!CAUTION]\n>  The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=fullName> method.  \n  \n This method uses the default object comparer to compare each component.","nodes":[{"pos":[0,172],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface.","pos":[0,172],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Tuple%607&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IComparable&gt;</ph> interface.","pos":[60,172],"source":" It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface."}]}]},{"pos":[179,636],"content":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%607> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.","nodes":[{"content":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%607> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.","pos":[0,457],"nodes":[{"content":"This method provides the <ph id=\"ph1\">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=fullName&gt;</ph> implementation for the <ph id=\"ph2\">&lt;xref:System.Tuple%607&gt;</ph> class.","pos":[0,142],"source":"This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%607> class."},{"content":"Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <ph id=\"ph1\">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=fullName&gt;</ph>, to order the members of a collection.","pos":[143,457],"source":" Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection."}]}]},{"pos":[644,1017],"content":"[!CAUTION]\n The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=fullName> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=fullName> method.","pos":[11,371],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Tuple%607.System%23IComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.","pos":[1,114],"source":" The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations."},{"content":"It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.","pos":[115,224]},{"content":"To determine whether two objects are equal, call the <ph id=\"ph1\">&lt;xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> method.","pos":[225,360],"source":" To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=fullName> method."}]}]},{"pos":[1024,1095],"content":"This method uses the default object comparer to compare each component.","nodes":[{"content":"This method uses the default object comparer to compare each component.","pos":[0,71]}]}],"pos":[52564,53669],"yaml":true,"extradata":"MT"},{"content":"An object to compare with the current instance.","nodes":[{"pos":[0,47],"content":"An object to compare with the current instance.","nodes":[{"content":"An object to compare with the current instance.","pos":[0,47]}]}],"pos":[54934,54982],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>obj</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>obj</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>obj</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,143],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following table.","source":"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table."},{"pos":[150,579],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>obj</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>obj</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>obj</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Description","pos":[45,61],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[97,120],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>obj</code>.  \n  \n ","pos":[131,179],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph>.","pos":[1,41],"source":" This instance precedes <code>obj</code>."}]},{"content":"Zero","pos":[198,207],"source":" Zero  \n  \n "},{"content":" This instance and <code>obj</code> have the same position in the sort order.  \n  \n ","pos":[218,302],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,77],"source":" This instance and <code>obj</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[321,344],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>obj</code>.  \n  \n ","pos":[355,402],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph>.","pos":[1,40],"source":" This instance follows <code>obj</code>."}]}]}],"pos":[55038,55637],"yaml":true},{"content":"<code>obj</code> is not a <xref href=\"System.Tuple`7\"></xref> object.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">&lt;code&gt;obj&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Tuple`7\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>obj</code> is not a <xref href=\"System.Tuple`7\"></xref> object."}],"pos":[55802,55872],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Tuple`7\n  commentId: T:System.Tuple`7\n  id: Tuple`7\n  children:\n  - System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)\n  - System.Tuple`7.Equals(System.Object)\n  - System.Tuple`7.GetHashCode\n  - System.Tuple`7.Item1\n  - System.Tuple`7.Item2\n  - System.Tuple`7.Item3\n  - System.Tuple`7.Item4\n  - System.Tuple`7.Item5\n  - System.Tuple`7.Item6\n  - System.Tuple`7.Item7\n  - System.Tuple`7.ToString\n  - System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.Tuple`7.System#IComparable#CompareTo(System.Object)\n  - System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  - System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length\n  langs:\n  - csharp\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7>\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7>\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a 7-tuple, or septuple.\n  remarks: \"A tuple is a data structure that has a specific number and sequence of values. The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components.  \\n  \\n You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method. You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.  \\n  \\n Tuples are commonly used in four different ways:  \\n  \\n-   To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.  \\n  \\n-   To provide easy access to, and manipulation of, a data set. The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000. The septuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period.  \\n  \\n     [!code-csharp[System.Tuple\\\\`7.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.class/cs/example1.cs#1)]\\n     [!code-vb[System.Tuple\\\\`7.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.class/vb/example1.vb#1)]  \\n  \\n-   To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic). For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.  \\n  \\n-   To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data.\"\n  syntax:\n    content: 'public class Tuple<T1,T2,T3,T4,T5,T6,T7> : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: The type of the tuple's first component.\n    - id: T2\n      description: The type of the tuple's second component.\n    - id: T3\n      description: The type of the tuple's third component.\n    - id: T4\n      description: The type of the tuple's fourth component.\n    - id: T5\n      description: The type of the tuple's fifth component.\n    - id: T6\n      description: The type of the tuple's sixth component.\n    - id: T7\n      description: The type of the tuple's seventh component.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  extensionMethods:\n  - System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)\n  - System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)\n  commentId: M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)\n  id: '#ctor(`0,`1,`2,`3,`4,`5,`6)'\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.Tuple`7\"></xref> class.\n  remarks: \"You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.  \\n  \\n [!code-csharp[System.Tuple.Create#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)]\\n [!code-vb[System.Tuple.Create#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)]  \\n  \\n This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.  \\n  \\n [!code-csharp[System.Tuple.Create#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)]\\n [!code-vb[System.Tuple.Create#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)]\"\n  syntax:\n    content: public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);\n    parameters:\n    - id: item1\n      type: T1\n      description: The value of the tuple's first component.\n    - id: item2\n      type: T2\n      description: The value of the tuple's second component.\n    - id: item3\n      type: T3\n      description: The value of the tuple's third component.\n    - id: item4\n      type: T4\n      description: The value of the tuple's fourth component\n    - id: item5\n      type: T5\n      description: The value of the tuple's fifth component.\n    - id: item6\n      type: T6\n      description: The value of the tuple's sixth component.\n    - id: item7\n      type: T7\n      description: The value of the tuple's seventh component.\n  overload: System.Tuple`7.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.Equals(System.Object)\n  commentId: M:System.Tuple`7.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals(Object)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.Tuple`7\"></xref> object is equal to a specified object.\n  remarks: \"The `obj` parameter is considered to be equal to the current instance under the following conditions:  \\n  \\n-   It is a <xref:System.Tuple%607> object.  \\n  \\n-   Its seven components are of the same types as the current instance.  \\n  \\n-   Its seven components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component.\"\n  example:\n  - \"The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1950 to 2000. The first component of each septuple identifies the city. The first, third, and fourth septuples contain data for New York. The first septuple is a duplicate of the fourth septuple. The third septuple identifies the city as \\\"New York City\\\" instead of \\\"New York\\\". As the example shows, only the fourth septuple is equal to the first septuple.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals1.vb#1)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'\n  overload: System.Tuple`7.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.GetHashCode\n  commentId: M:System.Tuple`7.GetHashCode\n  id: GetHashCode\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode()\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for the current <xref href=\"System.Tuple`7\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Tuple`7.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.Item1\n  commentId: P:System.Tuple`7.Item1\n  id: Item1\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's first component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%607.Item1%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item1%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the city name, it retrieves the value of the <xref:System.Tuple%607.Item1%2A> property for each <xref:System.Tuple%607> object.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T1 Item1 { get; }\n    return:\n      type: T1\n      description: The value of the current <xref href=\"System.Tuple`7\"></xref> object's first component.\n  overload: System.Tuple`7.Item1*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.Item2\n  commentId: P:System.Tuple`7.Item2\n  id: Item2\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's second component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%607.Item2%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item2%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1950, it retrieves the value of the <xref:System.Tuple%607.Item2%2A> property for each <xref:System.Tuple%607> object.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T2 Item2 { get; }\n    return:\n      type: T2\n      description: The value of the current <xref href=\"System.Tuple`7\"></xref> object's second component.\n  overload: System.Tuple`7.Item2*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.Item3\n  commentId: P:System.Tuple`7.Item3\n  id: Item3\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's third component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%607.Item3%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item3%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1960, it retrieves the value of the <xref:System.Tuple%607.Item3%2A> property for each <xref:System.Tuple%607> object.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T3 Item3 { get; }\n    return:\n      type: T3\n      description: The value of the current <xref href=\"System.Tuple`7\"></xref> object's third component.\n  overload: System.Tuple`7.Item3*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.Item4\n  commentId: P:System.Tuple`7.Item4\n  id: Item4\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Item4\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's fourth component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%607.Item4%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item4%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1970, it retrieves the value of the <xref:System.Tuple%607.Item4%2A> property for each <xref:System.Tuple%607> object.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T4 Item4 { get; }\n    return:\n      type: T4\n      description: The value of the current <xref href=\"System.Tuple`7\"></xref> object's fourth component.\n  overload: System.Tuple`7.Item4*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.Item5\n  commentId: P:System.Tuple`7.Item5\n  id: Item5\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Item5\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's fifth component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%607.Item5%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item5%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1980, it retrieves the value of the <xref:System.Tuple%607.Item5%2A> property for each <xref:System.Tuple%607> object.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T5 Item5 { get; }\n    return:\n      type: T5\n      description: The value of the current <xref href=\"System.Tuple`7\"></xref> object's fifth component.\n  overload: System.Tuple`7.Item5*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.Item6\n  commentId: P:System.Tuple`7.Item6\n  id: Item6\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Item6\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's sixth component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%607.Item6%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item6%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1990, it retrieves the value of the <xref:System.Tuple%607.Item6%2A> property for each <xref:System.Tuple%607> object.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T6 Item6 { get; }\n    return:\n      type: T6\n      description: The value of the current <xref href=\"System.Tuple`7\"></xref> object's sixth component.\n  overload: System.Tuple`7.Item6*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.Item7\n  commentId: P:System.Tuple`7.Item7\n  id: Item7\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: Item7\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.Tuple`7\"></xref> object's seventh component.\n  remarks: \"You can dynamically determine the type of the <xref:System.Tuple%607.Item7%2A> component in one of two ways:  \\n  \\n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item7%2A> property.  \\n  \\n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 2000, it retrieves the value of the <xref:System.Tuple%607.Item7%2A> property for each <xref:System.Tuple%607> object.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]\"\n  syntax:\n    content: public T7 Item7 { get; }\n    return:\n      type: T7\n      description: The value of the current <xref href=\"System.Tuple`7\"></xref> object's seventh component.\n  overload: System.Tuple`7.Item7*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.ToString\n  commentId: M:System.Tuple`7.ToString\n  id: ToString\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString()\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a string that represents the value of this <xref href=\"System.Tuple`7\"></xref> instance.\n  remarks: The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> properties, respectively. If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.\n  example:\n  - \"The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000. The components of the sextuple are then displayed by a call to the <xref:System.Tuple%607.ToString%2A> method.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.tostring/cs/tostring1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.tostring/vb/tostring1.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of this <xref href=\"System.Tuple`7\"></xref> object.\n  overload: System.Tuple`7.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  commentId: M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralComparable.CompareTo(Object, IComparer)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the current <xref href=\"System.Tuple`7\"></xref> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.\n  remarks: \"This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.  \\n  \\n This method lets you define customized comparisons of <xref:System.Tuple%607> objects. For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component.  \\n  \\n Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method.\"\n  example:\n  - \"The following example creates an array of <xref:System.Tuple%607> objects that contains population data for three U.S. cities from 1950 to 2000. The septuple's first component is the city name. The remaining five components represent the population at 10-year intervals from 1950 to 2000.  \\n  \\n The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of septuples to be sorted by any one of its components. Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.  \\n  \\n The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1960) and displays them, and then sorts them by the sixth component (the population in 1990) and displays them.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto2.cs#2)]\\n [!code-vb[System.Tuple\\\\`7.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto2.vb#2)]\"\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: An object to compare with the current instance.\n    - id: comparer\n      type: System.Collections.IComparer\n      description: An object that provides custom rules for comparison.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>other</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Tuple`7.System#Collections#IStructuralComparable#CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>other</code> is not a <xref href=\"System.Tuple`7\"></xref> object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  commentId: M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.Tuple`7\"></xref> object is equal to a specified object based on a specified comparison method.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \\n  \\n The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if other is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%607> object whose components are of the same types as the current instance. The <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%607.Item1%2A> values of the <xref:System.Tuple%607> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%607.Item2%2A> values of the two <xref:System.Tuple%607> objects. This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%607.Item7%2A> values are passed to the method.\"\n  example:\n  - \"The following example defines a `RateComparer` class that performs a custom test for equality. If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=fullName> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits. Otherwise, it simply calls the `x` parameter's `Equals` method. The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%607> objects that contain data on the rate of population change between 1950 and 2000 are equal.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals2.cs#2)]\\n [!code-vb[System.Tuple\\\\`7.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals2.vb#2)]\"\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The object to compare with this instance.\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: An object that defines the method to use to evaluate whether the two objects are equal.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'\n  overload: System.Tuple`7.System#Collections#IStructuralEquatable#Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  commentId: M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Calculates the hash code for the current <xref href=\"System.Tuple`7\"></xref> object by using a specified computation method.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \\n  \\n the method simply wraps a call to the comparer object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.  \\n  \\n The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%607> objects that are considered to be equal.\"\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.Tuple`7\"></xref> object.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Tuple`7.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IComparable.CompareTo(Object)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the current <xref href=\"System.Tuple`7\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface.  \\n  \\n This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%607> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=fullName> method.  \\n  \\n This method uses the default object comparer to compare each component.\"\n  example:\n  - \"The following example creates an array of <xref:System.Tuple%607> objects that contain population data for three cities in the United States from 1950 to 2000. The seven components consist of the city name followed by the city's population at 10-year intervals from 1950 to 2000. The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%607.ToString%2A> method to display each tuple in sorted order. The output shows that the array has been sorted by name, which is the first component. Note that the example does not directly call the <xref:System.Tuple%607.System%23IComparable%23CompareTo%28System.Object%29> method. This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.  \\n  \\n [!code-csharp[System.Tuple\\\\`7.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto1.cs#1)]\\n [!code-vb[System.Tuple\\\\`7.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto1.vb#1)]\"\n  syntax:\n    content: int IComparable.CompareTo (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with the current instance.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>obj</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>obj</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>obj</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Tuple`7.System#IComparable#CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>obj</code> is not a <xref href=\"System.Tuple`7\"></xref> object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  commentId: P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  id: System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  isEii: true\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: ITuple.Item(Int32)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Item(Int32)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Object\n      description: ''\n  overload: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length\n  commentId: P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length\n  id: System#Runtime#CompilerServices#ITuple#Length\n  isEii: true\n  parent: System.Tuple`7\n  langs:\n  - csharp\n  name: ITuple.Length\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Length\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Length\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int System.Runtime.CompilerServices.ITuple.Length { get; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)\n  parent: System.Tuple`7\n  isExternal: false\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)\n- uid: T1\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: T7\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: System.Tuple`7.Equals(System.Object)\n  parent: System.Tuple`7\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals(Object)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Tuple`7.GetHashCode\n  parent: System.Tuple`7\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode()\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Tuple`7.Item1\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item1\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1\n- uid: System.Tuple`7.Item2\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item2\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2\n- uid: System.Tuple`7.Item3\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item3\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3\n- uid: System.Tuple`7.Item4\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item4\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4\n- uid: System.Tuple`7.Item5\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item5\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5\n- uid: System.Tuple`7.Item6\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item6\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6\n- uid: System.Tuple`7.Item7\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item7\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7\n- uid: System.Tuple`7.ToString\n  parent: System.Tuple`7\n  isExternal: false\n  name: ToString()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString()\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.Tuple`7\n  isExternal: false\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralComparable.CompareTo(Object, IComparer)\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.Tuple`7\n  isExternal: false\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.Tuple`7\n  isExternal: false\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Tuple`7.System#IComparable#CompareTo(System.Object)\n  parent: System.Tuple`7\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IComparable.CompareTo(Object)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IComparable.CompareTo(Object)\n- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  parent: System.Tuple`7\n  isExternal: false\n  name: ITuple.Item(Int32)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Item(Int32)\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Item(Int32)\n- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length\n  parent: System.Tuple`7\n  isExternal: false\n  name: ITuple.Length\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Length\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Length\n- uid: System.Tuple`7.#ctor*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7>\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.Equals*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Equals\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.GetHashCode*\n  parent: System.Tuple`7\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.Item1*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item1\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.Item2*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item2\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.Item3*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item3\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.Item4*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item4\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.Item5*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item5\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.Item6*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item6\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.Item7*\n  parent: System.Tuple`7\n  isExternal: false\n  name: Item7\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.ToString*\n  parent: System.Tuple`7\n  isExternal: false\n  name: ToString\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.System#Collections#IStructuralComparable#CompareTo*\n  parent: System.Tuple`7\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralComparable.CompareTo\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.System#Collections#IStructuralEquatable#Equals*\n  parent: System.Tuple`7\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralEquatable.Equals\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralEquatable.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode*\n  parent: System.Tuple`7\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralEquatable.GetHashCode\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralEquatable.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.System#IComparable#CompareTo*\n  parent: System.Tuple`7\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.IComparable.CompareTo\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item*\n  parent: System.Tuple`7\n  isExternal: false\n  name: System.Runtime.CompilerServices.ITuple.Item\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Runtime.CompilerServices.ITuple.Item\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Runtime.CompilerServices.ITuple.Item\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length*\n  parent: System.Tuple`7\n  isExternal: false\n  name: System.Runtime.CompilerServices.ITuple.Length\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Runtime.CompilerServices.ITuple.Length\n  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Runtime.CompilerServices.ITuple.Length\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)\n  parent: System.TupleExtensions\n  isExternal: false\n  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>, T1, T2, T3, T4, T5, T6, T7)\n  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>, T1, T2, T3, T4, T5, T6, T7)\n  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>, T1, T2, T3, T4, T5, T6, T7)\n- uid: System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>)\n  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>)\n  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>)\n- uid: System.Collections.IStructuralComparable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralComparable\n  nameWithType: IStructuralComparable\n  fullName: System.Collections.IStructuralComparable\n- uid: System.Collections.IStructuralEquatable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralEquatable\n  nameWithType: IStructuralEquatable\n  fullName: System.Collections.IStructuralEquatable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n"}