{"nodes":[{"content":"There are parts of the Windows Identity Foundation (WIF) configuration schema in which users can specify arbitrary elements and attributes; for example, when specifying a custom token handler. The <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> class is implemented to handle these cases.","nodes":[{"pos":[0,328],"content":"There are parts of the Windows Identity Foundation (WIF) configuration schema in which users can specify arbitrary elements and attributes; for example, when specifying a custom token handler. The <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> class is implemented to handle these cases.","nodes":[{"content":"There are parts of the Windows Identity Foundation (WIF) configuration schema in which users can specify arbitrary elements and attributes; for example, when specifying a custom token handler.","pos":[0,192]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"&gt;&lt;/xref&gt;</ph> class is implemented to handle these cases.","pos":[193,328],"source":" The <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> class is implemented to handle these cases."}]}],"pos":[1306,1635],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> class.","nodes":[{"pos":[0,128],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> class."}],"pos":[5687,5816],"yaml":true},{"content":"Gets the child nodes of this element.","nodes":[{"pos":[0,37],"content":"Gets the child nodes of this element.","nodes":[{"content":"Gets the child nodes of this element.","pos":[0,37]}]}],"pos":[7092,7130],"yaml":true},{"content":"The collection of child nodes. `null` if this element has no child nodes.","nodes":[{"pos":[0,73],"content":"The collection of child nodes. `null` if this element has no child nodes.","nodes":[{"content":"The collection of child nodes.","pos":[0,30]},{"content":"<ph id=\"ph1\">`null`</ph> if this element has no child nodes.","pos":[31,73],"source":"`null` if this element has no child nodes."}]}],"pos":[7269,7343],"yaml":true},{"content":"Reads XML from the configuration file.","nodes":[{"pos":[0,38],"content":"Reads XML from the configuration file.","nodes":[{"content":"Reads XML from the configuration file.","pos":[0,38]}]}],"pos":[8756,8795],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlReader\"></xref> that reads from the configuration file.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> that reads from the configuration file.","source":"The <xref href=\"System.Xml.XmlReader\"></xref> that reads from the configuration file."}],"pos":[9006,9092],"yaml":true},{"content":"`true` to serialize only the collection key properties; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> to serialize only the collection key properties; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to serialize only the collection key properties; otherwise, `false`."}],"pos":[9171,9249],"yaml":true},{"content":"Gets the XML element represented by this instance.","nodes":[{"pos":[0,50],"content":"Gets the XML element represented by this instance.","nodes":[{"content":"Gets the XML element represented by this instance.","pos":[0,50]}]}],"pos":[10465,10516],"yaml":true},{"content":"The XML element.","nodes":[{"pos":[0,16],"content":"The XML element.","nodes":[{"content":"The XML element.","pos":[0,16]}]}],"pos":[10655,10672],"yaml":true},{"content":"Gets a value that indicates whether an unknown attribute is encountered during deserialization. Always returns `true`.","nodes":[{"pos":[0,118],"content":"Gets a value that indicates whether an unknown attribute is encountered during deserialization. Always returns `true`.","nodes":[{"content":"Gets a value that indicates whether an unknown attribute is encountered during deserialization.","pos":[0,95]},{"content":"Always returns <ph id=\"ph1\">`true`</ph>.","pos":[96,118],"source":" Always returns `true`."}]}],"pos":[12147,12266],"yaml":true},{"content":"The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements. For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.","nodes":[{"pos":[0,311],"content":"The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements. For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor&gt;</ph> class is specifically implemented to handle arbitrary, user-defined attributes and elements.","pos":[0,170],"source":"The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements."},{"content":"For this reason, this method returns <ph id=\"ph1\">`true`</ph> when the .NET Framework detects an unrecognized element or attribute to keep the parser running.","pos":[171,311],"source":" For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running."}]}],"pos":[12277,12589],"yaml":true,"extradata":"MT"},{"content":"The name of the unrecognized attribute.","nodes":[{"pos":[0,39],"content":"The name of the unrecognized attribute.","nodes":[{"content":"The name of the unrecognized attribute.","pos":[0,39]}]}],"pos":[12776,12816],"yaml":true},{"content":"The value of the unrecognized attribute.","nodes":[{"pos":[0,40],"content":"The value of the unrecognized attribute.","nodes":[{"content":"The value of the unrecognized attribute.","pos":[0,40]}]}],"pos":[12877,12918],"yaml":true},{"content":"Always returns `true`, which indicates that an unrecognized attribute has been encountered.","nodes":[{"pos":[0,91],"content":"Always returns <ph id=\"ph1\">`true`</ph>, which indicates that an unrecognized attribute has been encountered.","source":"Always returns `true`, which indicates that an unrecognized attribute has been encountered."}],"pos":[12976,13068],"yaml":true},{"content":"Gets a value that indicates whether an unknown element is encountered during deserialization. Always returns `true`.","nodes":[{"pos":[0,116],"content":"Gets a value that indicates whether an unknown element is encountered during deserialization. Always returns `true`.","nodes":[{"content":"Gets a value that indicates whether an unknown element is encountered during deserialization.","pos":[0,93]},{"content":"Always returns <ph id=\"ph1\">`true`</ph>.","pos":[94,116],"source":" Always returns `true`."}]}],"pos":[14583,14700],"yaml":true},{"content":"The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements. For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.","nodes":[{"pos":[0,311],"content":"The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements. For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor&gt;</ph> class is specifically implemented to handle arbitrary, user-defined attributes and elements.","pos":[0,170],"source":"The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements."},{"content":"For this reason, this method returns <ph id=\"ph1\">`true`</ph> when the .NET Framework detects an unrecognized element or attribute to keep the parser running.","pos":[171,311],"source":" For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running."}]}],"pos":[14711,15023],"yaml":true,"extradata":"MT"},{"content":"The name of the unknown subelement.","nodes":[{"pos":[0,35],"content":"The name of the unknown subelement.","nodes":[{"content":"The name of the unknown subelement.","pos":[0,35]}]}],"pos":[15237,15273],"yaml":true},{"content":"The XML reader that is being used for deserialization.","nodes":[{"pos":[0,54],"content":"The XML reader that is being used for deserialization.","nodes":[{"content":"The XML reader that is being used for deserialization.","pos":[0,54]}]}],"pos":[15342,15397],"yaml":true},{"content":"Always returns `true`, which indicates that an unrecognized element has been encountered.","nodes":[{"pos":[0,89],"content":"Always returns <ph id=\"ph1\">`true`</ph>, which indicates that an unrecognized element has been encountered.","source":"Always returns `true`, which indicates that an unrecognized element has been encountered."}],"pos":[15455,15545],"yaml":true},{"content":"Resets the internal state of the <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> object, including the locks and the properties collections.","nodes":[{"pos":[0,180],"content":"Resets the internal state of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"&gt;&lt;/xref&gt;</ph> object, including the locks and the properties collections.","source":"Resets the internal state of the <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> object, including the locks and the properties collections."}],"pos":[16926,17107],"yaml":true},{"content":"The parent node of the configuration element.","nodes":[{"pos":[0,45],"content":"The parent node of the configuration element.","nodes":[{"content":"The parent node of the configuration element.","pos":[0,45]}]}],"pos":[17332,17378],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  commentId: T:System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  id: ConfigurationElementInterceptor\n  children:\n  - System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor\n  - System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes\n  - System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml\n  - System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset(System.Configuration.ConfigurationElement)\n  langs:\n  - csharp\n  name: ConfigurationElementInterceptor\n  nameWithType: ConfigurationElementInterceptor\n  fullName: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: There are parts of the Windows Identity Foundation (WIF) configuration schema in which users can specify arbitrary elements and attributes; for example, when specifying a custom token handler. The <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> class is implemented to handle these cases.\n  syntax:\n    content: 'public class ConfigurationElementInterceptor : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  derivedClasses:\n  - System.IdentityModel.Configuration.CustomTypeElement\n  - System.IdentityModel.Configuration.IssuerNameRegistryElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor\n  commentId: M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  langs:\n  - csharp\n  name: ConfigurationElementInterceptor()\n  nameWithType: ConfigurationElementInterceptor.ConfigurationElementInterceptor()\n  fullName: ConfigurationElementInterceptor.ConfigurationElementInterceptor()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> class.\n  syntax:\n    content: public ConfigurationElementInterceptor ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes\n  commentId: P:System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes\n  id: ChildNodes\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  langs:\n  - csharp\n  name: ChildNodes\n  nameWithType: ConfigurationElementInterceptor.ChildNodes\n  fullName: ConfigurationElementInterceptor.ChildNodes\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets the child nodes of this element.\n  syntax:\n    content: public System.Xml.XmlNodeList ChildNodes { get; }\n    return:\n      type: System.Xml.XmlNodeList\n      description: The collection of child nodes. `null` if this element has no child nodes.\n  overload: System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  commentId: M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  id: DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  langs:\n  - csharp\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElementInterceptor.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElementInterceptor.DeserializeElement(XmlReader, Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Reads XML from the configuration file.\n  syntax:\n    content: protected override void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The <xref href=\"System.Xml.XmlReader\"></xref> that reads from the configuration file.\n    - id: serializeCollectionKey\n      type: System.Boolean\n      description: '`true` to serialize only the collection key properties; otherwise, `false`.'\n  overload: System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml\n  commentId: P:System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml\n  id: ElementAsXml\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  langs:\n  - csharp\n  name: ElementAsXml\n  nameWithType: ConfigurationElementInterceptor.ElementAsXml\n  fullName: ConfigurationElementInterceptor.ElementAsXml\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets the XML element represented by this instance.\n  syntax:\n    content: public System.Xml.XmlElement ElementAsXml { get; }\n    return:\n      type: System.Xml.XmlElement\n      description: The XML element.\n  overload: System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  commentId: M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  id: OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  langs:\n  - csharp\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(String, String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets a value that indicates whether an unknown attribute is encountered during deserialization. Always returns `true`.\n  remarks: The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements. For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.\n  syntax:\n    content: protected override bool OnDeserializeUnrecognizedAttribute (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the unrecognized attribute.\n    - id: value\n      type: System.String\n      description: The value of the unrecognized attribute.\n    return:\n      type: System.Boolean\n      description: Always returns `true`, which indicates that an unrecognized attribute has been encountered.\n  overload: System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  id: OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  langs:\n  - csharp\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(String, XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets a value that indicates whether an unknown element is encountered during deserialization. Always returns `true`.\n  remarks: The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements. For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.\n  syntax:\n    content: protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);\n    parameters:\n    - id: elementName\n      type: System.String\n      description: The name of the unknown subelement.\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The XML reader that is being used for deserialization.\n    return:\n      type: System.Boolean\n      description: Always returns `true`, which indicates that an unrecognized element has been encountered.\n  overload: System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset(System.Configuration.ConfigurationElement)\n  commentId: M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset(System.Configuration.ConfigurationElement)\n  id: Reset(System.Configuration.ConfigurationElement)\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  langs:\n  - csharp\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElementInterceptor.Reset(ConfigurationElement)\n  fullName: ConfigurationElementInterceptor.Reset(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Resets the internal state of the <xref href=\"System.IdentityModel.Configuration.ConfigurationElementInterceptor\"></xref> object, including the locks and the properties collections.\n  syntax:\n    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);\n    parameters:\n    - id: parentElement\n      type: System.Configuration.ConfigurationElement\n      description: The parent node of the configuration element.\n  overload: System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: ConfigurationElementInterceptor()\n  nameWithType: ConfigurationElementInterceptor.ConfigurationElementInterceptor()\n  fullName: ConfigurationElementInterceptor.ConfigurationElementInterceptor()\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: ChildNodes\n  nameWithType: ConfigurationElementInterceptor.ChildNodes\n  fullName: ConfigurationElementInterceptor.ChildNodes\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElementInterceptor.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElementInterceptor.DeserializeElement(XmlReader, Boolean)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: ElementAsXml\n  nameWithType: ConfigurationElementInterceptor.ElementAsXml\n  fullName: ConfigurationElementInterceptor.ElementAsXml\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset(System.Configuration.ConfigurationElement)\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElementInterceptor.Reset(ConfigurationElement)\n  fullName: ConfigurationElementInterceptor.Reset(ConfigurationElement)\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor*\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: ConfigurationElementInterceptor\n  nameWithType: ConfigurationElementInterceptor.ConfigurationElementInterceptor\n  fullName: ConfigurationElementInterceptor.ConfigurationElementInterceptor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes*\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: ChildNodes\n  nameWithType: ConfigurationElementInterceptor.ChildNodes\n  fullName: ConfigurationElementInterceptor.ChildNodes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement*\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: DeserializeElement\n  nameWithType: ConfigurationElementInterceptor.DeserializeElement\n  fullName: ConfigurationElementInterceptor.DeserializeElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml*\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: ElementAsXml\n  nameWithType: ConfigurationElementInterceptor.ElementAsXml\n  fullName: ConfigurationElementInterceptor.ElementAsXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute*\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute\n  nameWithType: ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute\n  fullName: ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement*\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement\n  nameWithType: ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement\n  fullName: ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n- uid: System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset*\n  parent: System.IdentityModel.Configuration.ConfigurationElementInterceptor\n  isExternal: false\n  name: Reset\n  nameWithType: ConfigurationElementInterceptor.Reset\n  fullName: ConfigurationElementInterceptor.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/ConfigurationElementInterceptor.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Properties\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Properties\n  nameWithType: ConfigurationElement.Properties\n  fullName: ConfigurationElement.Properties\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}