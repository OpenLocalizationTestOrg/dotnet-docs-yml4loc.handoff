### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  commentId: T:System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Configures the location of a custom implementation of the role service.
  remarks: "The <xref:System.Web.UI.RoleServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.RoleService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.  \n  \n The role Web service is used by AJAX-enabled applications to retrieve role information for the current authenticated user by using an asynchronous Web service call. You can use <xref:System.Web.UI.RoleServiceManager> to provide the path of an alternative implementation of the role Web service instead of using the built-in Web service.  \n  \n To use the role service in your application, you must enable it in the configuration file and declare it in the page. If you use the built-in role Web service, you have to enable it, but you do not have to explicitly declare the role service manager in the page.  \n  \n To create a custom role service, you must implement a Web service that has two methods: `GetRolesForCurrentUser` and `IsCurrentUserInRole`. These methods must have the same signature as the corresponding methods of the built-in role Web service.  \n  \n The following example shows the basic class structure that must be implemented in a custom role Web service class.  \n  \n  \n  \n To use a custom role Web service, you can add the service declaratively in markup by putting a `RoleService` element inside the <xref:System.Web.UI.ScriptManager> control, as shown in the following example.  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <RoleService Path=\"MyRoleService.asmx\" LoadRoles=\"true\" />  \n</asp:ScriptManager>  \n```  \n  \n You can also programmatically set the <xref:System.Web.UI.RoleServiceManager.Path%2A> property to use a custom role Web service."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.RoleServiceManager.#ctor
  commentId: M:System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Initializes a new instance of the <xref href="System.Web.UI.RoleServiceManager"></xref> class.
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  commentId: P:System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.
  remarks: "If the <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property is set to `true`, the list of roles is retrieved by the <xref:System.Web.UI.RoleServiceManager> class by using the <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> method. The list is then serialized into the page markup.  \n  \n> [!NOTE]\n>  When <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `true`, all the roles that the current authenticated user belongs to are sent to the browser. Because users can potentially see the role information, this can be a security issue.  \n  \n The <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is set to `true` for a proxy instance, the list of roles is retrieved and added to the page. If <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> is `false`, the roles are not added to the page markup. In that case, you can use the  method to store role information in memory in the browser."
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the list of roles must be retrieved; otherwise, `false`. The default is `false`.'
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.RoleServiceManager.Path
  commentId: P:System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Gets or sets the path of the role service.
  remarks: "If the <xref:System.Web.UI.RoleServiceManager.Path%2A> property is not set, the return value is <xref:System.String?displayProperty=fullName>. In that case, ASP.NET uses the built-in authentication Web service that corresponds to the following internal default path: ~/RolesService.svc. The same behavior occurs if you set <xref:System.Web.UI.RoleServiceManager.Path%2A> to an empty string or to `null`.  \n  \n <xref:System.Web.UI.RoleServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.RoleServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following conditions are true:  \n  \n-   If there are multiple proxy objects in the control hierarchy, <xref:System.Web.UI.RoleServiceManager.Path%2A> does not have to be set for each proxy instance.  \n  \n-   If <xref:System.Web.UI.RoleServiceManager.Path%2A> is explicitly set for a proxy object, the value must be the same for all other proxy objects that this property is set for. If you set different paths for different proxy objects in the control hierarchy, an <xref:System.ArgumentException> exception is thrown."
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: The path of the custom role Web service.
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: More than one unique path was set in the control hierarchy.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
  fullName: RoleServiceManager.RoleServiceManager
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: RoleServiceManager.LoadRoles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: RoleServiceManager.Path
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/RoleServiceManager.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
