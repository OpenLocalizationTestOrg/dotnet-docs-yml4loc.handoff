{"nodes":[{"content":"Registers a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> in a <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> or set of clouds.","nodes":[{"pos":[0,156],"content":"Registers a <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> in a <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;&lt;/xref&gt;</ph> or set of clouds.","source":"Registers a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> in a <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> or set of clouds."}],"pos":[1941,2098],"yaml":true},{"content":"Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.  \n  \n It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name. In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud. However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.","nodes":[{"pos":[0,144],"content":"Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.","nodes":[{"content":"Registration creates (or updates) all the information that is associated with a <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> in a peer cloud or clouds.","pos":[0,144],"source":"Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds."}]},{"pos":[151,565],"content":"It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name. In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud. However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.","nodes":[{"content":"It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name. In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud. However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.","pos":[0,414],"nodes":[{"content":"It is possible to have multiple <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objects for the same peer name.","pos":[0,113],"source":"It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name."},{"content":"In such a case, if the peer name is secured, each instance represents <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> in a different cloud.","pos":[114,255],"source":" In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud."},{"content":"However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.","pos":[256,414]}]}]}],"pos":[2109,2679],"yaml":true,"extradata":"MT"},{"content":"Initializes a new default instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new default instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new default instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class."}],"pos":[4139,4252],"yaml":true},{"content":"Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>. It does not perform peer name registration during construction.  \n  \n After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.","nodes":[{"pos":[0,153],"content":"Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>. It does not perform peer name registration during construction.","nodes":[{"content":"Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>. It does not perform peer name registration during construction.","pos":[0,153],"nodes":[{"content":"Returns a new default instance of type <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>.","pos":[0,89],"source":"Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>."},{"content":"It does not perform peer name registration during construction.","pos":[90,153]}]}]},{"pos":[160,416],"content":"After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.","nodes":[{"content":"After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>.","pos":[0,256],"source":"After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>."}]}],"pos":[4263,4684],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class with the specified name and port number.","nodes":[{"pos":[0,144],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> class with the specified name and port number.","source":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class with the specified name and port number."}],"pos":[5949,6094],"yaml":true},{"content":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.  If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.  \n  \n If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.  \n  \n This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration. After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.","nodes":[{"pos":[0,395],"content":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.  If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.","nodes":[{"content":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.  If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.","pos":[0,395],"nodes":[{"content":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.","pos":[0,198]},{"content":"If the object is constructed successfully, the specified <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> are populated.","pos":[200,395],"source":"  If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated."}]}]},{"pos":[402,626],"content":"If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.","nodes":[{"content":"If the peer name is secured and was previously registered in a <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> the peer is currently participating in, an <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.","pos":[0,224],"source":"If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown."}]},{"pos":[633,976],"content":"This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration. After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.","nodes":[{"content":"This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration. After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.","pos":[0,343],"nodes":[{"content":"This constructor only creates a <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance; it does not perform the registration.","pos":[0,129],"source":"This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration."},{"content":"After instantiating the registration object with this constructor and populating its fields, the application must call <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> to perform the actual registration.","pos":[130,343],"source":" After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration."}]}]}],"pos":[6105,7088],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object to register.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> object to register.","source":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object to register."}],"pos":[7281,7357],"yaml":true},{"content":"Integer value that specifies the port number to register.","nodes":[{"pos":[0,57],"content":"Integer value that specifies the port number to register.","nodes":[{"content":"Integer value that specifies the port number to register.","pos":[0,57]}]}],"pos":[7416,7474],"yaml":true},{"content":"The <code>name</code> parameter cannot be `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be <ph id=\"ph2\">`null`</ph>.","source":"The <code>name</code> parameter cannot be `null`."}],"pos":[7652,7702],"yaml":true},{"content":"The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","nodes":[{"pos":[0,127],"content":"The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","nodes":[{"content":"The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","pos":[0,127],"nodes":[{"content":"The specified port number is less than zero.","pos":[0,44]},{"content":"Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","pos":[46,127]}]}]}],"pos":[7816,7944],"yaml":true},{"content":"-   The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified has already been registered from this host.  \n  \n-   The remote peer does not own the <xref href=\"System.Net.PeerToPeer.PeerName.Authority\"></xref> for the supplied <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object.","nodes":[{"pos":[4,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> specified has already been registered from this host.","source":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified has already been registered from this host."},{"pos":[123,294],"content":"The remote peer does not own the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName.Authority\"&gt;&lt;/xref&gt;</ph> for the supplied <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> object.","source":"The remote peer does not own the <xref href=\"System.Net.PeerToPeer.PeerName.Authority\"></xref> for the supplied <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object."}],"pos":[8072,8377],"yaml":true},{"content":"Initializes a new serializable <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.","nodes":[{"pos":[0,102],"content":"Initializes a new serializable <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new serializable <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object."}],"pos":[9696,9799],"yaml":true},{"content":"Reference to the object that holds the data needed to deserialize this instance.","nodes":[{"pos":[0,80],"content":"Reference to the object that holds the data needed to deserialize this instance.","nodes":[{"content":"Reference to the object that holds the data needed to deserialize this instance.","pos":[0,80]}]}],"pos":[10072,10153],"yaml":true},{"content":"Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.","nodes":[{"pos":[0,114],"content":"Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.","nodes":[{"content":"Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.","pos":[0,114],"nodes":[{"content":"Context that provides the means for deserializing the data.","pos":[0,59]},{"content":"Also referred to as the source of the serialized data.","pos":[60,114]}]}]}],"pos":[10248,10363],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class with the specified peer name, port number, and <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>.","nodes":[{"pos":[0,200],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> class with the specified peer name, port number, and <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class with the specified peer name, port number, and <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>."}],"pos":[11659,11860],"yaml":true},{"content":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  \n  \n If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  \n  \n After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.","nodes":[{"pos":[0,491],"content":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.","nodes":[{"content":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.","pos":[0,491],"nodes":[{"content":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.","pos":[0,214],"source":"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>."},{"content":"If the object is constructed successfully, the properties are populated with the specified <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.","pos":[216,491],"source":"  If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>."}]}]},{"pos":[498,800],"content":"If the cloud parameter is <ph id=\"ph1\">`null`</ph>, the name is registered using the <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id=\"ph3\">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.","source":"If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>."},{"pos":[807,967],"content":"After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.","nodes":[{"content":"After instantiation, the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method must be called to register the <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.","pos":[0,160],"source":"After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>."}]}],"pos":[11871,12845],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object to register.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> object to register.","source":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object to register."}],"pos":[13073,13149],"yaml":true},{"content":"Integer value that specifies the port number to register.","nodes":[{"pos":[0,57],"content":"Integer value that specifies the port number to register.","nodes":[{"content":"Integer value that specifies the port number to register.","pos":[0,57]}]}],"pos":[13208,13266],"yaml":true},{"content":"<xref href=\"System.Net.PeerToPeer.Cloud\"></xref> in which to register the peer name.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;&lt;/xref&gt;</ph> in which to register the peer name.","source":"<xref href=\"System.Net.PeerToPeer.Cloud\"></xref> in which to register the peer name."}],"pos":[13341,13426],"yaml":true},{"content":"The <code>name</code> parameter cannot be `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be <ph id=\"ph2\">`null`</ph>.","source":"The <code>name</code> parameter cannot be `null`."}],"pos":[13604,13654],"yaml":true},{"content":"The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","nodes":[{"pos":[0,127],"content":"The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","nodes":[{"content":"The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","pos":[0,127],"nodes":[{"content":"The specified port number is less than zero.","pos":[0,44]},{"content":"Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","pos":[46,127]}]}]}],"pos":[13768,13896],"yaml":true},{"content":"-   The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified has already been registered from this host.  \n  \n-   The remote peer does not own the <xref href=\"System.Net.PeerToPeer.PeerName.Authority\"></xref> for the supplied <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object.","nodes":[{"pos":[4,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> specified has already been registered from this host.","source":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified has already been registered from this host."},{"pos":[123,294],"content":"The remote peer does not own the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName.Authority\"&gt;&lt;/xref&gt;</ph> for the supplied <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> object.","source":"The remote peer does not own the <xref href=\"System.Net.PeerToPeer.PeerName.Authority\"></xref> for the supplied <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object."}],"pos":[14024,14329],"yaml":true},{"content":"Gets or sets information in a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref> into which this <xref href=\"System.Net.PeerToPeer.PeerNameRecord.PeerName\"></xref> object will be registered.","nodes":[{"pos":[0,209],"content":"Gets or sets information in a <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"&gt;&lt;/xref&gt;</ph> into which this <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRecord.PeerName\"&gt;&lt;/xref&gt;</ph> object will be registered.","source":"Gets or sets information in a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref> into which this <xref href=\"System.Net.PeerToPeer.PeerNameRecord.PeerName\"></xref> object will be registered."}],"pos":[15205,15415],"yaml":true},{"content":"An object of type <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> that specifies the peer cloud for which this registration is defined. This property is set to `null` by default.","nodes":[{"pos":[0,179],"content":"An object of type <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> that specifies the peer cloud for which this registration is defined. This property is set to `null` by default.","nodes":[{"content":"An object of type <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;&lt;/xref&gt;</ph> that specifies the peer cloud for which this registration is defined.","pos":[0,136],"source":"An object of type <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> that specifies the peer cloud for which this registration is defined."},{"content":"This property is set to <ph id=\"ph1\">`null`</ph> by default.","pos":[137,179],"source":" This property is set to `null` by default."}]}],"pos":[15564,15744],"yaml":true},{"content":"Gets or sets additional information about the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object that will be registered with the <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>.","nodes":[{"pos":[0,187],"content":"Gets or sets additional information about the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> object that will be registered with the <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets additional information about the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object that will be registered with the <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>."}],"pos":[16711,16899],"yaml":true},{"content":"The comment that contains additional information about the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to associate with the <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>. This property is set to `null` by default.","nodes":[{"pos":[0,225],"content":"The comment that contains additional information about the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to associate with the <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>. This property is set to `null` by default.","nodes":[{"content":"The comment that contains additional information about the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> to associate with the <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;&lt;/xref&gt;</ph>.","pos":[0,182],"source":"The comment that contains additional information about the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to associate with the <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>."},{"content":"This property is set to <ph id=\"ph1\">`null`</ph> by default.","pos":[183,225],"source":" This property is set to `null` by default."}]}],"pos":[17015,17241],"yaml":true},{"content":"The specified string value is greater than 39 Unicode characters.","nodes":[{"pos":[0,65],"content":"The specified string value is greater than 39 Unicode characters.","nodes":[{"content":"The specified string value is greater than 39 Unicode characters.","pos":[0,65]}]}],"pos":[17447,17513],"yaml":true},{"content":"Gets or sets application-defined binary data for the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.","nodes":[{"pos":[0,124],"content":"Gets or sets application-defined binary data for the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets application-defined binary data for the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object."}],"pos":[18383,18508],"yaml":true},{"content":"The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.","nodes":[{"pos":[0,116],"content":"The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.","nodes":[{"content":"The maximum amount of <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> that can be supplied is 4,096 bytes.","pos":[0,116],"source":"The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes."}]}],"pos":[18519,18636],"yaml":true,"extradata":"MT"},{"content":"An array of bytes that holds the binary data associated with the entry. This property is set to `null` by default.","nodes":[{"pos":[0,114],"content":"An array of bytes that holds the binary data associated with the entry. This property is set to `null` by default.","nodes":[{"content":"An array of bytes that holds the binary data associated with the entry.","pos":[0,71]},{"content":"This property is set to <ph id=\"ph1\">`null`</ph> by default.","pos":[72,114],"source":" This property is set to `null` by default."}]}],"pos":[18749,18864],"yaml":true},{"content":"The specified <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Data\"></xref> is greater than 4096 bytes.","nodes":[{"pos":[0,110],"content":"The specified <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Data\"&gt;&lt;/xref&gt;</ph> is greater than 4096 bytes.","source":"The specified <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Data\"></xref> is greater than 4096 bytes."}],"pos":[19053,19164],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.","nodes":[{"pos":[0,106],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object.","source":"Releases all resources used by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object."}],"pos":[20056,20163],"yaml":true},{"content":"Releases the unmanaged resources and optionally releases the managed resources used by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.","nodes":[{"pos":[0,162],"content":"Releases the unmanaged resources and optionally releases the managed resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object.","source":"Releases the unmanaged resources and optionally releases the managed resources used by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object."}],"pos":[21271,21434],"yaml":true},{"content":"`True` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`True`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`True` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[21588,21691],"yaml":true},{"content":"Gets the collection of network endpoints for which the associated peer name is registered.","nodes":[{"pos":[0,90],"content":"Gets the collection of network endpoints for which the associated peer name is registered.","nodes":[{"content":"Gets the collection of network endpoints for which the associated peer name is registered.","pos":[0,90]}]}],"pos":[22726,22817],"yaml":true},{"content":"In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.  For PNRP, an IP address and port value must be provided for each endpoint.  The maximum number of endpoints that can be provided is ten. Automatic address selection is used when this parameter is `null`.  \n  \n If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.  \n  \n When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different. Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.","nodes":[{"pos":[0,338],"content":"In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.  For PNRP, an IP address and port value must be provided for each endpoint.  The maximum number of endpoints that can be provided is ten. Automatic address selection is used when this parameter is `null`.","nodes":[{"content":"In the <ph id=\"ph1\">&lt;xref:System.Net&gt;</ph> namespace, an <ph id=\"ph2\">&lt;xref:System.Net.IPEndPoint&gt;</ph> represents a network endpoint as an IP address and a port number.","pos":[0,133],"source":"In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number."},{"content":"For PNRP, an IP address and port value must be provided for each endpoint.","pos":[135,209]},{"content":"The maximum number of endpoints that can be provided is ten.","pos":[211,271]},{"content":"Automatic address selection is used when this parameter is <ph id=\"ph1\">`null`</ph>.","pos":[272,338],"source":" Automatic address selection is used when this parameter is `null`."}]},{"pos":[345,666],"content":"If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.","nodes":[{"content":"If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.","pos":[0,321],"nodes":[{"content":"If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.","pos":[0,171]},{"content":"That is, the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.","pos":[173,321],"source":"  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected."}]}]},{"pos":[673,1215],"content":"When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different. Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.","nodes":[{"content":"When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different. Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.","pos":[0,542],"nodes":[{"content":"When a peer name is registered for more than one node, each <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> is distinct and the <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property defined on each registration instance will be different.","pos":[0,267],"source":"When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different."},{"content":"Also, when a <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> is registered into more than one <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>, each registration is distinct and the collection of endpoints will usually be different for each instance.","pos":[268,542],"source":" Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance."}]}]}],"pos":[22828,24050],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.PeerToPeer.PeerNameRecord.EndPointCollection\"></xref> object that contains the network endpoints for which the associated peer name is registered. Unless explicitly specified, the default value for all properties is `null` for reference types.","nodes":[{"pos":[0,269],"content":"An <xref href=\"System.Net.PeerToPeer.PeerNameRecord.EndPointCollection\"></xref> object that contains the network endpoints for which the associated peer name is registered. Unless explicitly specified, the default value for all properties is `null` for reference types.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRecord.EndPointCollection\"&gt;&lt;/xref&gt;</ph> object that contains the network endpoints for which the associated peer name is registered.","pos":[0,172],"source":"An <xref href=\"System.Net.PeerToPeer.PeerNameRecord.EndPointCollection\"></xref> object that contains the network endpoints for which the associated peer name is registered."},{"content":"Unless explicitly specified, the default value for all properties is <ph id=\"ph1\">`null`</ph> for reference types.","pos":[173,269],"source":" Unless explicitly specified, the default value for all properties is `null` for reference types."}]}],"pos":[24215,24485],"yaml":true},{"content":"Populates a serialization information object with the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance.","nodes":[{"pos":[0,156],"content":"Populates a serialization information object with the data needed to serialize the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> instance.","source":"Populates a serialization information object with the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance."}],"pos":[25892,26049],"yaml":true},{"content":"Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.","nodes":[{"pos":[0,117],"content":"Holds the serialized data associated with the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object.","source":"Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object."}],"pos":[26328,26446],"yaml":true},{"content":"Contains destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.","nodes":[{"pos":[0,138],"content":"Contains destination for the serialized stream associated with the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object.","source":"Contains destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object."}],"pos":[26541,26680],"yaml":true},{"content":"Gets or sets whether the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is registered with a specific <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> on a host.","nodes":[{"pos":[0,223],"content":"Gets or sets whether the peer name specified in the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property is registered with a specific <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;&lt;/xref&gt;</ph> on a host.","source":"Gets or sets whether the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is registered with a specific <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> on a host."}],"pos":[27689,27913],"yaml":true},{"content":"If `true`, the peer name is registered with a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref> for the peer host. If `false`, then the registration process can be started with <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"></xref>.","nodes":[{"pos":[0,267],"content":"If `true`, the peer name is registered with a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref> for the peer host. If `false`, then the registration process can be started with <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"></xref>.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the peer name is registered with a <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"&gt;&lt;/xref&gt;</ph> for the peer host.","pos":[0,134],"source":"If `true`, the peer name is registered with a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref> for the peer host."},{"content":"If <ph id=\"ph1\">`false`</ph>, then the registration process can be started with <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"&gt;&lt;/xref&gt;</ph>.","pos":[135,267],"source":" If `false`, then the registration process can be started with <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"></xref>."}]}],"pos":[28042,28310],"yaml":true},{"content":"An object that has been disposed already cannot be registered.","nodes":[{"pos":[0,62],"content":"An object that has been disposed already cannot be registered.","nodes":[{"content":"An object that has been disposed already cannot be registered.","pos":[0,62]}]}],"pos":[28499,28562],"yaml":true},{"content":"Gets or sets the peer name to register with a peer cloud.","nodes":[{"pos":[0,57],"content":"Gets or sets the peer name to register with a peer cloud.","nodes":[{"content":"Gets or sets the peer name to register with a peer cloud.","pos":[0,57]}]}],"pos":[29456,29514],"yaml":true},{"content":"A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct. The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different. Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct. The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.","nodes":[{"pos":[0,553],"content":"A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct. The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different. Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct. The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.","nodes":[{"content":"A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct. The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different. Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct. The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.","pos":[0,553],"nodes":[{"content":"A peer name can be registered for more than one node; each <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance is distinct.","pos":[0,130],"source":"A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property associated with each corresponding <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> instance is different.","pos":[131,311],"source":" The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different."},{"content":"Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.","pos":[312,452]},{"content":"The peer name's <ph id=\"ph1\">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> will be different in each of these instances.","pos":[453,553],"source":" The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances."}]}]}],"pos":[29525,30079],"yaml":true,"extradata":"MT"},{"content":"An object of type <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> that contains values associated with this <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object. Unless explicitly specified, the default value for all properties is `null` for reference types.","nodes":[{"pos":[0,280],"content":"An object of type <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> that contains values associated with this <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object. Unless explicitly specified, the default value for all properties is `null` for reference types.","nodes":[{"content":"An object of type <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> that contains values associated with this <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,183],"source":"An object of type <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> that contains values associated with this <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object."},{"content":"Unless explicitly specified, the default value for all properties is <ph id=\"ph1\">`null`</ph> for reference types.","pos":[184,280],"source":" Unless explicitly specified, the default value for all properties is `null` for reference types."}]}],"pos":[30237,30518],"yaml":true},{"content":"Gets or sets the [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.","nodes":[{"pos":[0,197],"content":"Gets or sets the <bpt id=\"p1\">[</bpt>TCP/IP<ept id=\"p1\">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> port number used by the peer being registered into the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object."}],"pos":[31470,31668],"yaml":true},{"content":"The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.","nodes":[{"pos":[0,135],"content":"The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.","nodes":[{"content":"The default port is used by the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method only when no endpoints are specified.","pos":[0,135],"source":"The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified."}]}],"pos":[31679,31815],"yaml":true,"extradata":"MT"},{"content":"An integer value indicating the TCP port number of the <xref href=\"System.Net.IPEndPoint\"></xref>. Unless explicitly specified, the default value for this property is zero (0).","nodes":[{"pos":[0,176],"content":"An integer value indicating the TCP port number of the <xref href=\"System.Net.IPEndPoint\"></xref>. Unless explicitly specified, the default value for this property is zero (0).","nodes":[{"content":"An integer value indicating the TCP port number of the <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph>.","pos":[0,98],"source":"An integer value indicating the TCP port number of the <xref href=\"System.Net.IPEndPoint\"></xref>."},{"content":"Unless explicitly specified, the default value for this property is zero (0).","pos":[99,176]}]}],"pos":[31924,32101],"yaml":true},{"content":"The specified port value is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","nodes":[{"pos":[0,126],"content":"The specified port value is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","nodes":[{"content":"The specified port value is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","pos":[0,126],"nodes":[{"content":"The specified port value is less than zero.","pos":[0,43]},{"content":"Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).","pos":[45,126]}]}]}],"pos":[32290,32417],"yaml":true},{"content":"Registers the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> into the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref>. If no <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\"></xref> is specified, automatic address selection is used with the port value specified by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Port\"></xref> property.","nodes":[{"pos":[0,421],"content":"Registers the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> into the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref>. If no <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\"></xref> is specified, automatic address selection is used with the port value specified by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Port\"></xref> property.","nodes":[{"content":"Registers the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"&gt;&lt;/xref&gt;</ph>.","pos":[0,166],"source":"Registers the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> into the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref>."},{"content":"If no <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\"&gt;&lt;/xref&gt;</ph> is specified, automatic address selection is used with the port value specified by the <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Port\"&gt;&lt;/xref&gt;</ph> property.","pos":[167,421],"source":" If no <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\"></xref> is specified, automatic address selection is used with the port value specified by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Port\"></xref> property."}]}],"pos":[33297,33719],"yaml":true},{"content":"The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor. The default port is used by this method only when no endpoints are specified.  \n  \n If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  \n  \n After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.  \n  \n To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.","nodes":[{"pos":[0,322],"content":"The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor. The default port is used by this method only when no endpoints are specified.","nodes":[{"content":"The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor. The default port is used by this method only when no endpoints are specified.","pos":[0,322],"nodes":[{"content":"The method registers the peer name specified in the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> property with all source addresses and the <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> specified in the constructor.","pos":[0,244],"source":"The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor."},{"content":"The default port is used by this method only when no endpoints are specified.","pos":[245,322]}]}]},{"pos":[329,775],"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> property is <ph id=\"ph2\">`null`</ph>, this method registers the peer name specified in the <ph id=\"ph3\">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property using the <ph id=\"ph4\">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> field, which initializes default values for the <ph id=\"ph5\">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id=\"ph7\">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.","source":"If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>."},{"pos":[782,953],"content":"After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.","nodes":[{"content":"After a <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object has been started, the <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is used to stop it.","pos":[0,171],"source":"After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it."}]},{"pos":[960,1070],"content":"To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.","nodes":[{"content":"To update a registration, the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> method must be used.","pos":[0,110],"source":"To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used."}]}],"pos":[33730,34809],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is set to `null`.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is set to `null`."}],"pos":[35393,35497],"yaml":true},{"content":"This object had Dispose() called on it previously.","nodes":[{"pos":[0,50],"content":"This object had Dispose() called on it previously.","nodes":[{"content":"This object had Dispose() called on it previously.","pos":[0,50]}]}],"pos":[35603,35654],"yaml":true},{"content":"-   The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified has already been registered. The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Update\"></xref> method must be used to update a registration.  \n  \n-   The remote peer does not own the <xref href=\"System.Net.PeerToPeer.PeerName.Authority\"></xref> for the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified.  \n  \n-   Either the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> or the <xref href=\"System.Net.PeerToPeer.PeerNameRecord.Data\"></xref> is not specified; at least one needs to be provided.  \n  \n-   The message or data elements are invalid. Or, <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\"></xref> is not set and no data blob or <xref href=\"System.Net.IPEndPoint\"></xref> is specified.","nodes":[{"pos":[4,219],"content":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified has already been registered. The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Update\"></xref> method must be used to update a registration.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> specified has already been registered.","pos":[0,94],"source":"The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified has already been registered."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Update\"&gt;&lt;/xref&gt;</ph> method must be used to update a registration.","pos":[95,215],"source":" The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Update\"></xref> method must be used to update a registration."}]},{"pos":[229,394],"content":"The remote peer does not own the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName.Authority\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> specified.","source":"The remote peer does not own the <xref href=\"System.Net.PeerToPeer.PeerName.Authority\"></xref> for the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> specified."},{"pos":[404,589],"content":"Either the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> or the <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRecord.Data\"&gt;&lt;/xref&gt;</ph> is not specified; at least one needs to be provided.","source":"Either the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> or the <xref href=\"System.Net.PeerToPeer.PeerNameRecord.Data\"></xref> is not specified; at least one needs to be provided."},{"pos":[599,821],"content":"The message or data elements are invalid. Or, <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\"></xref> is not set and no data blob or <xref href=\"System.Net.IPEndPoint\"></xref> is specified.","nodes":[{"content":"The message or data elements are invalid.","pos":[0,41]},{"content":"Or, <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\"&gt;&lt;/xref&gt;</ph> is not set and no data blob or <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph> is specified.","pos":[42,222],"source":" Or, <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\"></xref> is not set and no data blob or <xref href=\"System.Net.IPEndPoint\"></xref> is specified."}]}],"pos":[35782,36628],"yaml":true},{"content":"Unregisters the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property from all the clouds in which it was registered.","nodes":[{"pos":[0,172],"content":"Unregisters the peer name specified in the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property from all the clouds in which it was registered.","source":"Unregisters the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property from all the clouds in which it was registered."}],"pos":[37568,37741],"yaml":true},{"content":"After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor. In this state, all of its properties are assumed to have no value. The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.  \n  \n It is possible to have multiple registration objects for the same peer name.  In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.  However, if the peer name is not secured, it can be registered in the same cloud multiple times.  \n  \n If this instance is already stopped, calling this method has no effect.","nodes":[{"pos":[0,327],"content":"After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor. In this state, all of its properties are assumed to have no value. The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.","nodes":[{"content":"After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor. In this state, all of its properties are assumed to have no value. The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.","pos":[0,327],"nodes":[{"content":"After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.","pos":[0,163]},{"content":"In this state, all of its properties are assumed to have no value.","pos":[164,230]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method may be used to restart it.","pos":[231,327],"source":" The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it."}]}]},{"pos":[334,625],"content":"It is possible to have multiple registration objects for the same peer name.  In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.  However, if the peer name is not secured, it can be registered in the same cloud multiple times.","nodes":[{"content":"It is possible to have multiple registration objects for the same peer name.  In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.  However, if the peer name is not secured, it can be registered in the same cloud multiple times.","pos":[0,291],"nodes":[{"content":"It is possible to have multiple registration objects for the same peer name.","pos":[0,76]},{"content":"In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.","pos":[78,193]},{"content":"However, if the peer name is not secured, it can be registered in the same cloud multiple times.","pos":[195,291]}]}]},{"pos":[632,703],"content":"If this instance is already stopped, calling this method has no effect.","nodes":[{"content":"If this instance is already stopped, calling this method has no effect.","pos":[0,71]}]}],"pos":[37752,38462],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has not yet been registered. This occurs when a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object is constructed using the empty constructor. The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property must be populated in this instance prior to calling <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"></xref>.","nodes":[{"pos":[0,457],"content":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has not yet been registered. This occurs when a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object is constructed using the empty constructor. The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property must be populated in this instance prior to calling <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"></xref>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property has not yet been registered.","pos":[0,114],"source":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has not yet been registered."},{"content":"This occurs when a <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> object is constructed using the empty constructor.","pos":[115,248],"source":" This occurs when a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object is constructed using the empty constructor."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property must be populated in this instance prior to calling <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"&gt;&lt;/xref&gt;</ph>.","pos":[249,457],"source":" The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property must be populated in this instance prior to calling <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"></xref>."}]}],"pos":[38761,39219],"yaml":true},{"content":"This object had Dispose() called on it previously.","nodes":[{"pos":[0,50],"content":"This object had Dispose() called on it previously.","nodes":[{"content":"This object had Dispose() called on it previously.","pos":[0,50]}]}],"pos":[39325,39376],"yaml":true},{"content":"Updates the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> for a node registered with a specific <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>. Update is performed using the information specified in the properties.","nodes":[{"pos":[0,234],"content":"Updates the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> for a node registered with a specific <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>. Update is performed using the information specified in the properties.","nodes":[{"content":"Updates the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> for a node registered with a specific <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.Cloud\"&gt;&lt;/xref&gt;</ph>.","pos":[0,163],"source":"Updates the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> for a node registered with a specific <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>."},{"content":"Update is performed using the information specified in the properties.","pos":[164,234]}]}],"pos":[40328,40563],"yaml":true},{"content":"All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.  The new data is not combined with the existing registration.  To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.  \n  \n After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.  All other fields in the record may be updated.","nodes":[{"pos":[0,326],"content":"All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.  The new data is not combined with the existing registration.  To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.","nodes":[{"content":"All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.  The new data is not combined with the existing registration.  To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.","pos":[0,326],"nodes":[{"content":"All information registered in cloud(s) for this <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> prior to the call is completely discarded.","pos":[0,128],"source":"All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded."},{"content":"The new data is not combined with the existing registration.","pos":[130,190]},{"content":"To update a <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, first update the properties on this instance and then call this method.","pos":[192,326],"source":"  To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method."}]}]},{"pos":[333,535],"content":"After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.  All other fields in the record may be updated.","nodes":[{"content":"After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.  All other fields in the record may be updated.","pos":[0,202],"nodes":[{"content":"After a <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> is registered, the <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property cannot be updated.","pos":[0,154],"source":"After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated."},{"content":"All other fields in the record may be updated.","pos":[156,202]}]}]}],"pos":[40574,41114],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is set to `null`.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is set to `null`."}],"pos":[41417,41521],"yaml":true},{"content":"-   The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has not yet been registered. The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Update\"></xref> method cannot be called until the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is registered in one or more clouds.  \n  \n-   The peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has changed since the corresponding <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> was registered.","nodes":[{"pos":[4,373],"content":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has not yet been registered. The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Update\"></xref> method cannot be called until the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is registered in one or more clouds.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property has not yet been registered.","pos":[0,114],"source":"The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has not yet been registered."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Update\"&gt;&lt;/xref&gt;</ph> method cannot be called until the peer name specified in the <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property is registered in one or more clouds.","pos":[115,369],"source":" The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Update\"></xref> method cannot be called until the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is registered in one or more clouds."}]},{"pos":[383,605],"content":"The peer name specified in the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"&gt;&lt;/xref&gt;</ph> property has changed since the corresponding <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRecord\"&gt;&lt;/xref&gt;</ph> was registered.","source":"The peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has changed since the corresponding <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> was registered."}],"pos":[41627,42247],"yaml":true},{"content":"An object that has been disposed cannot be registered.","nodes":[{"pos":[0,54],"content":"An object that has been disposed cannot be registered.","nodes":[{"content":"An object that has been disposed cannot be registered.","pos":[0,54]}]}],"pos":[42375,42430],"yaml":true},{"content":"A <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> property is set to `null`.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRecord\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> property is set to `null`."}],"pos":[42532,42619],"yaml":true},{"content":"Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref>.","nodes":[{"pos":[0,181],"content":"Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref>."}],"pos":[43675,43857],"yaml":true},{"content":"When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.  If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  \n  \n When set to `false`, auto selection as described above is not performed.  This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property). No endpoints are associated with the name.  \n  \n If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.  \n  \n Updating this property after peer name registration has started has no effect.","nodes":[{"pos":[0,424],"content":"When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.  If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.","nodes":[{"content":"When auto endpoint selection is used (this property is set to <ph id=\"ph1\">`true`</ph>) with no endpoint information specified prior to the start of a <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.","pos":[0,299],"source":"When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds."},{"content":"If the port is not specified, auto selection chooses zero as the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>.","pos":[301,424],"source":"  If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>."}]},{"pos":[431,715],"content":"When set to `false`, auto selection as described above is not performed.  This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property). No endpoints are associated with the name.","nodes":[{"content":"When set to <ph id=\"ph1\">`false`</ph>, auto selection as described above is not performed.","pos":[0,72],"source":"When set to `false`, auto selection as described above is not performed."},{"content":"This enables the registration process to publish a peer name along with a data blob (as specified by the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> property).","pos":[74,241],"source":"  This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property)."},{"content":"No endpoints are associated with the name.","pos":[242,284]}]},{"pos":[722,1080],"content":"If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.","nodes":[{"content":"If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.","pos":[0,358],"nodes":[{"content":"If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> object was registered.","pos":[0,208],"source":"If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered."},{"content":"That is, the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.","pos":[210,358],"source":"  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected."}]}]},{"pos":[1087,1165],"content":"Updating this property after peer name registration has started has no effect.","nodes":[{"content":"Updating this property after peer name registration has started has no effect.","pos":[0,78]}]}],"pos":[43868,45042],"yaml":true,"extradata":"MT"},{"content":"`True` if automatic endpoint selection is to be used; `false` if some other method will be used to determine an endpoint. The default value is `true`.","nodes":[{"pos":[0,150],"content":"`True` if automatic endpoint selection is to be used; `false` if some other method will be used to determine an endpoint. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`True`</ph> if automatic endpoint selection is to be used; <ph id=\"ph2\">`false`</ph> if some other method will be used to determine an endpoint.","pos":[0,121],"source":"`True` if automatic endpoint selection is to be used; `false` if some other method will be used to determine an endpoint."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[122,150],"source":" The default value is `true`."}]}],"pos":[45174,45327],"yaml":true},{"content":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance.","nodes":[{"pos":[0,207],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> interface and returns the data needed to serialize the <ph id=\"ph2\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> instance.","source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance."}],"pos":[46925,47133],"yaml":true},{"content":"Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance.","nodes":[{"pos":[0,119],"content":"Holds the serialized data associated with the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> instance.","source":"Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance."}],"pos":[47459,47579],"yaml":true},{"content":"Contains the destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance.","nodes":[{"pos":[0,144],"content":"Contains the destination for the serialized stream associated with the <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"&gt;&lt;/xref&gt;</ph> instance.","source":"Contains the destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance."}],"pos":[47674,47819],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.PeerToPeer.PeerNameRegistration\n  commentId: T:System.Net.PeerToPeer.PeerNameRegistration\n  id: PeerNameRegistration\n  children:\n  - System.Net.PeerToPeer.PeerNameRegistration.#ctor\n  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)\n  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)\n  - System.Net.PeerToPeer.PeerNameRegistration.Cloud\n  - System.Net.PeerToPeer.PeerNameRegistration.Comment\n  - System.Net.PeerToPeer.PeerNameRegistration.Data\n  - System.Net.PeerToPeer.PeerNameRegistration.Dispose\n  - System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)\n  - System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\n  - System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Net.PeerToPeer.PeerNameRegistration.IsRegistered\n  - System.Net.PeerToPeer.PeerNameRegistration.PeerName\n  - System.Net.PeerToPeer.PeerNameRegistration.Port\n  - System.Net.PeerToPeer.PeerNameRegistration.Start\n  - System.Net.PeerToPeer.PeerNameRegistration.Stop\n  - System.Net.PeerToPeer.PeerNameRegistration.Update\n  - System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\n  - System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: PeerNameRegistration\n  nameWithType: PeerNameRegistration\n  fullName: System.Net.PeerToPeer.PeerNameRegistration\n  type: Class\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Registers a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> in a <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> or set of clouds.\n  remarks: \"Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.  \\n  \\n It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name. In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud. However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.\"\n  syntax:\n    content: 'public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.#ctor\n  id: '#ctor'\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: PeerNameRegistration()\n  nameWithType: PeerNameRegistration.PeerNameRegistration()\n  fullName: PeerNameRegistration.PeerNameRegistration()\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Initializes a new default instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class.\n  remarks: \"Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>. It does not perform peer name registration during construction.  \\n  \\n After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.\"\n  syntax:\n    content: public PeerNameRegistration ();\n    parameters: []\n  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)\n  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32)'\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: PeerNameRegistration(PeerName, Int32)\n  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName, Int32)\n  fullName: PeerNameRegistration.PeerNameRegistration(PeerName, Int32)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class with the specified name and port number.\n  remarks: \"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.  If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.  \\n  \\n If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.  \\n  \\n This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration. After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.\"\n  syntax:\n    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);\n    parameters:\n    - id: name\n      type: System.Net.PeerToPeer.PeerName\n      description: The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object to register.\n    - id: port\n      type: System.Int32\n      description: Integer value that specifies the port number to register.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter cannot be `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).\n  - type: System.Net.PeerToPeer.PeerToPeerException\n    commentId: T:System.Net.PeerToPeer.PeerToPeerException\n    description: \"-   The <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> specified has already been registered from this host.  \\n  \\n-   The remote peer does not own the <xref href=\\\"System.Net.PeerToPeer.PeerName.Authority\\\"></xref> for the supplied <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> object.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: PeerNameRegistration(SerializationInfo, StreamingContext)\n  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo, StreamingContext)\n  fullName: PeerNameRegistration.PeerNameRegistration(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Initializes a new serializable <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.\n  syntax:\n    content: protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Reference to the object that holds the data needed to deserialize this instance.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)\n  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)'\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: PeerNameRegistration(PeerName, Int32, Cloud)\n  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName, Int32, Cloud)\n  fullName: PeerNameRegistration.PeerNameRegistration(PeerName, Int32, Cloud)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Initializes a new instance of the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> class with the specified peer name, port number, and <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>.\n  remarks: \"Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  \\n  \\n If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  \\n  \\n After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.\"\n  syntax:\n    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);\n    parameters:\n    - id: name\n      type: System.Net.PeerToPeer.PeerName\n      description: The <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object to register.\n    - id: port\n      type: System.Int32\n      description: Integer value that specifies the port number to register.\n    - id: cloud\n      type: System.Net.PeerToPeer.Cloud\n      description: <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> in which to register the peer name.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter cannot be `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).\n  - type: System.Net.PeerToPeer.PeerToPeerException\n    commentId: T:System.Net.PeerToPeer.PeerToPeerException\n    description: \"-   The <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> specified has already been registered from this host.  \\n  \\n-   The remote peer does not own the <xref href=\\\"System.Net.PeerToPeer.PeerName.Authority\\\"></xref> for the supplied <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> object.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud\n  commentId: P:System.Net.PeerToPeer.PeerNameRegistration.Cloud\n  id: Cloud\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Cloud\n  nameWithType: PeerNameRegistration.Cloud\n  fullName: PeerNameRegistration.Cloud\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets or sets information in a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref> into which this <xref href=\"System.Net.PeerToPeer.PeerNameRecord.PeerName\"></xref> object will be registered.\n  syntax:\n    content: public System.Net.PeerToPeer.Cloud Cloud { get; set; }\n    return:\n      type: System.Net.PeerToPeer.Cloud\n      description: An object of type <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> that specifies the peer cloud for which this registration is defined. This property is set to `null` by default.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Cloud*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment\n  commentId: P:System.Net.PeerToPeer.PeerNameRegistration.Comment\n  id: Comment\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Comment\n  nameWithType: PeerNameRegistration.Comment\n  fullName: PeerNameRegistration.Comment\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets or sets additional information about the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> object that will be registered with the <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>.\n  syntax:\n    content: public string Comment { get; set; }\n    return:\n      type: System.String\n      description: The comment that contains additional information about the <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to associate with the <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>. This property is set to `null` by default.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Comment*\n  exceptions:\n  - type: System.Net.PeerToPeer.PeerToPeerException\n    commentId: T:System.Net.PeerToPeer.PeerToPeerException\n    description: The specified string value is greater than 39 Unicode characters.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Data\n  commentId: P:System.Net.PeerToPeer.PeerNameRegistration.Data\n  id: Data\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Data\n  nameWithType: PeerNameRegistration.Data\n  fullName: PeerNameRegistration.Data\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets or sets application-defined binary data for the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.\n  remarks: The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.\n  syntax:\n    content: public byte[] Data { get; set; }\n    return:\n      type: System.Byte[]\n      description: An array of bytes that holds the binary data associated with the entry. This property is set to `null` by default.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Data*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Data\"></xref> is greater than 4096 bytes.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.Dispose\n  id: Dispose\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: PeerNameRegistration.Dispose()\n  fullName: PeerNameRegistration.Dispose()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Releases all resources used by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: PeerNameRegistration.Dispose(Boolean)\n  fullName: PeerNameRegistration.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Releases the unmanaged resources and optionally releases the managed resources used by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`True` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\n  commentId: P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\n  id: EndPointCollection\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: EndPointCollection\n  nameWithType: PeerNameRegistration.EndPointCollection\n  fullName: PeerNameRegistration.EndPointCollection\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets the collection of network endpoints for which the associated peer name is registered.\n  remarks: \"In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.  For PNRP, an IP address and port value must be provided for each endpoint.  The maximum number of endpoints that can be provided is ten. Automatic address selection is used when this parameter is `null`.  \\n  \\n If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.  \\n  \\n When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different. Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.\"\n  syntax:\n    content: public System.Net.IPEndPointCollection EndPointCollection { get; }\n    return:\n      type: System.Net.IPEndPointCollection\n      description: An <xref href=\"System.Net.PeerToPeer.PeerNameRecord.EndPointCollection\"></xref> object that contains the network endpoints for which the associated peer name is registered. Unless explicitly specified, the default value for all properties is `null` for reference types.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: PeerNameRegistration.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Populates a serialization information object with the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance.\n  syntax:\n    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Contains destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered\n  id: IsRegistered\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: IsRegistered()\n  nameWithType: PeerNameRegistration.IsRegistered()\n  fullName: PeerNameRegistration.IsRegistered()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets or sets whether the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is registered with a specific <xref href=\"System.Net.PeerToPeer.Cloud\"></xref> on a host.\n  syntax:\n    content: public bool IsRegistered ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: If `true`, the peer name is registered with a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref> for the peer host. If `false`, then the registration process can be started with <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"></xref>.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: An object that has been disposed already cannot be registered.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName\n  commentId: P:System.Net.PeerToPeer.PeerNameRegistration.PeerName\n  id: PeerName\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: PeerName\n  nameWithType: PeerNameRegistration.PeerName\n  fullName: PeerNameRegistration.PeerName\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets or sets the peer name to register with a peer cloud.\n  remarks: A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct. The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different. Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct. The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.\n  syntax:\n    content: public System.Net.PeerToPeer.PeerName PeerName { get; set; }\n    return:\n      type: System.Net.PeerToPeer.PeerName\n      description: An object of type <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> that contains values associated with this <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object. Unless explicitly specified, the default value for all properties is `null` for reference types.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.PeerName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Port\n  commentId: P:System.Net.PeerToPeer.PeerNameRegistration.Port\n  id: Port\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Port\n  nameWithType: PeerNameRegistration.Port\n  fullName: PeerNameRegistration.Port\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets or sets the [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object.\n  remarks: The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.\n  syntax:\n    content: public int Port { get; set; }\n    return:\n      type: System.Int32\n      description: An integer value indicating the TCP port number of the <xref href=\"System.Net.IPEndPoint\"></xref>. Unless explicitly specified, the default value for this property is zero (0).\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Port*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The specified port value is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Start\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.Start\n  id: Start\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: PeerNameRegistration.Start()\n  fullName: PeerNameRegistration.Start()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Registers the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> into the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref>. If no <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\"></xref> is specified, automatic address selection is used with the port value specified by the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Port\"></xref> property.\n  remarks: \"The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor. The default port is used by this method only when no endpoints are specified.  \\n  \\n If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  \\n  \\n After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.  \\n  \\n To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.\"\n  example:\n  - \"The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.  \\n  \\n [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void Start ();\n    parameters: []\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Start*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is set to `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object had Dispose() called on it previously.\n  - type: System.Net.PeerToPeer.PeerToPeerException\n    commentId: T:System.Net.PeerToPeer.PeerToPeerException\n    description: \"-   The <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> specified has already been registered. The <xref href=\\\"System.Net.PeerToPeer.PeerNameRegistration.Update\\\"></xref> method must be used to update a registration.  \\n  \\n-   The remote peer does not own the <xref href=\\\"System.Net.PeerToPeer.PeerName.Authority\\\"></xref> for the <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> specified.  \\n  \\n-   Either the <xref href=\\\"System.Net.PeerToPeer.PeerName\\\"></xref> or the <xref href=\\\"System.Net.PeerToPeer.PeerNameRecord.Data\\\"></xref> is not specified; at least one needs to be provided.  \\n  \\n-   The message or data elements are invalid. Or, <xref href=\\\"System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\\\"></xref> is not set and no data blob or <xref href=\\\"System.Net.IPEndPoint\\\"></xref> is specified.\"\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.Stop\n  id: Stop\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: PeerNameRegistration.Stop()\n  fullName: PeerNameRegistration.Stop()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Unregisters the peer name specified in the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property from all the clouds in which it was registered.\n  remarks: \"After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor. In this state, all of its properties are assumed to have no value. The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.  \\n  \\n It is possible to have multiple registration objects for the same peer name.  In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.  However, if the peer name is not secured, it can be registered in the same cloud multiple times.  \\n  \\n If this instance is already stopped, calling this method has no effect.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void Stop ();\n    parameters: []\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Stop*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property has not yet been registered. This occurs when a <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> object is constructed using the empty constructor. The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property must be populated in this instance prior to calling <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Start\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object had Dispose() called on it previously.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Update\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.Update\n  id: Update\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: Update()\n  nameWithType: PeerNameRegistration.Update()\n  fullName: PeerNameRegistration.Update()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Updates the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> for a node registered with a specific <xref href=\"System.Net.PeerToPeer.Cloud\"></xref>. Update is performed using the information specified in the properties.\n  remarks: \"All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.  The new data is not combined with the existing registration.  To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.  \\n  \\n After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.  All other fields in the record may be updated.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void Update ();\n    parameters: []\n  overload: System.Net.PeerToPeer.PeerNameRegistration.Update*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\"></xref> property is set to `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"-   The <xref href=\\\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\\\"></xref> property has not yet been registered. The <xref href=\\\"System.Net.PeerToPeer.PeerNameRegistration.Update\\\"></xref> method cannot be called until the peer name specified in the <xref href=\\\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\\\"></xref> property is registered in one or more clouds.  \\n  \\n-   The peer name specified in the <xref href=\\\"System.Net.PeerToPeer.PeerNameRegistration.PeerName\\\"></xref> property has changed since the corresponding <xref href=\\\"System.Net.PeerToPeer.PeerNameRecord\\\"></xref> was registered.\"\n  - type: System.Net.PeerToPeer.PeerToPeerException\n    commentId: T:System.Net.PeerToPeer.PeerToPeerException\n    description: An object that has been disposed cannot be registered.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: A <xref href=\"System.Net.PeerToPeer.PeerNameRecord\"></xref> property is set to `null`.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\n  commentId: P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\n  id: UseAutoEndPointSelection\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: UseAutoEndPointSelection\n  nameWithType: PeerNameRegistration.UseAutoEndPointSelection\n  fullName: PeerNameRegistration.UseAutoEndPointSelection\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <xref href=\"System.Net.PeerToPeer.PeerNameRegistration.Cloud\"></xref>.\n  remarks: \"When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.  If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  \\n  \\n When set to `false`, auto selection as described above is not performed.  This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property). No endpoints are associated with the name.  \\n  \\n If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.  That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.  \\n  \\n Updating this property after peer name registration has started has no effect.\"\n  syntax:\n    content: public bool UseAutoEndPointSelection { get; set; }\n    return:\n      type: System.Boolean\n      description: '`True` if automatic endpoint selection is to be used; `false` if some other method will be used to determine an endpoint. The default value is `true`.'\n  overload: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: PeerNameRegistration.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: PeerNameRegistration.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and returns the data needed to serialize the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Holds the serialized data associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Contains the destination for the serialized stream associated with the <xref href=\"System.Net.PeerToPeer.PeerNameRegistration\"></xref> instance.\n  overload: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Net.PeerToPeer.PeerToPeerException\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: PeerToPeerException\n  nameWithType: PeerToPeerException\n  fullName: System.Net.PeerToPeer.PeerToPeerException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: PeerNameRegistration()\n  nameWithType: PeerNameRegistration.PeerNameRegistration()\n  fullName: PeerNameRegistration.PeerNameRegistration()\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: PeerNameRegistration(PeerName, Int32)\n  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName, Int32)\n  fullName: PeerNameRegistration.PeerNameRegistration(PeerName, Int32)\n- uid: System.Net.PeerToPeer.PeerName\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: PeerName\n  nameWithType: PeerName\n  fullName: System.Net.PeerToPeer.PeerName\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: PeerNameRegistration(SerializationInfo, StreamingContext)\n  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo, StreamingContext)\n  fullName: PeerNameRegistration.PeerNameRegistration(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: PeerNameRegistration(PeerName, Int32, Cloud)\n  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName, Int32, Cloud)\n  fullName: PeerNameRegistration.PeerNameRegistration(PeerName, Int32, Cloud)\n- uid: System.Net.PeerToPeer.Cloud\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: Cloud\n  nameWithType: Cloud\n  fullName: System.Net.PeerToPeer.Cloud\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Cloud\n  nameWithType: PeerNameRegistration.Cloud\n  fullName: PeerNameRegistration.Cloud\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Comment\n  nameWithType: PeerNameRegistration.Comment\n  fullName: PeerNameRegistration.Comment\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Data\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Data\n  nameWithType: PeerNameRegistration.Data\n  fullName: PeerNameRegistration.Data\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Dispose()\n  nameWithType: PeerNameRegistration.Dispose()\n  fullName: PeerNameRegistration.Dispose()\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: PeerNameRegistration.Dispose(Boolean)\n  fullName: PeerNameRegistration.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: EndPointCollection\n  nameWithType: PeerNameRegistration.EndPointCollection\n  fullName: PeerNameRegistration.EndPointCollection\n- uid: System.Net.IPEndPointCollection\n  parent: System.Net\n  isExternal: false\n  name: IPEndPointCollection\n  nameWithType: IPEndPointCollection\n  fullName: System.Net.IPEndPointCollection\n- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: PeerNameRegistration.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: IsRegistered()\n  nameWithType: PeerNameRegistration.IsRegistered()\n  fullName: PeerNameRegistration.IsRegistered()\n- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: PeerName\n  nameWithType: PeerNameRegistration.PeerName\n  fullName: PeerNameRegistration.PeerName\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Port\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Port\n  nameWithType: PeerNameRegistration.Port\n  fullName: PeerNameRegistration.Port\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Start\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Start()\n  nameWithType: PeerNameRegistration.Start()\n  fullName: PeerNameRegistration.Start()\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Stop()\n  nameWithType: PeerNameRegistration.Stop()\n  fullName: PeerNameRegistration.Stop()\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Update\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Update()\n  nameWithType: PeerNameRegistration.Update()\n  fullName: PeerNameRegistration.Update()\n- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: UseAutoEndPointSelection\n  nameWithType: PeerNameRegistration.UseAutoEndPointSelection\n  fullName: PeerNameRegistration.UseAutoEndPointSelection\n- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: PeerNameRegistration.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: PeerNameRegistration.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Dispose\n  nameWithType: PeerNameRegistration.Dispose\n  fullName: PeerNameRegistration.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: PeerNameRegistration\n  nameWithType: PeerNameRegistration.PeerNameRegistration\n  fullName: PeerNameRegistration.PeerNameRegistration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Cloud\n  nameWithType: PeerNameRegistration.Cloud\n  fullName: PeerNameRegistration.Cloud\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Comment\n  nameWithType: PeerNameRegistration.Comment\n  fullName: PeerNameRegistration.Comment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Data*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Data\n  nameWithType: PeerNameRegistration.Data\n  fullName: PeerNameRegistration.Data\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: EndPointCollection\n  nameWithType: PeerNameRegistration.EndPointCollection\n  fullName: PeerNameRegistration.EndPointCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: GetObjectData\n  nameWithType: PeerNameRegistration.GetObjectData\n  fullName: PeerNameRegistration.GetObjectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: IsRegistered\n  nameWithType: PeerNameRegistration.IsRegistered\n  fullName: PeerNameRegistration.IsRegistered\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: PeerName\n  nameWithType: PeerNameRegistration.PeerName\n  fullName: PeerNameRegistration.PeerName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Port*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Port\n  nameWithType: PeerNameRegistration.Port\n  fullName: PeerNameRegistration.Port\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Start*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Start\n  nameWithType: PeerNameRegistration.Start\n  fullName: PeerNameRegistration.Start\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Stop\n  nameWithType: PeerNameRegistration.Stop\n  fullName: PeerNameRegistration.Stop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.Update*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: Update\n  nameWithType: PeerNameRegistration.Update\n  fullName: PeerNameRegistration.Update\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: UseAutoEndPointSelection\n  nameWithType: PeerNameRegistration.UseAutoEndPointSelection\n  fullName: PeerNameRegistration.UseAutoEndPointSelection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Net.PeerToPeer.PeerNameRegistration\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameRegistration.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}