{"nodes":[{"content":"Interface for a container that supports random access iteration. Containers that implement random access iteration support the following operations: moving forward one position by calling <code>operator++</code>, moving backward one position by calling <code>operator--</code>, accessing an element by using <code>operator[]</code>, and accessing an element by using pointer arithmetic.","nodes":[{"pos":[0,386],"content":"Interface for a container that supports random access iteration. Containers that implement random access iteration support the following operations: moving forward one position by calling <code>operator++</code>, moving backward one position by calling <code>operator--</code>, accessing an element by using <code>operator[]</code>, and accessing an element by using pointer arithmetic.","nodes":[{"content":"Interface for a container that supports random access iteration.","pos":[0,64]},{"content":"Containers that implement random access iteration support the following operations: moving forward one position by calling <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">operator++</ph><ept id=\"p1\">&lt;/code&gt;</ept>, moving backward one position by calling <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">operator--</ph><ept id=\"p2\">&lt;/code&gt;</ept>, accessing an element by using <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">operator[]</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and accessing an element by using pointer arithmetic.","pos":[65,386],"source":" Containers that implement random access iteration support the following operations: moving forward one position by calling <code>operator++</code>, moving backward one position by calling <code>operator--</code>, accessing an element by using <code>operator[]</code>, and accessing an element by using pointer arithmetic."}]}],"pos":[688,1077],"yaml":true},{"content":"[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]","nodes":[],"pos":[1204,1262],"yaml":true},{"content":"Gets the element at the current bias of the container. The bias is the offset from the current element zero.","nodes":[{"pos":[0,108],"content":"Gets the element at the current bias of the container. The bias is the offset from the current element zero.","nodes":[{"content":"Gets the element at the current bias of the container. The bias is the offset from the current element zero.","pos":[0,108],"nodes":[{"content":"Gets the element at the current bias of the container.","pos":[0,54]},{"content":"The bias is the offset from the current element zero.","pos":[55,108]}]}]}],"pos":[2429,2538],"yaml":true},{"content":"The element at the given bias.","nodes":[{"pos":[0,30],"content":"The element at the given bias.","nodes":[{"content":"The element at the given bias.","pos":[0,30]}]}],"pos":[2722,2753],"yaml":true},{"content":"Determines if a given bias is valid for the container. The bias is the offset from the current element zero.","nodes":[{"pos":[0,108],"content":"Determines if a given bias is valid for the container. The bias is the offset from the current element zero.","nodes":[{"content":"Determines if a given bias is valid for the container. The bias is the offset from the current element zero.","pos":[0,108],"nodes":[{"content":"Determines if a given bias is valid for the container.","pos":[0,54]},{"content":"The bias is the offset from the current element zero.","pos":[55,108]}]}]}],"pos":[3922,4031],"yaml":true},{"content":"The current bias.","nodes":[{"pos":[0,17],"content":"The current bias.","nodes":[{"content":"The current bias.","pos":[0,17]}]}],"pos":[4162,4180],"yaml":true},{"content":"`true` if the given bias is valid for the container; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the given bias is valid for the container; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the given bias is valid for the container; otherwise, `false`."}],"pos":[4238,4313],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  commentId: T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  id: IRandomAccessContainer`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)\n  langs:\n  - csharp\n  name: IRandomAccessContainer<TValue>\n  nameWithType: IRandomAccessContainer<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>\n  type: Interface\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: 'Interface for a container that supports random access iteration. Containers that implement random access iteration support the following operations: moving forward one position by calling <code>operator++</code>, moving backward one position by calling <code>operator--</code>, accessing an element by using <code>operator[]</code>, and accessing an element by using pointer arithmetic.'\n  syntax:\n    content: public interface IRandomAccessContainer<TValue>\n    typeParameters:\n    - id: TValue\n      description: '[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]'\n  derivedClasses:\n  - Microsoft.VisualC.StlClr.IDeque`1\n  - Microsoft.VisualC.StlClr.IVector`1\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessContainer`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)\n  id: at_bias(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  langs:\n  - csharp\n  name: at_bias(Int32)\n  nameWithType: IRandomAccessContainer<TValue>.at_bias(Int32)\n  fullName: IRandomAccessContainer<TValue>.at_bias(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Gets the element at the current bias of the container. The bias is the offset from the current element zero.\n  syntax:\n    content: public TValue at_bias (int A_0);\n    parameters:\n    - id: A_0\n      type: System.Int32\n      description: ''\n    return:\n      type: TValue@\n      description: The element at the given bias.\n  overload: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessContainer`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)\n  id: valid_bias(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  langs:\n  - csharp\n  name: valid_bias(Int32)\n  nameWithType: IRandomAccessContainer<TValue>.valid_bias(Int32)\n  fullName: IRandomAccessContainer<TValue>.valid_bias(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Determines if a given bias is valid for the container. The bias is the offset from the current element zero.\n  syntax:\n    content: public bool valid_bias (int A_0);\n    parameters:\n    - id: A_0\n      type: System.Int32\n      description: The current bias.\n    return:\n      type: System.Boolean\n      description: '`true` if the given bias is valid for the container; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessContainer`1.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  isExternal: false\n  name: at_bias(Int32)\n  nameWithType: IRandomAccessContainer<TValue>.at_bias(Int32)\n  fullName: IRandomAccessContainer<TValue>.at_bias(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  isExternal: false\n  name: valid_bias(Int32)\n  nameWithType: IRandomAccessContainer<TValue>.valid_bias(Int32)\n  fullName: IRandomAccessContainer<TValue>.valid_bias(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias*\n  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  isExternal: false\n  name: at_bias\n  nameWithType: IRandomAccessContainer<TValue>.at_bias\n  fullName: IRandomAccessContainer<TValue>.at_bias\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessContainer`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias*\n  parent: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  isExternal: false\n  name: valid_bias\n  nameWithType: IRandomAccessContainer<TValue>.valid_bias\n  fullName: IRandomAccessContainer<TValue>.valid_bias\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/IRandomAccessContainer`1.xml\n"}