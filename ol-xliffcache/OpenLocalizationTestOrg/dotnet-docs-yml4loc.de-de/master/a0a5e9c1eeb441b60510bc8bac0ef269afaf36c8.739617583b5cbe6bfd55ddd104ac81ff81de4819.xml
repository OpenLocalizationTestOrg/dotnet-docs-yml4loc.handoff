{"nodes":[{"content":"The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.","nodes":[{"pos":[0,93],"content":"The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.","nodes":[{"content":"The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.","pos":[0,93]}]}],"pos":[946,1040],"yaml":true},{"content":"The common language runtime transforms well-known HRESULTs to .NET Framework exceptions, enabling COM objects to return meaningful error information to managed clients. The HRESULT to exception mapping also works in the other direction by returning specific HRESULTs to unmanaged clients. For mapping details, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).  \n  \n When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <xref:System.Runtime.InteropServices.COMException> class. This all-purpose exception exposes the same members as any exception, and inherits a public <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property that contains the HRESULT returned by the callee. If an error message is available to the runtime (obtained from the [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\\(v=vs.85\\).aspx) interface or the `Err` object in Visual Basic, or in some cases from the operating system), the message is returned to the caller. However, if the COM component developer fails to include an error message, the runtime returns the eight-digit HRESULT in place of a message string. Having an HRESULT allows the caller to determine the cause of the generic exception.  \n  \n## Handling a COMException exception  \n The following are some considerations for troubleshooting a <xref:System.Runtime.InteropServices.COMException> exception.  \n  \n Check the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property  \n When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.  The error message or the HRESULT value can help you determine the cause of the exception.  \n  \n For a list of HRESULT values, see [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137\\(v=vs.85\\).aspx).  \n  \n Late-bound arguments and Microsoft Office objects  \n When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects. The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor. If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT ). To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.  \n  \n Visual Studio and the hosting process  \n COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx). Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\\(v=vs.85\\).aspx) causes this exception to be thrown.  \n  \n In some cases, running Visual Studio as Administrator may resolve the issue. You can also [disable the hosting process](https://msdn.microsoft.com/library/ms185330.aspx).  \n  \n## Throwing a COMException exception  \n Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception. Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.","nodes":[{"pos":[0,416],"content":"The common language runtime transforms well-known HRESULTs to .NET Framework exceptions, enabling COM objects to return meaningful error information to managed clients. The HRESULT to exception mapping also works in the other direction by returning specific HRESULTs to unmanaged clients. For mapping details, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).","nodes":[{"content":"The common language runtime transforms well-known HRESULTs to .NET Framework exceptions, enabling COM objects to return meaningful error information to managed clients.","pos":[0,168]},{"content":"The HRESULT to exception mapping also works in the other direction by returning specific HRESULTs to unmanaged clients.","pos":[169,288]},{"content":"For mapping details, see <bpt id=\"p1\">[</bpt>How to: Map HRESULTs and Exceptions<ept id=\"p1\">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.","pos":[289,416],"source":" For mapping details, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)."}]},{"pos":[423,1362],"content":"When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <xref:System.Runtime.InteropServices.COMException> class. This all-purpose exception exposes the same members as any exception, and inherits a public <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property that contains the HRESULT returned by the callee. If an error message is available to the runtime (obtained from the [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\\(v=vs.85\\).aspx) interface or the `Err` object in Visual Basic, or in some cases from the operating system), the message is returned to the caller. However, if the COM component developer fails to include an error message, the runtime returns the eight-digit HRESULT in place of a message string. Having an HRESULT allows the caller to determine the cause of the generic exception.","nodes":[{"content":"When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> class.","pos":[0,197],"source":"When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <xref:System.Runtime.InteropServices.COMException> class."},{"content":"This all-purpose exception exposes the same members as any exception, and inherits a public <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A&gt;</ph> property that contains the HRESULT returned by the callee.","pos":[198,417],"source":" This all-purpose exception exposes the same members as any exception, and inherits a public <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property that contains the HRESULT returned by the callee."},{"content":"If an error message is available to the runtime (obtained from the <bpt id=\"p1\">[</bpt>IErrorInfo<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/ms723041\\(v=vs.85\\).aspx)</ept> interface or the <ph id=\"ph1\">`Err`</ph> object in Visual Basic, or in some cases from the operating system), the message is returned to the caller.","pos":[418,705],"source":" If an error message is available to the runtime (obtained from the [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\\(v=vs.85\\).aspx) interface or the `Err` object in Visual Basic, or in some cases from the operating system), the message is returned to the caller."},{"content":"However, if the COM component developer fails to include an error message, the runtime returns the eight-digit HRESULT in place of a message string.","pos":[706,854]},{"content":"Having an HRESULT allows the caller to determine the cause of the generic exception.","pos":[855,939]}]},{"pos":[1371,1404],"content":"Handling a COMException exception","linkify":"Handling a COMException exception","nodes":[{"content":"Handling a COMException exception","pos":[0,33]}]},{"pos":[1408,1529],"content":"The following are some considerations for troubleshooting a <xref:System.Runtime.InteropServices.COMException> exception.","nodes":[{"content":"The following are some considerations for troubleshooting a <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> exception.","pos":[0,121],"source":"The following are some considerations for troubleshooting a <xref:System.Runtime.InteropServices.COMException> exception."}]},{"pos":[1536,2030],"content":"Check the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property  \n When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.  The error message or the HRESULT value can help you determine the cause of the exception.","nodes":[{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A&gt;</ph> property","pos":[0,87],"source":"Check the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property"},{"content":"When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.  The error message or the HRESULT value can help you determine the cause of the exception.","pos":[91,494],"nodes":[{"content":"When the runtime encounters an unfamiliar HRESULT and throws a <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> exception,  the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A&gt;</ph> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.","pos":[0,312],"source":"When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value."},{"content":"The error message or the HRESULT value can help you determine the cause of the exception.","pos":[314,403]}]}]},{"pos":[2037,2172],"content":"For a list of HRESULT values, see <bpt id=\"p1\">[</bpt>Common HRESULT Values<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/aa378137\\(v=vs.85\\).aspx)</ept>.","source":"For a list of HRESULT values, see [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137\\(v=vs.85\\).aspx)."},{"pos":[2179,2800],"content":"Late-bound arguments and Microsoft Office objects  \n When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects. The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor. If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT ). To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.","nodes":[{"content":"Late-bound arguments and Microsoft Office objects","pos":[0,49]},{"content":" When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects. The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor. If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT ). To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.","pos":[52,621],"nodes":[{"content":"When passing late-bound arguments to methods of Microsoft Office objects, a <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> exception may be thrown when the objects are COM objects.","pos":[1,185],"source":" When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects."},{"content":"The late binder assumes that such method calls involve a <ph id=\"ph1\">`ByRef`</ph> parameter and that the property you pass has a <ph id=\"ph2\">`set`</ph> accessor.","pos":[186,313],"source":" The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor."},{"content":"If the property does not, the .NET Framework generates a <ph id=\"ph1\">&lt;xref:System.MissingMethodException&gt;</ph> exception (with a <ph id=\"ph2\">`CORE_E_MISSINGMETHOD`</ph> HRESULT ).","pos":[314,459],"source":" If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT )."},{"content":"To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.","pos":[460,569]}]}]},{"pos":[2807,3156],"content":"Visual Studio and the hosting process  \n COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx). Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\\(v=vs.85\\).aspx) causes this exception to be thrown.","nodes":[{"content":"Visual Studio and the hosting process","pos":[0,37]},{"content":" COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx). Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\\(v=vs.85\\).aspx) causes this exception to be thrown.","pos":[40,349],"nodes":[{"content":"COM is used to communicate between Visual Studio and the <bpt id=\"p1\">[</bpt>hosting process<ept id=\"p1\">](https://msdn.microsoft.com/library/ms185331.aspx)</ept>.","pos":[1,126],"source":" COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx)."},{"content":"Because it is used before code runs, a call to <bpt id=\"p1\">[</bpt>CoInitializeSecurity<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/ms693736\\(v=vs.85\\).aspx)</ept> causes this exception to be thrown.","pos":[127,309],"source":" Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\\(v=vs.85\\).aspx) causes this exception to be thrown."}]}]},{"pos":[3163,3333],"content":"In some cases, running Visual Studio as Administrator may resolve the issue. You can also [disable the hosting process](https://msdn.microsoft.com/library/ms185330.aspx).","nodes":[{"content":"In some cases, running Visual Studio as Administrator may resolve the issue.","pos":[0,76]},{"content":"You can also <bpt id=\"p1\">[</bpt>disable the hosting process<ept id=\"p1\">](https://msdn.microsoft.com/library/ms185330.aspx)</ept>.","pos":[77,170],"source":" You can also [disable the hosting process](https://msdn.microsoft.com/library/ms185330.aspx)."}]},{"pos":[3342,3375],"content":"Throwing a COMException exception","linkify":"Throwing a COMException exception","nodes":[{"content":"Throwing a COMException exception","pos":[0,33]}]},{"pos":[3379,3787],"content":"Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception. Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.","nodes":[{"content":"Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception. Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.","pos":[0,408],"nodes":[{"content":"Although you can use the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception.","pos":[0,218],"source":"Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception."},{"content":"Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.","pos":[219,408]}]}]}],"pos":[1051,4868],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with default values.","nodes":[{"pos":[0,125],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.COMException\"&gt;&lt;/xref&gt;</ph> class with default values.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with default values."}],"pos":[7492,7618],"yaml":true},{"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|A localized error message string.|","nodes":[{"pos":[0,227],"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.","nodes":[{"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.","pos":[0,227],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> inherits from <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph>.","pos":[0,121],"source":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>."},{"content":"The following table shows how this constructor sets the properties of the <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph> object.","pos":[122,227],"source":" The following table shows how this constructor sets the properties of the <xref:System.Exception> object."}]}]},{"pos":[234,242],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[243,248],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[284,325],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[326,333],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[338,372],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[373,406],"content":"A localized error message string.","nodes":[{"content":"A localized error message string.","pos":[0,33]}]}],"pos":[7629,8044],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified message.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.COMException\"&gt;&lt;/xref&gt;</ph> class with a specified message.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified message."}],"pos":[9767,9898],"yaml":true},{"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`|  \n|<xref:System.Exception.Message%2A>|`message`|","nodes":[{"pos":[0,227],"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.","nodes":[{"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.","pos":[0,227],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> inherits from <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph>.","pos":[0,121],"source":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>."},{"content":"The following table shows how this constructor sets the properties of the <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph> object.","pos":[122,227],"source":" The following table shows how this constructor sets the properties of the <xref:System.Exception> object."}]}]},{"pos":[234,242],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[243,248],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[284,325],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[337,371],"content":"<xref:System.Exception.Message%2A>","nodes":[]}],"pos":[9909,10299],"yaml":true,"extradata":"MT"},{"content":"The message that indicates the reason for the exception.","nodes":[{"pos":[0,56],"content":"The message that indicates the reason for the exception.","nodes":[{"content":"The message that indicates the reason for the exception.","pos":[0,56]}]}],"pos":[10439,10496],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class from serialization data.","nodes":[{"pos":[0,129],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.COMException\"&gt;&lt;/xref&gt;</ph> class from serialization data.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class from serialization data."}],"pos":[12477,12607],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).  \n  \n <xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.","nodes":[{"pos":[0,231],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.","pos":[114,231],"source":" For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md)."}]},{"pos":[238,359],"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> inherits from <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph>.","pos":[0,121],"source":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>."}]}],"pos":[12618,12982],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that holds the serialized object data.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data."}],"pos":[13247,13365],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that supplies the contextual information about the source or destination.","nodes":[{"pos":[0,151],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> object that supplies the contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that supplies the contextual information about the source or destination."}],"pos":[13460,13612],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[13791,13820],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,211],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.COMException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[15177,15389],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows how this constructor sets the properties of the <xref:System.Exception> object.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,539],"content":"The following table shows how this constructor sets the properties of the <xref:System.Exception> object.","nodes":[{"content":"The following table shows how this constructor sets the properties of the <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph> object.","pos":[0,105],"source":"The following table shows how this constructor sets the properties of the <xref:System.Exception> object."}]},{"pos":[546,554],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[555,560],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[596,637],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[638,668],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[673,707],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[708,733],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[15400,16144],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[16301,16363],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,193],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,193],"source":" If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[16427,16621],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified message and error code.","nodes":[{"pos":[0,145],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.COMException\"&gt;&lt;/xref&gt;</ph> class with a specified message and error code.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified message and error code."}],"pos":[18338,18484],"yaml":true},{"content":"This <xref:System.Runtime.InteropServices.COMException> constructor sets the base message with the error code.  \n  \n <xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`|  \n|<xref:System.Exception.Message%2A>|`message`|","nodes":[{"pos":[0,110],"content":"This <xref:System.Runtime.InteropServices.COMException> constructor sets the base message with the error code.","nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> constructor sets the base message with the error code.","pos":[0,110],"source":"This <xref:System.Runtime.InteropServices.COMException> constructor sets the base message with the error code."}]},{"pos":[117,344],"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.","nodes":[{"content":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.","pos":[0,227],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> inherits from <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph>.","pos":[0,121],"source":"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>."},{"content":"The following table shows how this constructor sets the properties of the <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph> object.","pos":[122,227],"source":" The following table shows how this constructor sets the properties of the <xref:System.Exception> object."}]}]},{"pos":[351,359],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[360,365],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[401,442],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[454,488],"content":"<xref:System.Exception.Message%2A>","nodes":[]}],"pos":[18495,19004],"yaml":true,"extradata":"MT"},{"content":"The message that indicates the reason the exception occurred.","nodes":[{"pos":[0,61],"content":"The message that indicates the reason the exception occurred.","nodes":[{"content":"The message that indicates the reason the exception occurred.","pos":[0,61]}]}],"pos":[19159,19221],"yaml":true},{"content":"The error code (HRESULT) value associated with this exception.","nodes":[{"pos":[0,62],"content":"The error code (HRESULT) value associated with this exception.","nodes":[{"content":"The error code (HRESULT) value associated with this exception.","pos":[0,62]}]}],"pos":[19285,19348],"yaml":true},{"content":"Converts the contents of the exception to a string.","nodes":[{"pos":[0,51],"content":"Converts the contents of the exception to a string.","nodes":[{"content":"Converts the contents of the exception to a string.","pos":[0,51]}]}],"pos":[20932,20984],"yaml":true},{"content":"A string containing the <xref href=\"System.Exception.HResult\"></xref>, <xref href=\"System.Exception.Message\"></xref>, <xref href=\"System.Exception.InnerException\"></xref>, and <xref href=\"System.Exception.StackTrace\"></xref> properties of the exception.","nodes":[{"pos":[0,253],"content":"A string containing the <ph id=\"ph1\">&lt;xref href=\"System.Exception.HResult\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Exception.Message\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Exception.InnerException\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph4\">&lt;xref href=\"System.Exception.StackTrace\"&gt;&lt;/xref&gt;</ph> properties of the exception.","source":"A string containing the <xref href=\"System.Exception.HResult\"></xref>, <xref href=\"System.Exception.Message\"></xref>, <xref href=\"System.Exception.InnerException\"></xref>, and <xref href=\"System.Exception.StackTrace\"></xref> properties of the exception."}],"pos":[21119,21373],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.COMException\n  commentId: T:System.Runtime.InteropServices.COMException\n  id: COMException\n  children:\n  - System.Runtime.InteropServices.COMException.#ctor\n  - System.Runtime.InteropServices.COMException.#ctor(System.String)\n  - System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)\n  - System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)\n  - System.Runtime.InteropServices.COMException.ToString\n  langs:\n  - csharp\n  name: COMException\n  nameWithType: COMException\n  fullName: System.Runtime.InteropServices.COMException\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.\n  remarks: \"The common language runtime transforms well-known HRESULTs to .NET Framework exceptions, enabling COM objects to return meaningful error information to managed clients. The HRESULT to exception mapping also works in the other direction by returning specific HRESULTs to unmanaged clients. For mapping details, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).  \\n  \\n When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <xref:System.Runtime.InteropServices.COMException> class. This all-purpose exception exposes the same members as any exception, and inherits a public <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property that contains the HRESULT returned by the callee. If an error message is available to the runtime (obtained from the [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\\\\(v=vs.85\\\\).aspx) interface or the `Err` object in Visual Basic, or in some cases from the operating system), the message is returned to the caller. However, if the COM component developer fails to include an error message, the runtime returns the eight-digit HRESULT in place of a message string. Having an HRESULT allows the caller to determine the cause of the generic exception.  \\n  \\n## Handling a COMException exception  \\n The following are some considerations for troubleshooting a <xref:System.Runtime.InteropServices.COMException> exception.  \\n  \\n Check the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property  \\n When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.  The error message or the HRESULT value can help you determine the cause of the exception.  \\n  \\n For a list of HRESULT values, see [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137\\\\(v=vs.85\\\\).aspx).  \\n  \\n Late-bound arguments and Microsoft Office objects  \\n When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects. The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor. If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT ). To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.  \\n  \\n Visual Studio and the hosting process  \\n COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx). Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\\\\(v=vs.85\\\\).aspx) causes this exception to be thrown.  \\n  \\n In some cases, running Visual Studio as Administrator may resolve the issue. You can also [disable the hosting process](https://msdn.microsoft.com/library/ms185330.aspx).  \\n  \\n## Throwing a COMException exception  \\n Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception. Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class COMException : System.Runtime.InteropServices.ExternalException\n  inheritance:\n  - System.Object\n  - System.Exception\n  derivedClasses:\n  - System.DirectoryServices.DirectoryServicesCOMException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.COMException.#ctor\n  commentId: M:System.Runtime.InteropServices.COMException.#ctor\n  id: '#ctor'\n  parent: System.Runtime.InteropServices.COMException\n  langs:\n  - csharp\n  name: COMException()\n  nameWithType: COMException.COMException()\n  fullName: COMException.COMException()\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with default values.\n  remarks: \"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|A localized error message string.|\"\n  syntax:\n    content: public COMException ();\n    parameters: []\n  overload: System.Runtime.InteropServices.COMException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.COMException.#ctor(System.String)\n  commentId: M:System.Runtime.InteropServices.COMException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.InteropServices.COMException\n  langs:\n  - csharp\n  name: COMException(String)\n  nameWithType: COMException.COMException(String)\n  fullName: COMException.COMException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified message.\n  remarks: \"<xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`|  \\n|<xref:System.Exception.Message%2A>|`message`|\"\n  syntax:\n    content: public COMException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that indicates the reason for the exception.\n  overload: System.Runtime.InteropServices.COMException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Runtime.InteropServices.COMException\n  langs:\n  - csharp\n  name: COMException(SerializationInfo, StreamingContext)\n  nameWithType: COMException.COMException(SerializationInfo, StreamingContext)\n  fullName: COMException.COMException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class from serialization data.\n  remarks: \"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).  \\n  \\n <xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.\"\n  syntax:\n    content: protected COMException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that supplies the contextual information about the source or destination.\n  overload: System.Runtime.InteropServices.COMException.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)\n  commentId: M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Runtime.InteropServices.COMException\n  langs:\n  - csharp\n  name: COMException(String, Exception)\n  nameWithType: COMException.COMException(String, Exception)\n  fullName: COMException.COMException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows how this constructor sets the properties of the <xref:System.Exception> object.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public COMException (string message, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.Runtime.InteropServices.COMException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)\n  commentId: M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.Runtime.InteropServices.COMException\n  langs:\n  - csharp\n  name: COMException(String, Int32)\n  nameWithType: COMException.COMException(String, Int32)\n  fullName: COMException.COMException(String, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.COMException\"></xref> class with a specified message and error code.\n  remarks: \"This <xref:System.Runtime.InteropServices.COMException> constructor sets the base message with the error code.  \\n  \\n <xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>. The following table shows how this constructor sets the properties of the <xref:System.Exception> object.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`|  \\n|<xref:System.Exception.Message%2A>|`message`|\"\n  syntax:\n    content: public COMException (string message, int errorCode);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that indicates the reason the exception occurred.\n    - id: errorCode\n      type: System.Int32\n      description: The error code (HRESULT) value associated with this exception.\n  overload: System.Runtime.InteropServices.COMException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.COMException.ToString\n  commentId: M:System.Runtime.InteropServices.COMException.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices.COMException\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: COMException.ToString()\n  fullName: COMException.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices\n  summary: Converts the contents of the exception to a string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the <xref href=\"System.Exception.HResult\"></xref>, <xref href=\"System.Exception.Message\"></xref>, <xref href=\"System.Exception.InnerException\"></xref>, and <xref href=\"System.Exception.StackTrace\"></xref> properties of the exception.\n  overload: System.Runtime.InteropServices.COMException.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Runtime.InteropServices.COMException.#ctor\n  parent: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: COMException()\n  nameWithType: COMException.COMException()\n  fullName: COMException.COMException()\n- uid: System.Runtime.InteropServices.COMException.#ctor(System.String)\n  parent: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: COMException(String)\n  nameWithType: COMException.COMException(String)\n  fullName: COMException.COMException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: COMException(SerializationInfo, StreamingContext)\n  nameWithType: COMException.COMException(SerializationInfo, StreamingContext)\n  fullName: COMException.COMException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)\n  parent: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: COMException(String, Exception)\n  nameWithType: COMException.COMException(String, Exception)\n  fullName: COMException.COMException(String, Exception)\n- uid: System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)\n  parent: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: COMException(String, Int32)\n  nameWithType: COMException.COMException(String, Int32)\n  fullName: COMException.COMException(String, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.COMException.ToString\n  parent: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: ToString()\n  nameWithType: COMException.ToString()\n  fullName: COMException.ToString()\n- uid: System.Runtime.InteropServices.COMException.#ctor*\n  parent: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: COMException\n  nameWithType: COMException.COMException\n  fullName: COMException.COMException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n- uid: System.Runtime.InteropServices.COMException.ToString*\n  parent: System.Runtime.InteropServices.COMException\n  isExternal: false\n  name: ToString\n  nameWithType: COMException.ToString\n  fullName: COMException.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/COMException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}