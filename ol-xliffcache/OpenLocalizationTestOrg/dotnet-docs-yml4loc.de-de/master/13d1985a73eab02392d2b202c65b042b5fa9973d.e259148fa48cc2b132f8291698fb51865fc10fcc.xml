{"nodes":[{"content":"Configures the security settings of a local client. This class cannot be inherited.","nodes":[{"pos":[0,83],"content":"Configures the security settings of a local client. This class cannot be inherited.","nodes":[{"content":"Configures the security settings of a local client. This class cannot be inherited.","pos":[0,83],"nodes":[{"content":"Configures the security settings of a local client.","pos":[0,51]},{"content":"This class cannot be inherited.","pos":[52,83]}]}]}],"pos":[1750,1834],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\"></xref> class.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\"></xref> class."}],"pos":[6379,6510],"yaml":true},{"content":"Gets or sets a boolean value that specifies whether cookie caching is enabled.","nodes":[{"pos":[0,78],"content":"Gets or sets a boolean value that specifies whether cookie caching is enabled.","nodes":[{"content":"Gets or sets a boolean value that specifies whether cookie caching is enabled.","pos":[0,78]}]}],"pos":[7829,7908],"yaml":true},{"content":"`true` if cookie caching is enabled; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,80],"content":"`true` if cookie caching is enabled; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if cookie caching is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,56],"source":"`true` if cookie caching is enabled; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[57,80],"source":" The default is `false`."}]}],"pos":[8154,8237],"yaml":true},{"content":"Gets or sets the maximum percentage of cookies that can be renewed.","nodes":[{"pos":[0,67],"content":"Gets or sets the maximum percentage of cookies that can be renewed.","nodes":[{"content":"Gets or sets the maximum percentage of cookies that can be renewed.","pos":[0,67]}]}],"pos":[9671,9739],"yaml":true},{"content":"A value that is between 0 and 100 inclusively. The default is 90.","nodes":[{"pos":[0,65],"content":"A value that is between 0 and 100 inclusively. The default is 90.","nodes":[{"content":"A value that is between 0 and 100 inclusively. The default is 90.","pos":[0,65],"nodes":[{"content":"A value that is between 0 and 100 inclusively.","pos":[0,46]},{"content":"The default is 90.","pos":[47,65]}]}]}],"pos":[10095,10161],"yaml":true},{"content":"Gets or sets a boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.","nodes":[{"pos":[0,129],"content":"Gets or sets a boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.","nodes":[{"content":"Gets or sets a boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.","pos":[0,129]}]}],"pos":[11558,11688],"yaml":true},{"content":"`true` if replay attacks against the channel are detected and dealt with automatically; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,131],"content":"`true` if replay attacks against the channel are detected and dealt with automatically; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if replay attacks against the channel are detected and dealt with automatically; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,107],"source":"`true` if replay attacks against the channel are detected and dealt with automatically; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[108,131],"source":" The default is `false`."}]}],"pos":[11936,12070],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties.","nodes":[{"pos":[0,154],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the maximum time difference between the system clocks of the two communicating parties.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties."}],"pos":[13385,13540],"yaml":true},{"content":"When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received. Messages that do not pass the send-time test are rejected. This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.","nodes":[{"pos":[0,376],"content":"When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received. Messages that do not pass the send-time test are rejected. This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.","nodes":[{"content":"When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received. Messages that do not pass the send-time test are rejected. This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.","pos":[0,376],"nodes":[{"content":"When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received.","pos":[0,170]},{"content":"Messages that do not pass the send-time test are rejected.","pos":[171,229]},{"content":"This setting is used in conjunction with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A&gt;</ph> property.","pos":[230,376],"source":" This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property."}]}]}],"pos":[13551,13928],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties. The default value is \"00:05:00\".","nodes":[{"pos":[0,174],"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties. The default value is \"00:05:00\".","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the maximum time difference between the system clocks of the two communicating parties.","pos":[0,141],"source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties."},{"content":"The default value is \"00:05:00\".","pos":[142,174]}]}],"pos":[14295,14470],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum lifetime of cookies.","nodes":[{"pos":[0,99],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the maximum lifetime of cookies.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum lifetime of cookies."}],"pos":[15887,15987],"yaml":true},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum lifetime of cookies. The default value is \"10675199.02:48:05.4775807\".","nodes":[{"pos":[0,136],"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum lifetime of cookies. The default value is \"10675199.02:48:05.4775807\".","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the maximum lifetime of cookies.","pos":[0,86],"source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum lifetime of cookies."},{"content":"The default value is \"10675199.02:48:05.4775807\".","pos":[87,136]}]}],"pos":[16370,16507],"yaml":true},{"content":"Gets or sets a boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.","nodes":[{"pos":[0,138],"content":"Gets or sets a boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.","nodes":[{"content":"Gets or sets a boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.","pos":[0,138]}]}],"pos":[19309,19448],"yaml":true},{"content":"If this property is `true`, infinite reconnect attempts are attempted. The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.","nodes":[{"pos":[0,201],"content":"If this property is `true`, infinite reconnect attempts are attempted. The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.","nodes":[{"content":"If this property is <ph id=\"ph1\">`true`</ph>, infinite reconnect attempts are attempted.","pos":[0,70],"source":"If this property is `true`, infinite reconnect attempts are attempted."},{"content":"The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.","pos":[71,201]}]}],"pos":[19459,19661],"yaml":true,"extradata":"MT"},{"content":"`true` if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,139],"content":"`true` if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,116],"source":"`true` if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[117,139],"source":" The default is `true`."}]}],"pos":[19937,20079],"yaml":true},{"content":"Gets or sets a value that specifies the number of cached nonces used for replay detection.","nodes":[{"pos":[0,90],"content":"Gets or sets a value that specifies the number of cached nonces used for replay detection.","nodes":[{"content":"Gets or sets a value that specifies the number of cached nonces used for replay detection.","pos":[0,90]}]}],"pos":[21426,21517],"yaml":true},{"content":"If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.","nodes":[{"pos":[0,102],"content":"If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.","nodes":[{"content":"If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.","pos":[0,102]}]}],"pos":[21528,21631],"yaml":true,"extradata":"MT"},{"content":"The number of cached nonces used for replay detection. The default value is 500000.","nodes":[{"pos":[0,83],"content":"The number of cached nonces used for replay detection. The default value is 500000.","nodes":[{"content":"The number of cached nonces used for replay detection. The default value is 500000.","pos":[0,83],"nodes":[{"content":"The number of cached nonces used for replay detection.","pos":[0,54]},{"content":"The default value is 500000.","pos":[55,83]}]}]}],"pos":[21939,22023],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid.","nodes":[{"pos":[0,125],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration in which individual message nonces are valid.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid."}],"pos":[23397,23523],"yaml":true},{"content":"After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted. This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks. An attacker can replay a message after its replay window has expired. This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.","nodes":[{"pos":[0,540],"content":"After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted. This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks. An attacker can replay a message after its replay window has expired. This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.","nodes":[{"content":"After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted. This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks. An attacker can replay a message after its replay window has expired. This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.","pos":[0,540],"nodes":[{"content":"After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted.","pos":[0,117]},{"content":"This property is used in conjunction with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A&gt;</ph> property to prevent replay attacks.","pos":[118,291],"source":" This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks."},{"content":"An attacker can replay a message after its replay window has expired.","pos":[292,361]},{"content":"This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.","pos":[362,540]}]}]}],"pos":[23534,24075],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration in which individual message nonces are valid.","source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid."}],"pos":[24442,24555],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session.","nodes":[{"pos":[0,146],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration after which the initiator renews the key for the security session.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session."}],"pos":[26002,26149],"yaml":true},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session. The default is \"10:00:00\".","nodes":[{"pos":[0,160],"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session. The default is \"10:00:00\".","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration after which the initiator renews the key for the security session.","pos":[0,133],"source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session."},{"content":"The default is \"10:00:00\".","pos":[134,160]}]}],"pos":[26542,26703],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the time interval a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".","nodes":[{"pos":[0,186],"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the time interval a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".","nodes":[{"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the time interval a previous session key is valid on incoming messages during a key renewal.","pos":[0,159],"source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the time interval a previous session key is valid on incoming messages during a key renewal."},{"content":"The default is \"00:05:00\".","pos":[160,186]}]}],"pos":[28169,28356],"yaml":true},{"content":"During key renewal, the client and server must always send messages using the most current available key. Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.","nodes":[{"pos":[0,241],"content":"During key renewal, the client and server must always send messages using the most current available key. Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.","nodes":[{"content":"During key renewal, the client and server must always send messages using the most current available key. Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.","pos":[0,241],"nodes":[{"content":"During key renewal, the client and server must always send messages using the most current available key.","pos":[0,105]},{"content":"Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.","pos":[106,241]}]}]}],"pos":[28367,28609],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".","nodes":[{"pos":[0,168],"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration a previous session key is valid on incoming messages during a key renewal.","pos":[0,141],"source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration a previous session key is valid on incoming messages during a key renewal."},{"content":"The default is \"00:05:00\".","pos":[142,168]}]}],"pos":[29004,29173],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid.","nodes":[{"pos":[0,111],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration in which a time stamp is valid.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid."}],"pos":[30634,30746],"yaml":true},{"content":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid. The default is \"00:15:00\".","nodes":[{"pos":[0,134],"content":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid. The default is \"00:15:00\".","nodes":[{"content":"A positive <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration in which a time stamp is valid.","pos":[0,107],"source":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid."},{"content":"The default is \"00:15:00\".","pos":[108,134]}]}],"pos":[31139,31274],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  commentId: T:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  id: LocalClientSecuritySettingsElement\n  children:\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.#ctor\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CacheCookies\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.DetectReplays\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.Properties\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayCacheSize\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  - System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.TimestampValidityDuration\n  langs:\n  - csharp\n  name: LocalClientSecuritySettingsElement\n  nameWithType: LocalClientSecuritySettingsElement\n  fullName: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Configures the security settings of a local client. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class LocalClientSecuritySettingsElement : System.ServiceModel.Configuration.ServiceModelConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: LocalClientSecuritySettingsElement()\n  nameWithType: LocalClientSecuritySettingsElement.LocalClientSecuritySettingsElement()\n  fullName: LocalClientSecuritySettingsElement.LocalClientSecuritySettingsElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\"></xref> class.\n  syntax:\n    content: public LocalClientSecuritySettingsElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CacheCookies\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CacheCookies\n  id: CacheCookies\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: CacheCookies\n  nameWithType: LocalClientSecuritySettingsElement.CacheCookies\n  fullName: LocalClientSecuritySettingsElement.CacheCookies\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a boolean value that specifies whether cookie caching is enabled.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cacheCookies\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CacheCookies { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if cookie caching is enabled; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CacheCookies*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  id: CookieRenewalThresholdPercentage\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: CookieRenewalThresholdPercentage\n  nameWithType: LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  fullName: LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum percentage of cookies that can be renewed.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cookieRenewalThresholdPercentage\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MaxValue=100, MinValue=0)]\n\n      public int CookieRenewalThresholdPercentage { get; set; }\n    return:\n      type: System.Int32\n      description: A value that is between 0 and 100 inclusively. The default is 90.\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.DetectReplays\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.DetectReplays\n  id: DetectReplays\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: DetectReplays\n  nameWithType: LocalClientSecuritySettingsElement.DetectReplays\n  fullName: LocalClientSecuritySettingsElement.DetectReplays\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"detectReplays\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool DetectReplays { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if replay attacks against the channel are detected and dealt with automatically; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.DetectReplays*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew\n  id: MaxClockSkew\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: MaxClockSkew\n  nameWithType: LocalClientSecuritySettingsElement.MaxClockSkew\n  fullName: LocalClientSecuritySettingsElement.MaxClockSkew\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties.\n  remarks: When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received. Messages that do not pass the send-time test are rejected. This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"maxClockSkew\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan MaxClockSkew { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties. The default value is \"00:05:00\".\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  id: MaxCookieCachingTime\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: MaxCookieCachingTime\n  nameWithType: LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  fullName: LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum lifetime of cookies.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"maxCookieCachingTime\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan MaxCookieCachingTime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum lifetime of cookies. The default value is \"10675199.02:48:05.4775807\".\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxCookieCachingTime*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.Properties\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: LocalClientSecuritySettingsElement.Properties\n  fullName: LocalClientSecuritySettingsElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  id: ReconnectTransportOnFailure\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  fullName: LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.\n  remarks: If this property is `true`, infinite reconnect attempts are attempted. The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"reconnectTransportOnFailure\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool ReconnectTransportOnFailure { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, `false`. The default is `true`.'\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReconnectTransportOnFailure*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayCacheSize\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayCacheSize\n  id: ReplayCacheSize\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: ReplayCacheSize\n  nameWithType: LocalClientSecuritySettingsElement.ReplayCacheSize\n  fullName: LocalClientSecuritySettingsElement.ReplayCacheSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the number of cached nonces used for replay detection.\n  remarks: If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"replayCacheSize\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=1)]\n\n      public int ReplayCacheSize { get; set; }\n    return:\n      type: System.Int32\n      description: The number of cached nonces used for replay detection. The default value is 500000.\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayCacheSize*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow\n  id: ReplayWindow\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: ReplayWindow\n  nameWithType: LocalClientSecuritySettingsElement.ReplayWindow\n  fullName: LocalClientSecuritySettingsElement.ReplayWindow\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid.\n  remarks: After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted. This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks. An attacker can replay a message after its replay window has expired. This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"replayWindow\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan ReplayWindow { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid.\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  id: SessionKeyRenewalInterval\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  fullName: LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"sessionKeyRenewalInterval\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan SessionKeyRenewalInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session. The default is \"10:00:00\".\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRenewalInterval*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  id: SessionKeyRolloverInterval\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  fullName: LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the time interval a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".\n  remarks: During key renewal, the client and server must always send messages using the most current available key. Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"sessionKeyRolloverInterval\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan SessionKeyRolloverInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the duration a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRolloverInterval*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.TimestampValidityDuration\n  commentId: P:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.TimestampValidityDuration\n  id: TimestampValidityDuration\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  langs:\n  - csharp\n  name: TimestampValidityDuration\n  nameWithType: LocalClientSecuritySettingsElement.TimestampValidityDuration\n  fullName: LocalClientSecuritySettingsElement.TimestampValidityDuration\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"timestampValidityDuration\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan TimestampValidityDuration { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid. The default is \"00:15:00\".\n  overload: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.TimestampValidityDuration*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelConfigurationElement\n  nameWithType: ServiceModelConfigurationElement\n  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.#ctor\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: LocalClientSecuritySettingsElement()\n  nameWithType: LocalClientSecuritySettingsElement.LocalClientSecuritySettingsElement()\n  fullName: LocalClientSecuritySettingsElement.LocalClientSecuritySettingsElement()\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CacheCookies\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: CacheCookies\n  nameWithType: LocalClientSecuritySettingsElement.CacheCookies\n  fullName: LocalClientSecuritySettingsElement.CacheCookies\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: CookieRenewalThresholdPercentage\n  nameWithType: LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  fullName: LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.DetectReplays\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: DetectReplays\n  nameWithType: LocalClientSecuritySettingsElement.DetectReplays\n  fullName: LocalClientSecuritySettingsElement.DetectReplays\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: MaxClockSkew\n  nameWithType: LocalClientSecuritySettingsElement.MaxClockSkew\n  fullName: LocalClientSecuritySettingsElement.MaxClockSkew\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: MaxCookieCachingTime\n  nameWithType: LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  fullName: LocalClientSecuritySettingsElement.MaxCookieCachingTime\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.Properties\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: Properties\n  nameWithType: LocalClientSecuritySettingsElement.Properties\n  fullName: LocalClientSecuritySettingsElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  fullName: LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayCacheSize\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: ReplayCacheSize\n  nameWithType: LocalClientSecuritySettingsElement.ReplayCacheSize\n  fullName: LocalClientSecuritySettingsElement.ReplayCacheSize\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: ReplayWindow\n  nameWithType: LocalClientSecuritySettingsElement.ReplayWindow\n  fullName: LocalClientSecuritySettingsElement.ReplayWindow\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  fullName: LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  fullName: LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.TimestampValidityDuration\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: TimestampValidityDuration\n  nameWithType: LocalClientSecuritySettingsElement.TimestampValidityDuration\n  fullName: LocalClientSecuritySettingsElement.TimestampValidityDuration\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.#ctor*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: LocalClientSecuritySettingsElement\n  nameWithType: LocalClientSecuritySettingsElement.LocalClientSecuritySettingsElement\n  fullName: LocalClientSecuritySettingsElement.LocalClientSecuritySettingsElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CacheCookies*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: CacheCookies\n  nameWithType: LocalClientSecuritySettingsElement.CacheCookies\n  fullName: LocalClientSecuritySettingsElement.CacheCookies\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: CookieRenewalThresholdPercentage\n  nameWithType: LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  fullName: LocalClientSecuritySettingsElement.CookieRenewalThresholdPercentage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.DetectReplays*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: DetectReplays\n  nameWithType: LocalClientSecuritySettingsElement.DetectReplays\n  fullName: LocalClientSecuritySettingsElement.DetectReplays\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: MaxClockSkew\n  nameWithType: LocalClientSecuritySettingsElement.MaxClockSkew\n  fullName: LocalClientSecuritySettingsElement.MaxClockSkew\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxCookieCachingTime*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: MaxCookieCachingTime\n  nameWithType: LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  fullName: LocalClientSecuritySettingsElement.MaxCookieCachingTime\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.Properties*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: Properties\n  nameWithType: LocalClientSecuritySettingsElement.Properties\n  fullName: LocalClientSecuritySettingsElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReconnectTransportOnFailure*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  fullName: LocalClientSecuritySettingsElement.ReconnectTransportOnFailure\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayCacheSize*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: ReplayCacheSize\n  nameWithType: LocalClientSecuritySettingsElement.ReplayCacheSize\n  fullName: LocalClientSecuritySettingsElement.ReplayCacheSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: ReplayWindow\n  nameWithType: LocalClientSecuritySettingsElement.ReplayWindow\n  fullName: LocalClientSecuritySettingsElement.ReplayWindow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRenewalInterval*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  fullName: LocalClientSecuritySettingsElement.SessionKeyRenewalInterval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.SessionKeyRolloverInterval*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  fullName: LocalClientSecuritySettingsElement.SessionKeyRolloverInterval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.TimestampValidityDuration*\n  parent: System.ServiceModel.Configuration.LocalClientSecuritySettingsElement\n  isExternal: false\n  name: TimestampValidityDuration\n  nameWithType: LocalClientSecuritySettingsElement.TimestampValidityDuration\n  fullName: LocalClientSecuritySettingsElement.TimestampValidityDuration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalClientSecuritySettingsElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n"}