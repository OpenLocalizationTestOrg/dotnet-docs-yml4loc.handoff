{"nodes":[{"content":"Provides information about a <xref href=\"System.Diagnostics.StackFrame\"></xref>, which represents a function call on the call stack for the current thread.","nodes":[{"pos":[0,155],"content":"Provides information about a <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.StackFrame\"&gt;&lt;/xref&gt;</ph>, which represents a function call on the call stack for the current thread.","source":"Provides information about a <xref href=\"System.Diagnostics.StackFrame\"></xref>, which represents a function call on the call stack for the current thread."}],"pos":[1141,1297],"yaml":true},{"content":"A <xref:System.Diagnostics.StackFrame> is created and pushed on the call stack for every function call made during the execution of a thread. The stack frame always includes <xref:System.Reflection.MethodBase> information, and optionally includes file name, line number, and column number information.  \n  \n <xref:System.Diagnostics.StackFrame> information will be most informative with Debug build configurations. By default, Debug builds include debug symbols, while Release builds do not. The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> objects.","nodes":[{"pos":[0,301],"content":"A <xref:System.Diagnostics.StackFrame> is created and pushed on the call stack for every function call made during the execution of a thread. The stack frame always includes <xref:System.Reflection.MethodBase> information, and optionally includes file name, line number, and column number information.","nodes":[{"content":"A <xref:System.Diagnostics.StackFrame> is created and pushed on the call stack for every function call made during the execution of a thread. The stack frame always includes <xref:System.Reflection.MethodBase> information, and optionally includes file name, line number, and column number information.","pos":[0,301],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> is created and pushed on the call stack for every function call made during the execution of a thread.","pos":[0,141],"source":"A <xref:System.Diagnostics.StackFrame> is created and pushed on the call stack for every function call made during the execution of a thread."},{"content":"The stack frame always includes <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase&gt;</ph> information, and optionally includes file name, line number, and column number information.","pos":[142,301],"source":" The stack frame always includes <xref:System.Reflection.MethodBase> information, and optionally includes file name, line number, and column number information."}]}]},{"pos":[308,651],"content":"<xref:System.Diagnostics.StackFrame> information will be most informative with Debug build configurations. By default, Debug builds include debug symbols, while Release builds do not. The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> objects.","nodes":[{"content":"<xref:System.Diagnostics.StackFrame> information will be most informative with Debug build configurations. By default, Debug builds include debug symbols, while Release builds do not. The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> objects.","pos":[0,343],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> information will be most informative with Debug build configurations.","pos":[0,106],"source":"<xref:System.Diagnostics.StackFrame> information will be most informative with Debug build configurations."},{"content":"By default, Debug builds include debug symbols, while Release builds do not.","pos":[107,183]},{"content":"The debug symbols contain most of the file, method name, line number, and column information used in constructing <ph id=\"ph1\">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> objects.","pos":[184,343],"source":" The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> objects."}]}]}],"pos":[1308,1964],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class.","nodes":[{"pos":[0,91],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.StackFrame\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class."}],"pos":[5077,5169],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class, optionally capturing source information.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.StackFrame\"&gt;&lt;/xref&gt;</ph> class, optionally capturing source information.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class, optionally capturing source information."}],"pos":[6496,6629],"yaml":true},{"content":"`true` to capture the file name, line number, and column number of the stack frame; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> to capture the file name, line number, and column number of the stack frame; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to capture the file name, line number, and column number of the stack frame; otherwise, `false`."}],"pos":[7389,7495],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that corresponds to a frame above the current stack frame.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.StackFrame\"&gt;&lt;/xref&gt;</ph> class that corresponds to a frame above the current stack frame.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that corresponds to a frame above the current stack frame."}],"pos":[8746,8896],"yaml":true},{"content":"The number of frames up the stack to skip.","nodes":[{"pos":[0,42],"content":"The number of frames up the stack to skip.","nodes":[{"content":"The number of frames up the stack to skip.","pos":[0,42]}]}],"pos":[9645,9688],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that corresponds to a frame above the current stack frame, optionally capturing source information.","nodes":[{"pos":[0,190],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.StackFrame\"&gt;&lt;/xref&gt;</ph> class that corresponds to a frame above the current stack frame, optionally capturing source information.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that corresponds to a frame above the current stack frame, optionally capturing source information."}],"pos":[11011,11202],"yaml":true},{"content":"The number of frames up the stack to skip.","nodes":[{"pos":[0,42],"content":"The number of frames up the stack to skip.","nodes":[{"content":"The number of frames up the stack to skip.","pos":[0,42]}]}],"pos":[11988,12031],"yaml":true},{"content":"`true` to capture the file name, line number, and column number of the stack frame; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> to capture the file name, line number, and column number of the stack frame; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to capture the file name, line number, and column number of the stack frame; otherwise, `false`."}],"pos":[12101,12207],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that contains only the given file name and line number.","nodes":[{"pos":[0,146],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.StackFrame\"&gt;&lt;/xref&gt;</ph> class that contains only the given file name and line number.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that contains only the given file name and line number."}],"pos":[13524,13671],"yaml":true},{"content":"Use this constructor when you do not want to use the debugger's line mapping logic.","nodes":[{"pos":[0,83],"content":"Use this constructor when you do not want to use the debugger's line mapping logic.","nodes":[{"content":"Use this constructor when you do not want to use the debugger's line mapping logic.","pos":[0,83]}]}],"pos":[13682,13766],"yaml":true,"extradata":"MT"},{"content":"The file name.","nodes":[{"pos":[0,14],"content":"The file name.","nodes":[{"content":"The file name.","pos":[0,14]}]}],"pos":[14533,14548],"yaml":true},{"content":"The line number in the specified file.","nodes":[{"pos":[0,38],"content":"The line number in the specified file.","nodes":[{"content":"The line number in the specified file.","pos":[0,38]}]}],"pos":[14613,14652],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that contains only the given file name, line number, and column number.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.StackFrame\"&gt;&lt;/xref&gt;</ph> class that contains only the given file name, line number, and column number.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that contains only the given file name, line number, and column number."}],"pos":[16029,16192],"yaml":true},{"content":"Use this constructor when you do not want to use the debugger's line mapping logic.","nodes":[{"pos":[0,83],"content":"Use this constructor when you do not want to use the debugger's line mapping logic.","nodes":[{"content":"Use this constructor when you do not want to use the debugger's line mapping logic.","pos":[0,83]}]}],"pos":[16203,16287],"yaml":true,"extradata":"MT"},{"content":"The file name.","nodes":[{"pos":[0,14],"content":"The file name.","nodes":[{"content":"The file name.","pos":[0,14]}]}],"pos":[17038,17053],"yaml":true},{"content":"The line number in the specified file.","nodes":[{"pos":[0,38],"content":"The line number in the specified file.","nodes":[{"content":"The line number in the specified file.","pos":[0,38]}]}],"pos":[17118,17157],"yaml":true},{"content":"The column number in the specified file.","nodes":[{"pos":[0,40],"content":"The column number in the specified file.","nodes":[{"content":"The column number in the specified file.","pos":[0,40]}]}],"pos":[17221,17262],"yaml":true},{"content":"Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","nodes":[{"pos":[0,163],"content":"Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","nodes":[{"content":"Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","pos":[0,163],"nodes":[{"content":"Gets the column number in the file that contains the code that is executing.","pos":[0,76]},{"content":"This information is typically extracted from the debugging symbols for the executable.","pos":[77,163]}]}]}],"pos":[18518,18682],"yaml":true},{"content":"The file column number, or 0 (zero) if the file column number cannot be determined.","nodes":[{"pos":[0,83],"content":"The file column number, or 0 (zero) if the file column number cannot be determined.","nodes":[{"content":"The file column number, or 0 (zero) if the file column number cannot be determined.","pos":[0,83]}]}],"pos":[19424,19508],"yaml":true},{"content":"Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","nodes":[{"pos":[0,161],"content":"Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","nodes":[{"content":"Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","pos":[0,161],"nodes":[{"content":"Gets the line number in the file that contains the code that is executing.","pos":[0,74]},{"content":"This information is typically extracted from the debugging symbols for the executable.","pos":[75,161]}]}]}],"pos":[20830,20992],"yaml":true},{"content":"The file line number, or 0 (zero) if the file line number cannot be determined.","nodes":[{"pos":[0,79],"content":"The file line number, or 0 (zero) if the file line number cannot be determined.","nodes":[{"content":"The file line number, or 0 (zero) if the file line number cannot be determined.","pos":[0,79]}]}],"pos":[21730,21810],"yaml":true},{"content":"Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","nodes":[{"pos":[0,147],"content":"Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","nodes":[{"content":"Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.","pos":[0,147],"nodes":[{"content":"Gets the file name that contains the code that is executing.","pos":[0,60]},{"content":"This information is typically extracted from the debugging symbols for the executable.","pos":[61,147]}]}]}],"pos":[23094,23242],"yaml":true},{"content":"The file name, or `null` if the file name cannot be determined.","nodes":[{"pos":[0,63],"content":"The file name, or <ph id=\"ph1\">`null`</ph> if the file name cannot be determined.","source":"The file name, or `null` if the file name cannot be determined."}],"pos":[23972,24036],"yaml":true},{"content":"Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing. This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code. The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref>.","nodes":[{"pos":[0,370],"content":"Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing. This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code. The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref>.","nodes":[{"content":"Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing.","pos":[0,115]},{"content":"This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code.","pos":[116,243]},{"content":"The generation of this debugging information is controlled by the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggableAttribute\"&gt;&lt;/xref&gt;</ph>.","pos":[244,370],"source":" The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref>."}]}],"pos":[25314,25685],"yaml":true},{"content":"The offset from the start of the MSIL code for the method that is executing.","nodes":[{"pos":[0,76],"content":"The offset from the start of the MSIL code for the method that is executing.","nodes":[{"content":"The offset from the start of the MSIL code for the method that is executing.","pos":[0,76]}]}],"pos":[26411,26488],"yaml":true},{"content":"Gets the method in which the frame is executing.","nodes":[{"pos":[0,48],"content":"Gets the method in which the frame is executing.","nodes":[{"content":"Gets the method in which the frame is executing.","pos":[0,48]}]}],"pos":[27754,27803],"yaml":true},{"content":"The method that is currently executing may be inherited from a base class, although it is called in a derived class. In this case, the <xref:System.Reflection.MemberInfo.ReflectedType%2A> property of the <xref:System.Reflection.MethodBase> object that is returned by <xref:System.Diagnostics.StackFrame.GetMethod%2A> identifies the base class, not the derived class.","nodes":[{"pos":[0,366],"content":"The method that is currently executing may be inherited from a base class, although it is called in a derived class. In this case, the <xref:System.Reflection.MemberInfo.ReflectedType%2A> property of the <xref:System.Reflection.MethodBase> object that is returned by <xref:System.Diagnostics.StackFrame.GetMethod%2A> identifies the base class, not the derived class.","nodes":[{"content":"The method that is currently executing may be inherited from a base class, although it is called in a derived class. In this case, the <xref:System.Reflection.MemberInfo.ReflectedType%2A> property of the <xref:System.Reflection.MethodBase> object that is returned by <xref:System.Diagnostics.StackFrame.GetMethod%2A> identifies the base class, not the derived class.","pos":[0,366],"nodes":[{"content":"The method that is currently executing may be inherited from a base class, although it is called in a derived class.","pos":[0,116]},{"content":"In this case, the <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase&gt;</ph> object that is returned by <ph id=\"ph3\">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph> identifies the base class, not the derived class.","pos":[117,366],"source":" In this case, the <xref:System.Reflection.MemberInfo.ReflectedType%2A> property of the <xref:System.Reflection.MethodBase> object that is returned by <xref:System.Diagnostics.StackFrame.GetMethod%2A> identifies the base class, not the derived class."}]}]}],"pos":[27814,28181],"yaml":true,"extradata":"MT"},{"content":"The method in which the frame is executing.","nodes":[{"pos":[0,43],"content":"The method in which the frame is executing.","nodes":[{"content":"The method in which the frame is executing.","pos":[0,43]}]}],"pos":[28963,29007],"yaml":true},{"content":"Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed. The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class.","nodes":[{"pos":[0,249],"content":"Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed. The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class.","nodes":[{"content":"Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed.","pos":[0,116]},{"content":"The generation of this debugging information is controlled by the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggableAttribute\"&gt;&lt;/xref&gt;</ph> class.","pos":[117,249],"source":" The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class."}]}],"pos":[30307,30557],"yaml":true},{"content":"The offset from the start of the JIT-compiled code for the method that is being executed.","nodes":[{"pos":[0,89],"content":"The offset from the start of the JIT-compiled code for the method that is being executed.","nodes":[{"content":"The offset from the start of the JIT-compiled code for the method that is being executed.","pos":[0,89]}]}],"pos":[31291,31381],"yaml":true},{"content":"Defines the value that is returned from the <xref href=\"System.Diagnostics.StackFrame.GetNativeOffset\"></xref> or <xref href=\"System.Diagnostics.StackFrame.GetILOffset\"></xref> method when the native or Microsoft intermediate language (MSIL) offset is unknown. This field is constant.","nodes":[{"pos":[0,284],"content":"Defines the value that is returned from the <xref href=\"System.Diagnostics.StackFrame.GetNativeOffset\"></xref> or <xref href=\"System.Diagnostics.StackFrame.GetILOffset\"></xref> method when the native or Microsoft intermediate language (MSIL) offset is unknown. This field is constant.","nodes":[{"content":"Defines the value that is returned from the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.StackFrame.GetNativeOffset\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.StackFrame.GetILOffset\"&gt;&lt;/xref&gt;</ph> method when the native or Microsoft intermediate language (MSIL) offset is unknown.","pos":[0,260],"source":"Defines the value that is returned from the <xref href=\"System.Diagnostics.StackFrame.GetNativeOffset\"></xref> or <xref href=\"System.Diagnostics.StackFrame.GetILOffset\"></xref> method when the native or Microsoft intermediate language (MSIL) offset is unknown."},{"content":"This field is constant.","pos":[261,284]}]}],"pos":[32610,32895],"yaml":true},{"content":"The value of this constant is -1.","nodes":[{"pos":[0,33],"content":"The value of this constant is -1.","nodes":[{"content":"The value of this constant is -1.","pos":[0,33]}]}],"pos":[32906,32940],"yaml":true,"extradata":"MT"},{"content":"Builds a readable representation of the stack trace.","nodes":[{"pos":[0,52],"content":"Builds a readable representation of the stack trace.","nodes":[{"content":"Builds a readable representation of the stack trace.","pos":[0,52]}]}],"pos":[34265,34318],"yaml":true},{"content":"A readable representation of the stack trace.","nodes":[{"pos":[0,45],"content":"A readable representation of the stack trace.","nodes":[{"content":"A readable representation of the stack trace.","pos":[0,45]}]}],"pos":[35043,35089],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.StackFrame\n  commentId: T:System.Diagnostics.StackFrame\n  id: StackFrame\n  children:\n  - System.Diagnostics.StackFrame.#ctor\n  - System.Diagnostics.StackFrame.#ctor(System.Boolean)\n  - System.Diagnostics.StackFrame.#ctor(System.Int32)\n  - System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)\n  - System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)\n  - System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)\n  - System.Diagnostics.StackFrame.GetFileColumnNumber\n  - System.Diagnostics.StackFrame.GetFileLineNumber\n  - System.Diagnostics.StackFrame.GetFileName\n  - System.Diagnostics.StackFrame.GetILOffset\n  - System.Diagnostics.StackFrame.GetMethod\n  - System.Diagnostics.StackFrame.GetNativeOffset\n  - System.Diagnostics.StackFrame.OFFSET_UNKNOWN\n  - System.Diagnostics.StackFrame.ToString\n  langs:\n  - csharp\n  name: StackFrame\n  nameWithType: StackFrame\n  fullName: System.Diagnostics.StackFrame\n  type: Class\n  assemblies:\n  - System.Diagnostics.StackTrace\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Provides information about a <xref href=\"System.Diagnostics.StackFrame\"></xref>, which represents a function call on the call stack for the current thread.\n  remarks: \"A <xref:System.Diagnostics.StackFrame> is created and pushed on the call stack for every function call made during the execution of a thread. The stack frame always includes <xref:System.Reflection.MethodBase> information, and optionally includes file name, line number, and column number information.  \\n  \\n <xref:System.Diagnostics.StackFrame> information will be most informative with Debug build configurations. By default, Debug builds include debug symbols, while Release builds do not. The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> objects.\"\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame> class to provide the stack frame information for a stack trace.  \\n  \\n [!code-csharp[StackFrameSample2#1](~/samples/snippets/csharp/VS_Snippets_CLR/stackframesample2/cs/program.cs#1)]\\n [!code-vb[StackFrameSample2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stackframesample2/vb/program.vb#1)]  \\n  \\n The following example demonstrates the use of  the members of the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#1)]\\n [!code-csharp[StackFrameSample1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#1)]\\n [!code-vb[StackFrameSample1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class StackFrame\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  extensionMethods:\n  - System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n  - System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n  - System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n  - System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n  - System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n  - System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.#ctor\n  commentId: M:System.Diagnostics.StackFrame.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: StackFrame()\n  nameWithType: StackFrame.StackFrame()\n  fullName: StackFrame.StackFrame()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class.\n  syntax:\n    content: public StackFrame ();\n    parameters: []\n  overload: System.Diagnostics.StackFrame.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.#ctor(System.Boolean)\n  commentId: M:System.Diagnostics.StackFrame.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: StackFrame(Boolean)\n  nameWithType: StackFrame.StackFrame(Boolean)\n  fullName: StackFrame.StackFrame(Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class, optionally capturing source information.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.%23ctor%28System.Boolean%29> constructor. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#2](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#2)]\\n [!code-csharp[StackFrameSample1#2](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#2)]\\n [!code-vb[StackFrameSample1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#2)]\"\n  syntax:\n    content: public StackFrame (bool fNeedFileInfo);\n    parameters:\n    - id: fNeedFileInfo\n      type: System.Boolean\n      description: '`true` to capture the file name, line number, and column number of the stack frame; otherwise, `false`.'\n  overload: System.Diagnostics.StackFrame.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.#ctor(System.Int32)\n  commentId: M:System.Diagnostics.StackFrame.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: StackFrame(Int32)\n  nameWithType: StackFrame.StackFrame(Int32)\n  fullName: StackFrame.StackFrame(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that corresponds to a frame above the current stack frame.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%29> constructor. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#3](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#3)]\\n [!code-csharp[StackFrameSample1#3](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#3)]\\n [!code-vb[StackFrameSample1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#3)]\"\n  syntax:\n    content: public StackFrame (int skipFrames);\n    parameters:\n    - id: skipFrames\n      type: System.Int32\n      description: The number of frames up the stack to skip.\n  overload: System.Diagnostics.StackFrame.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)\n  commentId: M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)\n  id: '#ctor(System.Int32,System.Boolean)'\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: StackFrame(Int32, Boolean)\n  nameWithType: StackFrame.StackFrame(Int32, Boolean)\n  fullName: StackFrame.StackFrame(Int32, Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that corresponds to a frame above the current stack frame, optionally capturing source information.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%2CSystem.Boolean%29> constructor. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]\\n [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]\\n [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]\"\n  syntax:\n    content: public StackFrame (int skipFrames, bool fNeedFileInfo);\n    parameters:\n    - id: skipFrames\n      type: System.Int32\n      description: The number of frames up the stack to skip.\n    - id: fNeedFileInfo\n      type: System.Boolean\n      description: '`true` to capture the file name, line number, and column number of the stack frame; otherwise, `false`.'\n  overload: System.Diagnostics.StackFrame.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)\n  commentId: M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: StackFrame(String, Int32)\n  nameWithType: StackFrame.StackFrame(String, Int32)\n  fullName: StackFrame.StackFrame(String, Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that contains only the given file name and line number.\n  remarks: Use this constructor when you do not want to use the debugger's line mapping logic.\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.%23ctor%28System.String%2CSystem.Int32%29> constructor. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#5](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#5)]\\n [!code-csharp[StackFrameSample1#5](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#5)]\\n [!code-vb[StackFrameSample1#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#5)]\"\n  syntax:\n    content: public StackFrame (string fileName, int lineNumber);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The file name.\n    - id: lineNumber\n      type: System.Int32\n      description: The line number in the specified file.\n  overload: System.Diagnostics.StackFrame.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)\n  commentId: M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)\n  id: '#ctor(System.String,System.Int32,System.Int32)'\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: StackFrame(String, Int32, Int32)\n  nameWithType: StackFrame.StackFrame(String, Int32, Int32)\n  fullName: StackFrame.StackFrame(String, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.StackFrame\"></xref> class that contains only the given file name, line number, and column number.\n  remarks: Use this constructor when you do not want to use the debugger's line mapping logic.\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.%23ctor%2A> constructor. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#6)]\\n [!code-csharp[StackFrameSample1#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#6)]\\n [!code-vb[StackFrameSample1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#6)]\"\n  syntax:\n    content: public StackFrame (string fileName, int lineNumber, int colNumber);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The file name.\n    - id: lineNumber\n      type: System.Int32\n      description: The line number in the specified file.\n    - id: colNumber\n      type: System.Int32\n      description: The column number in the specified file.\n  overload: System.Diagnostics.StackFrame.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.GetFileColumnNumber\n  commentId: M:System.Diagnostics.StackFrame.GetFileColumnNumber\n  id: GetFileColumnNumber\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: GetFileColumnNumber()\n  nameWithType: StackFrame.GetFileColumnNumber()\n  fullName: StackFrame.GetFileColumnNumber()\n  type: Method\n  assemblies:\n  - System.Diagnostics.StackTrace\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.GetFileColumnNumber%2A> method. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#7](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#7)]\\n [!code-csharp[StackFrameSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#7)]\\n [!code-vb[StackFrameSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#7)]\"\n  syntax:\n    content: public virtual int GetFileColumnNumber ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The file column number, or 0 (zero) if the file column number cannot be determined.\n  overload: System.Diagnostics.StackFrame.GetFileColumnNumber*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.GetFileLineNumber\n  commentId: M:System.Diagnostics.StackFrame.GetFileLineNumber\n  id: GetFileLineNumber\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: GetFileLineNumber()\n  nameWithType: StackFrame.GetFileLineNumber()\n  fullName: StackFrame.GetFileLineNumber()\n  type: Method\n  assemblies:\n  - System.Diagnostics.StackTrace\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.GetFileLineNumber%2A> method. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#7](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#7)]\\n [!code-csharp[StackFrameSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#7)]\\n [!code-vb[StackFrameSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#7)]\"\n  syntax:\n    content: public virtual int GetFileLineNumber ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The file line number, or 0 (zero) if the file line number cannot be determined.\n  overload: System.Diagnostics.StackFrame.GetFileLineNumber*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.GetFileName\n  commentId: M:System.Diagnostics.StackFrame.GetFileName\n  id: GetFileName\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: GetFileName()\n  nameWithType: StackFrame.GetFileName()\n  fullName: StackFrame.GetFileName()\n  type: Method\n  assemblies:\n  - System.Diagnostics.StackTrace\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.GetFileName%2A> method. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#7](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#7)]\\n [!code-csharp[StackFrameSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#7)]\\n [!code-vb[StackFrameSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#7)]\"\n  syntax:\n    content: public virtual string GetFileName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The file name, or `null` if the file name cannot be determined.\n  overload: System.Diagnostics.StackFrame.GetFileName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.GetILOffset\n  commentId: M:System.Diagnostics.StackFrame.GetILOffset\n  id: GetILOffset\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: GetILOffset()\n  nameWithType: StackFrame.GetILOffset()\n  fullName: StackFrame.GetILOffset()\n  type: Method\n  assemblies:\n  - System.Diagnostics.StackTrace\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing. This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code. The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.GetILOffset%2A> method. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#7](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#7)]\\n [!code-csharp[StackFrameSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#7)]\\n [!code-vb[StackFrameSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#7)]\"\n  syntax:\n    content: public virtual int GetILOffset ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The offset from the start of the MSIL code for the method that is executing.\n  overload: System.Diagnostics.StackFrame.GetILOffset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.GetMethod\n  commentId: M:System.Diagnostics.StackFrame.GetMethod\n  id: GetMethod\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: GetMethod()\n  nameWithType: StackFrame.GetMethod()\n  fullName: StackFrame.GetMethod()\n  type: Method\n  assemblies:\n  - System.Diagnostics.StackTrace\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the method in which the frame is executing.\n  remarks: The method that is currently executing may be inherited from a base class, although it is called in a derived class. In this case, the <xref:System.Reflection.MemberInfo.ReflectedType%2A> property of the <xref:System.Reflection.MethodBase> object that is returned by <xref:System.Diagnostics.StackFrame.GetMethod%2A> identifies the base class, not the derived class.\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.GetMethod%2A> method. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]\\n [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]\\n [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]\"\n  syntax:\n    content: public virtual System.Reflection.MethodBase GetMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodBase\n      description: The method in which the frame is executing.\n  overload: System.Diagnostics.StackFrame.GetMethod*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.GetNativeOffset\n  commentId: M:System.Diagnostics.StackFrame.GetNativeOffset\n  id: GetNativeOffset\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: GetNativeOffset()\n  nameWithType: StackFrame.GetNativeOffset()\n  fullName: StackFrame.GetNativeOffset()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed. The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.GetNativeOffset%2A> method. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#7](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#7)]\\n [!code-csharp[StackFrameSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#7)]\\n [!code-vb[StackFrameSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#7)]\"\n  syntax:\n    content: public virtual int GetNativeOffset ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The offset from the start of the JIT-compiled code for the method that is being executed.\n  overload: System.Diagnostics.StackFrame.GetNativeOffset*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.OFFSET_UNKNOWN\n  commentId: F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN\n  id: OFFSET_UNKNOWN\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: OFFSET_UNKNOWN\n  nameWithType: StackFrame.OFFSET_UNKNOWN\n  fullName: StackFrame.OFFSET_UNKNOWN\n  type: Field\n  assemblies:\n  - System.Diagnostics.StackTrace\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Defines the value that is returned from the <xref href=\"System.Diagnostics.StackFrame.GetNativeOffset\"></xref> or <xref href=\"System.Diagnostics.StackFrame.GetILOffset\"></xref> method when the native or Microsoft intermediate language (MSIL) offset is unknown. This field is constant.\n  remarks: The value of this constant is -1.\n  syntax:\n    content: public const int OFFSET_UNKNOWN = -1;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.StackFrame.ToString\n  commentId: M:System.Diagnostics.StackFrame.ToString\n  id: ToString\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: StackFrame.ToString()\n  fullName: StackFrame.ToString()\n  type: Method\n  assemblies:\n  - System.Diagnostics.StackTrace\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Builds a readable representation of the stack trace.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.StackFrame.ToString%2A> method. This code example is part of a larger example provided for the <xref:System.Diagnostics.StackFrame> class.  \\n  \\n [!code-cpp[StackFrameSample1#3](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#3)]\\n [!code-csharp[StackFrameSample1#3](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#3)]\\n [!code-vb[StackFrameSample1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#3)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A readable representation of the stack trace.\n  overload: System.Diagnostics.StackFrame.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.StackFrame.#ctor\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: StackFrame()\n  nameWithType: StackFrame.StackFrame()\n  fullName: StackFrame.StackFrame()\n- uid: System.Diagnostics.StackFrame.#ctor(System.Boolean)\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: StackFrame(Boolean)\n  nameWithType: StackFrame.StackFrame(Boolean)\n  fullName: StackFrame.StackFrame(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.StackFrame.#ctor(System.Int32)\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: StackFrame(Int32)\n  nameWithType: StackFrame.StackFrame(Int32)\n  fullName: StackFrame.StackFrame(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: StackFrame(Int32, Boolean)\n  nameWithType: StackFrame.StackFrame(Int32, Boolean)\n  fullName: StackFrame.StackFrame(Int32, Boolean)\n- uid: System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: StackFrame(String, Int32)\n  nameWithType: StackFrame.StackFrame(String, Int32)\n  fullName: StackFrame.StackFrame(String, Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: StackFrame(String, Int32, Int32)\n  nameWithType: StackFrame.StackFrame(String, Int32, Int32)\n  fullName: StackFrame.StackFrame(String, Int32, Int32)\n- uid: System.Diagnostics.StackFrame.GetFileColumnNumber\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetFileColumnNumber()\n  nameWithType: StackFrame.GetFileColumnNumber()\n  fullName: StackFrame.GetFileColumnNumber()\n- uid: System.Diagnostics.StackFrame.GetFileLineNumber\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetFileLineNumber()\n  nameWithType: StackFrame.GetFileLineNumber()\n  fullName: StackFrame.GetFileLineNumber()\n- uid: System.Diagnostics.StackFrame.GetFileName\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetFileName()\n  nameWithType: StackFrame.GetFileName()\n  fullName: StackFrame.GetFileName()\n- uid: System.Diagnostics.StackFrame.GetILOffset\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetILOffset()\n  nameWithType: StackFrame.GetILOffset()\n  fullName: StackFrame.GetILOffset()\n- uid: System.Diagnostics.StackFrame.GetMethod\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetMethod()\n  nameWithType: StackFrame.GetMethod()\n  fullName: StackFrame.GetMethod()\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Diagnostics.StackFrame.GetNativeOffset\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetNativeOffset()\n  nameWithType: StackFrame.GetNativeOffset()\n  fullName: StackFrame.GetNativeOffset()\n- uid: System.Diagnostics.StackFrame.OFFSET_UNKNOWN\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: OFFSET_UNKNOWN\n  nameWithType: StackFrame.OFFSET_UNKNOWN\n  fullName: StackFrame.OFFSET_UNKNOWN\n- uid: System.Diagnostics.StackFrame.ToString\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: ToString()\n  nameWithType: StackFrame.ToString()\n  fullName: StackFrame.ToString()\n- uid: System.Diagnostics.StackFrame.#ctor*\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: StackFrame\n  nameWithType: StackFrame.StackFrame\n  fullName: StackFrame.StackFrame\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n- uid: System.Diagnostics.StackFrame.GetFileColumnNumber*\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetFileColumnNumber\n  nameWithType: StackFrame.GetFileColumnNumber\n  fullName: StackFrame.GetFileColumnNumber\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n- uid: System.Diagnostics.StackFrame.GetFileLineNumber*\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetFileLineNumber\n  nameWithType: StackFrame.GetFileLineNumber\n  fullName: StackFrame.GetFileLineNumber\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n- uid: System.Diagnostics.StackFrame.GetFileName*\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetFileName\n  nameWithType: StackFrame.GetFileName\n  fullName: StackFrame.GetFileName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n- uid: System.Diagnostics.StackFrame.GetILOffset*\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetILOffset\n  nameWithType: StackFrame.GetILOffset\n  fullName: StackFrame.GetILOffset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n- uid: System.Diagnostics.StackFrame.GetMethod*\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetMethod\n  nameWithType: StackFrame.GetMethod\n  fullName: StackFrame.GetMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n- uid: System.Diagnostics.StackFrame.GetNativeOffset*\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: GetNativeOffset\n  nameWithType: StackFrame.GetNativeOffset\n  fullName: StackFrame.GetNativeOffset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n- uid: System.Diagnostics.StackFrame.ToString*\n  parent: System.Diagnostics.StackFrame\n  isExternal: false\n  name: ToString\n  nameWithType: StackFrame.ToString\n  fullName: StackFrame.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/StackFrame.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n  parent: System.Diagnostics.StackFrameExtensions\n  isExternal: false\n  name: GetNativeImageBase(StackFrame)\n  nameWithType: StackFrameExtensions.GetNativeImageBase(StackFrame)\n  fullName: StackFrameExtensions.GetNativeImageBase(StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n  parent: System.Diagnostics.StackFrameExtensions\n  isExternal: false\n  name: GetNativeIP(StackFrame)\n  nameWithType: StackFrameExtensions.GetNativeIP(StackFrame)\n  fullName: StackFrameExtensions.GetNativeIP(StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n  parent: System.Diagnostics.StackFrameExtensions\n  isExternal: false\n  name: HasILOffset(StackFrame)\n  nameWithType: StackFrameExtensions.HasILOffset(StackFrame)\n  fullName: StackFrameExtensions.HasILOffset(StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n  parent: System.Diagnostics.StackFrameExtensions\n  isExternal: false\n  name: HasMethod(StackFrame)\n  nameWithType: StackFrameExtensions.HasMethod(StackFrame)\n  fullName: StackFrameExtensions.HasMethod(StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n  parent: System.Diagnostics.StackFrameExtensions\n  isExternal: false\n  name: HasNativeImage(StackFrame)\n  nameWithType: StackFrameExtensions.HasNativeImage(StackFrame)\n  fullName: StackFrameExtensions.HasNativeImage(StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n  parent: System.Diagnostics.StackFrameExtensions\n  isExternal: false\n  name: HasSource(StackFrame)\n  nameWithType: StackFrameExtensions.HasSource(StackFrame)\n  fullName: StackFrameExtensions.HasSource(StackFrame)\n"}