{"nodes":[{"content":"Represents a log record that has been appended to a sequence.","nodes":[{"pos":[0,61],"content":"Represents a log record that has been appended to a sequence.","nodes":[{"content":"Represents a log record that has been appended to a sequence.","pos":[0,61]}]}],"pos":[534,596],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Log.LogRecord\"></xref> class.","nodes":[{"pos":[0,85],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogRecord\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IO.Log.LogRecord\"></xref> class."}],"pos":[1882,1968],"yaml":true},{"content":"When overridden in a derived class, gets a stream that contains the record data.","nodes":[{"pos":[0,80],"content":"When overridden in a derived class, gets a stream that contains the record data.","nodes":[{"content":"When overridden in a derived class, gets a stream that contains the record data.","pos":[0,80]}]}],"pos":[2916,2997],"yaml":true},{"content":"A stream that contains the record data.","nodes":[{"pos":[0,39],"content":"A stream that contains the record data.","nodes":[{"content":"A stream that contains the record data.","pos":[0,39]}]}],"pos":[3127,3167],"yaml":true},{"content":"The <xref href=\"System.IO.Log.LogRecord\"></xref> has been disposed of.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogRecord\"&gt;&lt;/xref&gt;</ph> has been disposed of.","source":"The <xref href=\"System.IO.Log.LogRecord\"></xref> has been disposed of."}],"pos":[3329,3400],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.IO.Log.LogRecord\"></xref>.","nodes":[{"pos":[0,80],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogRecord\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.IO.Log.LogRecord\"></xref>."}],"pos":[4244,4325],"yaml":true},{"content":"You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance. The <xref:System.IO.Log.LogRecord.Dispose%2A> method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state. After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying.  \n  \n> [!NOTE]\n>  Always call <xref:System.IO.Log.LogRecord.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogRecord> instance. Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method.","nodes":[{"pos":[0,444],"content":"You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance. The <xref:System.IO.Log.LogRecord.Dispose%2A> method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state. After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying.","nodes":[{"content":"You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance. The <xref:System.IO.Log.LogRecord.Dispose%2A> method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state. After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying.","pos":[0,444],"nodes":[{"content":"You should call this method when you finish using the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance.","pos":[0,94],"source":"You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Log.LogRecord.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance in an unusable state.","pos":[95,220],"source":" The <xref:System.IO.Log.LogRecord.Dispose%2A> method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state."},{"content":"After calling this method, you must release all references to the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance, so that the garbage collector can reclaim the memory that the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance was occupying.","pos":[221,444],"source":" After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying."}]}]},{"pos":[452,755],"content":"[!NOTE]\n Always call <xref:System.IO.Log.LogRecord.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogRecord> instance. Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.IO.Log.LogRecord.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogRecord> instance. Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method.","pos":[8,301],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.IO.Log.LogRecord.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance.","pos":[1,141],"source":" Always call <xref:System.IO.Log.LogRecord.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogRecord> instance."},{"content":"Otherwise, the resources it is using cannot be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogRecord&gt;</ph> instance's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[142,293],"source":" Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method."}]}]}],"pos":[4336,5097],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, gets the sequence number of the previous record.","nodes":[{"pos":[0,84],"content":"When overridden in a derived class, gets the sequence number of the previous record.","nodes":[{"content":"When overridden in a derived class, gets the sequence number of the previous record.","pos":[0,84]}]}],"pos":[6080,6165],"yaml":true},{"content":"The value of this property is the sequence number that was provided as the `previousUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","nodes":[{"pos":[0,268],"content":"The value of this property is the sequence number that was provided as the `previousUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","nodes":[{"content":"The value of this property is the sequence number that was provided as the <ph id=\"ph1\">`previousUndoRecord`</ph> parameter in the <ph id=\"ph2\">&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;</ph> method.","pos":[0,167],"source":"The value of this property is the sequence number that was provided as the `previousUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method."},{"content":"Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","pos":[168,268]}]}],"pos":[6176,6445],"yaml":true,"extradata":"MT"},{"content":"The sequence number of the previous record.","nodes":[{"pos":[0,43],"content":"The sequence number of the previous record.","nodes":[{"content":"The sequence number of the previous record.","pos":[0,43]}]}],"pos":[6603,6647],"yaml":true},{"content":"When overridden in a derived class, gets the sequence number of this record.","nodes":[{"pos":[0,76],"content":"When overridden in a derived class, gets the sequence number of this record.","nodes":[{"content":"When overridden in a derived class, gets the sequence number of this record.","pos":[0,76]}]}],"pos":[7592,7669],"yaml":true},{"content":"The sequence number of this record.","nodes":[{"pos":[0,35],"content":"The sequence number of this record.","nodes":[{"content":"The sequence number of this record.","pos":[0,35]}]}],"pos":[7833,7869],"yaml":true},{"content":"When overridden in a derived class, gets the sequence number of the next record.","nodes":[{"pos":[0,80],"content":"When overridden in a derived class, gets the sequence number of the next record.","nodes":[{"content":"When overridden in a derived class, gets the sequence number of the next record.","pos":[0,80]}]}],"pos":[8760,8841],"yaml":true},{"content":"The value of this property is the sequence number that was provided as the `nextUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","nodes":[{"pos":[0,264],"content":"The value of this property is the sequence number that was provided as the `nextUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","nodes":[{"content":"The value of this property is the sequence number that was provided as the <ph id=\"ph1\">`nextUndoRecord`</ph> parameter in the <ph id=\"ph2\">&lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;</ph> method.","pos":[0,163],"source":"The value of this property is the sequence number that was provided as the `nextUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method."},{"content":"Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.","pos":[164,264]}]}],"pos":[8852,9117],"yaml":true,"extradata":"MT"},{"content":"The sequence number of the next record in the user-specified chain.","nodes":[{"pos":[0,67],"content":"The sequence number of the next record in the user-specified chain.","nodes":[{"content":"The sequence number of the next record in the user-specified chain.","pos":[0,67]}]}],"pos":[9271,9339],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Log.LogRecord\n  commentId: T:System.IO.Log.LogRecord\n  id: LogRecord\n  children:\n  - System.IO.Log.LogRecord.#ctor\n  - System.IO.Log.LogRecord.Data\n  - System.IO.Log.LogRecord.Dispose\n  - System.IO.Log.LogRecord.Previous\n  - System.IO.Log.LogRecord.SequenceNumber\n  - System.IO.Log.LogRecord.User\n  langs:\n  - csharp\n  name: LogRecord\n  nameWithType: LogRecord\n  fullName: System.IO.Log.LogRecord\n  type: Class\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Represents a log record that has been appended to a sequence.\n  syntax:\n    content: 'public abstract class LogRecord : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogRecord.#ctor\n  commentId: M:System.IO.Log.LogRecord.#ctor\n  id: '#ctor'\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: LogRecord()\n  nameWithType: LogRecord.LogRecord()\n  fullName: LogRecord.LogRecord()\n  type: Constructor\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Initializes a new instance of the <xref href=\"System.IO.Log.LogRecord\"></xref> class.\n  syntax:\n    content: protected LogRecord ();\n    parameters: []\n  overload: System.IO.Log.LogRecord.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogRecord.Data\n  commentId: P:System.IO.Log.LogRecord.Data\n  id: Data\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: Data\n  nameWithType: LogRecord.Data\n  fullName: LogRecord.Data\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets a stream that contains the record data.\n  syntax:\n    content: public abstract System.IO.Stream Data { get; }\n    return:\n      type: System.IO.Stream\n      description: A stream that contains the record data.\n  overload: System.IO.Log.LogRecord.Data*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Log.LogRecord\"></xref> has been disposed of.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogRecord.Dispose\n  commentId: M:System.IO.Log.LogRecord.Dispose\n  id: Dispose\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: LogRecord.Dispose()\n  fullName: LogRecord.Dispose()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Releases all resources used by the <xref href=\"System.IO.Log.LogRecord\"></xref>.\n  remarks: \"You should call this method when you finish using the <xref:System.IO.Log.LogRecord> instance. The <xref:System.IO.Log.LogRecord.Dispose%2A> method leaves the <xref:System.IO.Log.LogRecord> instance in an unusable state. After calling this method, you must release all references to the <xref:System.IO.Log.LogRecord> instance, so that the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogRecord> instance was occupying.  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.IO.Log.LogRecord.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogRecord> instance. Otherwise, the resources it is using cannot be freed until the garbage collector calls the <xref:System.IO.Log.LogRecord> instance's `Finalize` method.\"\n  syntax:\n    content: public abstract void Dispose ();\n    parameters: []\n  overload: System.IO.Log.LogRecord.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogRecord.Previous\n  commentId: P:System.IO.Log.LogRecord.Previous\n  id: Previous\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: Previous\n  nameWithType: LogRecord.Previous\n  fullName: LogRecord.Previous\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets the sequence number of the previous record.\n  remarks: The value of this property is the sequence number that was provided as the `previousUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.\n  syntax:\n    content: public abstract System.IO.Log.SequenceNumber Previous { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: The sequence number of the previous record.\n  overload: System.IO.Log.LogRecord.Previous*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogRecord.SequenceNumber\n  commentId: P:System.IO.Log.LogRecord.SequenceNumber\n  id: SequenceNumber\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: SequenceNumber\n  nameWithType: LogRecord.SequenceNumber\n  fullName: LogRecord.SequenceNumber\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets the sequence number of this record.\n  syntax:\n    content: public abstract System.IO.Log.SequenceNumber SequenceNumber { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: The sequence number of this record.\n  overload: System.IO.Log.LogRecord.SequenceNumber*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogRecord.User\n  commentId: P:System.IO.Log.LogRecord.User\n  id: User\n  parent: System.IO.Log.LogRecord\n  langs:\n  - csharp\n  name: User\n  nameWithType: LogRecord.User\n  fullName: LogRecord.User\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets the sequence number of the next record.\n  remarks: The value of this property is the sequence number that was provided as the `nextUndoRecord` parameter in the <xref:System.IO.Log.IRecordSequence.Append%2A> method. Aside from its use in enumeration, this sequence number is treated as opaque by the record sequence.\n  syntax:\n    content: public abstract System.IO.Log.SequenceNumber User { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: The sequence number of the next record in the user-specified chain.\n  overload: System.IO.Log.LogRecord.User*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.IO.Log.LogRecord.#ctor\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: LogRecord()\n  nameWithType: LogRecord.LogRecord()\n  fullName: LogRecord.LogRecord()\n- uid: System.IO.Log.LogRecord.Data\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Data\n  nameWithType: LogRecord.Data\n  fullName: LogRecord.Data\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Log.LogRecord.Dispose\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Dispose()\n  nameWithType: LogRecord.Dispose()\n  fullName: LogRecord.Dispose()\n- uid: System.IO.Log.LogRecord.Previous\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Previous\n  nameWithType: LogRecord.Previous\n  fullName: LogRecord.Previous\n- uid: System.IO.Log.SequenceNumber\n  parent: System.IO.Log\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: SequenceNumber\n  fullName: System.IO.Log.SequenceNumber\n- uid: System.IO.Log.LogRecord.SequenceNumber\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: LogRecord.SequenceNumber\n  fullName: LogRecord.SequenceNumber\n- uid: System.IO.Log.LogRecord.User\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: User\n  nameWithType: LogRecord.User\n  fullName: LogRecord.User\n- uid: System.IO.Log.LogRecord.#ctor*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: LogRecord\n  nameWithType: LogRecord.LogRecord\n  fullName: LogRecord.LogRecord\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n- uid: System.IO.Log.LogRecord.Data*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Data\n  nameWithType: LogRecord.Data\n  fullName: LogRecord.Data\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n- uid: System.IO.Log.LogRecord.Dispose*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Dispose\n  nameWithType: LogRecord.Dispose\n  fullName: LogRecord.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n- uid: System.IO.Log.LogRecord.Previous*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: Previous\n  nameWithType: LogRecord.Previous\n  fullName: LogRecord.Previous\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n- uid: System.IO.Log.LogRecord.SequenceNumber*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: LogRecord.SequenceNumber\n  fullName: LogRecord.SequenceNumber\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n- uid: System.IO.Log.LogRecord.User*\n  parent: System.IO.Log.LogRecord\n  isExternal: false\n  name: User\n  nameWithType: LogRecord.User\n  fullName: LogRecord.User\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogRecord.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}