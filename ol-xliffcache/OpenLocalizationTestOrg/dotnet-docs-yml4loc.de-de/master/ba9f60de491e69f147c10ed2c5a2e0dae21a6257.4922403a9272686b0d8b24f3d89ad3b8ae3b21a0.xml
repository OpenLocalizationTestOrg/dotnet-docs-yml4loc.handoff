{"nodes":[{"content":"Provides functionality to split a string into text elements and to iterate through those text elements.","nodes":[{"pos":[0,103],"content":"Provides functionality to split a string into text elements and to iterate through those text elements.","nodes":[{"content":"Provides functionality to split a string into text elements and to iterate through those text elements.","pos":[0,103]}]}],"pos":[1267,1371],"yaml":true},{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \n  \n The <xref:System.Globalization.StringInfo> class enables you to work with a string as a series of textual elements rather than individual <xref:System.Char> objects.  \n  \n To instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string, you can do either of the following:  \n  \n-   Call the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor and pass it the string that the <xref:System.Globalization.StringInfo> object is to represent as an argument.  \n  \n-   Call the default <xref:System.Globalization.StringInfo.%23ctor> constructor, and assign the string that the <xref:System.Globalization.StringInfo> object is to represent to the <xref:System.Globalization.StringInfo.String%2A> property.  \n  \n You can work with the individual text elements in a string in two ways:  \n  \n-   By enumerating each text element. To do this, you call the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method, and then repeatedly call the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> method on the returned <xref:System.Globalization.TextElementEnumerator> object until the method returns `false`.  \n  \n-   By calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method to retrieve an array that contains the starting index of each text element. You can then retrieve individual text elements by passing these indexes to the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method.  \n  \n The following example illustrates both ways of working with the text elements in a string. It creates two strings:  \n  \n-   `strCombining`, which is a string of Arabic characters that includes three text elements with multiple <xref:System.Char> objects. The first text element is the base character ARABIC LETTER ALEF (U+-627) followed by ARABIC HAMZA BELOW (U+-655) and ARABIC KASRA (U+0650). The second text element is ARABIC LETTER HEH (U+0647) followed by ARABIC FATHA (U+-64E). The third text element is ARABIC LETTTER BEH (U+0628) followed by ARABIC DAMMATAN (U+064C).  \n  \n-   `strSurrogates`, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area. The UTF-16 encoding of each character is a surrogate pair that consists of a high surrogate followed by a low surrogate.  \n  \n Each string is parsed once by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method and then by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method. Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.  \n  \n [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]\n [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]","nodes":[{"pos":[0,720],"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.","nodes":[{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.","pos":[0,121]},{"content":"A text element can be a base character, a surrogate pair, or a combining character sequence.","pos":[122,214]},{"content":"The <bpt id=\"p1\">[</bpt>Unicode Standard<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.","pos":[215,511],"source":" The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate."},{"content":"The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.","pos":[512,646]},{"content":"A surrogate pair can represent a base character or a combining character.","pos":[647,720]}]},{"pos":[727,892],"content":"The <xref:System.Globalization.StringInfo> class enables you to work with a string as a series of textual elements rather than individual <xref:System.Char> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo&gt;</ph> class enables you to work with a string as a series of textual elements rather than individual <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> objects.","pos":[0,165],"source":"The <xref:System.Globalization.StringInfo> class enables you to work with a string as a series of textual elements rather than individual <xref:System.Char> objects."}]},{"pos":[899,1033],"content":"To instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string, you can do either of the following:","nodes":[{"content":"To instantiate a <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo&gt;</ph> object that represents a specified string, you can do either of the following:","pos":[0,134],"source":"To instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string, you can do either of the following:"}]},{"pos":[1043,1239],"content":"Call the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor and pass it the string that the <xref:System.Globalization.StringInfo> object is to represent as an argument.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> constructor and pass it the string that the <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo&gt;</ph> object is to represent as an argument.","pos":[0,196],"source":"Call the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor and pass it the string that the <xref:System.Globalization.StringInfo> object is to represent as an argument."}]},{"pos":[1249,1484],"content":"Call the default <xref:System.Globalization.StringInfo.%23ctor> constructor, and assign the string that the <xref:System.Globalization.StringInfo> object is to represent to the <xref:System.Globalization.StringInfo.String%2A> property.","nodes":[{"content":"Call the default <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.%23ctor&gt;</ph> constructor, and assign the string that the <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo&gt;</ph> object is to represent to the <ph id=\"ph3\">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property.","pos":[0,235],"source":"Call the default <xref:System.Globalization.StringInfo.%23ctor> constructor, and assign the string that the <xref:System.Globalization.StringInfo> object is to represent to the <xref:System.Globalization.StringInfo.String%2A> property."}]},{"pos":[1491,1562],"content":"You can work with the individual text elements in a string in two ways:","nodes":[{"content":"You can work with the individual text elements in a string in two ways:","pos":[0,71]}]},{"pos":[1572,1910],"content":"By enumerating each text element. To do this, you call the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method, and then repeatedly call the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> method on the returned <xref:System.Globalization.TextElementEnumerator> object until the method returns `false`.","nodes":[{"content":"By enumerating each text element.","pos":[0,33]},{"content":"To do this, you call the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method, and then repeatedly call the <ph id=\"ph2\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> method on the returned <ph id=\"ph3\">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object until the method returns <ph id=\"ph4\">`false`</ph>.","pos":[34,338],"source":" To do this, you call the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method, and then repeatedly call the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> method on the returned <xref:System.Globalization.TextElementEnumerator> object until the method returns `false`."}]},{"pos":[1920,2237],"content":"By calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method to retrieve an array that contains the starting index of each text element. You can then retrieve individual text elements by passing these indexes to the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method.","nodes":[{"content":"By calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method to retrieve an array that contains the starting index of each text element. You can then retrieve individual text elements by passing these indexes to the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method.","pos":[0,317],"nodes":[{"content":"By calling the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> method to retrieve an array that contains the starting index of each text element.","pos":[0,164],"source":"By calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method to retrieve an array that contains the starting index of each text element."},{"content":"You can then retrieve individual text elements by passing these indexes to the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> method.","pos":[165,317],"source":" You can then retrieve individual text elements by passing these indexes to the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method."}]}]},{"pos":[2244,2358],"content":"The following example illustrates both ways of working with the text elements in a string. It creates two strings:","nodes":[{"content":"The following example illustrates both ways of working with the text elements in a string. It creates two strings:","pos":[0,114],"nodes":[{"content":"The following example illustrates both ways of working with the text elements in a string.","pos":[0,90]},{"content":"It creates two strings:","pos":[91,114]}]}]},{"pos":[2368,2819],"content":"`strCombining`, which is a string of Arabic characters that includes three text elements with multiple <xref:System.Char> objects. The first text element is the base character ARABIC LETTER ALEF (U+-627) followed by ARABIC HAMZA BELOW (U+-655) and ARABIC KASRA (U+0650). The second text element is ARABIC LETTER HEH (U+0647) followed by ARABIC FATHA (U+-64E). The third text element is ARABIC LETTTER BEH (U+0628) followed by ARABIC DAMMATAN (U+064C).","nodes":[{"content":"<ph id=\"ph1\">`strCombining`</ph>, which is a string of Arabic characters that includes three text elements with multiple <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> objects.","pos":[0,130],"source":"`strCombining`, which is a string of Arabic characters that includes three text elements with multiple <xref:System.Char> objects."},{"content":"The first text element is the base character ARABIC LETTER ALEF (U+-627) followed by ARABIC HAMZA BELOW (U+-655) and ARABIC KASRA (U+0650).","pos":[131,270]},{"content":"The second text element is ARABIC LETTER HEH (U+0647) followed by ARABIC FATHA (U+-64E).","pos":[271,359]},{"content":"The third text element is ARABIC LETTTER BEH (U+0628) followed by ARABIC DAMMATAN (U+064C).","pos":[360,451]}]},{"pos":[2829,3194],"content":"`strSurrogates`, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area. The UTF-16 encoding of each character is a surrogate pair that consists of a high surrogate followed by a low surrogate.","nodes":[{"content":"<ph id=\"ph1\">`strSurrogates`</ph>, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area.","pos":[0,244],"source":"`strSurrogates`, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area."},{"content":"The UTF-16 encoding of each character is a surrogate pair that consists of a high surrogate followed by a low surrogate.","pos":[245,365]}]},{"pos":[3201,3515],"content":"Each string is parsed once by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method and then by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method. Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.","nodes":[{"content":"Each string is parsed once by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method and then by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method. Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.","pos":[0,314],"nodes":[{"content":"Each string is parsed once by the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> method and then by the <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method.","pos":[0,198],"source":"Each string is parsed once by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method and then by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method."},{"content":"Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.","pos":[199,314]}]}]},{"pos":[3522,3847],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.StringInfo.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.StringInfo.Class#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]\n[!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]"}],"pos":[1382,5257],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Globalization.StringInfo\"></xref> class.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Globalization.StringInfo\"></xref> class."}],"pos":[7811,7905],"yaml":true},{"content":"The value of the new <xref:System.Globalization.StringInfo> object is initialized to the empty string (\"\"). You can assign another string to it by using the <xref:System.Globalization.StringInfo.String%2A> property.  You can also instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string in a single step by calling the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.","nodes":[{"pos":[0,435],"content":"The value of the new <xref:System.Globalization.StringInfo> object is initialized to the empty string (\"\"). You can assign another string to it by using the <xref:System.Globalization.StringInfo.String%2A> property.  You can also instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string in a single step by calling the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.","nodes":[{"content":"The value of the new <xref:System.Globalization.StringInfo> object is initialized to the empty string (\"\"). You can assign another string to it by using the <xref:System.Globalization.StringInfo.String%2A> property.  You can also instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string in a single step by calling the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.","pos":[0,435],"nodes":[{"content":"The value of the new <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo&gt;</ph> object is initialized to the empty string (\"\").","pos":[0,107],"source":"The value of the new <xref:System.Globalization.StringInfo> object is initialized to the empty string (\"\")."},{"content":"You can assign another string to it by using the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property.","pos":[108,215],"source":" You can assign another string to it by using the <xref:System.Globalization.StringInfo.String%2A> property."},{"content":"You can also instantiate a <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo&gt;</ph> object that represents a specified string in a single step by calling the <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> constructor.","pos":[217,435],"source":"  You can also instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string in a single step by calling the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor."}]}]}],"pos":[7916,8352],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Globalization.StringInfo\"></xref> class to a specified string.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> class to a specified string.","source":"Initializes a new instance of the <xref href=\"System.Globalization.StringInfo\"></xref> class to a specified string."}],"pos":[10002,10118],"yaml":true},{"content":"This constructor assigns the value argument to the object's <xref:System.Globalization.StringInfo.String%2A> property.","nodes":[{"pos":[0,118],"content":"This constructor assigns the value argument to the object's <xref:System.Globalization.StringInfo.String%2A> property.","nodes":[{"content":"This constructor assigns the value argument to the object's <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property.","pos":[0,118],"source":"This constructor assigns the value argument to the object's <xref:System.Globalization.StringInfo.String%2A> property."}]}],"pos":[10129,10248],"yaml":true,"extradata":"MT"},{"content":"A string to initialize this <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,88],"content":"A string to initialize this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"A string to initialize this <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[10382,10471],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[10638,10668],"yaml":true},{"content":"Indicates whether the current <xref href=\"System.Globalization.StringInfo\"></xref> object is equal to a specified object.","nodes":[{"pos":[0,121],"content":"Indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object is equal to a specified object.","source":"Indicates whether the current <xref href=\"System.Globalization.StringInfo\"></xref> object is equal to a specified object."}],"pos":[12170,12292],"yaml":true},{"content":"An object.","nodes":[{"pos":[0,10],"content":"An object.","nodes":[{"content":"An object.","pos":[0,10]}]}],"pos":[12503,12514],"yaml":true},{"content":"`true` if the <code>value</code> parameter is a <xref href=\"System.Globalization.StringInfo\"></xref> object and its <xref href=\"System.Globalization.StringInfo.String\"></xref> property equals the <xref href=\"System.Globalization.StringInfo.String\"></xref> property of this <xref href=\"System.Globalization.StringInfo\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,353],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a <ph id=\"ph3\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object and its <ph id=\"ph4\">&lt;xref href=\"System.Globalization.StringInfo.String\"&gt;&lt;/xref&gt;</ph> property equals the <ph id=\"ph5\">&lt;xref href=\"System.Globalization.StringInfo.String\"&gt;&lt;/xref&gt;</ph> property of this <ph id=\"ph6\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph7\">`false`</ph>.","source":"`true` if the <code>value</code> parameter is a <xref href=\"System.Globalization.StringInfo\"></xref> object and its <xref href=\"System.Globalization.StringInfo.String\"></xref> property equals the <xref href=\"System.Globalization.StringInfo.String\"></xref> property of this <xref href=\"System.Globalization.StringInfo\"></xref> object; otherwise, `false`."}],"pos":[12572,12928],"yaml":true},{"content":"Calculates a hash code for the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,112],"content":"Calculates a hash code for the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Calculates a hash code for the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[14541,14654],"yaml":true},{"content":"The behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another. This might happen to improve the performance of <xref:System.Globalization.StringInfo.GetHashCode%2A>. To make the behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, the application should override the runtime implementation of <xref:System.Globalization.StringInfo.GetHashCode%2A> with an implementation known to never change.","nodes":[{"pos":[0,537],"content":"The behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another. This might happen to improve the performance of <xref:System.Globalization.StringInfo.GetHashCode%2A>. To make the behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, the application should override the runtime implementation of <xref:System.Globalization.StringInfo.GetHashCode%2A> with an implementation known to never change.","nodes":[{"content":"The behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another. This might happen to improve the performance of <xref:System.Globalization.StringInfo.GetHashCode%2A>. To make the behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, the application should override the runtime implementation of <xref:System.Globalization.StringInfo.GetHashCode%2A> with an implementation known to never change.","pos":[0,537],"nodes":[{"content":"The behavior of <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> is dependent on its implementation, which might change from one version of the common language runtime to another.","pos":[0,184],"source":"The behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another."},{"content":"This might happen to improve the performance of <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph>.","pos":[185,287],"source":" This might happen to improve the performance of <xref:System.Globalization.StringInfo.GetHashCode%2A>."},{"content":"To make the behavior of <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> constant, the application should override the runtime implementation of <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.GetHashCode%2A&gt;</ph> with an implementation known to never change.","pos":[288,537],"source":" To make the behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, the application should override the runtime implementation of <xref:System.Globalization.StringInfo.GetHashCode%2A> with an implementation known to never change."}]}]}],"pos":[14665,15203],"yaml":true,"extradata":"MT"},{"content":"A 32-bit signed integer hash code based on the string value of this <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,128],"content":"A 32-bit signed integer hash code based on the string value of this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"A 32-bit signed integer hash code based on the string value of this <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[15404,15533],"yaml":true},{"content":"Gets the first text element in a specified string.","nodes":[{"pos":[0,50],"content":"Gets the first text element in a specified string.","nodes":[{"content":"Gets the first text element in a specified string.","pos":[0,50]}]}],"pos":[17256,17307],"yaml":true},{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \n  \n This method only returns the first text element. To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> object generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.","nodes":[{"pos":[0,768],"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.","nodes":[{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.","pos":[0,121]},{"content":"A text element can be a base character, a surrogate pair, or a combining character sequence.","pos":[122,214]},{"content":"The <bpt id=\"p1\">[</bpt>Unicode Standard<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.","pos":[215,511],"source":" The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate."},{"content":"The <bpt id=\"p1\">[</bpt>Unicode Standard<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a combining character sequence as a combination of a base character and one or more combining characters.","pos":[512,694],"source":" The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters."},{"content":"A surrogate pair can represent a base character or a combining character.","pos":[695,768]}]},{"pos":[775,1055],"content":"This method only returns the first text element. To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> object generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.","nodes":[{"content":"This method only returns the first text element. To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> object generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.","pos":[0,280],"nodes":[{"content":"This method only returns the first text element.","pos":[0,48]},{"content":"To iterate through the text elements of the string, the application should use the <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object generated by the <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method.","pos":[49,280],"source":" To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> object generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method."}]}]}],"pos":[17318,18378],"yaml":true,"extradata":"MT"},{"content":"The string from which to get the text element.","nodes":[{"pos":[0,46],"content":"The string from which to get the text element.","nodes":[{"content":"The string from which to get the text element.","pos":[0,46]}]}],"pos":[18530,18577],"yaml":true},{"content":"A string containing the first text element in the specified string.","nodes":[{"pos":[0,67],"content":"A string containing the first text element in the specified string.","nodes":[{"content":"A string containing the first text element in the specified string.","pos":[0,67]}]}],"pos":[18634,18702],"yaml":true},{"content":"<code>str</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;str&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>str</code> is `null`."}],"pos":[18882,18910],"yaml":true},{"content":"Gets the text element at the specified index of the specified string.","nodes":[{"pos":[0,69],"content":"Gets the text element at the specified index of the specified string.","nodes":[{"content":"Gets the text element at the specified index of the specified string.","pos":[0,69]}]}],"pos":[20544,20614],"yaml":true},{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \n  \n This method only returns the first text element of the substring that starts at the specified index. To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.","nodes":[{"pos":[0,720],"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.","nodes":[{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.","pos":[0,121]},{"content":"A text element can be a base character, a surrogate pair, or a combining character sequence.","pos":[122,214]},{"content":"The <bpt id=\"p1\">[</bpt>Unicode Standard<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.","pos":[215,511],"source":" The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate."},{"content":"The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.","pos":[512,646]},{"content":"A surrogate pair can represent a base character or a combining character.","pos":[647,720]}]},{"pos":[727,1052],"content":"This method only returns the first text element of the substring that starts at the specified index. To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.","nodes":[{"content":"This method only returns the first text element of the substring that starts at the specified index. To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.","pos":[0,325],"nodes":[{"content":"This method only returns the first text element of the substring that starts at the specified index.","pos":[0,100]},{"content":"To iterate through the text elements of the string, the application should use the <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> generated by the <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A&gt;</ph> method.","pos":[101,325],"source":" To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method."}]}]}],"pos":[20625,21682],"yaml":true,"extradata":"MT"},{"content":"The string from which to get the text element.","nodes":[{"pos":[0,46],"content":"The string from which to get the text element.","nodes":[{"content":"The string from which to get the text element.","pos":[0,46]}]}],"pos":[21845,21892],"yaml":true},{"content":"The zero-based index at which the text element starts.","nodes":[{"pos":[0,54],"content":"The zero-based index at which the text element starts.","nodes":[{"content":"The zero-based index at which the text element starts.","pos":[0,54]}]}],"pos":[21952,22007],"yaml":true},{"content":"A string containing the text element at the specified index of the specified string.","nodes":[{"pos":[0,84],"content":"A string containing the text element at the specified index of the specified string.","nodes":[{"content":"A string containing the text element at the specified index of the specified string.","pos":[0,84]}]}],"pos":[22064,22149],"yaml":true},{"content":"<code>str</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;str&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>str</code> is `null`."}],"pos":[22329,22357],"yaml":true},{"content":"<code>index</code> is outside the range of valid indexes for <code>str</code>.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id=\"ph2\">&lt;code&gt;str&lt;/code&gt;</ph>.","source":"<code>index</code> is outside the range of valid indexes for <code>str</code>."}],"pos":[22471,22550],"yaml":true},{"content":"Returns an enumerator that iterates through the text elements of the entire string.","nodes":[{"pos":[0,83],"content":"Returns an enumerator that iterates through the text elements of the entire string.","nodes":[{"content":"Returns an enumerator that iterates through the text elements of the entire string.","pos":[0,83]}]}],"pos":[24160,24244],"yaml":true},{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \n  \n The text element enumerator is used only to read data in the string; it cannot modify the underlying string. The enumerator does not have exclusive access to the string.  \n  \n The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string. When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.  \n  \n Initially, the enumerator is positioned before the first text element in the string. <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position. Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.  \n  \n <xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.  \n  \n After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`. Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.","nodes":[{"pos":[0,720],"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.","nodes":[{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.","pos":[0,121]},{"content":"A text element can be a base character, a surrogate pair, or a combining character sequence.","pos":[122,214]},{"content":"The <bpt id=\"p1\">[</bpt>Unicode Standard<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.","pos":[215,511],"source":" The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate."},{"content":"The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.","pos":[512,646]},{"content":"A surrogate pair can represent a base character or a combining character.","pos":[647,720]}]},{"pos":[727,896],"content":"The text element enumerator is used only to read data in the string; it cannot modify the underlying string. The enumerator does not have exclusive access to the string.","nodes":[{"content":"The text element enumerator is used only to read data in the string; it cannot modify the underlying string. The enumerator does not have exclusive access to the string.","pos":[0,169],"nodes":[{"content":"The text element enumerator is used only to read data in the string; it cannot modify the underlying string.","pos":[0,108]},{"content":"The enumerator does not have exclusive access to the string.","pos":[109,169]}]}]},{"pos":[903,1184],"content":"The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string. When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.","nodes":[{"content":"The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string. When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.","pos":[0,281],"nodes":[{"content":"The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.","pos":[0,147]},{"content":"When the enumerator is in an invalid state, calling <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> throws an exception.","pos":[148,281],"source":" When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception."}]}]},{"pos":[1191,1738],"content":"Initially, the enumerator is positioned before the first text element in the string. <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position. Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first text element in the string. <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position. Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.","pos":[0,547],"nodes":[{"content":"Initially, the enumerator is positioned before the first text element in the string.","pos":[0,84]},{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.","pos":[85,193],"source":" <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"Therefore, after an enumerator is created or after <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, <ph id=\"ph2\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first text element of the string before reading the value of <ph id=\"ph3\">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.","pos":[194,547],"source":" Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>."}]}]},{"pos":[1745,1977],"content":"<xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,232],"source":"<xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called."}]},{"pos":[1984,2346],"content":"After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`. Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.","nodes":[{"content":"After the end of the string is passed, the enumerator is again in an invalid state and calling <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[0,173],"source":"After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> throws an exception if the last call to <ph id=\"ph2\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph3\">`false`</ph>.","pos":[174,362],"source":" Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`."}]}],"pos":[24255,26614],"yaml":true,"extradata":"MT"},{"content":"The string to iterate through.","nodes":[{"pos":[0,30],"content":"The string to iterate through.","nodes":[{"content":"The string to iterate through.","pos":[0,30]}]}],"pos":[27376,27407],"yaml":true},{"content":"A <xref href=\"System.Globalization.TextElementEnumerator\"></xref> for the entire string.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.TextElementEnumerator\"&gt;&lt;/xref&gt;</ph> for the entire string.","source":"A <xref href=\"System.Globalization.TextElementEnumerator\"></xref> for the entire string."}],"pos":[27493,27582],"yaml":true},{"content":"<code>str</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;str&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>str</code> is `null`."}],"pos":[27768,27796],"yaml":true},{"content":"Returns an enumerator that iterates through the text elements of the string, starting at the specified index.","nodes":[{"pos":[0,109],"content":"Returns an enumerator that iterates through the text elements of the string, starting at the specified index.","nodes":[{"content":"Returns an enumerator that iterates through the text elements of the string, starting at the specified index.","pos":[0,109]}]}],"pos":[29466,29576],"yaml":true},{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \n  \n The text element enumerator is used only to read data in the string; it cannot modify the underlying string. The enumerator does not have exclusive access to the string.  \n  \n The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string. When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.  \n  \n Initially, the enumerator is positioned before the first text element in the string. <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position. Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.  \n  \n <xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.  \n  \n After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`. Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.","nodes":[{"pos":[0,720],"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.","nodes":[{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.","pos":[0,121]},{"content":"A text element can be a base character, a surrogate pair, or a combining character sequence.","pos":[122,214]},{"content":"The <bpt id=\"p1\">[</bpt>Unicode Standard<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.","pos":[215,511],"source":" The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate."},{"content":"The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.","pos":[512,646]},{"content":"A surrogate pair can represent a base character or a combining character.","pos":[647,720]}]},{"pos":[727,896],"content":"The text element enumerator is used only to read data in the string; it cannot modify the underlying string. The enumerator does not have exclusive access to the string.","nodes":[{"content":"The text element enumerator is used only to read data in the string; it cannot modify the underlying string. The enumerator does not have exclusive access to the string.","pos":[0,169],"nodes":[{"content":"The text element enumerator is used only to read data in the string; it cannot modify the underlying string.","pos":[0,108]},{"content":"The enumerator does not have exclusive access to the string.","pos":[109,169]}]}]},{"pos":[903,1184],"content":"The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string. When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.","nodes":[{"content":"The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string. When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.","pos":[0,281],"nodes":[{"content":"The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.","pos":[0,147]},{"content":"When the enumerator is in an invalid state, calling <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> throws an exception.","pos":[148,281],"source":" When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception."}]}]},{"pos":[1191,1738],"content":"Initially, the enumerator is positioned before the first text element in the string. <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position. Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first text element in the string. <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position. Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.","pos":[0,547],"nodes":[{"content":"Initially, the enumerator is positioned before the first text element in the string.","pos":[0,84]},{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.","pos":[85,193],"source":" <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"Therefore, after an enumerator is created or after <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, <ph id=\"ph2\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first text element of the string before reading the value of <ph id=\"ph3\">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.","pos":[194,547],"source":" Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>."}]}]},{"pos":[1745,1977],"content":"<xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,232],"source":"<xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called."}]},{"pos":[1984,2346],"content":"After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`. Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.","nodes":[{"content":"After the end of the string is passed, the enumerator is again in an invalid state and calling <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[0,173],"source":"After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> throws an exception if the last call to <ph id=\"ph2\">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph3\">`false`</ph>.","pos":[174,362],"source":" Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`."}]}],"pos":[29587,31946],"yaml":true,"extradata":"MT"},{"content":"The string to iterate through.","nodes":[{"pos":[0,30],"content":"The string to iterate through.","nodes":[{"content":"The string to iterate through.","pos":[0,30]}]}],"pos":[32151,32182],"yaml":true},{"content":"The zero-based index at which to start iterating.","nodes":[{"pos":[0,49],"content":"The zero-based index at which to start iterating.","nodes":[{"content":"The zero-based index at which to start iterating.","pos":[0,49]}]}],"pos":[32242,32292],"yaml":true},{"content":"A <xref href=\"System.Globalization.TextElementEnumerator\"></xref> for the string starting at <code>index</code>.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.TextElementEnumerator\"&gt;&lt;/xref&gt;</ph> for the string starting at <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Globalization.TextElementEnumerator\"></xref> for the string starting at <code>index</code>."}],"pos":[32378,32491],"yaml":true},{"content":"<code>str</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;str&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>str</code> is `null`."}],"pos":[32677,32705],"yaml":true},{"content":"<code>index</code> is outside the range of valid indexes for <code>str</code>.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id=\"ph2\">&lt;code&gt;str&lt;/code&gt;</ph>.","source":"<code>index</code> is outside the range of valid indexes for <code>str</code>."}],"pos":[32819,32898],"yaml":true},{"content":"Gets the number of text elements in the current <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,108],"content":"Gets the number of text elements in the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the number of text elements in the current <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[34417,34526],"yaml":true},{"content":"The number of base characters, surrogate pairs, and combining character sequences in this <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,150],"content":"The number of base characters, surrogate pairs, and combining character sequences in this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"The number of base characters, surrogate pairs, and combining character sequences in this <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[34646,34797],"yaml":true},{"content":"Returns the indexes of each base character, high surrogate, or control character within the specified string.","nodes":[{"pos":[0,109],"content":"Returns the indexes of each base character, high surrogate, or control character within the specified string.","nodes":[{"content":"Returns the indexes of each base character, high surrogate, or control character within the specified string.","pos":[0,109]}]}],"pos":[36490,36600],"yaml":true},{"content":"The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. A high surrogate is a Unicode code point in the range U+D800 through U+DBFF and a low surrogate is a Unicode code point in the range U+DC00 through U+DFFF.  \n  \n A control character is a character for which the Unicode value is U+007F or in the range U+0000 through U+001F or U+0080 through U+009F.  \n  \n The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \n  \n If a combining character sequence is invalid, every combining character in that sequence is also returned.  \n  \n Each index in the resulting array is the beginning of a text element, that is, the index of the base character or the high surrogate.  \n  \n The length of each element is easily computed as the difference between successive indexes. The length of the array will always be less than or equal to the length of the string. For example, given the string \"\\u4f00\\u302a\\ud800\\udc00\\u4f01\", this method returns the indexes 0, 2, and 4.  \n  \n## Equivalent Members  \n Starting in version 2.0 of the .NET Framework, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method and <xref:System.Globalization.StringInfo.LengthInTextElements%2A> property provide an easy to use implementation of the functionality offered by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.","nodes":[{"pos":[0,452],"content":"The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. A high surrogate is a Unicode code point in the range U+D800 through U+DBFF and a low surrogate is a Unicode code point in the range U+DC00 through U+DFFF.","nodes":[{"content":"The <bpt id=\"p1\">[</bpt>Unicode Standard<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.","pos":[0,296],"source":"The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate."},{"content":"A high surrogate is a Unicode code point in the range U+D800 through U+DBFF and a low surrogate is a Unicode code point in the range U+DC00 through U+DFFF.","pos":[297,452]}]},{"pos":[459,595],"content":"A control character is a character for which the Unicode value is U+007F or in the range U+0000 through U+001F or U+0080 through U+009F.","nodes":[{"content":"A control character is a character for which the Unicode value is U+007F or in the range U+0000 through U+001F or U+0080 through U+009F.","pos":[0,136]}]},{"pos":[602,1073],"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.","nodes":[{"content":"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.","pos":[0,121]},{"content":"A text element can be a base character, a surrogate pair, or a combining character sequence.","pos":[122,214]},{"content":"The <bpt id=\"p1\">[</bpt>Unicode Standard<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines a combining character sequence as a combination of a base character and one or more combining characters.","pos":[215,397],"source":" The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters."},{"content":"A surrogate pair can represent a base character or a combining character.","pos":[398,471]}]},{"pos":[1080,1186],"content":"If a combining character sequence is invalid, every combining character in that sequence is also returned.","nodes":[{"content":"If a combining character sequence is invalid, every combining character in that sequence is also returned.","pos":[0,106]}]},{"pos":[1193,1326],"content":"Each index in the resulting array is the beginning of a text element, that is, the index of the base character or the high surrogate.","nodes":[{"content":"Each index in the resulting array is the beginning of a text element, that is, the index of the base character or the high surrogate.","pos":[0,133]}]},{"pos":[1333,1620],"content":"The length of each element is easily computed as the difference between successive indexes. The length of the array will always be less than or equal to the length of the string. For example, given the string \"\\u4f00\\u302a\\ud800\\udc00\\u4f01\", this method returns the indexes 0, 2, and 4.","nodes":[{"content":"The length of each element is easily computed as the difference between successive indexes. The length of the array will always be less than or equal to the length of the string. For example, given the string \"\\u4f00\\u302a\\ud800\\udc00\\u4f01\", this method returns the indexes 0, 2, and 4.","pos":[0,287],"nodes":[{"content":"The length of each element is easily computed as the difference between successive indexes.","pos":[0,91]},{"content":"The length of the array will always be less than or equal to the length of the string.","pos":[92,178]},{"content":"For example, given the string \"\\u4f00\\u302a\\ud800\\udc00\\u4f01\", this method returns the indexes 0, 2, and 4.","pos":[179,287]}]}]},{"pos":[1629,1647],"content":"Equivalent Members","linkify":"Equivalent Members","nodes":[{"content":"Equivalent Members","pos":[0,18]}]},{"pos":[1651,1999],"content":"Starting in version 2.0 of the .NET Framework, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method and <xref:System.Globalization.StringInfo.LengthInTextElements%2A> property provide an easy to use implementation of the functionality offered by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.","nodes":[{"content":"Starting in version 2.0 of the .NET Framework, the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> method and <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.LengthInTextElements%2A&gt;</ph> property provide an easy to use implementation of the functionality offered by the <ph id=\"ph3\">&lt;xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A&gt;</ph> method.","pos":[0,348],"source":"Starting in version 2.0 of the .NET Framework, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method and <xref:System.Globalization.StringInfo.LengthInTextElements%2A> property provide an easy to use implementation of the functionality offered by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method."}]}],"pos":[36611,38633],"yaml":true,"extradata":"MT"},{"content":"The string to search.","nodes":[{"pos":[0,21],"content":"The string to search.","nodes":[{"content":"The string to search.","pos":[0,21]}]}],"pos":[39358,39380],"yaml":true},{"content":"An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.","nodes":[{"pos":[0,147],"content":"An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.","nodes":[{"content":"An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.","pos":[0,147]}]}],"pos":[39438,39586],"yaml":true},{"content":"<code>str</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;str&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>str</code> is `null`."}],"pos":[39772,39800],"yaml":true},{"content":"Gets or sets the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,98],"content":"Gets or sets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[41235,41334],"yaml":true},{"content":"When a <xref:System.Globalization.StringInfo> object is instantiated, its <xref:System.Globalization.StringInfo.String%2A> property is set to one of the following values:  \n  \n-   <xref:System.String?displayProperty=fullName> if the default  <xref:System.Globalization.StringInfo.%23ctor> is called. You should then use the <xref:System.Globalization.StringInfo.String%2A> property to assign the string that this <xref:System.Globalization.StringInfo> object rperesents.  \n  \n-   The string supplied as the `value` argument to the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.","nodes":[{"pos":[0,170],"content":"When a <xref:System.Globalization.StringInfo> object is instantiated, its <xref:System.Globalization.StringInfo.String%2A> property is set to one of the following values:","nodes":[{"content":"When a <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo&gt;</ph> object is instantiated, its <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property is set to one of the following values:","pos":[0,170],"source":"When a <xref:System.Globalization.StringInfo> object is instantiated, its <xref:System.Globalization.StringInfo.String%2A> property is set to one of the following values:"}]},{"pos":[180,470],"content":"<xref:System.String?displayProperty=fullName> if the default  <xref:System.Globalization.StringInfo.%23ctor> is called. You should then use the <xref:System.Globalization.StringInfo.String%2A> property to assign the string that this <xref:System.Globalization.StringInfo> object rperesents.","nodes":[{"content":"<xref:System.String?displayProperty=fullName> if the default  <xref:System.Globalization.StringInfo.%23ctor> is called. You should then use the <xref:System.Globalization.StringInfo.String%2A> property to assign the string that this <xref:System.Globalization.StringInfo> object rperesents.","pos":[0,290],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.String?displayProperty=fullName&gt;</ph> if the default  <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.%23ctor&gt;</ph> is called.","pos":[0,119],"source":"<xref:System.String?displayProperty=fullName> if the default  <xref:System.Globalization.StringInfo.%23ctor> is called."},{"content":"You should then use the <ph id=\"ph1\">&lt;xref:System.Globalization.StringInfo.String%2A&gt;</ph> property to assign the string that this <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo&gt;</ph> object rperesents.","pos":[120,290],"source":" You should then use the <xref:System.Globalization.StringInfo.String%2A> property to assign the string that this <xref:System.Globalization.StringInfo> object rperesents."}]}]},{"pos":[480,609],"content":"The string supplied as the <ph id=\"ph1\">`value`</ph> argument to the <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.%23ctor%28System.String%29&gt;</ph> constructor.","source":"The string supplied as the `value` argument to the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor."}],"pos":[41345,41961],"yaml":true,"extradata":"MT"},{"content":"The string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,104],"content":"The string that is the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"The string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[42076,42181],"yaml":true},{"content":"The value in a set operation is `null`.","nodes":[{"pos":[0,39],"content":"The value in a set operation is <ph id=\"ph1\">`null`</ph>.","source":"The value in a set operation is `null`."}],"pos":[42349,42389],"yaml":true},{"content":"Retrieves a substring of text elements from the current <xref href=\"System.Globalization.StringInfo\"></xref> object starting from a specified text element and continuing through the last text element.","nodes":[{"pos":[0,200],"content":"Retrieves a substring of text elements from the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object starting from a specified text element and continuing through the last text element.","source":"Retrieves a substring of text elements from the current <xref href=\"System.Globalization.StringInfo\"></xref> object starting from a specified text element and continuing through the last text element."}],"pos":[43962,44163],"yaml":true},{"content":"Consider a string that consists of five text elements, indexed from 0 through 4. If the `startingTextElement` parameter is 1, the  <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4.","nodes":[{"pos":[0,300],"content":"Consider a string that consists of five text elements, indexed from 0 through 4. If the `startingTextElement` parameter is 1, the  <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4.","nodes":[{"content":"Consider a string that consists of five text elements, indexed from 0 through 4.","pos":[0,80]},{"content":"If the <ph id=\"ph1\">`startingTextElement`</ph> parameter is 1, the  <ph id=\"ph2\">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4.","pos":[81,300],"source":" If the `startingTextElement` parameter is 1, the  <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4."}]}],"pos":[44174,44475],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of a text element in this <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,107],"content":"The zero-based index of a text element in this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"The zero-based index of a text element in this <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[44653,44761],"yaml":true},{"content":"A substring of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object, starting from the text element index specified by the <code>startingTextElement</code> parameter and continuing through the last text element in this object.","nodes":[{"pos":[0,255],"content":"A substring of text elements in this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object, starting from the text element index specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">startingTextElement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter and continuing through the last text element in this object.","source":"A substring of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object, starting from the text element index specified by the <code>startingTextElement</code> parameter and continuing through the last text element in this object."}],"pos":[44818,45074],"yaml":true},{"content":"<code>startingTextElement</code> is less than zero.  \n  \n -or-  \n  \n The string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object is the empty string (\"\").","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;startingTextElement&lt;/code&gt;</ph> is less than zero.","source":"<code>startingTextElement</code> is less than zero."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,198],"content":"The string that is the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object is the empty string (\"\").","source":"The string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object is the empty string (\"\")."}],"pos":[45271,45480],"yaml":true},{"content":"Retrieves a substring of text elements from the current <xref href=\"System.Globalization.StringInfo\"></xref> object starting from a specified text element and continuing through the specified number of text elements.","nodes":[{"pos":[0,216],"content":"Retrieves a substring of text elements from the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object starting from a specified text element and continuing through the specified number of text elements.","source":"Retrieves a substring of text elements from the current <xref href=\"System.Globalization.StringInfo\"></xref> object starting from a specified text element and continuing through the specified number of text elements."}],"pos":[46809,47026],"yaml":true},{"content":"Consider a string that consists of five text elements, indexed from 0 through 4. If the `startingTextElement` parameter is 1 and the `lengthInTextElements` parameter is 3, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3.","nodes":[{"pos":[0,342],"content":"Consider a string that consists of five text elements, indexed from 0 through 4. If the `startingTextElement` parameter is 1 and the `lengthInTextElements` parameter is 3, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3.","nodes":[{"content":"Consider a string that consists of five text elements, indexed from 0 through 4.","pos":[0,80]},{"content":"If the <ph id=\"ph1\">`startingTextElement`</ph> parameter is 1 and the <ph id=\"ph2\">`lengthInTextElements`</ph> parameter is 3, the <ph id=\"ph3\">&lt;xref:System.Globalization.StringInfo.SubstringByTextElements%2A&gt;</ph> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3.","pos":[81,342],"source":" If the `startingTextElement` parameter is 1 and the `lengthInTextElements` parameter is 3, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3."}]}],"pos":[47037,47380],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of a text element in this <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,107],"content":"The zero-based index of a text element in this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"The zero-based index of a text element in this <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[47584,47692],"yaml":true},{"content":"The number of text elements to retrieve.","nodes":[{"pos":[0,40],"content":"The number of text elements to retrieve.","nodes":[{"content":"The number of text elements to retrieve.","pos":[0,40]}]}],"pos":[47767,47808],"yaml":true},{"content":"A substring of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object. The substring consists of the number of text elements specified by the <code>lengthInTextElements</code> parameter and starts from the text element index specified by the <code>startingTextElement</code> parameter.","nodes":[{"pos":[0,312],"content":"A substring of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object. The substring consists of the number of text elements specified by the <code>lengthInTextElements</code> parameter and starts from the text element index specified by the <code>startingTextElement</code> parameter.","nodes":[{"content":"A substring of text elements in this <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,97],"source":"A substring of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object."},{"content":"The substring consists of the number of text elements specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">lengthInTextElements</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter and starts from the text element index specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">startingTextElement</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","pos":[98,312],"source":" The substring consists of the number of text elements specified by the <code>lengthInTextElements</code> parameter and starts from the text element index specified by the <code>startingTextElement</code> parameter."}]}],"pos":[47865,48178],"yaml":true},{"content":"<code>startingTextElement</code> is less than zero.  \n  \n -or-  \n  \n <code>startingTextElement</code> is greater than or equal to the length of the string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object.  \n  \n -or-  \n  \n <code>lengthInTextElements</code> is less than zero.  \n  \n -or-  \n  \n The string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object is the empty string (\"\").  \n  \n -or-  \n  \n <code>startingTextElement</code> + <code>lengthInTextElements</code> specify an index that is greater than the number of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;startingTextElement&lt;/code&gt;</ph> is less than zero.","source":"<code>startingTextElement</code> is less than zero."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,248],"content":"<ph id=\"ph1\">&lt;code&gt;startingTextElement&lt;/code&gt;</ph> is greater than or equal to the length of the string that is the value of the current <ph id=\"ph2\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>startingTextElement</code> is greater than or equal to the length of the string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object."},{"pos":[255,259],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[266,318],"content":"<ph id=\"ph1\">&lt;code&gt;lengthInTextElements&lt;/code&gt;</ph> is less than zero.","source":"<code>lengthInTextElements</code> is less than zero."},{"pos":[325,329],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[336,465],"content":"The string that is the value of the current <ph id=\"ph1\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object is the empty string (\"\").","source":"The string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object is the empty string (\"\")."},{"pos":[472,476],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[483,686],"content":"<ph id=\"ph1\">&lt;code&gt;startingTextElement&lt;/code&gt;</ph><ph id=\"ph2\"> + &lt;code&gt;lengthInTextElements&lt;/code&gt;</ph> specify an index that is greater than the number of text elements in this <ph id=\"ph3\">&lt;xref href=\"System.Globalization.StringInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>startingTextElement</code> + <code>lengthInTextElements</code> specify an index that is greater than the number of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object."}],"pos":[48375,49088],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.StringInfo\n  commentId: T:System.Globalization.StringInfo\n  id: StringInfo\n  children:\n  - System.Globalization.StringInfo.#ctor\n  - System.Globalization.StringInfo.#ctor(System.String)\n  - System.Globalization.StringInfo.Equals(System.Object)\n  - System.Globalization.StringInfo.GetHashCode\n  - System.Globalization.StringInfo.GetNextTextElement(System.String)\n  - System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)\n  - System.Globalization.StringInfo.GetTextElementEnumerator(System.String)\n  - System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)\n  - System.Globalization.StringInfo.LengthInTextElements\n  - System.Globalization.StringInfo.ParseCombiningCharacters(System.String)\n  - System.Globalization.StringInfo.String\n  - System.Globalization.StringInfo.SubstringByTextElements(System.Int32)\n  - System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: StringInfo\n  nameWithType: StringInfo\n  fullName: System.Globalization.StringInfo\n  type: Class\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Provides functionality to split a string into text elements and to iterate through those text elements.\n  remarks: \"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \\n  \\n The <xref:System.Globalization.StringInfo> class enables you to work with a string as a series of textual elements rather than individual <xref:System.Char> objects.  \\n  \\n To instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string, you can do either of the following:  \\n  \\n-   Call the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor and pass it the string that the <xref:System.Globalization.StringInfo> object is to represent as an argument.  \\n  \\n-   Call the default <xref:System.Globalization.StringInfo.%23ctor> constructor, and assign the string that the <xref:System.Globalization.StringInfo> object is to represent to the <xref:System.Globalization.StringInfo.String%2A> property.  \\n  \\n You can work with the individual text elements in a string in two ways:  \\n  \\n-   By enumerating each text element. To do this, you call the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method, and then repeatedly call the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> method on the returned <xref:System.Globalization.TextElementEnumerator> object until the method returns `false`.  \\n  \\n-   By calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method to retrieve an array that contains the starting index of each text element. You can then retrieve individual text elements by passing these indexes to the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method.  \\n  \\n The following example illustrates both ways of working with the text elements in a string. It creates two strings:  \\n  \\n-   `strCombining`, which is a string of Arabic characters that includes three text elements with multiple <xref:System.Char> objects. The first text element is the base character ARABIC LETTER ALEF (U+-627) followed by ARABIC HAMZA BELOW (U+-655) and ARABIC KASRA (U+0650). The second text element is ARABIC LETTER HEH (U+0647) followed by ARABIC FATHA (U+-64E). The third text element is ARABIC LETTTER BEH (U+0628) followed by ARABIC DAMMATAN (U+064C).  \\n  \\n-   `strSurrogates`, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area. The UTF-16 encoding of each character is a surrogate pair that consists of a high surrogate followed by a low surrogate.  \\n  \\n Each string is parsed once by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method and then by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method. Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.  \\n  \\n [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]\\n [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]\"\n  example:\n  - \"This example shows how to use the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> and <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> methods of the <xref:System.Globalization.StringInfo> class to manipulate a string that contains surrogate and combining characters.  \\n  \\n [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]\\n [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]\\n [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class StringInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.#ctor\n  commentId: M:System.Globalization.StringInfo.#ctor\n  id: '#ctor'\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: StringInfo()\n  nameWithType: StringInfo.StringInfo()\n  fullName: StringInfo.StringInfo()\n  type: Constructor\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Initializes a new instance of the <xref href=\"System.Globalization.StringInfo\"></xref> class.\n  remarks: The value of the new <xref:System.Globalization.StringInfo> object is initialized to the empty string (\"\"). You can assign another string to it by using the <xref:System.Globalization.StringInfo.String%2A> property.  You can also instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string in a single step by calling the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.\n  syntax:\n    content: public StringInfo ();\n    parameters: []\n  overload: System.Globalization.StringInfo.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.#ctor(System.String)\n  commentId: M:System.Globalization.StringInfo.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: StringInfo(String)\n  nameWithType: StringInfo.StringInfo(String)\n  fullName: StringInfo.StringInfo(String)\n  type: Constructor\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Initializes a new instance of the <xref href=\"System.Globalization.StringInfo\"></xref> class to a specified string.\n  remarks: This constructor assigns the value argument to the object's <xref:System.Globalization.StringInfo.String%2A> property.\n  syntax:\n    content: public StringInfo (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: A string to initialize this <xref href=\"System.Globalization.StringInfo\"></xref> object.\n  overload: System.Globalization.StringInfo.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.Equals(System.Object)\n  commentId: M:System.Globalization.StringInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: StringInfo.Equals(Object)\n  fullName: StringInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Indicates whether the current <xref href=\"System.Globalization.StringInfo\"></xref> object is equal to a specified object.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>value</code> parameter is a <xref href=\"System.Globalization.StringInfo\"></xref> object and its <xref href=\"System.Globalization.StringInfo.String\"></xref> property equals the <xref href=\"System.Globalization.StringInfo.String\"></xref> property of this <xref href=\"System.Globalization.StringInfo\"></xref> object; otherwise, `false`.'\n  overload: System.Globalization.StringInfo.Equals*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.GetHashCode\n  commentId: M:System.Globalization.StringInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: StringInfo.GetHashCode()\n  fullName: StringInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Calculates a hash code for the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object.\n  remarks: The behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another. This might happen to improve the performance of <xref:System.Globalization.StringInfo.GetHashCode%2A>. To make the behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, the application should override the runtime implementation of <xref:System.Globalization.StringInfo.GetHashCode%2A> with an implementation known to never change.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code based on the string value of this <xref href=\"System.Globalization.StringInfo\"></xref> object.\n  overload: System.Globalization.StringInfo.GetHashCode*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.GetNextTextElement(System.String)\n  commentId: M:System.Globalization.StringInfo.GetNextTextElement(System.String)\n  id: GetNextTextElement(System.String)\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: GetNextTextElement(String)\n  nameWithType: StringInfo.GetNextTextElement(String)\n  fullName: StringInfo.GetNextTextElement(String)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the first text element in a specified string.\n  remarks: \"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \\n  \\n This method only returns the first text element. To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> object generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.\"\n  syntax:\n    content: public static string GetNextTextElement (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: The string from which to get the text element.\n    return:\n      type: System.String\n      description: A string containing the first text element in the specified string.\n  overload: System.Globalization.StringInfo.GetNextTextElement*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>str</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)\n  commentId: M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)\n  id: GetNextTextElement(System.String,System.Int32)\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: GetNextTextElement(String, Int32)\n  nameWithType: StringInfo.GetNextTextElement(String, Int32)\n  fullName: StringInfo.GetNextTextElement(String, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the text element at the specified index of the specified string.\n  remarks: \"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \\n  \\n This method only returns the first text element of the substring that starts at the specified index. To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.\"\n  syntax:\n    content: public static string GetNextTextElement (string str, int index);\n    parameters:\n    - id: str\n      type: System.String\n      description: The string from which to get the text element.\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which the text element starts.\n    return:\n      type: System.String\n      description: A string containing the text element at the specified index of the specified string.\n  overload: System.Globalization.StringInfo.GetNextTextElement*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>str</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the range of valid indexes for <code>str</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.GetTextElementEnumerator(System.String)\n  commentId: M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)\n  id: GetTextElementEnumerator(System.String)\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: GetTextElementEnumerator(String)\n  nameWithType: StringInfo.GetTextElementEnumerator(String)\n  fullName: StringInfo.GetTextElementEnumerator(String)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns an enumerator that iterates through the text elements of the entire string.\n  remarks: \"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \\n  \\n The text element enumerator is used only to read data in the string; it cannot modify the underlying string. The enumerator does not have exclusive access to the string.  \\n  \\n The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string. When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.  \\n  \\n Initially, the enumerator is positioned before the first text element in the string. <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position. Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.  \\n  \\n <xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.  \\n  \\n After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`. Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.\"\n  example:\n  - \"The following code example demonstrates calling the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method. This code example is part of a larger example provided for the <xref:System.Globalization.StringInfo> class.  \\n  \\n [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]\\n [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]\\n [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]\"\n  syntax:\n    content: public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: The string to iterate through.\n    return:\n      type: System.Globalization.TextElementEnumerator\n      description: A <xref href=\"System.Globalization.TextElementEnumerator\"></xref> for the entire string.\n  overload: System.Globalization.StringInfo.GetTextElementEnumerator*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>str</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)\n  commentId: M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)\n  id: GetTextElementEnumerator(System.String,System.Int32)\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: GetTextElementEnumerator(String, Int32)\n  nameWithType: StringInfo.GetTextElementEnumerator(String, Int32)\n  fullName: StringInfo.GetTextElementEnumerator(String, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns an enumerator that iterates through the text elements of the string, starting at the specified index.\n  remarks: \"The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \\n  \\n The text element enumerator is used only to read data in the string; it cannot modify the underlying string. The enumerator does not have exclusive access to the string.  \\n  \\n The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string. When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.  \\n  \\n Initially, the enumerator is positioned before the first text element in the string. <xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position. Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.  \\n  \\n <xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.  \\n  \\n After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`. Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.\"\n  syntax:\n    content: public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);\n    parameters:\n    - id: str\n      type: System.String\n      description: The string to iterate through.\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to start iterating.\n    return:\n      type: System.Globalization.TextElementEnumerator\n      description: A <xref href=\"System.Globalization.TextElementEnumerator\"></xref> for the string starting at <code>index</code>.\n  overload: System.Globalization.StringInfo.GetTextElementEnumerator*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>str</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the range of valid indexes for <code>str</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.LengthInTextElements\n  commentId: P:System.Globalization.StringInfo.LengthInTextElements\n  id: LengthInTextElements\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: LengthInTextElements\n  nameWithType: StringInfo.LengthInTextElements\n  fullName: StringInfo.LengthInTextElements\n  type: Property\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the number of text elements in the current <xref href=\"System.Globalization.StringInfo\"></xref> object.\n  syntax:\n    content: public int LengthInTextElements { get; }\n    return:\n      type: System.Int32\n      description: The number of base characters, surrogate pairs, and combining character sequences in this <xref href=\"System.Globalization.StringInfo\"></xref> object.\n  overload: System.Globalization.StringInfo.LengthInTextElements*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.ParseCombiningCharacters(System.String)\n  commentId: M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)\n  id: ParseCombiningCharacters(System.String)\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: ParseCombiningCharacters(String)\n  nameWithType: StringInfo.ParseCombiningCharacters(String)\n  fullName: StringInfo.ParseCombiningCharacters(String)\n  type: Method\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the indexes of each base character, high surrogate, or control character within the specified string.\n  remarks: \"The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate. A high surrogate is a Unicode code point in the range U+D800 through U+DBFF and a low surrogate is a Unicode code point in the range U+DC00 through U+DFFF.  \\n  \\n A control character is a character for which the Unicode value is U+007F or in the range U+0000 through U+001F or U+0080 through U+009F.  \\n  \\n The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be a base character, a surrogate pair, or a combining character sequence. The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters. A surrogate pair can represent a base character or a combining character.  \\n  \\n If a combining character sequence is invalid, every combining character in that sequence is also returned.  \\n  \\n Each index in the resulting array is the beginning of a text element, that is, the index of the base character or the high surrogate.  \\n  \\n The length of each element is easily computed as the difference between successive indexes. The length of the array will always be less than or equal to the length of the string. For example, given the string \\\"\\\\u4f00\\\\u302a\\\\ud800\\\\udc00\\\\u4f01\\\", this method returns the indexes 0, 2, and 4.  \\n  \\n## Equivalent Members  \\n Starting in version 2.0 of the .NET Framework, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method and <xref:System.Globalization.StringInfo.LengthInTextElements%2A> property provide an easy to use implementation of the functionality offered by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.\"\n  example:\n  - \"The following code example demonstrates calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method. This code example is part of a larger example provided for the <xref:System.Globalization.StringInfo> class.  \\n  \\n [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]\\n [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]\\n [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]\"\n  syntax:\n    content: public static int[] ParseCombiningCharacters (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: The string to search.\n    return:\n      type: System.Int32[]\n      description: An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.\n  overload: System.Globalization.StringInfo.ParseCombiningCharacters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>str</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.String\n  commentId: P:System.Globalization.StringInfo.String\n  id: String\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: String\n  nameWithType: StringInfo.String\n  fullName: StringInfo.String\n  type: Property\n  assemblies:\n  - System.Globalization\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets or sets the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object.\n  remarks: \"When a <xref:System.Globalization.StringInfo> object is instantiated, its <xref:System.Globalization.StringInfo.String%2A> property is set to one of the following values:  \\n  \\n-   <xref:System.String?displayProperty=fullName> if the default  <xref:System.Globalization.StringInfo.%23ctor> is called. You should then use the <xref:System.Globalization.StringInfo.String%2A> property to assign the string that this <xref:System.Globalization.StringInfo> object rperesents.  \\n  \\n-   The string supplied as the `value` argument to the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.\"\n  syntax:\n    content: public string String { get; set; }\n    return:\n      type: System.String\n      description: The string that is the value of the current <xref href=\"System.Globalization.StringInfo\"></xref> object.\n  overload: System.Globalization.StringInfo.String*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value in a set operation is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.SubstringByTextElements(System.Int32)\n  commentId: M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)\n  id: SubstringByTextElements(System.Int32)\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: SubstringByTextElements(Int32)\n  nameWithType: StringInfo.SubstringByTextElements(Int32)\n  fullName: StringInfo.SubstringByTextElements(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Retrieves a substring of text elements from the current <xref href=\"System.Globalization.StringInfo\"></xref> object starting from a specified text element and continuing through the last text element.\n  remarks: Consider a string that consists of five text elements, indexed from 0 through 4. If the `startingTextElement` parameter is 1, the  <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4.\n  syntax:\n    content: public string SubstringByTextElements (int startingTextElement);\n    parameters:\n    - id: startingTextElement\n      type: System.Int32\n      description: The zero-based index of a text element in this <xref href=\"System.Globalization.StringInfo\"></xref> object.\n    return:\n      type: System.String\n      description: A substring of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object, starting from the text element index specified by the <code>startingTextElement</code> parameter and continuing through the last text element in this object.\n  overload: System.Globalization.StringInfo.SubstringByTextElements*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>startingTextElement</code> is less than zero.  \\n  \\n -or-  \\n  \\n The string that is the value of the current <xref href=\\\"System.Globalization.StringInfo\\\"></xref> object is the empty string (\\\"\\\").\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)\n  commentId: M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)\n  id: SubstringByTextElements(System.Int32,System.Int32)\n  parent: System.Globalization.StringInfo\n  langs:\n  - csharp\n  name: SubstringByTextElements(Int32, Int32)\n  nameWithType: StringInfo.SubstringByTextElements(Int32, Int32)\n  fullName: StringInfo.SubstringByTextElements(Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Retrieves a substring of text elements from the current <xref href=\"System.Globalization.StringInfo\"></xref> object starting from a specified text element and continuing through the specified number of text elements.\n  remarks: Consider a string that consists of five text elements, indexed from 0 through 4. If the `startingTextElement` parameter is 1 and the `lengthInTextElements` parameter is 3, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3.\n  syntax:\n    content: public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);\n    parameters:\n    - id: startingTextElement\n      type: System.Int32\n      description: The zero-based index of a text element in this <xref href=\"System.Globalization.StringInfo\"></xref> object.\n    - id: lengthInTextElements\n      type: System.Int32\n      description: The number of text elements to retrieve.\n    return:\n      type: System.String\n      description: A substring of text elements in this <xref href=\"System.Globalization.StringInfo\"></xref> object. The substring consists of the number of text elements specified by the <code>lengthInTextElements</code> parameter and starts from the text element index specified by the <code>startingTextElement</code> parameter.\n  overload: System.Globalization.StringInfo.SubstringByTextElements*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>startingTextElement</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>startingTextElement</code> is greater than or equal to the length of the string that is the value of the current <xref href=\\\"System.Globalization.StringInfo\\\"></xref> object.  \\n  \\n -or-  \\n  \\n <code>lengthInTextElements</code> is less than zero.  \\n  \\n -or-  \\n  \\n The string that is the value of the current <xref href=\\\"System.Globalization.StringInfo\\\"></xref> object is the empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>startingTextElement</code> + <code>lengthInTextElements</code> specify an index that is greater than the number of text elements in this <xref href=\\\"System.Globalization.StringInfo\\\"></xref> object.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Globalization.StringInfo.#ctor\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: StringInfo()\n  nameWithType: StringInfo.StringInfo()\n  fullName: StringInfo.StringInfo()\n- uid: System.Globalization.StringInfo.#ctor(System.String)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: StringInfo(String)\n  nameWithType: StringInfo.StringInfo(String)\n  fullName: StringInfo.StringInfo(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Globalization.StringInfo.Equals(System.Object)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: StringInfo.Equals(Object)\n  fullName: StringInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Globalization.StringInfo.GetHashCode\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: StringInfo.GetHashCode()\n  fullName: StringInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.StringInfo.GetNextTextElement(System.String)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: GetNextTextElement(String)\n  nameWithType: StringInfo.GetNextTextElement(String)\n  fullName: StringInfo.GetNextTextElement(String)\n- uid: System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: GetNextTextElement(String, Int32)\n  nameWithType: StringInfo.GetNextTextElement(String, Int32)\n  fullName: StringInfo.GetNextTextElement(String, Int32)\n- uid: System.Globalization.StringInfo.GetTextElementEnumerator(System.String)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: GetTextElementEnumerator(String)\n  nameWithType: StringInfo.GetTextElementEnumerator(String)\n  fullName: StringInfo.GetTextElementEnumerator(String)\n- uid: System.Globalization.TextElementEnumerator\n  parent: System.Globalization\n  isExternal: false\n  name: TextElementEnumerator\n  nameWithType: TextElementEnumerator\n  fullName: System.Globalization.TextElementEnumerator\n- uid: System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: GetTextElementEnumerator(String, Int32)\n  nameWithType: StringInfo.GetTextElementEnumerator(String, Int32)\n  fullName: StringInfo.GetTextElementEnumerator(String, Int32)\n- uid: System.Globalization.StringInfo.LengthInTextElements\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: LengthInTextElements\n  nameWithType: StringInfo.LengthInTextElements\n  fullName: StringInfo.LengthInTextElements\n- uid: System.Globalization.StringInfo.ParseCombiningCharacters(System.String)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: ParseCombiningCharacters(String)\n  nameWithType: StringInfo.ParseCombiningCharacters(String)\n  fullName: StringInfo.ParseCombiningCharacters(String)\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Globalization.StringInfo.String\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: String\n  nameWithType: StringInfo.String\n  fullName: StringInfo.String\n- uid: System.Globalization.StringInfo.SubstringByTextElements(System.Int32)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: SubstringByTextElements(Int32)\n  nameWithType: StringInfo.SubstringByTextElements(Int32)\n  fullName: StringInfo.SubstringByTextElements(Int32)\n- uid: System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: SubstringByTextElements(Int32, Int32)\n  nameWithType: StringInfo.SubstringByTextElements(Int32, Int32)\n  fullName: StringInfo.SubstringByTextElements(Int32, Int32)\n- uid: System.Globalization.StringInfo.#ctor*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: StringInfo\n  nameWithType: StringInfo.StringInfo\n  fullName: StringInfo.StringInfo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Globalization.StringInfo.Equals*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: Equals\n  nameWithType: StringInfo.Equals\n  fullName: StringInfo.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Globalization.StringInfo.GetHashCode*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: StringInfo.GetHashCode\n  fullName: StringInfo.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Globalization.StringInfo.GetNextTextElement*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: GetNextTextElement\n  nameWithType: StringInfo.GetNextTextElement\n  fullName: StringInfo.GetNextTextElement\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Globalization.StringInfo.GetTextElementEnumerator*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: GetTextElementEnumerator\n  nameWithType: StringInfo.GetTextElementEnumerator\n  fullName: StringInfo.GetTextElementEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Globalization.StringInfo.LengthInTextElements*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: LengthInTextElements\n  nameWithType: StringInfo.LengthInTextElements\n  fullName: StringInfo.LengthInTextElements\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Globalization.StringInfo.ParseCombiningCharacters*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: ParseCombiningCharacters\n  nameWithType: StringInfo.ParseCombiningCharacters\n  fullName: StringInfo.ParseCombiningCharacters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Globalization.StringInfo.String*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: String\n  nameWithType: StringInfo.String\n  fullName: StringInfo.String\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Globalization.StringInfo.SubstringByTextElements*\n  parent: System.Globalization.StringInfo\n  isExternal: false\n  name: SubstringByTextElements\n  nameWithType: StringInfo.SubstringByTextElements\n  fullName: StringInfo.SubstringByTextElements\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/StringInfo.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}