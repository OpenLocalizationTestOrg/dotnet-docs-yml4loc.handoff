{"nodes":[{"content":"Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).","nodes":[{"pos":[0,119],"content":"Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).","nodes":[{"content":"Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).","pos":[0,119]}]}],"pos":[3257,3377],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class."}],"pos":[9247,9363],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class with the specified security descriptor.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> class with the specified security descriptor.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class with the specified security descriptor."}],"pos":[11086,11241],"yaml":true},{"content":"The security descriptor to be associated with the new <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,136],"content":"The security descriptor to be associated with the new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The security descriptor to be associated with the new <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[11506,11643],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.","nodes":[{"pos":[0,128],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values."}],"pos":[14074,14203],"yaml":true},{"content":"The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,157],"content":"The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The identity to which the access rule applies.","pos":[0,46]},{"content":"It must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[48,157],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[14745,14903],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"pos":[0,150],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]}],"pos":[14968,15119],"yaml":true},{"content":"true if this rule is inherited from a parent container.","nodes":[{"pos":[0,55],"content":"true if this rule is inherited from a parent container.","nodes":[{"content":"true if this rule is inherited from a parent container.","pos":[0,55]}]}],"pos":[15187,15243],"yaml":true},{"content":"Specifies the inheritance properties of the access rule.","nodes":[{"pos":[0,56],"content":"Specifies the inheritance properties of the access rule.","nodes":[{"content":"Specifies the inheritance properties of the access rule.","pos":[0,56]}]}],"pos":[15348,15405],"yaml":true},{"content":"Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,221],"content":"Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"Specifies whether inherited access rules are automatically propagated.","pos":[0,70]},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[71,221],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[15510,15732],"yaml":true},{"content":"Specifies the valid access control type.","nodes":[{"pos":[0,40],"content":"Specifies the valid access control type.","nodes":[{"content":"Specifies the valid access control type.","pos":[0,40]}]}],"pos":[15826,15867],"yaml":true},{"content":"The identity of the class of objects to which the new access rule applies.","nodes":[{"pos":[0,74],"content":"The identity of the class of objects to which the new access rule applies.","nodes":[{"content":"The identity of the class of objects to which the new access rule applies.","pos":[0,74]}]}],"pos":[15931,16006],"yaml":true},{"content":"The identity of the class of child objects which can inherit the new access rule.","nodes":[{"pos":[0,81],"content":"The identity of the class of child objects which can inherit the new access rule.","nodes":[{"content":"The identity of the class of child objects which can inherit the new access rule.","pos":[0,81]}]}],"pos":[16079,16161],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates."}],"pos":[16245,16344],"yaml":true},{"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,182],"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[17938,18121],"yaml":true},{"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","nodes":[{"pos":[0,81],"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","nodes":[{"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","pos":[0,81]}]}],"pos":[18132,18214],"yaml":true,"extradata":"MT"},{"content":"The access rule to add.","nodes":[{"pos":[0,23],"content":"The access rule to add.","nodes":[{"content":"The access rule to add.","pos":[0,23]}]}],"pos":[18430,18454],"yaml":true},{"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,174],"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[20032,20207],"yaml":true},{"content":"Adding an audit rule might cause existing audit rules in the SACL to be merged.","nodes":[{"pos":[0,79],"content":"Adding an audit rule might cause existing audit rules in the SACL to be merged.","nodes":[{"content":"Adding an audit rule might cause existing audit rules in the SACL to be merged.","pos":[0,79]}]}],"pos":[20218,20298],"yaml":true,"extradata":"MT"},{"content":"The audit rule to add.","nodes":[{"pos":[0,22],"content":"The audit rule to add.","nodes":[{"content":"The audit rule to add.","pos":[0,22]}]}],"pos":[20511,20534],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values."}],"pos":[22924,23052],"yaml":true},{"content":"The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,156],"content":"The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The identity to which the audit rule applies.","pos":[0,45]},{"content":"It must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[47,156],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[23586,23743],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"pos":[0,150],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]}],"pos":[23808,23959],"yaml":true},{"content":"`true` if this rule is inherited from a parent container.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if this rule is inherited from a parent container.","source":"`true` if this rule is inherited from a parent container."}],"pos":[24027,24087],"yaml":true},{"content":"Specifies the inheritance properties of the audit rule.","nodes":[{"pos":[0,55],"content":"Specifies the inheritance properties of the audit rule.","nodes":[{"content":"Specifies the inheritance properties of the audit rule.","pos":[0,55]}]}],"pos":[24192,24248],"yaml":true},{"content":"Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,220],"content":"Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"Specifies whether inherited audit rules are automatically propagated.","pos":[0,69]},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[70,220],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[24353,24574],"yaml":true},{"content":"Specifies the conditions for which the rule is audited.","nodes":[{"pos":[0,55],"content":"Specifies the conditions for which the rule is audited.","nodes":[{"content":"Specifies the conditions for which the rule is audited.","pos":[0,55]}]}],"pos":[24662,24718],"yaml":true},{"content":"The identity of the class of objects to which the new audit rule applies.","nodes":[{"pos":[0,73],"content":"The identity of the class of objects to which the new audit rule applies.","nodes":[{"content":"The identity of the class of objects to which the new audit rule applies.","pos":[0,73]}]}],"pos":[24782,24856],"yaml":true},{"content":"The identity of the class of child objects which can inherit the new audit rule.","nodes":[{"pos":[0,80],"content":"The identity of the class of child objects which can inherit the new audit rule.","nodes":[{"content":"The identity of the class of child objects which can inherit the new audit rule.","pos":[0,80]}]}],"pos":[24929,25010],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates."}],"pos":[25093,25191],"yaml":true},{"content":"Gets a collection of the access rules associated with the specified security identifier.","nodes":[{"pos":[0,88],"content":"Gets a collection of the access rules associated with the specified security identifier.","nodes":[{"content":"Gets a collection of the access rules associated with the specified security identifier.","pos":[0,88]}]}],"pos":[26793,26882],"yaml":true},{"content":"`true` to include access rules explicitly set for the object.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> to include access rules explicitly set for the object.","source":"`true` to include access rules explicitly set for the object."}],"pos":[27137,27201],"yaml":true},{"content":"`true` to include inherited access rules.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">`true`</ph> to include inherited access rules.","source":"`true` to include inherited access rules."}],"pos":[27274,27318],"yaml":true},{"content":"The security identifier for which to retrieve access rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,178],"content":"The security identifier for which to retrieve access rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"content":"The security identifier for which to retrieve access rules.","pos":[0,59]},{"content":"This must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","pos":[60,178],"source":" This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]}],"pos":[27382,27561],"yaml":true},{"content":"The collection of access rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,134],"content":"The collection of access rules associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection of access rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}],"pos":[27662,27797],"yaml":true},{"content":"Gets a collection of the audit rules associated with the specified security identifier.","nodes":[{"pos":[0,87],"content":"Gets a collection of the audit rules associated with the specified security identifier.","nodes":[{"content":"Gets a collection of the audit rules associated with the specified security identifier.","pos":[0,87]}]}],"pos":[29391,29479],"yaml":true},{"content":"`true` to include audit rules explicitly set for the object.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> to include audit rules explicitly set for the object.","source":"`true` to include audit rules explicitly set for the object."}],"pos":[29733,29796],"yaml":true},{"content":"`true` to include inherited audit rules.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">`true`</ph> to include inherited audit rules.","source":"`true` to include inherited audit rules."}],"pos":[29869,29912],"yaml":true},{"content":"The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,177],"content":"The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"content":"The security identifier for which to retrieve audit rules.","pos":[0,58]},{"content":"This must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","pos":[59,177],"source":" This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]}],"pos":[29976,30154],"yaml":true},{"content":"The collection of audit rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,133],"content":"The collection of audit rules associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","source":"The collection of audit rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}],"pos":[30255,30389],"yaml":true},{"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,186],"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[32261,32448],"yaml":true},{"content":"The modification to apply to the DACL.","nodes":[{"pos":[0,38],"content":"The modification to apply to the DACL.","nodes":[{"content":"The modification to apply to the DACL.","pos":[0,38]}]}],"pos":[32772,32811],"yaml":true},{"content":"The access rule to modify.","nodes":[{"pos":[0,26],"content":"The access rule to modify.","nodes":[{"content":"The access rule to modify.","pos":[0,26]}]}],"pos":[32898,32925],"yaml":true},{"content":"`true` if the DACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the DACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the DACL is successfully modified; otherwise, `false`."}],"pos":[32990,33057],"yaml":true},{"content":"`true` if the DACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the DACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the DACL is successfully modified; otherwise, `false`."}],"pos":[33115,33182],"yaml":true},{"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,179],"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[35041,35221],"yaml":true},{"content":"The modification to apply to the SACL.","nodes":[{"pos":[0,38],"content":"The modification to apply to the SACL.","nodes":[{"content":"The modification to apply to the SACL.","pos":[0,38]}]}],"pos":[35543,35582],"yaml":true},{"content":"The audit rule to modify.","nodes":[{"pos":[0,25],"content":"The audit rule to modify.","nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]}],"pos":[35668,35694],"yaml":true},{"content":"`true` if the SACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the SACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the SACL is successfully modified; otherwise, `false`."}],"pos":[35759,35826],"yaml":true},{"content":"`true` if the SACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the SACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the SACL is successfully modified; otherwise, `false`."}],"pos":[35884,35951],"yaml":true},{"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,261],"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[37557,37819],"yaml":true},{"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.  \n  \n This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.","nodes":[{"pos":[0,125],"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.","nodes":[{"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.","pos":[0,125]}]},{"pos":[132,306],"content":"This method fails to remove the access rule and returns <ph id=\"ph1\">`false`</ph> if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.","source":"This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed."}],"pos":[37830,38141],"yaml":true,"extradata":"MT"},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[38360,38387],"yaml":true},{"content":"`true` if the access rule was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the access rule was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the access rule was successfully removed; otherwise, `false`."}],"pos":[38445,38519],"yaml":true},{"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,246],"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[40148,40395],"yaml":true},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[40617,40644],"yaml":true},{"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,223],"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[42306,42530],"yaml":true},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[42757,42784],"yaml":true},{"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.","nodes":[{"pos":[0,249],"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object."}],"pos":[44391,44641],"yaml":true},{"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.  \n  \n This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.","nodes":[{"pos":[0,123],"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.","nodes":[{"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.","pos":[0,123]}]},{"pos":[130,302],"content":"This method fails to remove the audit rule and returns <ph id=\"ph1\">`false`</ph> if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.","source":"This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed."}],"pos":[44652,44959],"yaml":true,"extradata":"MT"},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[45175,45201],"yaml":true},{"content":"`true` if the audit rule was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the audit rule was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the audit rule was successfully removed; otherwise, `false`."}],"pos":[45259,45332],"yaml":true},{"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,237],"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[46948,47186],"yaml":true},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[47405,47431],"yaml":true},{"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.","nodes":[{"pos":[0,214],"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object."}],"pos":[49080,49295],"yaml":true},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[49519,49545],"yaml":true},{"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule.","nodes":[{"pos":[0,216],"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object and then adds the specified access rule.","source":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule."}],"pos":[51157,51374],"yaml":true},{"content":"The access rule to reset.","nodes":[{"pos":[0,25],"content":"The access rule to reset.","nodes":[{"content":"The access rule to reset.","pos":[0,25]}]}],"pos":[51592,51618],"yaml":true},{"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule.","nodes":[{"pos":[0,301],"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object and then adds the specified access rule.","source":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule."}],"pos":[53210,53512],"yaml":true},{"content":"The access rule to set.","nodes":[{"pos":[0,23],"content":"The access rule to set.","nodes":[{"content":"The access rule to set.","pos":[0,23]}]}],"pos":[53728,53752],"yaml":true},{"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified audit rule.","nodes":[{"pos":[0,291],"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> object and then adds the specified audit rule.","source":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified audit rule."}],"pos":[55330,55622],"yaml":true},{"content":"The audit rule to set.","nodes":[{"pos":[0,22],"content":"The audit rule to set.","nodes":[{"content":"The audit rule to set.","pos":[0,22]}]}],"pos":[55835,55858],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.DirectoryObjectSecurity\n  commentId: T:System.Security.AccessControl.DirectoryObjectSecurity\n  id: DirectoryObjectSecurity\n  children:\n  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  langs:\n  - csharp\n  name: DirectoryObjectSecurity\n  nameWithType: DirectoryObjectSecurity\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity\n  type: Class\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).\n  syntax:\n    content: 'public abstract class DirectoryObjectSecurity : System.Security.AccessControl.ObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  derivedClasses:\n  - System.DirectoryServices.ActiveDirectorySecurity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.ObjectSecurity.AccessRightType\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: DirectoryObjectSecurity()\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity()\n  fullName: DirectoryObjectSecurity.DirectoryObjectSecurity()\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class.\n  syntax:\n    content: protected DirectoryObjectSecurity ();\n    parameters: []\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: DirectoryObjectSecurity(CommonSecurityDescriptor)\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n  fullName: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> class with the specified security descriptor.\n  syntax:\n    content: protected DirectoryObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);\n    parameters:\n    - id: securityDescriptor\n      type: System.Security.AccessControl.CommonSecurityDescriptor\n      description: The security descriptor to be associated with the new <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  nameWithType: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  fullName: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.\n  syntax:\n    content: public virtual System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: true if this rule is inherited from a parent container.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Specifies the valid access control type.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the new access rule applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the new access rule.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: AddAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  remarks: Adding an access rule might cause existing access rules in the DACL to be merged.\n  syntax:\n    content: protected void AddAccessRule (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to add.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: AddAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  remarks: Adding an audit rule might cause existing audit rules in the SACL to be merged.\n  syntax:\n    content: protected void AddAuditRule (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to add.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  nameWithType: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  fullName: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.\n  syntax:\n    content: public virtual System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` if this rule is inherited from a parent container.'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the audit rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Specifies the conditions for which the rule is audited.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the new audit rule applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the new audit rule.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: GetAccessRules(Boolean, Boolean, Type)\n  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n  fullName: DirectoryObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a collection of the access rules associated with the specified security identifier.\n  syntax:\n    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);\n    parameters:\n    - id: includeExplicit\n      type: System.Boolean\n      description: '`true` to include access rules explicitly set for the object.'\n    - id: includeInherited\n      type: System.Boolean\n      description: '`true` to include inherited access rules.'\n    - id: targetType\n      type: System.Type\n      description: The security identifier for which to retrieve access rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    return:\n      type: System.Security.AccessControl.AuthorizationRuleCollection\n      description: The collection of access rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: GetAuditRules(Boolean, Boolean, Type)\n  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n  fullName: DirectoryObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a collection of the audit rules associated with the specified security identifier.\n  syntax:\n    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);\n    parameters:\n    - id: includeExplicit\n      type: System.Boolean\n      description: '`true` to include audit rules explicitly set for the object.'\n    - id: includeInherited\n      type: System.Boolean\n      description: '`true` to include inherited audit rules.'\n    - id: targetType\n      type: System.Type\n      description: The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    return:\n      type: System.Security.AccessControl.AuthorizationRuleCollection\n      description: The collection of audit rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the DACL.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: '`true` if the DACL is successfully modified; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the DACL is successfully modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the SACL.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: '`true` if the SACL is successfully modified; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the SACL is successfully modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  remarks: \"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.  \\n  \\n This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.\"\n  syntax:\n    content: protected bool RemoveAccessRule (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the access rule was successfully removed; otherwise, `false`.'\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleAll(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAccessRuleAll (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAccessRuleSpecific (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> object.\n  remarks: \"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.  \\n  \\n This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.\"\n  syntax:\n    content: protected bool RemoveAuditRule (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the audit rule was successfully removed; otherwise, `false`.'\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAuditRuleAll (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object.\n  syntax:\n    content: protected void RemoveAuditRuleSpecific (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule.\n  syntax:\n    content: protected void ResetAccessRule (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to reset.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: SetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified access rule.\n  syntax:\n    content: protected void SetAccessRule (System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The access rule to set.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  name: SetAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> object and then adds the specified audit rule.\n  syntax:\n    content: protected void SetAuditRule (System.Security.AccessControl.ObjectAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: The audit rule to set.\n  overload: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.ObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectSecurity\n  nameWithType: ObjectSecurity\n  fullName: System.Security.AccessControl.ObjectSecurity\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: DirectoryObjectSecurity()\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity()\n  fullName: DirectoryObjectSecurity.DirectoryObjectSecurity()\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: DirectoryObjectSecurity(CommonSecurityDescriptor)\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n  fullName: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  nameWithType: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  fullName: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.ObjectAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAccessRule\n  nameWithType: ObjectAccessRule\n  fullName: System.Security.AccessControl.ObjectAccessRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.ObjectAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAuditRule\n  nameWithType: ObjectAuditRule\n  fullName: System.Security.AccessControl.ObjectAuditRule\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  nameWithType: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  fullName: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAccessRules(Boolean, Boolean, Type)\n  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n  fullName: DirectoryObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.AuthorizationRuleCollection\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuthorizationRuleCollection\n  nameWithType: AuthorizationRuleCollection\n  fullName: System.Security.AccessControl.AuthorizationRuleCollection\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAuditRules(Boolean, Boolean, Type)\n  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n  fullName: DirectoryObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.AccessControlModification\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlModification\n  nameWithType: AccessControlModification\n  fullName: System.Security.AccessControl.AccessControlModification\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAccessRule(ObjectAccessRule)\n  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n  fullName: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAuditRule(ObjectAuditRule)\n  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n  fullName: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: DirectoryObjectSecurity\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity\n  fullName: DirectoryObjectSecurity.DirectoryObjectSecurity\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: DirectoryObjectSecurity.AccessRuleFactory\n  fullName: DirectoryObjectSecurity.AccessRuleFactory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: DirectoryObjectSecurity.AddAccessRule\n  fullName: DirectoryObjectSecurity.AddAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: DirectoryObjectSecurity.AddAuditRule\n  fullName: DirectoryObjectSecurity.AddAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: DirectoryObjectSecurity.AuditRuleFactory\n  fullName: DirectoryObjectSecurity.AuditRuleFactory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAccessRules\n  nameWithType: DirectoryObjectSecurity.GetAccessRules\n  fullName: DirectoryObjectSecurity.GetAccessRules\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: GetAuditRules\n  nameWithType: DirectoryObjectSecurity.GetAuditRules\n  fullName: DirectoryObjectSecurity.GetAuditRules\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAccess\n  nameWithType: DirectoryObjectSecurity.ModifyAccess\n  fullName: DirectoryObjectSecurity.ModifyAccess\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ModifyAudit\n  nameWithType: DirectoryObjectSecurity.ModifyAudit\n  fullName: DirectoryObjectSecurity.ModifyAudit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRule\n  fullName: DirectoryObjectSecurity.RemoveAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll\n  fullName: DirectoryObjectSecurity.RemoveAccessRuleAll\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific\n  fullName: DirectoryObjectSecurity.RemoveAccessRuleSpecific\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRule\n  fullName: DirectoryObjectSecurity.RemoveAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll\n  fullName: DirectoryObjectSecurity.RemoveAuditRuleAll\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific\n  fullName: DirectoryObjectSecurity.RemoveAuditRuleSpecific\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: DirectoryObjectSecurity.ResetAccessRule\n  fullName: DirectoryObjectSecurity.ResetAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: DirectoryObjectSecurity.SetAccessRule\n  fullName: DirectoryObjectSecurity.SetAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule*\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: DirectoryObjectSecurity.SetAuditRule\n  fullName: DirectoryObjectSecurity.SetAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DirectoryObjectSecurity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n  fullName: ObjectSecurity.AccessRightType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n  fullName: ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n  fullName: ObjectSecurity.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  fullName: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(Boolean, String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: ObjectSecurity.WriteUnlock()\n"}