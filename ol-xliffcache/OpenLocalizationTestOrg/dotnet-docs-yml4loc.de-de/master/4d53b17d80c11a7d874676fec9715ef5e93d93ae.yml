### YamlMime:ManagedReference
items:
- uid: System.Data.DataRow
  commentId: T:System.Data.DataRow
  id: DataRow
  children:
  - System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  - System.Data.DataRow.AcceptChanges
  - System.Data.DataRow.BeginEdit
  - System.Data.DataRow.CancelEdit
  - System.Data.DataRow.ClearErrors
  - System.Data.DataRow.Delete
  - System.Data.DataRow.EndEdit
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  - System.Data.DataRow.GetChildRows(System.String)
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetColumnError(System.String)
  - System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  - System.Data.DataRow.GetColumnError(System.Int32)
  - System.Data.DataRow.GetColumnsInError
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRow(System.String)
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRows(System.String)
  - System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.HasErrors
  - System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  - System.Data.DataRow.IsNull(System.Data.DataColumn)
  - System.Data.DataRow.IsNull(System.Int32)
  - System.Data.DataRow.IsNull(System.String)
  - System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Data.DataColumn)
  - System.Data.DataRow.Item(System.Int32)
  - System.Data.DataRow.Item(System.String)
  - System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.ItemArray
  - System.Data.DataRow.RejectChanges
  - System.Data.DataRow.RowError
  - System.Data.DataRow.RowState
  - System.Data.DataRow.SetAdded
  - System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  - System.Data.DataRow.SetColumnError(System.Int32,System.String)
  - System.Data.DataRow.SetColumnError(System.String,System.String)
  - System.Data.DataRow.SetModified
  - System.Data.DataRow.SetNull(System.Data.DataColumn)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  - System.Data.DataRow.Table
  langs:
  - csharp
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
  type: Class
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Represents a row of data in a <xref href="System.Data.DataTable"></xref>.
  remarks: "The <xref:System.Data.DataRow> and <xref:System.Data.DataColumn> objects are primary components of a <xref:System.Data.DataTable>. Use the <xref:System.Data.DataRow> object and its properties and methods to retrieve and evaluate; and insert, delete, and update the values in the <xref:System.Data.DataTable>. The <xref:System.Data.DataRowCollection> represents the actual <xref:System.Data.DataRow> objects in the <xref:System.Data.DataTable>, and the <xref:System.Data.DataColumnCollection> contains the <xref:System.Data.DataColumn> objects that describe the schema of the <xref:System.Data.DataTable>. Use the overloaded <xref:System.Data.DataRow.Item%2A> property to return or set the value of a <xref:System.Data.DataColumn>.  \n  \n Use the <xref:System.Data.DataRow.HasVersion%2A> and <xref:System.Data.DataRow.IsNull%2A> properties to determine the status of a particular row value, and the <xref:System.Data.DataRow.RowState%2A> property to determine the state of the row relative to its parent <xref:System.Data.DataTable>.  \n  \n To create a new <xref:System.Data.DataRow>, use the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object. After creating a new <xref:System.Data.DataRow>, use the <xref:System.Data.DataRowCollection.Add%2A> method to add the new <xref:System.Data.DataRow> to the <xref:System.Data.DataRowCollection>. Finally, call the <xref:System.Data.DataRow.AcceptChanges%2A> method of the <xref:System.Data.DataTable> object to confirm the addition. For more information about adding data to a <xref:System.Data.DataTable>, see [Adding Data to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  \n  \n You can delete a <xref:System.Data.DataRow> from the <xref:System.Data.DataRowCollection> by calling the <xref:System.Data.DataRowCollection.Remove%2A> method of the <xref:System.Data.DataRowCollection>, or by calling the <xref:System.Data.DataRow.Delete%2A> method of the <xref:System.Data.DataRow> object. The <xref:System.Data.DataRowCollection.Remove%2A> method removes the row from the collection. In contrast, <xref:System.Data.DataRow.Delete%2A> marks the <xref:System.Data.DataRow> for removal. The actual removal occurs when you call <xref:System.Data.DataRow.AcceptChanges%2A> method. By calling <xref:System.Data.DataRow.Delete%2A>, you can programmatically check which rows are marked for removal before actually deleting them. For more information, see [DataRow Deletion](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md)."
  example:
  - "The following example creates a new <xref:System.Data.DataRow> by calling the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.  \n  \n [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]"
  syntax:
    content: public class DataRow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)
  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)
  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)
  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  commentId: M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  id: '#ctor(System.Data.DataRowBuilder)'
  parent: System.Data.DataRow
  langs:
  - csharp
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: DataRow.DataRow(DataRowBuilder)
  type: Constructor
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Initializes a new instance of the DataRow. Constructs a row from the builder. Only for internal usage..
  syntax:
    content: protected DataRow (System.Data.DataRowBuilder builder);
    parameters:
    - id: builder
      type: System.Data.DataRowBuilder
      description: builder
  overload: System.Data.DataRow.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.AcceptChanges
  commentId: M:System.Data.DataRow.AcceptChanges
  id: AcceptChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: DataRow.AcceptChanges()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Commits all the changes made to this row since the last time <xref href="System.Data.DataRow.AcceptChanges"></xref> was called.
  remarks: "When invoking <xref:System.Data.DataRow.AcceptChanges%2A>, the <xref:System.Data.DataRow.EndEdit%2A> method is implicitly called to end any edits. If the <xref:System.Data.DataRow.RowState%2A> of the row was Added or Modified, the <xref:System.Data.DataRow.RowState%2A> becomes Unchanged. If the <xref:System.Data.DataRow.RowState%2A> was Deleted, the row is removed.  \n  \n See the <xref:System.Data.DataRow.BeginEdit%2A> method for more information.  \n  \n The <xref:System.Data.DataTable> class also has an <xref:System.Data.DataTable.AcceptChanges%2A> method which affects changes made to the whole table. For more information and a code example that demonstrates how to accept and reject changes to individual data rows, see [AcceptChanges and RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md)."
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState%2A> is printed.  \n  \n [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]"
  syntax:
    content: public void AcceptChanges ();
    parameters: []
  overload: System.Data.DataRow.AcceptChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.BeginEdit
  commentId: M:System.Data.DataRow.BeginEdit
  id: BeginEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: DataRow.BeginEdit()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Starts an edit operation on a <xref href="System.Data.DataRow"></xref> object.
  remarks: "Use the <xref:System.Data.DataRow.BeginEdit%2A> method to put a <xref:System.Data.DataRow> into edit mode. In this mode, events are temporarily suspended, letting the user make changes to more than one row without triggering validation rules. For example, if you must make sure that the value of the column for a total amount is equal to the values for the debit and credit columns in a row, you can put each row into edit mode to suspend the validation of the row values until the user tries to commit the values.  \n  \n The <xref:System.Data.DataRow.BeginEdit%2A> method is called implicitly when the user changes the value of a data-bound control; the <xref:System.Data.DataRow.EndEdit%2A> method is called implicitly when you invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method for the <xref:System.Data.DataTable> object. While in this edit mode, the <xref:System.Data.DataRow> stores representations of the original and new proposed values. Therefore, as long as the <xref:System.Data.DataRow.EndEdit%2A> method has not been called, you can retrieve either the original or proposed version by passing either `DataRowVersion.Original` or `DataRowVersion.Proposed` for the `version` parameter of the <xref:System.Data.DataRow.Item%2A> property. You can also cancel any edits at this point by invoking the <xref:System.Data.DataRow.CancelEdit%2A> method.  \n  \n To see if the row contains an original or proposed value, call the <xref:System.Data.DataRow.HasVersion%2A> method.  \n  \n> [!NOTE]\n>  The <xref:System.Data.DataRow.BeginEdit%2A> method temporarily suspends <xref:System.Data.DataTable.RowChanging> events, but the `delete` operation does not."
  example:
  - "The example creates a simple <xref:System.Data.DataTable> with one <xref:System.Data.DataColumn> and five <xref:System.Data.DataRow> objects, and a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> event handler is also added to monitor when the row's value is changing. After invoking <xref:System.Data.DataRow.BeginEdit%2A> on the existing rows, the constraint and event are temporarily disabled and the original and proposed values are printed. The <xref:System.Data.DataRow.BeginEdit%2A> is again invoked to set two rows to the same value. When <xref:System.Data.DataRow.EndEdit%2A> is called, the <xref:System.Data.UniqueConstraint> is enforced on the identical values.  \n  \n [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Data.DataRow.BeginEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: The method was called inside the <xref href="System.Data.DataTable.RowChanging"></xref> event.
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: The method was called upon a deleted row.
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.CancelEdit
  commentId: M:System.Data.DataRow.CancelEdit
  id: CancelEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: DataRow.CancelEdit()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Cancels the current edit on the row.
  remarks: See the <xref:System.Data.DataRow.BeginEdit%2A> method for more information.
  example:
  - "The following example edits the value of one column in the last row of a <xref:System.Windows.Forms.DataGrid> control. The example uses the <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, methods to edit the column's value and commit the change to the row.  \n  \n [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Data.DataRow.CancelEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: The method was called inside the <xref href="System.Data.DataTable.RowChanging"></xref> event.
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.ClearErrors
  commentId: M:System.Data.DataRow.ClearErrors
  id: ClearErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: DataRow.ClearErrors()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Clears the errors for the row. This includes the <xref href="System.Data.DataRow.RowError"></xref> and errors set with <xref href="System.Data.DataRow.SetColumnError(System.Int32,System.String)"></xref>.
  remarks: "Use <xref:System.Data.DataRow.SetColumnError%2A> and <xref:System.Data.DataRow.GetColumnError%2A> to set and return errors for individual columns.  \n  \n Set the <xref:System.Data.DataRow.RowError%2A> property to set an error that applies to the whole row.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method. Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors."
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]"
  syntax:
    content: public void ClearErrors ();
    parameters: []
  overload: System.Data.DataRow.ClearErrors*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.Delete
  commentId: M:System.Data.DataRow.Delete
  id: Delete
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: DataRow.Delete()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Deletes the <xref href="System.Data.DataRow"></xref>.
  remarks: "If the <xref:System.Data.DataRow.RowState%2A> of the row is Added, the <xref:System.Data.DataRow.RowState%2A> becomes `Detached` and the row is removed from the table when you call <xref:System.Data.DataRow.AcceptChanges%2A>.  \n  \n The <xref:System.Data.DataRow.RowState%2A> becomes `Deleted` after you use the <xref:System.Data.DataRow.Delete%2A> method on an existing <xref:System.Data.DataRow>. It remains `Deleted` until you call <xref:System.Data.DataRow.AcceptChanges%2A>. At this time, the <xref:System.Data.DataRow> is removed from the table.  \n  \n <xref:System.Data.DataRow.Delete%2A> should not be called in a foreach loop while iterating through a <xref:System.Data.DataRowCollection> object. <xref:System.Data.DataRow.Delete%2A> modifies the state of the collection.  \n  \n A deleted row can be undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n> [!NOTE]\n>  The <xref:System.Data.DataRow.BeginEdit%2A> method temporarily suspends <xref:System.Data.DataTable.RowChanging> events, but the delete operation does not."
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with two columns and ten rows. After deleting several <xref:System.Data.DataRow> items with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Data.DataRow.Delete*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: The <xref href="System.Data.DataRow"></xref> has already been deleted.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.EndEdit
  commentId: M:System.Data.DataRow.EndEdit
  id: EndEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: DataRow.EndEdit()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Ends the edit occurring on the row.
  remarks: When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.RowChanging> event.
  example:
  - "The following example uses the <xref:System.Data.DataRow.EndEdit%2A> method to end the edit of a <xref:System.Data.DataRow> value if the validation function returns true.  \n  \n [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]"
  syntax:
    content: public void EndEdit ();
    parameters: []
  overload: System.Data.DataRow.EndEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: The method was called inside the <xref href="System.Data.DataTable.RowChanging"></xref> event.
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: The edit broke a constraint.
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: The row belongs to the table and the edit tried to change the value of a read-only column.
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: The edit tried to put a null value into a column where <xref href="System.Data.DataColumn.AllowDBNull"></xref> is false.
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  commentId: M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  id: GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: DataRow.GetChildRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the child rows of this <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation"></xref>.
  remarks: The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects that is returned by the <xref:System.Data.DataTable.ChildRelations%2A> property.
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: The <xref href="System.Data.DataRelation"></xref> to use.
    return:
      type: System.Data.DataRow[]
      description: An array of <xref href="System.Data.DataRow"></xref> objects or an array of length zero.
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation and row do not belong to the same table.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The relation is `null`.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have this version of data.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetChildRows(System.String)
  commentId: M:System.Data.DataRow.GetChildRows(System.String)
  id: GetChildRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: DataRow.GetChildRows(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the child rows of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>.
  remarks: The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects that is returned by the <xref:System.Data.DataTable.ChildRelations%2A> property.
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: The <xref href="System.Data.DataRelation.RelationName"></xref> of the <xref href="System.Data.DataRelation"></xref> to use.
    return:
      type: System.Data.DataRow[]
      description: An array of <xref href="System.Data.DataRow"></xref> objects or an array of length zero.
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation and row do not belong to the same table.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation, DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation, DataRowVersion)
  fullName: DataRow.GetChildRows(DataRelation, DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the child rows of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation"></xref>, and <xref href="System.Data.DataRowVersion"></xref>.
  remarks: "The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects that is returned by the <xref:System.Data.DataTable.ChildRelations%2A> property.  \n  \n Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists.  \n  \n If <xref:System.Data.DataRowVersion.Default> is specified, the version that is used depends on the <xref:System.Data.DataRow.RowState%2A> of the row on which `GetChildRows` is invoked. If the row on which `GetChildRows` is invoked has a `RowState` of `Modified`, `New`, or `Unchanged`, the <xref:System.Data.DataRowVersion.Current> version of the row is used for fetching related child rows with matching values in their Current versions. If the row on which `GetChildRows` is invoked has a `RowState` of `Deleted`, the <xref:System.Data.DataRowVersion.Original> version of the row is used for fetching related child rows with matching values in their original versions."
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column with the specified version in the row is then printed.  \n  \n [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: The <xref href="System.Data.DataRelation"></xref> to use.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values specifying the version of the data to get. Possible values are `Default`, `Original`, `Current`, and `Proposed`.
    return:
      type: System.Data.DataRow[]
      description: An array of <xref href="System.Data.DataRow"></xref> objects.
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation and row do not belong to the same table.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>relation</code> is `null`.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have the requested <xref href="System.Data.DataRowVersion"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  id: GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String, DataRowVersion)
  nameWithType: DataRow.GetChildRows(String, DataRowVersion)
  fullName: DataRow.GetChildRows(String, DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the child rows of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>, and <xref href="System.Data.DataRowVersion"></xref>.
  remarks: "The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects that is returned by the <xref:System.Data.DataTable.ChildRelations%2A> property.  \n  \n Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists.  \n  \n If <xref:System.Data.DataRowVersion.Default> is specified, the version that is used depends on the <xref:System.Data.DataRow.RowState%2A> of the row on which `GetChildRows` is invoked. If the row on which `GetChildRows` is invoked has a `RowState` of `Modified`, `New`, or `Unchanged`, the <xref:System.Data.DataRowVersion.Current> version of the row is used for fetching related child rows with matching values in their Current versions. If the row on which `GetChildRows` is invoked has a `RowState` of `Deleted`, the <xref:System.Data.DataRowVersion.Original> version of the row is used for fetching related child rows with matching values in their original versions."
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: The <xref href="System.Data.DataRelation.RelationName"></xref> of the <xref href="System.Data.DataRelation"></xref> to use.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values specifying the version of the data to get. Possible values are `Default`, `Original`, `Current`, and `Proposed`.
    return:
      type: System.Data.DataRow[]
      description: An array of <xref href="System.Data.DataRow"></xref> objects or an array of length zero.
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation and row do not belong to the same table.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>relation</code> is `null`.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have the requested <xref href="System.Data.DataRowVersion"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetColumnError(System.String)
  commentId: M:System.Data.DataRow.GetColumnError(System.String)
  id: GetColumnError(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: DataRow.GetColumnError(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the error description for a column, specified by name.
  remarks: "Use the <xref:System.Data.DataRow.SetColumnError%2A> method to set column errors.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method. Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.  \n  \n To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method."
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]"
  syntax:
    content: public string GetColumnError (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: The name of the column.
    return:
      type: System.String
      description: The text of the error description.
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  commentId: M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  id: GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: DataRow.GetColumnError(DataColumn)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the error description of the specified <xref href="System.Data.DataColumn"></xref>.
  remarks: "Use the <xref:System.Data.DataRow.SetColumnError%2A> method to set column errors.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method. Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors. Alternatively, the <xref:System.Data.DataTable.GetErrors%2A> method of the <xref:System.Data.DataTable> returns all rows with errors.  \n  \n To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method."
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]"
  syntax:
    content: public string GetColumnError (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: A <xref href="System.Data.DataColumn"></xref>.
    return:
      type: System.String
      description: The text of the error description.
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  commentId: M:System.Data.DataRow.GetColumnError(System.Int32)
  id: GetColumnError(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: DataRow.GetColumnError(Int32)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the error description for the column specified by index.
  remarks: "Use the <xref:System.Data.DataRow.SetColumnError%2A> method to set column errors.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method. Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.  \n  \n To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method."
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]"
  syntax:
    content: public string GetColumnError (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: The zero-based index of the column.
    return:
      type: System.String
      description: The text of the error description.
  overload: System.Data.DataRow.GetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The <code>columnIndex</code> argument is out of range.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetColumnsInError
  commentId: M:System.Data.DataRow.GetColumnsInError
  id: GetColumnsInError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: DataRow.GetColumnsInError()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets an array of columns that have errors.
  remarks: "The <xref:System.Data.DataRow.GetColumnsInError%2A> lets you reduce the number of <xref:System.Data.DataColumn> objects that must be processed for errors by returning only those columns that have an error. Errors can be set to individual columns with the <xref:System.Data.DataRow.SetColumnError%2A> method. To further reduce the number of processing, examine the <xref:System.Data.DataRow.HasErrors%2A> property of the <xref:System.Data.DataRow> class to determine whether a <xref:System.Data.DataRow> has errors before invoking <xref:System.Data.DataRow.GetColumnsInError%2A>.  \n  \n Use the <xref:System.Data.DataRow.ClearErrors%2A> method to clear all errors on the row. This includes the <xref:System.Data.DataRow.RowError%2A>."
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataColumn[] GetColumnsInError ();
    parameters: []
    return:
      type: System.Data.DataColumn[]
      description: An array of <xref href="System.Data.DataColumn"></xref> objects that contain errors.
  overload: System.Data.DataRow.GetColumnsInError*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  commentId: M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  id: GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: DataRow.GetParentRow(DataRelation)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the parent row of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation"></xref>.
  remarks: "In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.  \n  \n The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property."
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: The <xref href="System.Data.DataRelation"></xref> to use.
    return:
      type: System.Data.DataRow
      description: The parent <xref href="System.Data.DataRow"></xref> of the current row.
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> does not belong to the <xref href=\"System.Data.DataTable\"></xref>.  \n  \n The row is `null`."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: A child row has multiple parents.
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: This row does not belong to the child table of the <xref href="System.Data.DataRelation"></xref> object.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to a table.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetParentRow(System.String)
  commentId: M:System.Data.DataRow.GetParentRow(System.String)
  id: GetParentRow(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: DataRow.GetParentRow(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the parent row of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>.
  remarks: "In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.  \n  \n The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property."
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: The <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>.
    return:
      type: System.Data.DataRow
      description: The parent <xref href="System.Data.DataRow"></xref> of the current row.
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation and row do not belong to the same table.
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: A child row has multiple parents.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation, DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation, DataRowVersion)
  fullName: DataRow.GetParentRow(DataRelation, DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the parent row of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation"></xref>, and <xref href="System.Data.DataRowVersion"></xref>.
  remarks: "In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.  \n  \n The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.  \n  \n Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists."
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: The <xref href="System.Data.DataRelation"></xref> to use.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values specifying the version of the data to get.
    return:
      type: System.Data.DataRow
      description: The parent <xref href="System.Data.DataRow"></xref> of the current row.
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is `null`.  \n  \n The <code>relation</code> does not belong to this table's parent relations."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: A child row has multiple parents.
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: The relation's child table is not the table the row belongs to.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to a table.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have this version of data.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  id: GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String, DataRowVersion)
  nameWithType: DataRow.GetParentRow(String, DataRowVersion)
  fullName: DataRow.GetParentRow(String, DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the parent row of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>, and <xref href="System.Data.DataRowVersion"></xref>.
  remarks: "In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.  \n  \n The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.  \n  \n Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists."
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: The <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values.
    return:
      type: System.Data.DataRow
      description: The parent <xref href="System.Data.DataRow"></xref> of the current row.
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation and row do not belong to the same table.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>relation</code> is `null`.
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: A child row has multiple parents.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have the requested <xref href="System.Data.DataRowVersion"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation, DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation, DataRowVersion)
  fullName: DataRow.GetParentRows(DataRelation, DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the parent rows of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation"></xref>, and <xref href="System.Data.DataRowVersion"></xref>.
  remarks: "In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.  \n  \n The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.  \n  \n Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists."
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: The <xref href="System.Data.DataRelation"></xref> to use.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values specifying the version of the data to get.
    return:
      type: System.Data.DataRow[]
      description: An array of <xref href="System.Data.DataRow"></xref> objects or an array of length zero.
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Data.DataRelation"></xref> does not belong to this row's <xref href="System.Data.DataSet"></xref>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The row is `null`.
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: The relation's child table is not the table the row belongs to.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to a <xref href="System.Data.DataTable"></xref>.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have the requested <xref href="System.Data.DataRowVersion"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  commentId: M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  id: GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: DataRow.GetParentRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the parent rows of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation"></xref>.
  remarks: "In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.  \n  \n The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property."
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: The <xref href="System.Data.DataRelation"></xref> to use.
    return:
      type: System.Data.DataRow[]
      description: An array of <xref href="System.Data.DataRow"></xref> objects or an array of length zero.
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Data.DataRelation"></xref> does not belong to this row's <xref href="System.Data.DataSet"></xref>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The row is `null`.
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: The relation's child table is not the table the row belongs to.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to a <xref href="System.Data.DataTable"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetParentRows(System.String)
  commentId: M:System.Data.DataRow.GetParentRows(System.String)
  id: GetParentRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: DataRow.GetParentRows(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the parent rows of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>.
  remarks: "In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.  \n  \n The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property."
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: The <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>.
    return:
      type: System.Data.DataRow[]
      description: An array of <xref href="System.Data.DataRow"></xref> objects or an array of length zero.
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation and row do not belong to the same table.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  id: GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String, DataRowVersion)
  nameWithType: DataRow.GetParentRows(String, DataRowVersion)
  fullName: DataRow.GetParentRows(String, DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the parent rows of a <xref href="System.Data.DataRow"></xref> using the specified <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>, and <xref href="System.Data.DataRowVersion"></xref>.
  remarks: "In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.  \n  \n The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.  \n  \n Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists."
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: The <xref href="System.Data.DataRelation.RelationName"></xref> of a <xref href="System.Data.DataRelation"></xref>.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values specifying the version of the data to get. Possible values are `Default`, `Original`, `Current`, and `Proposed`.
    return:
      type: System.Data.DataRow[]
      description: An array of <xref href="System.Data.DataRow"></xref> objects or an array of length zero.
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation and row do not belong to the same table.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>relation</code> is `null`.
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have the requested <xref href="System.Data.DataRowVersion"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.HasErrors
  commentId: P:System.Data.DataRow.HasErrors
  id: HasErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: DataRow.HasErrors
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value that indicates whether there are errors in a row.
  remarks: "`HasErrors` returns `true` if any <xref:System.Data.DataColumn> object in the row contains an error, or if the <xref:System.Data.DataRow.RowError%2A> property of the <xref:System.Data.DataRow> is not an empty string.  \n  \n When validating data, you can set an error on any column in a row. Such a column, when displayed in the <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> control, is marked with a red exclamation point to signal to the user that the column is in error.  \n  \n Use <xref:System.Data.DataRow.SetColumnError%2A> to set an error on any column.  \n  \n Use the <xref:System.Data.DataRow.GetColumnError%2A> and `GetColumnsInError` methods to return columns with errors.  \n  \n The <xref:System.Data.DataRow.ClearErrors%2A> method clears all errors for the row."
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]"
  syntax:
    content: public bool HasErrors { get; }
    return:
      type: System.Boolean
      description: '`true` if the row contains an error; otherwise, `false`.'
  overload: System.Data.DataRow.HasErrors*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  commentId: M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  id: HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: DataRow.HasVersion(DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value that indicates whether a specified version exists.
  remarks: See the <xref:System.Data.DataRow.BeginEdit%2A> method for more information.
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasVersion%2A> method to determine whether the current value of a column and the proposed value are the same. If so, the edit is canceled. Otherwise, the <xref:System.Data.DataRow.AcceptChanges%2A> method is called to end the edit.  \n  \n [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]"
  syntax:
    content: public bool HasVersion (System.Data.DataRowVersion version);
    parameters:
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values that specifies the row version.
    return:
      type: System.Boolean
      description: '`true` if the version exists; otherwise, `false`.'
  overload: System.Data.DataRow.HasVersion*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  commentId: M:System.Data.DataRow.IsNull(System.Data.DataColumn)
  id: IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: DataRow.IsNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value that indicates whether the specified <xref href="System.Data.DataColumn"></xref> contains a null value.
  remarks: ''
  example:
  - "The following example prints each column of each row in each table of a <xref:System.Data.DataSet>. If the row is set to a null value, the value is not printed.  \n  \n [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]"
  syntax:
    content: public bool IsNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: A <xref href="System.Data.DataColumn"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the column contains a null value; otherwise, `false`.'
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.IsNull(System.Int32)
  commentId: M:System.Data.DataRow.IsNull(System.Int32)
  id: IsNull(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: DataRow.IsNull(Int32)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value that indicates whether the column at the specified index contains a null value.
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]"
  syntax:
    content: public bool IsNull (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: The zero-based index of the column.
    return:
      type: System.Boolean
      description: '`true` if the column contains a null value; otherwise, `false`.'
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.IsNull(System.String)
  commentId: M:System.Data.DataRow.IsNull(System.String)
  id: IsNull(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: DataRow.IsNull(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value that indicates whether the named column contains a null value.
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]"
  syntax:
    content: public bool IsNull (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: The name of the column.
    return:
      type: System.Boolean
      description: '`true` if the column contains a null value; otherwise, `false`.'
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  id: IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn, DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn, DataRowVersion)
  fullName: DataRow.IsNull(DataColumn, DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets a value that indicates whether the specified <xref href="System.Data.DataColumn"></xref> and <xref href="System.Data.DataRowVersion"></xref> contains a null value.
  syntax:
    content: public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: A <xref href="System.Data.DataColumn"></xref>.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values that specifies the row version. Possible values are `Default`, `Original`, `Current`, and `Proposed`.
    return:
      type: System.Boolean
      description: '`true` if the column contains a null value; otherwise, `false`.'
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  commentId: P:System.Data.DataRow.Item(System.Data.DataColumn)
  id: Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: DataRow.Item(DataColumn)
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets the data stored in the specified <xref href="System.Data.DataColumn"></xref>.
  remarks: "When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.  \n  \n If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated."
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]"
  syntax:
    content: public object this[System.Data.DataColumn column] { get; set; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: A <xref href="System.Data.DataColumn"></xref> that contains the data.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that contains the data.
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The column does not belong to this table.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>column</code> is null.
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: An attempt was made to set a value on a deleted row.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The data types of the value and the column do not match.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.Item(System.Int32)
  commentId: P:System.Data.DataRow.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: DataRow.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets the data stored in the column specified by index.
  remarks: "When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.  \n  \n If this is an edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated."
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]"
  syntax:
    content: public object this[int columnIndex] { get; set; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: The zero-based index of the column.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that contains the data.
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: Occurs when you try to set a value on a deleted row.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The <code>columnIndex</code> argument is out of range.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: Occurs when you set the value and the new value's <xref href="System.Type"></xref> does not match <xref href="System.Data.DataColumn.DataType"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.Item(System.String)
  commentId: P:System.Data.DataRow.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: DataRow.Item(String)
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets the data stored in the column specified by name.
  remarks: "When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.  \n  \n If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated."
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]"
  syntax:
    content: public object this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: The name of the column.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that contains the data.
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The column specified by <code>columnName</code> cannot be found.
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: Occurs when you try to set a value on a deleted row.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: Occurs when you set a value and its <xref href="System.Type"></xref> does not match <xref href="System.Data.DataColumn.DataType"></xref>.
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: Occurs when you try to insert a null value into a column where <xref href="System.Data.DataColumn.AllowDBNull"></xref> is set to `false`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  commentId: P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  id: Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn, DataRowVersion)
  nameWithType: DataRow.Item(DataColumn, DataRowVersion)
  fullName: DataRow.Item(DataColumn, DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the specified version of data stored in the specified <xref href="System.Data.DataColumn"></xref>.
  remarks: "The `version` should not be confused with the <xref:System.Data.DataRow.RowState%2A> property. The `version` argument describes the state of the data that is contained by the column relative to the column's original value.  \n  \n When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.  \n  \n If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated."
  example:
  - "The following example gets the current value of a clicked cell in the <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]"
  syntax:
    content: public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: A <xref href="System.Data.DataColumn"></xref> that contains information about the column.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values that specifies the row version that you want. Possible values are `Default`, `Original`, `Current`, and `Proposed`.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that contains the data.
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The column does not belong to the table.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>column</code> argument contains null.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have this version of data.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  commentId: P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  id: Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32, DataRowVersion)
  nameWithType: DataRow.Item(Int32, DataRowVersion)
  fullName: DataRow.Item(Int32, DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the data stored in the column, specified by index and version of the data to retrieve.
  remarks: "You can only create or update a row after you call the <xref:System.Data.DataRow.BeginEdit%2A> method; similarly, the <xref:System.Data.DataRow.EndEdit%2A> method must be called to commit the edit. After you call the <xref:System.Data.DataRow.EndEdit%2A> method, and before you call the <xref:System.Data.DataRow.AcceptChanges%2A> method, internal representations of the original and new proposed values are stored. Therefore, until you call the <xref:System.Data.DataRow.AcceptChanges%2A>, you can use the `version` argument to specify which version of a column's value you need, either the `DataRowVersion.Original` or `DataRowVersion.Proposed`. However, as soon as you call the <xref:System.Data.DataRow.AcceptChanges%2A> method, the version of the column reverts to `DataRowVersion.Original`. If the row is new, you can also pass `DataRowVersion.Default` for the parameter to retrieve the column's default value. When passing `DataRowVersion.Current`, the property returns the current value, whatever its version may be.  \n  \n> [!NOTE]\n>  The <xref:System.Data.DataRow.BeginEdit%2A> method is called implicitly when you change the value of a data-bound control or when a <xref:System.Data.DataRow> object is added to the <xref:System.Data.DataRowCollection>; the <xref:System.Data.DataRow.EndEdit%2A> method is called implicitly when you call the following methods: the <xref:System.Data.DataRow.AcceptChanges%2A> method of the <xref:System.Data.DataRow> object, the <xref:System.Data.DataTable.AcceptChanges%2A> method of the <xref:System.Data.DataTable> object, or the <xref:System.Data.DataRow.CancelEdit%2A> method.  \n  \n By contrast, the <xref:System.Data.DataRowVersion> enumeration `Current` returns the version of the data after the <xref:System.Data.DataRow.EndEdit%2A> method has been called.  \n  \n The `version` argument should not be confused with the <xref:System.Data.DataRow.RowState%2A> property. The `version` argument describes the state of the data that is contained by the column relative to the column's original value. The <xref:System.Data.DataRow.RowState%2A> property describes the state of the whole row relative to its parent <xref:System.Data.DataTable>.  \n  \n When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.  \n  \n If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated."
  example:
  - "The following example gets the current value of a column through the <xref:System.Data.DataRow.Item%2A> property of the <xref:System.Data.DataRow> object.  \n  \n [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]"
  syntax:
    content: public object this[int columnIndex, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: The zero-based index of the column.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values that specifies the row version that you want. Possible values are `Default`, `Original`, `Current`, and `Proposed`.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that contains the data.
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The <code>columnIndex</code> argument is out of range.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The data types of the value and the column do not match.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have this version of data.
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: An attempt was made to set a value on a deleted row.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  commentId: P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  id: Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String, DataRowVersion)
  nameWithType: DataRow.Item(String, DataRowVersion)
  fullName: DataRow.Item(String, DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the specified version of data stored in the named column.
  remarks: "The version should not be confused with the <xref:System.Data.DataRow.RowState%2A> property. The `version` argument describes the state of the data that is contained by the column relative to the column's original value. The <xref:System.Data.DataRow.RowState%2A> property describes the state of the whole row relative to its parent <xref:System.Data.DataTable>.  \n  \n When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.  \n  \n If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated."
  example:
  - "The following example gets the current version of data at a clicked cell of a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]"
  syntax:
    content: public object this[string columnName, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnName
      type: System.String
      description: The name of the column.
    - id: version
      type: System.Data.DataRowVersion
      description: One of the <xref href="System.Data.DataRowVersion"></xref> values that specifies the row version that you want. Possible values are `Default`, `Original`, `Current`, and `Proposed`.
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that contains the data.
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The column specified by <code>columnName</code> cannot be found.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The data types of the value and the column do not match.
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: The row does not have this version of data.
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: The row was deleted.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.ItemArray
  commentId: P:System.Data.DataRow.ItemArray
  id: ItemArray
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: DataRow.ItemArray
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets all the values for this row through an array.
  remarks: "You can use this property to set or get values for this row through an array. If you use this property to set values, the array must have the same size and ordering as the column collection. Passing `null` in the <xref:System.Data.DataRow.ItemArray%2A> indicates that no value was specified.  \n  \n Users can generate exceptions in the <xref:System.Data.DataTable.ColumnChanging> event or the <xref:System.Data.DataTable.RowChanging> event."
  example:
  - "The following examples show how to get and set values using the <xref:System.Data.DataRow.ItemArray%2A> property.  \n  \n [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]"
  syntax:
    content: public object[] ItemArray { get; set; }
    return:
      type: System.Object[]
      description: An array of type <xref href="System.Object"></xref>.
  overload: System.Data.DataRow.ItemArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The array is larger than the number of columns in the table.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: A value in the array does not match its <xref href="System.Data.DataColumn.DataType"></xref> in its respective <xref href="System.Data.DataColumn"></xref>.
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: An edit broke a constraint.
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: An edit tried to change the value of a read-only column.
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: An edit tried to put a null value in a column where <xref href="System.Data.DataColumn.AllowDBNull"></xref> of the <xref href="System.Data.DataColumn"></xref> object is `false`.
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: The row has been deleted.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.RejectChanges
  commentId: M:System.Data.DataRow.RejectChanges
  id: RejectChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: DataRow.RejectChanges()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Rejects all changes made to the row since <xref href="System.Data.DataRow.AcceptChanges"></xref> was last called.
  remarks: When you call the <xref:System.Data.DataRow.RejectChanges%2A> method, the <xref:System.Data.DataRow.CancelEdit%2A> method is implicitly called to cancel any edits. If <xref:System.Data.DataRow.RowState%2A> is deleted or modified, the row reverts to its previous values, and <xref:System.Data.DataRow.RowState%2A> becomes unchanged. If the <xref:System.Data.DataRow.RowState%2A> is added, the row is removed.
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with 2 columns and 10 rows. After several <xref:System.Data.DataRow> items are deleted with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]"
  syntax:
    content: public void RejectChanges ();
    parameters: []
  overload: System.Data.DataRow.RejectChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: The row does not belong to the table.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.RowError
  commentId: P:System.Data.DataRow.RowError
  id: RowError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowError
  nameWithType: DataRow.RowError
  fullName: DataRow.RowError
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets or sets the custom error description for a row.
  remarks: Uses the <xref:System.Data.DataRow.HasErrors%2A> property to first determine whether a <xref:System.Data.DataRow> contains errors.
  example:
  - "The following example sets error text for ten rows of a table displayed in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]"
  syntax:
    content: public string RowError { get; set; }
    return:
      type: System.String
      description: The text describing an error.
  overload: System.Data.DataRow.RowError*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.RowState
  commentId: P:System.Data.DataRow.RowState
  id: RowState
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowState
  nameWithType: DataRow.RowState
  fullName: DataRow.RowState
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the current state of the row with regard to its relationship to the <xref href="System.Data.DataRowCollection"></xref>.
  remarks: 'The value of the <xref:System.Data.DataRow.RowState%2A> depends on two factors: the kind of operation has been performed on the row, and whether <xref:System.Data.DataRow.AcceptChanges%2A> has been called on the <xref:System.Data.DataRow>.'
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState%2A> is printed.  \n  \n [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataRowState RowState { get; }
    return:
      type: System.Data.DataRowState
      description: One of the <xref href="System.Data.DataRowState"></xref> values.
  overload: System.Data.DataRow.RowState*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.SetAdded
  commentId: M:System.Data.DataRow.SetAdded
  id: SetAdded
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: DataRow.SetAdded()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Changes the <xref href="System.Data.DataRow.Rowstate"></xref> of a <xref href="System.Data.DataRow"></xref> to `Added`.
  remarks: Changes the <xref:System.Data.DataRow.RowState%2A> of a <xref:System.Data.DataRow> to `Added`. If the current row is not in either an `Unchanged` or an `Added` state, it throws an <xref:System.InvalidOperationException> with the message that `SetAdded` can only be invoked on a `DataRow` instance where the `RowState` is `Unchanged`.
  syntax:
    content: public void SetAdded ();
    parameters: []
  overload: System.Data.DataRow.SetAdded*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  commentId: M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  id: SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(DataColumn, String)
  nameWithType: DataRow.SetColumnError(DataColumn, String)
  fullName: DataRow.SetColumnError(DataColumn, String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Sets the error description for a column specified as a <xref href="System.Data.DataColumn"></xref>.
  remarks: "To examine error descriptions, use the <xref:System.Data.DataRow.GetColumnError%2A> method.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> property. Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.  \n  \n If `null` or an empty string is passed in as the `error` parameter, the <xref:System.Data.DataRow> behaves as if no error was set and the <xref:System.Data.DataRow.HasErrors%2A> property will return false.  \n  \n To set a custom error description on the whole row, use the <xref:System.Data.DataRow.RowError%2A> property.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method.  \n  \n To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method."
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]"
  syntax:
    content: public void SetColumnError (System.Data.DataColumn column, string error);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: The <xref href="System.Data.DataColumn"></xref> to set the error description for.
    - id: error
      type: System.String
      description: The error description.
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  commentId: M:System.Data.DataRow.SetColumnError(System.Int32,System.String)
  id: SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(Int32, String)
  nameWithType: DataRow.SetColumnError(Int32, String)
  fullName: DataRow.SetColumnError(Int32, String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Sets the error description for a column specified by index.
  remarks: "The method is used to set custom error descriptions on specified columns. You can use the <xref:System.Windows.Forms.ErrorProvider> control to display the text of the error.  \n  \n To examine error descriptions, use the <xref:System.Data.DataRow.GetColumnError%2A> method.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> property. Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.  \n  \n If `null` or an empty string is passed in as the `error` parameter, the <xref:System.Data.DataRow> behaves as if no error was set and the <xref:System.Data.DataRow.HasErrors%2A> property will return false.  \n  \n To set a custom error description on the whole row, use the <xref:System.Data.DataRow.RowError%2A> property.  \n  \n To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method.  \n  \n To set error text that applies to a whole row, set the <xref:System.Data.DataRow.RowError%2A> property."
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]"
  syntax:
    content: public void SetColumnError (int columnIndex, string error);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: The zero-based index of the column.
    - id: error
      type: System.String
      description: The error description.
  overload: System.Data.DataRow.SetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The <code>columnIndex</code> argument is out of range
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  commentId: M:System.Data.DataRow.SetColumnError(System.String,System.String)
  id: SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(String, String)
  nameWithType: DataRow.SetColumnError(String, String)
  fullName: DataRow.SetColumnError(String, String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Sets the error description for a column specified by name.
  remarks: "The name of a column is set with the <xref:System.Data.DataColumn.ColumnName%2A> property of the <xref:System.Data.DataColumn> class.  \n  \n To examine error descriptions, use the <xref:System.Data.DataRow.GetColumnError%2A> method.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> property. Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.  \n  \n If `null` or an empty string is passed in as the `error` parameter, the <xref:System.Data.DataRow> behaves as if no error was set and the <xref:System.Data.DataRow.HasErrors%2A> property will return false.  \n  \n To set a custom error description on the whole row, use the <xref:System.Data.DataRow.RowError%2A> property.  \n  \n To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method.  \n  \n To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method."
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]"
  syntax:
    content: public void SetColumnError (string columnName, string error);
    parameters:
    - id: columnName
      type: System.String
      description: The name of the column.
    - id: error
      type: System.String
      description: The error description.
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.SetModified
  commentId: M:System.Data.DataRow.SetModified
  id: SetModified
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: DataRow.SetModified()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Changes the <xref href="System.Data.DataRow.Rowstate"></xref> of a <xref href="System.Data.DataRow"></xref> to `Modified`.
  remarks: Changes the <xref:System.Data.DataRow.Rowstate%2A> of a <xref:System.Data.DataRow> to `Modified`. If the current row is not in either an `Unchanged` or an `Added` state, it throws an <xref:System.InvalidOperationException> with the message that `SetModified` can only be invoked on a `DataRow` instance where the `RowState` is `Unchanged`.
  syntax:
    content: public void SetModified ();
    parameters: []
  overload: System.Data.DataRow.SetModified*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  commentId: M:System.Data.DataRow.SetNull(System.Data.DataColumn)
  id: SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: DataRow.SetNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Sets the value of the specified <xref href="System.Data.DataColumn"></xref> to a null value.
  remarks: Use the <xref:System.Data.DataRow.IsNull%2A> method to determine whether a column contains a null value.
  syntax:
    content: protected void SetNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: A <xref href="System.Data.DataColumn"></xref>.
  overload: System.Data.DataRow.SetNull*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  commentId: M:System.Data.DataRow.SetParentRow(System.Data.DataRow)
  id: SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: DataRow.SetParentRow(DataRow)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Sets the parent row of a <xref href="System.Data.DataRow"></xref> with specified new parent <xref href="System.Data.DataRow"></xref>.
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: The new parent <xref href="System.Data.DataRow"></xref>.
  overload: System.Data.DataRow.SetParentRow*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  commentId: M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  id: SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow, DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow, DataRelation)
  fullName: DataRow.SetParentRow(DataRow, DataRelation)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Sets the parent row of a <xref href="System.Data.DataRow"></xref> with specified new parent <xref href="System.Data.DataRow"></xref> and <xref href="System.Data.DataRelation"></xref>.
  remarks: ''
  example:
  - "The following example sets the parent row of a specific child row.  \n  \n [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]"
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: The new parent <xref href="System.Data.DataRow"></xref>.
    - id: relation
      type: System.Data.DataRelation
      description: The relation <xref href="System.Data.DataRelation"></xref> to use.
  overload: System.Data.DataRow.SetParentRow*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: One of the rows does not belong to a table
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One of the rows is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The relation does not belong to the <xref href="System.Data.DataRelationCollection"></xref> of the <xref href="System.Data.DataSet"></xref> object.
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: The relation's child <xref href="System.Data.DataTable"></xref> is not the table this row belongs to.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRow.Table
  commentId: P:System.Data.DataRow.Table
  id: Table
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Table
  nameWithType: DataRow.Table
  fullName: DataRow.Table
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data
  summary: Gets the <xref href="System.Data.DataTable"></xref> for which this row has a schema.
  remarks: A <xref:System.Data.DataRow> does not necessarily belong to any table's collection of rows. This behavior occurs when the <xref:System.Data.DataRow> has been created but not added to the <xref:System.Data.DataRowCollection>. If the <xref:System.Data.DataRow.RowState%2A> property returns `DataRowState.Detached`, the row is not in any collection.
  example:
  - "The following example uses the <xref:System.Data.DataRow.Table%2A> property to return a reference to the columns collection of the <xref:System.Data.DataTable>.  \n  \n [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]\n [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: The <xref href="System.Data.DataTable"></xref> to which this row belongs.
  overload: System.Data.DataRow.Table*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.RowNotInTableException
  parent: System.Data
  isExternal: false
  name: RowNotInTableException
  nameWithType: RowNotInTableException
  fullName: System.Data.RowNotInTableException
- uid: System.Data.InRowChangingEventException
  parent: System.Data
  isExternal: false
  name: InRowChangingEventException
  nameWithType: InRowChangingEventException
  fullName: System.Data.InRowChangingEventException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Data.VersionNotFoundException
  parent: System.Data
  isExternal: false
  name: VersionNotFoundException
  nameWithType: VersionNotFoundException
  fullName: System.Data.VersionNotFoundException
- uid: System.IndexOutOfRangeException
  parent: System
  isExternal: false
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: DataRow.DataRow(DataRowBuilder)
- uid: System.Data.DataRowBuilder
  parent: System.Data
  isExternal: false
  name: DataRowBuilder
  nameWithType: DataRowBuilder
  fullName: System.Data.DataRowBuilder
- uid: System.Data.DataRow.AcceptChanges
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: DataRow.AcceptChanges()
- uid: System.Data.DataRow.BeginEdit
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: DataRow.BeginEdit()
- uid: System.Data.DataRow.CancelEdit
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: DataRow.CancelEdit()
- uid: System.Data.DataRow.ClearErrors
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: DataRow.ClearErrors()
- uid: System.Data.DataRow.Delete
  parent: System.Data.DataRow
  isExternal: false
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: DataRow.Delete()
- uid: System.Data.DataRow.EndEdit
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: DataRow.EndEdit()
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: DataRow.GetChildRows(DataRelation)
- uid: System.Data.DataRow
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow[]
  nameWithType: DataRow[]
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: System.Data.DataRow
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRow.GetChildRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: DataRow.GetChildRows(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation, DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation, DataRowVersion)
  fullName: DataRow.GetChildRows(DataRelation, DataRowVersion)
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String, DataRowVersion)
  nameWithType: DataRow.GetChildRows(String, DataRowVersion)
  fullName: DataRow.GetChildRows(String, DataRowVersion)
- uid: System.Data.DataRow.GetColumnError(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: DataRow.GetColumnError(String)
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: DataRow.GetColumnError(DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: DataRow.GetColumnError(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRow.GetColumnsInError
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: DataRow.GetColumnsInError()
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn[]
  nameWithType: DataColumn[]
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: System.Data.DataColumn
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: DataRow.GetParentRow(DataRelation)
- uid: System.Data.DataRow.GetParentRow(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: DataRow.GetParentRow(String)
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation, DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation, DataRowVersion)
  fullName: DataRow.GetParentRow(DataRelation, DataRowVersion)
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String, DataRowVersion)
  nameWithType: DataRow.GetParentRow(String, DataRowVersion)
  fullName: DataRow.GetParentRow(String, DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation, DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation, DataRowVersion)
  fullName: DataRow.GetParentRows(DataRelation, DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: DataRow.GetParentRows(DataRelation)
- uid: System.Data.DataRow.GetParentRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: DataRow.GetParentRows(String)
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String, DataRowVersion)
  nameWithType: DataRow.GetParentRows(String, DataRowVersion)
  fullName: DataRow.GetParentRows(String, DataRowVersion)
- uid: System.Data.DataRow.HasErrors
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: DataRow.HasErrors
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: DataRow.HasVersion(DataRowVersion)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: DataRow.IsNull(DataColumn)
- uid: System.Data.DataRow.IsNull(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: DataRow.IsNull(Int32)
- uid: System.Data.DataRow.IsNull(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: DataRow.IsNull(String)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn, DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn, DataRowVersion)
  fullName: DataRow.IsNull(DataColumn, DataRowVersion)
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: DataRow.Item(DataColumn)
- uid: System.Data.DataRow.Item(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: DataRow.Item(Int32)
- uid: System.Data.DataRow.Item(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: DataRow.Item(String)
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn, DataRowVersion)
  nameWithType: DataRow.Item(DataColumn, DataRowVersion)
  fullName: DataRow.Item(DataColumn, DataRowVersion)
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32, DataRowVersion)
  nameWithType: DataRow.Item(Int32, DataRowVersion)
  fullName: DataRow.Item(Int32, DataRowVersion)
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String, DataRowVersion)
  nameWithType: DataRow.Item(String, DataRowVersion)
  fullName: DataRow.Item(String, DataRowVersion)
- uid: System.Data.DataRow.ItemArray
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: DataRow.ItemArray
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.RejectChanges
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: DataRow.RejectChanges()
- uid: System.Data.DataRow.RowError
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
  fullName: DataRow.RowError
- uid: System.Data.DataRow.RowState
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
  fullName: DataRow.RowState
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.DataRow.SetAdded
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: DataRow.SetAdded()
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(DataColumn, String)
  nameWithType: DataRow.SetColumnError(DataColumn, String)
  fullName: DataRow.SetColumnError(DataColumn, String)
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(Int32, String)
  nameWithType: DataRow.SetColumnError(Int32, String)
  fullName: DataRow.SetColumnError(Int32, String)
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(String, String)
  nameWithType: DataRow.SetColumnError(String, String)
  fullName: DataRow.SetColumnError(String, String)
- uid: System.Data.DataRow.SetModified
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: DataRow.SetModified()
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: DataRow.SetNull(DataColumn)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: DataRow.SetParentRow(DataRow)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow, DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow, DataRelation)
  fullName: DataRow.SetParentRow(DataRow, DataRelation)
- uid: System.Data.DataRow.Table
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
  fullName: DataRow.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRow.#ctor*
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow
  nameWithType: DataRow.DataRow
  fullName: DataRow.DataRow
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.AcceptChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges
  nameWithType: DataRow.AcceptChanges
  fullName: DataRow.AcceptChanges
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.BeginEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit
  nameWithType: DataRow.BeginEdit
  fullName: DataRow.BeginEdit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.CancelEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit
  nameWithType: DataRow.CancelEdit
  fullName: DataRow.CancelEdit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.ClearErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors
  nameWithType: DataRow.ClearErrors
  fullName: DataRow.ClearErrors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.Delete*
  parent: System.Data.DataRow
  isExternal: false
  name: Delete
  nameWithType: DataRow.Delete
  fullName: DataRow.Delete
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.EndEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit
  nameWithType: DataRow.EndEdit
  fullName: DataRow.EndEdit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.GetChildRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows
  nameWithType: DataRow.GetChildRows
  fullName: DataRow.GetChildRows
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.GetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError
  nameWithType: DataRow.GetColumnError
  fullName: DataRow.GetColumnError
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.GetColumnsInError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError
  nameWithType: DataRow.GetColumnsInError
  fullName: DataRow.GetColumnsInError
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.GetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow
  nameWithType: DataRow.GetParentRow
  fullName: DataRow.GetParentRow
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.GetParentRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows
  nameWithType: DataRow.GetParentRows
  fullName: DataRow.GetParentRows
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.HasErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: DataRow.HasErrors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.HasVersion*
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion
  nameWithType: DataRow.HasVersion
  fullName: DataRow.HasVersion
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.IsNull*
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull
  nameWithType: DataRow.IsNull
  fullName: DataRow.IsNull
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.Item*
  parent: System.Data.DataRow
  isExternal: false
  name: Item
  nameWithType: DataRow.Item
  fullName: DataRow.Item
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.ItemArray*
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: DataRow.ItemArray
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.RejectChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges
  nameWithType: DataRow.RejectChanges
  fullName: DataRow.RejectChanges
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.RowError*
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
  fullName: DataRow.RowError
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.RowState*
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
  fullName: DataRow.RowState
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.SetAdded*
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded
  nameWithType: DataRow.SetAdded
  fullName: DataRow.SetAdded
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.SetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError
  nameWithType: DataRow.SetColumnError
  fullName: DataRow.SetColumnError
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.SetModified*
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified
  nameWithType: DataRow.SetModified
  fullName: DataRow.SetModified
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.SetNull*
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull
  nameWithType: DataRow.SetNull
  fullName: DataRow.SetNull
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.SetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow
  nameWithType: DataRow.SetParentRow
  fullName: DataRow.SetParentRow
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Data.DataRow.Table*
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
  fullName: DataRow.Table
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRow.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, DataColumn)
  nameWithType: DataRowExtensions.Field<T>(DataRow, DataColumn)
  fullName: DataRowExtensions.Field<T>(DataRow, DataColumn)
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, DataColumn, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, DataColumn, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, DataColumn, DataRowVersion)
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, Int32)
  nameWithType: DataRowExtensions.Field<T>(DataRow, Int32)
  fullName: DataRowExtensions.Field<T>(DataRow, Int32)
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, Int32, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, Int32, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, Int32, DataRowVersion)
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, String)
  nameWithType: DataRowExtensions.Field<T>(DataRow, String)
  fullName: DataRowExtensions.Field<T>(DataRow, String)
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, String, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, String, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, String, DataRowVersion)
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: SetField<T>(DataRow, DataColumn, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, DataColumn, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, DataColumn, T)
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: SetField<T>(DataRow, Int32, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, Int32, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, Int32, T)
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: SetField<T>(DataRow, String, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, String, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, String, T)
