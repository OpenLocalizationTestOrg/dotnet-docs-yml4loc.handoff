### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  id: MarkupExtension
  children:
  - System.Windows.Markup.MarkupExtension.#ctor
  - System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  langs:
  - csharp
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
  type: Class
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.
  remarks: "Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML. Markup extensions return objects in a more sophisticated way than type converters alone can accomplish. A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it. From the CLR frame of reference, this means that a type or member is <xref:System.ComponentModel.TypeConverterAttribute> attributed. From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its `TypeConverter` property. The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases. In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it. A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.  \n  \n For information on creating a custom markup extension, see <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>. For more information on markup extensions in general, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md). If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  \n  \n The <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of each markup extension implementation can use an <xref:System.IServiceProvider> at run time that can provide context. This  <xref:System.IServiceProvider> is then queried for specific services that pass information, such as <xref:System.Windows.Markup.IProvideValueTarget> or <xref:System.Windows.Markup.IXamlTypeResolver>. For more information on service contexts for a markup extension, see [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  \n  \n Derived classes should be attributed with <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> to inform consumers of the most specific return type available from the markup extension's <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementation."
  syntax:
    content: public abstract class MarkupExtension
  inheritance:
  - System.Object
  derivedClasses:
  - System.Activities.Presentation.CachedResourceDictionaryExtension
  - System.Activities.XamlIntegration.DynamicUpdateMapExtension
  - System.Activities.XamlIntegration.PropertyReferenceExtension`1
  - System.ServiceModel.EndpointIdentityExtension
  - System.ServiceModel.XamlIntegration.SpnEndpointIdentityExtension
  - System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension
  - System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension
  - System.Windows.ColorConvertedBitmapExtension
  - System.Windows.DynamicResourceExtension
  - System.Windows.ResourceKey
  - System.Windows.StaticResourceExtension
  - System.Windows.TemplateBindingExtension
  - System.Windows.ThemeDictionaryExtension
  - System.Windows.Data.BindingBase
  - System.Windows.Data.RelativeSource
  - System.Windows.Markup.ArrayExtension
  - System.Windows.Markup.NullExtension
  - System.Windows.Markup.Reference
  - System.Windows.Markup.StaticExtension
  - System.Windows.Markup.TypeExtension
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/MarkupExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.MarkupExtension.#ctor
  commentId: M:System.Windows.Markup.MarkupExtension.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.MarkupExtension
  langs:
  - csharp
  name: MarkupExtension()
  nameWithType: MarkupExtension.MarkupExtension()
  fullName: MarkupExtension.MarkupExtension()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Initializes a new instance of a class derived from <xref href="System.Windows.Markup.MarkupExtension"></xref>.
  remarks: The <xref:System.Windows.Markup.MarkupExtension> abstract class does not hold any private values that require initialization.
  syntax:
    content: protected MarkupExtension ();
    parameters: []
  overload: System.Windows.Markup.MarkupExtension.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/MarkupExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.MarkupExtension
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: MarkupExtension.ProvideValue(IServiceProvider)
  fullName: MarkupExtension.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.
  remarks: "When a XAML processor processes a type node and member value that is a markup extension, it invokes the <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of that markup extension and writes the result into the object graph or serialization stream. The XAML object writer passes service context to each such implementation through the `serviceProvider` parameter.  \n  \n See \"Notes to Implementers\" section for more information on how to implement <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in a custom markup extension.  \n  \n## WPF Usage Notes  \n  \n> [!IMPORTANT]\n>  WPF classes that have specific interactions with markup set operations should not rely on <xref:System.Windows.Markup.IReceiveMarkupExtension> for a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementation. Use <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-attributed callbacks instead."
  syntax:
    content: public abstract object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: A service provider helper that can provide services for the markup extension.
    return:
      type: System.Object
      description: The object value to set on the property where the extension is applied.
  overload: System.Windows.Markup.MarkupExtension.ProvideValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/MarkupExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.MarkupExtension.#ctor
  parent: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: MarkupExtension()
  nameWithType: MarkupExtension.MarkupExtension()
  fullName: MarkupExtension.MarkupExtension()
- uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: MarkupExtension.ProvideValue(IServiceProvider)
  fullName: MarkupExtension.ProvideValue(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: false
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Markup.MarkupExtension.#ctor*
  parent: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: MarkupExtension
  nameWithType: MarkupExtension.MarkupExtension
  fullName: MarkupExtension.MarkupExtension
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/MarkupExtension.xml
- uid: System.Windows.Markup.MarkupExtension.ProvideValue*
  parent: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: ProvideValue
  nameWithType: MarkupExtension.ProvideValue
  fullName: MarkupExtension.ProvideValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/MarkupExtension.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
