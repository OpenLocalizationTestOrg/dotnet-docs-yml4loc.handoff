### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceView
  commentId: T:System.Web.UI.WebControls.SqlDataSourceView
  id: SqlDataSourceView
  children:
  - System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  - System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  - System.Web.UI.WebControls.SqlDataSourceView.CanPage
  - System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.SqlDataSourceView.CanSort
  - System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  - System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Deleted
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Deleting
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  - System.Web.UI.WebControls.SqlDataSourceView.Filtering
  - System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Inserted
  - System.Web.UI.WebControls.SqlDataSourceView.Inserting
  - System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  - System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  - System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Selected
  - System.Web.UI.WebControls.SqlDataSourceView.Selecting
  - System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  - System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  - System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Updated
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Updating
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Supports the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView> class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.  \n  \n ASP.NET data source controls contain one or more lists of data, represented by data source view objects. The <xref:System.Web.UI.WebControls.SqlDataSourceView> class extends the <xref:System.Web.UI.DataSourceView> class, defines the capabilities of the <xref:System.Web.UI.WebControls.SqlDataSource> control with which it is associated, and implements the basic data functionality for the data source control. The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the data functionality for the <xref:System.Web.UI.WebControls.SqlDataSource> control, including the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operations, sorting, filtering, and managing settings that are kept in view state.  \n  \n Although the <xref:System.Web.UI.WebControls.SqlDataSourceView> object is not directly exposed to page developers by the <xref:System.Web.UI.WebControls.SqlDataSource> control, many of its properties are. The most basic operation that a data source view performs is data retrieval from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, which retrieves an <xref:System.Collections.IEnumerable> collection of data items. The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements data retrieval from relational databases using SQL queries. The SQL queries can be parameterized for greater flexibility and security. The following data retrieval methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView> object supports updating data in a relational database using SQL commands. The SQL commands can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform updates automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot. The following update methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView> supports inserting new rows of data into a relational database. The SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform inserts automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot. The following insert methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView> object also supports deleting data from a relational database. As with other commands, the SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property can be parameterized for greater flexibility and security. Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform deletes automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot. The following delete methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event  \n  \n-   The <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event  \n  \n Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic. In other words, an SQL query with a static WHERE clause is not as flexible and powerful as an SQL query where the values in the WHERE clause are bound to values that can change, such as values that are displayed in controls on a Web Forms page. Instead of rebuilding an SQL query and setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property on every page load, you can use the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> properties to apply dynamic filtering to data retrieval. These properties are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to data-bound controls and other callers.  \n  \n You can sort the data that you retrieve with the <xref:System.Web.UI.WebControls.SqlDataSource> control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved. You can supply a sorting expression to the <xref:System.Web.UI.WebControls.SqlDataSourceView> by setting the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method. The syntax for the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is the same as the syntax for a <xref:System.Data.DataView.Sort%2A?displayProperty=fullName> property. If you use a stored procedure to retrieve data, you can also use the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property to specify a parameter that is used specifically for sorting the results of a stored procedure call.  \n  \n When more than one user can change the database concurrently, there is the potential for concurrency conflict. The <xref:System.Web.UI.WebControls.SqlDataSource> control has controls concurrency through the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> property. The functionality is implemented in the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName> property.  \n  \n Like many other Web server controls, the <xref:System.Web.UI.WebControls.SqlDataSourceView> implements the <xref:System.Web.UI.IStateManager> interface and uses view state to track its state across page requests. Implementations of the <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> and property and the <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> methods are provided to enable view state tracking for the control. For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)."
  syntax:
    content: 'public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  derivedClasses:
  - System.Web.UI.WebControls.AccessDataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SqlDataSourceView(SqlDataSource, String, HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource, String, HttpContext)
  fullName: SqlDataSourceView.SqlDataSourceView(SqlDataSource, String, HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> class setting the specified <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control as the owner of the current view.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> constructor is called by the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to return a new instance of a data source view with the specified `name` parameter. The <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with only one <xref:System.Web.UI.WebControls.SqlDataSourceView> object at any one time, and always names the view `Table`, although this naming restriction is imposed by the <xref:System.Web.UI.WebControls.SqlDataSource> control, not the <xref:System.Web.UI.WebControls.SqlDataSourceView>. You can override the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to support views with a different naming convention.  \n  \n The <xref:System.Web.HttpContext> object that is passed by the `context` parameter is used by the data source view to access parameter objects, such as the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> properties."
  syntax:
    content: public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SqlDataSource
      description: The data source control with which the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> is associated.
    - id: name
      type: System.String
      description: A unique name for the data source view, within the scope of the data source control that owns it.
    - id: context
      type: System.Web.HttpContext
      description: The current <xref href="System.Web.HttpContext"></xref>.
  overload: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: SqlDataSourceView.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters"></xref> collection evaluates to `null`.
  remarks: The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state.
  syntax:
    content: public bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: '`true`, if a data retrieval operation is canceled when a parameter contained in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters"></xref> collection evaluated to `null`; otherwise, `false`. The default is `true`.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: SqlDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a value indicating whether the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object that is associated with the current <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control supports the delete operation.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is set. A delete operation could still fail if all the data properties are not set or are not set correctly.
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: '`true`, if the operation is supported; otherwise, `false`.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: SqlDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a value indicating whether the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object that is associated with the current <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control supports the insert operation.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is set. An insert operation could still fail if all the data properties are not set or are not set correctly.
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: '`true`, if the operation is supported; otherwise, `false`.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: SqlDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a value indicating whether the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object that is associated with the current <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control supports the paging of retrieved data.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support paging.
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: SqlDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a value indicating whether the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object that is associated with the current <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control supports retrieving the total number of data rows, in addition to the set of data.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support retrieving row counts.
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: SqlDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a value indicating whether the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object that is associated with the current <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control supports a sorted view on the retrieved data.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> property returns `true`, if the current <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value and the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set.
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: '`true`, if sorting is supported; otherwise, `false`.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: SqlDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a value indicating whether the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object that is associated with the current <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control supports the update operation.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is set. A delete operation could still fail if all the data properties are not set or are not set correctly.
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: '`true`, if the operation is supported; otherwise, `false`.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: SqlDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the value indicating how the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property determines whether parameters for old and new values are applied to the `Update` method. For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property returns a <xref:System.Data.DataSet> object with the columns `Name` and `Number`, and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.OverwriteChanges> value, parameters are created for `Name` and `Number` for the update operation. If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`. (The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Then, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object determines if the method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property has parameters that match.  \n  \n Concurrency control is a technique data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data. For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user. If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data. This is considered a conflict. By setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required.  \n  \n The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is stored in view state."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: One of the <xref href="System.Web.UI.ConflictOptions"></xref> values. The default is the <xref href="System.Web.UI.ConflictOptions.OverwriteChanges"></xref> value.
  overload: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The selected value is not one of the <xref href="System.Web.UI.ConflictOptions"></xref> values.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary, IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary, IDictionary)
  fullName: SqlDataSourceView.Delete(IDictionary, IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Performs a delete operation using the <xref href="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand"></xref> SQL string, any parameters that are specified in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters"></xref> collection, and the values that are in the specified <code>keys</code> and <code>oldValues</code> collections.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method, passing the `keys` and `oldValues` parameters.
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of object or row key values for the <xref href="System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)"></xref> operation to delete.
    - id: oldValues
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> that contains row values that are evaluated only if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection"></xref> property is set to the <xref href="System.Web.UI.ConflictOptions.CompareAllValues"></xref> value.
    return:
      type: System.Int32
      description: A value that represents the number of rows deleted from the underlying database.
  overload: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection\"></xref> property is set to the <xref href=\"System.Web.UI.ConflictOptions.CompareAllValues\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSourceView.CanDelete"></xref> property is `false`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: SqlDataSourceView.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the SQL string that the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> uses to delete data from the underlying database.
  remarks: "Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.  \n  \n If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the  <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> can be an SQL string or the name of a stored procedure, if the underlying database supports stored procedures.  \n  \n The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is stored in view state."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked. Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  -->"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: An SQL string that the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> uses to delete data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: SqlDataSourceView.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the text in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand"></xref> property is a SQL statement or the name of a stored procedure.
  remarks: The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> property is stored in view state.
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: One of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType"></xref> values. The default is the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType.Text"></xref> value.
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The selected value is not one of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType"></xref> values.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: SqlDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs when a delete operation has completed.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event to examine the values of output parameters after a delete operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: SqlDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the parameters collection containing the parameters that are used by the <xref href="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand"></xref> property.
  remarks: "If the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.  \n  \n Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property of a data-bound control, or in delete and update scenarios in which the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` is passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection.  \n  \n Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]

      public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: A <xref href="System.Web.UI.WebControls.ParameterCollection"></xref> that contains the parameters used by the <xref href="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand"></xref> property.
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  exceptions: []
  attributes:
  - type: System.Web.UI.PersistenceModeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: SqlDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs before a delete operation.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation.  \n  \n The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  -->"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary, IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary, IDictionary)
  fullName: SqlDataSourceView.ExecuteDelete(IDictionary, IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Performs a delete operation using the <xref href="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand"></xref> SQL string, any parameters that are specified in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters"></xref> collection, and the values that are in the specified <code>keys</code> and <code>oldValues</code> collections.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method to delete data from a database. Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.  \n  \n The values that are contained in the `keys` collection are evaluated and merged with any values that are contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection. If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the values that are contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property and are also merged.  \n  \n Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete.  \n  \n To perform a delete operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the delete operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event. You can handle this event to examine any return values and error codes and to perform any post-processing."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of object or row key values for the <xref href="System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)"></xref> operation to delete.
    - id: oldValues
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> that contains row values that are evaluated only if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection"></xref> property is set to the <xref href="System.Web.UI.ConflictOptions.CompareAllValues"></xref> value.
    return:
      type: System.Int32
      description: A value that represents the number of rows deleted from the underlying database.
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection\"></xref> property is set to the <xref href=\"System.Web.UI.ConflictOptions.CompareAllValues\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current user does not have the correct permissions to access to the database.  \n  \n \\- or -  \n  \n The instance of the control is an <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control and access is denied to the path specified for the <xref href=\"System.Web.UI.WebControls.AccessDataSource.DataFile\"></xref> property."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.CanDelete\"></xref> property is `false`.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using an instance of the <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: SqlDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Performs an insert operation using the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> SQL string, any parameters that are specified in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertParameters"></xref> collection, and the values that are in the specified <code>values</code> collection.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method to insert data into a database. Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.  \n  \n Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.  \n  \n To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the insert completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event. You can handle this event to examine any return values and error codes and to perform any post-processing."
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of values used with the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> property to perform the insert database operation. If there are no parameters associated with the query or if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> property is not a parameterized SQL query, pass `null`.
    return:
      type: System.Int32
      description: A value that represents the number of rows inserted into the underlying database.
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> cannot establish a connection with the underlying data source.
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The current user does not have the correct permissions to gain access to the database.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSourceView.CanInsert"></xref> property is `false`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Retrieves data from the underlying database using the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand"></xref> SQL string and any parameters that are in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters"></xref> collection.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method to retrieve data from a database. Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.  \n  \n Before the data retrieval is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event. You can handle this event to examine the values of the parameters and to perform any preprocessing before data is retrieved.  \n  \n To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, and executes it against the underlying database. After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event. You can handle this event to examine any return values, error codes, and perform any post-processing.  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, or a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>. Close the <xref:System.Data.IDataReader> object when you have finished reading the data.  \n  \n If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSourceView> retrieves data from and saves data to the cache during the data operation. The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties.  \n  \n> [!IMPORTANT]\n>  When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data. If another user requests the same data, the data is retrieved from the cache. The data is not retrieved by making another call to the database to verify the user's access to the data. If you expect multiple users to access the data, and you want each retrieval to the data to be verified by the database's security configurations, do not use caching.  \n  \n If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> and a <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> has been specified, it is evaluated along with any supplied <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and the resulting filter is applied to the list of data during the data retrieval operation."
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: A <xref href="System.Web.UI.DataSourceSelectArguments"></xref> object used to request operations on the data beyond basic data retrieval.
    return:
      type: System.Collections.IEnumerable
      description: An <xref href="System.Collections.IEnumerable"></xref> list of data rows.
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\"></xref> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n Caching is enabled but the <xref href=\"System.Web.UI.WebControls.SqlDataSource.DataSourceMode\"></xref> property of the data source is not set to <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode.DataSet\"></xref>.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.SortParameterName\"></xref> property is set but <xref href=\"System.Data.SqlClient.SqlCommand.CommandType\"></xref> is not set to <xref href=\"System.Data.CommandType.StoredProcedure\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The data source cannot create a database connection.  \n  \n \\- or -  \n  \n Caching is enabled but the internal cache and command types do not match."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary, IDictionary, IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary, IDictionary, IDictionary)
  fullName: SqlDataSourceView.ExecuteUpdate(IDictionary, IDictionary, IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Performs an update operation using the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> SQL string, any parameters that are in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters"></xref> collection, and the values that are in the specified <code>keys</code>, <code>values</code>, and <code>oldValues</code> collections.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method to update data in a database. Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method.  \n  \n The values contained in the `keys` and `values` collections are evaluated and merged with any values contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection. If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to  <xref:System.Web.UI.ConflictOptions.CompareAllValues>, the values contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> and also merged.  \n  \n Before the update operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event. You can handle this event to examine the values of the parameters and perform any preprocessing before an update.  \n  \n To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database. After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event. You can handle this event to examine any return values and error codes and to perform any post-processing."
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of primary keys to use with the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property to perform the update database operation. If there are no keys associated with the query or if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property is not a parameterized SQL query, pass `null`.
    - id: values
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of values to use with the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property to perform the update database operation. If there are no parameters associated with the query or if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> is not a parameterized SQL query, pass `null`.
    - id: oldValues
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> that represents the original values in the database. If there are no parameters associated with the query or if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property is not a parameterized SQL query, pass `null`.
    return:
      type: System.Int32
      description: A value that represents the number of rows updated in the underlying database.
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection\"></xref> property is set to the <xref href=\"System.Web.UI.ConflictOptions.CompareAllValues\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The current user does not have the correct permissions to gain access to the database.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSourceView.CanUpdate"></xref> property is `false`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: SqlDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a filtering expression that is applied when the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Select*"></xref> method is called.
  remarks: "The syntax that is used for the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is a format string–style syntax. You can include parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property. If the type of the parameter is string or character, enclose the parameter in single quotation marks. Quotation marks are not required, if the parameter is a numeric type.  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in `DataSet` mode.  \n  \n The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is stored in view state.  \n  \n> [!IMPORTANT]\n>  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  -->"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: A string that represents a filtering expression applied when data is retrieved using the <xref href="System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)"></xref> method.
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression"></xref> property was set when the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> is in the <xref href="System.Web.UI.WebControls.SqlDataSourceMode.DataReader"></xref> mode.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: SqlDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs before a filter operation.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSourceView> object performs a filter operation. You can cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`. The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is set.  \n  \n> [!IMPORTANT]\n>  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: SqlDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a collection of parameters that are associated with any parameter placeholders in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression"></xref> string.
  remarks: "The parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property. The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> are evaluated by order and matched to parameter objects in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method is called.  \n  \n> [!IMPORTANT]\n>  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]

      public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: A <xref href="System.Web.UI.WebControls.ParameterCollection"></xref> that contains a set of parameters associated with any parameter placeholders found in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression"></xref> property.
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  exceptions: []
  attributes:
  - type: System.Web.UI.PersistenceModeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: SqlDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Performs an insert operation using the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> SQL string, any parameters that are specified in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertParameters"></xref> collection, and the values that are in the specified <code>values</code> collection.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method, passing the `values` parameter.
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of parameters for the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> property to use to perform the insert database operation. If there are no parameters associated with the query or if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> is not a parameterized SQL query, pass `null`.
    return:
      type: System.Int32
      description: A value that represents the number of rows inserted into the underlying database.
  overload: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> cannot establish a connection with the underlying data source.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSourceView.CanInsert"></xref> property is `false`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: SqlDataSourceView.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the SQL string that the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object uses to insert data into the underlying database.
  remarks: "Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.  \n  \n The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is stored in view state."
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  -->  \n  \n The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  -->"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: An SQL string that the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> uses to insert data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: SqlDataSourceView.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the text in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> property is a SQL statement or the name of a stored procedure.
  remarks: The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> property is stored in view state.
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  -->"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: One of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType"></xref> values. The value is the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType.Text"></xref> value.
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The selected value is not one of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType"></xref> values.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: SqlDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs when an insert operation has completed.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event to examine the values of output parameters after an insert operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  -->"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: SqlDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs before an insert operation.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation.  \n  \n The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the database operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  -->"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: SqlDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the parameters collection containing the parameters that are used by the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> property.
  remarks: "If the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.  \n  \n Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]

      public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: A <xref href="System.Web.UI.WebControls.ParameterCollection"></xref> that contains the parameters used by the <xref href="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand"></xref> property.
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  exceptions: []
  attributes:
  - type: System.Web.UI.PersistenceModeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: SqlDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a value indicating whether the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object is saving changes to its view state.
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: '`true`, if the data source view is marked to save its state; otherwise, `false`.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: SqlDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Restores the previously saved view state for the data source view.
  remarks: "This method is primarily used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] infrastructure and is not intended to be used directly from your code.  However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> method restores view-state information for the <xref:System.Web.UI.WebControls.SqlDataSourceView> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method."
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: An object that represents the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> state to restore.
  overload: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: SqlDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a format string to apply to the names of any parameters that are passed to the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Delete*"></xref> or <xref href="System.Web.UI.WebControls.SqlDataSourceView.Update*"></xref> method.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> format string is applied to primary keys only, such as those that are identified by the `DataKeyNames` property of the data-bound control or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` is passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection. For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>.  \n  \n The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property is stored in view state."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: A string that represents a format string applied to the names of any <code>oldValues</code> parameters passed to the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Delete*"></xref> or <xref href="System.Web.UI.WebControls.SqlDataSourceView.Update*"></xref> methods. The default is "{0}".
  overload: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Deleted"></xref> event after the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control has completed a delete operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Deleting"></xref> event before the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control attempts a delete operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete is performed.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  -->"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Filtering"></xref> event before the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control filters the results of a select operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Inserted"></xref> event after the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control has completed an insert operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  -->"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Inserting"></xref> event before the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control attempts an insert operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  -->"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Selected"></xref> event after the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control has completed a data retrieval operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Selecting"></xref> event before the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control attempts a data retrieval operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Updated"></xref> event after the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control has completed an update operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  -->"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Updating"></xref> event before the <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> control attempts an update operation.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  -->"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: A <xref href="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  id: ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: SqlDataSourceView.ParameterPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.
  remarks: "SQL queries and commands can be parameterized, in that they contain placeholders for values that are bound to the query at run time. Depending on the ADO.NET provider that is set for the <xref:System.Web.UI.WebControls.SqlDataSource> control, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the parameters are evaluated by alias or by their ordering in the <xref:System.Web.UI.WebControls.ParameterCollection> object.  \n  \n If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is not set or is set to the <xref:System.Data.SqlClient?displayProperty=fullName>, parameters are evaluated by alias and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is used to add a parameter prefix to the <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of each <xref:System.Web.UI.WebControls.Parameter> object in a <xref:System.Web.UI.WebControls.ParameterCollection> during a data retrieval or data manipulation operation. If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb?displayProperty=fullName> or <xref:System.Data.Odbc?displayProperty=fullName>, the parameters are evaluated by order and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> and <xref:System.Web.UI.WebControls.Parameter.Name%2A> properties are ignored.  \n  \n If you extend the <xref:System.Web.UI.WebControls.SqlDataSourceView> class, you can override the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property to supply a prefix other than the `\"@\"` string, if required."
  syntax:
    content: protected virtual string ParameterPrefix { get; }
    return:
      type: System.String
      description: The "@" string.
  overload: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Compares the capabilities that are requested for an <xref href="System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)"></xref> operation against those that the view supports and is called by the <xref href="System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)"></xref> method.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, and to compare those capabilities to the capabilities that are supported by the data source view. For the capabilities that are represented by the <xref:System.Web.UI.DataSourceSelectArguments> object and are not supported by the data source view, a <xref:System.NotSupportedException> exception is raised.
  syntax:
    content: protected override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: One of the <xref href="System.Web.UI.DataSourceCapabilities"></xref> values that is compared against the capabilities that the view supports.
  overload: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The data source does not have the selected <code>capability</code> enabled.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: SqlDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Saves the changes to the view state for the  <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> control since the time that the page was posted back to the server.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method is primarily used by control developers.  \n  \n View state is the accumulation of the values of the properties for a server control. These values are automatically placed in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class. The <xref:System.Web.UI.Control.ViewState%2A> value for the server control is then persisted to a string object after the save state stage of the server control life cycle.  \n  \n When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML `Hidden` element. When you author custom server controls, you can improve efficiency by overriding the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method and modifying the `ViewState` property for your server control. For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: The object that contains the changes to the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> view state; otherwise, `null`, if there is no view state associated with the object.
  overload: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: SqlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Retrieves data from the underlying database using the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand"></xref> SQL string and any parameters that are in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters"></xref> collection.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method, passing the `selectArgs` parameter.  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value or it returns a <xref:System.Data.IDataReader> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value. Close the <xref:System.Data.IDataReader> object when you have finished reading the data."
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: A <xref href="System.Web.UI.DataSourceSelectArguments"></xref> used to request operations on the data beyond basic data retrieval.
    return:
      type: System.Collections.IEnumerable
      description: An <xref href="System.Collections.IEnumerable"></xref> list of data rows.
  overload: System.Web.UI.WebControls.SqlDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <code>selectArgs</code> passed to the <xref href="System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)"></xref> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> cannot establish a connection with the underlying data source.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: SqlDataSourceView.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the SQL string that the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object uses to retrieve data from the underlying database.
  remarks: "Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.  \n  \n> [!IMPORTANT]\n>  It is more secure to use a stored procedure than a SQL statement for the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property.  \n  \n The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is stored in view state."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  -->  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  -->"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: An SQL string that the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> uses to retrieve data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: SqlDataSourceView.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the text in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand"></xref> property is a SQL query or the name of a stored procedure.
  remarks: The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> property is stored in view state.
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  -->"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: One of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType"></xref> values. The default is the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType.Text"></xref> value.
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The selected value is not one of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType"></xref> values.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: SqlDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs when a data retrieval operation has completed.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> event to examine the values of output parameters after a data retrieval operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: SqlDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs before a data retrieval operation.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the data retrieval operation.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: SqlDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the parameters collection containing the parameters that are used by the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand"></xref> property.
  remarks: "If the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.  \n  \n Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  -->"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: A <xref href="System.Web.UI.WebControls.ParameterCollection"></xref> that contains the parameters used by the <xref href="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand"></xref> property.
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: SqlDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.
  remarks: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure. In this case, if the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.  \n  \n If the  <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property.  \n  \n The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is stored in view state."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.
  overload: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: SqlDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Causes the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object to track changes to its view state so that the changes can be stored in the <xref href="System.Web.UI.StateBag"></xref> object for the control and persisted across requests for the same page.
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Update(IDictionary, IDictionary, IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary, IDictionary, IDictionary)
  fullName: SqlDataSourceView.Update(IDictionary, IDictionary, IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Performs an update operation using the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> SQL string, any parameters that are in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters"></xref> collection, and the values that are in the specified <code>keys</code>, <code>values</code>, and <code>oldValues</code> collections.
  remarks: The <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method, passing the `keys`, `values`, and `oldValues` parameters. For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>.
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method explicitly.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  -->"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of primary keys to use with the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property to perform the update database operation. If there are no keys associated with the query or if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> is not a parameterized SQL query, pass `null`.
    - id: values
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> of values to use with the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property to perform the update database operation. If there are no parameters associated with the query or if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> is not a parameterized SQL query, pass `null`.
    - id: oldValues
      type: System.Collections.IDictionary
      description: An <xref href="System.Collections.IDictionary"></xref> that represents the original values in the database. If there are no parameters associated with the query or if the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> is not a parameterized SQL query, pass `null`.
    return:
      type: System.Int32
      description: A value that represents the number of rows updated in the underlying database.
  overload: System.Web.UI.WebControls.SqlDataSourceView.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSource"></xref> cannot establish a connection with the underlying data source.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Web.UI.WebControls.SqlDataSourceView.CanUpdate"></xref> property is `false`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: SqlDataSourceView.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the SQL string that the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> object uses to update data in the underlying database.
  remarks: "Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property. If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used. For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=fullName>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`. However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=fullName> or <xref:System.Data.OleDb?displayProperty=fullName>, the placeholder of the parameter is `'?'`. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.  \n  \n The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is stored in view state."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected. This example also includes some post-processing—after a record is updated, an e-mail message notification is sent.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  -->  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  -->"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: A SQL string that the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> uses to update data.
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: SqlDataSourceView.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the text in the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property is a SQL statement or the name of a stored procedure.
  remarks: The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> property is stored in view state.
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: One of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType"></xref> values. The default is the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType.Text"></xref> value.
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The selected value is not one of the <xref href="System.Web.UI.WebControls.SqlDataSourceCommandType"></xref> values.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: SqlDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs when an update operation has completed.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event to examine the values of output parameters after an update operation has completed. The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  -->"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: SqlDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the parameters collection containing the parameters that are used by the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property.
  remarks: "If the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders that are in the SQL string.  \n  \n Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, and a set of `oldValues` are passed to the corresponding data method. In this case, the format string is applied to each parameter name in the `oldValues` collection.  \n  \n Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection might be important. The <xref:System.Data.OleDb?displayProperty=fullName> and <xref:System.Data.Odbc?displayProperty=fullName> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query. The <xref:System.Data.SqlClient?displayProperty=fullName> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query. For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]

      public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: A <xref href="System.Web.UI.WebControls.ParameterCollection"></xref> that contains the parameters used by the <xref href="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand"></xref> property.
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  exceptions: []
  attributes:
  - type: System.Web.UI.PersistenceModeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  commentId: E:System.Web.UI.WebControls.SqlDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: SqlDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs before an update operation.
  remarks: "Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation.  \n  \n The connection to the underlying data source is not yet open when the event handler delegate is called. Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object. You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  -->"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  commentId: P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.IStateManager.IsTrackingViewState
  fullName: SqlDataSourceView.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: For a description of this member, see <xref href="System.Web.UI.IStateManager.IsTrackingViewState"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: '`true`, if the data source view is marked to save its state; otherwise, `false`.'
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.IStateManager.LoadViewState(Object)
  fullName: SqlDataSourceView.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: For a description of this member, see <xref href="System.Web.UI.IStateManager.LoadViewState(System.Object)"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: An object that represents the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> state to restore.
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.IStateManager.SaveViewState()
  fullName: SqlDataSourceView.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: For a description of this member, see <xref href="System.Web.UI.IStateManager.SaveViewState"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: The object that contains the changes to the <xref href="System.Web.UI.WebControls.SqlDataSourceView"></xref> view state; otherwise, `null`, if there is no view state associated with the object.
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  commentId: M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.IStateManager.TrackViewState()
  fullName: SqlDataSourceView.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: For a description of this member, see <xref href="System.Web.UI.IStateManager.TrackViewState"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView(SqlDataSource, String, HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource, String, HttpContext)
  fullName: SqlDataSourceView.SqlDataSourceView(SqlDataSource, String, HttpContext)
- uid: System.Web.UI.WebControls.SqlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete(IDictionary, IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary, IDictionary)
  fullName: SqlDataSourceView.Delete(IDictionary, IDictionary)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: SqlDataSourceView.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: SqlDataSourceView.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary, IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary, IDictionary)
  fullName: SqlDataSourceView.ExecuteDelete(IDictionary, IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: SqlDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary, IDictionary, IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary, IDictionary, IDictionary)
  fullName: SqlDataSourceView.ExecuteUpdate(IDictionary, IDictionary, IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: SqlDataSourceView.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: SqlDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: SqlDataSourceView.Inserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: SqlDataSourceView.Inserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: SqlDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventArgs
  nameWithType: SqlDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventArgs
  nameWithType: SqlDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: SqlDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: SqlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: SqlDataSourceView.Selected
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: SqlDataSourceView.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: SqlDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update(IDictionary, IDictionary, IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary, IDictionary, IDictionary)
  fullName: SqlDataSourceView.Update(IDictionary, IDictionary, IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: SqlDataSourceView.Updated
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: SqlDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: SqlDataSourceView.Updating
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.IStateManager.IsTrackingViewState
  fullName: SqlDataSourceView.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.IStateManager.LoadViewState(Object)
  fullName: SqlDataSourceView.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.IStateManager.SaveViewState()
  fullName: SqlDataSourceView.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.IStateManager.TrackViewState()
  fullName: SqlDataSourceView.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView.SqlDataSourceView
  fullName: SqlDataSourceView.SqlDataSourceView
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: SqlDataSourceView.CancelSelectOnNullParameter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: SqlDataSourceView.CanDelete
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: SqlDataSourceView.CanInsert
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: SqlDataSourceView.CanPage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: SqlDataSourceView.CanRetrieveTotalRowCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: SqlDataSourceView.CanSort
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: SqlDataSourceView.CanUpdate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: SqlDataSourceView.ConflictDetection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete
  nameWithType: SqlDataSourceView.Delete
  fullName: SqlDataSourceView.Delete
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: SqlDataSourceView.DeleteCommand
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: SqlDataSourceView.DeleteCommandType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: SqlDataSourceView.DeleteParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: SqlDataSourceView.ExecuteDelete
  fullName: SqlDataSourceView.ExecuteDelete
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: SqlDataSourceView.ExecuteInsert
  fullName: SqlDataSourceView.ExecuteInsert
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: SqlDataSourceView.ExecuteSelect
  fullName: SqlDataSourceView.ExecuteSelect
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: SqlDataSourceView.ExecuteUpdate
  fullName: SqlDataSourceView.ExecuteUpdate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: SqlDataSourceView.FilterExpression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: SqlDataSourceView.FilterParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert
  nameWithType: SqlDataSourceView.Insert
  fullName: SqlDataSourceView.Insert
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: SqlDataSourceView.InsertCommand
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: SqlDataSourceView.InsertCommandType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: SqlDataSourceView.InsertParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: SqlDataSourceView.IsTrackingViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSourceView.LoadViewState
  fullName: SqlDataSourceView.LoadViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: SqlDataSourceView.OldValuesParameterFormatString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: SqlDataSourceView.OnDeleted
  fullName: SqlDataSourceView.OnDeleted
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: SqlDataSourceView.OnDeleting
  fullName: SqlDataSourceView.OnDeleting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: SqlDataSourceView.OnFiltering
  fullName: SqlDataSourceView.OnFiltering
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: SqlDataSourceView.OnInserted
  fullName: SqlDataSourceView.OnInserted
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: SqlDataSourceView.OnInserting
  fullName: SqlDataSourceView.OnInserting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: SqlDataSourceView.OnSelected
  fullName: SqlDataSourceView.OnSelected
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: SqlDataSourceView.OnSelecting
  fullName: SqlDataSourceView.OnSelecting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: SqlDataSourceView.OnUpdated
  fullName: SqlDataSourceView.OnUpdated
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: SqlDataSourceView.OnUpdating
  fullName: SqlDataSourceView.OnUpdating
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: SqlDataSourceView.ParameterPrefix
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError
  fullName: SqlDataSourceView.RaiseUnsupportedCapabilityError
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSourceView.SaveViewState
  fullName: SqlDataSourceView.SaveViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select
  nameWithType: SqlDataSourceView.Select
  fullName: SqlDataSourceView.Select
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: SqlDataSourceView.SelectCommand
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: SqlDataSourceView.SelectCommandType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: SqlDataSourceView.SelectParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: SqlDataSourceView.SortParameterName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSourceView.TrackViewState
  fullName: SqlDataSourceView.TrackViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update
  nameWithType: SqlDataSourceView.Update
  fullName: SqlDataSourceView.Update
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: SqlDataSourceView.UpdateCommand
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: SqlDataSourceView.UpdateCommandType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: SqlDataSourceView.UpdateParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState
  fullName: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState
  fullName: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState
  fullName: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/SqlDataSourceView.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: DataSourceView.CanExecute(String)
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: DataSourceView.DataSourceViewChanged
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete(IDictionary, IDictionary, DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary, IDictionary, DataSourceViewOperationCallback)
  fullName: DataSourceView.Delete(IDictionary, IDictionary, DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.Events
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
  fullName: DataSourceView.Events
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String, IDictionary, IDictionary, DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String, IDictionary, IDictionary, DataSourceViewOperationCallback)
  fullName: DataSourceView.ExecuteCommand(String, IDictionary, IDictionary, DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String, IDictionary, IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String, IDictionary, IDictionary)
  fullName: DataSourceView.ExecuteCommand(String, IDictionary, IDictionary)
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert(IDictionary, DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary, DataSourceViewOperationCallback)
  fullName: DataSourceView.Insert(IDictionary, DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.Name
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
  fullName: DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: DataSourceView.OnDataSourceViewChanged(EventArgs)
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments, DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments, DataSourceViewSelectCallback)
  fullName: DataSourceView.Select(DataSourceSelectArguments, DataSourceViewSelectCallback)
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update(IDictionary, IDictionary, IDictionary, DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary, IDictionary, IDictionary, DataSourceViewOperationCallback)
  fullName: DataSourceView.Update(IDictionary, IDictionary, IDictionary, DataSourceViewOperationCallback)
- uid: System.Web.UI.IStateManager
  parent: System.Web.UI
  isExternal: false
  name: IStateManager
  nameWithType: IStateManager
  fullName: System.Web.UI.IStateManager
