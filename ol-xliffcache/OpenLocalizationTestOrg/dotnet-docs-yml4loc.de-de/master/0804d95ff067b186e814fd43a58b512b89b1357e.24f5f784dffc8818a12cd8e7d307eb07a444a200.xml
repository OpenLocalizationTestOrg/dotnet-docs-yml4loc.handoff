{"nodes":[{"content":"Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.","nodes":[{"pos":[0,133],"content":"Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.","nodes":[{"content":"Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.","pos":[0,133]}]}],"pos":[842,976],"yaml":true},{"content":"The <xref:System.Data.IDbConnection> interface enables an inheriting class to implement a Connection class, which represents a unique session with a data source (for example, a network connection to a server). For more information about Connection classes, see [Connecting to a Data Source](~/docs/framework/data/adonet/connecting-to-a-data-source.md).  \n  \n An application does not create an instance of the <xref:System.Data.IDbConnection> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbConnection>.  \n  \n Classes that inherit <xref:System.Data.IDbConnection> must implement all inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbConnection> interface defines the <xref:System.Data.IDbConnection.ConnectionTimeout%2A> property. In turn, the <xref:System.Data.SqlClient.SqlConnection> class inherits this property, and also defines the <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> property.","nodes":[{"pos":[0,352],"content":"The <xref:System.Data.IDbConnection> interface enables an inheriting class to implement a Connection class, which represents a unique session with a data source (for example, a network connection to a server). For more information about Connection classes, see [Connecting to a Data Source](~/docs/framework/data/adonet/connecting-to-a-data-source.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbConnection&gt;</ph> interface enables an inheriting class to implement a Connection class, which represents a unique session with a data source (for example, a network connection to a server).","pos":[0,209],"source":"The <xref:System.Data.IDbConnection> interface enables an inheriting class to implement a Connection class, which represents a unique session with a data source (for example, a network connection to a server)."},{"content":"For more information about Connection classes, see <bpt id=\"p1\">[</bpt>Connecting to a Data Source<ept id=\"p1\">](~/docs/framework/data/adonet/connecting-to-a-data-source.md)</ept>.","pos":[210,352],"source":" For more information about Connection classes, see [Connecting to a Data Source](~/docs/framework/data/adonet/connecting-to-a-data-source.md)."}]},{"pos":[359,544],"content":"An application does not create an instance of the <xref:System.Data.IDbConnection> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbConnection>.","nodes":[{"content":"An application does not create an instance of the <ph id=\"ph1\">&lt;xref:System.Data.IDbConnection&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id=\"ph2\">&lt;xref:System.Data.IDbConnection&gt;</ph>.","pos":[0,185],"source":"An application does not create an instance of the <xref:System.Data.IDbConnection> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbConnection>."}]},{"pos":[551,1032],"content":"Classes that inherit <xref:System.Data.IDbConnection> must implement all inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbConnection> interface defines the <xref:System.Data.IDbConnection.ConnectionTimeout%2A> property. In turn, the <xref:System.Data.SqlClient.SqlConnection> class inherits this property, and also defines the <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> property.","nodes":[{"content":"Classes that inherit <xref:System.Data.IDbConnection> must implement all inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbConnection> interface defines the <xref:System.Data.IDbConnection.ConnectionTimeout%2A> property. In turn, the <xref:System.Data.SqlClient.SqlConnection> class inherits this property, and also defines the <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> property.","pos":[0,481],"nodes":[{"content":"Classes that inherit <ph id=\"ph1\">&lt;xref:System.Data.IDbConnection&gt;</ph> must implement all inherited members, and typically define additional members to add provider-specific functionality.","pos":[0,171],"source":"Classes that inherit <xref:System.Data.IDbConnection> must implement all inherited members, and typically define additional members to add provider-specific functionality."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Data.IDbConnection&gt;</ph> interface defines the <ph id=\"ph2\">&lt;xref:System.Data.IDbConnection.ConnectionTimeout%2A&gt;</ph> property.","pos":[172,307],"source":" For example, the <xref:System.Data.IDbConnection> interface defines the <xref:System.Data.IDbConnection.ConnectionTimeout%2A> property."},{"content":"In turn, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> class inherits this property, and also defines the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> property.","pos":[308,481],"source":" In turn, the <xref:System.Data.SqlClient.SqlConnection> class inherits this property, and also defines the <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> property."}]}]}],"pos":[987,2026],"yaml":true,"extradata":"MT"},{"content":"Begins a database transaction.","nodes":[{"pos":[0,30],"content":"Begins a database transaction.","nodes":[{"content":"Begins a database transaction.","pos":[0,30]}]}],"pos":[4352,4383],"yaml":true},{"content":"Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <xref:System.Data.IDbTransaction.Commit%2A> or <xref:System.Data.IDbTransaction.Rollback%2A> methods.","nodes":[{"pos":[0,206],"content":"Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <xref:System.Data.IDbTransaction.Commit%2A> or <xref:System.Data.IDbTransaction.Rollback%2A> methods.","nodes":[{"content":"Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <ph id=\"ph1\">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.IDbTransaction.Rollback%2A&gt;</ph> methods.","pos":[0,206],"source":"Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <xref:System.Data.IDbTransaction.Commit%2A> or <xref:System.Data.IDbTransaction.Rollback%2A> methods."}]}],"pos":[4394,4601],"yaml":true,"extradata":"MT"},{"content":"An object representing the new transaction.","nodes":[{"pos":[0,43],"content":"An object representing the new transaction.","nodes":[{"content":"An object representing the new transaction.","pos":[0,43]}]}],"pos":[4768,4812],"yaml":true},{"content":"Begins a database transaction with the specified <xref href=\"System.Data.IsolationLevel\"></xref> value.","nodes":[{"pos":[0,103],"content":"Begins a database transaction with the specified <ph id=\"ph1\">&lt;xref href=\"System.Data.IsolationLevel\"&gt;&lt;/xref&gt;</ph> value.","source":"Begins a database transaction with the specified <xref href=\"System.Data.IsolationLevel\"></xref> value."}],"pos":[6226,6330],"yaml":true},{"content":"Once the transaction has completed, you must explicitly commit or roll back the transaction using the <xref:System.Data.IDbTransaction.Commit%2A> or <xref:System.Data.IDbTransaction.Rollback%2A> methods.","nodes":[{"pos":[0,203],"content":"Once the transaction has completed, you must explicitly commit or roll back the transaction using the <xref:System.Data.IDbTransaction.Commit%2A> or <xref:System.Data.IDbTransaction.Rollback%2A> methods.","nodes":[{"content":"Once the transaction has completed, you must explicitly commit or roll back the transaction using the <ph id=\"ph1\">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.IDbTransaction.Rollback%2A&gt;</ph> methods.","pos":[0,203],"source":"Once the transaction has completed, you must explicitly commit or roll back the transaction using the <xref:System.Data.IDbTransaction.Commit%2A> or <xref:System.Data.IDbTransaction.Rollback%2A> methods."}]}],"pos":[6341,6545],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Data.IsolationLevel\"></xref> values.","nodes":[{"pos":[0,66],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.IsolationLevel\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Data.IsolationLevel\"></xref> values."}],"pos":[6739,6806],"yaml":true},{"content":"An object representing the new transaction.","nodes":[{"pos":[0,43],"content":"An object representing the new transaction.","nodes":[{"content":"An object representing the new transaction.","pos":[0,43]}]}],"pos":[6876,6920],"yaml":true},{"content":"Changes the current database for an open `Connection` object.","nodes":[{"pos":[0,61],"content":"Changes the current database for an open <ph id=\"ph1\">`Connection`</ph> object.","source":"Changes the current database for an open `Connection` object."}],"pos":[8259,8321],"yaml":true},{"content":"The name of the database to use in place of the current database.","nodes":[{"pos":[0,65],"content":"The name of the database to use in place of the current database.","nodes":[{"content":"The name of the database to use in place of the current database.","pos":[0,65]}]}],"pos":[8478,8544],"yaml":true},{"content":"Closes the connection to the database.","nodes":[{"pos":[0,38],"content":"Closes the connection to the database.","nodes":[{"content":"Closes the connection to the database.","pos":[0,38]}]}],"pos":[9764,9803],"yaml":true},{"content":"The <xref:System.Data.IDbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.  \n  \n An application can call `Close` more than one time without generating an exception.","nodes":[{"pos":[0,205],"content":"The <xref:System.Data.IDbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.","nodes":[{"content":"The <xref:System.Data.IDbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.","pos":[0,205],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbConnection.Close%2A&gt;</ph> method rolls back any pending transactions.","pos":[0,89],"source":"The <xref:System.Data.IDbConnection.Close%2A> method rolls back any pending transactions."},{"content":"It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.","pos":[90,205]}]}]},{"pos":[212,295],"content":"An application can call <ph id=\"ph1\">`Close`</ph> more than one time without generating an exception.","source":"An application can call `Close` more than one time without generating an exception."}],"pos":[9814,10114],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the string used to open a database.","nodes":[{"pos":[0,48],"content":"Gets or sets the string used to open a database.","nodes":[{"content":"Gets or sets the string used to open a database.","pos":[0,48]}]}],"pos":[11451,11500],"yaml":true},{"content":"The `ConnectionString` property can be set only while the connection is closed.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">`ConnectionString`</ph> property can be set only while the connection is closed.","source":"The `ConnectionString` property can be set only while the connection is closed."}],"pos":[11511,11591],"yaml":true,"extradata":"MT"},{"content":"A string containing connection settings.","nodes":[{"pos":[0,40],"content":"A string containing connection settings.","nodes":[{"content":"A string containing connection settings.","pos":[0,40]}]}],"pos":[12367,12408],"yaml":true},{"content":"Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.","nodes":[{"pos":[0,116],"content":"Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.","nodes":[{"content":"Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.","pos":[0,116]}]}],"pos":[13698,13815],"yaml":true},{"content":"A value of 0 indicates no limit to the wait time, rather than no wait time, and should be avoided in a <xref:System.Data.IDbConnection.ConnectionString%2A> because it would cause the connection attempt to wait indefinitely.","nodes":[{"pos":[0,223],"content":"A value of 0 indicates no limit to the wait time, rather than no wait time, and should be avoided in a <xref:System.Data.IDbConnection.ConnectionString%2A> because it would cause the connection attempt to wait indefinitely.","nodes":[{"content":"A value of 0 indicates no limit to the wait time, rather than no wait time, and should be avoided in a <ph id=\"ph1\">&lt;xref:System.Data.IDbConnection.ConnectionString%2A&gt;</ph> because it would cause the connection attempt to wait indefinitely.","pos":[0,223],"source":"A value of 0 indicates no limit to the wait time, rather than no wait time, and should be avoided in a <xref:System.Data.IDbConnection.ConnectionString%2A> because it would cause the connection attempt to wait indefinitely."}]}],"pos":[13826,14050],"yaml":true,"extradata":"MT"},{"content":"The time (in seconds) to wait for a connection to open. The default value is 15 seconds.","nodes":[{"pos":[0,88],"content":"The time (in seconds) to wait for a connection to open. The default value is 15 seconds.","nodes":[{"content":"The time (in seconds) to wait for a connection to open. The default value is 15 seconds.","pos":[0,88],"nodes":[{"content":"The time (in seconds) to wait for a connection to open.","pos":[0,55]},{"content":"The default value is 15 seconds.","pos":[56,88]}]}]}],"pos":[14167,14256],"yaml":true},{"content":"Creates and returns a Command object associated with the connection.","nodes":[{"pos":[0,68],"content":"Creates and returns a Command object associated with the connection.","nodes":[{"content":"Creates and returns a Command object associated with the connection.","pos":[0,68]}]}],"pos":[15527,15596],"yaml":true},{"content":"A Command object associated with the connection.","nodes":[{"pos":[0,48],"content":"A Command object associated with the connection.","nodes":[{"content":"A Command object associated with the connection.","pos":[0,48]}]}],"pos":[15752,15801],"yaml":true},{"content":"Gets the name of the current database or the database to be used after a connection is opened.","nodes":[{"pos":[0,94],"content":"Gets the name of the current database or the database to be used after a connection is opened.","nodes":[{"content":"Gets the name of the current database or the database to be used after a connection is opened.","pos":[0,94]}]}],"pos":[17034,17129],"yaml":true},{"content":"The `Database` property can be dynamically updated by using the <xref:System.Data.IDbConnection.ChangeDatabase%2A> method or by passing an SQL statement using one of the Execute methods. (Initially the database is set by means of the connection string.) If you change the current database using an SQL statement or the `ChangeDatabase` method, an informational message is sent and then the property is updated.","nodes":[{"pos":[0,410],"content":"The `Database` property can be dynamically updated by using the <xref:System.Data.IDbConnection.ChangeDatabase%2A> method or by passing an SQL statement using one of the Execute methods. (Initially the database is set by means of the connection string.) If you change the current database using an SQL statement or the `ChangeDatabase` method, an informational message is sent and then the property is updated.","nodes":[{"content":"The <ph id=\"ph1\">`Database`</ph> property can be dynamically updated by using the <ph id=\"ph2\">&lt;xref:System.Data.IDbConnection.ChangeDatabase%2A&gt;</ph> method or by passing an SQL statement using one of the Execute methods.","pos":[0,186],"source":"The `Database` property can be dynamically updated by using the <xref:System.Data.IDbConnection.ChangeDatabase%2A> method or by passing an SQL statement using one of the Execute methods."},{"content":"(Initially the database is set by means of the connection string.) If you change the current database using an SQL statement or the <ph id=\"ph1\">`ChangeDatabase`</ph> method, an informational message is sent and then the property is updated.","pos":[187,410],"source":" (Initially the database is set by means of the connection string.) If you change the current database using an SQL statement or the `ChangeDatabase` method, an informational message is sent and then the property is updated."}]}],"pos":[17140,17551],"yaml":true,"extradata":"MT"},{"content":"The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.","nodes":[{"pos":[0,136],"content":"The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.","nodes":[{"content":"The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.","pos":[0,136],"nodes":[{"content":"The name of the current database or the name of the database to be used once a connection is open.","pos":[0,98]},{"content":"The default value is an empty string.","pos":[99,136]}]}]}],"pos":[17663,17800],"yaml":true},{"content":"Opens a database connection with the settings specified by the `ConnectionString` property of the provider-specific Connection object.","nodes":[{"pos":[0,134],"content":"Opens a database connection with the settings specified by the <ph id=\"ph1\">`ConnectionString`</ph> property of the provider-specific Connection object.","source":"Opens a database connection with the settings specified by the `ConnectionString` property of the provider-specific Connection object."}],"pos":[19008,19143],"yaml":true},{"content":"Gets the current state of the connection.","nodes":[{"pos":[0,41],"content":"Gets the current state of the connection.","nodes":[{"content":"Gets the current state of the connection.","pos":[0,41]}]}],"pos":[20412,20454],"yaml":true},{"content":"The allowed state changes are:  \n  \n-   From `Closed` to `Open`, using the `Open` method of the Connection object.  \n  \n-   From `Open` to `Closed`, using either the `Close` method or the `Dispose` method of the Connection object.","nodes":[{"pos":[0,30],"content":"The allowed state changes are:","nodes":[{"content":"The allowed state changes are:","pos":[0,30]}]},{"pos":[40,114],"content":"From <ph id=\"ph1\">`Closed`</ph> to <ph id=\"ph2\">`Open`</ph>, using the <ph id=\"ph3\">`Open`</ph> method of the Connection object.","source":"From `Closed` to `Open`, using the `Open` method of the Connection object."},{"pos":[124,230],"content":"From <ph id=\"ph1\">`Open`</ph> to <ph id=\"ph2\">`Closed`</ph>, using either the <ph id=\"ph3\">`Close`</ph> method or the <ph id=\"ph4\">`Dispose`</ph> method of the Connection object.","source":"From `Open` to `Closed`, using either the `Close` method or the `Dispose` method of the Connection object."}],"pos":[20465,20702],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Data.ConnectionState\"></xref> values.","nodes":[{"pos":[0,67],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.ConnectionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Data.ConnectionState\"></xref> values."}],"pos":[21481,21549],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.IDbConnection\n  commentId: T:System.Data.IDbConnection\n  id: IDbConnection\n  children:\n  - System.Data.IDbConnection.BeginTransaction\n  - System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)\n  - System.Data.IDbConnection.ChangeDatabase(System.String)\n  - System.Data.IDbConnection.Close\n  - System.Data.IDbConnection.ConnectionString\n  - System.Data.IDbConnection.ConnectionTimeout\n  - System.Data.IDbConnection.CreateCommand\n  - System.Data.IDbConnection.Database\n  - System.Data.IDbConnection.Open\n  - System.Data.IDbConnection.State\n  langs:\n  - csharp\n  name: IDbConnection\n  nameWithType: IDbConnection\n  fullName: System.Data.IDbConnection\n  type: Interface\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.\n  remarks: \"The <xref:System.Data.IDbConnection> interface enables an inheriting class to implement a Connection class, which represents a unique session with a data source (for example, a network connection to a server). For more information about Connection classes, see [Connecting to a Data Source](~/docs/framework/data/adonet/connecting-to-a-data-source.md).  \\n  \\n An application does not create an instance of the <xref:System.Data.IDbConnection> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbConnection>.  \\n  \\n Classes that inherit <xref:System.Data.IDbConnection> must implement all inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbConnection> interface defines the <xref:System.Data.IDbConnection.ConnectionTimeout%2A> property. In turn, the <xref:System.Data.SqlClient.SqlConnection> class inherits this property, and also defines the <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> property.\"\n  example:\n  - \"The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlCommand> and <xref:System.Data.SqlClient.SqlConnection>. The <xref:System.Data.SqlClient.SqlConnection> is opened and set as the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> for the <xref:System.Data.SqlClient.SqlCommand>. The example then calls <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is a Transact-SQL INSERT statement.  \\n  \\n [!code-csharp[Classic WebData SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public interface IDbConnection : IDisposable'\n  derivedClasses:\n  - System.Data.Common.DbConnection\n  implements:\n  - System.IDisposable\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.BeginTransaction\n  commentId: M:System.Data.IDbConnection.BeginTransaction\n  id: BeginTransaction\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: BeginTransaction()\n  nameWithType: IDbConnection.BeginTransaction()\n  fullName: IDbConnection.BeginTransaction()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Begins a database transaction.\n  remarks: Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <xref:System.Data.IDbTransaction.Commit%2A> or <xref:System.Data.IDbTransaction.Rollback%2A> methods.\n  syntax:\n    content: public System.Data.IDbTransaction BeginTransaction ();\n    parameters: []\n    return:\n      type: System.Data.IDbTransaction\n      description: An object representing the new transaction.\n  overload: System.Data.IDbConnection.BeginTransaction*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)\n  commentId: M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)\n  id: BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: BeginTransaction(IsolationLevel)\n  nameWithType: IDbConnection.BeginTransaction(IsolationLevel)\n  fullName: IDbConnection.BeginTransaction(IsolationLevel)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Begins a database transaction with the specified <xref href=\"System.Data.IsolationLevel\"></xref> value.\n  remarks: Once the transaction has completed, you must explicitly commit or roll back the transaction using the <xref:System.Data.IDbTransaction.Commit%2A> or <xref:System.Data.IDbTransaction.Rollback%2A> methods.\n  syntax:\n    content: public System.Data.IDbTransaction BeginTransaction (System.Data.IsolationLevel il);\n    parameters:\n    - id: il\n      type: System.Data.IsolationLevel\n      description: One of the <xref href=\"System.Data.IsolationLevel\"></xref> values.\n    return:\n      type: System.Data.IDbTransaction\n      description: An object representing the new transaction.\n  overload: System.Data.IDbConnection.BeginTransaction*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.ChangeDatabase(System.String)\n  commentId: M:System.Data.IDbConnection.ChangeDatabase(System.String)\n  id: ChangeDatabase(System.String)\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: ChangeDatabase(String)\n  nameWithType: IDbConnection.ChangeDatabase(String)\n  fullName: IDbConnection.ChangeDatabase(String)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Changes the current database for an open `Connection` object.\n  syntax:\n    content: public void ChangeDatabase (string databaseName);\n    parameters:\n    - id: databaseName\n      type: System.String\n      description: The name of the database to use in place of the current database.\n  overload: System.Data.IDbConnection.ChangeDatabase*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.Close\n  commentId: M:System.Data.IDbConnection.Close\n  id: Close\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: IDbConnection.Close()\n  fullName: IDbConnection.Close()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Closes the connection to the database.\n  remarks: \"The <xref:System.Data.IDbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.  \\n  \\n An application can call `Close` more than one time without generating an exception.\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Data.IDbConnection.Close*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.ConnectionString\n  commentId: P:System.Data.IDbConnection.ConnectionString\n  id: ConnectionString\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: ConnectionString\n  nameWithType: IDbConnection.ConnectionString\n  fullName: IDbConnection.ConnectionString\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Gets or sets the string used to open a database.\n  remarks: The `ConnectionString` property can be set only while the connection is closed.\n  example:\n  - \"The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbConnection>, sets its <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, and displays its <xref:System.Data.OleDb.OleDbConnection.State%2A>.  \\n  \\n [!code-csharp[Classic WebData IDbConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbConnection.ConnectionString Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData IDbConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbConnection.ConnectionString Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string ConnectionString { get; set; }\n    return:\n      type: System.String\n      description: A string containing connection settings.\n  overload: System.Data.IDbConnection.ConnectionString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.ConnectionTimeout\n  commentId: P:System.Data.IDbConnection.ConnectionTimeout\n  id: ConnectionTimeout\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: ConnectionTimeout\n  nameWithType: IDbConnection.ConnectionTimeout\n  fullName: IDbConnection.ConnectionTimeout\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.\n  remarks: A value of 0 indicates no limit to the wait time, rather than no wait time, and should be avoided in a <xref:System.Data.IDbConnection.ConnectionString%2A> because it would cause the connection attempt to wait indefinitely.\n  syntax:\n    content: public int ConnectionTimeout { get; }\n    return:\n      type: System.Int32\n      description: The time (in seconds) to wait for a connection to open. The default value is 15 seconds.\n  overload: System.Data.IDbConnection.ConnectionTimeout*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.CreateCommand\n  commentId: M:System.Data.IDbConnection.CreateCommand\n  id: CreateCommand\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: CreateCommand()\n  nameWithType: IDbConnection.CreateCommand()\n  fullName: IDbConnection.CreateCommand()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Creates and returns a Command object associated with the connection.\n  syntax:\n    content: public System.Data.IDbCommand CreateCommand ();\n    parameters: []\n    return:\n      type: System.Data.IDbCommand\n      description: A Command object associated with the connection.\n  overload: System.Data.IDbConnection.CreateCommand*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.Database\n  commentId: P:System.Data.IDbConnection.Database\n  id: Database\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: Database\n  nameWithType: IDbConnection.Database\n  fullName: IDbConnection.Database\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Gets the name of the current database or the database to be used after a connection is opened.\n  remarks: The `Database` property can be dynamically updated by using the <xref:System.Data.IDbConnection.ChangeDatabase%2A> method or by passing an SQL statement using one of the Execute methods. (Initially the database is set by means of the connection string.) If you change the current database using an SQL statement or the `ChangeDatabase` method, an informational message is sent and then the property is updated.\n  syntax:\n    content: public string Database { get; }\n    return:\n      type: System.String\n      description: The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.\n  overload: System.Data.IDbConnection.Database*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.Open\n  commentId: M:System.Data.IDbConnection.Open\n  id: Open\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: Open()\n  nameWithType: IDbConnection.Open()\n  fullName: IDbConnection.Open()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Opens a database connection with the settings specified by the `ConnectionString` property of the provider-specific Connection object.\n  syntax:\n    content: public void Open ();\n    parameters: []\n  overload: System.Data.IDbConnection.Open*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbConnection.State\n  commentId: P:System.Data.IDbConnection.State\n  id: State\n  parent: System.Data.IDbConnection\n  langs:\n  - csharp\n  name: State\n  nameWithType: IDbConnection.State\n  fullName: IDbConnection.State\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Gets the current state of the connection.\n  remarks: \"The allowed state changes are:  \\n  \\n-   From `Closed` to `Open`, using the `Open` method of the Connection object.  \\n  \\n-   From `Open` to `Closed`, using either the `Close` method or the `Dispose` method of the Connection object.\"\n  example:\n  - \"The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its <xref:System.Data.IDbConnection.State%2A>.  \\n  \\n [!code-csharp[Classic WebData IDbConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbConnection.ConnectionString Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData IDbConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbConnection.ConnectionString Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.ConnectionState State { get; }\n    return:\n      type: System.Data.ConnectionState\n      description: One of the <xref href=\"System.Data.ConnectionState\"></xref> values.\n  overload: System.Data.IDbConnection.State*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.IDbConnection.BeginTransaction\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: BeginTransaction()\n  nameWithType: IDbConnection.BeginTransaction()\n  fullName: IDbConnection.BeginTransaction()\n- uid: System.Data.IDbTransaction\n  parent: System.Data\n  isExternal: false\n  name: IDbTransaction\n  nameWithType: IDbTransaction\n  fullName: System.Data.IDbTransaction\n- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: BeginTransaction(IsolationLevel)\n  nameWithType: IDbConnection.BeginTransaction(IsolationLevel)\n  fullName: IDbConnection.BeginTransaction(IsolationLevel)\n- uid: System.Data.IsolationLevel\n  parent: System.Data\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Data.IsolationLevel\n- uid: System.Data.IDbConnection.ChangeDatabase(System.String)\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: ChangeDatabase(String)\n  nameWithType: IDbConnection.ChangeDatabase(String)\n  fullName: IDbConnection.ChangeDatabase(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.IDbConnection.Close\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: Close()\n  nameWithType: IDbConnection.Close()\n  fullName: IDbConnection.Close()\n- uid: System.Data.IDbConnection.ConnectionString\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: ConnectionString\n  nameWithType: IDbConnection.ConnectionString\n  fullName: IDbConnection.ConnectionString\n- uid: System.Data.IDbConnection.ConnectionTimeout\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: ConnectionTimeout\n  nameWithType: IDbConnection.ConnectionTimeout\n  fullName: IDbConnection.ConnectionTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.IDbConnection.CreateCommand\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: CreateCommand()\n  nameWithType: IDbConnection.CreateCommand()\n  fullName: IDbConnection.CreateCommand()\n- uid: System.Data.IDbCommand\n  parent: System.Data\n  isExternal: false\n  name: IDbCommand\n  nameWithType: IDbCommand\n  fullName: System.Data.IDbCommand\n- uid: System.Data.IDbConnection.Database\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: Database\n  nameWithType: IDbConnection.Database\n  fullName: IDbConnection.Database\n- uid: System.Data.IDbConnection.Open\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: Open()\n  nameWithType: IDbConnection.Open()\n  fullName: IDbConnection.Open()\n- uid: System.Data.IDbConnection.State\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: State\n  nameWithType: IDbConnection.State\n  fullName: IDbConnection.State\n- uid: System.Data.ConnectionState\n  parent: System.Data\n  isExternal: false\n  name: ConnectionState\n  nameWithType: ConnectionState\n  fullName: System.Data.ConnectionState\n- uid: System.Data.IDbConnection.BeginTransaction*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: BeginTransaction\n  nameWithType: IDbConnection.BeginTransaction\n  fullName: IDbConnection.BeginTransaction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.Data.IDbConnection.ChangeDatabase*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: ChangeDatabase\n  nameWithType: IDbConnection.ChangeDatabase\n  fullName: IDbConnection.ChangeDatabase\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.Data.IDbConnection.Close*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: Close\n  nameWithType: IDbConnection.Close\n  fullName: IDbConnection.Close\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.Data.IDbConnection.ConnectionString*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: ConnectionString\n  nameWithType: IDbConnection.ConnectionString\n  fullName: IDbConnection.ConnectionString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.Data.IDbConnection.ConnectionTimeout*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: ConnectionTimeout\n  nameWithType: IDbConnection.ConnectionTimeout\n  fullName: IDbConnection.ConnectionTimeout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.Data.IDbConnection.CreateCommand*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: CreateCommand\n  nameWithType: IDbConnection.CreateCommand\n  fullName: IDbConnection.CreateCommand\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.Data.IDbConnection.Database*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: Database\n  nameWithType: IDbConnection.Database\n  fullName: IDbConnection.Database\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.Data.IDbConnection.Open*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: Open\n  nameWithType: IDbConnection.Open\n  fullName: IDbConnection.Open\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.Data.IDbConnection.State*\n  parent: System.Data.IDbConnection\n  isExternal: false\n  name: State\n  nameWithType: IDbConnection.State\n  fullName: IDbConnection.State\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbConnection.xml\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}