### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  commentId: T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  id: UnhandledExceptionEventArgs
  children:
  - Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)
  - Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication
  langs:
  - csharp
  name: UnhandledExceptionEventArgs
  nameWithType: UnhandledExceptionEventArgs
  fullName: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  type: Class
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Provides data for the `My.Application.UnhandledException` event.
  remarks: "The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event occurs when an unhandled exception occurs in an application that implements the Visual Basic Application Model. For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  \n  \n <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs> contains the <xref:System.Exception> that occurred and indicates whether the application should exit upon exiting the exception handler."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class UnhandledExceptionEventArgs : System.Threading.ThreadExceptionEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Threading.ThreadExceptionEventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Threading.ThreadExceptionEventArgs.Exception
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/UnhandledExceptionEventArgs.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)
  commentId: M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)
  id: '#ctor(System.Boolean,System.Exception)'
  parent: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  langs:
  - csharp
  name: UnhandledExceptionEventArgs(Boolean, Exception)
  nameWithType: UnhandledExceptionEventArgs.UnhandledExceptionEventArgs(Boolean, Exception)
  fullName: UnhandledExceptionEventArgs.UnhandledExceptionEventArgs(Boolean, Exception)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Initializes a new instance of the <xref href="Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs"></xref> class.
  remarks: "The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event occurs when an unhandled exception occurs in an application that implements the Visual Basic Application Model. For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  \n  \n <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs> contains the <xref:System.Exception> that occurred and indicates whether the application should exit upon exiting the exception handler."
  syntax:
    content: public UnhandledExceptionEventArgs (bool exitApplication, Exception exception);
    parameters:
    - id: exitApplication
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> that indicates whether the application should exit upon exiting the exception handler.
    - id: exception
      type: System.Exception
      description: The <xref href="System.Exception"></xref> that occurred.
  overload: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/UnhandledExceptionEventArgs.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication
  commentId: P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication
  id: ExitApplication
  parent: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  langs:
  - csharp
  name: ExitApplication
  nameWithType: UnhandledExceptionEventArgs.ExitApplication
  fullName: UnhandledExceptionEventArgs.ExitApplication
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Indicates whether the application should exit upon exiting the exception handler.
  remarks: The Visual Basic Application Model checks the value of this property after running the handlers of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event. If <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `True`, then the application exits. Otherwise, the application continues to run. For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).
  syntax:
    content: public bool ExitApplication { get; set; }
    return:
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> that indicates whether the application should exit upon exiting the exception handler.
  overload: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/UnhandledExceptionEventArgs.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Threading.ThreadExceptionEventArgs
  parent: System.Threading
  isExternal: false
  name: ThreadExceptionEventArgs
  nameWithType: ThreadExceptionEventArgs
  fullName: System.Threading.ThreadExceptionEventArgs
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)
  parent: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  isExternal: false
  name: UnhandledExceptionEventArgs(Boolean, Exception)
  nameWithType: UnhandledExceptionEventArgs.UnhandledExceptionEventArgs(Boolean, Exception)
  fullName: UnhandledExceptionEventArgs.UnhandledExceptionEventArgs(Boolean, Exception)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication
  parent: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  isExternal: false
  name: ExitApplication
  nameWithType: UnhandledExceptionEventArgs.ExitApplication
  fullName: UnhandledExceptionEventArgs.ExitApplication
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  isExternal: false
  name: UnhandledExceptionEventArgs
  nameWithType: UnhandledExceptionEventArgs.UnhandledExceptionEventArgs
  fullName: UnhandledExceptionEventArgs.UnhandledExceptionEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/UnhandledExceptionEventArgs.xml
- uid: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication*
  parent: Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs
  isExternal: false
  name: ExitApplication
  nameWithType: UnhandledExceptionEventArgs.ExitApplication
  fullName: UnhandledExceptionEventArgs.ExitApplication
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.ApplicationServices/UnhandledExceptionEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
- uid: System.Threading.ThreadExceptionEventArgs.Exception
  parent: System.Threading.ThreadExceptionEventArgs
  isExternal: false
  name: Exception
  nameWithType: ThreadExceptionEventArgs.Exception
  fullName: ThreadExceptionEventArgs.Exception
