{"nodes":[{"content":"Represents a serial port resource.","nodes":[{"pos":[0,34],"content":"Represents a serial port resource.","nodes":[{"content":"Represents a serial port resource.","pos":[0,34]}]}],"pos":[3021,3056],"yaml":true},{"content":"> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use this class to control a serial port file resource. This class provides synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties. Additionally, the functionality of this class can be wrapped in an internal <xref:System.IO.Stream> object, accessible through the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property, and passed to classes that wrap or use streams.  \n  \n The <xref:System.IO.Ports.SerialPort> class supports the following encodings: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936.  You can use alternate encodings, but you must use the <xref:System.IO.Ports.SerialPort.ReadByte%2A> or <xref:System.IO.Ports.SerialPort.Write%2A> method and perform the encoding yourself.  \n  \n You use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to retrieve the valid ports for the current computer.  \n  \n If a <xref:System.IO.Ports.SerialPort> object becomes blocked during a read operation, do not abort the thread. Instead, either close the base stream or dispose of the <xref:System.IO.Ports.SerialPort> object.","nodes":[{"pos":[2,420],"content":"[!NOTE]\n To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","leadings":["","> "],"nodes":[{"content":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","pos":[8,416],"nodes":[{"content":"To view the .NET Framework source code for this type, see the <bpt id=\"p1\">[</bpt>Reference Source<ept id=\"p1\">](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe)</ept>.","pos":[1,179],"source":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe)."},{"content":"You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id=\"p1\">[</bpt>instructions<ept id=\"p1\">](http://referencesource.microsoft.com/)</ept>.","pos":[180,408],"source":" You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/)."}]}]},{"pos":[427,844],"content":"Use this class to control a serial port file resource. This class provides synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties. Additionally, the functionality of this class can be wrapped in an internal <xref:System.IO.Stream> object, accessible through the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property, and passed to classes that wrap or use streams.","nodes":[{"content":"Use this class to control a serial port file resource. This class provides synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties. Additionally, the functionality of this class can be wrapped in an internal <xref:System.IO.Stream> object, accessible through the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property, and passed to classes that wrap or use streams.","pos":[0,417],"nodes":[{"content":"Use this class to control a serial port file resource.","pos":[0,54]},{"content":"This class provides synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties.","pos":[55,180]},{"content":"Additionally, the functionality of this class can be wrapped in an internal <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> object, accessible through the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property, and passed to classes that wrap or use streams.","pos":[181,417],"source":" Additionally, the functionality of this class can be wrapped in an internal <xref:System.IO.Stream> object, accessible through the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property, and passed to classes that wrap or use streams."}]}]},{"pos":[851,1361],"content":"The <xref:System.IO.Ports.SerialPort> class supports the following encodings: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936.  You can use alternate encodings, but you must use the <xref:System.IO.Ports.SerialPort.ReadByte%2A> or <xref:System.IO.Ports.SerialPort.Write%2A> method and perform the encoding yourself.","nodes":[{"content":"The <xref:System.IO.Ports.SerialPort> class supports the following encodings: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936.  You can use alternate encodings, but you must use the <xref:System.IO.Ports.SerialPort.ReadByte%2A> or <xref:System.IO.Ports.SerialPort.Write%2A> method and perform the encoding yourself.","pos":[0,510],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class supports the following encodings: <ph id=\"ph2\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936.","pos":[0,321],"source":"The <xref:System.IO.Ports.SerialPort> class supports the following encodings: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936."},{"content":"You can use alternate encodings, but you must use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.Write%2A&gt;</ph> method and perform the encoding yourself.","pos":[323,510],"source":"  You can use alternate encodings, but you must use the <xref:System.IO.Ports.SerialPort.ReadByte%2A> or <xref:System.IO.Ports.SerialPort.Write%2A> method and perform the encoding yourself."}]}]},{"pos":[1368,1490],"content":"You use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to retrieve the valid ports for the current computer.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method to retrieve the valid ports for the current computer.","pos":[0,122],"source":"You use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to retrieve the valid ports for the current computer."}]},{"pos":[1497,1706],"content":"If a <xref:System.IO.Ports.SerialPort> object becomes blocked during a read operation, do not abort the thread. Instead, either close the base stream or dispose of the <xref:System.IO.Ports.SerialPort> object.","nodes":[{"content":"If a <xref:System.IO.Ports.SerialPort> object becomes blocked during a read operation, do not abort the thread. Instead, either close the base stream or dispose of the <xref:System.IO.Ports.SerialPort> object.","pos":[0,209],"nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object becomes blocked during a read operation, do not abort the thread.","pos":[0,111],"source":"If a <xref:System.IO.Ports.SerialPort> object becomes blocked during a read operation, do not abort the thread."},{"content":"Instead, either close the base stream or dispose of the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[112,209],"source":" Instead, either close the base stream or dispose of the <xref:System.IO.Ports.SerialPort> object."}]}]}],"pos":[3067,4785],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class.","nodes":[{"pos":[0,88],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class."}],"pos":[7692,7781],"yaml":true},{"content":"This constructor uses default property values when none are specified. For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1.","nodes":[{"pos":[0,363],"content":"This constructor uses default property values when none are specified. For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1.","nodes":[{"content":"This constructor uses default property values when none are specified.","pos":[0,70]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.DataBits%2A&gt;</ph> property defaults to 8, the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.Parity%2A&gt;</ph> property defaults to the <ph id=\"ph3\">`None`</ph> enumeration value, the <ph id=\"ph4\">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph> property defaults to 1, and a default port name of COM1.","pos":[71,363],"source":" For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1."}]}],"pos":[7792,8156],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified <xref href=\"System.ComponentModel.IContainer\"></xref> object.","nodes":[{"pos":[0,169],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.IContainer\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified <xref href=\"System.ComponentModel.IContainer\"></xref> object."}],"pos":[10211,10381],"yaml":true},{"content":"This constructor uses default property values when none are specified. For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1.","nodes":[{"pos":[0,363],"content":"This constructor uses default property values when none are specified. For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1.","nodes":[{"content":"This constructor uses default property values when none are specified.","pos":[0,70]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.DataBits%2A&gt;</ph> property defaults to 8, the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.Parity%2A&gt;</ph> property defaults to the <ph id=\"ph3\">`None`</ph> enumeration value, the <ph id=\"ph4\">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph> property defaults to 1, and a default port name of COM1.","pos":[71,363],"source":" For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1."}]}],"pos":[10392,10756],"yaml":true,"extradata":"MT"},{"content":"An interface to a container.","nodes":[{"pos":[0,28],"content":"An interface to a container.","nodes":[{"content":"An interface to a container.","pos":[0,28]}]}],"pos":[10943,10972],"yaml":true},{"content":"The specified port could not be found or opened.","nodes":[{"pos":[0,48],"content":"The specified port could not be found or opened.","nodes":[{"content":"The specified port could not be found or opened.","pos":[0,48]}]}],"pos":[11120,11169],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> class using the specified port name.","source":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name."}],"pos":[12187,12306],"yaml":true},{"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name.","nodes":[{"pos":[0,132],"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name.","nodes":[{"content":"Use this constructor to create a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name.","pos":[0,132],"source":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name."}]}],"pos":[12317,12450],"yaml":true,"extradata":"MT"},{"content":"The port to use (for example, COM1).","nodes":[{"pos":[0,36],"content":"The port to use (for example, COM1).","nodes":[{"content":"The port to use (for example, COM1).","pos":[0,36]}]}],"pos":[12590,12627],"yaml":true},{"content":"The specified port could not be found or opened.","nodes":[{"pos":[0,48],"content":"The specified port could not be found or opened.","nodes":[{"content":"The specified port could not be found or opened.","pos":[0,48]}]}],"pos":[12775,12824],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name and baud rate.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> class using the specified port name and baud rate.","source":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name and baud rate."}],"pos":[13902,14035],"yaml":true},{"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name and the baud rate.","nodes":[{"pos":[0,150],"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name and the baud rate.","nodes":[{"content":"Use this constructor to create a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name and the baud rate.","pos":[0,150],"source":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name and the baud rate."}]}],"pos":[14046,14197],"yaml":true,"extradata":"MT"},{"content":"The port to use (for example, COM1).","nodes":[{"pos":[0,36],"content":"The port to use (for example, COM1).","nodes":[{"content":"The port to use (for example, COM1).","pos":[0,36]}]}],"pos":[14351,14388],"yaml":true},{"content":"The baud rate.","nodes":[{"pos":[0,14],"content":"The baud rate.","nodes":[{"content":"The baud rate.","pos":[0,14]}]}],"pos":[14451,14466],"yaml":true},{"content":"The specified port could not be found or opened.","nodes":[{"pos":[0,48],"content":"The specified port could not be found or opened.","nodes":[{"content":"The specified port could not be found or opened.","pos":[0,48]}]}],"pos":[14614,14663],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, and parity bit.","nodes":[{"pos":[0,145],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> class using the specified port name, baud rate, and parity bit.","source":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, and parity bit."}],"pos":[15834,15980],"yaml":true},{"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, and the parity bit.","nodes":[{"pos":[0,167],"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, and the parity bit.","nodes":[{"content":"Use this constructor to create a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name, the baud rate, and the parity bit.","pos":[0,167],"source":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, and the parity bit."}]}],"pos":[15991,16159],"yaml":true,"extradata":"MT"},{"content":"The port to use (for example, COM1).","nodes":[{"pos":[0,36],"content":"The port to use (for example, COM1).","nodes":[{"content":"The port to use (for example, COM1).","pos":[0,36]}]}],"pos":[16344,16381],"yaml":true},{"content":"The baud rate.","nodes":[{"pos":[0,14],"content":"The baud rate.","nodes":[{"content":"The baud rate.","pos":[0,14]}]}],"pos":[16444,16459],"yaml":true},{"content":"One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Parity\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values."}],"pos":[16530,16604],"yaml":true},{"content":"The specified port could not be found or opened.","nodes":[{"pos":[0,48],"content":"The specified port could not be found or opened.","nodes":[{"content":"The specified port could not be found or opened.","pos":[0,48]}]}],"pos":[16752,16801],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, parity bit, and data bits.","nodes":[{"pos":[0,156],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> class using the specified port name, baud rate, parity bit, and data bits.","source":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, parity bit, and data bits."}],"pos":[18032,18189],"yaml":true},{"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, and data bits.","nodes":[{"pos":[0,178],"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, and data bits.","nodes":[{"content":"Use this constructor to create a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name, the baud rate, the parity bit, and data bits.","pos":[0,178],"source":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, and data bits."}]}],"pos":[18200,18379],"yaml":true,"extradata":"MT"},{"content":"The port to use (for example, COM1).","nodes":[{"pos":[0,36],"content":"The port to use (for example, COM1).","nodes":[{"content":"The port to use (for example, COM1).","pos":[0,36]}]}],"pos":[18578,18615],"yaml":true},{"content":"The baud rate.","nodes":[{"pos":[0,14],"content":"The baud rate.","nodes":[{"content":"The baud rate.","pos":[0,14]}]}],"pos":[18678,18693],"yaml":true},{"content":"One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Parity\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values."}],"pos":[18764,18838],"yaml":true},{"content":"The data bits value.","nodes":[{"pos":[0,20],"content":"The data bits value.","nodes":[{"content":"The data bits value.","pos":[0,20]}]}],"pos":[18901,18922],"yaml":true},{"content":"The specified port could not be found or opened.","nodes":[{"pos":[0,48],"content":"The specified port could not be found or opened.","nodes":[{"content":"The specified port could not be found or opened.","pos":[0,48]}]}],"pos":[19070,19119],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, parity bit, data bits, and stop bit.","nodes":[{"pos":[0,166],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> class using the specified port name, baud rate, parity bit, data bits, and stop bit.","source":"Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, parity bit, data bits, and stop bit."}],"pos":[20455,20622],"yaml":true},{"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, data bits, and stop bit.","nodes":[{"pos":[0,188],"content":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, data bits, and stop bit.","nodes":[{"content":"Use this constructor to create a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class when you want to specify the port name, the baud rate, the parity bit, data bits, and stop bit.","pos":[0,188],"source":"Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, data bits, and stop bit."}]}],"pos":[20633,20822],"yaml":true,"extradata":"MT"},{"content":"The port to use (for example, COM1).","nodes":[{"pos":[0,36],"content":"The port to use (for example, COM1).","nodes":[{"content":"The port to use (for example, COM1).","pos":[0,36]}]}],"pos":[21056,21093],"yaml":true},{"content":"The baud rate.","nodes":[{"pos":[0,14],"content":"The baud rate.","nodes":[{"content":"The baud rate.","pos":[0,14]}]}],"pos":[21156,21171],"yaml":true},{"content":"One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Parity\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values."}],"pos":[21242,21316],"yaml":true},{"content":"The data bits value.","nodes":[{"pos":[0,20],"content":"The data bits value.","nodes":[{"content":"The data bits value.","pos":[0,20]}]}],"pos":[21379,21400],"yaml":true},{"content":"One of the <xref href=\"System.IO.Ports.SerialPort.StopBits\"></xref> values.","nodes":[{"pos":[0,75],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.StopBits\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.IO.Ports.SerialPort.StopBits\"></xref> values."}],"pos":[21475,21551],"yaml":true},{"content":"The specified port could not be found or opened.","nodes":[{"pos":[0,48],"content":"The specified port could not be found or opened.","nodes":[{"content":"The specified port could not be found or opened.","pos":[0,48]}]}],"pos":[21699,21748],"yaml":true},{"content":"Gets the underlying <xref href=\"System.IO.Stream\"></xref> object for a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,126],"content":"Gets the underlying <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object for a <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the underlying <xref href=\"System.IO.Stream\"></xref> object for a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[22707,22834],"yaml":true},{"content":"Use this property for explicit asynchronous I/O operations or to pass the <xref:System.IO.Ports.SerialPort> object to a <xref:System.IO.Stream> wrapper class such as <xref:System.IO.StreamWriter>.  \n  \n Any open serial port's <xref:System.IO.Ports.SerialPort.BaseStream%2A> property returns an object that derives from the abstract <xref:System.IO.Stream> class, and implements read and write methods using the prototypes inherited from the <xref:System.IO.Stream> class: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, and <xref:System.IO.Stream.WriteByte%2A>. These methods can be useful when passing a wrapped serial resource to a <xref:System.IO.Stream> wrapper class.  \n  \n Due to the inaccessibility of the wrapped file handle, the <xref:System.IO.Stream.Length%2A> and <xref:System.IO.Stream.Position%2A> properties are not supported, and the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods are not supported.","nodes":[{"pos":[0,196],"content":"Use this property for explicit asynchronous I/O operations or to pass the <xref:System.IO.Ports.SerialPort> object to a <xref:System.IO.Stream> wrapper class such as <xref:System.IO.StreamWriter>.","nodes":[{"content":"Use this property for explicit asynchronous I/O operations or to pass the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object to a <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> wrapper class such as <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter&gt;</ph>.","pos":[0,196],"source":"Use this property for explicit asynchronous I/O operations or to pass the <xref:System.IO.Ports.SerialPort> object to a <xref:System.IO.Stream> wrapper class such as <xref:System.IO.StreamWriter>."}]},{"pos":[203,805],"content":"Any open serial port's <xref:System.IO.Ports.SerialPort.BaseStream%2A> property returns an object that derives from the abstract <xref:System.IO.Stream> class, and implements read and write methods using the prototypes inherited from the <xref:System.IO.Stream> class: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, and <xref:System.IO.Stream.WriteByte%2A>. These methods can be useful when passing a wrapped serial resource to a <xref:System.IO.Stream> wrapper class.","nodes":[{"content":"Any open serial port's <xref:System.IO.Ports.SerialPort.BaseStream%2A> property returns an object that derives from the abstract <xref:System.IO.Stream> class, and implements read and write methods using the prototypes inherited from the <xref:System.IO.Stream> class: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, and <xref:System.IO.Stream.WriteByte%2A>. These methods can be useful when passing a wrapped serial resource to a <xref:System.IO.Stream> wrapper class.","pos":[0,602],"nodes":[{"content":"Any open serial port's <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property returns an object that derives from the abstract <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> class, and implements read and write methods using the prototypes inherited from the <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> class: <ph id=\"ph4\">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.IO.Stream.Read%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.IO.Stream.ReadByte%2A&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>, and <ph id=\"ph9\">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph>.","pos":[0,491],"source":"Any open serial port's <xref:System.IO.Ports.SerialPort.BaseStream%2A> property returns an object that derives from the abstract <xref:System.IO.Stream> class, and implements read and write methods using the prototypes inherited from the <xref:System.IO.Stream> class: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, and <xref:System.IO.Stream.WriteByte%2A>."},{"content":"These methods can be useful when passing a wrapped serial resource to a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> wrapper class.","pos":[492,602],"source":" These methods can be useful when passing a wrapped serial resource to a <xref:System.IO.Stream> wrapper class."}]}]},{"pos":[812,1082],"content":"Due to the inaccessibility of the wrapped file handle, the <xref:System.IO.Stream.Length%2A> and <xref:System.IO.Stream.Position%2A> properties are not supported, and the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods are not supported.","nodes":[{"content":"Due to the inaccessibility of the wrapped file handle, the <ph id=\"ph1\">&lt;xref:System.IO.Stream.Length%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Stream.Position%2A&gt;</ph> properties are not supported, and the <ph id=\"ph3\">&lt;xref:System.IO.Stream.Seek%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph> methods are not supported.","pos":[0,270],"source":"Due to the inaccessibility of the wrapped file handle, the <xref:System.IO.Stream.Length%2A> and <xref:System.IO.Stream.Position%2A> properties are not supported, and the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods are not supported."}]}],"pos":[22845,23934],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> object.","nodes":[{"pos":[0,47],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.IO.Stream\"></xref> object."}],"pos":[24118,24166],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[24341,24555],"yaml":true},{"content":"The stream is in a .NET Compact Framework application and one of the following methods was called:  \n  \n <xref href=\"System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref><xref href=\"System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref><xref href=\"System.IO.Stream.EndRead(System.IAsyncResult)\"></xref><xref href=\"System.IO.Stream.EndWrite(System.IAsyncResult)\"></xref>  \n  \n The .NET Compact Framework does not support the asynchronous model with base streams.","nodes":[{"pos":[0,98],"content":"The stream is in a .NET Compact Framework application and one of the following methods was called:","nodes":[{"content":"The stream is in a .NET Compact Framework application and one of the following methods was called:","pos":[0,98]}]},{"pos":[492,577],"content":"The .NET Compact Framework does not support the asynchronous model with base streams.","nodes":[{"content":"The .NET Compact Framework does not support the asynchronous model with base streams.","pos":[0,85]}]}],"pos":[24657,25249],"yaml":true},{"content":"Gets or sets the serial baud rate.","nodes":[{"pos":[0,34],"content":"Gets or sets the serial baud rate.","nodes":[{"content":"Gets or sets the serial baud rate.","pos":[0,34]}]}],"pos":[26261,26296],"yaml":true},{"content":"The baud rate must be supported by the user's serial driver. The default value is 9600 bits per second (bps).","nodes":[{"pos":[0,109],"content":"The baud rate must be supported by the user's serial driver. The default value is 9600 bits per second (bps).","nodes":[{"content":"The baud rate must be supported by the user's serial driver. The default value is 9600 bits per second (bps).","pos":[0,109],"nodes":[{"content":"The baud rate must be supported by the user's serial driver.","pos":[0,60]},{"content":"The default value is 9600 bits per second (bps).","pos":[61,109]}]}]}],"pos":[26307,26417],"yaml":true,"extradata":"MT"},{"content":"The baud rate.","nodes":[{"pos":[0,14],"content":"The baud rate.","nodes":[{"content":"The baud rate.","pos":[0,14]}]}],"pos":[27983,27998],"yaml":true},{"content":"The baud rate specified is less than or equal to zero, or is greater than the maximum allowable baud rate for the device.","nodes":[{"pos":[0,121],"content":"The baud rate specified is less than or equal to zero, or is greater than the maximum allowable baud rate for the device.","nodes":[{"content":"The baud rate specified is less than or equal to zero, or is greater than the maximum allowable baud rate for the device.","pos":[0,121]}]}],"pos":[28175,28297],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[28385,28620],"yaml":true},{"content":"Gets or sets the break signal state.","nodes":[{"pos":[0,36],"content":"Gets or sets the break signal state.","nodes":[{"content":"Gets or sets the break signal state.","pos":[0,36]}]}],"pos":[29644,29681],"yaml":true},{"content":"The break signal state occurs when a transmission is suspended and the line is placed in a break state (all low, no stop bit) until released. To enter a break state, set this property to `true`. If the port is already in a break state, setting this property again to `true` does not result in an exception. It is not possible to write to the <xref:System.IO.Ports.SerialPort> object while <xref:System.IO.Ports.SerialPort.BreakState%2A> is `true`.","nodes":[{"pos":[0,447],"content":"The break signal state occurs when a transmission is suspended and the line is placed in a break state (all low, no stop bit) until released. To enter a break state, set this property to `true`. If the port is already in a break state, setting this property again to `true` does not result in an exception. It is not possible to write to the <xref:System.IO.Ports.SerialPort> object while <xref:System.IO.Ports.SerialPort.BreakState%2A> is `true`.","nodes":[{"content":"The break signal state occurs when a transmission is suspended and the line is placed in a break state (all low, no stop bit) until released.","pos":[0,141]},{"content":"To enter a break state, set this property to <ph id=\"ph1\">`true`</ph>.","pos":[142,194],"source":" To enter a break state, set this property to `true`."},{"content":"If the port is already in a break state, setting this property again to <ph id=\"ph1\">`true`</ph> does not result in an exception.","pos":[195,306],"source":" If the port is already in a break state, setting this property again to `true` does not result in an exception."},{"content":"It is not possible to write to the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object while <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>.","pos":[307,447],"source":" It is not possible to write to the <xref:System.IO.Ports.SerialPort> object while <xref:System.IO.Ports.SerialPort.BreakState%2A> is `true`."}]}],"pos":[29692,30140],"yaml":true,"extradata":"MT"},{"content":"`true` if the port is in a break state; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the port is in a break state; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the port is in a break state; otherwise, `false`."}],"pos":[30315,30377],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[30530,30765],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[30875,31089],"yaml":true},{"content":"Gets the number of bytes of data in the receive buffer.","nodes":[{"pos":[0,55],"content":"Gets the number of bytes of data in the receive buffer.","nodes":[{"content":"Gets the number of bytes of data in the receive buffer.","pos":[0,55]}]}],"pos":[32119,32175],"yaml":true},{"content":"The receive buffer includes the serial driver's receive buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself.  \n  \n Because the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer,  it can return a greater value than the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property, which represents only the Windows-created buffer.","nodes":[{"pos":[0,148],"content":"The receive buffer includes the serial driver's receive buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself.","nodes":[{"content":"The receive buffer includes the serial driver's receive buffer as well as internal buffering in the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object itself.","pos":[0,148],"source":"The receive buffer includes the serial driver's receive buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself."}]},{"pos":[155,469],"content":"Because the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer,  it can return a greater value than the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property, which represents only the Windows-created buffer.","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property represents both the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> buffer and the Windows-created buffer,  it can return a greater value than the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph> property, which represents only the Windows-created buffer.","pos":[0,314],"source":"Because the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer,  it can return a greater value than the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property, which represents only the Windows-created buffer."}]}],"pos":[32186,32660],"yaml":true,"extradata":"MT"},{"content":"The number of bytes of data in the receive buffer.","nodes":[{"pos":[0,50],"content":"The number of bytes of data in the receive buffer.","nodes":[{"content":"The number of bytes of data in the receive buffer.","pos":[0,50]}]}],"pos":[32828,32879],"yaml":true},{"content":"The port is not open.","nodes":[{"pos":[0,21],"content":"The port is not open.","nodes":[{"content":"The port is not open.","pos":[0,21]}]}],"pos":[33055,33077],"yaml":true},{"content":"Gets the number of bytes of data in the send buffer.","nodes":[{"pos":[0,52],"content":"Gets the number of bytes of data in the send buffer.","nodes":[{"content":"Gets the number of bytes of data in the send buffer.","pos":[0,52]}]}],"pos":[34113,34166],"yaml":true},{"content":"The send buffer includes the serial driver's send buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself.","nodes":[{"pos":[0,142],"content":"The send buffer includes the serial driver's send buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself.","nodes":[{"content":"The send buffer includes the serial driver's send buffer as well as internal buffering in the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object itself.","pos":[0,142],"source":"The send buffer includes the serial driver's send buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself."}]}],"pos":[34177,34320],"yaml":true,"extradata":"MT"},{"content":"The number of bytes of data in the send buffer.","nodes":[{"pos":[0,47],"content":"The number of bytes of data in the send buffer.","nodes":[{"content":"The number of bytes of data in the send buffer.","pos":[0,47]}]}],"pos":[34489,34537],"yaml":true},{"content":"The port is in an invalid state.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]}],"pos":[34692,34725],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[34835,35049],"yaml":true},{"content":"Gets the state of the Carrier Detect line for the port.","nodes":[{"pos":[0,55],"content":"Gets the state of the Carrier Detect line for the port.","nodes":[{"content":"Gets the state of the Carrier Detect line for the port.","pos":[0,55]}]}],"pos":[36067,36123],"yaml":true},{"content":"This property can be used to monitor the state of the carrier detection line for a port. No carrier usually indicates that the receiver has hung up and the carrier has been dropped.","nodes":[{"pos":[0,181],"content":"This property can be used to monitor the state of the carrier detection line for a port. No carrier usually indicates that the receiver has hung up and the carrier has been dropped.","nodes":[{"content":"This property can be used to monitor the state of the carrier detection line for a port. No carrier usually indicates that the receiver has hung up and the carrier has been dropped.","pos":[0,181],"nodes":[{"content":"This property can be used to monitor the state of the carrier detection line for a port.","pos":[0,88]},{"content":"No carrier usually indicates that the receiver has hung up and the carrier has been dropped.","pos":[89,181]}]}]}],"pos":[36134,36316],"yaml":true,"extradata":"MT"},{"content":"`true` if the carrier is detected; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the carrier is detected; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the carrier is detected; otherwise, `false`."}],"pos":[36485,36542],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[36694,36929],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[37039,37253],"yaml":true},{"content":"Closes the port connection, sets the <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> property to `false`, and disposes of the internal <xref href=\"System.IO.Stream\"></xref> object.","nodes":[{"pos":[0,187],"content":"Closes the port connection, sets the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.IsOpen\"&gt;&lt;/xref&gt;</ph> property to <ph id=\"ph2\">`false`</ph>, and disposes of the internal <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object.","source":"Closes the port connection, sets the <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> property to `false`, and disposes of the internal <xref href=\"System.IO.Stream\"></xref> object."}],"pos":[38251,38439],"yaml":true},{"content":"Calling this method closes the <xref:System.IO.Ports.SerialPort> object and clears both the receive and transmit buffers. This method calls the <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName> method, which invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> method with the `disposing` parameter set to `true`.  \n  \n The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly.","nodes":[{"pos":[0,391],"content":"Calling this method closes the <xref:System.IO.Ports.SerialPort> object and clears both the receive and transmit buffers. This method calls the <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName> method, which invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> method with the `disposing` parameter set to `true`.","nodes":[{"content":"Calling this method closes the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object and clears both the receive and transmit buffers.","pos":[0,121],"source":"Calling this method closes the <xref:System.IO.Ports.SerialPort> object and clears both the receive and transmit buffers."},{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose?displayProperty=fullName&gt;</ph> method, which invokes the protected <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName&gt;</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[122,391],"source":" This method calls the <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName> method, which invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> method with the `disposing` parameter set to `true`."}]},{"pos":[398,659],"content":"The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly.","nodes":[{"content":"The best practice for any application is to wait for some amount of time after calling the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method before attempting to call the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.Open%2A&gt;</ph> method, as the port may not be closed instantly.","pos":[0,261],"source":"The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly."}]}],"pos":[38450,39114],"yaml":true,"extradata":"MT"},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[40167,40402],"yaml":true},{"content":"Gets the state of the Clear-to-Send line.","nodes":[{"pos":[0,41],"content":"Gets the state of the Clear-to-Send line.","nodes":[{"content":"Gets the state of the Clear-to-Send line.","pos":[0,41]}]}],"pos":[41361,41403],"yaml":true},{"content":"The Clear-to-Send (CTS) line is used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking. The CTS line is queried by a port before data is sent.","nodes":[{"pos":[0,156],"content":"The Clear-to-Send (CTS) line is used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking. The CTS line is queried by a port before data is sent.","nodes":[{"content":"The Clear-to-Send (CTS) line is used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking. The CTS line is queried by a port before data is sent.","pos":[0,156],"nodes":[{"content":"The Clear-to-Send (CTS) line is used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.","pos":[0,101]},{"content":"The CTS line is queried by a port before data is sent.","pos":[102,156]}]}]}],"pos":[41414,41571],"yaml":true,"extradata":"MT"},{"content":"`true` if the Clear-to-Send line is detected; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the Clear-to-Send line is detected; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the Clear-to-Send line is detected; otherwise, `false`."}],"pos":[41741,41809],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[41962,42197],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[42307,42521],"yaml":true},{"content":"Gets or sets the standard length of data bits per byte.","nodes":[{"pos":[0,55],"content":"Gets or sets the standard length of data bits per byte.","nodes":[{"content":"Gets or sets the standard length of data bits per byte.","pos":[0,55]}]}],"pos":[43533,43589],"yaml":true},{"content":"The range of values for this property is from 5 through 8. The default value is 8.","nodes":[{"pos":[0,82],"content":"The range of values for this property is from 5 through 8. The default value is 8.","nodes":[{"content":"The range of values for this property is from 5 through 8. The default value is 8.","pos":[0,82],"nodes":[{"content":"The range of values for this property is from 5 through 8.","pos":[0,58]},{"content":"The default value is 8.","pos":[59,82]}]}]}],"pos":[43600,43683],"yaml":true,"extradata":"MT"},{"content":"The data bits length.","nodes":[{"pos":[0,21],"content":"The data bits length.","nodes":[{"content":"The data bits length.","pos":[0,21]}]}],"pos":[44693,44715],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[44866,45101],"yaml":true},{"content":"The data bits value is less than 5 or more than 8.","nodes":[{"pos":[0,50],"content":"The data bits value is less than 5 or more than 8.","nodes":[{"content":"The data bits value is less than 5 or more than 8.","pos":[0,50]}]}],"pos":[45215,45266],"yaml":true},{"content":"Indicates that data has been received through a port represented by the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,127],"content":"Indicates that data has been received through a port represented by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Indicates that data has been received through a port represented by the <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[46299,46427],"yaml":true},{"content":"Data events can be caused by any of the items in the <xref:System.IO.Ports.SerialData> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.  \n  \n The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an Eof character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property.  \n  \n <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.  \n  \n The <xref:System.IO.Ports.SerialPort.DataReceived> event is not guaranteed to be raised for every byte received. Use the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property to determine how much data is left to be read in the buffer.  \n  \n The <xref:System.IO.Ports.SerialPort.DataReceived> event is raised on a secondary thread when data is received from the <xref:System.IO.Ports.SerialPort> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.  \n  \n For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,214],"content":"Data events can be caused by any of the items in the <xref:System.IO.Ports.SerialData> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.","nodes":[{"content":"Data events can be caused by any of the items in the <xref:System.IO.Ports.SerialData> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.","pos":[0,214],"nodes":[{"content":"Data events can be caused by any of the items in the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialData&gt;</ph> enumeration.","pos":[0,99],"source":"Data events can be caused by any of the items in the <xref:System.IO.Ports.SerialData> enumeration."},{"content":"Because the operating system determines whether to raise this event or not, not all parity errors may be reported.","pos":[100,214]}]}]},{"pos":[221,479],"content":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an Eof character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> event is also raised if an Eof character is received, regardless of the number of bytes in the internal input buffer and the value of the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A&gt;</ph> property.","pos":[0,258],"source":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an Eof character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property."}]},{"pos":[486,837],"content":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.","nodes":[{"content":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.","pos":[0,351],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed.","pos":[0,305],"source":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed."},{"content":"Only one event handler can execute at a time.","pos":[306,351]}]}]},{"pos":[844,1083],"content":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is not guaranteed to be raised for every byte received. Use the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property to determine how much data is left to be read in the buffer.","nodes":[{"content":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is not guaranteed to be raised for every byte received. Use the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property to determine how much data is left to be read in the buffer.","pos":[0,239],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> event is not guaranteed to be raised for every byte received.","pos":[0,112],"source":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is not guaranteed to be raised for every byte received."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property to determine how much data is left to be read in the buffer.","pos":[113,239],"source":" Use the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property to determine how much data is left to be read in the buffer."}]}]},{"pos":[1090,1686],"content":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is raised on a secondary thread when data is received from the <xref:System.IO.Ports.SerialPort> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.","nodes":[{"content":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is raised on a secondary thread when data is received from the <xref:System.IO.Ports.SerialPort> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.","pos":[0,596],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> event is raised on a secondary thread when data is received from the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[0,161],"source":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is raised on a secondary thread when data is received from the <xref:System.IO.Ports.SerialPort> object."},{"content":"Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.","pos":[162,349]},{"content":"If it is necessary to modify elements in the main <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph>, post change requests back using <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, which will do the work on the proper thread.","pos":[350,596],"source":" If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread."}]}]},{"pos":[1693,1822],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[46438,48273],"yaml":true,"extradata":"MT"},{"content":"Discards data from the serial driver's receive buffer.","nodes":[{"pos":[0,54],"content":"Discards data from the serial driver's receive buffer.","nodes":[{"content":"Discards data from the serial driver's receive buffer.","pos":[0,54]}]}],"pos":[50232,50287],"yaml":true},{"content":"This method is equivalent to the following Visual Basic code: `MSComm1.InBufferCount = 0`. It clears the receive buffer, but does not affect the transmit buffer.","nodes":[{"pos":[0,161],"content":"This method is equivalent to the following Visual Basic code: `MSComm1.InBufferCount = 0`. It clears the receive buffer, but does not affect the transmit buffer.","nodes":[{"content":"This method is equivalent to the following Visual Basic code: <ph id=\"ph1\">`MSComm1.InBufferCount = 0`</ph>.","pos":[0,90],"source":"This method is equivalent to the following Visual Basic code: `MSComm1.InBufferCount = 0`."},{"content":"It clears the receive buffer, but does not affect the transmit buffer.","pos":[91,161]}]}],"pos":[50298,50462],"yaml":true,"extradata":"MT"},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[50694,50929],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[51039,51253],"yaml":true},{"content":"Gets or sets a value indicating whether null bytes are ignored when transmitted between the port and the receive buffer.","nodes":[{"pos":[0,120],"content":"Gets or sets a value indicating whether null bytes are ignored when transmitted between the port and the receive buffer.","nodes":[{"content":"Gets or sets a value indicating whether null bytes are ignored when transmitted between the port and the receive buffer.","pos":[0,120]}]}],"pos":[52218,52339],"yaml":true},{"content":"This value should normally be set to `false`, especially for binary transmissions.  Setting this property to `true` can cause unexpected results for UTF32- and UTF16-encoded bytes.","nodes":[{"pos":[0,180],"content":"This value should normally be set to `false`, especially for binary transmissions.  Setting this property to `true` can cause unexpected results for UTF32- and UTF16-encoded bytes.","nodes":[{"content":"This value should normally be set to <ph id=\"ph1\">`false`</ph>, especially for binary transmissions.","pos":[0,82],"source":"This value should normally be set to `false`, especially for binary transmissions."},{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> can cause unexpected results for UTF32- and UTF16-encoded bytes.","pos":[84,180],"source":"  Setting this property to `true` can cause unexpected results for UTF32- and UTF16-encoded bytes."}]}],"pos":[52350,52531],"yaml":true,"extradata":"MT"},{"content":"`true` if null bytes are ignored; otherwise `false`. The default is `false`.","nodes":[{"pos":[0,76],"content":"`true` if null bytes are ignored; otherwise `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if null bytes are ignored; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,52],"source":"`true` if null bytes are ignored; otherwise `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[53,76],"source":" The default is `false`."}]}],"pos":[52750,52829],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[52983,53218],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[53328,53542],"yaml":true},{"content":"Discards data from the serial driver's transmit buffer.","nodes":[{"pos":[0,55],"content":"Discards data from the serial driver's transmit buffer.","nodes":[{"content":"Discards data from the serial driver's transmit buffer.","pos":[0,55]}]}],"pos":[54632,54688],"yaml":true},{"content":"This method is equivalent to the following Visual Basic code: `MSComm1.OutBufferCount = 0`. It clears the transmit buffer, but does not affect the receive buffer.","nodes":[{"pos":[0,162],"content":"This method is equivalent to the following Visual Basic code: `MSComm1.OutBufferCount = 0`. It clears the transmit buffer, but does not affect the receive buffer.","nodes":[{"content":"This method is equivalent to the following Visual Basic code: <ph id=\"ph1\">`MSComm1.OutBufferCount = 0`</ph>.","pos":[0,91],"source":"This method is equivalent to the following Visual Basic code: `MSComm1.OutBufferCount = 0`."},{"content":"It clears the transmit buffer, but does not affect the receive buffer.","pos":[92,162]}]}],"pos":[54699,54864],"yaml":true,"extradata":"MT"},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[55098,55333],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[55443,55657],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.IO.Ports.SerialPort\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,139],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.IO.Ports.SerialPort\"></xref> and optionally releases the managed resources."}],"pos":[56671,56811],"yaml":true},{"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Ports.SerialPort.Dispose%2A> with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Ports.SerialPort> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.  \n  \n This method flushes and closes the stream object in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","nodes":[{"pos":[0,430],"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Ports.SerialPort.Dispose%2A> with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,141],"source":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.Dispose%2A&gt;</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[142,311],"source":" <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%2A> method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.Dispose%2A&gt;</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[312,430],"source":" <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Ports.SerialPort.Dispose%2A> with `disposing` set to `false`."}]},{"pos":[437,705],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Ports.SerialPort> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> references.","pos":[0,160],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Ports.SerialPort> references."},{"content":"This method invokes the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.","pos":[161,268],"source":" This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object."}]},{"pos":[712,825],"content":"This method flushes and closes the stream object in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","nodes":[{"content":"This method flushes and closes the stream object in the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property.","pos":[0,113],"source":"This method flushes and closes the stream object in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property."}]}],"pos":[56822,57654],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[57809,57912],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[58062,58297],"yaml":true},{"content":"Gets the state of the Data Set Ready (DSR) signal.","nodes":[{"pos":[0,50],"content":"Gets the state of the Data Set Ready (DSR) signal.","nodes":[{"content":"Gets the state of the Data Set Ready (DSR) signal.","pos":[0,50]}]}],"pos":[59256,59307],"yaml":true},{"content":"This property is used in Data Set Ready/Data Terminal Ready (DSR/DTR) handshaking. The Data Set Ready (DSR) signal is usually sent by a modem to a port to indicate that it is ready for data transmission or data reception.","nodes":[{"pos":[0,221],"content":"This property is used in Data Set Ready/Data Terminal Ready (DSR/DTR) handshaking. The Data Set Ready (DSR) signal is usually sent by a modem to a port to indicate that it is ready for data transmission or data reception.","nodes":[{"content":"This property is used in Data Set Ready/Data Terminal Ready (DSR/DTR) handshaking. The Data Set Ready (DSR) signal is usually sent by a modem to a port to indicate that it is ready for data transmission or data reception.","pos":[0,221],"nodes":[{"content":"This property is used in Data Set Ready/Data Terminal Ready (DSR/DTR) handshaking.","pos":[0,82]},{"content":"The Data Set Ready (DSR) signal is usually sent by a modem to a port to indicate that it is ready for data transmission or data reception.","pos":[83,221]}]}]}],"pos":[59318,59540],"yaml":true,"extradata":"MT"},{"content":"`true` if a Data Set Ready signal has been sent to the port; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if a Data Set Ready signal has been sent to the port; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a Data Set Ready signal has been sent to the port; otherwise, `false`."}],"pos":[59710,59793],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[59946,60181],"yaml":true},{"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"pos":[0,213],"content":"The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.","nodes":[{"content":"The stream is closed.","pos":[0,21]},{"content":"This can occur because the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Open\"&gt;&lt;/xref&gt;</ph> method has not been called or the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Close\"&gt;&lt;/xref&gt;</ph> method has been called.","pos":[22,213],"source":" This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called."}]}],"pos":[60291,60505],"yaml":true},{"content":"Gets or sets a value that enables the Data Terminal Ready (DTR) signal during serial communication.","nodes":[{"pos":[0,99],"content":"Gets or sets a value that enables the Data Terminal Ready (DTR) signal during serial communication.","nodes":[{"content":"Gets or sets a value that enables the Data Terminal Ready (DTR) signal during serial communication.","pos":[0,99]}]}],"pos":[61523,61623],"yaml":true},{"content":"Data Terminal Ready (DTR) is typically enabled during XON/XOFF software handshaking and Request to Send/Clear to Send (RTS/CTS) hardware handshaking, and modem communications.","nodes":[{"pos":[0,175],"content":"Data Terminal Ready (DTR) is typically enabled during XON/XOFF software handshaking and Request to Send/Clear to Send (RTS/CTS) hardware handshaking, and modem communications.","nodes":[{"content":"Data Terminal Ready (DTR) is typically enabled during XON/XOFF software handshaking and Request to Send/Clear to Send (RTS/CTS) hardware handshaking, and modem communications.","pos":[0,175]}]}],"pos":[61634,61810],"yaml":true,"extradata":"MT"},{"content":"`true` to enable Data Terminal Ready (DTR); otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,87],"content":"`true` to enable Data Terminal Ready (DTR); otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to enable Data Terminal Ready (DTR); otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` to enable Data Terminal Ready (DTR); otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[64,87],"source":" The default is `false`."}]}],"pos":[61983,62073],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[62225,62460],"yaml":true},{"content":"Gets or sets the byte encoding for pre- and post-transmission conversion of text.","nodes":[{"pos":[0,81],"content":"Gets or sets the byte encoding for pre- and post-transmission conversion of text.","nodes":[{"content":"Gets or sets the byte encoding for pre- and post-transmission conversion of text.","pos":[0,81]}]}],"pos":[63472,63554],"yaml":true},{"content":"An <xref href=\"System.Text.Encoding\"></xref> object. The default is <xref href=\"System.Text.ASCIIEncoding\"></xref>.","nodes":[{"pos":[0,115],"content":"An <xref href=\"System.Text.Encoding\"></xref> object. The default is <xref href=\"System.Text.ASCIIEncoding\"></xref>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,52],"source":"An <xref href=\"System.Text.Encoding\"></xref> object."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Text.ASCIIEncoding\"&gt;&lt;/xref&gt;</ph>.","pos":[53,115],"source":" The default is <xref href=\"System.Text.ASCIIEncoding\"></xref>."}]}],"pos":[63749,63865],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.Encoding\"></xref> property was set to `null`.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Encoding\"&gt;&lt;/xref&gt;</ph> property was set to <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.IO.Ports.SerialPort.Encoding\"></xref> property was set to `null`."}],"pos":[64030,64119],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.Encoding\"></xref> property was set to an encoding that is not <xref href=\"System.Text.ASCIIEncoding\"></xref>, <xref href=\"System.Text.UTF8Encoding\"></xref>, <xref href=\"System.Text.UTF32Encoding\"></xref>, <xref href=\"System.Text.UnicodeEncoding\"></xref>, one of the Windows single byte encodings, or one of the Windows double byte encodings.","nodes":[{"pos":[0,384],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Encoding\"&gt;&lt;/xref&gt;</ph> property was set to an encoding that is not <ph id=\"ph2\">&lt;xref href=\"System.Text.ASCIIEncoding\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Text.UTF8Encoding\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Text.UTF32Encoding\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.Text.UnicodeEncoding\"&gt;&lt;/xref&gt;</ph>, one of the Windows single byte encodings, or one of the Windows double byte encodings.","source":"The <xref href=\"System.IO.Ports.SerialPort.Encoding\"></xref> property was set to an encoding that is not <xref href=\"System.Text.ASCIIEncoding\"></xref>, <xref href=\"System.Text.UTF8Encoding\"></xref>, <xref href=\"System.Text.UTF32Encoding\"></xref>, <xref href=\"System.Text.UnicodeEncoding\"></xref>, one of the Windows single byte encodings, or one of the Windows double byte encodings."}],"pos":[64213,64598],"yaml":true},{"content":"Indicates that an error has occurred with a port represented by a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,121],"content":"Indicates that an error has occurred with a port represented by a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Indicates that an error has occurred with a port represented by a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[65637,65759],"yaml":true},{"content":"Error events can be caused by any of the items in the <xref:System.IO.Ports.SerialError> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.  \n  \n <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed. Only one event handler can execute at a time.  \n  \n If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.  \n  \n The <xref:System.IO.Ports.SerialPort.ErrorReceived> event is raised on a secondary thread when an error is received from the <xref:System.IO.Ports.SerialPort> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.  \n  \n For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,216],"content":"Error events can be caused by any of the items in the <xref:System.IO.Ports.SerialError> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.","nodes":[{"content":"Error events can be caused by any of the items in the <xref:System.IO.Ports.SerialError> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.","pos":[0,216],"nodes":[{"content":"Error events can be caused by any of the items in the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialError&gt;</ph> enumeration.","pos":[0,101],"source":"Error events can be caused by any of the items in the <xref:System.IO.Ports.SerialError> enumeration."},{"content":"Because the operating system determines whether to raise this event or not, not all parity errors may be reported.","pos":[102,216]}]}]},{"pos":[223,588],"content":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed. Only one event handler can execute at a time.","nodes":[{"content":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed. Only one event handler can execute at a time.","pos":[0,365],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed.","pos":[0,319],"source":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed."},{"content":"Only one event handler can execute at a time.","pos":[320,365]}]}]},{"pos":[595,722],"content":"If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.","nodes":[{"content":"If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.","pos":[0,127]}]},{"pos":[729,1330],"content":"The <xref:System.IO.Ports.SerialPort.ErrorReceived> event is raised on a secondary thread when an error is received from the <xref:System.IO.Ports.SerialPort> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.","nodes":[{"content":"The <xref:System.IO.Ports.SerialPort.ErrorReceived> event is raised on a secondary thread when an error is received from the <xref:System.IO.Ports.SerialPort> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.","pos":[0,601],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph> event is raised on a secondary thread when an error is received from the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[0,166],"source":"The <xref:System.IO.Ports.SerialPort.ErrorReceived> event is raised on a secondary thread when an error is received from the <xref:System.IO.Ports.SerialPort> object."},{"content":"Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.","pos":[167,354]},{"content":"If it is necessary to modify elements in the main <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph>, post change requests back using <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, which will do the work on the proper thread.","pos":[355,601],"source":" If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread."}]}]},{"pos":[1337,1466],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[65770,67247],"yaml":true,"extradata":"MT"},{"content":"Gets an array of serial port names for the current computer.","nodes":[{"pos":[0,60],"content":"Gets an array of serial port names for the current computer.","nodes":[{"content":"Gets an array of serial port names for the current computer.","pos":[0,60]}]}],"pos":[68449,68510],"yaml":true},{"content":"The order of port names returned from <xref:System.IO.Ports.SerialPort.GetPortNames%2A> is not specified.  \n  \n Use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.  \n  \n The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method will return incorrect data.","nodes":[{"pos":[0,105],"content":"The order of port names returned from <xref:System.IO.Ports.SerialPort.GetPortNames%2A> is not specified.","nodes":[{"content":"The order of port names returned from <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> is not specified.","pos":[0,105],"source":"The order of port names returned from <xref:System.IO.Ports.SerialPort.GetPortNames%2A> is not specified."}]},{"pos":[112,366],"content":"Use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.","nodes":[{"content":"Use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.","pos":[0,254],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method to query the current computer for a list of valid serial port names.","pos":[0,133],"source":"Use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to query the current computer for a list of valid serial port names."},{"content":"For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.","pos":[134,254]}]}]},{"pos":[373,643],"content":"The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method will return incorrect data.","nodes":[{"content":"The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method will return incorrect data.","pos":[0,270],"nodes":[{"content":"The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM).","pos":[0,117]},{"content":"If the registry contains stale or otherwise incorrect data then the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method will return incorrect data.","pos":[118,270],"source":" If the registry contains stale or otherwise incorrect data then the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method will return incorrect data."}]}]}],"pos":[68521,69174],"yaml":true,"extradata":"MT"},{"content":"An array of serial port names for the current computer.","nodes":[{"pos":[0,55],"content":"An array of serial port names for the current computer.","nodes":[{"content":"An array of serial port names for the current computer.","pos":[0,55]}]}],"pos":[69842,69898],"yaml":true},{"content":"The serial port names could not be queried.","nodes":[{"pos":[0,43],"content":"The serial port names could not be queried.","nodes":[{"content":"The serial port names could not be queried.","pos":[0,43]}]}],"pos":[70083,70127],"yaml":true},{"content":"Gets or sets the handshaking protocol for serial port transmission of data using a value from <xref href=\"System.IO.Ports.Handshake\"></xref>.","nodes":[{"pos":[0,141],"content":"Gets or sets the handshaking protocol for serial port transmission of data using a value from <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.Handshake\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the handshaking protocol for serial port transmission of data using a value from <xref href=\"System.IO.Ports.Handshake\"></xref>."}],"pos":[71080,71222],"yaml":true},{"content":"When handshaking is used, the device connected to the <xref:System.IO.Ports.SerialPort> object is instructed to stop sending data when there is at least (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bytes in the buffer. The device is instructed to start sending data again when there are 1024 or fewer bytes in the buffer. If the device is sending data in blocks that are larger than 1024 bytes, this may cause the buffer to overflow.  \n  \n If the <xref:System.IO.Ports.SerialPort.Handshake%2A> property is set to <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> and <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is set to `false`, the XOff character will not be sent. If <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is then set to `true`, more data must be sent before the XOff character will be sent.","nodes":[{"pos":[0,447],"content":"When handshaking is used, the device connected to the <xref:System.IO.Ports.SerialPort> object is instructed to stop sending data when there is at least (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bytes in the buffer. The device is instructed to start sending data again when there are 1024 or fewer bytes in the buffer. If the device is sending data in blocks that are larger than 1024 bytes, this may cause the buffer to overflow.","nodes":[{"content":"When handshaking is used, the device connected to the <xref:System.IO.Ports.SerialPort> object is instructed to stop sending data when there is at least (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bytes in the buffer. The device is instructed to start sending data again when there are 1024 or fewer bytes in the buffer. If the device is sending data in blocks that are larger than 1024 bytes, this may cause the buffer to overflow.","pos":[0,447],"nodes":[{"content":"When handshaking is used, the device connected to the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object is instructed to stop sending data when there is at least (<ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph>-1024) bytes in the buffer.","pos":[0,232],"source":"When handshaking is used, the device connected to the <xref:System.IO.Ports.SerialPort> object is instructed to stop sending data when there is at least (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bytes in the buffer."},{"content":"The device is instructed to start sending data again when there are 1024 or fewer bytes in the buffer.","pos":[233,335]},{"content":"If the device is sending data in blocks that are larger than 1024 bytes, this may cause the buffer to overflow.","pos":[336,447]}]}]},{"pos":[454,825],"content":"If the <xref:System.IO.Ports.SerialPort.Handshake%2A> property is set to <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> and <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is set to `false`, the XOff character will not be sent. If <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is then set to `true`, more data must be sent before the XOff character will be sent.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:System.IO.Ports.Handshake.RequestToSendXOnXOff&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort.CtsHolding%2A&gt;</ph> is set to <ph id=\"ph4\">`false`</ph>, the XOff character will not be sent.","pos":[0,234],"source":"If the <xref:System.IO.Ports.SerialPort.Handshake%2A> property is set to <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> and <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is set to `false`, the XOff character will not be sent."},{"content":"If <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.CtsHolding%2A&gt;</ph> is then set to <ph id=\"ph2\">`true`</ph>, more data must be sent before the XOff character will be sent.","pos":[235,371],"source":" If <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is then set to `true`, more data must be sent before the XOff character will be sent."}]}],"pos":[71233,72063],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.IO.Ports.Handshake\"></xref> values. The default is `None`.","nodes":[{"pos":[0,88],"content":"One of the <xref href=\"System.IO.Ports.Handshake\"></xref> values. The default is `None`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.Handshake\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,65],"source":"One of the <xref href=\"System.IO.Ports.Handshake\"></xref> values."},{"content":"The default is <ph id=\"ph1\">`None`</ph>.","pos":[66,88],"source":" The default is `None`."}]}],"pos":[73109,73198],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[73350,73585],"yaml":true},{"content":"The value passed is not a valid value in the <xref href=\"System.IO.Ports.Handshake\"></xref> enumeration.","nodes":[{"pos":[0,104],"content":"The value passed is not a valid value in the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.Handshake\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"The value passed is not a valid value in the <xref href=\"System.IO.Ports.Handshake\"></xref> enumeration."}],"pos":[73699,73804],"yaml":true},{"content":"Indicates that no time-out should occur.","nodes":[{"pos":[0,40],"content":"Indicates that no time-out should occur.","nodes":[{"content":"Indicates that no time-out should occur.","pos":[0,40]}]}],"pos":[74855,74896],"yaml":true},{"content":"This value is used with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> and <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> properties.","nodes":[{"pos":[0,142],"content":"This value is used with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> and <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> properties.","nodes":[{"content":"This value is used with the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.WriteTimeout%2A&gt;</ph> properties.","pos":[0,142],"source":"This value is used with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> and <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> properties."}]}],"pos":[74907,75050],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating the open or closed status of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,112],"content":"Gets a value indicating the open or closed status of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a value indicating the open or closed status of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[76123,76236],"yaml":true},{"content":"The <xref:System.IO.Ports.SerialPort.IsOpen%2A> property tracks whether the port is open for use by the caller, not whether the port is open by any application on the machine.","nodes":[{"pos":[0,175],"content":"The <xref:System.IO.Ports.SerialPort.IsOpen%2A> property tracks whether the port is open for use by the caller, not whether the port is open by any application on the machine.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.IsOpen%2A&gt;</ph> property tracks whether the port is open for use by the caller, not whether the port is open by any application on the machine.","pos":[0,175],"source":"The <xref:System.IO.Ports.SerialPort.IsOpen%2A> property tracks whether the port is open for use by the caller, not whether the port is open by any application on the machine."}]}],"pos":[76247,76423],"yaml":true,"extradata":"MT"},{"content":"`true` if the serial port is open; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,78],"content":"`true` if the serial port is open; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the serial port is open; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,54],"source":"`true` if the serial port is open; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[55,78],"source":" The default is `false`."}]}],"pos":[76589,76670],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> value passed is `null`.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.IsOpen\"&gt;&lt;/xref&gt;</ph> value passed is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> value passed is `null`."}],"pos":[76833,76916],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> value passed is an empty string (\"\").","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.IsOpen\"&gt;&lt;/xref&gt;</ph> value passed is an empty string (\"\").","source":"The <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> value passed is an empty string (\"\")."}],"pos":[77010,77107],"yaml":true},{"content":"Gets or sets the value used to interpret the end of a call to the <xref href=\"System.IO.Ports.SerialPort.ReadLine\"></xref> and <xref href=\"System.IO.Ports.SerialPort.WriteLine(System.String)\"></xref> methods.","nodes":[{"pos":[0,208],"content":"Gets or sets the value used to interpret the end of a call to the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.ReadLine\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.WriteLine(System.String)\"&gt;&lt;/xref&gt;</ph> methods.","source":"Gets or sets the value used to interpret the end of a call to the <xref href=\"System.IO.Ports.SerialPort.ReadLine\"></xref> and <xref href=\"System.IO.Ports.SerialPort.WriteLine(System.String)\"></xref> methods."}],"pos":[78113,78322],"yaml":true},{"content":"This property determines what value (byte) defines the end of a line for the <xref:System.IO.Ports.SerialPort.ReadLine%2A> and <xref:System.IO.Ports.SerialPort.WriteLine%2A> methods. By default the end-of-line value is <xref:System.Environment.NewLine%2A>. You would change this to a different value if the particular serial device you’re working with uses a different value for the same purpose.","nodes":[{"pos":[0,396],"content":"This property determines what value (byte) defines the end of a line for the <xref:System.IO.Ports.SerialPort.ReadLine%2A> and <xref:System.IO.Ports.SerialPort.WriteLine%2A> methods. By default the end-of-line value is <xref:System.Environment.NewLine%2A>. You would change this to a different value if the particular serial device you’re working with uses a different value for the same purpose.","nodes":[{"content":"This property determines what value (byte) defines the end of a line for the <xref:System.IO.Ports.SerialPort.ReadLine%2A> and <xref:System.IO.Ports.SerialPort.WriteLine%2A> methods. By default the end-of-line value is <xref:System.Environment.NewLine%2A>. You would change this to a different value if the particular serial device you’re working with uses a different value for the same purpose.","pos":[0,396],"nodes":[{"content":"This property determines what value (byte) defines the end of a line for the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.WriteLine%2A&gt;</ph> methods.","pos":[0,182],"source":"This property determines what value (byte) defines the end of a line for the <xref:System.IO.Ports.SerialPort.ReadLine%2A> and <xref:System.IO.Ports.SerialPort.WriteLine%2A> methods."},{"content":"By default the end-of-line value is <ph id=\"ph1\">&lt;xref:System.Environment.NewLine%2A&gt;</ph>.","pos":[183,256],"source":" By default the end-of-line value is <xref:System.Environment.NewLine%2A>."},{"content":"You would change this to a different value if the particular serial device you’re working with uses a different value for the same purpose.","pos":[257,396]}]}]}],"pos":[78333,78730],"yaml":true,"extradata":"MT"},{"content":"A value that represents the end of a line. The default is a line feed, <xref href=\"System.Environment.NewLine\"></xref>.","nodes":[{"pos":[0,119],"content":"A value that represents the end of a line. The default is a line feed, <xref href=\"System.Environment.NewLine\"></xref>.","nodes":[{"content":"A value that represents the end of a line.","pos":[0,42]},{"content":"The default is a line feed, <ph id=\"ph1\">&lt;xref href=\"System.Environment.NewLine\"&gt;&lt;/xref&gt;</ph>.","pos":[43,119],"source":" The default is a line feed, <xref href=\"System.Environment.NewLine\"></xref>."}]}],"pos":[78903,79023],"yaml":true},{"content":"The property value is empty.","nodes":[{"pos":[0,28],"content":"The property value is empty.","nodes":[{"content":"The property value is empty.","pos":[0,28]}]}],"pos":[79179,79208],"yaml":true},{"content":"The property value is `null`.","nodes":[{"pos":[0,29],"content":"The property value is <ph id=\"ph1\">`null`</ph>.","source":"The property value is `null`."}],"pos":[79310,79340],"yaml":true},{"content":"Opens a new serial port connection.","nodes":[{"pos":[0,35],"content":"Opens a new serial port connection.","nodes":[{"content":"Opens a new serial port connection.","pos":[0,35]}]}],"pos":[80332,80368],"yaml":true},{"content":"Only one open connection can exist per <xref:System.IO.Ports.SerialPort> object.  \n  \n The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly.","nodes":[{"pos":[0,80],"content":"Only one open connection can exist per <xref:System.IO.Ports.SerialPort> object.","nodes":[{"content":"Only one open connection can exist per <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[0,80],"source":"Only one open connection can exist per <xref:System.IO.Ports.SerialPort> object."}]},{"pos":[87,348],"content":"The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly.","nodes":[{"content":"The best practice for any application is to wait for some amount of time after calling the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method before attempting to call the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.Open%2A&gt;</ph> method, as the port may not be closed instantly.","pos":[0,261],"source":"The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly."}]}],"pos":[80379,80732],"yaml":true,"extradata":"MT"},{"content":"Access is denied to the port.  \n  \n \\- or -  \n  \n The current process, or another process on the system, already has the specified COM port open either by a <xref href=\"System.IO.Ports.SerialPort\"></xref> instance or in unmanaged code.","nodes":[{"pos":[0,29],"content":"Access is denied to the port.","nodes":[{"content":"Access is denied to the port.","pos":[0,29]}]},{"pos":[36,43],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[50,235],"content":"The current process, or another process on the system, already has the specified COM port open either by a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> instance or in unmanaged code.","source":"The current process, or another process on the system, already has the specified COM port open either by a <xref href=\"System.IO.Ports.SerialPort\"></xref> instance or in unmanaged code."}],"pos":[81809,82054],"yaml":true},{"content":"One or more of the properties for this instance are invalid. For example, the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref>, <xref href=\"System.IO.Ports.SerialPort.DataBits\"></xref>, or <xref href=\"System.IO.Ports.SerialPort.Handshake\"></xref> properties are not valid values; the <xref href=\"System.IO.Ports.SerialPort.BaudRate\"></xref> is less than or equal to zero; the <xref href=\"System.IO.Ports.SerialPort.ReadTimeout\"></xref> or <xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"></xref> property is less than zero and is not <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.","nodes":[{"pos":[0,608],"content":"One or more of the properties for this instance are invalid. For example, the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref>, <xref href=\"System.IO.Ports.SerialPort.DataBits\"></xref>, or <xref href=\"System.IO.Ports.SerialPort.Handshake\"></xref> properties are not valid values; the <xref href=\"System.IO.Ports.SerialPort.BaudRate\"></xref> is less than or equal to zero; the <xref href=\"System.IO.Ports.SerialPort.ReadTimeout\"></xref> or <xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"></xref> property is less than zero and is not <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.","nodes":[{"content":"One or more of the properties for this instance are invalid.","pos":[0,60]},{"content":"For example, the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Parity\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.DataBits\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.IO.Ports.SerialPort.Handshake\"&gt;&lt;/xref&gt;</ph> properties are not valid values; the <ph id=\"ph4\">&lt;xref href=\"System.IO.Ports.SerialPort.BaudRate\"&gt;&lt;/xref&gt;</ph> is less than or equal to zero; the <ph id=\"ph5\">&lt;xref href=\"System.IO.Ports.SerialPort.ReadTimeout\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph6\">&lt;xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"&gt;&lt;/xref&gt;</ph> property is less than zero and is not <ph id=\"ph7\">&lt;xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"&gt;&lt;/xref&gt;</ph>.","pos":[61,608],"source":" For example, the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref>, <xref href=\"System.IO.Ports.SerialPort.DataBits\"></xref>, or <xref href=\"System.IO.Ports.SerialPort.Handshake\"></xref> properties are not valid values; the <xref href=\"System.IO.Ports.SerialPort.BaudRate\"></xref> is less than or equal to zero; the <xref href=\"System.IO.Ports.SerialPort.ReadTimeout\"></xref> or <xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"></xref> property is less than zero and is not <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>."}]}],"pos":[82168,82777],"yaml":true},{"content":"The port name does not begin with \"COM\".  \n  \n \\- or -  \n  \n The file type of the port is not supported.","nodes":[{"pos":[0,40],"content":"The port name does not begin with \"COM\".","nodes":[{"content":"The port name does not begin with \"COM\".","pos":[0,40]}]},{"pos":[47,54],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[61,104],"content":"The file type of the port is not supported.","nodes":[{"content":"The file type of the port is not supported.","pos":[0,43]}]}],"pos":[82871,82985],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[83073,83308],"yaml":true},{"content":"The specified port on the current instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> is already open.","nodes":[{"pos":[0,114],"content":"The specified port on the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> is already open.","source":"The specified port on the current instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> is already open."}],"pos":[83418,83533],"yaml":true},{"content":"Gets or sets the parity-checking protocol.","nodes":[{"pos":[0,42],"content":"Gets or sets the parity-checking protocol.","nodes":[{"content":"Gets or sets the parity-checking protocol.","pos":[0,42]}]}],"pos":[84468,84511],"yaml":true},{"content":"Parity is an error-checking procedure in which the number of 1s must always be the same—either even or odd—for each group of bits that is transmitted without error. In modem-to-modem communications, parity is often one of the parameters that must be agreed upon by sending parties and receiving parties before transmission can take place.  \n  \n If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.","nodes":[{"pos":[0,338],"content":"Parity is an error-checking procedure in which the number of 1s must always be the same—either even or odd—for each group of bits that is transmitted without error. In modem-to-modem communications, parity is often one of the parameters that must be agreed upon by sending parties and receiving parties before transmission can take place.","nodes":[{"content":"Parity is an error-checking procedure in which the number of 1s must always be the same—either even or odd—for each group of bits that is transmitted without error. In modem-to-modem communications, parity is often one of the parameters that must be agreed upon by sending parties and receiving parties before transmission can take place.","pos":[0,338],"nodes":[{"content":"Parity is an error-checking procedure in which the number of 1s must always be the same—either even or odd—for each group of bits that is transmitted without error.","pos":[0,164]},{"content":"In modem-to-modem communications, parity is often one of the parameters that must be agreed upon by sending parties and receiving parties before transmission can take place.","pos":[165,338]}]}]},{"pos":[345,472],"content":"If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.","nodes":[{"content":"If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.","pos":[0,127]}]}],"pos":[84522,84999],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that represents the parity-checking protocol. The default is <xref href=\"System.IO.Ports.Parity.None\"></xref>.","nodes":[{"pos":[0,140],"content":"One of the enumeration values that represents the parity-checking protocol. The default is <xref href=\"System.IO.Ports.Parity.None\"></xref>.","nodes":[{"content":"One of the enumeration values that represents the parity-checking protocol.","pos":[0,75]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.Parity.None\"&gt;&lt;/xref&gt;</ph>.","pos":[76,140],"source":" The default is <xref href=\"System.IO.Ports.Parity.None\"></xref>."}]}],"pos":[86036,86177],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[86326,86561],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> value passed is not a valid value in the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.Parity\"&gt;&lt;/xref&gt;</ph> value passed is not a valid value in the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"The <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> value passed is not a valid value in the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration."}],"pos":[86675,86832],"yaml":true},{"content":"Gets or sets the byte that replaces invalid bytes in a data stream when a parity error occurs.","nodes":[{"pos":[0,94],"content":"Gets or sets the byte that replaces invalid bytes in a data stream when a parity error occurs.","nodes":[{"content":"Gets or sets the byte that replaces invalid bytes in a data stream when a parity error occurs.","pos":[0,94]}]}],"pos":[87874,87969],"yaml":true},{"content":"If the value is set to the null character, parity replacement is disabled.","nodes":[{"pos":[0,74],"content":"If the value is set to the null character, parity replacement is disabled.","nodes":[{"content":"If the value is set to the null character, parity replacement is disabled.","pos":[0,74]}]}],"pos":[87980,88055],"yaml":true,"extradata":"MT"},{"content":"A byte that replaces invalid bytes.","nodes":[{"pos":[0,35],"content":"A byte that replaces invalid bytes.","nodes":[{"content":"A byte that replaces invalid bytes.","pos":[0,35]}]}],"pos":[88273,88309],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[88465,88700],"yaml":true},{"content":"Indicates that a non-data signal event has occurred on the port represented by the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,138],"content":"Indicates that a non-data signal event has occurred on the port represented by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Indicates that a non-data signal event has occurred on the port represented by the <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[89747,89886],"yaml":true},{"content":"Serial pin changed events can be caused by any of the items in the <xref:System.IO.Ports.SerialPinChange> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported. As part of the event, the new value of the pin is set.  \n  \n The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised when a <xref:System.IO.Ports.SerialPort> object enters the <xref:System.IO.Ports.SerialPort.BreakState%2A>, but not when the port exits the <xref:System.IO.Ports.SerialPort.BreakState%2A>. This behavior does not apply to other values in the <xref:System.IO.Ports.SerialPinChange> enumeration.  \n  \n <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.  \n  \n The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised on a secondary thread. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.  \n  \n For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,288],"content":"Serial pin changed events can be caused by any of the items in the <xref:System.IO.Ports.SerialPinChange> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported. As part of the event, the new value of the pin is set.","nodes":[{"content":"Serial pin changed events can be caused by any of the items in the <xref:System.IO.Ports.SerialPinChange> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported. As part of the event, the new value of the pin is set.","pos":[0,288],"nodes":[{"content":"Serial pin changed events can be caused by any of the items in the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPinChange&gt;</ph> enumeration.","pos":[0,118],"source":"Serial pin changed events can be caused by any of the items in the <xref:System.IO.Ports.SerialPinChange> enumeration."},{"content":"Because the operating system determines whether to raise this event or not, not all parity errors may be reported.","pos":[119,233]},{"content":"As part of the event, the new value of the pin is set.","pos":[234,288]}]}]},{"pos":[295,652],"content":"The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised when a <xref:System.IO.Ports.SerialPort> object enters the <xref:System.IO.Ports.SerialPort.BreakState%2A>, but not when the port exits the <xref:System.IO.Ports.SerialPort.BreakState%2A>. This behavior does not apply to other values in the <xref:System.IO.Ports.SerialPinChange> enumeration.","nodes":[{"content":"The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised when a <xref:System.IO.Ports.SerialPort> object enters the <xref:System.IO.Ports.SerialPort.BreakState%2A>, but not when the port exits the <xref:System.IO.Ports.SerialPort.BreakState%2A>. This behavior does not apply to other values in the <xref:System.IO.Ports.SerialPinChange> enumeration.","pos":[0,357],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph> event is raised when a <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object enters the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph>, but not when the port exits the <ph id=\"ph4\">&lt;xref:System.IO.Ports.SerialPort.BreakState%2A&gt;</ph>.","pos":[0,253],"source":"The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised when a <xref:System.IO.Ports.SerialPort> object enters the <xref:System.IO.Ports.SerialPort.BreakState%2A>, but not when the port exits the <xref:System.IO.Ports.SerialPort.BreakState%2A>."},{"content":"This behavior does not apply to other values in the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPinChange&gt;</ph> enumeration.","pos":[254,357],"source":" This behavior does not apply to other values in the <xref:System.IO.Ports.SerialPinChange> enumeration."}]}]},{"pos":[659,1010],"content":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.","nodes":[{"content":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.","pos":[0,351],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort.ErrorReceived&gt;</ph> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed.","pos":[0,305],"source":"<xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed."},{"content":"Only one event handler can execute at a time.","pos":[306,351]}]}]},{"pos":[1017,1539],"content":"The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised on a secondary thread. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.","nodes":[{"content":"The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised on a secondary thread. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.","pos":[0,522],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.PinChanged&gt;</ph> event is raised on a secondary thread.","pos":[0,87],"source":"The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised on a secondary thread."},{"content":"Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.","pos":[88,275]},{"content":"If it is necessary to modify elements in the main <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph>, post change requests back using <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, which will do the work on the proper thread.","pos":[276,522],"source":" If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread."}]}]},{"pos":[1546,1675],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[89897,91583],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the port for communications, including but not limited to all available COM ports.","nodes":[{"pos":[0,95],"content":"Gets or sets the port for communications, including but not limited to all available COM ports.","nodes":[{"content":"Gets or sets the port for communications, including but not limited to all available COM ports.","pos":[0,95]}]}],"pos":[92748,92844],"yaml":true},{"content":"A list of valid port names can be obtained using the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method.","nodes":[{"pos":[0,110],"content":"A list of valid port names can be obtained using the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method.","nodes":[{"content":"A list of valid port names can be obtained using the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.GetPortNames%2A&gt;</ph> method.","pos":[0,110],"source":"A list of valid port names can be obtained using the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method."}]}],"pos":[92855,92966],"yaml":true,"extradata":"MT"},{"content":"The communications port. The default is COM1.","nodes":[{"pos":[0,45],"content":"The communications port. The default is COM1.","nodes":[{"content":"The communications port. The default is COM1.","pos":[0,45],"nodes":[{"content":"The communications port.","pos":[0,24]},{"content":"The default is COM1.","pos":[25,45]}]}]}],"pos":[93980,94026],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.PortName\"></xref> property was set to a value with a length of zero.  \n  \n -or-  \n  \n The <xref href=\"System.IO.Ports.SerialPort.PortName\"></xref> property was set to a value that starts with \"\\\\\\\\\".  \n  \n -or-  \n  \n The port name was not valid.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.PortName\"&gt;&lt;/xref&gt;</ph> property was set to a value with a length of zero.","source":"The <xref href=\"System.IO.Ports.SerialPort.PortName\"></xref> property was set to a value with a length of zero."},{"pos":[118,122],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[129,242],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.PortName\"&gt;&lt;/xref&gt;</ph> property was set to a value that starts with \"<ph id=\"ph2\">\\\\</ph><ph id=\"ph3\">\\\\</ph>\".","source":"The <xref href=\"System.IO.Ports.SerialPort.PortName\"></xref> property was set to a value that starts with \"\\\\\\\\\"."},{"pos":[249,253],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[260,288],"content":"The port name was not valid.","nodes":[{"content":"The port name was not valid.","pos":[0,28]}]}],"pos":[94183,94492],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.PortName\"></xref> property was set to `null`.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.PortName\"&gt;&lt;/xref&gt;</ph> property was set to <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.IO.Ports.SerialPort.PortName\"></xref> property was set to `null`."}],"pos":[94594,94683],"yaml":true},{"content":"The specified port is open.","nodes":[{"pos":[0,27],"content":"The specified port is open.","nodes":[{"content":"The specified port is open.","pos":[0,27]}]}],"pos":[94793,94821],"yaml":true},{"content":"Reads a number of bytes from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer and writes those bytes into a byte array at the specified offset.","nodes":[{"pos":[0,159],"content":"Reads a number of bytes from the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> input buffer and writes those bytes into a byte array at the specified offset.","source":"Reads a number of bytes from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer and writes those bytes into a byte array at the specified offset."}],"pos":[95996,96156],"yaml":true},{"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \n  \n Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.  \n  \n The <xref:System.IO.Ports.SerialPort.Read%2A> method does not block other operations when the number of bytes read equals `count` but there are still unread bytes available on the serial port.","nodes":[{"pos":[0,228],"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","nodes":[{"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[0,228]}]},{"pos":[235,780],"content":"Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","nodes":[{"content":"Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","pos":[0,545],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.","pos":[0,231],"source":"Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.","pos":[233,545],"source":"  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class."}]}]},{"pos":[787,979],"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Read%2A&gt;</ph> method does not block other operations when the number of bytes read equals <ph id=\"ph2\">`count`</ph> but there are still unread bytes available on the serial port.","source":"The <xref:System.IO.Ports.SerialPort.Read%2A> method does not block other operations when the number of bytes read equals `count` but there are still unread bytes available on the serial port."}],"pos":[96167,97153],"yaml":true,"extradata":"MT"},{"content":"The byte array to write the input to.","nodes":[{"pos":[0,37],"content":"The byte array to write the input to.","nodes":[{"content":"The byte array to write the input to.","pos":[0,37]}]}],"pos":[97310,97348],"yaml":true},{"content":"The offset in <code>buffer</code> at which to write the bytes.","nodes":[{"pos":[0,62],"content":"The offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to write the bytes.","source":"The offset in <code>buffer</code> at which to write the bytes."}],"pos":[97409,97472],"yaml":true},{"content":"The maximum number of bytes to read. Fewer bytes are read if <code>count</code> is greater than the number of bytes in the input buffer.","nodes":[{"pos":[0,136],"content":"The maximum number of bytes to read. Fewer bytes are read if <code>count</code> is greater than the number of bytes in the input buffer.","nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]},{"content":"Fewer bytes are read if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than the number of bytes in the input buffer.","pos":[37,136],"source":" Fewer bytes are read if <code>count</code> is greater than the number of bytes in the input buffer."}]}],"pos":[97532,97669],"yaml":true},{"content":"The number of bytes read.","nodes":[{"pos":[0,25],"content":"The number of bytes read.","nodes":[{"content":"The number of bytes read.","pos":[0,25]}]}],"pos":[97725,97751],"yaml":true},{"content":"The buffer passed is `null`.","nodes":[{"pos":[0,28],"content":"The buffer passed is <ph id=\"ph1\">`null`</ph>.","source":"The buffer passed is `null`."}],"pos":[97912,97941],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[98051,98083],"yaml":true},{"content":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"pos":[0,192],"content":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters are outside a valid region of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">buffer</ph><ept id=\"p3\">&lt;/code&gt;</ept> being passed.","pos":[0,124],"source":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed."},{"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is less than zero.","pos":[125,192],"source":" Either <code>offset</code> or <code>count</code> is less than zero."}]}],"pos":[98197,98390],"yaml":true},{"content":"<code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the length of the <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>."}],"pos":[98484,98583],"yaml":true},{"content":"No bytes were available to read.","nodes":[{"pos":[0,32],"content":"No bytes were available to read.","nodes":[{"content":"No bytes were available to read.","pos":[0,32]}]}],"pos":[98675,98708],"yaml":true},{"content":"Reads a number of characters from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer and writes them into an array of characters at a given offset.","nodes":[{"pos":[0,161],"content":"Reads a number of characters from the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> input buffer and writes them into an array of characters at a given offset.","source":"Reads a number of characters from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer and writes them into an array of characters at a given offset."}],"pos":[99818,99980],"yaml":true},{"content":"Use this method for reading characters from the serial port.  \n  \n If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \n  \n Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many characters are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.  \n  \n The <xref:System.IO.Ports.SerialPort.Read%2A> method does not block other operations when the number of bytes read equals `count` but there are still unread bytes available on the serial port.","nodes":[{"pos":[0,60],"content":"Use this method for reading characters from the serial port.","nodes":[{"content":"Use this method for reading characters from the serial port.","pos":[0,60]}]},{"pos":[67,295],"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","nodes":[{"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[0,228]}]},{"pos":[302,862],"content":"Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many characters are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","nodes":[{"content":"Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many characters are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","pos":[0,560],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many characters are available to read.","pos":[0,236],"source":"Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many characters are available to read."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.","pos":[238,560],"source":"  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class."}]}]},{"pos":[869,1061],"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Read%2A&gt;</ph> method does not block other operations when the number of bytes read equals <ph id=\"ph2\">`count`</ph> but there are still unread bytes available on the serial port.","source":"The <xref:System.IO.Ports.SerialPort.Read%2A> method does not block other operations when the number of bytes read equals `count` but there are still unread bytes available on the serial port."}],"pos":[99991,101061],"yaml":true,"extradata":"MT"},{"content":"The character array to write the input to.","nodes":[{"pos":[0,42],"content":"The character array to write the input to.","nodes":[{"content":"The character array to write the input to.","pos":[0,42]}]}],"pos":[101218,101261],"yaml":true},{"content":"The offset in <code>buffer</code> at which to write the characters.","nodes":[{"pos":[0,67],"content":"The offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to write the characters.","source":"The offset in <code>buffer</code> at which to write the characters."}],"pos":[101322,101390],"yaml":true},{"content":"The maximum number of characters to read. Fewer characters are read if <code>count</code> is greater than the number of characters in the input buffer.","nodes":[{"pos":[0,151],"content":"The maximum number of characters to read. Fewer characters are read if <code>count</code> is greater than the number of characters in the input buffer.","nodes":[{"content":"The maximum number of characters to read.","pos":[0,41]},{"content":"Fewer characters are read if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than the number of characters in the input buffer.","pos":[42,151],"source":" Fewer characters are read if <code>count</code> is greater than the number of characters in the input buffer."}]}],"pos":[101450,101602],"yaml":true},{"content":"The number of characters read.","nodes":[{"pos":[0,30],"content":"The number of characters read.","nodes":[{"content":"The number of characters read.","pos":[0,30]}]}],"pos":[101658,101689],"yaml":true},{"content":"<code>offset</code> plus <code>count</code> is greater than the length of the buffer.  \n  \n \\- or -  \n  \n <code>count</code> is 1 and there is a surrogate character in the buffer.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the length of the buffer.","source":"<code>offset</code> plus <code>count</code> is greater than the length of the buffer."},{"pos":[92,99],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[106,179],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is 1 and there is a surrogate character in the buffer.","source":"<code>count</code> is 1 and there is a surrogate character in the buffer."}],"pos":[101842,102029],"yaml":true},{"content":"The <code>buffer</code> passed is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> passed is <ph id=\"ph2\">`null`</ph>.","source":"The <code>buffer</code> passed is `null`."}],"pos":[102131,102173],"yaml":true},{"content":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"pos":[0,192],"content":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters are outside a valid region of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">buffer</ph><ept id=\"p3\">&lt;/code&gt;</ept> being passed.","pos":[0,124],"source":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed."},{"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is less than zero.","pos":[125,192],"source":" Either <code>offset</code> or <code>count</code> is less than zero."}]}],"pos":[102287,102480],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[102590,102622],"yaml":true},{"content":"No characters were available to read.","nodes":[{"pos":[0,37],"content":"No characters were available to read.","nodes":[{"content":"No characters were available to read.","pos":[0,37]}]}],"pos":[102714,102752],"yaml":true},{"content":"Gets or sets the size of the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer.","nodes":[{"pos":[0,90],"content":"Gets or sets the size of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> input buffer.","source":"Gets or sets the size of the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer."}],"pos":[103735,103826],"yaml":true},{"content":"The <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property ignores any value smaller than 4096.  \n  \n Because the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property represents only the Windows-created buffer, it can return a smaller value than the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property, which represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer.","nodes":[{"pos":[0,101],"content":"The <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property ignores any value smaller than 4096.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph> property ignores any value smaller than 4096.","pos":[0,101],"source":"The <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property ignores any value smaller than 4096."}]},{"pos":[108,421],"content":"Because the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property represents only the Windows-created buffer, it can return a smaller value than the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property, which represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer.","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadBufferSize%2A&gt;</ph> property represents only the Windows-created buffer, it can return a smaller value than the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property, which represents both the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> buffer and the Windows-created buffer.","pos":[0,313],"source":"Because the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property represents only the Windows-created buffer, it can return a smaller value than the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property, which represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer."}]}],"pos":[103837,104263],"yaml":true,"extradata":"MT"},{"content":"The buffer size, in bytes. The default value is 4096; the maximum value is that of a positive int, or 2147483647.","nodes":[{"pos":[0,113],"content":"The buffer size, in bytes. The default value is 4096; the maximum value is that of a positive int, or 2147483647.","nodes":[{"content":"The buffer size, in bytes. The default value is 4096; the maximum value is that of a positive int, or 2147483647.","pos":[0,113],"nodes":[{"content":"The buffer size, in bytes.","pos":[0,26]},{"content":"The default value is 4096; the maximum value is that of a positive int, or 2147483647.","pos":[27,113]}]}]}],"pos":[104438,104552],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> value set is less than or equal to zero.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"&gt;&lt;/xref&gt;</ph> value set is less than or equal to zero.","source":"The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> value set is less than or equal to zero."}],"pos":[104735,104843],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> property was set while the stream was open.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"&gt;&lt;/xref&gt;</ph> property was set while the stream was open.","source":"The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> property was set while the stream was open."}],"pos":[104953,105064],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> property was set to an odd integer value.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"&gt;&lt;/xref&gt;</ph> property was set to an odd integer value.","source":"The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> property was set to an odd integer value."}],"pos":[105152,105261],"yaml":true},{"content":"Synchronously reads one byte from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer.","nodes":[{"pos":[0,99],"content":"Synchronously reads one byte from the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> input buffer.","source":"Synchronously reads one byte from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer."}],"pos":[106277,106377],"yaml":true},{"content":"This method reads one byte.  \n  \n Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \n  \n> [!NOTE]\n>  Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","nodes":[{"pos":[0,27],"content":"This method reads one byte.","nodes":[{"content":"This method reads one byte.","pos":[0,27]}]},{"pos":[34,512],"content":"Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","nodes":[{"content":"Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[0,478],"nodes":[{"content":"Use caution when using <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.ReadChar%2A&gt;</ph> together.","pos":[0,128],"source":"Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together."},{"content":"Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior.","pos":[129,249]},{"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[250,478]}]}]},{"pos":[520,1076],"content":"[!NOTE]\n Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","leadings":["","> "],"nodes":[{"content":" Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","pos":[8,554],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.","pos":[1,232],"source":" Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.","pos":[234,546],"source":"  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class."}]}]}],"pos":[106388,107472],"yaml":true,"extradata":"MT"},{"content":"The byte, cast to an <xref href=\"System.Int32\"></xref>, or -1 if the end of the stream has been read.","nodes":[{"pos":[0,101],"content":"The byte, cast to an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>, or -1 if the end of the stream has been read.","source":"The byte, cast to an <xref href=\"System.Int32\"></xref>, or -1 if the end of the stream has been read."}],"pos":[107594,107696],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[107869,107901],"yaml":true},{"content":"The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No byte was read.","nodes":[{"pos":[0,64],"content":"The operation did not complete before the time-out period ended.","nodes":[{"content":"The operation did not complete before the time-out period ended.","pos":[0,64]}]},{"pos":[71,78],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[85,102],"content":"No byte was read.","nodes":[{"content":"No byte was read.","pos":[0,17]}]}],"pos":[108023,108133],"yaml":true},{"content":"Synchronously reads one character from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer.","nodes":[{"pos":[0,104],"content":"Synchronously reads one character from the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> input buffer.","source":"Synchronously reads one character from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer."}],"pos":[109084,109189],"yaml":true},{"content":"This method reads one complete character based on the encoding.  \n  \n Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \n  \n> [!NOTE]\n>  Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","nodes":[{"pos":[0,63],"content":"This method reads one complete character based on the encoding.","nodes":[{"content":"This method reads one complete character based on the encoding.","pos":[0,63]}]},{"pos":[70,548],"content":"Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","nodes":[{"content":"Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[0,478],"nodes":[{"content":"Use caution when using <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadByte%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.ReadChar%2A&gt;</ph> together.","pos":[0,128],"source":"Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together."},{"content":"Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior.","pos":[129,249]},{"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[250,478]}]}]},{"pos":[556,1112],"content":"[!NOTE]\n Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","leadings":["","> "],"nodes":[{"content":" Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","pos":[8,554],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.","pos":[1,232],"source":" Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.","pos":[234,546],"source":"  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class."}]}]}],"pos":[109200,110320],"yaml":true,"extradata":"MT"},{"content":"The character that was read.","nodes":[{"pos":[0,28],"content":"The character that was read.","nodes":[{"content":"The character that was read.","pos":[0,28]}]}],"pos":[110442,110471],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[110644,110676],"yaml":true},{"content":"The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No character was available in the allotted time-out period.","nodes":[{"pos":[0,64],"content":"The operation did not complete before the time-out period ended.","nodes":[{"content":"The operation did not complete before the time-out period ended.","pos":[0,64]}]},{"pos":[71,78],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[85,144],"content":"No character was available in the allotted time-out period.","nodes":[{"content":"No character was available in the allotted time-out period.","pos":[0,59]}]}],"pos":[110798,110950],"yaml":true},{"content":"Reads all immediately available bytes, based on the encoding, in both the stream and the input buffer of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,164],"content":"Reads all immediately available bytes, based on the encoding, in both the stream and the input buffer of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Reads all immediately available bytes, based on the encoding, in both the stream and the input buffer of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[111925,112090],"yaml":true},{"content":"This method returns the contents of the stream and internal buffer of the <xref:System.IO.Ports.SerialPort> object as a string. This method does not use a time-out. Note that this method can leave trailing lead bytes in the internal buffer, which makes the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> value greater than zero.  \n  \n If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \n  \n> [!NOTE]\n>  The <xref:System.IO.Ports.SerialPort> class buffers data, but the stream object contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> property does not. Therefore, the <xref:System.IO.Ports.SerialPort> object and the stream object might differ on the number of bytes that are available to read. When bytes are buffered to the <xref:System.IO.Ports.SerialPort> object, the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","nodes":[{"pos":[0,330],"content":"This method returns the contents of the stream and internal buffer of the <xref:System.IO.Ports.SerialPort> object as a string. This method does not use a time-out. Note that this method can leave trailing lead bytes in the internal buffer, which makes the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> value greater than zero.","nodes":[{"content":"This method returns the contents of the stream and internal buffer of the <xref:System.IO.Ports.SerialPort> object as a string. This method does not use a time-out. Note that this method can leave trailing lead bytes in the internal buffer, which makes the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> value greater than zero.","pos":[0,330],"nodes":[{"content":"This method returns the contents of the stream and internal buffer of the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object as a string.","pos":[0,127],"source":"This method returns the contents of the stream and internal buffer of the <xref:System.IO.Ports.SerialPort> object as a string."},{"content":"This method does not use a time-out.","pos":[128,164]},{"content":"Note that this method can leave trailing lead bytes in the internal buffer, which makes the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> value greater than zero.","pos":[165,330],"source":" Note that this method can leave trailing lead bytes in the internal buffer, which makes the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> value greater than zero."}]}]},{"pos":[337,565],"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","nodes":[{"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[0,228]}]},{"pos":[573,1218],"content":"[!NOTE]\n The <xref:System.IO.Ports.SerialPort> class buffers data, but the stream object contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> property does not. Therefore, the <xref:System.IO.Ports.SerialPort> object and the stream object might differ on the number of bytes that are available to read. When bytes are buffered to the <xref:System.IO.Ports.SerialPort> object, the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","leadings":["","> "],"nodes":[{"content":" The <xref:System.IO.Ports.SerialPort> class buffers data, but the stream object contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> property does not. Therefore, the <xref:System.IO.Ports.SerialPort> object and the stream object might differ on the number of bytes that are available to read. When bytes are buffered to the <xref:System.IO.Ports.SerialPort> object, the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","pos":[8,643],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, but the stream object contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName&gt;</ph> property does not.","pos":[1,189],"source":" The <xref:System.IO.Ports.SerialPort> class buffers data, but the stream object contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> property does not."},{"content":"Therefore, the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object and the stream object might differ on the number of bytes that are available to read.","pos":[190,331],"source":" Therefore, the <xref:System.IO.Ports.SerialPort> object and the stream object might differ on the number of bytes that are available to read."},{"content":"When bytes are buffered to the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object, the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property.","pos":[332,635],"source":" When bytes are buffered to the <xref:System.IO.Ports.SerialPort> object, the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property."}]}]}],"pos":[112101,113327],"yaml":true,"extradata":"MT"},{"content":"The contents of the stream and the input buffer of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,110],"content":"The contents of the stream and the input buffer of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"The contents of the stream and the input buffer of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[113457,113568],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[113745,113777],"yaml":true},{"content":"Reads up to the <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value in the input buffer.","nodes":[{"pos":[0,98],"content":"Reads up to the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.NewLine\"&gt;&lt;/xref&gt;</ph> value in the input buffer.","source":"Reads up to the <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value in the input buffer."}],"pos":[114728,114827],"yaml":true},{"content":"Note that while this method does not return the <xref:System.IO.Ports.SerialPort.NewLine%2A> value, the <xref:System.IO.Ports.SerialPort.NewLine%2A> value is removed from the input buffer.  \n  \n By default, the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method will block until a line is received. If this behavior is undesirable, set the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property to any non-zero value to force the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method to throw a <xref:System.TimeoutException> if a line is not available on the port.  \n  \n If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \n  \n> [!NOTE]\n>  Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","nodes":[{"pos":[0,188],"content":"Note that while this method does not return the <xref:System.IO.Ports.SerialPort.NewLine%2A> value, the <xref:System.IO.Ports.SerialPort.NewLine%2A> value is removed from the input buffer.","nodes":[{"content":"Note that while this method does not return the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph> value, the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph> value is removed from the input buffer.","pos":[0,188],"source":"Note that while this method does not return the <xref:System.IO.Ports.SerialPort.NewLine%2A> value, the <xref:System.IO.Ports.SerialPort.NewLine%2A> value is removed from the input buffer."}]},{"pos":[195,569],"content":"By default, the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method will block until a line is received. If this behavior is undesirable, set the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property to any non-zero value to force the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method to throw a <xref:System.TimeoutException> if a line is not available on the port.","nodes":[{"content":"By default, the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method will block until a line is received. If this behavior is undesirable, set the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property to any non-zero value to force the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method to throw a <xref:System.TimeoutException> if a line is not available on the port.","pos":[0,374],"nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph> method will block until a line is received.","pos":[0,105],"source":"By default, the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method will block until a line is received."},{"content":"If this behavior is undesirable, set the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph> property to any non-zero value to force the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.ReadLine%2A&gt;</ph> method to throw a <ph id=\"ph3\">&lt;xref:System.TimeoutException&gt;</ph> if a line is not available on the port.","pos":[106,374],"source":" If this behavior is undesirable, set the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property to any non-zero value to force the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method to throw a <xref:System.TimeoutException> if a line is not available on the port."}]}]},{"pos":[576,804],"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","nodes":[{"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[0,228]}]},{"pos":[812,1368],"content":"[!NOTE]\n Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","leadings":["","> "],"nodes":[{"content":" Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","pos":[8,554],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.","pos":[1,232],"source":" Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.","pos":[234,546],"source":"  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class."}]}]}],"pos":[114838,116216],"yaml":true,"extradata":"MT"},{"content":"The contents of the input buffer up to the first occurrence of a <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value.","nodes":[{"pos":[0,127],"content":"The contents of the input buffer up to the first occurrence of a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.NewLine\"&gt;&lt;/xref&gt;</ph> value.","source":"The contents of the input buffer up to the first occurrence of a <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value."}],"pos":[117089,117217],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[117390,117422],"yaml":true},{"content":"The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No bytes were read.","nodes":[{"pos":[0,64],"content":"The operation did not complete before the time-out period ended.","nodes":[{"content":"The operation did not complete before the time-out period ended.","pos":[0,64]}]},{"pos":[71,78],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[85,104],"content":"No bytes were read.","nodes":[{"content":"No bytes were read.","pos":[0,19]}]}],"pos":[117514,117626],"yaml":true},{"content":"Gets or sets the number of milliseconds before a time-out occurs when a read operation does not finish.","nodes":[{"pos":[0,103],"content":"Gets or sets the number of milliseconds before a time-out occurs when a read operation does not finish.","nodes":[{"content":"Gets or sets the number of milliseconds before a time-out occurs when a read operation does not finish.","pos":[0,103]}]}],"pos":[118591,118695],"yaml":true},{"content":"The read time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.  \n  \n> [!NOTE]\n>  Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  \n  \n This property does not affect the <xref:System.IO.Stream.BeginRead%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","nodes":[{"pos":[0,356],"content":"The read time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.","nodes":[{"content":"The read time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.","pos":[0,356],"nodes":[{"content":"The read time-out value was originally set at 500 milliseconds in the Win32 Communications API.","pos":[0,95]},{"content":"This property allows you to set this value.","pos":[96,139]},{"content":"The time-out can be set to any value greater than zero, or set to <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>, in which case no time-out occurs.","pos":[140,290],"source":" The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph> is the default.","pos":[291,356],"source":" <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default."}]}]},{"pos":[364,659],"content":"[!NOTE]\n Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.","leadings":["","> "],"nodes":[{"content":" Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.","pos":[8,293],"nodes":[{"content":"Users of the unmanaged <ph id=\"ph1\">`COMMTIMEOUTS`</ph> structure might expect to set the time-out value to zero to suppress time-outs.","pos":[1,118],"source":" Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs."},{"content":"To suppress time-outs with the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.ReadTimeout%2A&gt;</ph> property, however, you must specify <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>.","pos":[119,285],"source":" To suppress time-outs with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>."}]}]},{"pos":[666,831],"content":"This property does not affect the <xref:System.IO.Stream.BeginRead%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","nodes":[{"content":"This property does not affect the <ph id=\"ph1\">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> method of the stream returned by the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property.","pos":[0,165],"source":"This property does not affect the <xref:System.IO.Stream.BeginRead%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property."}]}],"pos":[118706,119545],"yaml":true,"extradata":"MT"},{"content":"The number of milliseconds before a time-out occurs when a read operation does not finish.","nodes":[{"pos":[0,90],"content":"The number of milliseconds before a time-out occurs when a read operation does not finish.","nodes":[{"content":"The number of milliseconds before a time-out occurs when a read operation does not finish.","pos":[0,90]}]}],"pos":[120558,120649],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[120803,121038],"yaml":true},{"content":"The read time-out value is less than zero and not equal to <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.","nodes":[{"pos":[0,123],"content":"The read time-out value is less than zero and not equal to <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"&gt;&lt;/xref&gt;</ph>.","source":"The read time-out value is less than zero and not equal to <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>."}],"pos":[121152,121276],"yaml":true},{"content":"Reads a string up to the specified <code>value</code> in the input buffer.","nodes":[{"pos":[0,74],"content":"Reads a string up to the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the input buffer.","source":"Reads a string up to the specified <code>value</code> in the input buffer."}],"pos":[122343,122418],"yaml":true},{"content":"This method reads a string up to the specified `value`. While the returned string does not include the `value`, the `value` is removed from the input buffer.  \n  \n If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \n  \n> [!NOTE]\n>  Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","nodes":[{"pos":[0,157],"content":"This method reads a string up to the specified `value`. While the returned string does not include the `value`, the `value` is removed from the input buffer.","nodes":[{"content":"This method reads a string up to the specified <ph id=\"ph1\">`value`</ph>.","pos":[0,55],"source":"This method reads a string up to the specified `value`."},{"content":"While the returned string does not include the <ph id=\"ph1\">`value`</ph>, the <ph id=\"ph2\">`value`</ph> is removed from the input buffer.","pos":[56,157],"source":" While the returned string does not include the `value`, the `value` is removed from the input buffer."}]},{"pos":[164,392],"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","nodes":[{"content":"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.","pos":[0,228]}]},{"pos":[400,956],"content":"[!NOTE]\n Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","leadings":["","> "],"nodes":[{"content":" Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.","pos":[8,554],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class buffers data, and the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property does not, the two might conflict about how many bytes are available to read.","pos":[1,232],"source":" Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.BytesToRead%2A&gt;</ph> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property because they have been buffered to the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> class.","pos":[234,546],"source":"  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class."}]}]}],"pos":[122429,123393],"yaml":true,"extradata":"MT"},{"content":"A value that indicates where the read operation stops.","nodes":[{"pos":[0,54],"content":"A value that indicates where the read operation stops.","nodes":[{"content":"A value that indicates where the read operation stops.","pos":[0,54]}]}],"pos":[123530,123585],"yaml":true},{"content":"The contents of the input buffer up to the specified <code>value</code>.","nodes":[{"pos":[0,72],"content":"The contents of the input buffer up to the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The contents of the input buffer up to the specified <code>value</code>."}],"pos":[123642,123715],"yaml":true},{"content":"The length of the <code>value</code> parameter is 0.","nodes":[{"pos":[0,52],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>value</code> parameter is 0."}],"pos":[123870,123923],"yaml":true},{"content":"The <code>value</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>value</code> parameter is `null`."}],"pos":[124025,124069],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[124179,124211],"yaml":true},{"content":"The operation did not complete before the time-out period ended.","nodes":[{"pos":[0,64],"content":"The operation did not complete before the time-out period ended.","nodes":[{"content":"The operation did not complete before the time-out period ended.","pos":[0,64]}]}],"pos":[124303,124368],"yaml":true},{"content":"Gets or sets the number of bytes in the internal input buffer before a <xref href=\"System.IO.Ports.SerialPort.DataReceived\"></xref> event occurs.","nodes":[{"pos":[0,145],"content":"Gets or sets the number of bytes in the internal input buffer before a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.DataReceived\"&gt;&lt;/xref&gt;</ph> event occurs.","source":"Gets or sets the number of bytes in the internal input buffer before a <xref href=\"System.IO.Ports.SerialPort.DataReceived\"></xref> event occurs."}],"pos":[125399,125545],"yaml":true},{"content":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an <xref:System.IO.Ports.SerialData.Eof> character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property.","nodes":[{"pos":[0,292],"content":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an <xref:System.IO.Ports.SerialData.Eof> character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.DataReceived&gt;</ph> event is also raised if an <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialData.Eof&gt;</ph> character is received, regardless of the number of bytes in the internal input buffer and the value of the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A&gt;</ph> property.","pos":[0,292],"source":"The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an <xref:System.IO.Ports.SerialData.Eof> character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property."}]}],"pos":[125556,125849],"yaml":true,"extradata":"MT"},{"content":"The number of bytes in the internal input buffer before a <xref href=\"System.IO.Ports.SerialPort.DataReceived\"></xref> event is fired. The default is 1.","nodes":[{"pos":[0,152],"content":"The number of bytes in the internal input buffer before a <xref href=\"System.IO.Ports.SerialPort.DataReceived\"></xref> event is fired. The default is 1.","nodes":[{"content":"The number of bytes in the internal input buffer before a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.DataReceived\"&gt;&lt;/xref&gt;</ph> event is fired.","pos":[0,134],"source":"The number of bytes in the internal input buffer before a <xref href=\"System.IO.Ports.SerialPort.DataReceived\"></xref> event is fired."},{"content":"The default is 1.","pos":[135,152]}]}],"pos":[126076,126229],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.ReceivedBytesThreshold\"></xref> value is less than or equal to zero.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.ReceivedBytesThreshold\"&gt;&lt;/xref&gt;</ph> value is less than or equal to zero.","source":"The <xref href=\"System.IO.Ports.SerialPort.ReceivedBytesThreshold\"></xref> value is less than or equal to zero."}],"pos":[126420,126532],"yaml":true},{"content":"Gets or sets a value indicating whether the Request to Send (RTS) signal is enabled during serial communication.","nodes":[{"pos":[0,112],"content":"Gets or sets a value indicating whether the Request to Send (RTS) signal is enabled during serial communication.","nodes":[{"content":"Gets or sets a value indicating whether the Request to Send (RTS) signal is enabled during serial communication.","pos":[0,112]}]}],"pos":[127576,127689],"yaml":true},{"content":"The Request to Transmit (RTS) signal is typically used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.","nodes":[{"pos":[0,119],"content":"The Request to Transmit (RTS) signal is typically used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.","nodes":[{"content":"The Request to Transmit (RTS) signal is typically used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.","pos":[0,119]}]}],"pos":[127700,127820],"yaml":true,"extradata":"MT"},{"content":"`true` to enable Request to Transmit (RTS); otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,87],"content":"`true` to enable Request to Transmit (RTS); otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to enable Request to Transmit (RTS); otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` to enable Request to Transmit (RTS); otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[64,87],"source":" The default is `false`."}]}],"pos":[127993,128083],"yaml":true},{"content":"The value of the <xref href=\"System.IO.Ports.SerialPort.RtsEnable\"></xref> property was set or retrieved while the <xref href=\"System.IO.Ports.SerialPort.Handshake\"></xref> property is set to the <xref href=\"System.IO.Ports.Handshake.RequestToSend\"></xref> value or the <xref href=\"System.IO.Ports.Handshake.RequestToSendXOnXOff\"></xref> value.","nodes":[{"pos":[0,344],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.RtsEnable\"&gt;&lt;/xref&gt;</ph> property was set or retrieved while the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.Handshake\"&gt;&lt;/xref&gt;</ph> property is set to the <ph id=\"ph3\">&lt;xref href=\"System.IO.Ports.Handshake.RequestToSend\"&gt;&lt;/xref&gt;</ph> value or the <ph id=\"ph4\">&lt;xref href=\"System.IO.Ports.Handshake.RequestToSendXOnXOff\"&gt;&lt;/xref&gt;</ph> value.","source":"The value of the <xref href=\"System.IO.Ports.SerialPort.RtsEnable\"></xref> property was set or retrieved while the <xref href=\"System.IO.Ports.SerialPort.Handshake\"></xref> property is set to the <xref href=\"System.IO.Ports.Handshake.RequestToSend\"></xref> value or the <xref href=\"System.IO.Ports.Handshake.RequestToSendXOnXOff\"></xref> value."}],"pos":[128257,128602],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[128690,128925],"yaml":true},{"content":"Gets or sets the standard number of stopbits per byte.","nodes":[{"pos":[0,54],"content":"Gets or sets the standard number of stopbits per byte.","nodes":[{"content":"Gets or sets the standard number of stopbits per byte.","pos":[0,54]}]}],"pos":[129937,129992],"yaml":true},{"content":"The default value for <xref:System.IO.Ports.SerialPort.StopBits%2A> is <xref:System.IO.Ports.StopBits.One>.  \n  \n The <xref:System.IO.Ports.StopBits?displayProperty=fullName> value is not supported.","nodes":[{"pos":[0,107],"content":"The default value for <xref:System.IO.Ports.SerialPort.StopBits%2A> is <xref:System.IO.Ports.StopBits.One>.","nodes":[{"content":"The default value for <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.StopBits%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.IO.Ports.StopBits.One&gt;</ph>.","pos":[0,107],"source":"The default value for <xref:System.IO.Ports.SerialPort.StopBits%2A> is <xref:System.IO.Ports.StopBits.One>."}]},{"pos":[114,198],"content":"The <xref:System.IO.Ports.StopBits?displayProperty=fullName> value is not supported.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.StopBits?displayProperty=fullName&gt;</ph> value is not supported.","pos":[0,84],"source":"The <xref:System.IO.Ports.StopBits?displayProperty=fullName> value is not supported."}]}],"pos":[130003,130206],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.IO.Ports.StopBits\"></xref> values.","nodes":[{"pos":[0,64],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.StopBits\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.IO.Ports.StopBits\"></xref> values."}],"pos":[131799,131864],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.StopBits\"></xref> value is  <xref href=\"System.IO.Ports.StopBits.None\"></xref>.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.StopBits\"&gt;&lt;/xref&gt;</ph> value is  <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.StopBits.None\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IO.Ports.SerialPort.StopBits\"></xref> value is  <xref href=\"System.IO.Ports.StopBits.None\"></xref>."}],"pos":[132041,132164],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[132252,132487],"yaml":true},{"content":"Writes the specified string to the serial port.","nodes":[{"pos":[0,47],"content":"Writes the specified string to the serial port.","nodes":[{"content":"Writes the specified string to the serial port.","pos":[0,47]}]}],"pos":[133548,133596],"yaml":true},{"content":"Use this method when you want to write a string as output to a serial port.  \n  \n If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.  \n  \n By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","nodes":[{"pos":[0,75],"content":"Use this method when you want to write a string as output to a serial port.","nodes":[{"content":"Use this method when you want to write a string as output to a serial port.","pos":[0,75]}]},{"pos":[82,403],"content":"If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.","nodes":[{"content":"If there are too many bytes in the output buffer and <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph> then the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object may raise a <ph id=\"ph4\">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> while it waits for the device to be ready to accept more data.","pos":[0,321],"source":"If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data."}]},{"pos":[410,819],"content":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","nodes":[{"content":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","pos":[0,409],"nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> uses <ph id=\"ph2\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode the characters.","pos":[0,109],"source":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters."},{"content":"<ph id=\"ph1\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> encodes all characters greater than 127 as (char)63 or '?'.","pos":[110,202],"source":" <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'."},{"content":"To support additional characters in that range, set <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.","pos":[203,409],"source":" To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>."}]}]}],"pos":[133607,134433],"yaml":true,"extradata":"MT"},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[134737,134769],"yaml":true},{"content":"<code>str</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;str&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>str</code> is `null`."}],"pos":[134871,134899],"yaml":true},{"content":"The operation did not complete before the time-out period ended.","nodes":[{"pos":[0,64],"content":"The operation did not complete before the time-out period ended.","nodes":[{"content":"The operation did not complete before the time-out period ended.","pos":[0,64]}]}],"pos":[135021,135086],"yaml":true},{"content":"Writes a specified number of bytes to the serial port using data from a buffer.","nodes":[{"pos":[0,79],"content":"Writes a specified number of bytes to the serial port using data from a buffer.","nodes":[{"content":"Writes a specified number of bytes to the serial port using data from a buffer.","pos":[0,79]}]}],"pos":[136202,136282],"yaml":true},{"content":"Use this method when you want to write to a byte buffer to create output to a serial port.  \n  \n If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.  \n  \n By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","nodes":[{"pos":[0,90],"content":"Use this method when you want to write to a byte buffer to create output to a serial port.","nodes":[{"content":"Use this method when you want to write to a byte buffer to create output to a serial port.","pos":[0,90]}]},{"pos":[97,418],"content":"If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.","nodes":[{"content":"If there are too many bytes in the output buffer and <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph> then the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object may raise a <ph id=\"ph4\">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> while it waits for the device to be ready to accept more data.","pos":[0,321],"source":"If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data."}]},{"pos":[425,834],"content":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","nodes":[{"content":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","pos":[0,409],"nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> uses <ph id=\"ph2\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode the characters.","pos":[0,109],"source":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters."},{"content":"<ph id=\"ph1\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> encodes all characters greater than 127 as (char)63 or '?'.","pos":[110,202],"source":" <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'."},{"content":"To support additional characters in that range, set <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.","pos":[203,409],"source":" To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>."}]}]}],"pos":[136293,137134],"yaml":true,"extradata":"MT"},{"content":"The byte array that contains the data to write to the port.","nodes":[{"pos":[0,59],"content":"The byte array that contains the data to write to the port.","nodes":[{"content":"The byte array that contains the data to write to the port.","pos":[0,59]}]}],"pos":[137293,137353],"yaml":true},{"content":"The zero-based byte offset in the <code>buffer</code> parameter at which to begin copying bytes to the port.","nodes":[{"pos":[0,108],"content":"The zero-based byte offset in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter at which to begin copying bytes to the port.","source":"The zero-based byte offset in the <code>buffer</code> parameter at which to begin copying bytes to the port."}],"pos":[137414,137523],"yaml":true},{"content":"The number of bytes to write.","nodes":[{"pos":[0,29],"content":"The number of bytes to write.","nodes":[{"content":"The number of bytes to write.","pos":[0,29]}]}],"pos":[137583,137613],"yaml":true},{"content":"The <code>buffer</code> passed is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> passed is <ph id=\"ph2\">`null`</ph>.","source":"The <code>buffer</code> passed is `null`."}],"pos":[137775,137817],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[137927,137959],"yaml":true},{"content":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"pos":[0,192],"content":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters are outside a valid region of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">buffer</ph><ept id=\"p3\">&lt;/code&gt;</ept> being passed.","pos":[0,124],"source":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed."},{"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is less than zero.","pos":[125,192],"source":" Either <code>offset</code> or <code>count</code> is less than zero."}]}],"pos":[138073,138266],"yaml":true},{"content":"<code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the length of the <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>."}],"pos":[138360,138459],"yaml":true},{"content":"The operation did not complete before the time-out period ended.","nodes":[{"pos":[0,64],"content":"The operation did not complete before the time-out period ended.","nodes":[{"content":"The operation did not complete before the time-out period ended.","pos":[0,64]}]}],"pos":[138581,138646],"yaml":true},{"content":"Writes a specified number of characters to the serial port using data from a buffer.","nodes":[{"pos":[0,84],"content":"Writes a specified number of characters to the serial port using data from a buffer.","nodes":[{"content":"Writes a specified number of characters to the serial port using data from a buffer.","pos":[0,84]}]}],"pos":[139762,139847],"yaml":true},{"content":"Use this method when you want to write to a character buffer to create output to a serial port.  \n  \n If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.  \n  \n By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","nodes":[{"pos":[0,95],"content":"Use this method when you want to write to a character buffer to create output to a serial port.","nodes":[{"content":"Use this method when you want to write to a character buffer to create output to a serial port.","pos":[0,95]}]},{"pos":[102,423],"content":"If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.","nodes":[{"content":"If there are too many bytes in the output buffer and <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph> then the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object may raise a <ph id=\"ph4\">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> while it waits for the device to be ready to accept more data.","pos":[0,321],"source":"If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data."}]},{"pos":[430,839],"content":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","nodes":[{"content":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.","pos":[0,409],"nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> uses <ph id=\"ph2\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode the characters.","pos":[0,109],"source":"By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters."},{"content":"<ph id=\"ph1\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> encodes all characters greater than 127 as (char)63 or '?'.","pos":[110,202],"source":" <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'."},{"content":"To support additional characters in that range, set <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Encoding%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Text.UTF32Encoding&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.","pos":[203,409],"source":" To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>."}]}]}],"pos":[139858,140704],"yaml":true,"extradata":"MT"},{"content":"The character array that contains the data to write to the port.","nodes":[{"pos":[0,64],"content":"The character array that contains the data to write to the port.","nodes":[{"content":"The character array that contains the data to write to the port.","pos":[0,64]}]}],"pos":[140863,140928],"yaml":true},{"content":"The zero-based byte offset in the <code>buffer</code> parameter at which to begin copying bytes to the port.","nodes":[{"pos":[0,108],"content":"The zero-based byte offset in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter at which to begin copying bytes to the port.","source":"The zero-based byte offset in the <code>buffer</code> parameter at which to begin copying bytes to the port."}],"pos":[140989,141098],"yaml":true},{"content":"The number of characters to write.","nodes":[{"pos":[0,34],"content":"The number of characters to write.","nodes":[{"content":"The number of characters to write.","pos":[0,34]}]}],"pos":[141158,141193],"yaml":true},{"content":"The <code>buffer</code> passed is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> passed is <ph id=\"ph2\">`null`</ph>.","source":"The <code>buffer</code> passed is `null`."}],"pos":[141355,141397],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[141507,141539],"yaml":true},{"content":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"pos":[0,192],"content":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.","nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters are outside a valid region of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">buffer</ph><ept id=\"p3\">&lt;/code&gt;</ept> being passed.","pos":[0,124],"source":"The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed."},{"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is less than zero.","pos":[125,192],"source":" Either <code>offset</code> or <code>count</code> is less than zero."}]}],"pos":[141653,141846],"yaml":true},{"content":"<code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the length of the <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>."}],"pos":[141940,142039],"yaml":true},{"content":"The operation did not complete before the time-out period ended.","nodes":[{"pos":[0,64],"content":"The operation did not complete before the time-out period ended.","nodes":[{"content":"The operation did not complete before the time-out period ended.","pos":[0,64]}]}],"pos":[142161,142226],"yaml":true},{"content":"Gets or sets the size of the serial port output buffer.","nodes":[{"pos":[0,55],"content":"Gets or sets the size of the serial port output buffer.","nodes":[{"content":"Gets or sets the size of the serial port output buffer.","pos":[0,55]}]}],"pos":[143215,143271],"yaml":true},{"content":"The <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> property ignores any value smaller than 2048.","nodes":[{"pos":[0,102],"content":"The <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> property ignores any value smaller than 2048.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.WriteBufferSize%2A&gt;</ph> property ignores any value smaller than 2048.","pos":[0,102],"source":"The <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> property ignores any value smaller than 2048."}]}],"pos":[143282,143385],"yaml":true,"extradata":"MT"},{"content":"The size of the output buffer. The default is 2048.","nodes":[{"pos":[0,51],"content":"The size of the output buffer. The default is 2048.","nodes":[{"content":"The size of the output buffer. The default is 2048.","pos":[0,51],"nodes":[{"content":"The size of the output buffer.","pos":[0,30]},{"content":"The default is 2048.","pos":[31,51]}]}]}],"pos":[143561,143613],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> value is less than or equal to zero.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"&gt;&lt;/xref&gt;</ph> value is less than or equal to zero.","source":"The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> value is less than or equal to zero."}],"pos":[143797,143902],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> property was set while the stream was open.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"&gt;&lt;/xref&gt;</ph> property was set while the stream was open.","source":"The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> property was set while the stream was open."}],"pos":[144012,144124],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> property was set to an odd integer value.","nodes":[{"pos":[0,109],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"&gt;&lt;/xref&gt;</ph> property was set to an odd integer value.","source":"The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> property was set to an odd integer value."}],"pos":[144212,144322],"yaml":true},{"content":"Writes the specified string and the <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value to the output buffer.","nodes":[{"pos":[0,119],"content":"Writes the specified string and the <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.NewLine\"&gt;&lt;/xref&gt;</ph> value to the output buffer.","source":"Writes the specified string and the <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value to the output buffer."}],"pos":[145407,145527],"yaml":true},{"content":"If there are too many bytes in the input buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.  \n  \n The written output includes the <xref:System.IO.Ports.SerialPort.NewLine%2A> string.","nodes":[{"pos":[0,320],"content":"If there are too many bytes in the input buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.","nodes":[{"content":"If there are too many bytes in the input buffer and <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Handshake%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.IO.Ports.Handshake.XOnXOff&gt;</ph> then the <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object may raise a <ph id=\"ph4\">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> while it waits for the device to be ready to accept more data.","pos":[0,320],"source":"If there are too many bytes in the input buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data."}]},{"pos":[327,411],"content":"The written output includes the <xref:System.IO.Ports.SerialPort.NewLine%2A> string.","nodes":[{"content":"The written output includes the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.NewLine%2A&gt;</ph> string.","pos":[0,84],"source":"The written output includes the <xref:System.IO.Ports.SerialPort.NewLine%2A> string."}]}],"pos":[145538,145954],"yaml":true,"extradata":"MT"},{"content":"The <code>str</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">str</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>str</code> parameter is `null`."}],"pos":[147005,147047],"yaml":true},{"content":"The specified port is not open.","nodes":[{"pos":[0,31],"content":"The specified port is not open.","nodes":[{"content":"The specified port is not open.","pos":[0,31]}]}],"pos":[147157,147189],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.WriteLine(System.String)\"></xref> method could not write to the stream.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.WriteLine(System.String)\"&gt;&lt;/xref&gt;</ph> method could not write to the stream.","source":"The <xref href=\"System.IO.Ports.SerialPort.WriteLine(System.String)\"></xref> method could not write to the stream."}],"pos":[147281,147396],"yaml":true},{"content":"Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.","nodes":[{"pos":[0,104],"content":"Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.","nodes":[{"content":"Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.","pos":[0,104]}]}],"pos":[148367,148472],"yaml":true},{"content":"The write time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.  \n  \n> [!NOTE]\n>  Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  \n  \n This property does not affect the <xref:System.IO.Stream.BeginWrite%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","nodes":[{"pos":[0,357],"content":"The write time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.","nodes":[{"content":"The write time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.","pos":[0,357],"nodes":[{"content":"The write time-out value was originally set at 500 milliseconds in the Win32 Communications API.","pos":[0,96]},{"content":"This property allows you to set this value.","pos":[97,140]},{"content":"The time-out can be set to any value greater than zero, or set to <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>, in which case no time-out occurs.","pos":[141,291],"source":" The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph> is the default.","pos":[292,357],"source":" <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default."}]}]},{"pos":[365,661],"content":"[!NOTE]\n Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.","leadings":["","> "],"nodes":[{"content":" Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.","pos":[8,294],"nodes":[{"content":"Users of the unmanaged <ph id=\"ph1\">`COMMTIMEOUTS`</ph> structure might expect to set the time-out value to zero to suppress time-outs.","pos":[1,118],"source":" Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs."},{"content":"To suppress time-outs with the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.WriteTimeout%2A&gt;</ph> property, however, you must specify <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.InfiniteTimeout&gt;</ph>.","pos":[119,286],"source":" To suppress time-outs with the <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>."}]}]},{"pos":[668,834],"content":"This property does not affect the <xref:System.IO.Stream.BeginWrite%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.","nodes":[{"content":"This property does not affect the <ph id=\"ph1\">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph> method of the stream returned by the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort.BaseStream%2A&gt;</ph> property.","pos":[0,166],"source":"This property does not affect the <xref:System.IO.Stream.BeginWrite%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property."}]}],"pos":[148483,149325],"yaml":true,"extradata":"MT"},{"content":"The number of milliseconds before a time-out occurs. The default is <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.","nodes":[{"pos":[0,132],"content":"The number of milliseconds before a time-out occurs. The default is <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.","nodes":[{"content":"The number of milliseconds before a time-out occurs.","pos":[0,52]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"&gt;&lt;/xref&gt;</ph>.","pos":[53,132],"source":" The default is <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>."}]}],"pos":[150339,150472],"yaml":true},{"content":"The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"pos":[0,32],"content":"The port is in an invalid state.","nodes":[{"content":"The port is in an invalid state.","pos":[0,32]}]},{"pos":[39,46],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[53,225],"content":"An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid.","nodes":[{"content":"An attempt to set the state of the underlying port failed.","pos":[0,58]},{"content":"For example, the parameters passed from this <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object were invalid.","pos":[59,172],"source":" For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."}]}],"pos":[150627,150862],"yaml":true},{"content":"The <xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"></xref> value is less than zero and not equal to <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.","nodes":[{"pos":[0,170],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"&gt;&lt;/xref&gt;</ph> value is less than zero and not equal to <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"></xref> value is less than zero and not equal to <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>."}],"pos":[150976,151147],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Ports.SerialPort\n  commentId: T:System.IO.Ports.SerialPort\n  id: SerialPort\n  children:\n  - System.IO.Ports.SerialPort.#ctor\n  - System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)\n  - System.IO.Ports.SerialPort.#ctor(System.String)\n  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)\n  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)\n  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  - System.IO.Ports.SerialPort.BaseStream\n  - System.IO.Ports.SerialPort.BaudRate\n  - System.IO.Ports.SerialPort.BreakState\n  - System.IO.Ports.SerialPort.BytesToRead\n  - System.IO.Ports.SerialPort.BytesToWrite\n  - System.IO.Ports.SerialPort.CDHolding\n  - System.IO.Ports.SerialPort.Close\n  - System.IO.Ports.SerialPort.CtsHolding\n  - System.IO.Ports.SerialPort.DataBits\n  - System.IO.Ports.SerialPort.DataReceived\n  - System.IO.Ports.SerialPort.DiscardInBuffer\n  - System.IO.Ports.SerialPort.DiscardNull\n  - System.IO.Ports.SerialPort.DiscardOutBuffer\n  - System.IO.Ports.SerialPort.Dispose(System.Boolean)\n  - System.IO.Ports.SerialPort.DsrHolding\n  - System.IO.Ports.SerialPort.DtrEnable\n  - System.IO.Ports.SerialPort.Encoding\n  - System.IO.Ports.SerialPort.ErrorReceived\n  - System.IO.Ports.SerialPort.GetPortNames\n  - System.IO.Ports.SerialPort.Handshake\n  - System.IO.Ports.SerialPort.InfiniteTimeout\n  - System.IO.Ports.SerialPort.IsOpen\n  - System.IO.Ports.SerialPort.NewLine\n  - System.IO.Ports.SerialPort.Open\n  - System.IO.Ports.SerialPort.Parity\n  - System.IO.Ports.SerialPort.ParityReplace\n  - System.IO.Ports.SerialPort.PinChanged\n  - System.IO.Ports.SerialPort.PortName\n  - System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)\n  - System.IO.Ports.SerialPort.ReadBufferSize\n  - System.IO.Ports.SerialPort.ReadByte\n  - System.IO.Ports.SerialPort.ReadChar\n  - System.IO.Ports.SerialPort.ReadExisting\n  - System.IO.Ports.SerialPort.ReadLine\n  - System.IO.Ports.SerialPort.ReadTimeout\n  - System.IO.Ports.SerialPort.ReadTo(System.String)\n  - System.IO.Ports.SerialPort.ReceivedBytesThreshold\n  - System.IO.Ports.SerialPort.RtsEnable\n  - System.IO.Ports.SerialPort.StopBits\n  - System.IO.Ports.SerialPort.Write(System.String)\n  - System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)\n  - System.IO.Ports.SerialPort.WriteBufferSize\n  - System.IO.Ports.SerialPort.WriteLine(System.String)\n  - System.IO.Ports.SerialPort.WriteTimeout\n  langs:\n  - csharp\n  name: SerialPort\n  nameWithType: SerialPort\n  fullName: System.IO.Ports.SerialPort\n  type: Class\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Represents a serial port resource.\n  remarks: \"> [!NOTE]\\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \\n  \\n Use this class to control a serial port file resource. This class provides synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties. Additionally, the functionality of this class can be wrapped in an internal <xref:System.IO.Stream> object, accessible through the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property, and passed to classes that wrap or use streams.  \\n  \\n The <xref:System.IO.Ports.SerialPort> class supports the following encodings: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936.  You can use alternate encodings, but you must use the <xref:System.IO.Ports.SerialPort.ReadByte%2A> or <xref:System.IO.Ports.SerialPort.Write%2A> method and perform the encoding yourself.  \\n  \\n You use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to retrieve the valid ports for the current computer.  \\n  \\n If a <xref:System.IO.Ports.SerialPort> object becomes blocked during a read operation, do not abort the thread. Instead, either close the base stream or dispose of the <xref:System.IO.Ports.SerialPort> object.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. Both computers must be executing the program to achieve full functionality of this example.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#10)]\\n [!code-csharp[System.IO.Ports.SerialPort#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#10)]\\n [!code-vb[System.IO.Ports.SerialPort#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#10)]\"\n  syntax:\n    content: 'public class SerialPort : System.ComponentModel.Component'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.#ctor\n  commentId: M:System.IO.Ports.SerialPort.#ctor\n  id: '#ctor'\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: SerialPort()\n  nameWithType: SerialPort.SerialPort()\n  fullName: SerialPort.SerialPort()\n  type: Constructor\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class.\n  remarks: This constructor uses default property values when none are specified. For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: public SerialPort ();\n    parameters: []\n  overload: System.IO.Ports.SerialPort.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)\n  commentId: M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)\n  id: '#ctor(System.ComponentModel.IContainer)'\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: SerialPort(IContainer)\n  nameWithType: SerialPort.SerialPort(IContainer)\n  fullName: SerialPort.SerialPort(IContainer)\n  type: Constructor\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified <xref href=\"System.ComponentModel.IContainer\"></xref> object.\n  remarks: This constructor uses default property values when none are specified. For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1.\n  syntax:\n    content: public SerialPort (System.ComponentModel.IContainer container);\n    parameters:\n    - id: container\n      type: System.ComponentModel.IContainer\n      description: An interface to a container.\n  overload: System.IO.Ports.SerialPort.#ctor*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The specified port could not be found or opened.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.#ctor(System.String)\n  commentId: M:System.IO.Ports.SerialPort.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: SerialPort(String)\n  nameWithType: SerialPort.SerialPort(String)\n  fullName: SerialPort.SerialPort(String)\n  type: Constructor\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name.\n  remarks: Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name.\n  syntax:\n    content: public SerialPort (string portName);\n    parameters:\n    - id: portName\n      type: System.String\n      description: The port to use (for example, COM1).\n  overload: System.IO.Ports.SerialPort.#ctor*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The specified port could not be found or opened.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)\n  commentId: M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: SerialPort(String, Int32)\n  nameWithType: SerialPort.SerialPort(String, Int32)\n  fullName: SerialPort.SerialPort(String, Int32)\n  type: Constructor\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name and baud rate.\n  remarks: Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name and the baud rate.\n  syntax:\n    content: public SerialPort (string portName, int baudRate);\n    parameters:\n    - id: portName\n      type: System.String\n      description: The port to use (for example, COM1).\n    - id: baudRate\n      type: System.Int32\n      description: The baud rate.\n  overload: System.IO.Ports.SerialPort.#ctor*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The specified port could not be found or opened.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)\n  commentId: M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)\n  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity)'\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: SerialPort(String, Int32, Parity)\n  nameWithType: SerialPort.SerialPort(String, Int32, Parity)\n  fullName: SerialPort.SerialPort(String, Int32, Parity)\n  type: Constructor\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, and parity bit.\n  remarks: Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, and the parity bit.\n  syntax:\n    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);\n    parameters:\n    - id: portName\n      type: System.String\n      description: The port to use (for example, COM1).\n    - id: baudRate\n      type: System.Int32\n      description: The baud rate.\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values.\n  overload: System.IO.Ports.SerialPort.#ctor*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The specified port could not be found or opened.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  commentId: M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)'\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: SerialPort(String, Int32, Parity, Int32)\n  nameWithType: SerialPort.SerialPort(String, Int32, Parity, Int32)\n  fullName: SerialPort.SerialPort(String, Int32, Parity, Int32)\n  type: Constructor\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, parity bit, and data bits.\n  remarks: Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, and data bits.\n  syntax:\n    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);\n    parameters:\n    - id: portName\n      type: System.String\n      description: The port to use (for example, COM1).\n    - id: baudRate\n      type: System.Int32\n      description: The baud rate.\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values.\n    - id: dataBits\n      type: System.Int32\n      description: The data bits value.\n  overload: System.IO.Ports.SerialPort.#ctor*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The specified port could not be found or opened.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  commentId: M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)'\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: SerialPort(String, Int32, Parity, Int32, StopBits)\n  nameWithType: SerialPort.SerialPort(String, Int32, Parity, Int32, StopBits)\n  fullName: SerialPort.SerialPort(String, Int32, Parity, Int32, StopBits)\n  type: Constructor\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Initializes a new instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> class using the specified port name, baud rate, parity bit, data bits, and stop bit.\n  remarks: Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, data bits, and stop bit.\n  syntax:\n    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);\n    parameters:\n    - id: portName\n      type: System.String\n      description: The port to use (for example, COM1).\n    - id: baudRate\n      type: System.Int32\n      description: The baud rate.\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: One of the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> values.\n    - id: dataBits\n      type: System.Int32\n      description: The data bits value.\n    - id: stopBits\n      type: System.IO.Ports.StopBits\n      description: One of the <xref href=\"System.IO.Ports.SerialPort.StopBits\"></xref> values.\n  overload: System.IO.Ports.SerialPort.#ctor*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The specified port could not be found or opened.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.BaseStream\n  commentId: P:System.IO.Ports.SerialPort.BaseStream\n  id: BaseStream\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: SerialPort.BaseStream\n  fullName: SerialPort.BaseStream\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets the underlying <xref href=\"System.IO.Stream\"></xref> object for a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"Use this property for explicit asynchronous I/O operations or to pass the <xref:System.IO.Ports.SerialPort> object to a <xref:System.IO.Stream> wrapper class such as <xref:System.IO.StreamWriter>.  \\n  \\n Any open serial port's <xref:System.IO.Ports.SerialPort.BaseStream%2A> property returns an object that derives from the abstract <xref:System.IO.Stream> class, and implements read and write methods using the prototypes inherited from the <xref:System.IO.Stream> class: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, and <xref:System.IO.Stream.WriteByte%2A>. These methods can be useful when passing a wrapped serial resource to a <xref:System.IO.Stream> wrapper class.  \\n  \\n Due to the inaccessibility of the wrapped file handle, the <xref:System.IO.Stream.Length%2A> and <xref:System.IO.Stream.Position%2A> properties are not supported, and the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods are not supported.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> object.\n  overload: System.IO.Ports.SerialPort.BaseStream*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The stream is in a .NET Compact Framework application and one of the following methods was called:  \\n  \\n <xref href=\\\"System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\\\"></xref><xref href=\\\"System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\\\"></xref><xref href=\\\"System.IO.Stream.EndRead(System.IAsyncResult)\\\"></xref><xref href=\\\"System.IO.Stream.EndWrite(System.IAsyncResult)\\\"></xref>  \\n  \\n The .NET Compact Framework does not support the asynchronous model with base streams.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.BaudRate\n  commentId: P:System.IO.Ports.SerialPort.BaudRate\n  id: BaudRate\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: BaudRate\n  nameWithType: SerialPort.BaudRate\n  fullName: SerialPort.BaudRate\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the serial baud rate.\n  remarks: The baud rate must be supported by the user's serial driver. The default value is 9600 bits per second (bps).\n  example:\n  - \"The following example shows how to set the <xref:System.IO.Ports.SerialPort.BaudRate%2A> property to `9600`.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]\\n [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]\\n [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  \\n  \\n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public int BaudRate { get; set; }\n    return:\n      type: System.Int32\n      description: The baud rate.\n  overload: System.IO.Ports.SerialPort.BaudRate*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The baud rate specified is less than or equal to zero, or is greater than the maximum allowable baud rate for the device.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.BreakState\n  commentId: P:System.IO.Ports.SerialPort.BreakState\n  id: BreakState\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: BreakState\n  nameWithType: SerialPort.BreakState\n  fullName: SerialPort.BreakState\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the break signal state.\n  remarks: The break signal state occurs when a transmission is suspended and the line is placed in a break state (all low, no stop bit) until released. To enter a break state, set this property to `true`. If the port is already in a break state, setting this property again to `true` does not result in an exception. It is not possible to write to the <xref:System.IO.Ports.SerialPort> object while <xref:System.IO.Ports.SerialPort.BreakState%2A> is `true`.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool BreakState { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the port is in a break state; otherwise, `false`.'\n  overload: System.IO.Ports.SerialPort.BreakState*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.BytesToRead\n  commentId: P:System.IO.Ports.SerialPort.BytesToRead\n  id: BytesToRead\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: BytesToRead\n  nameWithType: SerialPort.BytesToRead\n  fullName: SerialPort.BytesToRead\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets the number of bytes of data in the receive buffer.\n  remarks: \"The receive buffer includes the serial driver's receive buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself.  \\n  \\n Because the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer,  it can return a greater value than the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property, which represents only the Windows-created buffer.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int BytesToRead { get; }\n    return:\n      type: System.Int32\n      description: The number of bytes of data in the receive buffer.\n  overload: System.IO.Ports.SerialPort.BytesToRead*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The port is not open.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.BytesToWrite\n  commentId: P:System.IO.Ports.SerialPort.BytesToWrite\n  id: BytesToWrite\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: BytesToWrite\n  nameWithType: SerialPort.BytesToWrite\n  fullName: SerialPort.BytesToWrite\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets the number of bytes of data in the send buffer.\n  remarks: The send buffer includes the serial driver's send buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int BytesToWrite { get; }\n    return:\n      type: System.Int32\n      description: The number of bytes of data in the send buffer.\n  overload: System.IO.Ports.SerialPort.BytesToWrite*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The port is in an invalid state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.CDHolding\n  commentId: P:System.IO.Ports.SerialPort.CDHolding\n  id: CDHolding\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: CDHolding\n  nameWithType: SerialPort.CDHolding\n  fullName: SerialPort.CDHolding\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets the state of the Carrier Detect line for the port.\n  remarks: This property can be used to monitor the state of the carrier detection line for a port. No carrier usually indicates that the receiver has hung up and the carrier has been dropped.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool CDHolding { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the carrier is detected; otherwise, `false`.'\n  overload: System.IO.Ports.SerialPort.CDHolding*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Close\n  commentId: M:System.IO.Ports.SerialPort.Close\n  id: Close\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: SerialPort.Close()\n  fullName: SerialPort.Close()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Closes the port connection, sets the <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> property to `false`, and disposes of the internal <xref href=\"System.IO.Stream\"></xref> object.\n  remarks: \"Calling this method closes the <xref:System.IO.Ports.SerialPort> object and clears both the receive and transmit buffers. This method calls the <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName> method, which invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> method with the `disposing` parameter set to `true`.  \\n  \\n The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.IO.Ports.SerialPort.Close*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.CtsHolding\n  commentId: P:System.IO.Ports.SerialPort.CtsHolding\n  id: CtsHolding\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: CtsHolding\n  nameWithType: SerialPort.CtsHolding\n  fullName: SerialPort.CtsHolding\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets the state of the Clear-to-Send line.\n  remarks: The Clear-to-Send (CTS) line is used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking. The CTS line is queried by a port before data is sent.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool CtsHolding { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the Clear-to-Send line is detected; otherwise, `false`.'\n  overload: System.IO.Ports.SerialPort.CtsHolding*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.DataBits\n  commentId: P:System.IO.Ports.SerialPort.DataBits\n  id: DataBits\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: DataBits\n  nameWithType: SerialPort.DataBits\n  fullName: SerialPort.DataBits\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the standard length of data bits per byte.\n  remarks: The range of values for this property is from 5 through 8. The default value is 8.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public int DataBits { get; set; }\n    return:\n      type: System.Int32\n      description: The data bits length.\n  overload: System.IO.Ports.SerialPort.DataBits*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The data bits value is less than 5 or more than 8.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.DataReceived\n  commentId: E:System.IO.Ports.SerialPort.DataReceived\n  id: DataReceived\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: DataReceived\n  nameWithType: SerialPort.DataReceived\n  fullName: SerialPort.DataReceived\n  type: Event\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Indicates that data has been received through a port represented by the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"Data events can be caused by any of the items in the <xref:System.IO.Ports.SerialData> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.  \\n  \\n The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an Eof character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property.  \\n  \\n <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.  \\n  \\n The <xref:System.IO.Ports.SerialPort.DataReceived> event is not guaranteed to be raised for every byte received. Use the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property to determine how much data is left to be read in the buffer.  \\n  \\n The <xref:System.IO.Ports.SerialPort.DataReceived> event is raised on a secondary thread when data is received from the <xref:System.IO.Ports.SerialPort> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.  \\n  \\n For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"This example adds a <xref:System.IO.Ports.SerialDataReceivedEventHandler> to <xref:System.IO.Ports.SerialPort.DataReceived> to read all the available data received on the COM1 port. Note that to test this code it is necessary to have hardware attached to COM1 that will send data.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#06](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#06)]\\n [!code-csharp[System.IO.Ports.SerialPort#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#06)]\\n [!code-vb[System.IO.Ports.SerialPort#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#06)]\"\n  syntax:\n    content: public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;\n    return:\n      type: System.IO.Ports.SerialDataReceivedEventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.DiscardInBuffer\n  commentId: M:System.IO.Ports.SerialPort.DiscardInBuffer\n  id: DiscardInBuffer\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: DiscardInBuffer()\n  nameWithType: SerialPort.DiscardInBuffer()\n  fullName: SerialPort.DiscardInBuffer()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Discards data from the serial driver's receive buffer.\n  remarks: 'This method is equivalent to the following Visual Basic code: `MSComm1.InBufferCount = 0`. It clears the receive buffer, but does not affect the transmit buffer.'\n  syntax:\n    content: public void DiscardInBuffer ();\n    parameters: []\n  overload: System.IO.Ports.SerialPort.DiscardInBuffer*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.DiscardNull\n  commentId: P:System.IO.Ports.SerialPort.DiscardNull\n  id: DiscardNull\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: DiscardNull\n  nameWithType: SerialPort.DiscardNull\n  fullName: SerialPort.DiscardNull\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets a value indicating whether null bytes are ignored when transmitted between the port and the receive buffer.\n  remarks: This value should normally be set to `false`, especially for binary transmissions.  Setting this property to `true` can cause unexpected results for UTF32- and UTF16-encoded bytes.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      [System.MonoTODO(\"Not implemented\")]\n\n      public bool DiscardNull { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if null bytes are ignored; otherwise `false`. The default is `false`.'\n  overload: System.IO.Ports.SerialPort.DiscardNull*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.DiscardOutBuffer\n  commentId: M:System.IO.Ports.SerialPort.DiscardOutBuffer\n  id: DiscardOutBuffer\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: DiscardOutBuffer()\n  nameWithType: SerialPort.DiscardOutBuffer()\n  fullName: SerialPort.DiscardOutBuffer()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Discards data from the serial driver's transmit buffer.\n  remarks: 'This method is equivalent to the following Visual Basic code: `MSComm1.OutBufferCount = 0`. It clears the transmit buffer, but does not affect the receive buffer.'\n  syntax:\n    content: public void DiscardOutBuffer ();\n    parameters: []\n  overload: System.IO.Ports.SerialPort.DiscardOutBuffer*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)\n  commentId: M:System.IO.Ports.SerialPort.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SerialPort.Dispose(Boolean)\n  fullName: SerialPort.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.Ports.SerialPort\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Ports.SerialPort.Dispose%2A> with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Ports.SerialPort> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.  \\n  \\n This method flushes and closes the stream object in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.Ports.SerialPort.Dispose*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.DsrHolding\n  commentId: P:System.IO.Ports.SerialPort.DsrHolding\n  id: DsrHolding\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: DsrHolding\n  nameWithType: SerialPort.DsrHolding\n  fullName: SerialPort.DsrHolding\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets the state of the Data Set Ready (DSR) signal.\n  remarks: This property is used in Data Set Ready/Data Terminal Ready (DSR/DTR) handshaking. The Data Set Ready (DSR) signal is usually sent by a modem to a port to indicate that it is ready for data transmission or data reception.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool DsrHolding { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a Data Set Ready signal has been sent to the port; otherwise, `false`.'\n  overload: System.IO.Ports.SerialPort.DsrHolding*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is closed. This can occur because the <xref href=\"System.IO.Ports.SerialPort.Open\"></xref> method has not been called or the <xref href=\"System.IO.Ports.SerialPort.Close\"></xref> method has been called.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.DtrEnable\n  commentId: P:System.IO.Ports.SerialPort.DtrEnable\n  id: DtrEnable\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: DtrEnable\n  nameWithType: SerialPort.DtrEnable\n  fullName: SerialPort.DtrEnable\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets a value that enables the Data Terminal Ready (DTR) signal during serial communication.\n  remarks: Data Terminal Ready (DTR) is typically enabled during XON/XOFF software handshaking and Request to Send/Clear to Send (RTS/CTS) hardware handshaking, and modem communications.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public bool DtrEnable { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to enable Data Terminal Ready (DTR); otherwise, `false`. The default is `false`.'\n  overload: System.IO.Ports.SerialPort.DtrEnable*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Encoding\n  commentId: P:System.IO.Ports.SerialPort.Encoding\n  id: Encoding\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Encoding\n  nameWithType: SerialPort.Encoding\n  fullName: SerialPort.Encoding\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the byte encoding for pre- and post-transmission conversion of text.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Text.Encoding Encoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: An <xref href=\"System.Text.Encoding\"></xref> object. The default is <xref href=\"System.Text.ASCIIEncoding\"></xref>.\n  overload: System.IO.Ports.SerialPort.Encoding*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.IO.Ports.SerialPort.Encoding\"></xref> property was set to `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.IO.Ports.SerialPort.Encoding\"></xref> property was set to an encoding that is not <xref href=\"System.Text.ASCIIEncoding\"></xref>, <xref href=\"System.Text.UTF8Encoding\"></xref>, <xref href=\"System.Text.UTF32Encoding\"></xref>, <xref href=\"System.Text.UnicodeEncoding\"></xref>, one of the Windows single byte encodings, or one of the Windows double byte encodings.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ErrorReceived\n  commentId: E:System.IO.Ports.SerialPort.ErrorReceived\n  id: ErrorReceived\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ErrorReceived\n  nameWithType: SerialPort.ErrorReceived\n  fullName: SerialPort.ErrorReceived\n  type: Event\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Indicates that an error has occurred with a port represented by a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"Error events can be caused by any of the items in the <xref:System.IO.Ports.SerialError> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.  \\n  \\n <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed. Only one event handler can execute at a time.  \\n  \\n If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.  \\n  \\n The <xref:System.IO.Ports.SerialPort.ErrorReceived> event is raised on a secondary thread when an error is received from the <xref:System.IO.Ports.SerialPort> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.  \\n  \\n For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  syntax:\n    content: public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;\n    return:\n      type: System.IO.Ports.SerialErrorReceivedEventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.GetPortNames\n  commentId: M:System.IO.Ports.SerialPort.GetPortNames\n  id: GetPortNames\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: GetPortNames()\n  nameWithType: SerialPort.GetPortNames()\n  fullName: SerialPort.GetPortNames()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets an array of serial port names for the current computer.\n  remarks: \"The order of port names returned from <xref:System.IO.Ports.SerialPort.GetPortNames%2A> is not specified.  \\n  \\n Use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.  \\n  \\n The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DEVICEMAP\\\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method will return incorrect data.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to display serial port names to the console.  \\n  \\n [!code-cpp[IO.Ports.GetPortNames#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Ports.GetPortNames/cpp/example.cpp#1)]\\n [!code-csharp[IO.Ports.GetPortNames#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Ports.GetPortNames/CS/example.cs#1)]\\n [!code-vb[IO.Ports.GetPortNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Ports.GetPortNames/VB/example.vb#1)]\"\n  syntax:\n    content: public static string[] GetPortNames ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: An array of serial port names for the current computer.\n  overload: System.IO.Ports.SerialPort.GetPortNames*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The serial port names could not be queried.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Handshake\n  commentId: P:System.IO.Ports.SerialPort.Handshake\n  id: Handshake\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Handshake\n  nameWithType: SerialPort.Handshake\n  fullName: SerialPort.Handshake\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the handshaking protocol for serial port transmission of data using a value from <xref href=\"System.IO.Ports.Handshake\"></xref>.\n  remarks: \"When handshaking is used, the device connected to the <xref:System.IO.Ports.SerialPort> object is instructed to stop sending data when there is at least (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bytes in the buffer. The device is instructed to start sending data again when there are 1024 or fewer bytes in the buffer. If the device is sending data in blocks that are larger than 1024 bytes, this may cause the buffer to overflow.  \\n  \\n If the <xref:System.IO.Ports.SerialPort.Handshake%2A> property is set to <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> and <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is set to `false`, the XOff character will not be sent. If <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is then set to `true`, more data must be sent before the XOff character will be sent.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public System.IO.Ports.Handshake Handshake { get; set; }\n    return:\n      type: System.IO.Ports.Handshake\n      description: One of the <xref href=\"System.IO.Ports.Handshake\"></xref> values. The default is `None`.\n  overload: System.IO.Ports.SerialPort.Handshake*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value passed is not a valid value in the <xref href=\"System.IO.Ports.Handshake\"></xref> enumeration.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.InfiniteTimeout\n  commentId: F:System.IO.Ports.SerialPort.InfiniteTimeout\n  id: InfiniteTimeout\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: InfiniteTimeout\n  nameWithType: SerialPort.InfiniteTimeout\n  fullName: SerialPort.InfiniteTimeout\n  type: Field\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Indicates that no time-out should occur.\n  remarks: This value is used with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> and <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> properties.\n  syntax:\n    content: public const int InfiniteTimeout = -1;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.IsOpen\n  commentId: P:System.IO.Ports.SerialPort.IsOpen\n  id: IsOpen\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: IsOpen\n  nameWithType: SerialPort.IsOpen\n  fullName: SerialPort.IsOpen\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets a value indicating the open or closed status of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: The <xref:System.IO.Ports.SerialPort.IsOpen%2A> property tracks whether the port is open for use by the caller, not whether the port is open by any application on the machine.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsOpen { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the serial port is open; otherwise, `false`. The default is `false`.'\n  overload: System.IO.Ports.SerialPort.IsOpen*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> value passed is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.IO.Ports.SerialPort.IsOpen\"></xref> value passed is an empty string (\"\").\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.NewLine\n  commentId: P:System.IO.Ports.SerialPort.NewLine\n  id: NewLine\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: NewLine\n  nameWithType: SerialPort.NewLine\n  fullName: SerialPort.NewLine\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the value used to interpret the end of a call to the <xref href=\"System.IO.Ports.SerialPort.ReadLine\"></xref> and <xref href=\"System.IO.Ports.SerialPort.WriteLine(System.String)\"></xref> methods.\n  remarks: This property determines what value (byte) defines the end of a line for the <xref:System.IO.Ports.SerialPort.ReadLine%2A> and <xref:System.IO.Ports.SerialPort.WriteLine%2A> methods. By default the end-of-line value is <xref:System.Environment.NewLine%2A>. You would change this to a different value if the particular serial device you’re working with uses a different value for the same purpose.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string NewLine { get; set; }\n    return:\n      type: System.String\n      description: A value that represents the end of a line. The default is a line feed, <xref href=\"System.Environment.NewLine\"></xref>.\n  overload: System.IO.Ports.SerialPort.NewLine*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property value is empty.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property value is `null`.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Open\n  commentId: M:System.IO.Ports.SerialPort.Open\n  id: Open\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Open()\n  nameWithType: SerialPort.Open()\n  fullName: SerialPort.Open()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Opens a new serial port connection.\n  remarks: \"Only one open connection can exist per <xref:System.IO.Ports.SerialPort> object.  \\n  \\n The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: public void Open ();\n    parameters: []\n  overload: System.IO.Ports.SerialPort.Open*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"Access is denied to the port.  \\n  \\n \\\\- or -  \\n  \\n The current process, or another process on the system, already has the specified COM port open either by a <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> instance or in unmanaged code.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: One or more of the properties for this instance are invalid. For example, the <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref>, <xref href=\"System.IO.Ports.SerialPort.DataBits\"></xref>, or <xref href=\"System.IO.Ports.SerialPort.Handshake\"></xref> properties are not valid values; the <xref href=\"System.IO.Ports.SerialPort.BaudRate\"></xref> is less than or equal to zero; the <xref href=\"System.IO.Ports.SerialPort.ReadTimeout\"></xref> or <xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"></xref> property is less than zero and is not <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The port name does not begin with \\\"COM\\\".  \\n  \\n \\\\- or -  \\n  \\n The file type of the port is not supported.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port on the current instance of the <xref href=\"System.IO.Ports.SerialPort\"></xref> is already open.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Parity\n  commentId: P:System.IO.Ports.SerialPort.Parity\n  id: Parity\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Parity\n  nameWithType: SerialPort.Parity\n  fullName: SerialPort.Parity\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the parity-checking protocol.\n  remarks: \"Parity is an error-checking procedure in which the number of 1s must always be the same—either even or odd—for each group of bits that is transmitted without error. In modem-to-modem communications, parity is often one of the parameters that must be agreed upon by sending parties and receiving parties before transmission can take place.  \\n  \\n If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public System.IO.Ports.Parity Parity { get; set; }\n    return:\n      type: System.IO.Ports.Parity\n      description: One of the enumeration values that represents the parity-checking protocol. The default is <xref href=\"System.IO.Ports.Parity.None\"></xref>.\n  overload: System.IO.Ports.SerialPort.Parity*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <xref href=\"System.IO.Ports.SerialPort.Parity\"></xref> value passed is not a valid value in the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ParityReplace\n  commentId: P:System.IO.Ports.SerialPort.ParityReplace\n  id: ParityReplace\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ParityReplace\n  nameWithType: SerialPort.ParityReplace\n  fullName: SerialPort.ParityReplace\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the byte that replaces invalid bytes in a data stream when a parity error occurs.\n  remarks: If the value is set to the null character, parity replacement is disabled.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      [System.MonoTODO(\"Not implemented\")]\n\n      public byte ParityReplace { get; set; }\n    return:\n      type: System.Byte\n      description: A byte that replaces invalid bytes.\n  overload: System.IO.Ports.SerialPort.ParityReplace*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.PinChanged\n  commentId: E:System.IO.Ports.SerialPort.PinChanged\n  id: PinChanged\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: PinChanged\n  nameWithType: SerialPort.PinChanged\n  fullName: SerialPort.PinChanged\n  type: Event\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Indicates that a non-data signal event has occurred on the port represented by the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"Serial pin changed events can be caused by any of the items in the <xref:System.IO.Ports.SerialPinChange> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported. As part of the event, the new value of the pin is set.  \\n  \\n The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised when a <xref:System.IO.Ports.SerialPort> object enters the <xref:System.IO.Ports.SerialPort.BreakState%2A>, but not when the port exits the <xref:System.IO.Ports.SerialPort.BreakState%2A>. This behavior does not apply to other values in the <xref:System.IO.Ports.SerialPinChange> enumeration.  \\n  \\n <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.  \\n  \\n The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised on a secondary thread. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.  \\n  \\n For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  syntax:\n    content: public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;\n    return:\n      type: System.IO.Ports.SerialPinChangedEventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.PortName\n  commentId: P:System.IO.Ports.SerialPort.PortName\n  id: PortName\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: PortName\n  nameWithType: SerialPort.PortName\n  fullName: SerialPort.PortName\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the port for communications, including but not limited to all available COM ports.\n  remarks: A list of valid port names can be obtained using the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public string PortName { get; set; }\n    return:\n      type: System.String\n      description: The communications port. The default is COM1.\n  overload: System.IO.Ports.SerialPort.PortName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <xref href=\\\"System.IO.Ports.SerialPort.PortName\\\"></xref> property was set to a value with a length of zero.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.IO.Ports.SerialPort.PortName\\\"></xref> property was set to a value that starts with \\\"\\\\\\\\\\\\\\\\\\\".  \\n  \\n -or-  \\n  \\n The port name was not valid.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.IO.Ports.SerialPort.PortName\"></xref> property was set to `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is open.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: SerialPort.Read(Byte[], Int32, Int32)\n  fullName: SerialPort.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Reads a number of bytes from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer and writes those bytes into a byte array at the specified offset.\n  remarks: \"If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \\n  \\n Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n The <xref:System.IO.Ports.SerialPort.Read%2A> method does not block other operations when the number of bytes read equals `count` but there are still unread bytes available on the serial port.\"\n  syntax:\n    content: public int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The byte array to write the input to.\n    - id: offset\n      type: System.Int32\n      description: The offset in <code>buffer</code> at which to write the bytes.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to read. Fewer bytes are read if <code>count</code> is greater than the number of bytes in the input buffer.\n    return:\n      type: System.Int32\n      description: The number of bytes read.\n  overload: System.IO.Ports.SerialPort.Read*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The buffer passed is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.\n  - type: System.TimeoutException\n    commentId: T:System.TimeoutException\n    description: No bytes were available to read.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)\n  id: Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Read(Char[], Int32, Int32)\n  nameWithType: SerialPort.Read(Char[], Int32, Int32)\n  fullName: SerialPort.Read(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Reads a number of characters from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer and writes them into an array of characters at a given offset.\n  remarks: \"Use this method for reading characters from the serial port.  \\n  \\n If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \\n  \\n Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many characters are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n The <xref:System.IO.Ports.SerialPort.Read%2A> method does not block other operations when the number of bytes read equals `count` but there are still unread bytes available on the serial port.\"\n  syntax:\n    content: public int Read (char[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: The character array to write the input to.\n    - id: offset\n      type: System.Int32\n      description: The offset in <code>buffer</code> at which to write the characters.\n    - id: count\n      type: System.Int32\n      description: The maximum number of characters to read. Fewer characters are read if <code>count</code> is greater than the number of characters in the input buffer.\n    return:\n      type: System.Int32\n      description: The number of characters read.\n  overload: System.IO.Ports.SerialPort.Read*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>offset</code> plus <code>count</code> is greater than the length of the buffer.  \\n  \\n \\\\- or -  \\n  \\n <code>count</code> is 1 and there is a surrogate character in the buffer.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>buffer</code> passed is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.TimeoutException\n    commentId: T:System.TimeoutException\n    description: No characters were available to read.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ReadBufferSize\n  commentId: P:System.IO.Ports.SerialPort.ReadBufferSize\n  id: ReadBufferSize\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ReadBufferSize\n  nameWithType: SerialPort.ReadBufferSize\n  fullName: SerialPort.ReadBufferSize\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the size of the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer.\n  remarks: \"The <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property ignores any value smaller than 4096.  \\n  \\n Because the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property represents only the Windows-created buffer, it can return a smaller value than the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property, which represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public int ReadBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: The buffer size, in bytes. The default value is 4096; the maximum value is that of a positive int, or 2147483647.\n  overload: System.IO.Ports.SerialPort.ReadBufferSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> value set is less than or equal to zero.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> property was set while the stream was open.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The <xref href=\"System.IO.Ports.SerialPort.ReadBufferSize\"></xref> property was set to an odd integer value.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ReadByte\n  commentId: M:System.IO.Ports.SerialPort.ReadByte\n  id: ReadByte\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ReadByte()\n  nameWithType: SerialPort.ReadByte()\n  fullName: SerialPort.ReadByte()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Synchronously reads one byte from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer.\n  remarks: \"This method reads one byte.  \\n  \\n Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \\n  \\n> [!NOTE]\\n>  Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.\"\n  syntax:\n    content: public int ReadByte ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The byte, cast to an <xref href=\"System.Int32\"></xref>, or -1 if the end of the stream has been read.\n  overload: System.IO.Ports.SerialPort.ReadByte*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: \"The operation did not complete before the time-out period ended.  \\n  \\n \\\\- or -  \\n  \\n No byte was read.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ReadChar\n  commentId: M:System.IO.Ports.SerialPort.ReadChar\n  id: ReadChar\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ReadChar()\n  nameWithType: SerialPort.ReadChar()\n  fullName: SerialPort.ReadChar()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Synchronously reads one character from the <xref href=\"System.IO.Ports.SerialPort\"></xref> input buffer.\n  remarks: \"This method reads one complete character based on the encoding.  \\n  \\n Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \\n  \\n> [!NOTE]\\n>  Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.\"\n  syntax:\n    content: public int ReadChar ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The character that was read.\n  overload: System.IO.Ports.SerialPort.ReadChar*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: \"The operation did not complete before the time-out period ended.  \\n  \\n \\\\- or -  \\n  \\n No character was available in the allotted time-out period.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ReadExisting\n  commentId: M:System.IO.Ports.SerialPort.ReadExisting\n  id: ReadExisting\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ReadExisting()\n  nameWithType: SerialPort.ReadExisting()\n  fullName: SerialPort.ReadExisting()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Reads all immediately available bytes, based on the encoding, in both the stream and the input buffer of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"This method returns the contents of the stream and internal buffer of the <xref:System.IO.Ports.SerialPort> object as a string. This method does not use a time-out. Note that this method can leave trailing lead bytes in the internal buffer, which makes the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> value greater than zero.  \\n  \\n If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \\n  \\n> [!NOTE]\\n>  The <xref:System.IO.Ports.SerialPort> class buffers data, but the stream object contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> property does not. Therefore, the <xref:System.IO.Ports.SerialPort> object and the stream object might differ on the number of bytes that are available to read. When bytes are buffered to the <xref:System.IO.Ports.SerialPort> object, the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.\"\n  syntax:\n    content: public string ReadExisting ();\n    parameters: []\n    return:\n      type: System.String\n      description: The contents of the stream and the input buffer of the <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  overload: System.IO.Ports.SerialPort.ReadExisting*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ReadLine\n  commentId: M:System.IO.Ports.SerialPort.ReadLine\n  id: ReadLine\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ReadLine()\n  nameWithType: SerialPort.ReadLine()\n  fullName: SerialPort.ReadLine()\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Reads up to the <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value in the input buffer.\n  remarks: \"Note that while this method does not return the <xref:System.IO.Ports.SerialPort.NewLine%2A> value, the <xref:System.IO.Ports.SerialPort.NewLine%2A> value is removed from the input buffer.  \\n  \\n By default, the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method will block until a line is received. If this behavior is undesirable, set the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property to any non-zero value to force the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method to throw a <xref:System.TimeoutException> if a line is not available on the port.  \\n  \\n If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \\n  \\n> [!NOTE]\\n>  Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: public string ReadLine ();\n    parameters: []\n    return:\n      type: System.String\n      description: The contents of the input buffer up to the first occurrence of a <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value.\n  overload: System.IO.Ports.SerialPort.ReadLine*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.TimeoutException\n    commentId: T:System.TimeoutException\n    description: \"The operation did not complete before the time-out period ended.  \\n  \\n \\\\- or -  \\n  \\n No bytes were read.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ReadTimeout\n  commentId: P:System.IO.Ports.SerialPort.ReadTimeout\n  id: ReadTimeout\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ReadTimeout\n  nameWithType: SerialPort.ReadTimeout\n  fullName: SerialPort.ReadTimeout\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the number of milliseconds before a time-out occurs when a read operation does not finish.\n  remarks: \"The read time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.  \\n  \\n> [!NOTE]\\n>  Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  \\n  \\n This property does not affect the <xref:System.IO.Stream.BeginRead%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public int ReadTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The number of milliseconds before a time-out occurs when a read operation does not finish.\n  overload: System.IO.Ports.SerialPort.ReadTimeout*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The read time-out value is less than zero and not equal to <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ReadTo(System.String)\n  commentId: M:System.IO.Ports.SerialPort.ReadTo(System.String)\n  id: ReadTo(System.String)\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ReadTo(String)\n  nameWithType: SerialPort.ReadTo(String)\n  fullName: SerialPort.ReadTo(String)\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Reads a string up to the specified <code>value</code> in the input buffer.\n  remarks: \"This method reads a string up to the specified `value`. While the returned string does not include the `value`, the `value` is removed from the input buffer.  \\n  \\n If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  \\n  \\n> [!NOTE]\\n>  Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.  The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.\"\n  syntax:\n    content: public string ReadTo (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: A value that indicates where the read operation stops.\n    return:\n      type: System.String\n      description: The contents of the input buffer up to the specified <code>value</code>.\n  overload: System.IO.Ports.SerialPort.ReadTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The length of the <code>value</code> parameter is 0.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>value</code> parameter is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.TimeoutException\n    commentId: T:System.TimeoutException\n    description: The operation did not complete before the time-out period ended.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold\n  commentId: P:System.IO.Ports.SerialPort.ReceivedBytesThreshold\n  id: ReceivedBytesThreshold\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: ReceivedBytesThreshold\n  nameWithType: SerialPort.ReceivedBytesThreshold\n  fullName: SerialPort.ReceivedBytesThreshold\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the number of bytes in the internal input buffer before a <xref href=\"System.IO.Ports.SerialPort.DataReceived\"></xref> event occurs.\n  remarks: The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an <xref:System.IO.Ports.SerialData.Eof> character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      [System.MonoTODO(\"Not implemented\")]\n\n      public int ReceivedBytesThreshold { get; set; }\n    return:\n      type: System.Int32\n      description: The number of bytes in the internal input buffer before a <xref href=\"System.IO.Ports.SerialPort.DataReceived\"></xref> event is fired. The default is 1.\n  overload: System.IO.Ports.SerialPort.ReceivedBytesThreshold*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <xref href=\"System.IO.Ports.SerialPort.ReceivedBytesThreshold\"></xref> value is less than or equal to zero.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.RtsEnable\n  commentId: P:System.IO.Ports.SerialPort.RtsEnable\n  id: RtsEnable\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: RtsEnable\n  nameWithType: SerialPort.RtsEnable\n  fullName: SerialPort.RtsEnable\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets a value indicating whether the Request to Send (RTS) signal is enabled during serial communication.\n  remarks: The Request to Transmit (RTS) signal is typically used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public bool RtsEnable { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to enable Request to Transmit (RTS); otherwise, `false`. The default is `false`.'\n  overload: System.IO.Ports.SerialPort.RtsEnable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The value of the <xref href=\"System.IO.Ports.SerialPort.RtsEnable\"></xref> property was set or retrieved while the <xref href=\"System.IO.Ports.SerialPort.Handshake\"></xref> property is set to the <xref href=\"System.IO.Ports.Handshake.RequestToSend\"></xref> value or the <xref href=\"System.IO.Ports.Handshake.RequestToSendXOnXOff\"></xref> value.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.StopBits\n  commentId: P:System.IO.Ports.SerialPort.StopBits\n  id: StopBits\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: StopBits\n  nameWithType: SerialPort.StopBits\n  fullName: SerialPort.StopBits\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the standard number of stopbits per byte.\n  remarks: \"The default value for <xref:System.IO.Ports.SerialPort.StopBits%2A> is <xref:System.IO.Ports.StopBits.One>.  \\n  \\n The <xref:System.IO.Ports.StopBits?displayProperty=fullName> value is not supported.\"\n  example:\n  - \"The following example shows how to set the <xref:System.IO.Ports.SerialPort.StopBits%2A> property to `One`.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]\\n [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]\\n [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  \\n  \\n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public System.IO.Ports.StopBits StopBits { get; set; }\n    return:\n      type: System.IO.Ports.StopBits\n      description: One of the <xref href=\"System.IO.Ports.StopBits\"></xref> values.\n  overload: System.IO.Ports.SerialPort.StopBits*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <xref href=\"System.IO.Ports.SerialPort.StopBits\"></xref> value is  <xref href=\"System.IO.Ports.StopBits.None\"></xref>.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Write(System.String)\n  commentId: M:System.IO.Ports.SerialPort.Write(System.String)\n  id: Write(System.String)\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: SerialPort.Write(String)\n  fullName: SerialPort.Write(String)\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Writes the specified string to the serial port.\n  remarks: \"Use this method when you want to write a string as output to a serial port.  \\n  \\n If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.  \\n  \\n By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.\"\n  syntax:\n    content: public void Write (string str);\n    parameters:\n    - id: text\n      type: System.String\n      description: ''\n  overload: System.IO.Ports.SerialPort.Write*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>str</code> is `null`.\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The operation did not complete before the time-out period ended.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: SerialPort.Write(Byte[], Int32, Int32)\n  fullName: SerialPort.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Writes a specified number of bytes to the serial port using data from a buffer.\n  remarks: \"Use this method when you want to write to a byte buffer to create output to a serial port.  \\n  \\n If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.  \\n  \\n By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.\"\n  syntax:\n    content: public void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The byte array that contains the data to write to the port.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in the <code>buffer</code> parameter at which to begin copying bytes to the port.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to write.\n  overload: System.IO.Ports.SerialPort.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>buffer</code> passed is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The operation did not complete before the time-out period ended.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)\n  id: Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: Write(Char[], Int32, Int32)\n  nameWithType: SerialPort.Write(Char[], Int32, Int32)\n  fullName: SerialPort.Write(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Writes a specified number of characters to the serial port using data from a buffer.\n  remarks: \"Use this method when you want to write to a character buffer to create output to a serial port.  \\n  \\n If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.  \\n  \\n By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters. <xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'. To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.\"\n  syntax:\n    content: public void Write (char[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: The character array that contains the data to write to the port.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in the <code>buffer</code> parameter at which to begin copying bytes to the port.\n    - id: count\n      type: System.Int32\n      description: The number of characters to write.\n  overload: System.IO.Ports.SerialPort.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>buffer</code> passed is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.\n  - type: System.ServiceProcess.TimeoutException\n    commentId: T:System.ServiceProcess.TimeoutException\n    description: The operation did not complete before the time-out period ended.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.WriteBufferSize\n  commentId: P:System.IO.Ports.SerialPort.WriteBufferSize\n  id: WriteBufferSize\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: WriteBufferSize\n  nameWithType: SerialPort.WriteBufferSize\n  fullName: SerialPort.WriteBufferSize\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the size of the serial port output buffer.\n  remarks: The <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> property ignores any value smaller than 2048.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public int WriteBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: The size of the output buffer. The default is 2048.\n  overload: System.IO.Ports.SerialPort.WriteBufferSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> value is less than or equal to zero.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> property was set while the stream was open.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The <xref href=\"System.IO.Ports.SerialPort.WriteBufferSize\"></xref> property was set to an odd integer value.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.WriteLine(System.String)\n  commentId: M:System.IO.Ports.SerialPort.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: WriteLine(String)\n  nameWithType: SerialPort.WriteLine(String)\n  fullName: SerialPort.WriteLine(String)\n  type: Method\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Writes the specified string and the <xref href=\"System.IO.Ports.SerialPort.NewLine\"></xref> value to the output buffer.\n  remarks: \"If there are too many bytes in the input buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.  \\n  \\n The written output includes the <xref:System.IO.Ports.SerialPort.NewLine%2A> string.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: public void WriteLine (string str);\n    parameters:\n    - id: text\n      type: System.String\n      description: ''\n  overload: System.IO.Ports.SerialPort.WriteLine*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>str</code> parameter is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The specified port is not open.\n  - type: System.TimeoutException\n    commentId: T:System.TimeoutException\n    description: The <xref href=\"System.IO.Ports.SerialPort.WriteLine(System.String)\"></xref> method could not write to the stream.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Ports.SerialPort.WriteTimeout\n  commentId: P:System.IO.Ports.SerialPort.WriteTimeout\n  id: WriteTimeout\n  parent: System.IO.Ports.SerialPort\n  langs:\n  - csharp\n  name: WriteTimeout\n  nameWithType: SerialPort.WriteTimeout\n  fullName: SerialPort.WriteTimeout\n  type: Property\n  assemblies:\n  - System\n  - System.IO.Ports\n  namespace: System.IO.Ports\n  summary: Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.\n  remarks: \"The write time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.  \\n  \\n> [!NOTE]\\n>  Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  \\n  \\n This property does not affect the <xref:System.IO.Stream.BeginWrite%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \\n  \\n [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]\\n [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]\\n [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public int WriteTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The number of milliseconds before a time-out occurs. The default is <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.\n  overload: System.IO.Ports.SerialPort.WriteTimeout*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The port is in an invalid state.  \\n  \\n \\\\- or -  \\n  \\n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\\\"System.IO.Ports.SerialPort\\\"></xref> object were invalid.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <xref href=\"System.IO.Ports.SerialPort.WriteTimeout\"></xref> value is less than zero and not equal to <xref href=\"System.IO.Ports.SerialPort.InfiniteTimeout\"></xref>.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Component\n  parent: System.ComponentModel\n  isExternal: false\n  name: Component\n  nameWithType: Component\n  fullName: System.ComponentModel.Component\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.Win32Exception\n  parent: System.ComponentModel\n  isExternal: false\n  name: Win32Exception\n  nameWithType: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.TimeoutException\n  parent: System\n  isExternal: false\n  name: TimeoutException\n  nameWithType: TimeoutException\n  fullName: System.TimeoutException\n- uid: System.ServiceProcess.TimeoutException\n  parent: System.ServiceProcess\n  isExternal: false\n  name: TimeoutException\n  nameWithType: TimeoutException\n  fullName: System.ServiceProcess.TimeoutException\n- uid: System.IO.Ports.SerialPort.#ctor\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: SerialPort()\n  nameWithType: SerialPort.SerialPort()\n  fullName: SerialPort.SerialPort()\n- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: SerialPort(IContainer)\n  nameWithType: SerialPort.SerialPort(IContainer)\n  fullName: SerialPort.SerialPort(IContainer)\n- uid: System.ComponentModel.IContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: IContainer\n  nameWithType: IContainer\n  fullName: System.ComponentModel.IContainer\n- uid: System.IO.Ports.SerialPort.#ctor(System.String)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: SerialPort(String)\n  nameWithType: SerialPort.SerialPort(String)\n  fullName: SerialPort.SerialPort(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: SerialPort(String, Int32)\n  nameWithType: SerialPort.SerialPort(String, Int32)\n  fullName: SerialPort.SerialPort(String, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: SerialPort(String, Int32, Parity)\n  nameWithType: SerialPort.SerialPort(String, Int32, Parity)\n  fullName: SerialPort.SerialPort(String, Int32, Parity)\n- uid: System.IO.Ports.Parity\n  parent: System.IO.Ports\n  isExternal: false\n  name: Parity\n  nameWithType: Parity\n  fullName: System.IO.Ports.Parity\n- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: SerialPort(String, Int32, Parity, Int32)\n  nameWithType: SerialPort.SerialPort(String, Int32, Parity, Int32)\n  fullName: SerialPort.SerialPort(String, Int32, Parity, Int32)\n- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: SerialPort(String, Int32, Parity, Int32, StopBits)\n  nameWithType: SerialPort.SerialPort(String, Int32, Parity, Int32, StopBits)\n  fullName: SerialPort.SerialPort(String, Int32, Parity, Int32, StopBits)\n- uid: System.IO.Ports.StopBits\n  parent: System.IO.Ports\n  isExternal: false\n  name: StopBits\n  nameWithType: StopBits\n  fullName: System.IO.Ports.StopBits\n- uid: System.IO.Ports.SerialPort.BaseStream\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BaseStream\n  nameWithType: SerialPort.BaseStream\n  fullName: SerialPort.BaseStream\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Ports.SerialPort.BaudRate\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BaudRate\n  nameWithType: SerialPort.BaudRate\n  fullName: SerialPort.BaudRate\n- uid: System.IO.Ports.SerialPort.BreakState\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BreakState\n  nameWithType: SerialPort.BreakState\n  fullName: SerialPort.BreakState\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Ports.SerialPort.BytesToRead\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BytesToRead\n  nameWithType: SerialPort.BytesToRead\n  fullName: SerialPort.BytesToRead\n- uid: System.IO.Ports.SerialPort.BytesToWrite\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BytesToWrite\n  nameWithType: SerialPort.BytesToWrite\n  fullName: SerialPort.BytesToWrite\n- uid: System.IO.Ports.SerialPort.CDHolding\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: CDHolding\n  nameWithType: SerialPort.CDHolding\n  fullName: SerialPort.CDHolding\n- uid: System.IO.Ports.SerialPort.Close\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Close()\n  nameWithType: SerialPort.Close()\n  fullName: SerialPort.Close()\n- uid: System.IO.Ports.SerialPort.CtsHolding\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: CtsHolding\n  nameWithType: SerialPort.CtsHolding\n  fullName: SerialPort.CtsHolding\n- uid: System.IO.Ports.SerialPort.DataBits\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DataBits\n  nameWithType: SerialPort.DataBits\n  fullName: SerialPort.DataBits\n- uid: System.IO.Ports.SerialPort.DataReceived\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DataReceived\n  nameWithType: SerialPort.DataReceived\n  fullName: SerialPort.DataReceived\n- uid: System.IO.Ports.SerialDataReceivedEventHandler\n  parent: System.IO.Ports\n  isExternal: false\n  name: SerialDataReceivedEventHandler\n  nameWithType: SerialDataReceivedEventHandler\n  fullName: System.IO.Ports.SerialDataReceivedEventHandler\n- uid: System.IO.Ports.SerialPort.DiscardInBuffer\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DiscardInBuffer()\n  nameWithType: SerialPort.DiscardInBuffer()\n  fullName: SerialPort.DiscardInBuffer()\n- uid: System.IO.Ports.SerialPort.DiscardNull\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DiscardNull\n  nameWithType: SerialPort.DiscardNull\n  fullName: SerialPort.DiscardNull\n- uid: System.IO.Ports.SerialPort.DiscardOutBuffer\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DiscardOutBuffer()\n  nameWithType: SerialPort.DiscardOutBuffer()\n  fullName: SerialPort.DiscardOutBuffer()\n- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SerialPort.Dispose(Boolean)\n  fullName: SerialPort.Dispose(Boolean)\n- uid: System.IO.Ports.SerialPort.DsrHolding\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DsrHolding\n  nameWithType: SerialPort.DsrHolding\n  fullName: SerialPort.DsrHolding\n- uid: System.IO.Ports.SerialPort.DtrEnable\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DtrEnable\n  nameWithType: SerialPort.DtrEnable\n  fullName: SerialPort.DtrEnable\n- uid: System.IO.Ports.SerialPort.Encoding\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Encoding\n  nameWithType: SerialPort.Encoding\n  fullName: SerialPort.Encoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.Ports.SerialPort.ErrorReceived\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ErrorReceived\n  nameWithType: SerialPort.ErrorReceived\n  fullName: SerialPort.ErrorReceived\n- uid: System.IO.Ports.SerialErrorReceivedEventHandler\n  parent: System.IO.Ports\n  isExternal: false\n  name: SerialErrorReceivedEventHandler\n  nameWithType: SerialErrorReceivedEventHandler\n  fullName: System.IO.Ports.SerialErrorReceivedEventHandler\n- uid: System.IO.Ports.SerialPort.GetPortNames\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: GetPortNames()\n  nameWithType: SerialPort.GetPortNames()\n  fullName: SerialPort.GetPortNames()\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.Ports.SerialPort.Handshake\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Handshake\n  nameWithType: SerialPort.Handshake\n  fullName: SerialPort.Handshake\n- uid: System.IO.Ports.Handshake\n  parent: System.IO.Ports\n  isExternal: false\n  name: Handshake\n  nameWithType: Handshake\n  fullName: System.IO.Ports.Handshake\n- uid: System.IO.Ports.SerialPort.InfiniteTimeout\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: InfiniteTimeout\n  nameWithType: SerialPort.InfiniteTimeout\n  fullName: SerialPort.InfiniteTimeout\n- uid: System.IO.Ports.SerialPort.IsOpen\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: IsOpen\n  nameWithType: SerialPort.IsOpen\n  fullName: SerialPort.IsOpen\n- uid: System.IO.Ports.SerialPort.NewLine\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: NewLine\n  nameWithType: SerialPort.NewLine\n  fullName: SerialPort.NewLine\n- uid: System.IO.Ports.SerialPort.Open\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Open()\n  nameWithType: SerialPort.Open()\n  fullName: SerialPort.Open()\n- uid: System.IO.Ports.SerialPort.Parity\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Parity\n  nameWithType: SerialPort.Parity\n  fullName: SerialPort.Parity\n- uid: System.IO.Ports.SerialPort.ParityReplace\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ParityReplace\n  nameWithType: SerialPort.ParityReplace\n  fullName: SerialPort.ParityReplace\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.IO.Ports.SerialPort.PinChanged\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: PinChanged\n  nameWithType: SerialPort.PinChanged\n  fullName: SerialPort.PinChanged\n- uid: System.IO.Ports.SerialPinChangedEventHandler\n  parent: System.IO.Ports\n  isExternal: false\n  name: SerialPinChangedEventHandler\n  nameWithType: SerialPinChangedEventHandler\n  fullName: System.IO.Ports.SerialPinChangedEventHandler\n- uid: System.IO.Ports.SerialPort.PortName\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: PortName\n  nameWithType: SerialPort.PortName\n  fullName: SerialPort.PortName\n- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: SerialPort.Read(Byte[], Int32, Int32)\n  fullName: SerialPort.Read(Byte[], Int32, Int32)\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Read(Char[], Int32, Int32)\n  nameWithType: SerialPort.Read(Char[], Int32, Int32)\n  fullName: SerialPort.Read(Char[], Int32, Int32)\n- uid: System.Char\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.Ports.SerialPort.ReadBufferSize\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadBufferSize\n  nameWithType: SerialPort.ReadBufferSize\n  fullName: SerialPort.ReadBufferSize\n- uid: System.IO.Ports.SerialPort.ReadByte\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadByte()\n  nameWithType: SerialPort.ReadByte()\n  fullName: SerialPort.ReadByte()\n- uid: System.IO.Ports.SerialPort.ReadChar\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadChar()\n  nameWithType: SerialPort.ReadChar()\n  fullName: SerialPort.ReadChar()\n- uid: System.IO.Ports.SerialPort.ReadExisting\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadExisting()\n  nameWithType: SerialPort.ReadExisting()\n  fullName: SerialPort.ReadExisting()\n- uid: System.IO.Ports.SerialPort.ReadLine\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadLine()\n  nameWithType: SerialPort.ReadLine()\n  fullName: SerialPort.ReadLine()\n- uid: System.IO.Ports.SerialPort.ReadTimeout\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: SerialPort.ReadTimeout\n  fullName: SerialPort.ReadTimeout\n- uid: System.IO.Ports.SerialPort.ReadTo(System.String)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadTo(String)\n  nameWithType: SerialPort.ReadTo(String)\n  fullName: SerialPort.ReadTo(String)\n- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReceivedBytesThreshold\n  nameWithType: SerialPort.ReceivedBytesThreshold\n  fullName: SerialPort.ReceivedBytesThreshold\n- uid: System.IO.Ports.SerialPort.RtsEnable\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: RtsEnable\n  nameWithType: SerialPort.RtsEnable\n  fullName: SerialPort.RtsEnable\n- uid: System.IO.Ports.SerialPort.StopBits\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: StopBits\n  nameWithType: SerialPort.StopBits\n  fullName: SerialPort.StopBits\n- uid: System.IO.Ports.SerialPort.Write(System.String)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Write(String)\n  nameWithType: SerialPort.Write(String)\n  fullName: SerialPort.Write(String)\n- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: SerialPort.Write(Byte[], Int32, Int32)\n  fullName: SerialPort.Write(Byte[], Int32, Int32)\n- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Write(Char[], Int32, Int32)\n  nameWithType: SerialPort.Write(Char[], Int32, Int32)\n  fullName: SerialPort.Write(Char[], Int32, Int32)\n- uid: System.IO.Ports.SerialPort.WriteBufferSize\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: WriteBufferSize\n  nameWithType: SerialPort.WriteBufferSize\n  fullName: SerialPort.WriteBufferSize\n- uid: System.IO.Ports.SerialPort.WriteLine(System.String)\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: WriteLine(String)\n  nameWithType: SerialPort.WriteLine(String)\n  fullName: SerialPort.WriteLine(String)\n- uid: System.IO.Ports.SerialPort.WriteTimeout\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: SerialPort.WriteTimeout\n  fullName: SerialPort.WriteTimeout\n- uid: System.IO.Ports.SerialPort.#ctor*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: SerialPort\n  nameWithType: SerialPort.SerialPort\n  fullName: SerialPort.SerialPort\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.BaseStream*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BaseStream\n  nameWithType: SerialPort.BaseStream\n  fullName: SerialPort.BaseStream\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.BaudRate*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BaudRate\n  nameWithType: SerialPort.BaudRate\n  fullName: SerialPort.BaudRate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.BreakState*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BreakState\n  nameWithType: SerialPort.BreakState\n  fullName: SerialPort.BreakState\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.BytesToRead*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BytesToRead\n  nameWithType: SerialPort.BytesToRead\n  fullName: SerialPort.BytesToRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.BytesToWrite*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: BytesToWrite\n  nameWithType: SerialPort.BytesToWrite\n  fullName: SerialPort.BytesToWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.CDHolding*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: CDHolding\n  nameWithType: SerialPort.CDHolding\n  fullName: SerialPort.CDHolding\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.Close*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Close\n  nameWithType: SerialPort.Close\n  fullName: SerialPort.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.CtsHolding*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: CtsHolding\n  nameWithType: SerialPort.CtsHolding\n  fullName: SerialPort.CtsHolding\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.DataBits*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DataBits\n  nameWithType: SerialPort.DataBits\n  fullName: SerialPort.DataBits\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.DiscardInBuffer*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DiscardInBuffer\n  nameWithType: SerialPort.DiscardInBuffer\n  fullName: SerialPort.DiscardInBuffer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.DiscardNull*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DiscardNull\n  nameWithType: SerialPort.DiscardNull\n  fullName: SerialPort.DiscardNull\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.DiscardOutBuffer*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DiscardOutBuffer\n  nameWithType: SerialPort.DiscardOutBuffer\n  fullName: SerialPort.DiscardOutBuffer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.Dispose*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Dispose\n  nameWithType: SerialPort.Dispose\n  fullName: SerialPort.Dispose\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.DsrHolding*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DsrHolding\n  nameWithType: SerialPort.DsrHolding\n  fullName: SerialPort.DsrHolding\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.DtrEnable*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: DtrEnable\n  nameWithType: SerialPort.DtrEnable\n  fullName: SerialPort.DtrEnable\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.Encoding*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Encoding\n  nameWithType: SerialPort.Encoding\n  fullName: SerialPort.Encoding\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.GetPortNames*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: GetPortNames\n  nameWithType: SerialPort.GetPortNames\n  fullName: SerialPort.GetPortNames\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.Handshake*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Handshake\n  nameWithType: SerialPort.Handshake\n  fullName: SerialPort.Handshake\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.IsOpen*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: IsOpen\n  nameWithType: SerialPort.IsOpen\n  fullName: SerialPort.IsOpen\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.NewLine*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: NewLine\n  nameWithType: SerialPort.NewLine\n  fullName: SerialPort.NewLine\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.Open*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Open\n  nameWithType: SerialPort.Open\n  fullName: SerialPort.Open\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.Parity*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Parity\n  nameWithType: SerialPort.Parity\n  fullName: SerialPort.Parity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ParityReplace*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ParityReplace\n  nameWithType: SerialPort.ParityReplace\n  fullName: SerialPort.ParityReplace\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.PortName*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: PortName\n  nameWithType: SerialPort.PortName\n  fullName: SerialPort.PortName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.Read*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Read\n  nameWithType: SerialPort.Read\n  fullName: SerialPort.Read\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ReadBufferSize*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadBufferSize\n  nameWithType: SerialPort.ReadBufferSize\n  fullName: SerialPort.ReadBufferSize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ReadByte*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadByte\n  nameWithType: SerialPort.ReadByte\n  fullName: SerialPort.ReadByte\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ReadChar*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadChar\n  nameWithType: SerialPort.ReadChar\n  fullName: SerialPort.ReadChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ReadExisting*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadExisting\n  nameWithType: SerialPort.ReadExisting\n  fullName: SerialPort.ReadExisting\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ReadLine*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadLine\n  nameWithType: SerialPort.ReadLine\n  fullName: SerialPort.ReadLine\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ReadTimeout*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: SerialPort.ReadTimeout\n  fullName: SerialPort.ReadTimeout\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ReadTo*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReadTo\n  nameWithType: SerialPort.ReadTo\n  fullName: SerialPort.ReadTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: ReceivedBytesThreshold\n  nameWithType: SerialPort.ReceivedBytesThreshold\n  fullName: SerialPort.ReceivedBytesThreshold\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.RtsEnable*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: RtsEnable\n  nameWithType: SerialPort.RtsEnable\n  fullName: SerialPort.RtsEnable\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.StopBits*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: StopBits\n  nameWithType: SerialPort.StopBits\n  fullName: SerialPort.StopBits\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.Write*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: Write\n  nameWithType: SerialPort.Write\n  fullName: SerialPort.Write\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.WriteBufferSize*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: WriteBufferSize\n  nameWithType: SerialPort.WriteBufferSize\n  fullName: SerialPort.WriteBufferSize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.WriteLine*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: WriteLine\n  nameWithType: SerialPort.WriteLine\n  fullName: SerialPort.WriteLine\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.IO.Ports.SerialPort.WriteTimeout*\n  parent: System.IO.Ports.SerialPort\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: SerialPort.WriteTimeout\n  fullName: SerialPort.WriteTimeout\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Ports/SerialPort.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n"}