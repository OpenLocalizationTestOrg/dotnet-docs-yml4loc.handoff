### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1
  commentId: T:System.ServiceModel.Channels.ChannelFactoryBase`1
  id: ChannelFactoryBase`1
  children:
  - System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor
  - System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel
  langs:
  - csharp
  name: ChannelFactoryBase<TChannel>
  nameWithType: ChannelFactoryBase<TChannel>
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.
  remarks: "The channels created by channel factories on the client are accepted on the server by channel listeners. Once the channel connection is established between client and service, they can communicate by exchanging messages.  \n  \n The <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> uses the specified address as the destination for outgoing messages. The ServiceAddress.Uri property is used as the To header in the message. The ServiceReference.Via property is used as the physical destination to send messages to. This is typically the same as the ServiceAddress.Uri value."
  syntax:
    content: 'public abstract class ChannelFactoryBase<TChannel> : System.ServiceModel.Channels.ChannelFactoryBase, System.ServiceModel.Channels.IChannelFactory<TChannel>'
    typeParameters:
    - id: TChannel
      description: The type of channel the factory produces.
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Channels.ChannelManagerBase
  - System.ServiceModel.Channels.ChannelFactoryBase
  implements:
  - System.ServiceModel.Channels.IChannelFactory{TChannel}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout
  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout
  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout
  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout
  - System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnOpened
  - System.ServiceModel.Channels.CommunicationObject.OnOpening
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: ChannelFactoryBase<TChannel>()
  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>()
  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ChannelFactoryBase`1"></xref> class.
  remarks: The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.
  syntax:
    content: protected ChannelFactoryBase ();
    parameters: []
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)
  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)
  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ChannelFactoryBase`1"></xref> class with the default communication timeouts specified.
  remarks: Use <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.
  syntax:
    content: protected ChannelFactoryBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: The <xref href="System.ServiceModel.IDefaultCommunicationTimeouts"></xref> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)
  id: CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: CreateChannel(EndpointAddress)
  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)
  fullName: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a particular type of channel with a specified endpoint address.
  remarks: "This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked. This method cannot be overridden by a derived class.  \n  \n This uses <xref:System.ServiceModel.EndpointAddress.Uri%2A> as the transport address to which messages are sent on the output channel."
  syntax:
    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> of the remote endpoint to which the channel sends messages.
    return:
      type: TChannel
      description: A channel of type <code>TChannel</code> with the specified <code>address</code>.
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>address</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)
  fullName: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a particular type of channel with specified transport and endpoint addresses.
  remarks: This method calls <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> when invoked.
  syntax:
    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> of the remote endpoint to which the channel sends messages.
    - id: via
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the transport address to which messages are sent on the output channel.
    return:
      type: TChannel
      description: A channel of type <code>TChannel</code> with the specified remote and transport addresses.
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ChannelFactoryBase<TChannel>.OnAbort()
  fullName: ChannelFactoryBase<TChannel>.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Aborts each channel managed by the channel factory.
  remarks: This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A>.
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the on-close operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous completion of the on-close operation.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous on-close operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous on-close operation.
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)
  fullName: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Closes all the channels associated with the channel factory within a specified interval of time.
  remarks: "This method sequentially attempts to close all of the active channels associated with the channel factory in no particular order. The timeout parameter is the cumulative amount of time available for closing all of the channels. If a graceful close of one of the channels fails (for example, if the channel is faulted causing an exception to be thrown) then this operation fails and does not attempt to close the remaining channels. Failure in this method causes the factory and any remaining channels to be aborted rather than closed.  \n  \n This method is called by <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A>."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the on-close operation has to complete before timing out.
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: OnCreateChannel(EndpointAddress, Uri)
  nameWithType: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)
  fullName: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When implemented in a derived class, provides an extensibility point when creating channels.
  remarks: This method is called by <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> when invoked.
  syntax:
    content: protected abstract TChannel OnCreateChannel (System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> of the remote endpoint to which the channel sends messages.
    - id: via
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the transport address to which messages are sent on the output channel.
    return:
      type: TChannel
      description: A channel of type <code>TChannel</code> with the specified addresses.
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)
  fullName: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"></xref> method.
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel
  id: ValidateCreateChannel
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  name: ValidateCreateChannel()
  nameWithType: ChannelFactoryBase<TChannel>.ValidateCreateChannel()
  fullName: ChannelFactoryBase<TChannel>.ValidateCreateChannel()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Confirms that the channel factory is opened and ready to create channels.
  remarks: The method throws one of the exceptions listed and checks for the conditions in the order they are listed in the table.
  syntax:
    content: protected void ValidateCreateChannel ();
    parameters: []
  overload: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current channel factory is not in the <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Channels.ChannelFactoryBase
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ChannelFactoryBase
  nameWithType: ChannelFactoryBase
  fullName: System.ServiceModel.Channels.ChannelFactoryBase
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  parent: System.ServiceModel
  isExternal: false
  name: CommunicationObjectFaultedException
  nameWithType: CommunicationObjectFaultedException
  fullName: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: ChannelFactoryBase<TChannel>()
  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>()
  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>()
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)
  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)
  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>(IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: false
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: CreateChannel(EndpointAddress)
  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)
  fullName: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)
- uid: TChannel
  isExternal: true
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)
  fullName: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnAbort()
  nameWithType: ChannelFactoryBase<TChannel>.OnAbort()
  fullName: ChannelFactoryBase<TChannel>.OnAbort()
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)
  fullName: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnCreateChannel(EndpointAddress, Uri)
  nameWithType: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)
  fullName: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)
  fullName: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: ValidateCreateChannel()
  nameWithType: ChannelFactoryBase<TChannel>.ValidateCreateChannel()
  fullName: ChannelFactoryBase<TChannel>.ValidateCreateChannel()
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor*
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: ChannelFactoryBase<TChannel>
  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>
  fullName: ChannelFactoryBase<TChannel>.ChannelFactoryBase<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel*
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: CreateChannel
  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel
  fullName: ChannelFactoryBase<TChannel>.CreateChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort*
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnAbort
  nameWithType: ChannelFactoryBase<TChannel>.OnAbort
  fullName: ChannelFactoryBase<TChannel>.OnAbort
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose*
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnBeginClose
  nameWithType: ChannelFactoryBase<TChannel>.OnBeginClose
  fullName: ChannelFactoryBase<TChannel>.OnBeginClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose*
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnClose
  nameWithType: ChannelFactoryBase<TChannel>.OnClose
  fullName: ChannelFactoryBase<TChannel>.OnClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel*
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnCreateChannel
  nameWithType: ChannelFactoryBase<TChannel>.OnCreateChannel
  fullName: ChannelFactoryBase<TChannel>.OnCreateChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose*
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: OnEndClose
  nameWithType: ChannelFactoryBase<TChannel>.OnEndClose
  fullName: ChannelFactoryBase<TChannel>.OnEndClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel*
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  isExternal: false
  name: ValidateCreateChannel
  nameWithType: ChannelFactoryBase<TChannel>.ValidateCreateChannel
  fullName: ChannelFactoryBase<TChannel>.ValidateCreateChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelFactoryBase`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: CommunicationObject.Abort()
  fullName: CommunicationObject.Abort()
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  nameWithType: CommunicationObject.Close()
  fullName: CommunicationObject.Close()
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
  fullName: CommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  nameWithType: CommunicationObject.Closed
  fullName: CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  nameWithType: CommunicationObject.Closing
  fullName: CommunicationObject.Closing
- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelFactoryBase.DefaultCloseTimeout
  fullName: ChannelFactoryBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelFactoryBase.DefaultOpenTimeout
  fullName: ChannelFactoryBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndClose(IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
  fullName: CommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndOpen(IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
  fullName: CommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  nameWithType: CommunicationObject.Fault()
  fullName: CommunicationObject.Fault()
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: CommunicationObject.Faulted
  fullName: CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  nameWithType: CommunicationObject.GetCommunicationObjectType()
  fullName: CommunicationObject.GetCommunicationObjectType()
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  nameWithType: CommunicationObject.IsDisposed
  fullName: CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosed()
  nameWithType: CommunicationObject.OnClosed()
  fullName: CommunicationObject.OnClosed()
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  nameWithType: CommunicationObject.OnClosing()
  fullName: CommunicationObject.OnClosing()
- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)
  fullName: CommunicationObject.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  nameWithType: CommunicationObject.OnFaulted()
  fullName: CommunicationObject.OnFaulted()
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: CommunicationObject.OnOpen(TimeSpan)
  fullName: CommunicationObject.OnOpen(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpened()
  nameWithType: CommunicationObject.OnOpened()
  fullName: CommunicationObject.OnOpened()
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpening()
  nameWithType: CommunicationObject.OnOpening()
  fullName: CommunicationObject.OnOpening()
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  nameWithType: CommunicationObject.Open()
  fullName: CommunicationObject.Open()
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open(TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
  fullName: CommunicationObject.Open(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  nameWithType: CommunicationObject.Opened
  fullName: CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  nameWithType: CommunicationObject.Opening
  fullName: CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  nameWithType: CommunicationObject.State
  fullName: CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  nameWithType: CommunicationObject.ThisLock
  fullName: CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: CommunicationObject.ThrowIfDisposed()
  fullName: CommunicationObject.ThrowIfDisposed()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()
  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()
  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()
- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelFactoryBase.DefaultReceiveTimeout
  fullName: ChannelFactoryBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelFactoryBase.DefaultSendTimeout
  fullName: ChannelFactoryBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  parent: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: IDefaultCommunicationTimeouts.CloseTimeout
  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout
  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout
- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  parent: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: IDefaultCommunicationTimeouts.OpenTimeout
  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout
  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout
- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: IDefaultCommunicationTimeouts.ReceiveTimeout
  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout
  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  parent: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: IDefaultCommunicationTimeouts.SendTimeout
  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout
  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout
- uid: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: GetProperty<T>()
  nameWithType: ChannelFactoryBase.GetProperty<T>()
  fullName: ChannelFactoryBase.GetProperty<T>()
- uid: System.ServiceModel.Channels.IChannelFactory`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
