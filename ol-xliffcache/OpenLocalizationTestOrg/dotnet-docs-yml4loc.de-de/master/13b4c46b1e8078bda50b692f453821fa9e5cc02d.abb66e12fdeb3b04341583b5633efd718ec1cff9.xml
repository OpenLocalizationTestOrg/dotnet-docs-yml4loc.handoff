{"nodes":[{"content":"Describes the node types for the nodes of an expression tree.","nodes":[{"pos":[0,61],"content":"Describes the node types for the nodes of an expression tree.","nodes":[{"content":"Describes the node types for the nodes of an expression tree.","pos":[0,61]}]}],"pos":[4978,5040],"yaml":true},{"content":"For more information about each enumeration value of this type, see section 4.4 of expr-tree-spec.doc or expr-tree-spec.pdf on the [Microsoft Dynamic Language Runtime](http://go.microsoft.com/fwlink/?LinkId=230775) page of the Codeplex website.","nodes":[{"pos":[0,244],"content":"For more information about each enumeration value of this type, see section 4.4 of expr-tree-spec.doc or expr-tree-spec.pdf on the <bpt id=\"p1\">[</bpt>Microsoft Dynamic Language Runtime<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=230775)</ept> page of the Codeplex website.","source":"For more information about each enumeration value of this type, see section 4.4 of expr-tree-spec.doc or expr-tree-spec.pdf on the [Microsoft Dynamic Language Runtime](http://go.microsoft.com/fwlink/?LinkId=230775) page of the Codeplex website."}],"pos":[5051,5296],"yaml":true,"extradata":"MT"},{"content":"An addition operation, such as <code>a + b</code>, without overflow checking, for numeric operands.","nodes":[{"pos":[0,99],"content":"An addition operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a + b</ph><ept id=\"p1\">&lt;/code&gt;</ept>, without overflow checking, for numeric operands.","source":"An addition operation, such as <code>a + b</code>, without overflow checking, for numeric operands."}],"pos":[6857,6957],"yaml":true},{"content":"An addition compound assignment operation, such as <code>(a += b)</code>, without overflow checking, for numeric operands.","nodes":[{"pos":[0,122],"content":"An addition compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a += b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, without overflow checking, for numeric operands.","source":"An addition compound assignment operation, such as <code>(a += b)</code>, without overflow checking, for numeric operands."}],"pos":[8465,8588],"yaml":true},{"content":"An addition compound assignment operation, such as <code>(a += b)</code>, with overflow checking, for numeric operands.","nodes":[{"pos":[0,119],"content":"An addition compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a += b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, with overflow checking, for numeric operands.","source":"An addition compound assignment operation, such as <code>(a += b)</code>, with overflow checking, for numeric operands."}],"pos":[10144,10264],"yaml":true},{"content":"An addition operation, such as <code>(a + b)</code>, with overflow checking, for numeric operands.","nodes":[{"pos":[0,98],"content":"An addition operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a + b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, with overflow checking, for numeric operands.","source":"An addition operation, such as <code>(a + b)</code>, with overflow checking, for numeric operands."}],"pos":[11791,11890],"yaml":true},{"content":"A bitwise or logical `AND` operation, such as <code>(a & b)</code> in C# and <code>(a And b)</code> in Visual Basic.","nodes":[{"pos":[0,116],"content":"A bitwise or logical <ph id=\"ph1\">`AND`</ph> operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">(a &amp; b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">(a And b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A bitwise or logical `AND` operation, such as <code>(a & b)</code> in C# and <code>(a And b)</code> in Visual Basic."}],"pos":[13369,13486],"yaml":true},{"content":"A conditional `AND` operation that evaluates the second operand only if the first operand evaluates to `true`. It corresponds to <code>(a && b)</code> in C# and <code>(a AndAlso b)</code> in Visual Basic.","nodes":[{"pos":[0,204],"content":"A conditional `AND` operation that evaluates the second operand only if the first operand evaluates to `true`. It corresponds to <code>(a && b)</code> in C# and <code>(a AndAlso b)</code> in Visual Basic.","nodes":[{"content":"A conditional <ph id=\"ph1\">`AND`</ph> operation that evaluates the second operand only if the first operand evaluates to <ph id=\"ph2\">`true`</ph>.","pos":[0,110],"source":"A conditional `AND` operation that evaluates the second operand only if the first operand evaluates to `true`."},{"content":"It corresponds to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &amp;&amp; b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">(a AndAlso b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","pos":[111,204],"source":" It corresponds to <code>(a && b)</code> in C# and <code>(a AndAlso b)</code> in Visual Basic."}]}],"pos":[14982,15187],"yaml":true},{"content":"A bitwise or logical `AND` compound assignment operation, such as <code>(a &= b)</code> in C#.","nodes":[{"pos":[0,94],"content":"A bitwise or logical <ph id=\"ph1\">`AND`</ph> compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">(a &amp;= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C#.","source":"A bitwise or logical `AND` compound assignment operation, such as <code>(a &= b)</code> in C#."}],"pos":[16699,16794],"yaml":true},{"content":"An indexing operation in a one-dimensional array, such as <code>array[index]</code> in C# or <code>array(index)</code> in Visual Basic.","nodes":[{"pos":[0,135],"content":"An indexing operation in a one-dimensional array, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array[index]</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">array(index)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"An indexing operation in a one-dimensional array, such as <code>array[index]</code> in C# or <code>array(index)</code> in Visual Basic."}],"pos":[18314,18450],"yaml":true},{"content":"An operation that obtains the length of a one-dimensional array, such as <code>array.Length</code>.","nodes":[{"pos":[0,99],"content":"An operation that obtains the length of a one-dimensional array, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array.Length</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An operation that obtains the length of a one-dimensional array, such as <code>array.Length</code>."}],"pos":[19977,20077],"yaml":true},{"content":"An assignment operation, such as <code>(a = b)</code>.","nodes":[{"pos":[0,54],"content":"An assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a = b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An assignment operation, such as <code>(a = b)</code>."}],"pos":[21575,21630],"yaml":true},{"content":"A block of expressions.","nodes":[{"pos":[0,23],"content":"A block of expressions.","nodes":[{"content":"A block of expressions.","pos":[0,23]}]}],"pos":[23117,23141],"yaml":true},{"content":"A method call, such as in the <code>obj.sampleMethod()</code> expression.","nodes":[{"pos":[0,73],"content":"A method call, such as in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj.sampleMethod()</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression.","source":"A method call, such as in the <code>obj.sampleMethod()</code> expression."}],"pos":[24621,24695],"yaml":true},{"content":"A node that represents a null coalescing operation, such as <code>(a ?? b)</code> in C# or <code>If(a, b)</code> in Visual Basic.","nodes":[{"pos":[0,129],"content":"A node that represents a null coalescing operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a ?? b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">If(a, b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A node that represents a null coalescing operation, such as <code>(a ?? b)</code> in C# or <code>If(a, b)</code> in Visual Basic."}],"pos":[26198,26328],"yaml":true},{"content":"A conditional operation, such as <code>a > b ? a : b</code> in C# or <code>If(a > b, a, b)</code> in Visual Basic.","nodes":[{"pos":[0,114],"content":"A conditional operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a &gt; b ? a : b</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">If(a &gt; b, a, b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A conditional operation, such as <code>a > b ? a : b</code> in C# or <code>If(a > b, a, b)</code> in Visual Basic."}],"pos":[27853,27970],"yaml":true},{"content":"A constant value.","nodes":[{"pos":[0,17],"content":"A constant value.","nodes":[{"content":"A constant value.","pos":[0,17]}]}],"pos":[29480,29498],"yaml":true},{"content":"A cast or conversion operation, such as <code>(SampleType)obj</code> in C#or <code>CType(obj, SampleType)</code> in Visual Basic. For a numeric conversion, if the converted value is too large for the destination type, no exception is thrown.","nodes":[{"pos":[0,241],"content":"A cast or conversion operation, such as <code>(SampleType)obj</code> in C#or <code>CType(obj, SampleType)</code> in Visual Basic. For a numeric conversion, if the converted value is too large for the destination type, no exception is thrown.","nodes":[{"content":"A cast or conversion operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(SampleType)obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C#or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">CType(obj, SampleType)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","pos":[0,129],"source":"A cast or conversion operation, such as <code>(SampleType)obj</code> in C#or <code>CType(obj, SampleType)</code> in Visual Basic."},{"content":"For a numeric conversion, if the converted value is too large for the destination type, no exception is thrown.","pos":[130,241]}]}],"pos":[30999,31241],"yaml":true},{"content":"A cast or conversion operation, such as <code>(SampleType)obj</code> in C#or <code>CType(obj, SampleType)</code> in Visual Basic. For a numeric conversion, if the converted value does not fit the destination type, an exception is thrown.","nodes":[{"pos":[0,237],"content":"A cast or conversion operation, such as <code>(SampleType)obj</code> in C#or <code>CType(obj, SampleType)</code> in Visual Basic. For a numeric conversion, if the converted value does not fit the destination type, an exception is thrown.","nodes":[{"content":"A cast or conversion operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(SampleType)obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C#or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">CType(obj, SampleType)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","pos":[0,129],"source":"A cast or conversion operation, such as <code>(SampleType)obj</code> in C#or <code>CType(obj, SampleType)</code> in Visual Basic."},{"content":"For a numeric conversion, if the converted value does not fit the destination type, an exception is thrown.","pos":[130,237]}]}],"pos":[32783,33021],"yaml":true},{"content":"Debugging information.","nodes":[{"pos":[0,22],"content":"Debugging information.","nodes":[{"content":"Debugging information.","pos":[0,22]}]}],"pos":[34540,34563],"yaml":true},{"content":"A unary decrement operation, such as <code>(a - 1)</code> in C# and Visual Basic. The object <code>a</code> should not be modified in place.","nodes":[{"pos":[0,140],"content":"A unary decrement operation, such as <code>(a - 1)</code> in C# and Visual Basic. The object <code>a</code> should not be modified in place.","nodes":[{"content":"A unary decrement operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a - 1)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# and Visual Basic.","pos":[0,81],"source":"A unary decrement operation, such as <code>(a - 1)</code> in C# and Visual Basic."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should not be modified in place.","pos":[82,140],"source":" The object <code>a</code> should not be modified in place."}]}],"pos":[36077,36218],"yaml":true},{"content":"A default value.","nodes":[{"pos":[0,16],"content":"A default value.","nodes":[{"content":"A default value.","pos":[0,16]}]}],"pos":[37720,37737],"yaml":true},{"content":"A division operation, such as <code>(a / b)</code>, for numeric operands.","nodes":[{"pos":[0,73],"content":"A division operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a / b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, for numeric operands.","source":"A division operation, such as <code>(a / b)</code>, for numeric operands."}],"pos":[39231,39305],"yaml":true},{"content":"An division compound assignment operation, such as <code>(a /= b)</code>, for numeric operands.","nodes":[{"pos":[0,95],"content":"An division compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a /= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, for numeric operands.","source":"An division compound assignment operation, such as <code>(a /= b)</code>, for numeric operands."}],"pos":[40834,40930],"yaml":true},{"content":"A dynamic operation.","nodes":[{"pos":[0,20],"content":"A dynamic operation.","nodes":[{"content":"A dynamic operation.","pos":[0,20]}]}],"pos":[42435,42456],"yaml":true},{"content":"A node that represents an equality comparison, such as <code>(a == b)</code> in C# or <code>(a = b)</code> in Visual Basic.","nodes":[{"pos":[0,123],"content":"A node that represents an equality comparison, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a == b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">(a = b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A node that represents an equality comparison, such as <code>(a == b)</code> in C# or <code>(a = b)</code> in Visual Basic."}],"pos":[43944,44068],"yaml":true},{"content":"A bitwise or logical `XOR` operation, such as <code>(a ^ b)</code> in C# or <code>(a Xor b)</code> in Visual Basic.","nodes":[{"pos":[0,115],"content":"A bitwise or logical <ph id=\"ph1\">`XOR`</ph> operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">(a ^ b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">(a Xor b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A bitwise or logical `XOR` operation, such as <code>(a ^ b)</code> in C# or <code>(a Xor b)</code> in Visual Basic."}],"pos":[45590,45706],"yaml":true},{"content":"A bitwise or logical `XOR` compound assignment operation, such as <code>(a ^= b)</code> in C#.","nodes":[{"pos":[0,94],"content":"A bitwise or logical <ph id=\"ph1\">`XOR`</ph> compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">(a ^= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C#.","source":"A bitwise or logical `XOR` compound assignment operation, such as <code>(a ^= b)</code> in C#."}],"pos":[47270,47365],"yaml":true},{"content":"An extension expression.","nodes":[{"pos":[0,24],"content":"An extension expression.","nodes":[{"content":"An extension expression.","pos":[0,24]}]}],"pos":[48887,48912],"yaml":true},{"content":"A \"go to\" expression, such as <code>goto Label</code> in C# or <code>GoTo Label</code> in Visual Basic.","nodes":[{"pos":[0,103],"content":"A \"go to\" expression, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">goto Label</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">GoTo Label</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A \"go to\" expression, such as <code>goto Label</code> in C# or <code>GoTo Label</code> in Visual Basic."}],"pos":[50396,50500],"yaml":true},{"content":"A \"greater than\" comparison, such as <code>(a > b)</code>.","nodes":[{"pos":[0,58],"content":"A \"greater than\" comparison, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &gt; b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A \"greater than\" comparison, such as <code>(a > b)</code>."}],"pos":[52021,52080],"yaml":true},{"content":"A \"greater than or equal to\" comparison, such as <code>(a >= b)</code>.","nodes":[{"pos":[0,71],"content":"A \"greater than or equal to\" comparison, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &gt;= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A \"greater than or equal to\" comparison, such as <code>(a >= b)</code>."}],"pos":[53650,53722],"yaml":true},{"content":"A unary increment operation, such as <code>(a + 1)</code> in C# and Visual Basic. The object <code>a</code> should not be modified in place.","nodes":[{"pos":[0,140],"content":"A unary increment operation, such as <code>(a + 1)</code> in C# and Visual Basic. The object <code>a</code> should not be modified in place.","nodes":[{"content":"A unary increment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a + 1)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# and Visual Basic.","pos":[0,81],"source":"A unary increment operation, such as <code>(a + 1)</code> in C# and Visual Basic."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should not be modified in place.","pos":[82,140],"source":" The object <code>a</code> should not be modified in place."}]}],"pos":[55245,55386],"yaml":true},{"content":"An index operation or an operation that accesses a property that takes arguments.","nodes":[{"pos":[0,81],"content":"An index operation or an operation that accesses a property that takes arguments.","nodes":[{"content":"An index operation or an operation that accesses a property that takes arguments.","pos":[0,81]}]}],"pos":[56876,56958],"yaml":true},{"content":"An operation that invokes a delegate or lambda expression, such as <code>sampleDelegate.Invoke()</code>.","nodes":[{"pos":[0,104],"content":"An operation that invokes a delegate or lambda expression, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sampleDelegate.Invoke()</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An operation that invokes a delegate or lambda expression, such as <code>sampleDelegate.Invoke()</code>."}],"pos":[58450,58555],"yaml":true},{"content":"A `false` condition value.","nodes":[{"pos":[0,26],"content":"A <ph id=\"ph1\">`false`</ph> condition value.","source":"A `false` condition value."}],"pos":[60054,60081],"yaml":true},{"content":"A `true` condition value.","nodes":[{"pos":[0,25],"content":"A <ph id=\"ph1\">`true`</ph> condition value.","source":"A `true` condition value."}],"pos":[61575,61601],"yaml":true},{"content":"A label.","nodes":[{"pos":[0,8],"content":"A label.","nodes":[{"content":"A label.","pos":[0,8]}]}],"pos":[63088,63097],"yaml":true},{"content":"A lambda expression, such as <code>a => a + a</code> in C# or <code>Function(a) a + a</code> in Visual Basic.","nodes":[{"pos":[0,109],"content":"A lambda expression, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a =&gt; a + a</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">Function(a) a + a</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A lambda expression, such as <code>a => a + a</code> in C# or <code>Function(a) a + a</code> in Visual Basic."}],"pos":[64589,64699],"yaml":true},{"content":"A bitwise left-shift operation, such as <code>(a << b)</code>.","nodes":[{"pos":[0,62],"content":"A bitwise left-shift operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &lt;&lt; b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A bitwise left-shift operation, such as <code>(a << b)</code>."}],"pos":[66210,66273],"yaml":true},{"content":"A bitwise left-shift compound assignment, such as <code>(a <<= b)</code>.","nodes":[{"pos":[0,73],"content":"A bitwise left-shift compound assignment, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &lt;&lt;= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A bitwise left-shift compound assignment, such as <code>(a <<= b)</code>."}],"pos":[67823,67897],"yaml":true},{"content":"A \"less than\" comparison, such as <code>(a < b)</code>.","nodes":[{"pos":[0,55],"content":"A \"less than\" comparison, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &lt; b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A \"less than\" comparison, such as <code>(a < b)</code>."}],"pos":[69411,69467],"yaml":true},{"content":"A \"less than or equal to\" comparison, such as <code>(a <= b)</code>.","nodes":[{"pos":[0,68],"content":"A \"less than or equal to\" comparison, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &lt;= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A \"less than or equal to\" comparison, such as <code>(a <= b)</code>."}],"pos":[71016,71085],"yaml":true},{"content":"An operation that creates a new <xref href=\"System.Collections.IEnumerable\"></xref> object and initializes it from a list of elements, such as <code>new List<SampleType>(){ a, b, c }</code> in C# or <code>Dim sampleList = { a, b, c }</code> in Visual Basic.","nodes":[{"pos":[0,257],"content":"An operation that creates a new <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerable\"&gt;&lt;/xref&gt;</ph> object and initializes it from a list of elements, such as <ph id=\"ph2\">&lt;code&gt;</ph><ph id=\"ph3\">new List</ph><ph id=\"ph4\">&lt;SampleType&gt;</ph><ph id=\"ph5\">(){ a, b, c }</ph><ph id=\"ph6\">&lt;/code&gt;</ph> in C# or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph7\">Dim sampleList = { a, b, c }</ph><ept id=\"p1\">&lt;/code&gt;</ept> in Visual Basic.","source":"An operation that creates a new <xref href=\"System.Collections.IEnumerable\"></xref> object and initializes it from a list of elements, such as <code>new List<SampleType>(){ a, b, c }</code> in C# or <code>Dim sampleList = { a, b, c }</code> in Visual Basic."}],"pos":[72599,72857],"yaml":true},{"content":"A loop, such as <code>for</code> or <code>while</code>.","nodes":[{"pos":[0,55],"content":"A loop, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">for</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">while</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A loop, such as <code>for</code> or <code>while</code>."}],"pos":[74340,74396],"yaml":true},{"content":"An operation that reads from a field or property, such as <code>obj.SampleProperty</code>.","nodes":[{"pos":[0,90],"content":"An operation that reads from a field or property, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj.SampleProperty</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An operation that reads from a field or property, such as <code>obj.SampleProperty</code>."}],"pos":[75923,76014],"yaml":true},{"content":"An operation that creates a new object and initializes one or more of its members, such as <code>new Point { X = 1, Y = 2 }</code> in C# or <code>New Point With {.X = 1, .Y = 2}</code> in Visual Basic.","nodes":[{"pos":[0,201],"content":"An operation that creates a new object and initializes one or more of its members, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">new Point { X = 1, Y = 2 }</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">New Point With {.X = 1, .Y = 2}</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"An operation that creates a new object and initializes one or more of its members, such as <code>new Point { X = 1, Y = 2 }</code> in C# or <code>New Point With {.X = 1, .Y = 2}</code> in Visual Basic."}],"pos":[77537,77739],"yaml":true},{"content":"An arithmetic remainder operation, such as <code>(a % b)</code> in C# or <code>(a Mod b)</code> in Visual Basic.","nodes":[{"pos":[0,112],"content":"An arithmetic remainder operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a % b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">(a Mod b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"An arithmetic remainder operation, such as <code>(a % b)</code> in C# or <code>(a Mod b)</code> in Visual Basic."}],"pos":[79236,79349],"yaml":true},{"content":"An arithmetic remainder compound assignment operation, such as <code>(a %= b)</code> in C#.","nodes":[{"pos":[0,91],"content":"An arithmetic remainder compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a %= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C#.","source":"An arithmetic remainder compound assignment operation, such as <code>(a %= b)</code> in C#."}],"pos":[80878,80970],"yaml":true},{"content":"A multiplication operation, such as <code>(a * b)</code>, without overflow checking, for numeric operands.","nodes":[{"pos":[0,106],"content":"A multiplication operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a * b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, without overflow checking, for numeric operands.","source":"A multiplication operation, such as <code>(a * b)</code>, without overflow checking, for numeric operands."}],"pos":[82481,82588],"yaml":true},{"content":"A multiplication compound assignment operation, such as <code>(a *= b)</code>, without overflow checking, for numeric operands.","nodes":[{"pos":[0,127],"content":"A multiplication compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a *= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, without overflow checking, for numeric operands.","source":"A multiplication compound assignment operation, such as <code>(a *= b)</code>, without overflow checking, for numeric operands."}],"pos":[84131,84259],"yaml":true},{"content":"A multiplication compound assignment operation, such as <code>(a *= b)</code>, that has overflow checking, for numeric operands.","nodes":[{"pos":[0,128],"content":"A multiplication compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a *= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, that has overflow checking, for numeric operands.","source":"A multiplication compound assignment operation, such as <code>(a *= b)</code>, that has overflow checking, for numeric operands."}],"pos":[85850,85979],"yaml":true},{"content":"An multiplication operation, such as <code>(a * b)</code>, that has overflow checking, for numeric operands.","nodes":[{"pos":[0,108],"content":"An multiplication operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a * b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, that has overflow checking, for numeric operands.","source":"An multiplication operation, such as <code>(a * b)</code>, that has overflow checking, for numeric operands."}],"pos":[87541,87650],"yaml":true},{"content":"An arithmetic negation operation, such as <code>(-a)</code>. The object <code>a</code> should not be modified in place.","nodes":[{"pos":[0,119],"content":"An arithmetic negation operation, such as <code>(-a)</code>. The object <code>a</code> should not be modified in place.","nodes":[{"content":"An arithmetic negation operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(-a)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,60],"source":"An arithmetic negation operation, such as <code>(-a)</code>."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should not be modified in place.","pos":[61,119],"source":" The object <code>a</code> should not be modified in place."}]}],"pos":[89152,89272],"yaml":true},{"content":"An arithmetic negation operation, such as <code>(-a)</code>, that has overflow checking. The object <code>a</code> should not be modified in place.","nodes":[{"pos":[0,147],"content":"An arithmetic negation operation, such as <code>(-a)</code>, that has overflow checking. The object <code>a</code> should not be modified in place.","nodes":[{"content":"An arithmetic negation operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(-a)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, that has overflow checking.","pos":[0,88],"source":"An arithmetic negation operation, such as <code>(-a)</code>, that has overflow checking."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should not be modified in place.","pos":[89,147],"source":" The object <code>a</code> should not be modified in place."}]}],"pos":[90807,90955],"yaml":true},{"content":"An operation that calls a constructor to create a new object, such as <code>new SampleType()</code>.","nodes":[{"pos":[0,100],"content":"An operation that calls a constructor to create a new object, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">new SampleType()</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An operation that calls a constructor to create a new object, such as <code>new SampleType()</code>."}],"pos":[92437,92538],"yaml":true},{"content":"An operation that creates a new array, in which the bounds for each dimension are specified, such as <code>new SampleType[dim1, dim2]</code> in C# or <code>New SampleType(dim1, dim2)</code> in Visual Basic.","nodes":[{"pos":[0,206],"content":"An operation that creates a new array, in which the bounds for each dimension are specified, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">new SampleType[dim1, dim2]</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">New SampleType(dim1, dim2)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"An operation that creates a new array, in which the bounds for each dimension are specified, such as <code>new SampleType[dim1, dim2]</code> in C# or <code>New SampleType(dim1, dim2)</code> in Visual Basic."}],"pos":[94076,94283],"yaml":true},{"content":"An operation that creates a new one-dimensional array and initializes it from a list of elements, such as <code>new SampleType[]{a, b, c}</code> in C# or <code>New SampleType(){a, b, c}</code> in Visual Basic.","nodes":[{"pos":[0,209],"content":"An operation that creates a new one-dimensional array and initializes it from a list of elements, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">new SampleType[]{a, b, c}</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">New SampleType(){a, b, c}</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"An operation that creates a new one-dimensional array and initializes it from a list of elements, such as <code>new SampleType[]{a, b, c}</code> in C# or <code>New SampleType(){a, b, c}</code> in Visual Basic."}],"pos":[95820,96030],"yaml":true},{"content":"A bitwise complement or logical negation operation. In C#, it is equivalent to <code>(~a)</code> for integral types and to <code>(!a)</code> for Boolean values. In Visual Basic, it is equivalent to <code>(Not a)</code>. The object <code>a</code> should not be modified in place.","nodes":[{"pos":[0,278],"content":"A bitwise complement or logical negation operation. In C#, it is equivalent to <code>(~a)</code> for integral types and to <code>(!a)</code> for Boolean values. In Visual Basic, it is equivalent to <code>(Not a)</code>. The object <code>a</code> should not be modified in place.","nodes":[{"content":"A bitwise complement or logical negation operation.","pos":[0,51]},{"content":"In C#, it is equivalent to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(~a)</ph><ept id=\"p1\">&lt;/code&gt;</ept> for integral types and to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">(!a)</ph><ept id=\"p2\">&lt;/code&gt;</ept> for Boolean values.","pos":[52,160],"source":" In C#, it is equivalent to <code>(~a)</code> for integral types and to <code>(!a)</code> for Boolean values."},{"content":"In Visual Basic, it is equivalent to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(Not a)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[161,219],"source":" In Visual Basic, it is equivalent to <code>(Not a)</code>."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should not be modified in place.","pos":[220,278],"source":" The object <code>a</code> should not be modified in place."}]}],"pos":[97511,97790],"yaml":true},{"content":"An inequality comparison, such as <code>(a != b)</code> in C# or <code>(a <> b)</code> in Visual Basic.","nodes":[{"pos":[0,103],"content":"An inequality comparison, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a != b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">(a &lt;&gt; b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"An inequality comparison, such as <code>(a != b)</code> in C# or <code>(a <> b)</code> in Visual Basic."}],"pos":[99292,99396],"yaml":true},{"content":"A ones complement operation, such as <code>(~a)</code> in C#.","nodes":[{"pos":[0,61],"content":"A ones complement operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(~a)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C#.","source":"A ones complement operation, such as <code>(~a)</code> in C#."}],"pos":[100939,101001],"yaml":true},{"content":"A bitwise or logical `OR` operation, such as <code>(a | b)</code> in C# or <code>(a Or b)</code> in Visual Basic.","nodes":[{"pos":[0,113],"content":"A bitwise or logical <ph id=\"ph1\">`OR`</ph> operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">(a | b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">(a Or b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A bitwise or logical `OR` operation, such as <code>(a | b)</code> in C# or <code>(a Or b)</code> in Visual Basic."}],"pos":[102478,102592],"yaml":true},{"content":"A bitwise or logical `OR` compound assignment, such as <code>(a |= b)</code> in C#.","nodes":[{"pos":[0,83],"content":"A bitwise or logical <ph id=\"ph1\">`OR`</ph> compound assignment, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">(a |= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C#.","source":"A bitwise or logical `OR` compound assignment, such as <code>(a |= b)</code> in C#."}],"pos":[104093,104177],"yaml":true},{"content":"A short-circuiting conditional `OR` operation, such as <code>(a || b)</code> in C# or <code>(a OrElse b)</code> in Visual Basic.","nodes":[{"pos":[0,128],"content":"A short-circuiting conditional <ph id=\"ph1\">`OR`</ph> operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">(a || b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">(a OrElse b)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A short-circuiting conditional `OR` operation, such as <code>(a || b)</code> in C# or <code>(a OrElse b)</code> in Visual Basic."}],"pos":[105672,105801],"yaml":true},{"content":"A reference to a parameter or variable that is defined in the context of the expression. For more information, see <xref href=\"System.Linq.Expressions.ParameterExpression\"></xref>.","nodes":[{"pos":[0,180],"content":"A reference to a parameter or variable that is defined in the context of the expression. For more information, see <xref href=\"System.Linq.Expressions.ParameterExpression\"></xref>.","nodes":[{"content":"A reference to a parameter or variable that is defined in the context of the expression.","pos":[0,88]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.ParameterExpression\"&gt;&lt;/xref&gt;</ph>.","pos":[89,180],"source":" For more information, see <xref href=\"System.Linq.Expressions.ParameterExpression\"></xref>."}]}],"pos":[107312,107493],"yaml":true},{"content":"A unary postfix decrement, such as <code>(a--)</code>. The object <code>a</code> should be modified in place.","nodes":[{"pos":[0,109],"content":"A unary postfix decrement, such as <code>(a--)</code>. The object <code>a</code> should be modified in place.","nodes":[{"content":"A unary postfix decrement, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a--)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,54],"source":"A unary postfix decrement, such as <code>(a--)</code>."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be modified in place.","pos":[55,109],"source":" The object <code>a</code> should be modified in place."}]}],"pos":[109067,109177],"yaml":true},{"content":"A unary postfix increment, such as <code>(a++)</code>. The object <code>a</code> should be modified in place.","nodes":[{"pos":[0,109],"content":"A unary postfix increment, such as <code>(a++)</code>. The object <code>a</code> should be modified in place.","nodes":[{"content":"A unary postfix increment, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a++)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,54],"source":"A unary postfix increment, such as <code>(a++)</code>."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be modified in place.","pos":[55,109],"source":" The object <code>a</code> should be modified in place."}]}],"pos":[110761,110871],"yaml":true},{"content":"A mathematical operation that raises a number to a power, such as <code>(a ^ b)</code> in Visual Basic.","nodes":[{"pos":[0,103],"content":"A mathematical operation that raises a number to a power, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a ^ b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in Visual Basic.","source":"A mathematical operation that raises a number to a power, such as <code>(a ^ b)</code> in Visual Basic."}],"pos":[112371,112475],"yaml":true},{"content":"A compound assignment operation that raises a number to a power, such as <code>(a ^= b)</code> in Visual Basic.","nodes":[{"pos":[0,111],"content":"A compound assignment operation that raises a number to a power, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a ^= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in Visual Basic.","source":"A compound assignment operation that raises a number to a power, such as <code>(a ^= b)</code> in Visual Basic."}],"pos":[113997,114109],"yaml":true},{"content":"A unary prefix decrement, such as <code>(--a)</code>. The object <code>a</code> should be modified in place.","nodes":[{"pos":[0,108],"content":"A unary prefix decrement, such as <code>(--a)</code>. The object <code>a</code> should be modified in place.","nodes":[{"content":"A unary prefix decrement, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(--a)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,53],"source":"A unary prefix decrement, such as <code>(--a)</code>."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be modified in place.","pos":[54,108],"source":" The object <code>a</code> should be modified in place."}]}],"pos":[115679,115788],"yaml":true},{"content":"A unary prefix increment, such as <code>(++a)</code>. The object <code>a</code> should be modified in place.","nodes":[{"pos":[0,108],"content":"A unary prefix increment, such as <code>(++a)</code>. The object <code>a</code> should be modified in place.","nodes":[{"content":"A unary prefix increment, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(++a)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,53],"source":"A unary prefix increment, such as <code>(++a)</code>."},{"content":"The object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be modified in place.","pos":[54,108],"source":" The object <code>a</code> should be modified in place."}]}],"pos":[117365,117474],"yaml":true},{"content":"An expression that has a constant value of type <xref href=\"System.Linq.Expressions.Expression\"></xref>. A <xref href=\"System.Linq.Expressions.ExpressionType.Quote\"></xref> node can contain references to parameters that are defined in the context of the expression it represents.","nodes":[{"pos":[0,279],"content":"An expression that has a constant value of type <xref href=\"System.Linq.Expressions.Expression\"></xref>. A <xref href=\"System.Linq.Expressions.ExpressionType.Quote\"></xref> node can contain references to parameters that are defined in the context of the expression it represents.","nodes":[{"content":"An expression that has a constant value of type <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.Expression\"&gt;&lt;/xref&gt;</ph>.","pos":[0,104],"source":"An expression that has a constant value of type <xref href=\"System.Linq.Expressions.Expression\"></xref>."},{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.ExpressionType.Quote\"&gt;&lt;/xref&gt;</ph> node can contain references to parameters that are defined in the context of the expression it represents.","pos":[105,279],"source":" A <xref href=\"System.Linq.Expressions.ExpressionType.Quote\"></xref> node can contain references to parameters that are defined in the context of the expression it represents."}]}],"pos":[118973,119253],"yaml":true},{"content":"A bitwise right-shift operation, such as <code>(a >> b)</code>.","nodes":[{"pos":[0,63],"content":"A bitwise right-shift operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &gt;&gt; b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A bitwise right-shift operation, such as <code>(a >> b)</code>."}],"pos":[120769,120833],"yaml":true},{"content":"A bitwise right-shift compound assignment operation, such as <code>(a >>= b)</code>.","nodes":[{"pos":[0,84],"content":"A bitwise right-shift compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a &gt;&gt;= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A bitwise right-shift compound assignment operation, such as <code>(a >>= b)</code>."}],"pos":[122390,122475],"yaml":true},{"content":"A list of run-time variables. For more information, see <xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"></xref>.","nodes":[{"pos":[0,128],"content":"A list of run-time variables. For more information, see <xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"></xref>.","nodes":[{"content":"A list of run-time variables.","pos":[0,29]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"&gt;&lt;/xref&gt;</ph>.","pos":[30,128],"source":" For more information, see <xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"></xref>."}]}],"pos":[124038,124167],"yaml":true},{"content":"A subtraction operation, such as <code>(a - b)</code>, without overflow checking, for numeric operands.","nodes":[{"pos":[0,103],"content":"A subtraction operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a - b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, without overflow checking, for numeric operands.","source":"A subtraction operation, such as <code>(a - b)</code>, without overflow checking, for numeric operands."}],"pos":[125682,125786],"yaml":true},{"content":"A subtraction compound assignment operation, such as <code>(a -= b)</code>, without overflow checking, for numeric operands.","nodes":[{"pos":[0,124],"content":"A subtraction compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a -= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, without overflow checking, for numeric operands.","source":"A subtraction compound assignment operation, such as <code>(a -= b)</code>, without overflow checking, for numeric operands."}],"pos":[127329,127454],"yaml":true},{"content":"A subtraction compound assignment operation, such as <code>(a -= b)</code>, that has overflow checking, for numeric operands.","nodes":[{"pos":[0,125],"content":"A subtraction compound assignment operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a -= b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, that has overflow checking, for numeric operands.","source":"A subtraction compound assignment operation, such as <code>(a -= b)</code>, that has overflow checking, for numeric operands."}],"pos":[129045,129171],"yaml":true},{"content":"An arithmetic subtraction operation, such as <code>(a - b)</code>, that has overflow checking, for numeric operands.","nodes":[{"pos":[0,116],"content":"An arithmetic subtraction operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(a - b)</ph><ept id=\"p1\">&lt;/code&gt;</ept>, that has overflow checking, for numeric operands.","source":"An arithmetic subtraction operation, such as <code>(a - b)</code>, that has overflow checking, for numeric operands."}],"pos":[130733,130850],"yaml":true},{"content":"A switch operation, such as `switch` in C# or `Select Case` in Visual Basic.","nodes":[{"pos":[0,76],"content":"A switch operation, such as <ph id=\"ph1\">`switch`</ph> in C# or <ph id=\"ph2\">`Select Case`</ph> in Visual Basic.","source":"A switch operation, such as `switch` in C# or `Select Case` in Visual Basic."}],"pos":[132352,132429],"yaml":true},{"content":"An operation that throws an exception, such as <code>throw new Exception()</code>.","nodes":[{"pos":[0,82],"content":"An operation that throws an exception, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">throw new Exception()</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An operation that throws an exception, such as <code>throw new Exception()</code>."}],"pos":[133916,133999],"yaml":true},{"content":"A `try-catch` expression.","nodes":[{"pos":[0,25],"content":"A <ph id=\"ph1\">`try-catch`</ph> expression.","source":"A `try-catch` expression."}],"pos":[135473,135499],"yaml":true},{"content":"An explicit reference or boxing conversion in which `null` is supplied if the conversion fails, such as <code>(obj as SampleType)</code> in C# or <code>TryCast(obj, SampleType)</code> in Visual Basic.","nodes":[{"pos":[0,200],"content":"An explicit reference or boxing conversion in which <ph id=\"ph1\">`null`</ph> is supplied if the conversion fails, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">(obj as SampleType)</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">TryCast(obj, SampleType)</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"An explicit reference or boxing conversion in which `null` is supplied if the conversion fails, such as <code>(obj as SampleType)</code> in C# or <code>TryCast(obj, SampleType)</code> in Visual Basic."}],"pos":[136989,137190],"yaml":true},{"content":"An exact type test.","nodes":[{"pos":[0,19],"content":"An exact type test.","nodes":[{"content":"An exact type test.","pos":[0,19]}]}],"pos":[138701,138721],"yaml":true},{"content":"A type test, such as <code>obj is SampleType</code> in C# or <code>TypeOf obj is SampleType</code> in Visual Basic.","nodes":[{"pos":[0,115],"content":"A type test, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj is SampleType</ph><ept id=\"p1\">&lt;/code&gt;</ept> in C# or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">TypeOf obj is SampleType</ph><ept id=\"p2\">&lt;/code&gt;</ept> in Visual Basic.","source":"A type test, such as <code>obj is SampleType</code> in C# or <code>TypeOf obj is SampleType</code> in Visual Basic."}],"pos":[140217,140333],"yaml":true},{"content":"A unary plus operation, such as <code>(+a)</code>. The result of a predefined unary plus operation is the value of the operand, but user-defined implementations might have unusual results.","nodes":[{"pos":[0,188],"content":"A unary plus operation, such as <code>(+a)</code>. The result of a predefined unary plus operation is the value of the operand, but user-defined implementations might have unusual results.","nodes":[{"content":"A unary plus operation, such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(+a)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,50],"source":"A unary plus operation, such as <code>(+a)</code>."},{"content":"The result of a predefined unary plus operation is the value of the operand, but user-defined implementations might have unusual results.","pos":[51,188]}]}],"pos":[141844,142033],"yaml":true},{"content":"An unbox value type operation, such as `unbox` and `unbox.any` instructions in MSIL.","nodes":[{"pos":[0,84],"content":"An unbox value type operation, such as <ph id=\"ph1\">`unbox`</ph> and <ph id=\"ph2\">`unbox.any`</ph> instructions in MSIL.","source":"An unbox value type operation, such as `unbox` and `unbox.any` instructions in MSIL."}],"pos":[143523,143608],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.ExpressionType\n  commentId: T:System.Linq.Expressions.ExpressionType\n  id: ExpressionType\n  children:\n  - System.Linq.Expressions.ExpressionType.Add\n  - System.Linq.Expressions.ExpressionType.AddAssign\n  - System.Linq.Expressions.ExpressionType.AddAssignChecked\n  - System.Linq.Expressions.ExpressionType.AddChecked\n  - System.Linq.Expressions.ExpressionType.And\n  - System.Linq.Expressions.ExpressionType.AndAlso\n  - System.Linq.Expressions.ExpressionType.AndAssign\n  - System.Linq.Expressions.ExpressionType.ArrayIndex\n  - System.Linq.Expressions.ExpressionType.ArrayLength\n  - System.Linq.Expressions.ExpressionType.Assign\n  - System.Linq.Expressions.ExpressionType.Block\n  - System.Linq.Expressions.ExpressionType.Call\n  - System.Linq.Expressions.ExpressionType.Coalesce\n  - System.Linq.Expressions.ExpressionType.Conditional\n  - System.Linq.Expressions.ExpressionType.Constant\n  - System.Linq.Expressions.ExpressionType.Convert\n  - System.Linq.Expressions.ExpressionType.ConvertChecked\n  - System.Linq.Expressions.ExpressionType.DebugInfo\n  - System.Linq.Expressions.ExpressionType.Decrement\n  - System.Linq.Expressions.ExpressionType.Default\n  - System.Linq.Expressions.ExpressionType.Divide\n  - System.Linq.Expressions.ExpressionType.DivideAssign\n  - System.Linq.Expressions.ExpressionType.Dynamic\n  - System.Linq.Expressions.ExpressionType.Equal\n  - System.Linq.Expressions.ExpressionType.ExclusiveOr\n  - System.Linq.Expressions.ExpressionType.ExclusiveOrAssign\n  - System.Linq.Expressions.ExpressionType.Extension\n  - System.Linq.Expressions.ExpressionType.Goto\n  - System.Linq.Expressions.ExpressionType.GreaterThan\n  - System.Linq.Expressions.ExpressionType.GreaterThanOrEqual\n  - System.Linq.Expressions.ExpressionType.Increment\n  - System.Linq.Expressions.ExpressionType.Index\n  - System.Linq.Expressions.ExpressionType.Invoke\n  - System.Linq.Expressions.ExpressionType.IsFalse\n  - System.Linq.Expressions.ExpressionType.IsTrue\n  - System.Linq.Expressions.ExpressionType.Label\n  - System.Linq.Expressions.ExpressionType.Lambda\n  - System.Linq.Expressions.ExpressionType.LeftShift\n  - System.Linq.Expressions.ExpressionType.LeftShiftAssign\n  - System.Linq.Expressions.ExpressionType.LessThan\n  - System.Linq.Expressions.ExpressionType.LessThanOrEqual\n  - System.Linq.Expressions.ExpressionType.ListInit\n  - System.Linq.Expressions.ExpressionType.Loop\n  - System.Linq.Expressions.ExpressionType.MemberAccess\n  - System.Linq.Expressions.ExpressionType.MemberInit\n  - System.Linq.Expressions.ExpressionType.Modulo\n  - System.Linq.Expressions.ExpressionType.ModuloAssign\n  - System.Linq.Expressions.ExpressionType.Multiply\n  - System.Linq.Expressions.ExpressionType.MultiplyAssign\n  - System.Linq.Expressions.ExpressionType.MultiplyAssignChecked\n  - System.Linq.Expressions.ExpressionType.MultiplyChecked\n  - System.Linq.Expressions.ExpressionType.Negate\n  - System.Linq.Expressions.ExpressionType.NegateChecked\n  - System.Linq.Expressions.ExpressionType.New\n  - System.Linq.Expressions.ExpressionType.NewArrayBounds\n  - System.Linq.Expressions.ExpressionType.NewArrayInit\n  - System.Linq.Expressions.ExpressionType.Not\n  - System.Linq.Expressions.ExpressionType.NotEqual\n  - System.Linq.Expressions.ExpressionType.OnesComplement\n  - System.Linq.Expressions.ExpressionType.Or\n  - System.Linq.Expressions.ExpressionType.OrAssign\n  - System.Linq.Expressions.ExpressionType.OrElse\n  - System.Linq.Expressions.ExpressionType.Parameter\n  - System.Linq.Expressions.ExpressionType.PostDecrementAssign\n  - System.Linq.Expressions.ExpressionType.PostIncrementAssign\n  - System.Linq.Expressions.ExpressionType.Power\n  - System.Linq.Expressions.ExpressionType.PowerAssign\n  - System.Linq.Expressions.ExpressionType.PreDecrementAssign\n  - System.Linq.Expressions.ExpressionType.PreIncrementAssign\n  - System.Linq.Expressions.ExpressionType.Quote\n  - System.Linq.Expressions.ExpressionType.RightShift\n  - System.Linq.Expressions.ExpressionType.RightShiftAssign\n  - System.Linq.Expressions.ExpressionType.RuntimeVariables\n  - System.Linq.Expressions.ExpressionType.Subtract\n  - System.Linq.Expressions.ExpressionType.SubtractAssign\n  - System.Linq.Expressions.ExpressionType.SubtractAssignChecked\n  - System.Linq.Expressions.ExpressionType.SubtractChecked\n  - System.Linq.Expressions.ExpressionType.Switch\n  - System.Linq.Expressions.ExpressionType.Throw\n  - System.Linq.Expressions.ExpressionType.Try\n  - System.Linq.Expressions.ExpressionType.TypeAs\n  - System.Linq.Expressions.ExpressionType.TypeEqual\n  - System.Linq.Expressions.ExpressionType.TypeIs\n  - System.Linq.Expressions.ExpressionType.UnaryPlus\n  - System.Linq.Expressions.ExpressionType.Unbox\n  langs:\n  - csharp\n  name: ExpressionType\n  nameWithType: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n  type: Enum\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Describes the node types for the nodes of an expression tree.\n  remarks: For more information about each enumeration value of this type, see section 4.4 of expr-tree-spec.doc or expr-tree-spec.pdf on the [Microsoft Dynamic Language Runtime](http://go.microsoft.com/fwlink/?LinkId=230775) page of the Codeplex website.\n  syntax:\n    content: public enum ExpressionType\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionType.Add\n  commentId: F:System.Linq.Expressions.ExpressionType.Add\n  id: Add\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Add\n  nameWithType: ExpressionType.Add\n  fullName: ExpressionType.Add\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An addition operation, such as <code>a + b</code>, without overflow checking, for numeric operands.\n  syntax:\n    content: Add\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.AddAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.AddAssign\n  id: AddAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: AddAssign\n  nameWithType: ExpressionType.AddAssign\n  fullName: ExpressionType.AddAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An addition compound assignment operation, such as <code>(a += b)</code>, without overflow checking, for numeric operands.\n  syntax:\n    content: AddAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.AddAssignChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.AddAssignChecked\n  id: AddAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: AddAssignChecked\n  nameWithType: ExpressionType.AddAssignChecked\n  fullName: ExpressionType.AddAssignChecked\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An addition compound assignment operation, such as <code>(a += b)</code>, with overflow checking, for numeric operands.\n  syntax:\n    content: AddAssignChecked\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.AddChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.AddChecked\n  id: AddChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: AddChecked\n  nameWithType: ExpressionType.AddChecked\n  fullName: ExpressionType.AddChecked\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An addition operation, such as <code>(a + b)</code>, with overflow checking, for numeric operands.\n  syntax:\n    content: AddChecked\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.And\n  commentId: F:System.Linq.Expressions.ExpressionType.And\n  id: And\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: And\n  nameWithType: ExpressionType.And\n  fullName: ExpressionType.And\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise or logical `AND` operation, such as <code>(a & b)</code> in C# and <code>(a And b)</code> in Visual Basic.\n  syntax:\n    content: And\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.AndAlso\n  commentId: F:System.Linq.Expressions.ExpressionType.AndAlso\n  id: AndAlso\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: AndAlso\n  nameWithType: ExpressionType.AndAlso\n  fullName: ExpressionType.AndAlso\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A conditional `AND` operation that evaluates the second operand only if the first operand evaluates to `true`. It corresponds to <code>(a && b)</code> in C# and <code>(a AndAlso b)</code> in Visual Basic.\n  syntax:\n    content: AndAlso\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.AndAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.AndAssign\n  id: AndAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: AndAssign\n  nameWithType: ExpressionType.AndAssign\n  fullName: ExpressionType.AndAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise or logical `AND` compound assignment operation, such as <code>(a &= b)</code> in C#.\n  syntax:\n    content: AndAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.ArrayIndex\n  commentId: F:System.Linq.Expressions.ExpressionType.ArrayIndex\n  id: ArrayIndex\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: ArrayIndex\n  nameWithType: ExpressionType.ArrayIndex\n  fullName: ExpressionType.ArrayIndex\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An indexing operation in a one-dimensional array, such as <code>array[index]</code> in C# or <code>array(index)</code> in Visual Basic.\n  syntax:\n    content: ArrayIndex\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.ArrayLength\n  commentId: F:System.Linq.Expressions.ExpressionType.ArrayLength\n  id: ArrayLength\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: ArrayLength\n  nameWithType: ExpressionType.ArrayLength\n  fullName: ExpressionType.ArrayLength\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that obtains the length of a one-dimensional array, such as <code>array.Length</code>.\n  syntax:\n    content: ArrayLength\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Assign\n  commentId: F:System.Linq.Expressions.ExpressionType.Assign\n  id: Assign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Assign\n  nameWithType: ExpressionType.Assign\n  fullName: ExpressionType.Assign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An assignment operation, such as <code>(a = b)</code>.\n  syntax:\n    content: Assign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Block\n  commentId: F:System.Linq.Expressions.ExpressionType.Block\n  id: Block\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Block\n  nameWithType: ExpressionType.Block\n  fullName: ExpressionType.Block\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A block of expressions.\n  syntax:\n    content: Block\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Call\n  commentId: F:System.Linq.Expressions.ExpressionType.Call\n  id: Call\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Call\n  nameWithType: ExpressionType.Call\n  fullName: ExpressionType.Call\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A method call, such as in the <code>obj.sampleMethod()</code> expression.\n  syntax:\n    content: Call\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Coalesce\n  commentId: F:System.Linq.Expressions.ExpressionType.Coalesce\n  id: Coalesce\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Coalesce\n  nameWithType: ExpressionType.Coalesce\n  fullName: ExpressionType.Coalesce\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A node that represents a null coalescing operation, such as <code>(a ?? b)</code> in C# or <code>If(a, b)</code> in Visual Basic.\n  syntax:\n    content: Coalesce\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Conditional\n  commentId: F:System.Linq.Expressions.ExpressionType.Conditional\n  id: Conditional\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Conditional\n  nameWithType: ExpressionType.Conditional\n  fullName: ExpressionType.Conditional\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: 'A conditional operation, such as <code>a > b ? a : b</code> in C# or <code>If(a > b, a, b)</code> in Visual Basic.'\n  syntax:\n    content: Conditional\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Constant\n  commentId: F:System.Linq.Expressions.ExpressionType.Constant\n  id: Constant\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Constant\n  nameWithType: ExpressionType.Constant\n  fullName: ExpressionType.Constant\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A constant value.\n  syntax:\n    content: Constant\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Convert\n  commentId: F:System.Linq.Expressions.ExpressionType.Convert\n  id: Convert\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Convert\n  nameWithType: ExpressionType.Convert\n  fullName: ExpressionType.Convert\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A cast or conversion operation, such as <code>(SampleType)obj</code> in C#or <code>CType(obj, SampleType)</code> in Visual Basic. For a numeric conversion, if the converted value is too large for the destination type, no exception is thrown.\n  syntax:\n    content: Convert\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.ConvertChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.ConvertChecked\n  id: ConvertChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: ConvertChecked\n  nameWithType: ExpressionType.ConvertChecked\n  fullName: ExpressionType.ConvertChecked\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A cast or conversion operation, such as <code>(SampleType)obj</code> in C#or <code>CType(obj, SampleType)</code> in Visual Basic. For a numeric conversion, if the converted value does not fit the destination type, an exception is thrown.\n  syntax:\n    content: ConvertChecked\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.DebugInfo\n  commentId: F:System.Linq.Expressions.ExpressionType.DebugInfo\n  id: DebugInfo\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: DebugInfo\n  nameWithType: ExpressionType.DebugInfo\n  fullName: ExpressionType.DebugInfo\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Debugging information.\n  syntax:\n    content: DebugInfo\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Decrement\n  commentId: F:System.Linq.Expressions.ExpressionType.Decrement\n  id: Decrement\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Decrement\n  nameWithType: ExpressionType.Decrement\n  fullName: ExpressionType.Decrement\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A unary decrement operation, such as <code>(a - 1)</code> in C# and Visual Basic. The object <code>a</code> should not be modified in place.\n  syntax:\n    content: Decrement\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Default\n  commentId: F:System.Linq.Expressions.ExpressionType.Default\n  id: Default\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Default\n  nameWithType: ExpressionType.Default\n  fullName: ExpressionType.Default\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A default value.\n  syntax:\n    content: Default\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Divide\n  commentId: F:System.Linq.Expressions.ExpressionType.Divide\n  id: Divide\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Divide\n  nameWithType: ExpressionType.Divide\n  fullName: ExpressionType.Divide\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A division operation, such as <code>(a / b)</code>, for numeric operands.\n  syntax:\n    content: Divide\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.DivideAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.DivideAssign\n  id: DivideAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: DivideAssign\n  nameWithType: ExpressionType.DivideAssign\n  fullName: ExpressionType.DivideAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An division compound assignment operation, such as <code>(a /= b)</code>, for numeric operands.\n  syntax:\n    content: DivideAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Dynamic\n  commentId: F:System.Linq.Expressions.ExpressionType.Dynamic\n  id: Dynamic\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Dynamic\n  nameWithType: ExpressionType.Dynamic\n  fullName: ExpressionType.Dynamic\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A dynamic operation.\n  syntax:\n    content: Dynamic\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Equal\n  commentId: F:System.Linq.Expressions.ExpressionType.Equal\n  id: Equal\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Equal\n  nameWithType: ExpressionType.Equal\n  fullName: ExpressionType.Equal\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A node that represents an equality comparison, such as <code>(a == b)</code> in C# or <code>(a = b)</code> in Visual Basic.\n  syntax:\n    content: Equal\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.ExclusiveOr\n  commentId: F:System.Linq.Expressions.ExpressionType.ExclusiveOr\n  id: ExclusiveOr\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: ExclusiveOr\n  nameWithType: ExpressionType.ExclusiveOr\n  fullName: ExpressionType.ExclusiveOr\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise or logical `XOR` operation, such as <code>(a ^ b)</code> in C# or <code>(a Xor b)</code> in Visual Basic.\n  syntax:\n    content: ExclusiveOr\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.ExclusiveOrAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign\n  id: ExclusiveOrAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: ExclusiveOrAssign\n  nameWithType: ExpressionType.ExclusiveOrAssign\n  fullName: ExpressionType.ExclusiveOrAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise or logical `XOR` compound assignment operation, such as <code>(a ^= b)</code> in C#.\n  syntax:\n    content: ExclusiveOrAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Extension\n  commentId: F:System.Linq.Expressions.ExpressionType.Extension\n  id: Extension\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Extension\n  nameWithType: ExpressionType.Extension\n  fullName: ExpressionType.Extension\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An extension expression.\n  syntax:\n    content: Extension\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Goto\n  commentId: F:System.Linq.Expressions.ExpressionType.Goto\n  id: Goto\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Goto\n  nameWithType: ExpressionType.Goto\n  fullName: ExpressionType.Goto\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A \"go to\" expression, such as <code>goto Label</code> in C# or <code>GoTo Label</code> in Visual Basic.\n  syntax:\n    content: Goto\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.GreaterThan\n  commentId: F:System.Linq.Expressions.ExpressionType.GreaterThan\n  id: GreaterThan\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: GreaterThan\n  nameWithType: ExpressionType.GreaterThan\n  fullName: ExpressionType.GreaterThan\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A \"greater than\" comparison, such as <code>(a > b)</code>.\n  syntax:\n    content: GreaterThan\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.GreaterThanOrEqual\n  commentId: F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual\n  id: GreaterThanOrEqual\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: GreaterThanOrEqual\n  nameWithType: ExpressionType.GreaterThanOrEqual\n  fullName: ExpressionType.GreaterThanOrEqual\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A \"greater than or equal to\" comparison, such as <code>(a >= b)</code>.\n  syntax:\n    content: GreaterThanOrEqual\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Increment\n  commentId: F:System.Linq.Expressions.ExpressionType.Increment\n  id: Increment\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Increment\n  nameWithType: ExpressionType.Increment\n  fullName: ExpressionType.Increment\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A unary increment operation, such as <code>(a + 1)</code> in C# and Visual Basic. The object <code>a</code> should not be modified in place.\n  syntax:\n    content: Increment\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Index\n  commentId: F:System.Linq.Expressions.ExpressionType.Index\n  id: Index\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Index\n  nameWithType: ExpressionType.Index\n  fullName: ExpressionType.Index\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An index operation or an operation that accesses a property that takes arguments.\n  syntax:\n    content: Index\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Invoke\n  commentId: F:System.Linq.Expressions.ExpressionType.Invoke\n  id: Invoke\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Invoke\n  nameWithType: ExpressionType.Invoke\n  fullName: ExpressionType.Invoke\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that invokes a delegate or lambda expression, such as <code>sampleDelegate.Invoke()</code>.\n  syntax:\n    content: Invoke\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.IsFalse\n  commentId: F:System.Linq.Expressions.ExpressionType.IsFalse\n  id: IsFalse\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: IsFalse\n  nameWithType: ExpressionType.IsFalse\n  fullName: ExpressionType.IsFalse\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A `false` condition value.\n  syntax:\n    content: IsFalse\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.IsTrue\n  commentId: F:System.Linq.Expressions.ExpressionType.IsTrue\n  id: IsTrue\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: IsTrue\n  nameWithType: ExpressionType.IsTrue\n  fullName: ExpressionType.IsTrue\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A `true` condition value.\n  syntax:\n    content: IsTrue\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Label\n  commentId: F:System.Linq.Expressions.ExpressionType.Label\n  id: Label\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Label\n  nameWithType: ExpressionType.Label\n  fullName: ExpressionType.Label\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A label.\n  syntax:\n    content: Label\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Lambda\n  commentId: F:System.Linq.Expressions.ExpressionType.Lambda\n  id: Lambda\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Lambda\n  nameWithType: ExpressionType.Lambda\n  fullName: ExpressionType.Lambda\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A lambda expression, such as <code>a => a + a</code> in C# or <code>Function(a) a + a</code> in Visual Basic.\n  syntax:\n    content: Lambda\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.LeftShift\n  commentId: F:System.Linq.Expressions.ExpressionType.LeftShift\n  id: LeftShift\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: LeftShift\n  nameWithType: ExpressionType.LeftShift\n  fullName: ExpressionType.LeftShift\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise left-shift operation, such as <code>(a << b)</code>.\n  syntax:\n    content: LeftShift\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.LeftShiftAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.LeftShiftAssign\n  id: LeftShiftAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: LeftShiftAssign\n  nameWithType: ExpressionType.LeftShiftAssign\n  fullName: ExpressionType.LeftShiftAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise left-shift compound assignment, such as <code>(a <<= b)</code>.\n  syntax:\n    content: LeftShiftAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.LessThan\n  commentId: F:System.Linq.Expressions.ExpressionType.LessThan\n  id: LessThan\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: LessThan\n  nameWithType: ExpressionType.LessThan\n  fullName: ExpressionType.LessThan\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A \"less than\" comparison, such as <code>(a < b)</code>.\n  syntax:\n    content: LessThan\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.LessThanOrEqual\n  commentId: F:System.Linq.Expressions.ExpressionType.LessThanOrEqual\n  id: LessThanOrEqual\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: LessThanOrEqual\n  nameWithType: ExpressionType.LessThanOrEqual\n  fullName: ExpressionType.LessThanOrEqual\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A \"less than or equal to\" comparison, such as <code>(a <= b)</code>.\n  syntax:\n    content: LessThanOrEqual\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.ListInit\n  commentId: F:System.Linq.Expressions.ExpressionType.ListInit\n  id: ListInit\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: ListInit\n  nameWithType: ExpressionType.ListInit\n  fullName: ExpressionType.ListInit\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that creates a new <xref href=\"System.Collections.IEnumerable\"></xref> object and initializes it from a list of elements, such as <code>new List<SampleType>(){ a, b, c }</code> in C# or <code>Dim sampleList = { a, b, c }</code> in Visual Basic.\n  syntax:\n    content: ListInit\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Loop\n  commentId: F:System.Linq.Expressions.ExpressionType.Loop\n  id: Loop\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Loop\n  nameWithType: ExpressionType.Loop\n  fullName: ExpressionType.Loop\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A loop, such as <code>for</code> or <code>while</code>.\n  syntax:\n    content: Loop\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.MemberAccess\n  commentId: F:System.Linq.Expressions.ExpressionType.MemberAccess\n  id: MemberAccess\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: MemberAccess\n  nameWithType: ExpressionType.MemberAccess\n  fullName: ExpressionType.MemberAccess\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that reads from a field or property, such as <code>obj.SampleProperty</code>.\n  syntax:\n    content: MemberAccess\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.MemberInit\n  commentId: F:System.Linq.Expressions.ExpressionType.MemberInit\n  id: MemberInit\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: MemberInit\n  nameWithType: ExpressionType.MemberInit\n  fullName: ExpressionType.MemberInit\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that creates a new object and initializes one or more of its members, such as <code>new Point { X = 1, Y = 2 }</code> in C# or <code>New Point With {.X = 1, .Y = 2}</code> in Visual Basic.\n  syntax:\n    content: MemberInit\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Modulo\n  commentId: F:System.Linq.Expressions.ExpressionType.Modulo\n  id: Modulo\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Modulo\n  nameWithType: ExpressionType.Modulo\n  fullName: ExpressionType.Modulo\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An arithmetic remainder operation, such as <code>(a % b)</code> in C# or <code>(a Mod b)</code> in Visual Basic.\n  syntax:\n    content: Modulo\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.ModuloAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.ModuloAssign\n  id: ModuloAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: ModuloAssign\n  nameWithType: ExpressionType.ModuloAssign\n  fullName: ExpressionType.ModuloAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An arithmetic remainder compound assignment operation, such as <code>(a %= b)</code> in C#.\n  syntax:\n    content: ModuloAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Multiply\n  commentId: F:System.Linq.Expressions.ExpressionType.Multiply\n  id: Multiply\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Multiply\n  nameWithType: ExpressionType.Multiply\n  fullName: ExpressionType.Multiply\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A multiplication operation, such as <code>(a * b)</code>, without overflow checking, for numeric operands.\n  syntax:\n    content: Multiply\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.MultiplyAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.MultiplyAssign\n  id: MultiplyAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: MultiplyAssign\n  nameWithType: ExpressionType.MultiplyAssign\n  fullName: ExpressionType.MultiplyAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A multiplication compound assignment operation, such as <code>(a *= b)</code>, without overflow checking, for numeric operands.\n  syntax:\n    content: MultiplyAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.MultiplyAssignChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked\n  id: MultiplyAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: MultiplyAssignChecked\n  nameWithType: ExpressionType.MultiplyAssignChecked\n  fullName: ExpressionType.MultiplyAssignChecked\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A multiplication compound assignment operation, such as <code>(a *= b)</code>, that has overflow checking, for numeric operands.\n  syntax:\n    content: MultiplyAssignChecked\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.MultiplyChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.MultiplyChecked\n  id: MultiplyChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: MultiplyChecked\n  nameWithType: ExpressionType.MultiplyChecked\n  fullName: ExpressionType.MultiplyChecked\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An multiplication operation, such as <code>(a * b)</code>, that has overflow checking, for numeric operands.\n  syntax:\n    content: MultiplyChecked\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Negate\n  commentId: F:System.Linq.Expressions.ExpressionType.Negate\n  id: Negate\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Negate\n  nameWithType: ExpressionType.Negate\n  fullName: ExpressionType.Negate\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An arithmetic negation operation, such as <code>(-a)</code>. The object <code>a</code> should not be modified in place.\n  syntax:\n    content: Negate\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.NegateChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.NegateChecked\n  id: NegateChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: NegateChecked\n  nameWithType: ExpressionType.NegateChecked\n  fullName: ExpressionType.NegateChecked\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An arithmetic negation operation, such as <code>(-a)</code>, that has overflow checking. The object <code>a</code> should not be modified in place.\n  syntax:\n    content: NegateChecked\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.New\n  commentId: F:System.Linq.Expressions.ExpressionType.New\n  id: New\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: New\n  nameWithType: ExpressionType.New\n  fullName: ExpressionType.New\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that calls a constructor to create a new object, such as <code>new SampleType()</code>.\n  syntax:\n    content: New\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.NewArrayBounds\n  commentId: F:System.Linq.Expressions.ExpressionType.NewArrayBounds\n  id: NewArrayBounds\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: NewArrayBounds\n  nameWithType: ExpressionType.NewArrayBounds\n  fullName: ExpressionType.NewArrayBounds\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that creates a new array, in which the bounds for each dimension are specified, such as <code>new SampleType[dim1, dim2]</code> in C# or <code>New SampleType(dim1, dim2)</code> in Visual Basic.\n  syntax:\n    content: NewArrayBounds\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.NewArrayInit\n  commentId: F:System.Linq.Expressions.ExpressionType.NewArrayInit\n  id: NewArrayInit\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: NewArrayInit\n  nameWithType: ExpressionType.NewArrayInit\n  fullName: ExpressionType.NewArrayInit\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that creates a new one-dimensional array and initializes it from a list of elements, such as <code>new SampleType[]{a, b, c}</code> in C# or <code>New SampleType(){a, b, c}</code> in Visual Basic.\n  syntax:\n    content: NewArrayInit\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Not\n  commentId: F:System.Linq.Expressions.ExpressionType.Not\n  id: Not\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Not\n  nameWithType: ExpressionType.Not\n  fullName: ExpressionType.Not\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise complement or logical negation operation. In C#, it is equivalent to <code>(~a)</code> for integral types and to <code>(!a)</code> for Boolean values. In Visual Basic, it is equivalent to <code>(Not a)</code>. The object <code>a</code> should not be modified in place.\n  syntax:\n    content: Not\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.NotEqual\n  commentId: F:System.Linq.Expressions.ExpressionType.NotEqual\n  id: NotEqual\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: NotEqual\n  nameWithType: ExpressionType.NotEqual\n  fullName: ExpressionType.NotEqual\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An inequality comparison, such as <code>(a != b)</code> in C# or <code>(a <> b)</code> in Visual Basic.\n  syntax:\n    content: NotEqual\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.OnesComplement\n  commentId: F:System.Linq.Expressions.ExpressionType.OnesComplement\n  id: OnesComplement\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: OnesComplement\n  nameWithType: ExpressionType.OnesComplement\n  fullName: ExpressionType.OnesComplement\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A ones complement operation, such as <code>(~a)</code> in C#.\n  syntax:\n    content: OnesComplement\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Or\n  commentId: F:System.Linq.Expressions.ExpressionType.Or\n  id: Or\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Or\n  nameWithType: ExpressionType.Or\n  fullName: ExpressionType.Or\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise or logical `OR` operation, such as <code>(a | b)</code> in C# or <code>(a Or b)</code> in Visual Basic.\n  syntax:\n    content: Or\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.OrAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.OrAssign\n  id: OrAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: OrAssign\n  nameWithType: ExpressionType.OrAssign\n  fullName: ExpressionType.OrAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise or logical `OR` compound assignment, such as <code>(a |= b)</code> in C#.\n  syntax:\n    content: OrAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.OrElse\n  commentId: F:System.Linq.Expressions.ExpressionType.OrElse\n  id: OrElse\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: OrElse\n  nameWithType: ExpressionType.OrElse\n  fullName: ExpressionType.OrElse\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A short-circuiting conditional `OR` operation, such as <code>(a || b)</code> in C# or <code>(a OrElse b)</code> in Visual Basic.\n  syntax:\n    content: OrElse\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Parameter\n  commentId: F:System.Linq.Expressions.ExpressionType.Parameter\n  id: Parameter\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Parameter\n  nameWithType: ExpressionType.Parameter\n  fullName: ExpressionType.Parameter\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A reference to a parameter or variable that is defined in the context of the expression. For more information, see <xref href=\"System.Linq.Expressions.ParameterExpression\"></xref>.\n  syntax:\n    content: Parameter\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.PostDecrementAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PostDecrementAssign\n  id: PostDecrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: PostDecrementAssign\n  nameWithType: ExpressionType.PostDecrementAssign\n  fullName: ExpressionType.PostDecrementAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A unary postfix decrement, such as <code>(a--)</code>. The object <code>a</code> should be modified in place.\n  syntax:\n    content: PostDecrementAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.PostIncrementAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PostIncrementAssign\n  id: PostIncrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: PostIncrementAssign\n  nameWithType: ExpressionType.PostIncrementAssign\n  fullName: ExpressionType.PostIncrementAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A unary postfix increment, such as <code>(a++)</code>. The object <code>a</code> should be modified in place.\n  syntax:\n    content: PostIncrementAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Power\n  commentId: F:System.Linq.Expressions.ExpressionType.Power\n  id: Power\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Power\n  nameWithType: ExpressionType.Power\n  fullName: ExpressionType.Power\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A mathematical operation that raises a number to a power, such as <code>(a ^ b)</code> in Visual Basic.\n  syntax:\n    content: Power\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.PowerAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PowerAssign\n  id: PowerAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: PowerAssign\n  nameWithType: ExpressionType.PowerAssign\n  fullName: ExpressionType.PowerAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A compound assignment operation that raises a number to a power, such as <code>(a ^= b)</code> in Visual Basic.\n  syntax:\n    content: PowerAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.PreDecrementAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PreDecrementAssign\n  id: PreDecrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: PreDecrementAssign\n  nameWithType: ExpressionType.PreDecrementAssign\n  fullName: ExpressionType.PreDecrementAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A unary prefix decrement, such as <code>(--a)</code>. The object <code>a</code> should be modified in place.\n  syntax:\n    content: PreDecrementAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.PreIncrementAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.PreIncrementAssign\n  id: PreIncrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: PreIncrementAssign\n  nameWithType: ExpressionType.PreIncrementAssign\n  fullName: ExpressionType.PreIncrementAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A unary prefix increment, such as <code>(++a)</code>. The object <code>a</code> should be modified in place.\n  syntax:\n    content: PreIncrementAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Quote\n  commentId: F:System.Linq.Expressions.ExpressionType.Quote\n  id: Quote\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Quote\n  nameWithType: ExpressionType.Quote\n  fullName: ExpressionType.Quote\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An expression that has a constant value of type <xref href=\"System.Linq.Expressions.Expression\"></xref>. A <xref href=\"System.Linq.Expressions.ExpressionType.Quote\"></xref> node can contain references to parameters that are defined in the context of the expression it represents.\n  syntax:\n    content: Quote\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.RightShift\n  commentId: F:System.Linq.Expressions.ExpressionType.RightShift\n  id: RightShift\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: RightShift\n  nameWithType: ExpressionType.RightShift\n  fullName: ExpressionType.RightShift\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise right-shift operation, such as <code>(a >> b)</code>.\n  syntax:\n    content: RightShift\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.RightShiftAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.RightShiftAssign\n  id: RightShiftAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: RightShiftAssign\n  nameWithType: ExpressionType.RightShiftAssign\n  fullName: ExpressionType.RightShiftAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A bitwise right-shift compound assignment operation, such as <code>(a >>= b)</code>.\n  syntax:\n    content: RightShiftAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.RuntimeVariables\n  commentId: F:System.Linq.Expressions.ExpressionType.RuntimeVariables\n  id: RuntimeVariables\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: RuntimeVariables\n  nameWithType: ExpressionType.RuntimeVariables\n  fullName: ExpressionType.RuntimeVariables\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A list of run-time variables. For more information, see <xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"></xref>.\n  syntax:\n    content: RuntimeVariables\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Subtract\n  commentId: F:System.Linq.Expressions.ExpressionType.Subtract\n  id: Subtract\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Subtract\n  nameWithType: ExpressionType.Subtract\n  fullName: ExpressionType.Subtract\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A subtraction operation, such as <code>(a - b)</code>, without overflow checking, for numeric operands.\n  syntax:\n    content: Subtract\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.SubtractAssign\n  commentId: F:System.Linq.Expressions.ExpressionType.SubtractAssign\n  id: SubtractAssign\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: SubtractAssign\n  nameWithType: ExpressionType.SubtractAssign\n  fullName: ExpressionType.SubtractAssign\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A subtraction compound assignment operation, such as <code>(a -= b)</code>, without overflow checking, for numeric operands.\n  syntax:\n    content: SubtractAssign\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.SubtractAssignChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked\n  id: SubtractAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: SubtractAssignChecked\n  nameWithType: ExpressionType.SubtractAssignChecked\n  fullName: ExpressionType.SubtractAssignChecked\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A subtraction compound assignment operation, such as <code>(a -= b)</code>, that has overflow checking, for numeric operands.\n  syntax:\n    content: SubtractAssignChecked\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.SubtractChecked\n  commentId: F:System.Linq.Expressions.ExpressionType.SubtractChecked\n  id: SubtractChecked\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: SubtractChecked\n  nameWithType: ExpressionType.SubtractChecked\n  fullName: ExpressionType.SubtractChecked\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An arithmetic subtraction operation, such as <code>(a - b)</code>, that has overflow checking, for numeric operands.\n  syntax:\n    content: SubtractChecked\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Switch\n  commentId: F:System.Linq.Expressions.ExpressionType.Switch\n  id: Switch\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Switch\n  nameWithType: ExpressionType.Switch\n  fullName: ExpressionType.Switch\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A switch operation, such as `switch` in C# or `Select Case` in Visual Basic.\n  syntax:\n    content: Switch\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Throw\n  commentId: F:System.Linq.Expressions.ExpressionType.Throw\n  id: Throw\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Throw\n  nameWithType: ExpressionType.Throw\n  fullName: ExpressionType.Throw\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An operation that throws an exception, such as <code>throw new Exception()</code>.\n  syntax:\n    content: Throw\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Try\n  commentId: F:System.Linq.Expressions.ExpressionType.Try\n  id: Try\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Try\n  nameWithType: ExpressionType.Try\n  fullName: ExpressionType.Try\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A `try-catch` expression.\n  syntax:\n    content: Try\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.TypeAs\n  commentId: F:System.Linq.Expressions.ExpressionType.TypeAs\n  id: TypeAs\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: TypeAs\n  nameWithType: ExpressionType.TypeAs\n  fullName: ExpressionType.TypeAs\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An explicit reference or boxing conversion in which `null` is supplied if the conversion fails, such as <code>(obj as SampleType)</code> in C# or <code>TryCast(obj, SampleType)</code> in Visual Basic.\n  syntax:\n    content: TypeAs\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.TypeEqual\n  commentId: F:System.Linq.Expressions.ExpressionType.TypeEqual\n  id: TypeEqual\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: TypeEqual\n  nameWithType: ExpressionType.TypeEqual\n  fullName: ExpressionType.TypeEqual\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An exact type test.\n  syntax:\n    content: TypeEqual\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.TypeIs\n  commentId: F:System.Linq.Expressions.ExpressionType.TypeIs\n  id: TypeIs\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: TypeIs\n  nameWithType: ExpressionType.TypeIs\n  fullName: ExpressionType.TypeIs\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A type test, such as <code>obj is SampleType</code> in C# or <code>TypeOf obj is SampleType</code> in Visual Basic.\n  syntax:\n    content: TypeIs\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.UnaryPlus\n  commentId: F:System.Linq.Expressions.ExpressionType.UnaryPlus\n  id: UnaryPlus\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: UnaryPlus\n  nameWithType: ExpressionType.UnaryPlus\n  fullName: ExpressionType.UnaryPlus\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: A unary plus operation, such as <code>(+a)</code>. The result of a predefined unary plus operation is the value of the operand, but user-defined implementations might have unusual results.\n  syntax:\n    content: UnaryPlus\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\n- uid: System.Linq.Expressions.ExpressionType.Unbox\n  commentId: F:System.Linq.Expressions.ExpressionType.Unbox\n  id: Unbox\n  parent: System.Linq.Expressions.ExpressionType\n  langs:\n  - csharp\n  name: Unbox\n  nameWithType: ExpressionType.Unbox\n  fullName: ExpressionType.Unbox\n  type: Field\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: An unbox value type operation, such as `unbox` and `unbox.any` instructions in MSIL.\n  syntax:\n    content: Unbox\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionType.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Linq.Expressions.ExpressionType.Add\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Add\n  nameWithType: ExpressionType.Add\n  fullName: ExpressionType.Add\n- uid: System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionType\n  nameWithType: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n- uid: System.Linq.Expressions.ExpressionType.AddAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: AddAssign\n  nameWithType: ExpressionType.AddAssign\n  fullName: ExpressionType.AddAssign\n- uid: System.Linq.Expressions.ExpressionType.AddAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: AddAssignChecked\n  nameWithType: ExpressionType.AddAssignChecked\n  fullName: ExpressionType.AddAssignChecked\n- uid: System.Linq.Expressions.ExpressionType.AddChecked\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: AddChecked\n  nameWithType: ExpressionType.AddChecked\n  fullName: ExpressionType.AddChecked\n- uid: System.Linq.Expressions.ExpressionType.And\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: And\n  nameWithType: ExpressionType.And\n  fullName: ExpressionType.And\n- uid: System.Linq.Expressions.ExpressionType.AndAlso\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: AndAlso\n  nameWithType: ExpressionType.AndAlso\n  fullName: ExpressionType.AndAlso\n- uid: System.Linq.Expressions.ExpressionType.AndAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: AndAssign\n  nameWithType: ExpressionType.AndAssign\n  fullName: ExpressionType.AndAssign\n- uid: System.Linq.Expressions.ExpressionType.ArrayIndex\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: ArrayIndex\n  nameWithType: ExpressionType.ArrayIndex\n  fullName: ExpressionType.ArrayIndex\n- uid: System.Linq.Expressions.ExpressionType.ArrayLength\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: ArrayLength\n  nameWithType: ExpressionType.ArrayLength\n  fullName: ExpressionType.ArrayLength\n- uid: System.Linq.Expressions.ExpressionType.Assign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Assign\n  nameWithType: ExpressionType.Assign\n  fullName: ExpressionType.Assign\n- uid: System.Linq.Expressions.ExpressionType.Block\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Block\n  nameWithType: ExpressionType.Block\n  fullName: ExpressionType.Block\n- uid: System.Linq.Expressions.ExpressionType.Call\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Call\n  nameWithType: ExpressionType.Call\n  fullName: ExpressionType.Call\n- uid: System.Linq.Expressions.ExpressionType.Coalesce\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Coalesce\n  nameWithType: ExpressionType.Coalesce\n  fullName: ExpressionType.Coalesce\n- uid: System.Linq.Expressions.ExpressionType.Conditional\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Conditional\n  nameWithType: ExpressionType.Conditional\n  fullName: ExpressionType.Conditional\n- uid: System.Linq.Expressions.ExpressionType.Constant\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Constant\n  nameWithType: ExpressionType.Constant\n  fullName: ExpressionType.Constant\n- uid: System.Linq.Expressions.ExpressionType.Convert\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Convert\n  nameWithType: ExpressionType.Convert\n  fullName: ExpressionType.Convert\n- uid: System.Linq.Expressions.ExpressionType.ConvertChecked\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: ConvertChecked\n  nameWithType: ExpressionType.ConvertChecked\n  fullName: ExpressionType.ConvertChecked\n- uid: System.Linq.Expressions.ExpressionType.DebugInfo\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: DebugInfo\n  nameWithType: ExpressionType.DebugInfo\n  fullName: ExpressionType.DebugInfo\n- uid: System.Linq.Expressions.ExpressionType.Decrement\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Decrement\n  nameWithType: ExpressionType.Decrement\n  fullName: ExpressionType.Decrement\n- uid: System.Linq.Expressions.ExpressionType.Default\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Default\n  nameWithType: ExpressionType.Default\n  fullName: ExpressionType.Default\n- uid: System.Linq.Expressions.ExpressionType.Divide\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Divide\n  nameWithType: ExpressionType.Divide\n  fullName: ExpressionType.Divide\n- uid: System.Linq.Expressions.ExpressionType.DivideAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: DivideAssign\n  nameWithType: ExpressionType.DivideAssign\n  fullName: ExpressionType.DivideAssign\n- uid: System.Linq.Expressions.ExpressionType.Dynamic\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Dynamic\n  nameWithType: ExpressionType.Dynamic\n  fullName: ExpressionType.Dynamic\n- uid: System.Linq.Expressions.ExpressionType.Equal\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Equal\n  nameWithType: ExpressionType.Equal\n  fullName: ExpressionType.Equal\n- uid: System.Linq.Expressions.ExpressionType.ExclusiveOr\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: ExclusiveOr\n  nameWithType: ExpressionType.ExclusiveOr\n  fullName: ExpressionType.ExclusiveOr\n- uid: System.Linq.Expressions.ExpressionType.ExclusiveOrAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: ExclusiveOrAssign\n  nameWithType: ExpressionType.ExclusiveOrAssign\n  fullName: ExpressionType.ExclusiveOrAssign\n- uid: System.Linq.Expressions.ExpressionType.Extension\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Extension\n  nameWithType: ExpressionType.Extension\n  fullName: ExpressionType.Extension\n- uid: System.Linq.Expressions.ExpressionType.Goto\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Goto\n  nameWithType: ExpressionType.Goto\n  fullName: ExpressionType.Goto\n- uid: System.Linq.Expressions.ExpressionType.GreaterThan\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: GreaterThan\n  nameWithType: ExpressionType.GreaterThan\n  fullName: ExpressionType.GreaterThan\n- uid: System.Linq.Expressions.ExpressionType.GreaterThanOrEqual\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: GreaterThanOrEqual\n  nameWithType: ExpressionType.GreaterThanOrEqual\n  fullName: ExpressionType.GreaterThanOrEqual\n- uid: System.Linq.Expressions.ExpressionType.Increment\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Increment\n  nameWithType: ExpressionType.Increment\n  fullName: ExpressionType.Increment\n- uid: System.Linq.Expressions.ExpressionType.Index\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Index\n  nameWithType: ExpressionType.Index\n  fullName: ExpressionType.Index\n- uid: System.Linq.Expressions.ExpressionType.Invoke\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Invoke\n  nameWithType: ExpressionType.Invoke\n  fullName: ExpressionType.Invoke\n- uid: System.Linq.Expressions.ExpressionType.IsFalse\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: IsFalse\n  nameWithType: ExpressionType.IsFalse\n  fullName: ExpressionType.IsFalse\n- uid: System.Linq.Expressions.ExpressionType.IsTrue\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: IsTrue\n  nameWithType: ExpressionType.IsTrue\n  fullName: ExpressionType.IsTrue\n- uid: System.Linq.Expressions.ExpressionType.Label\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Label\n  nameWithType: ExpressionType.Label\n  fullName: ExpressionType.Label\n- uid: System.Linq.Expressions.ExpressionType.Lambda\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Lambda\n  nameWithType: ExpressionType.Lambda\n  fullName: ExpressionType.Lambda\n- uid: System.Linq.Expressions.ExpressionType.LeftShift\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: LeftShift\n  nameWithType: ExpressionType.LeftShift\n  fullName: ExpressionType.LeftShift\n- uid: System.Linq.Expressions.ExpressionType.LeftShiftAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: LeftShiftAssign\n  nameWithType: ExpressionType.LeftShiftAssign\n  fullName: ExpressionType.LeftShiftAssign\n- uid: System.Linq.Expressions.ExpressionType.LessThan\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: LessThan\n  nameWithType: ExpressionType.LessThan\n  fullName: ExpressionType.LessThan\n- uid: System.Linq.Expressions.ExpressionType.LessThanOrEqual\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: LessThanOrEqual\n  nameWithType: ExpressionType.LessThanOrEqual\n  fullName: ExpressionType.LessThanOrEqual\n- uid: System.Linq.Expressions.ExpressionType.ListInit\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: ListInit\n  nameWithType: ExpressionType.ListInit\n  fullName: ExpressionType.ListInit\n- uid: System.Linq.Expressions.ExpressionType.Loop\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Loop\n  nameWithType: ExpressionType.Loop\n  fullName: ExpressionType.Loop\n- uid: System.Linq.Expressions.ExpressionType.MemberAccess\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: MemberAccess\n  nameWithType: ExpressionType.MemberAccess\n  fullName: ExpressionType.MemberAccess\n- uid: System.Linq.Expressions.ExpressionType.MemberInit\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: MemberInit\n  nameWithType: ExpressionType.MemberInit\n  fullName: ExpressionType.MemberInit\n- uid: System.Linq.Expressions.ExpressionType.Modulo\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Modulo\n  nameWithType: ExpressionType.Modulo\n  fullName: ExpressionType.Modulo\n- uid: System.Linq.Expressions.ExpressionType.ModuloAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: ModuloAssign\n  nameWithType: ExpressionType.ModuloAssign\n  fullName: ExpressionType.ModuloAssign\n- uid: System.Linq.Expressions.ExpressionType.Multiply\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Multiply\n  nameWithType: ExpressionType.Multiply\n  fullName: ExpressionType.Multiply\n- uid: System.Linq.Expressions.ExpressionType.MultiplyAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: MultiplyAssign\n  nameWithType: ExpressionType.MultiplyAssign\n  fullName: ExpressionType.MultiplyAssign\n- uid: System.Linq.Expressions.ExpressionType.MultiplyAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: MultiplyAssignChecked\n  nameWithType: ExpressionType.MultiplyAssignChecked\n  fullName: ExpressionType.MultiplyAssignChecked\n- uid: System.Linq.Expressions.ExpressionType.MultiplyChecked\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: MultiplyChecked\n  nameWithType: ExpressionType.MultiplyChecked\n  fullName: ExpressionType.MultiplyChecked\n- uid: System.Linq.Expressions.ExpressionType.Negate\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Negate\n  nameWithType: ExpressionType.Negate\n  fullName: ExpressionType.Negate\n- uid: System.Linq.Expressions.ExpressionType.NegateChecked\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: NegateChecked\n  nameWithType: ExpressionType.NegateChecked\n  fullName: ExpressionType.NegateChecked\n- uid: System.Linq.Expressions.ExpressionType.New\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: New\n  nameWithType: ExpressionType.New\n  fullName: ExpressionType.New\n- uid: System.Linq.Expressions.ExpressionType.NewArrayBounds\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: NewArrayBounds\n  nameWithType: ExpressionType.NewArrayBounds\n  fullName: ExpressionType.NewArrayBounds\n- uid: System.Linq.Expressions.ExpressionType.NewArrayInit\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: NewArrayInit\n  nameWithType: ExpressionType.NewArrayInit\n  fullName: ExpressionType.NewArrayInit\n- uid: System.Linq.Expressions.ExpressionType.Not\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Not\n  nameWithType: ExpressionType.Not\n  fullName: ExpressionType.Not\n- uid: System.Linq.Expressions.ExpressionType.NotEqual\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: NotEqual\n  nameWithType: ExpressionType.NotEqual\n  fullName: ExpressionType.NotEqual\n- uid: System.Linq.Expressions.ExpressionType.OnesComplement\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: OnesComplement\n  nameWithType: ExpressionType.OnesComplement\n  fullName: ExpressionType.OnesComplement\n- uid: System.Linq.Expressions.ExpressionType.Or\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Or\n  nameWithType: ExpressionType.Or\n  fullName: ExpressionType.Or\n- uid: System.Linq.Expressions.ExpressionType.OrAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: OrAssign\n  nameWithType: ExpressionType.OrAssign\n  fullName: ExpressionType.OrAssign\n- uid: System.Linq.Expressions.ExpressionType.OrElse\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: OrElse\n  nameWithType: ExpressionType.OrElse\n  fullName: ExpressionType.OrElse\n- uid: System.Linq.Expressions.ExpressionType.Parameter\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Parameter\n  nameWithType: ExpressionType.Parameter\n  fullName: ExpressionType.Parameter\n- uid: System.Linq.Expressions.ExpressionType.PostDecrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: PostDecrementAssign\n  nameWithType: ExpressionType.PostDecrementAssign\n  fullName: ExpressionType.PostDecrementAssign\n- uid: System.Linq.Expressions.ExpressionType.PostIncrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: PostIncrementAssign\n  nameWithType: ExpressionType.PostIncrementAssign\n  fullName: ExpressionType.PostIncrementAssign\n- uid: System.Linq.Expressions.ExpressionType.Power\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Power\n  nameWithType: ExpressionType.Power\n  fullName: ExpressionType.Power\n- uid: System.Linq.Expressions.ExpressionType.PowerAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: PowerAssign\n  nameWithType: ExpressionType.PowerAssign\n  fullName: ExpressionType.PowerAssign\n- uid: System.Linq.Expressions.ExpressionType.PreDecrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: PreDecrementAssign\n  nameWithType: ExpressionType.PreDecrementAssign\n  fullName: ExpressionType.PreDecrementAssign\n- uid: System.Linq.Expressions.ExpressionType.PreIncrementAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: PreIncrementAssign\n  nameWithType: ExpressionType.PreIncrementAssign\n  fullName: ExpressionType.PreIncrementAssign\n- uid: System.Linq.Expressions.ExpressionType.Quote\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Quote\n  nameWithType: ExpressionType.Quote\n  fullName: ExpressionType.Quote\n- uid: System.Linq.Expressions.ExpressionType.RightShift\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: RightShift\n  nameWithType: ExpressionType.RightShift\n  fullName: ExpressionType.RightShift\n- uid: System.Linq.Expressions.ExpressionType.RightShiftAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: RightShiftAssign\n  nameWithType: ExpressionType.RightShiftAssign\n  fullName: ExpressionType.RightShiftAssign\n- uid: System.Linq.Expressions.ExpressionType.RuntimeVariables\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: RuntimeVariables\n  nameWithType: ExpressionType.RuntimeVariables\n  fullName: ExpressionType.RuntimeVariables\n- uid: System.Linq.Expressions.ExpressionType.Subtract\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Subtract\n  nameWithType: ExpressionType.Subtract\n  fullName: ExpressionType.Subtract\n- uid: System.Linq.Expressions.ExpressionType.SubtractAssign\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: SubtractAssign\n  nameWithType: ExpressionType.SubtractAssign\n  fullName: ExpressionType.SubtractAssign\n- uid: System.Linq.Expressions.ExpressionType.SubtractAssignChecked\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: SubtractAssignChecked\n  nameWithType: ExpressionType.SubtractAssignChecked\n  fullName: ExpressionType.SubtractAssignChecked\n- uid: System.Linq.Expressions.ExpressionType.SubtractChecked\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: SubtractChecked\n  nameWithType: ExpressionType.SubtractChecked\n  fullName: ExpressionType.SubtractChecked\n- uid: System.Linq.Expressions.ExpressionType.Switch\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Switch\n  nameWithType: ExpressionType.Switch\n  fullName: ExpressionType.Switch\n- uid: System.Linq.Expressions.ExpressionType.Throw\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Throw\n  nameWithType: ExpressionType.Throw\n  fullName: ExpressionType.Throw\n- uid: System.Linq.Expressions.ExpressionType.Try\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Try\n  nameWithType: ExpressionType.Try\n  fullName: ExpressionType.Try\n- uid: System.Linq.Expressions.ExpressionType.TypeAs\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: TypeAs\n  nameWithType: ExpressionType.TypeAs\n  fullName: ExpressionType.TypeAs\n- uid: System.Linq.Expressions.ExpressionType.TypeEqual\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: TypeEqual\n  nameWithType: ExpressionType.TypeEqual\n  fullName: ExpressionType.TypeEqual\n- uid: System.Linq.Expressions.ExpressionType.TypeIs\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: TypeIs\n  nameWithType: ExpressionType.TypeIs\n  fullName: ExpressionType.TypeIs\n- uid: System.Linq.Expressions.ExpressionType.UnaryPlus\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: UnaryPlus\n  nameWithType: ExpressionType.UnaryPlus\n  fullName: ExpressionType.UnaryPlus\n- uid: System.Linq.Expressions.ExpressionType.Unbox\n  parent: System.Linq.Expressions.ExpressionType\n  isExternal: false\n  name: Unbox\n  nameWithType: ExpressionType.Unbox\n  fullName: ExpressionType.Unbox\n"}