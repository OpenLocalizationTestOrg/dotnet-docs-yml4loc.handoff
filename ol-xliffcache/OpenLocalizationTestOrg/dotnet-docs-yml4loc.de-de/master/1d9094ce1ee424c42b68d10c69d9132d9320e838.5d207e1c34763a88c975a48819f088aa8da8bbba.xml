{"nodes":[{"content":"Defines a certificate used by a client to identify itself.","nodes":[{"pos":[0,58],"content":"Defines a certificate used by a client to identify itself.","nodes":[{"content":"Defines a certificate used by a client to identify itself.","pos":[0,58]}]}],"pos":[1155,1214],"yaml":true},{"content":"Gets or sets the certificate to use to represent the service when communicating back to the client.","nodes":[{"pos":[0,99],"content":"Gets or sets the certificate to use to represent the service when communicating back to the client.","nodes":[{"content":"Gets or sets the certificate to use to represent the service when communicating back to the client.","pos":[0,99]}]}],"pos":[2897,2997],"yaml":true},{"content":"When the first call is made on the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] proxy, the <xref:System.ServiceModel.Description.ClientCredentials> are made read-only. Subsequently calling the `set` method results in an <xref:System.InvalidOperationException>.","nodes":[{"pos":[0,261],"content":"When the first call is made on the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] proxy, the <xref:System.ServiceModel.Description.ClientCredentials> are made read-only. Subsequently calling the `set` method results in an <xref:System.InvalidOperationException>.","nodes":[{"content":"When the first call is made on the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> proxy, the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> are made read-only.","pos":[0,168],"source":"When the first call is made on the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] proxy, the <xref:System.ServiceModel.Description.ClientCredentials> are made read-only."},{"content":"Subsequently calling the <ph id=\"ph1\">`set`</ph> method results in an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[169,261],"source":" Subsequently calling the `set` method results in an <xref:System.InvalidOperationException>."}]}],"pos":[3008,3270],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> to use to represent the service when communicating back to the client.","nodes":[{"pos":[0,158],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> to use to represent the service when communicating back to the client.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> to use to represent the service when communicating back to the client."}],"pos":[3495,3654],"yaml":true},{"content":"A `set` method was used when the credential is read-only.","nodes":[{"pos":[0,57],"content":"A <ph id=\"ph1\">`set`</ph> method was used when the credential is read-only.","source":"A `set` method was used when the credential is read-only."}],"pos":[3873,3931],"yaml":true},{"content":"Allows you to specify the certificate to use to represent the service by specifying the subject distinguished name.","nodes":[{"pos":[0,115],"content":"Allows you to specify the certificate to use to represent the service by specifying the subject distinguished name.","nodes":[{"content":"Allows you to specify the certificate to use to represent the service by specifying the subject distinguished name.","pos":[0,115]}]}],"pos":[5697,5813],"yaml":true},{"content":"For more information on the `subjectName` parameter, see <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  \n  \n Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.  \n  \n If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \n  \n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.","nodes":[{"pos":[0,142],"content":"For more information on the <ph id=\"ph1\">`subjectName`</ph> parameter, see <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A&gt;</ph>.","source":"For more information on the `subjectName` parameter, see <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>."},{"pos":[149,275],"content":"Values for <ph id=\"ph1\">`storeLocation`</ph> are included in the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation&gt;</ph> enumeration:","source":"Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:"},{"pos":[285,428],"content":"<xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine&gt;</ph>: the certificate store assigned to the local machine (default).","pos":[0,143],"source":"<xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default)."}]},{"pos":[438,565],"content":"<xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser&gt;</ph>: the certificate store used by the current user.","pos":[0,127],"source":"<xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user."}]},{"pos":[572,926],"content":"If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.","nodes":[{"content":"If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.","pos":[0,354],"nodes":[{"content":"If the client application is running under a system account, then the certificate is typically in <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine&gt;</ph>.","pos":[0,178],"source":"If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>."},{"content":"If the client application is running under a user account, then the certificate is typically in <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser&gt;</ph>.","pos":[179,354],"source":" If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>."}]}]},{"pos":[933,1051],"content":"Values for <ph id=\"ph1\">`storeName`</ph> are included in the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreName&gt;</ph> enumeration.","source":"Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration."}],"pos":[5824,6888],"yaml":true,"extradata":"MT"},{"content":"Subject distinguished name.","nodes":[{"pos":[0,27],"content":"Subject distinguished name.","nodes":[{"content":"Subject distinguished name.","pos":[0,27]}]}],"pos":[7363,7391],"yaml":true},{"content":"The location of the certificate store the service uses to obtain the service certificate.","nodes":[{"pos":[0,89],"content":"The location of the certificate store the service uses to obtain the service certificate.","nodes":[{"content":"The location of the certificate store the service uses to obtain the service certificate.","pos":[0,89]}]}],"pos":[7506,7596],"yaml":true},{"content":"Specifies the name of the X.509 certificate store to open.","nodes":[{"pos":[0,58],"content":"Specifies the name of the X.509 certificate store to open.","nodes":[{"content":"Specifies the name of the X.509 certificate store to open.","pos":[0,58]}]}],"pos":[7703,7762],"yaml":true},{"content":"Allows you to specify the certificate to use to represent the client by specifying query parameters such as <code>storeLocation</code>, <code>storeName</code>, <code>findType</code> and <code>findValue</code>.","nodes":[{"pos":[0,209],"content":"Allows you to specify the certificate to use to represent the client by specifying query parameters such as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">storeLocation</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">storeName</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">findType</ph><ept id=\"p3\">&lt;/code&gt;</ept> and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">findValue</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","source":"Allows you to specify the certificate to use to represent the client by specifying query parameters such as <code>storeLocation</code>, <code>storeName</code>, <code>findType</code> and <code>findValue</code>."}],"pos":[9862,10072],"yaml":true},{"content":"Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.  \n  \n If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \n  \n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.  \n  \n Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.  \n  \n The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If more than one certificate is returned then the first one matching the find is used to represent the client.","nodes":[{"pos":[0,126],"content":"Values for <ph id=\"ph1\">`storeLocation`</ph> are included in the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation&gt;</ph> enumeration:","source":"Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:"},{"pos":[136,279],"content":"<xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine&gt;</ph>: the certificate store assigned to the local machine (default).","pos":[0,143],"source":"<xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default)."}]},{"pos":[289,416],"content":"<xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser&gt;</ph>: the certificate store used by the current user.","pos":[0,127],"source":"<xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user."}]},{"pos":[423,777],"content":"If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.","nodes":[{"content":"If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.","pos":[0,354],"nodes":[{"content":"If the client application is running under a system account, then the certificate is typically in <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine&gt;</ph>.","pos":[0,178],"source":"If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>."},{"content":"If the client application is running under a user account, then the certificate is typically in <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser&gt;</ph>.","pos":[179,354],"source":" If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>."}]}]},{"pos":[784,902],"content":"Values for <ph id=\"ph1\">`storeName`</ph> are included in the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreName&gt;</ph> enumeration.","source":"Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration."},{"pos":[909,1029],"content":"Values for <ph id=\"ph1\">`findType`</ph> are included in the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509FindType&gt;</ph> enumeration.","source":"Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration."},{"pos":[1036,1399],"content":"The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If more than one certificate is returned then the first one matching the find is used to represent the client.","nodes":[{"content":"The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If more than one certificate is returned then the first one matching the find is used to represent the client.","pos":[0,363],"nodes":[{"content":"The most commonly used enumeration is <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName&gt;</ph>, which does a case-insensitive search on the subject name of certificates in the specified store.","pos":[0,219],"source":"The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store."},{"content":"This can be an imprecise search.","pos":[220,252]},{"content":"If more than one certificate is returned then the first one matching the find is used to represent the client.","pos":[253,363]}]}]}],"pos":[10083,11497],"yaml":true,"extradata":"MT"},{"content":"The location of the certificate store the client uses to obtain the client certificate.","nodes":[{"pos":[0,87],"content":"The location of the certificate store the client uses to obtain the client certificate.","nodes":[{"content":"The location of the certificate store the client uses to obtain the client certificate.","pos":[0,87]}]}],"pos":[12190,12278],"yaml":true},{"content":"Specifies the name of the X.509 certificate store to open.","nodes":[{"pos":[0,58],"content":"Specifies the name of the X.509 certificate store to open.","nodes":[{"content":"Specifies the name of the X.509 certificate store to open.","pos":[0,58]}]}],"pos":[12385,12444],"yaml":true},{"content":"Defines the type of X.509 search to be executed.","nodes":[{"pos":[0,48],"content":"Defines the type of X.509 search to be executed.","nodes":[{"content":"Defines the type of X.509 search to be executed.","pos":[0,48]}]}],"pos":[12553,12602],"yaml":true},{"content":"The value to search for in the X.509 certificate store.","nodes":[{"pos":[0,55],"content":"The value to search for in the X.509 certificate store.","nodes":[{"content":"The value to search for in the X.509 certificate store.","pos":[0,55]}]}],"pos":[12667,12723],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  commentId: T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  id: X509CertificateInitiatorClientCredential\n  children:\n  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate\n  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  langs:\n  - csharp\n  name: X509CertificateInitiatorClientCredential\n  nameWithType: X509CertificateInitiatorClientCredential\n  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Defines a certificate used by a client to identify itself.\n  syntax:\n    content: public sealed class X509CertificateInitiatorClientCredential\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate\n  commentId: P:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate\n  id: Certificate\n  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  langs:\n  - csharp\n  name: Certificate\n  nameWithType: X509CertificateInitiatorClientCredential.Certificate\n  fullName: X509CertificateInitiatorClientCredential.Certificate\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets the certificate to use to represent the service when communicating back to the client.\n  remarks: When the first call is made on the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] proxy, the <xref:System.ServiceModel.Description.ClientCredentials> are made read-only. Subsequently calling the `set` method results in an <xref:System.InvalidOperationException>.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> to use to represent the service when communicating back to the client.\n  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A `set` method was used when the credential is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  commentId: M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  langs:\n  - csharp\n  name: SetCertificate(String, StoreLocation, StoreName)\n  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(String, StoreLocation, StoreName)\n  fullName: X509CertificateInitiatorClientCredential.SetCertificate(String, StoreLocation, StoreName)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Allows you to specify the certificate to use to represent the service by specifying the subject distinguished name.\n  remarks: \"For more information on the `subjectName` parameter, see <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  \\n  \\n Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \\n  \\n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).  \\n  \\n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.  \\n  \\n If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \\n  \\n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.\"\n  example:\n  - \"The following code specifies the certificate to use.  \\n  \\n [!code-csharp[c_TcpClient#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_tcpclient/cs/source.cs#3)]\"\n  syntax:\n    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);\n    parameters:\n    - id: subjectName\n      type: System.String\n      description: Subject distinguished name.\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: The location of the certificate store the service uses to obtain the service certificate.\n    - id: storeName\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: Specifies the name of the X.509 certificate store to open.\n  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  commentId: M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  langs:\n  - csharp\n  name: SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  fullName: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Allows you to specify the certificate to use to represent the client by specifying query parameters such as <code>storeLocation</code>, <code>storeName</code>, <code>findType</code> and <code>findValue</code>.\n  remarks: \"Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \\n  \\n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).  \\n  \\n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.  \\n  \\n If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \\n  \\n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.  \\n  \\n Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.  \\n  \\n The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If more than one certificate is returned then the first one matching the find is used to represent the client.\"\n  example:\n  - \"The following code specifies the certificate to use.  \\n  \\n [!code-csharp[c_TcpClient#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_tcpclient/cs/source.cs#2)]\\n [!code-vb[c_TcpClient#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpclient/vb/source.vb#2)]\"\n  syntax:\n    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);\n    parameters:\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: The location of the certificate store the client uses to obtain the client certificate.\n    - id: storeName\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: Specifies the name of the X.509 certificate store to open.\n    - id: findType\n      type: System.Security.Cryptography.X509Certificates.X509FindType\n      description: Defines the type of X.509 search to be executed.\n    - id: findValue\n      type: System.Object\n      description: The value to search for in the X.509 certificate store.\n  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate\n  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  isExternal: false\n  name: Certificate\n  nameWithType: X509CertificateInitiatorClientCredential.Certificate\n  fullName: X509CertificateInitiatorClientCredential.Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  isExternal: false\n  name: SetCertificate(String, StoreLocation, StoreName)\n  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(String, StoreLocation, StoreName)\n  fullName: X509CertificateInitiatorClientCredential.SetCertificate(String, StoreLocation, StoreName)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  nameWithType: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n- uid: System.Security.Cryptography.X509Certificates.StoreName\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreName\n  nameWithType: StoreName\n  fullName: System.Security.Cryptography.X509Certificates.StoreName\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  isExternal: false\n  name: SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  fullName: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n- uid: System.Security.Cryptography.X509Certificates.X509FindType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509FindType\n  nameWithType: X509FindType\n  fullName: System.Security.Cryptography.X509Certificates.X509FindType\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate*\n  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  isExternal: false\n  name: Certificate\n  nameWithType: X509CertificateInitiatorClientCredential.Certificate\n  fullName: X509CertificateInitiatorClientCredential.Certificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml\n- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*\n  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential\n  isExternal: false\n  name: SetCertificate\n  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate\n  fullName: X509CertificateInitiatorClientCredential.SetCertificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}