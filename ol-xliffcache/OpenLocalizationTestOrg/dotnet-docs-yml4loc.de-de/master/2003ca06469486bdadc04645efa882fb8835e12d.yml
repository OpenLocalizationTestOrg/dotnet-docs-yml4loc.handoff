### YamlMime:ManagedReference
items:
- uid: System.Reflection.CustomAttributeExtensions
  commentId: T:System.Reflection.CustomAttributeExtensions
  id: CustomAttributeExtensions
  children:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  langs:
  - csharp
  name: CustomAttributeExtensions
  nameWithType: CustomAttributeExtensions
  fullName: System.Reflection.CustomAttributeExtensions
  type: Class
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Contains static methods for retrieving custom attributes.
  syntax:
    content: public static class CustomAttributeExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  id: GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Assembly, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(Assembly, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified assembly.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: public static Attribute GetCustomAttribute (this System.Reflection.Assembly element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Attribute
      description: A custom attribute that matches <code>attributeType</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  id: GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified member.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: public static Attribute GetCustomAttribute (this System.Reflection.MemberInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Attribute
      description: A custom attribute that matches <code>attributeType</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  id: GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute(Module, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Module, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(Module, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified module.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: public static Attribute GetCustomAttribute (this System.Reflection.Module element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Attribute
      description: A custom attribute that matches <code>attributeType</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  id: GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified parameter.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: public static Attribute GetCustomAttribute (this System.Reflection.ParameterInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Attribute
      description: A custom attribute that matches <code>attributeType</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: public static Attribute GetCustomAttribute (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    return:
      type: System.Attribute
      description: A custom attribute that matches <code>attributeType</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: public static Attribute GetCustomAttribute (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    return:
      type: System.Attribute
      description: A custom attribute matching <code>attributeType</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute<T>(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: 'public static T GetCustomAttribute<T> (this System.Reflection.ParameterInfo element, bool inherit) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: T
      description: A custom attribute that matches <code>T</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: 'public static T GetCustomAttribute<T> (this System.Reflection.MemberInfo element, bool inherit) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: T
      description: A custom attribute that matches <code>T</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  id: GetCustomAttribute``1(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute<T>(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified parameter.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: 'public static T GetCustomAttribute<T> (this System.Reflection.ParameterInfo element) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: T
      description: A custom attribute that matches <code>T</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  id: GetCustomAttribute``1(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute<T>(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Module)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(Module)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified module.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: 'public static T GetCustomAttribute<T> (this System.Reflection.Module element) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: T
      description: A custom attribute that matches <code>T</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  id: GetCustomAttribute``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified member.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: 'public static T GetCustomAttribute<T> (this System.Reflection.MemberInfo element) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: T
      description: A custom attribute that matches <code>T</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  id: GetCustomAttribute``1(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttribute<T>(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Assembly)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(Assembly)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a custom attribute of a specified type that is applied to a specified assembly.
  remarks: Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.
  syntax:
    content: 'public static T GetCustomAttribute<T> (this System.Reflection.Assembly element) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: T
      description: A custom attribute that matches <code>T</code>, or `null` if no such attribute is found.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>attributeType</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>attributeType</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.ParameterInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>attributeType</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.ParameterInfo element, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  id: GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(Module, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(Module, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified module.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.Module element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>attributeType</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified member.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.MemberInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>attributeType</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified member, and optionally inspects the ancestors of that member.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.MemberInfo element, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code> that match the specified criteria, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  id: GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(Assembly, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.Assembly element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>attributeType</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  id: GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified parameter.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.ParameterInfo element);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  id: GetCustomAttributes(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module)
  fullName: CustomAttributeExtensions.GetCustomAttributes(Module)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified module.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.Module element);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  id: GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified member.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.MemberInfo element);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  id: GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly)
  fullName: CustomAttributeExtensions.GetCustomAttributes(Assembly)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes that are applied to a specified assembly.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<Attribute> GetCustomAttributes (this System.Reflection.Assembly element);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    return:
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: A collection of the custom attributes that are applied to <code>element</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes<T>(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<T> GetCustomAttributes<T> (this System.Reflection.ParameterInfo element, bool inherit) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>T</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<T> GetCustomAttributes<T> (this System.Reflection.MemberInfo element, bool inherit) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>T</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  id: GetCustomAttributes``1(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes<T>(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<T> GetCustomAttributes<T> (this System.Reflection.ParameterInfo element) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>T</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  id: GetCustomAttributes``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified member.
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<T> GetCustomAttributes<T> (this System.Reflection.MemberInfo element) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>T</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  id: GetCustomAttributes``1(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes<T>(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Assembly)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(Assembly)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<T> GetCustomAttributes<T> (this System.Reflection.Assembly element) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>T</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  id: GetCustomAttributes``1(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: GetCustomAttributes<T>(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Module)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(Module)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Retrieves a collection of custom attributes of a specified type that are applied to a specified module.
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<T> GetCustomAttributes<T> (this System.Reflection.Module element) where T : Attribute;'
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    typeParameters:
    - id: T
      description: The type of attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: A collection of the custom attributes that are applied to <code>element</code> and that match <code>T</code>, or an empty collection if no such attributes exist.
  overload: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified member, and, optionally, applied to its ancestors.
  syntax:
    content: public static bool IsDefined (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of the attribute to search for.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    return:
      type: System.Boolean
      description: '`true` if an attribute of the specified type is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Reflection.CustomAttributeExtensions.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  id: IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: IsDefined(Assembly, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(Assembly, Type)
  fullName: CustomAttributeExtensions.IsDefined(Assembly, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified assembly.
  syntax:
    content: public static bool IsDefined (this System.Reflection.Assembly element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: The assembly to inspect.
    - id: attributeType
      type: System.Type
      description: The type of the attribute to search for.
    return:
      type: System.Boolean
      description: '`true` if an attribute of the specified type is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Reflection.CustomAttributeExtensions.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  id: IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: IsDefined(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified member.
  syntax:
    content: public static bool IsDefined (this System.Reflection.MemberInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: The member to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Boolean
      description: '`true` if an attribute of the specified type is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Reflection.CustomAttributeExtensions.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  id: IsDefined(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: IsDefined(Module, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(Module, Type)
  fullName: CustomAttributeExtensions.IsDefined(Module, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified module.
  syntax:
    content: public static bool IsDefined (this System.Reflection.Module element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: The module to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Boolean
      description: '`true` if an attribute of the specified type is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Reflection.CustomAttributeExtensions.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  id: IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: IsDefined(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified parameter.
  syntax:
    content: public static bool IsDefined (this System.Reflection.ParameterInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    return:
      type: System.Boolean
      description: '`true` if an attribute of the specified type is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Reflection.CustomAttributeExtensions.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  langs:
  - csharp
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Extensions
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Reflection
  summary: Indicates whether custom attributes of a specified type are applied to a specified parameter, and, optionally, applied to its ancestors.
  syntax:
    content: public static bool IsDefined (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: The parameter to inspect.
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for.
    - id: inherit
      type: System.Boolean
      description: '`true` to inspect the ancestors of <code>element</code>; otherwise, `false`.'
    return:
      type: System.Boolean
      description: '`true` if an attribute of the specified type is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Reflection.CustomAttributeExtensions.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Reflection.AmbiguousMatchException
  parent: System.Reflection
  isExternal: false
  name: AmbiguousMatchException
  nameWithType: AmbiguousMatchException
  fullName: System.Reflection.AmbiguousMatchException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  name: TypeLoadException
  nameWithType: TypeLoadException
  fullName: System.TypeLoadException
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Assembly, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(Assembly, Type)
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(Module, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Module, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(Module, Type)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Module)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(Module)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Assembly)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(Assembly)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Attribute>
  nameWithType: IEnumerable<Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(Module, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(Module, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(Assembly, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module)
  fullName: CustomAttributeExtensions.GetCustomAttributes(Module)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly)
  fullName: CustomAttributeExtensions.GetCustomAttributes(Assembly)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(ParameterInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(ParameterInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(Assembly)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Assembly)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(Assembly)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(Module)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Module)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(Module)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(Assembly, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(Assembly, Type)
  fullName: CustomAttributeExtensions.IsDefined(Assembly, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(Module, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(Module, Type)
  fullName: CustomAttributeExtensions.IsDefined(Module, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(ParameterInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute*
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute
  nameWithType: CustomAttributeExtensions.GetCustomAttribute
  fullName: CustomAttributeExtensions.GetCustomAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1*
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes*
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes
  nameWithType: CustomAttributeExtensions.GetCustomAttributes
  fullName: CustomAttributeExtensions.GetCustomAttributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1*
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
- uid: System.Reflection.CustomAttributeExtensions.IsDefined*
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined
  nameWithType: CustomAttributeExtensions.IsDefined
  fullName: CustomAttributeExtensions.IsDefined
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/CustomAttributeExtensions.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
