{"nodes":[{"content":"Provides a type converter that retrieves a list of property names for the current control.","nodes":[{"pos":[0,90],"content":"Provides a type converter that retrieves a list of property names for the current control.","nodes":[{"content":"Provides a type converter that retrieves a list of property names for the current control.","pos":[0,90]}]}],"pos":[929,1020],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter> class derives from the <xref:System.ComponentModel.StringConverter> class and provides a list of property names for display in a property grid control in design-time environments.  \n  \n> [!CAUTION]\n>  You should never access a type converter directly. Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","nodes":[{"pos":[0,245],"content":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter> class derives from the <xref:System.ComponentModel.StringConverter> class and provides a list of property names for display in a property grid control in design-time environments.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.ControlPropertyNameConverter&gt;</ph> class derives from the <ph id=\"ph2\">&lt;xref:System.ComponentModel.StringConverter&gt;</ph> class and provides a list of property names for display in a property grid control in design-time environments.","pos":[0,245],"source":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter> class derives from the <xref:System.ComponentModel.StringConverter> class and provides a list of property names for display in a property grid control in design-time environments."}]},{"pos":[253,547],"content":"[!CAUTION]\n You should never access a type converter directly. Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","leadings":["","> "],"nodes":[{"content":" You should never access a type converter directly. Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","pos":[11,292],"nodes":[{"content":"You should never access a type converter directly.","pos":[1,51]},{"content":"Instead, call the appropriate converter by using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName&gt;</ph> class.","pos":[52,180],"source":" Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class."},{"content":"For more information, see the examples in the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.","pos":[181,281],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]}]}],"pos":[1031,1584],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.ControlPropertyNameConverter\"></xref> class.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.ControlPropertyNameConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.ControlPropertyNameConverter\"></xref> class."}],"pos":[6641,6758],"yaml":true},{"content":"This constructor is not intended to be called directly. You should never access a type converter directly. Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","nodes":[{"pos":[0,336],"content":"This constructor is not intended to be called directly. You should never access a type converter directly. Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","nodes":[{"content":"This constructor is not intended to be called directly. You should never access a type converter directly. Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","pos":[0,336],"nodes":[{"content":"This constructor is not intended to be called directly.","pos":[0,55]},{"content":"You should never access a type converter directly.","pos":[56,106]},{"content":"Instead, call the appropriate converter by using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName&gt;</ph> class.","pos":[107,235],"source":" Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class."},{"content":"For more information, see the examples in the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.","pos":[236,336],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]}]}],"pos":[6769,7106],"yaml":true,"extradata":"MT"},{"content":"Returns a collection of property names for the control within a designer that implements <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> when provided with a format context.","nodes":[{"pos":[0,189],"content":"Returns a collection of property names for the control within a designer that implements <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;&lt;/xref&gt;</ph> when provided with a format context.","source":"Returns a collection of property names for the control within a designer that implements <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> when provided with a format context."}],"pos":[8564,8754],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> method returns a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> collection that contains a set of strings representing the names of the current control's properties.  \n  \n Use the `context` parameter to extract additional information about the design-time environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`. If the `context` parameter is `null`, this method returns `null`.","nodes":[{"pos":[0,273],"content":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> method returns a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> collection that contains a set of strings representing the names of the current control's properties.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt;</ph> collection that contains a set of strings representing the names of the current control's properties.","pos":[0,273],"source":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> method returns a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> collection that contains a set of strings representing the names of the current control's properties."}]},{"pos":[280,565],"content":"Use the `context` parameter to extract additional information about the design-time environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`. If the `context` parameter is `null`, this method returns `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the design-time environment from which this converter is invoked.","pos":[0,133],"source":"Use the `context` parameter to extract additional information about the design-time environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, and properties on the context object can return <ph id=\"ph2\">`null`</ph>.","pos":[134,219],"source":" This parameter can be `null`, and properties on the context object can return `null`."},{"content":"If the <ph id=\"ph1\">`context`</ph> parameter is <ph id=\"ph2\">`null`</ph>, this method returns <ph id=\"ph3\">`null`</ph>.","pos":[220,285],"source":" If the `context` parameter is `null`, this method returns `null`."}]}],"pos":[8765,9335],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.","nodes":[{"pos":[0,272],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.","pos":[0,210],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter or properties of this parameter can be <ph id=\"ph1\">`null`</ph>.","pos":[211,272],"source":" This parameter or properties of this parameter can be `null`."}]}],"pos":[9619,9892],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that contains a set of strings representing property names for the current control. If the current control is `null`, an empty collection is returned. If the <code>context</code> parameter is `null`, `null` is returned.","nodes":[{"pos":[0,303],"content":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that contains a set of strings representing property names for the current control. If the current control is `null`, an empty collection is returned. If the <code>context</code> parameter is `null`, `null` is returned.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> that contains a set of strings representing property names for the current control.","pos":[0,167],"source":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that contains a set of strings representing property names for the current control."},{"content":"If the current control is <ph id=\"ph1\">`null`</ph>, an empty collection is returned.","pos":[168,234],"source":" If the current control is `null`, an empty collection is returned."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>, <ph id=\"ph3\">`null`</ph> is returned.","pos":[235,303],"source":" If the <code>context</code> parameter is `null`, `null` is returned."}]}],"pos":[9996,10300],"yaml":true},{"content":"Returns a value that indicates whether the collection of standard values returned by the <xref href=\"System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*\"></xref> method is an exclusive list of possible values, using the specified context.","nodes":[{"pos":[0,260],"content":"Returns a value that indicates whether the collection of standard values returned by the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*\"&gt;&lt;/xref&gt;</ph> method is an exclusive list of possible values, using the specified context.","source":"Returns a value that indicates whether the collection of standard values returned by the <xref href=\"System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*\"></xref> method is an exclusive list of possible values, using the specified context."}],"pos":[11742,12003],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive%2A> method always returns `false` to indicate that the list of property values returned by the <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> method is not an exclusive list of possible values.  \n  \n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`.","nodes":[{"pos":[0,321],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive%2A&gt;</ph> method always returns <ph id=\"ph2\">`false`</ph> to indicate that the list of property values returned by the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A&gt;</ph> method is not an exclusive list of possible values.","source":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive%2A> method always returns `false` to indicate that the list of property values returned by the <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> method is not an exclusive list of possible values."},{"pos":[328,535],"content":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`.","nodes":[{"content":"Use the <ph id=\"ph1\">`context`</ph> parameter to extract additional information about the environment from which this converter is invoked.","pos":[0,121],"source":"Use the `context` parameter to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, and properties on the context object can return <ph id=\"ph2\">`null`</ph>.","pos":[122,207],"source":" This parameter can be `null`, and properties on the context object can return `null`."}]}],"pos":[12014,12554],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.","nodes":[{"pos":[0,272],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.","pos":[0,210],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter or properties of this parameter can be <ph id=\"ph1\">`null`</ph>.","pos":[211,272],"source":" This parameter or properties of this parameter can be `null`."}]}],"pos":[12791,13064],"yaml":true},{"content":"`false` in all cases, which indicates that the list is not exclusive.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`false`</ph> in all cases, which indicates that the list is not exclusive.","source":"`false` in all cases, which indicates that the list is not exclusive."}],"pos":[13122,13194],"yaml":true},{"content":"Returns a value that indicates whether this object supports a standard set of values that can be chosen from a list, using the specified context.","nodes":[{"pos":[0,145],"content":"Returns a value that indicates whether this object supports a standard set of values that can be chosen from a list, using the specified context.","nodes":[{"content":"Returns a value that indicates whether this object supports a standard set of values that can be chosen from a list, using the specified context.","pos":[0,145]}]}],"pos":[14645,14791],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported%2A> method returns a value that indicates whether this object supports a standard set of values.  \n  \n The `context` parameter extracts additional information about the design-time environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`. If the `context` parameter is `null`, this method returns `false`.","nodes":[{"pos":[0,188],"content":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported%2A> method returns a value that indicates whether this object supports a standard set of values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported%2A&gt;</ph> method returns a value that indicates whether this object supports a standard set of values.","pos":[0,188],"source":"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported%2A> method returns a value that indicates whether this object supports a standard set of values."}]},{"pos":[195,475],"content":"The `context` parameter extracts additional information about the design-time environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`. If the `context` parameter is `null`, this method returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter extracts additional information about the design-time environment from which this converter is invoked.","pos":[0,127],"source":"The `context` parameter extracts additional information about the design-time environment from which this converter is invoked."},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>, and properties on the context object can return <ph id=\"ph2\">`null`</ph>.","pos":[128,213],"source":" This parameter can be `null`, and properties on the context object can return `null`."},{"content":"If the <ph id=\"ph1\">`context`</ph> parameter is <ph id=\"ph2\">`null`</ph>, this method returns <ph id=\"ph3\">`false`</ph>.","pos":[214,280],"source":" If the `context` parameter is `null`, this method returns `false`."}]}],"pos":[14802,15282],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.","nodes":[{"pos":[0,272],"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.","pos":[0,210],"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked."},{"content":"This parameter or properties of this parameter can be <ph id=\"ph1\">`null`</ph>.","pos":[211,272],"source":" This parameter or properties of this parameter can be `null`."}]}],"pos":[15519,15792],"yaml":true},{"content":"`true` if the <code>context</code> parameter is not `null`; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph3\">`null`</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>context</code> parameter is not `null`; otherwise, `false`."}],"pos":[15850,15932],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter\n  commentId: T:System.Web.UI.WebControls.ControlPropertyNameConverter\n  id: ControlPropertyNameConverter\n  children:\n  - System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor\n  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: ControlPropertyNameConverter\n  nameWithType: ControlPropertyNameConverter\n  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Provides a type converter that retrieves a list of property names for the current control.\n  remarks: \"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter> class derives from the <xref:System.ComponentModel.StringConverter> class and provides a list of property names for display in a property grid control in design-time environments.  \\n  \\n> [!CAUTION]\\n>  You should never access a type converter directly. Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.\"\n  syntax:\n    content: 'public class ControlPropertyNameConverter : System.ComponentModel.StringConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  - System.ComponentModel.StringConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor\n  commentId: M:System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  langs:\n  - csharp\n  name: ControlPropertyNameConverter()\n  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter()\n  fullName: ControlPropertyNameConverter.ControlPropertyNameConverter()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.ControlPropertyNameConverter\"></xref> class.\n  remarks: This constructor is not intended to be called directly. You should never access a type converter directly. Instead, call the appropriate converter by using the <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.\n  syntax:\n    content: public ControlPropertyNameConverter ();\n    parameters: []\n  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Returns a collection of property names for the control within a designer that implements <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> when provided with a format context.\n  remarks: \"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> method returns a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> collection that contains a set of strings representing the names of the current control's properties.  \\n  \\n Use the `context` parameter to extract additional information about the design-time environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`. If the `context` parameter is `null`, this method returns `null`.\"\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> that contains a set of strings representing property names for the current control. If the current control is `null`, an empty collection is returned. If the <code>context</code> parameter is `null`, `null` is returned.\n  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Returns a value that indicates whether the collection of standard values returned by the <xref href=\"System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*\"></xref> method is an exclusive list of possible values, using the specified context.\n  remarks: \"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive%2A> method always returns `false` to indicate that the list of property values returned by the <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> method is not an exclusive list of possible values.  \\n  \\n Use the `context` parameter to extract additional information about the environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`.\"\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.\n    return:\n      type: System.Boolean\n      description: '`false` in all cases, which indicates that the list is not exclusive.'\n  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Returns a value that indicates whether this object supports a standard set of values that can be chosen from a list, using the specified context.\n  remarks: \"The <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported%2A> method returns a value that indicates whether this object supports a standard set of values.  \\n  \\n The `context` parameter extracts additional information about the design-time environment from which this converter is invoked. This parameter can be `null`, and properties on the context object can return `null`. If the `context` parameter is `null`, this method returns `false`.\"\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>context</code> parameter is not `null`; otherwise, `false`.'\n  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.StringConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: StringConverter\n  nameWithType: StringConverter\n  fullName: System.ComponentModel.StringConverter\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  isExternal: false\n  name: ControlPropertyNameConverter()\n  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter()\n  fullName: ControlPropertyNameConverter.ControlPropertyNameConverter()\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor*\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  isExternal: false\n  name: ControlPropertyNameConverter\n  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter\n  fullName: ControlPropertyNameConverter.ControlPropertyNameConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: ControlPropertyNameConverter.GetStandardValues\n  fullName: ControlPropertyNameConverter.GetStandardValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive*\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive\n  fullName: ControlPropertyNameConverter.GetStandardValuesExclusive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported*\n  parent: System.Web.UI.WebControls.ControlPropertyNameConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported\n  fullName: ControlPropertyNameConverter.GetStandardValuesSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ControlPropertyNameConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.StringConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: StringConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: StringConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.StringConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: StringConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: StringConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}