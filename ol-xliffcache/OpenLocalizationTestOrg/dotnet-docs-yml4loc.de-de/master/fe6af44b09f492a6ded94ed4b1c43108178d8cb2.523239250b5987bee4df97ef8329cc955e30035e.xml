{"nodes":[{"content":"Specifies the format to which the content type of an incoming message is mapped.","nodes":[{"pos":[0,80],"content":"Specifies the format to which the content type of an incoming message is mapped.","nodes":[{"content":"Specifies the format to which the content type of an incoming message is mapped.","pos":[0,80]}]}],"pos":[614,695],"yaml":true},{"content":"This is an extensibility point in the programming model that is used by the Web message encoder to override how content types are mapped to formats. To implement this class, override the <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> method.","nodes":[{"pos":[0,301],"content":"This is an extensibility point in the programming model that is used by the Web message encoder to override how content types are mapped to formats. To implement this class, override the <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> method.","nodes":[{"content":"This is an extensibility point in the programming model that is used by the Web message encoder to override how content types are mapped to formats. To implement this class, override the <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> method.","pos":[0,301],"nodes":[{"content":"This is an extensibility point in the programming model that is used by the Web message encoder to override how content types are mapped to formats.","pos":[0,148]},{"content":"To implement this class, override the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29&gt;</ph> method.","pos":[149,301],"source":" To implement this class, override the <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> method."}]}]}],"pos":[706,1008],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.WebContentTypeMapper\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.WebContentTypeMapper\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.WebContentTypeMapper\"></xref> class."}],"pos":[2577,2689],"yaml":true},{"content":"When overridden in a derived class, returns the message format used for a specified content type.","nodes":[{"pos":[0,97],"content":"When overridden in a derived class, returns the message format used for a specified content type.","nodes":[{"content":"When overridden in a derived class, returns the message format used for a specified content type.","pos":[0,97]}]}],"pos":[4172,4270],"yaml":true},{"content":"This is intended to be an extensibility mechanism that can be used to override how content types are mapped to Web content formats. For example, if all incoming messages are processed as \"raw binary data\" without ever doing XML or JSON parsing, you could implement a <xref:System.ServiceModel.Channels.WebContentTypeMapper> that always returned <xref:System.ServiceModel.Channels.WebContentFormat.Raw> regardless of the content type that was passed in.","nodes":[{"pos":[0,452],"content":"This is intended to be an extensibility mechanism that can be used to override how content types are mapped to Web content formats. For example, if all incoming messages are processed as \"raw binary data\" without ever doing XML or JSON parsing, you could implement a <xref:System.ServiceModel.Channels.WebContentTypeMapper> that always returned <xref:System.ServiceModel.Channels.WebContentFormat.Raw> regardless of the content type that was passed in.","nodes":[{"content":"This is intended to be an extensibility mechanism that can be used to override how content types are mapped to Web content formats. For example, if all incoming messages are processed as \"raw binary data\" without ever doing XML or JSON parsing, you could implement a <xref:System.ServiceModel.Channels.WebContentTypeMapper> that always returned <xref:System.ServiceModel.Channels.WebContentFormat.Raw> regardless of the content type that was passed in.","pos":[0,452],"nodes":[{"content":"This is intended to be an extensibility mechanism that can be used to override how content types are mapped to Web content formats.","pos":[0,131]},{"content":"For example, if all incoming messages are processed as \"raw binary data\" without ever doing XML or JSON parsing, you could implement a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebContentTypeMapper&gt;</ph> that always returned <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.WebContentFormat.Raw&gt;</ph> regardless of the content type that was passed in.","pos":[132,452],"source":" For example, if all incoming messages are processed as \"raw binary data\" without ever doing XML or JSON parsing, you could implement a <xref:System.ServiceModel.Channels.WebContentTypeMapper> that always returned <xref:System.ServiceModel.Channels.WebContentFormat.Raw> regardless of the content type that was passed in."}]}]}],"pos":[4281,4734],"yaml":true,"extradata":"MT"},{"content":"The content type that indicates the MIME type of data to be interpreted.","nodes":[{"pos":[0,72],"content":"The content type that indicates the MIME type of data to be interpreted.","nodes":[{"content":"The content type that indicates the MIME type of data to be interpreted.","pos":[0,72]}]}],"pos":[4955,5028],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.WebContentFormat\"></xref> that specifies the format to which the message content type is mapped.","nodes":[{"pos":[0,141],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.WebContentFormat\"&gt;&lt;/xref&gt;</ph> that specifies the format to which the message content type is mapped.","source":"The <xref href=\"System.ServiceModel.Channels.WebContentFormat\"></xref> that specifies the format to which the message content type is mapped."}],"pos":[5117,5259],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.WebContentTypeMapper\n  commentId: T:System.ServiceModel.Channels.WebContentTypeMapper\n  id: WebContentTypeMapper\n  children:\n  - System.ServiceModel.Channels.WebContentTypeMapper.#ctor\n  - System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)\n  langs:\n  - csharp\n  name: WebContentTypeMapper\n  nameWithType: WebContentTypeMapper\n  fullName: System.ServiceModel.Channels.WebContentTypeMapper\n  type: Class\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Channels\n  summary: Specifies the format to which the content type of an incoming message is mapped.\n  remarks: This is an extensibility point in the programming model that is used by the Web message encoder to override how content types are mapped to formats. To implement this class, override the <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> method.\n  syntax:\n    content: public abstract class WebContentTypeMapper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WebContentTypeMapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.WebContentTypeMapper.#ctor\n  commentId: M:System.ServiceModel.Channels.WebContentTypeMapper.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.WebContentTypeMapper\n  langs:\n  - csharp\n  name: WebContentTypeMapper()\n  nameWithType: WebContentTypeMapper.WebContentTypeMapper()\n  fullName: WebContentTypeMapper.WebContentTypeMapper()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.WebContentTypeMapper\"></xref> class.\n  syntax:\n    content: protected WebContentTypeMapper ();\n    parameters: []\n  overload: System.ServiceModel.Channels.WebContentTypeMapper.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WebContentTypeMapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)\n  commentId: M:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)\n  id: GetMessageFormatForContentType(System.String)\n  parent: System.ServiceModel.Channels.WebContentTypeMapper\n  langs:\n  - csharp\n  name: GetMessageFormatForContentType(String)\n  nameWithType: WebContentTypeMapper.GetMessageFormatForContentType(String)\n  fullName: WebContentTypeMapper.GetMessageFormatForContentType(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, returns the message format used for a specified content type.\n  remarks: This is intended to be an extensibility mechanism that can be used to override how content types are mapped to Web content formats. For example, if all incoming messages are processed as \"raw binary data\" without ever doing XML or JSON parsing, you could implement a <xref:System.ServiceModel.Channels.WebContentTypeMapper> that always returned <xref:System.ServiceModel.Channels.WebContentFormat.Raw> regardless of the content type that was passed in.\n  syntax:\n    content: public abstract System.ServiceModel.Channels.WebContentFormat GetMessageFormatForContentType (string contentType);\n    parameters:\n    - id: contentType\n      type: System.String\n      description: The content type that indicates the MIME type of data to be interpreted.\n    return:\n      type: System.ServiceModel.Channels.WebContentFormat\n      description: The <xref href=\"System.ServiceModel.Channels.WebContentFormat\"></xref> that specifies the format to which the message content type is mapped.\n  overload: System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WebContentTypeMapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.WebContentTypeMapper.#ctor\n  parent: System.ServiceModel.Channels.WebContentTypeMapper\n  isExternal: false\n  name: WebContentTypeMapper()\n  nameWithType: WebContentTypeMapper.WebContentTypeMapper()\n  fullName: WebContentTypeMapper.WebContentTypeMapper()\n- uid: System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)\n  parent: System.ServiceModel.Channels.WebContentTypeMapper\n  isExternal: false\n  name: GetMessageFormatForContentType(String)\n  nameWithType: WebContentTypeMapper.GetMessageFormatForContentType(String)\n  fullName: WebContentTypeMapper.GetMessageFormatForContentType(String)\n- uid: System.ServiceModel.Channels.WebContentFormat\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: WebContentFormat\n  nameWithType: WebContentFormat\n  fullName: System.ServiceModel.Channels.WebContentFormat\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Channels.WebContentTypeMapper.#ctor*\n  parent: System.ServiceModel.Channels.WebContentTypeMapper\n  isExternal: false\n  name: WebContentTypeMapper\n  nameWithType: WebContentTypeMapper.WebContentTypeMapper\n  fullName: WebContentTypeMapper.WebContentTypeMapper\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WebContentTypeMapper.xml\n- uid: System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType*\n  parent: System.ServiceModel.Channels.WebContentTypeMapper\n  isExternal: false\n  name: GetMessageFormatForContentType\n  nameWithType: WebContentTypeMapper.GetMessageFormatForContentType\n  fullName: WebContentTypeMapper.GetMessageFormatForContentType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/WebContentTypeMapper.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}