{"nodes":[{"content":"Provides a host for services.","nodes":[{"pos":[0,29],"content":"Provides a host for services.","nodes":[{"content":"Provides a host for services.","pos":[0,29]}]}],"pos":[1582,1612],"yaml":true},{"content":"Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model.  \n  \n Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.  \n  \n To expose a service for use by callers, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.  \n  \n Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.","nodes":[{"pos":[0,110],"content":"Implements the host used by the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model programming model.","source":"Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model."},{"pos":[117,446],"content":"Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.","nodes":[{"content":"Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.","pos":[0,329],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.","pos":[0,234],"source":"Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service."},{"content":"Both IIS and WAS interact with a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object on your behalf.","pos":[235,329],"source":" Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf."}]}]},{"pos":[453,976],"content":"To expose a service for use by callers, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.","nodes":[{"content":"To expose a service for use by callers, <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> requires a complete service description (represented by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> class).","pos":[0,211],"source":"To expose a service for use by callers, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class creates a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> from the service type and configuration information and then uses that description to create <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects for each endpoint in the description.","pos":[212,523],"source":" The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description."}]},{"pos":[983,1148],"content":"Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.","nodes":[{"content":"Use a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.","pos":[0,165],"source":"Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests."}]}],"pos":[1623,2780],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class."}],"pos":[9268,9362],"yaml":true},{"content":"There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time. The host can use this to create new services as needed. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.","nodes":[{"pos":[0,537],"content":"There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time. The host can use this to create new services as needed. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.","nodes":[{"content":"There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time. The host can use this to create new services as needed. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.","pos":[0,537],"nodes":[{"content":"There are two constructors used to create an instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.","pos":[0,106],"source":"There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29&gt;</ph> constructor which takes the service type as an input parameter, most of the time.","pos":[107,279],"source":" Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time."},{"content":"The host can use this to create new services as needed.","pos":[280,335]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor instead only when you want the service host to use a specific singleton instance of the service.","pos":[336,537],"source":" Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service."}]}]}],"pos":[9373,9911],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the instance of the service and its base addresses specified.","nodes":[{"pos":[0,159],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> class with the instance of the service and its base addresses specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the instance of the service and its base addresses specified."}],"pos":[11075,11235],"yaml":true},{"content":"Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> when you want to provide a specific object instance for use by a singleton service. You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).  \n  \n Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] instancing behavior work differently. For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> have no effect when a well-known object instance is provided using this constructor overload. Similarly, any other instance release mechanism is ignored. The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> for all operations.","nodes":[{"pos":[0,429],"content":"Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> when you want to provide a specific object instance for use by a singleton service. You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).","nodes":[{"content":"Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> when you want to provide a specific object instance for use by a singleton service. You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).","pos":[0,429],"nodes":[{"content":"Use this constructor as an alternative to implementing a custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName&gt;</ph> when you want to provide a specific object instance for use by a singleton service.","pos":[0,238],"source":"Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> when you want to provide a specific object instance for use by a singleton service."},{"content":"You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).","pos":[239,429]}]}]},{"pos":[436,1153],"content":"Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] instancing behavior work differently. For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> have no effect when a well-known object instance is provided using this constructor overload. Similarly, any other instance release mechanism is ignored. The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> for all operations.","nodes":[{"content":"Note that when an object is provided to this overload, some features related to the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> instancing behavior work differently.","pos":[0,167],"source":"Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] instancing behavior work differently."},{"content":"For example, calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName&gt;</ph> have no effect when a well-known object instance is provided using this constructor overload.","pos":[168,376],"source":" For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> have no effect when a well-known object instance is provided using this constructor overload."},{"content":"Similarly, any other instance release mechanism is ignored.","pos":[377,436]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> always behaves as if the <ph id=\"ph2\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName&gt;</ph> property is set to <ph id=\"ph3\">&lt;xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName&gt;</ph> for all operations.","pos":[437,717],"source":" The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> for all operations."}]}],"pos":[11246,12404],"yaml":true,"extradata":"MT"},{"content":"The instance of the hosted service.","nodes":[{"pos":[0,35],"content":"The instance of the hosted service.","nodes":[{"content":"The instance of the hosted service.","pos":[0,35]}]}],"pos":[12834,12870],"yaml":true},{"content":"An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,133],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[12938,13072],"yaml":true},{"content":"<code>singletonInstance</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;singletonInstance&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>singletonInstance</code> is `null`."}],"pos":[13239,13281],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the type of service and its base addresses specified.","nodes":[{"pos":[0,151],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> class with the type of service and its base addresses specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the type of service and its base addresses specified."}],"pos":[14297,14449],"yaml":true},{"content":"Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.","nodes":[{"pos":[0,346],"content":"Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.","nodes":[{"content":"Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.","pos":[0,346],"nodes":[{"content":"Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.","pos":[0,144]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor instead only when you want the service host to use a specific singleton instance of the service.","pos":[145,346],"source":" Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service."}]}]}],"pos":[14460,14807],"yaml":true,"extradata":"MT"},{"content":"The type of hosted service.","nodes":[{"pos":[0,27],"content":"The type of hosted service.","nodes":[{"content":"The type of hosted service.","pos":[0,27]}]}],"pos":[15353,15381],"yaml":true},{"content":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,105],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[15449,15555],"yaml":true},{"content":"<code>serviceType</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serviceType</code> is `null`."}],"pos":[15722,15758],"yaml":true},{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.","nodes":[{"pos":[0,103],"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.","nodes":[{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.","pos":[0,103]}]}],"pos":[16971,17075],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of contract for the endpoint added.","source":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added."}],"pos":[17611,17684],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> for the endpoint added.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added."}],"pos":[17770,17856],"yaml":true},{"content":"The address for the endpoint added.","nodes":[{"pos":[0,35],"content":"The address for the endpoint added.","nodes":[{"content":"The address for the endpoint added.","pos":[0,35]}]}],"pos":[17919,17955],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> added to the hosted service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service."}],"pos":[18046,18148],"yaml":true},{"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.","nodes":[{"pos":[0,91],"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or","pos":[0,59],"source":"<code>implementedContract</code> or <code>binding</code> or "},{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[81,91],"source":" is `null`."}]}],"pos":[18328,18420],"yaml":true},{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.","nodes":[{"pos":[0,125],"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.","nodes":[{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.","pos":[0,125]}]}],"pos":[19615,19741],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of contract for the endpoint added.","source":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added."}],"pos":[20274,20347],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> for the endpoint added.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added."}],"pos":[20433,20519],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the address for the endpoint added.","source":"The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added."}],"pos":[20579,20665],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> added to the hosted service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service."}],"pos":[20756,20858],"yaml":true},{"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.","nodes":[{"pos":[0,91],"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or","pos":[0,59],"source":"<code>implementedContract</code> or <code>binding</code> or "},{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[81,91],"source":" is `null`."}]}],"pos":[21038,21130],"yaml":true},{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.","nodes":[{"pos":[0,142],"content":"Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.","nodes":[{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.","pos":[0,142]}]}],"pos":[22391,22534],"yaml":true},{"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","nodes":[{"pos":[0,111],"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","nodes":[{"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","pos":[0,111]}]}],"pos":[22545,22657],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of contract for the endpoint added.","source":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added."}],"pos":[23194,23267],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> for the endpoint added.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added."}],"pos":[23353,23439],"yaml":true},{"content":"The endpoint address for the service.","nodes":[{"pos":[0,37],"content":"The endpoint address for the service.","nodes":[{"content":"The endpoint address for the service.","pos":[0,37]}]}],"pos":[23502,23540],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> on which the service endpoints can listen.","source":"The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen."}],"pos":[23602,23681],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> added to the hosted service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service."}],"pos":[23772,23874],"yaml":true},{"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.","nodes":[{"pos":[0,91],"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or","pos":[0,59],"source":"<code>implementedContract</code> or <code>binding</code> or "},{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[81,91],"source":" is `null`."}]}],"pos":[24054,24146],"yaml":true},{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.","nodes":[{"pos":[0,163],"content":"Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.","nodes":[{"content":"Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.","pos":[0,163]}]}],"pos":[25389,25553],"yaml":true},{"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","nodes":[{"pos":[0,111],"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","nodes":[{"content":"Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.","pos":[0,111]}]}],"pos":[25564,25676],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of contract for the endpoint added.","source":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added."}],"pos":[26210,26283],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> for the endpoint added.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added."}],"pos":[26369,26455],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the address for the endpoint added.","source":"The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added."}],"pos":[26515,26601],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> on which the service endpoints can listen.","source":"The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen."}],"pos":[26663,26742],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> added to the hosted service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service."}],"pos":[26833,26935],"yaml":true},{"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.","nodes":[{"pos":[0,91],"content":"<code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or","pos":[0,59],"source":"<code>implementedContract</code> or <code>binding</code> or "},{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[81,91],"source":" is `null`."}]}],"pos":[27115,27207],"yaml":true},{"content":"The contracts are not initialized or the contract keys cannot be found.","nodes":[{"pos":[0,71],"content":"The contracts are not initialized or the contract keys cannot be found.","nodes":[{"content":"The contracts are not initialized or the contract keys cannot be found.","pos":[0,71]}]}],"pos":[27317,27389],"yaml":true},{"content":"Loads the service description from the configuration file and applies it to the runtime being constructed.","nodes":[{"pos":[0,106],"content":"Loads the service description from the configuration file and applies it to the runtime being constructed.","nodes":[{"content":"Loads the service description from the configuration file and applies it to the runtime being constructed.","pos":[0,106]}]}],"pos":[28347,28454],"yaml":true},{"content":"Creates a description of the service hosted.","nodes":[{"pos":[0,44],"content":"Creates a description of the service hosted.","nodes":[{"content":"Creates a description of the service hosted.","pos":[0,44]}]}],"pos":[30017,30062],"yaml":true},{"content":"This method is used to construct contract descriptions from customized programming models. Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.","nodes":[{"pos":[0,353],"content":"This method is used to construct contract descriptions from customized programming models. Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.","nodes":[{"content":"This method is used to construct contract descriptions from customized programming models. Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.","pos":[0,353],"nodes":[{"content":"This method is used to construct contract descriptions from customized programming models.","pos":[0,90]},{"content":"Override the corresponding base class method, <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;</ph>, to implement the customized model.","pos":[91,353],"source":" Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model."}]}]}],"pos":[30073,30427],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> with key pairs of type (<xref href=\"System.String\"></xref>, <xref href=\"System.ServiceModel.Description.ContractDescription\"></xref>) that contains the keyed-contracts of the hosted service that have been implemented.","nodes":[{"pos":[0,283],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IDictionary`2\"&gt;&lt;/xref&gt;</ph> with key pairs of type (<ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Description.ContractDescription\"&gt;&lt;/xref&gt;</ph>) that contains the keyed-contracts of the hosted service that have been implemented.","source":"The <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> with key pairs of type (<xref href=\"System.String\"></xref>, <xref href=\"System.ServiceModel.Description.ContractDescription\"></xref>) that contains the keyed-contracts of the hosted service that have been implemented."}],"pos":[30849,31133],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Description.ServiceDescription\"></xref> of the hosted service.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceDescription\"&gt;&lt;/xref&gt;</ph> of the hosted service.","source":"A <xref href=\"System.ServiceModel.Description.ServiceDescription\"></xref> of the hosted service."}],"pos":[31227,31324],"yaml":true},{"content":"The type of service hosted is `null`.","nodes":[{"pos":[0,37],"content":"The type of service hosted is <ph id=\"ph1\">`null`</ph>.","source":"The type of service hosted is `null`."}],"pos":[31511,31549],"yaml":true},{"content":"Initializes a description of the service hosted based on its instance and specified base addresses.","nodes":[{"pos":[0,99],"content":"Initializes a description of the service hosted based on its instance and specified base addresses.","nodes":[{"content":"Initializes a description of the service hosted based on its instance and specified base addresses.","pos":[0,99]}]}],"pos":[32801,32901],"yaml":true},{"content":"The instance of the hosted service.","nodes":[{"pos":[0,35],"content":"The instance of the hosted service.","nodes":[{"content":"The instance of the hosted service.","pos":[0,35]}]}],"pos":[33138,33174],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service."}],"pos":[33274,33401],"yaml":true},{"content":"<code>singletonInstance</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;singletonInstance&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>singletonInstance</code> is `null`."}],"pos":[33584,33626],"yaml":true},{"content":"Initializes a description of the service hosted based on its type and specified base addresses.","nodes":[{"pos":[0,95],"content":"Initializes a description of the service hosted based on its type and specified base addresses.","nodes":[{"content":"Initializes a description of the service hosted based on its type and specified base addresses.","pos":[0,95]}]}],"pos":[34866,34962],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of service hosted.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of service hosted.","source":"The <xref href=\"System.Type\"></xref> of service hosted."}],"pos":[35183,35239],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service."}],"pos":[35339,35466],"yaml":true},{"content":"<code>serviceType</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serviceType</code> is `null`."}],"pos":[35649,35685],"yaml":true},{"content":"Disposes of disposable services that are being hosted when the service host is closed.","nodes":[{"pos":[0,86],"content":"Disposes of disposable services that are being hosted when the service host is closed.","nodes":[{"content":"Disposes of disposable services that are being hosted when the service host is closed.","pos":[0,86]}]}],"pos":[36583,36670],"yaml":true},{"content":"When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs. The following code illustrates how to do this.  \n  \n```  \nprotected override void OnClosed()  \n{  \n    try  \n    {  \n        if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)  \n        {  \n            FaultFlagService.faultFlag = ThrowDuring.Never;  \n            throw new ServiceActivationException(\"Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed\");  \n        }  \n    }  \n    finally  \n    {  \n        base.OnClosed();  \n    }  \n}  \n  \n```","nodes":[{"pos":[0,205],"content":"When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs. The following code illustrates how to do this.","nodes":[{"content":"When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs. The following code illustrates how to do this.","pos":[0,205],"nodes":[{"content":"When overriding the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost.OnClosed%2A&gt;</ph> method you must ensure the base.OnClosed method is called, even if an exception occurs.","pos":[0,158],"source":"When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs."},{"content":"The following code illustrates how to do this.","pos":[159,205]}]}]}],"pos":[36681,37342],"yaml":true,"extradata":"MT"},{"content":"Gets the singleton instance of the hosted service.","nodes":[{"pos":[0,50],"content":"Gets the singleton instance of the hosted service.","nodes":[{"content":"Gets the singleton instance of the hosted service.","pos":[0,50]}]}],"pos":[38440,38491],"yaml":true},{"content":"Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.","nodes":[{"pos":[0,234],"content":"Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.","pos":[0,234],"source":"Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used."}]}],"pos":[38502,38737],"yaml":true,"extradata":"MT"},{"content":"The hosted service object.","nodes":[{"pos":[0,26],"content":"The hosted service object.","nodes":[{"content":"The hosted service object.","pos":[0,26]}]}],"pos":[38858,38885],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ServiceHost\n  commentId: T:System.ServiceModel.ServiceHost\n  id: ServiceHost\n  children:\n  - System.ServiceModel.ServiceHost.#ctor\n  - System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])\n  - System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHost.ApplyConfiguration\n  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.OnClosed\n  - System.ServiceModel.ServiceHost.SingletonInstance\n  langs:\n  - csharp\n  name: ServiceHost\n  nameWithType: ServiceHost\n  fullName: System.ServiceModel.ServiceHost\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Provides a host for services.\n  remarks: \"Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model.  \\n  \\n Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.  \\n  \\n To expose a service for use by callers, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.  \\n  \\n Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.\"\n  example:\n  - >-\n    [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]\n     [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]\n  syntax:\n    content: 'public class ServiceHost : System.ServiceModel.ServiceHostBase'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ServiceHostBase\n  derivedClasses:\n  - System.ServiceModel.Security.WSTrustServiceHost\n  - System.ServiceModel.Web.WebServiceHost\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHostBase.Authentication\n  - System.ServiceModel.ServiceHostBase.Authorization\n  - System.ServiceModel.ServiceHostBase.BaseAddresses\n  - System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  - System.ServiceModel.ServiceHostBase.CloseTimeout\n  - System.ServiceModel.ServiceHostBase.Credentials\n  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  - System.ServiceModel.ServiceHostBase.Description\n  - System.ServiceModel.ServiceHostBase.Extensions\n  - System.ServiceModel.ServiceHostBase.ImplementedContracts\n  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHostBase.InitializeRuntime\n  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  - System.ServiceModel.ServiceHostBase.OnAbort\n  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnOpened\n  - System.ServiceModel.ServiceHostBase.OpenTimeout\n  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.#ctor\n  commentId: M:System.ServiceModel.ServiceHost.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: ServiceHost()\n  nameWithType: ServiceHost.ServiceHost()\n  fullName: ServiceHost.ServiceHost()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class.\n  remarks: There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time. The host can use this to create new services as needed. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.\n  syntax:\n    content: protected ServiceHost ();\n    parameters: []\n  overload: System.ServiceModel.ServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])\n  commentId: M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])\n  id: '#ctor(System.Object,System.Uri[])'\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: ServiceHost(Object, Uri[])\n  nameWithType: ServiceHost.ServiceHost(Object, Uri[])\n  fullName: ServiceHost.ServiceHost(Object, Uri[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the instance of the service and its base addresses specified.\n  remarks: \"Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> when you want to provide a specific object instance for use by a singleton service. You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).  \\n  \\n Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] instancing behavior work differently. For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> have no effect when a well-known object instance is provided using this constructor overload. Similarly, any other instance release mechanism is ignored. The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> for all operations.\"\n  example:\n  - >-\n    [!code-csharp[S_UEServiceHost2#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost2/cs/service.cs#1)]\n     [!code-vb[S_UEServiceHost2#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost2/vb/service.vb#1)]\n  syntax:\n    content: public ServiceHost (object singletonInstance, Uri[] baseAddresses);\n    parameters:\n    - id: singletonInstance\n      type: System.Object\n      description: The instance of the hosted service.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.ServiceHost.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>singletonInstance</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])\n  commentId: M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])\n  id: '#ctor(System.Type,System.Uri[])'\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: ServiceHost(Type, Uri[])\n  nameWithType: ServiceHost.ServiceHost(Type, Uri[])\n  fullName: ServiceHost.ServiceHost(Type, Uri[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ServiceHost\"></xref> class with the type of service and its base addresses specified.\n  remarks: Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance. Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.\n  example:\n  - \"This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:  \\n  \\n [!code-csharp[S_UEServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#1)]\\n [!code-vb[S_UEServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#1)]\"\n  syntax:\n    content: public ServiceHost (Type serviceType, Uri[] baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of hosted service.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.ServiceHost.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  commentId: M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type, Binding, String)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, String)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.\n  remarks: ''\n  example:\n  - >-\n    [!code-csharp[S_UEServiceHost#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#3)]\n     [!code-vb[S_UEServiceHost#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#3)]\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.\n    - id: address\n      type: System.String\n      description: The address for the endpoint added.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service.\n  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  commentId: M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type, Binding, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.\n  remarks: ''\n  example:\n  - >-\n    [!code-csharp[S_UEServiceHost#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#4)]\n     [!code-vb[S_UEServiceHost#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#4)]\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.\n    - id: address\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service.\n  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  commentId: M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type, Binding, String, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.\n  remarks: Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.\n  example:\n  - >-\n    [!code-csharp[S_UEServiceHost#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#5)]\n     [!code-vb[S_UEServiceHost#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#5)]\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.\n    - id: address\n      type: System.String\n      description: The endpoint address for the service.\n    - id: listenUri\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service.\n  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  commentId: M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type, Binding, Uri, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.\n  remarks: Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.\n  example:\n  - >-\n    [!code-csharp[S_UEServiceHost#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#6)]\n     [!code-vb[S_UEServiceHost#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#6)]\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.\n    - id: address\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added.\n    - id: listenUri\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the hosted service.\n  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The contracts are not initialized or the contract keys cannot be found.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.ApplyConfiguration\n  commentId: M:System.ServiceModel.ServiceHost.ApplyConfiguration\n  id: ApplyConfiguration\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: ApplyConfiguration()\n  nameWithType: ServiceHost.ApplyConfiguration()\n  fullName: ServiceHost.ApplyConfiguration()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Loads the service description from the configuration file and applies it to the runtime being constructed.\n  syntax:\n    content: protected override void ApplyConfiguration ();\n    parameters: []\n  overload: System.ServiceModel.ServiceHost.ApplyConfiguration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  commentId: M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: CreateDescription(IDictionary<String,ContractDescription>)\n  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  fullName: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a description of the service hosted.\n  remarks: This method is used to construct contract descriptions from customized programming models. Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.\n  syntax:\n    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);\n    parameters:\n    - id: implementedContracts\n      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}\n      description: The <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> with key pairs of type (<xref href=\"System.String\"></xref>, <xref href=\"System.ServiceModel.Description.ContractDescription\"></xref>) that contains the keyed-contracts of the hosted service that have been implemented.\n    return:\n      type: System.ServiceModel.Description.ServiceDescription\n      description: A <xref href=\"System.ServiceModel.Description.ServiceDescription\"></xref> of the hosted service.\n  overload: System.ServiceModel.ServiceHost.CreateDescription*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The type of service hosted is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  commentId: M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  id: InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: InitializeDescription(Object, UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Object, UriSchemeKeyedCollection)\n  fullName: ServiceHost.InitializeDescription(Object, UriSchemeKeyedCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a description of the service hosted based on its instance and specified base addresses.\n  syntax:\n    content: protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);\n    parameters:\n    - id: singletonInstance\n      type: System.Object\n      description: The instance of the hosted service.\n    - id: baseAddresses\n      type: System.ServiceModel.UriSchemeKeyedCollection\n      description: The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.ServiceHost.InitializeDescription*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>singletonInstance</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  commentId: M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  id: InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: InitializeDescription(Type, UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Type, UriSchemeKeyedCollection)\n  fullName: ServiceHost.InitializeDescription(Type, UriSchemeKeyedCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a description of the service hosted based on its type and specified base addresses.\n  syntax:\n    content: protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of service hosted.\n    - id: baseAddresses\n      type: System.ServiceModel.UriSchemeKeyedCollection\n      description: The <xref href=\"System.ServiceModel.UriSchemeKeyedCollection\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.ServiceHost.InitializeDescription*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.OnClosed\n  commentId: M:System.ServiceModel.ServiceHost.OnClosed\n  id: OnClosed\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: OnClosed()\n  nameWithType: ServiceHost.OnClosed()\n  fullName: ServiceHost.OnClosed()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Disposes of disposable services that are being hosted when the service host is closed.\n  remarks: \"When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs. The following code illustrates how to do this.  \\n  \\n```  \\nprotected override void OnClosed()  \\n{  \\n    try  \\n    {  \\n        if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)  \\n        {  \\n            FaultFlagService.faultFlag = ThrowDuring.Never;  \\n            throw new ServiceActivationException(\\\"Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed\\\");  \\n        }  \\n    }  \\n    finally  \\n    {  \\n        base.OnClosed();  \\n    }  \\n}  \\n  \\n```\"\n  syntax:\n    content: protected override void OnClosed ();\n    parameters: []\n  overload: System.ServiceModel.ServiceHost.OnClosed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ServiceHost.SingletonInstance\n  commentId: P:System.ServiceModel.ServiceHost.SingletonInstance\n  id: SingletonInstance\n  parent: System.ServiceModel.ServiceHost\n  langs:\n  - csharp\n  name: SingletonInstance\n  nameWithType: ServiceHost.SingletonInstance\n  fullName: ServiceHost.SingletonInstance\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the singleton instance of the hosted service.\n  remarks: Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.\n  syntax:\n    content: public object SingletonInstance { get; }\n    return:\n      type: System.Object\n      description: The hosted service object.\n  overload: System.ServiceModel.ServiceHost.SingletonInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.ServiceHost.#ctor\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ServiceHost()\n  nameWithType: ServiceHost.ServiceHost()\n  fullName: ServiceHost.ServiceHost()\n- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ServiceHost(Object, Uri[])\n  nameWithType: ServiceHost.ServiceHost(Object, Uri[])\n  fullName: ServiceHost.ServiceHost(Object, Uri[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Uri[]\n  parent: System\n  isExternal: false\n  name: Uri[]\n  nameWithType: Uri[]\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ServiceHost(Type, Uri[])\n  nameWithType: ServiceHost.ServiceHost(Type, Uri[])\n  fullName: ServiceHost.ServiceHost(Type, Uri[])\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, String)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, String)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, String)\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, String, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, Uri, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n- uid: System.ServiceModel.ServiceHost.ApplyConfiguration\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ApplyConfiguration()\n  nameWithType: ServiceHost.ApplyConfiguration()\n  fullName: ServiceHost.ApplyConfiguration()\n- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: CreateDescription(IDictionary<String,ContractDescription>)\n  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  fullName: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n- uid: System.ServiceModel.Description.ServiceDescription\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceDescription\n  nameWithType: ServiceDescription\n  fullName: System.ServiceModel.Description.ServiceDescription\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.ServiceModel.Description.ContractDescription\n  name: ContractDescription\n  nameWithType: ContractDescription\n  fullName: System.ServiceModel.Description.ContractDescription\n- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,ContractDescription>\n  nameWithType: IDictionary<String,ContractDescription>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: System.ServiceModel.Description.ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: InitializeDescription(Object, UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Object, UriSchemeKeyedCollection)\n  fullName: ServiceHost.InitializeDescription(Object, UriSchemeKeyedCollection)\n- uid: System.ServiceModel.UriSchemeKeyedCollection\n  parent: System.ServiceModel\n  isExternal: false\n  name: UriSchemeKeyedCollection\n  nameWithType: UriSchemeKeyedCollection\n  fullName: System.ServiceModel.UriSchemeKeyedCollection\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: InitializeDescription(Type, UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Type, UriSchemeKeyedCollection)\n  fullName: ServiceHost.InitializeDescription(Type, UriSchemeKeyedCollection)\n- uid: System.ServiceModel.ServiceHost.OnClosed\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: OnClosed()\n  nameWithType: ServiceHost.OnClosed()\n  fullName: ServiceHost.OnClosed()\n- uid: System.ServiceModel.ServiceHost.SingletonInstance\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: SingletonInstance\n  nameWithType: ServiceHost.SingletonInstance\n  fullName: ServiceHost.SingletonInstance\n- uid: System.ServiceModel.ServiceHost.InitializeDescription*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: InitializeDescription\n  nameWithType: ServiceHost.InitializeDescription\n  fullName: ServiceHost.InitializeDescription\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n- uid: System.ServiceModel.ServiceHost.#ctor*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ServiceHost\n  nameWithType: ServiceHost.ServiceHost\n  fullName: ServiceHost.ServiceHost\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint\n  nameWithType: ServiceHost.AddServiceEndpoint\n  fullName: ServiceHost.AddServiceEndpoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n- uid: System.ServiceModel.ServiceHost.ApplyConfiguration*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ApplyConfiguration\n  nameWithType: ServiceHost.ApplyConfiguration\n  fullName: ServiceHost.ApplyConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n- uid: System.ServiceModel.ServiceHost.CreateDescription*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: CreateDescription\n  nameWithType: ServiceHost.CreateDescription\n  fullName: ServiceHost.CreateDescription\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n- uid: System.ServiceModel.ServiceHost.OnClosed*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: OnClosed\n  nameWithType: ServiceHost.OnClosed\n  fullName: ServiceHost.OnClosed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n- uid: System.ServiceModel.ServiceHost.SingletonInstance*\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: SingletonInstance\n  nameWithType: ServiceHost.SingletonInstance\n  fullName: ServiceHost.SingletonInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHost.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ServiceHostBase.DefaultCloseTimeout\n  fullName: ServiceHostBase.DefaultCloseTimeout\n- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ServiceHostBase.DefaultOpenTimeout\n  fullName: ServiceHostBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.ServiceHostBase.OnAbort\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ServiceHostBase.OnAbort()\n  fullName: ServiceHostBase.OnAbort()\n- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ServiceHostBase.OnClose(TimeSpan)\n  fullName: ServiceHostBase.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)\n  fullName: ServiceHostBase.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)\n  fullName: ServiceHostBase.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: ServiceHostBase.OnOpen(TimeSpan)\n  fullName: ServiceHostBase.OnOpen(TimeSpan)\n- uid: System.ServiceModel.ServiceHostBase.OnOpened\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnOpened()\n  nameWithType: ServiceHostBase.OnOpened()\n  fullName: ServiceHostBase.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddBaseAddress(Uri)\n  nameWithType: ServiceHostBase.AddBaseAddress(Uri)\n  fullName: ServiceHostBase.AddBaseAddress(Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddDefaultEndpoints()\n  nameWithType: ServiceHostBase.AddDefaultEndpoints()\n  fullName: ServiceHostBase.AddDefaultEndpoints()\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(ServiceEndpoint)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)\n  fullName: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, String)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, String, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, Uri, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)\n- uid: System.ServiceModel.ServiceHostBase.Authentication\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Authentication\n  nameWithType: ServiceHostBase.Authentication\n  fullName: ServiceHostBase.Authentication\n- uid: System.ServiceModel.ServiceHostBase.Authorization\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Authorization\n  nameWithType: ServiceHostBase.Authorization\n  fullName: ServiceHostBase.Authorization\n- uid: System.ServiceModel.ServiceHostBase.BaseAddresses\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: BaseAddresses\n  nameWithType: ServiceHostBase.BaseAddresses\n  fullName: ServiceHostBase.BaseAddresses\n- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ChannelDispatchers\n  nameWithType: ServiceHostBase.ChannelDispatchers\n  fullName: ServiceHostBase.ChannelDispatchers\n- uid: System.ServiceModel.ServiceHostBase.CloseTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: ServiceHostBase.CloseTimeout\n  fullName: ServiceHostBase.CloseTimeout\n- uid: System.ServiceModel.ServiceHostBase.Credentials\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Credentials\n  nameWithType: ServiceHostBase.Credentials\n  fullName: ServiceHostBase.Credentials\n- uid: System.ServiceModel.ServiceHostBase.Description\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Description\n  nameWithType: ServiceHostBase.Description\n  fullName: ServiceHostBase.Description\n- uid: System.ServiceModel.ServiceHostBase.Extensions\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Extensions\n  nameWithType: ServiceHostBase.Extensions\n  fullName: ServiceHostBase.Extensions\n- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ImplementedContracts\n  nameWithType: ServiceHostBase.ImplementedContracts\n  fullName: ServiceHostBase.ImplementedContracts\n- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: IncrementManualFlowControlLimit(Int32)\n  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)\n  fullName: ServiceHostBase.IncrementManualFlowControlLimit(Int32)\n- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: InitializeDescription(UriSchemeKeyedCollection)\n  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)\n  fullName: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)\n- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: InitializeRuntime()\n  nameWithType: ServiceHostBase.InitializeRuntime()\n  fullName: ServiceHostBase.InitializeRuntime()\n- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: LoadConfigurationSection(ServiceElement)\n  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)\n  fullName: ServiceHostBase.LoadConfigurationSection(ServiceElement)\n- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ManualFlowControlLimit\n  nameWithType: ServiceHostBase.ManualFlowControlLimit\n  fullName: ServiceHostBase.ManualFlowControlLimit\n- uid: System.ServiceModel.ServiceHostBase.OpenTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: ServiceHostBase.OpenTimeout\n  fullName: ServiceHostBase.OpenTimeout\n- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ReleasePerformanceCounters()\n  nameWithType: ServiceHostBase.ReleasePerformanceCounters()\n  fullName: ServiceHostBase.ReleasePerformanceCounters()\n- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: SetEndpointAddress(ServiceEndpoint, String)\n  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)\n  fullName: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)\n- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: UnknownMessageReceived\n  nameWithType: ServiceHostBase.UnknownMessageReceived\n  fullName: ServiceHostBase.UnknownMessageReceived\n- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: ServiceHostBase.IDisposable.Dispose()\n  fullName: ServiceHostBase.IDisposable.Dispose()\n"}