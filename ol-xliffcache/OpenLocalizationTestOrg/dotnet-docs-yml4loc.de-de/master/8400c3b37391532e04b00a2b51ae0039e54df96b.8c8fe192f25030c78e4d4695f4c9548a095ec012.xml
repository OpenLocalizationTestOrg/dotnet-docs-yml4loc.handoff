{"nodes":[{"content":"Is the base class to create providers for encrypting and decrypting protected-configuration data.","nodes":[{"pos":[0,97],"content":"Is the base class to create providers for encrypting and decrypting protected-configuration data.","nodes":[{"content":"Is the base class to create providers for encrypting and decrypting protected-configuration data.","pos":[0,97]}]}],"pos":[755,853],"yaml":true},{"content":"You can encrypt sections of a configuration file to protect sensitive information used by your application. This improves security by making it difficult for unauthorized access even if an attacker gains access to your configuration file.  \n  \n The .NET Framework includes two protected configuration providers that can be used to encrypt sections of a configuration file. The <xref:System.Configuration.RsaProtectedConfigurationProvider> class uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> to encrypt configuration sections. The <xref:System.Configuration.DpapiProtectedConfigurationProvider> class uses the Windows Data Protection API (DPAPI) to encrypt configuration sections.  \n  \n You might have a requirement to encrypt sensitive information using an algorithm other than the RSA or DPAPI providers. In this case, you can build your own custom protected-configuration provider. The <xref:System.Configuration.ProtectedConfigurationProvider> is an abstract base class that you must inherit from to create your own protected-configuration provider.  \n  \n Whether you use a standard or a custom provider, you must ensure that it is configured with the `add` element in the `providers` section of the `configProtectedData`  configuration section. (See next example.)  \n  \n For details, see [Implementing a Protected Configuration Provider](http://msdn.microsoft.com/library/afc329e4-ef37-4915-b419-b37c745d2865).  \n  \n> [!NOTE]\n>  When ASP.NET encounters encrypted configuration data, it performs decryption transparently using the configured provider. No action is required on your side other than making sure that you configure the required provider.","nodes":[{"pos":[0,238],"content":"You can encrypt sections of a configuration file to protect sensitive information used by your application. This improves security by making it difficult for unauthorized access even if an attacker gains access to your configuration file.","nodes":[{"content":"You can encrypt sections of a configuration file to protect sensitive information used by your application. This improves security by making it difficult for unauthorized access even if an attacker gains access to your configuration file.","pos":[0,238],"nodes":[{"content":"You can encrypt sections of a configuration file to protect sensitive information used by your application.","pos":[0,107]},{"content":"This improves security by making it difficult for unauthorized access even if an attacker gains access to your configuration file.","pos":[108,238]}]}]},{"pos":[245,703],"content":"The .NET Framework includes two protected configuration providers that can be used to encrypt sections of a configuration file. The <xref:System.Configuration.RsaProtectedConfigurationProvider> class uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> to encrypt configuration sections. The <xref:System.Configuration.DpapiProtectedConfigurationProvider> class uses the Windows Data Protection API (DPAPI) to encrypt configuration sections.","nodes":[{"content":"The .NET Framework includes two protected configuration providers that can be used to encrypt sections of a configuration file. The <xref:System.Configuration.RsaProtectedConfigurationProvider> class uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> to encrypt configuration sections. The <xref:System.Configuration.DpapiProtectedConfigurationProvider> class uses the Windows Data Protection API (DPAPI) to encrypt configuration sections.","pos":[0,458],"nodes":[{"content":"The .NET Framework includes two protected configuration providers that can be used to encrypt sections of a configuration file.","pos":[0,127]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.RsaProtectedConfigurationProvider&gt;</ph> class uses the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> to encrypt configuration sections.","pos":[128,304],"source":" The <xref:System.Configuration.RsaProtectedConfigurationProvider> class uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> to encrypt configuration sections."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.DpapiProtectedConfigurationProvider&gt;</ph> class uses the Windows Data Protection API (DPAPI) to encrypt configuration sections.","pos":[305,458],"source":" The <xref:System.Configuration.DpapiProtectedConfigurationProvider> class uses the Windows Data Protection API (DPAPI) to encrypt configuration sections."}]}]},{"pos":[710,1076],"content":"You might have a requirement to encrypt sensitive information using an algorithm other than the RSA or DPAPI providers. In this case, you can build your own custom protected-configuration provider. The <xref:System.Configuration.ProtectedConfigurationProvider> is an abstract base class that you must inherit from to create your own protected-configuration provider.","nodes":[{"content":"You might have a requirement to encrypt sensitive information using an algorithm other than the RSA or DPAPI providers. In this case, you can build your own custom protected-configuration provider. The <xref:System.Configuration.ProtectedConfigurationProvider> is an abstract base class that you must inherit from to create your own protected-configuration provider.","pos":[0,366],"nodes":[{"content":"You might have a requirement to encrypt sensitive information using an algorithm other than the RSA or DPAPI providers.","pos":[0,119]},{"content":"In this case, you can build your own custom protected-configuration provider.","pos":[120,197]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.ProtectedConfigurationProvider&gt;</ph> is an abstract base class that you must inherit from to create your own protected-configuration provider.","pos":[198,366],"source":" The <xref:System.Configuration.ProtectedConfigurationProvider> is an abstract base class that you must inherit from to create your own protected-configuration provider."}]}]},{"pos":[1083,1292],"content":"Whether you use a standard or a custom provider, you must ensure that it is configured with the `add` element in the `providers` section of the `configProtectedData`  configuration section. (See next example.)","nodes":[{"content":"Whether you use a standard or a custom provider, you must ensure that it is configured with the <ph id=\"ph1\">`add`</ph> element in the <ph id=\"ph2\">`providers`</ph> section of the <ph id=\"ph3\">`configProtectedData`</ph>  configuration section.","pos":[0,189],"source":"Whether you use a standard or a custom provider, you must ensure that it is configured with the `add` element in the `providers` section of the `configProtectedData`  configuration section."},{"content":"(See next example.)","pos":[190,209]}]},{"pos":[1299,1438],"content":"For details, see <bpt id=\"p1\">[</bpt>Implementing a Protected Configuration Provider<ept id=\"p1\">](http://msdn.microsoft.com/library/afc329e4-ef37-4915-b419-b37c745d2865)</ept>.","source":"For details, see [Implementing a Protected Configuration Provider](http://msdn.microsoft.com/library/afc329e4-ef37-4915-b419-b37c745d2865)."},{"pos":[1446,1678],"content":"[!NOTE]\n When ASP.NET encounters encrypted configuration data, it performs decryption transparently using the configured provider. No action is required on your side other than making sure that you configure the required provider.","leadings":["","> "],"nodes":[{"content":" When ASP.NET encounters encrypted configuration data, it performs decryption transparently using the configured provider. No action is required on your side other than making sure that you configure the required provider.","pos":[8,230],"nodes":[{"content":"When ASP.NET encounters encrypted configuration data, it performs decryption transparently using the configured provider.","pos":[1,122]},{"content":"No action is required on your side other than making sure that you configure the required provider.","pos":[123,222]}]}]}],"pos":[864,2556],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.ProtectedConfigurationProvider\"></xref> class using default settings.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ProtectedConfigurationProvider\"&gt;&lt;/xref&gt;</ph> class using default settings.","source":"Initializes a new instance of the <xref href=\"System.Configuration.ProtectedConfigurationProvider\"></xref> class using default settings."}],"pos":[6951,7088],"yaml":true},{"content":"Decrypts the passed <xref href=\"System.Xml.XmlNode\"></xref> object from a configuration file.","nodes":[{"pos":[0,93],"content":"Decrypts the passed <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> object from a configuration file.","source":"Decrypts the passed <xref href=\"System.Xml.XmlNode\"></xref> object from a configuration file."}],"pos":[8457,8551],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlNode\"></xref> object containing decrypted data.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> object containing decrypted data.","source":"The <xref href=\"System.Xml.XmlNode\"></xref> object containing decrypted data."}],"pos":[9417,9495],"yaml":true},{"content":"Encrypts the passed <xref href=\"System.Xml.XmlNode\"></xref> object from a configuration file.","nodes":[{"pos":[0,93],"content":"Encrypts the passed <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> object from a configuration file.","source":"Encrypts the passed <xref href=\"System.Xml.XmlNode\"></xref> object from a configuration file."}],"pos":[10779,10873],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlNode\"></xref> object to encrypt.","nodes":[{"pos":[0,62],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> object to encrypt.","source":"The <xref href=\"System.Xml.XmlNode\"></xref> object to encrypt."}],"pos":[11648,11711],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlNode\"></xref> object containing encrypted data.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNode\"&gt;&lt;/xref&gt;</ph> object containing encrypted data.","source":"The <xref href=\"System.Xml.XmlNode\"></xref> object containing encrypted data."}],"pos":[11773,11851],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ProtectedConfigurationProvider\n  commentId: T:System.Configuration.ProtectedConfigurationProvider\n  id: ProtectedConfigurationProvider\n  children:\n  - System.Configuration.ProtectedConfigurationProvider.#ctor\n  - System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)\n  - System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)\n  langs:\n  - csharp\n  name: ProtectedConfigurationProvider\n  nameWithType: ProtectedConfigurationProvider\n  fullName: System.Configuration.ProtectedConfigurationProvider\n  type: Class\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Is the base class to create providers for encrypting and decrypting protected-configuration data.\n  remarks: \"You can encrypt sections of a configuration file to protect sensitive information used by your application. This improves security by making it difficult for unauthorized access even if an attacker gains access to your configuration file.  \\n  \\n The .NET Framework includes two protected configuration providers that can be used to encrypt sections of a configuration file. The <xref:System.Configuration.RsaProtectedConfigurationProvider> class uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> to encrypt configuration sections. The <xref:System.Configuration.DpapiProtectedConfigurationProvider> class uses the Windows Data Protection API (DPAPI) to encrypt configuration sections.  \\n  \\n You might have a requirement to encrypt sensitive information using an algorithm other than the RSA or DPAPI providers. In this case, you can build your own custom protected-configuration provider. The <xref:System.Configuration.ProtectedConfigurationProvider> is an abstract base class that you must inherit from to create your own protected-configuration provider.  \\n  \\n Whether you use a standard or a custom provider, you must ensure that it is configured with the `add` element in the `providers` section of the `configProtectedData`  configuration section. (See next example.)  \\n  \\n For details, see [Implementing a Protected Configuration Provider](http://msdn.microsoft.com/library/afc329e4-ef37-4915-b419-b37c745d2865).  \\n  \\n> [!NOTE]\\n>  When ASP.NET encounters encrypted configuration data, it performs decryption transparently using the configured provider. No action is required on your side other than making sure that you configure the required provider.\"\n  example:\n  - \"The following example shows how to implement a custom <xref:System.Configuration.ProtectedConfigurationProvider>.  \\n  \\n To be able to configure this provider, as shown in the next configuration excerpt, you must install it in the Global Assembly Cache (GAC). Refer to [Implementing a Protected Configuration Provider](http://msdn.microsoft.com/library/afc329e4-ef37-4915-b419-b37c745d2865) for more information.  \\n  \\n [!code-csharp[System.Configuration.ProtectedConfigurationProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ProtectedConfigurationProvider/CS/ProtectedConfigurationProviderLib.cs#1)]\\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ProtectedConfigurationProvider/VB/ProtectedConfigurationProviderLib.vb#1)]  \\n  \\n The following example shows how to use the previous custom <xref:System.Configuration.ProtectedConfigurationProvider>.  \\n  \\n [!code-csharp[System.Configuration.UsingProtectedConfigurationProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.UsingProtectedConfigurationProvider/CS/ProtectedConfigurationProvider.cs#11)]\\n [!code-vb[System.Configuration.UsingProtectedConfigurationProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.UsingProtectedConfigurationProvider/VB/ProtectedConfigurationProvider.vb#11)]  \\n  \\n The following is an excerpt of the configuration file used by the above examples.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>  \\n<configuration>  \\n  \\n  <configProtectedData >  \\n    <providers>  \\n      <clear />  \\n      <add keyContainerName=\\\"pcKey.txt\\\"   \\n        name=\\\"TripleDESProtectedConfigurationProvider\\\"  \\ntype=\\\"Samples.Aspnet.TripleDESProtectedConfigurationProvider, protectedconfigurationproviderlib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=79e01ae0f5cfc66f, processorArchitecture=MSIL\\\" />  \\n    </providers>  \\n  \\n  </configProtectedData >  \\n  \\n  <connectionStrings>  \\n    <add name=\\\"NorthwindConnectionString\\\"   \\n      connectionString=\\\"Data Source=webnetue2;Initial Catalog=Northwind;User ID=aspnet_test;Password=test\\\"  \\nproviderName=\\\"System.Data.SqlClient\\\" />  \\n  </connectionStrings>  \\n  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public abstract class ProtectedConfigurationProvider : System.Configuration.Provider.ProviderBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  derivedClasses:\n  - System.Configuration.DpapiProtectedConfigurationProvider\n  - System.Configuration.RsaProtectedConfigurationProvider\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ProtectedConfigurationProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ProtectedConfigurationProvider.#ctor\n  commentId: M:System.Configuration.ProtectedConfigurationProvider.#ctor\n  id: '#ctor'\n  parent: System.Configuration.ProtectedConfigurationProvider\n  langs:\n  - csharp\n  name: ProtectedConfigurationProvider()\n  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider()\n  fullName: ProtectedConfigurationProvider.ProtectedConfigurationProvider()\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.ProtectedConfigurationProvider\"></xref> class using default settings.\n  syntax:\n    content: protected ProtectedConfigurationProvider ();\n    parameters: []\n  overload: System.Configuration.ProtectedConfigurationProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ProtectedConfigurationProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)\n  commentId: M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)\n  id: Decrypt(System.Xml.XmlNode)\n  parent: System.Configuration.ProtectedConfigurationProvider\n  langs:\n  - csharp\n  name: Decrypt(XmlNode)\n  nameWithType: ProtectedConfigurationProvider.Decrypt(XmlNode)\n  fullName: ProtectedConfigurationProvider.Decrypt(XmlNode)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Decrypts the passed <xref href=\"System.Xml.XmlNode\"></xref> object from a configuration file.\n  remarks: ''\n  example:\n  - \"The following example shows how to use <xref:System.Configuration.ProtectedConfigurationProvider.Decrypt%2A> method to perform custom decryption.  \\n  \\n [!code-csharp[System.Configuration.ProtectedConfigurationProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ProtectedConfigurationProvider/CS/ProtectedConfigurationProviderLib.cs#2)]\\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ProtectedConfigurationProvider/VB/ProtectedConfigurationProviderLib.vb#2)]\"\n  syntax:\n    content: public abstract System.Xml.XmlNode Decrypt (System.Xml.XmlNode encrypted_node);\n    parameters:\n    - id: encryptedNode\n      type: System.Xml.XmlNode\n      description: ''\n    return:\n      type: System.Xml.XmlNode\n      description: The <xref href=\"System.Xml.XmlNode\"></xref> object containing decrypted data.\n  overload: System.Configuration.ProtectedConfigurationProvider.Decrypt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ProtectedConfigurationProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)\n  commentId: M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)\n  id: Encrypt(System.Xml.XmlNode)\n  parent: System.Configuration.ProtectedConfigurationProvider\n  langs:\n  - csharp\n  name: Encrypt(XmlNode)\n  nameWithType: ProtectedConfigurationProvider.Encrypt(XmlNode)\n  fullName: ProtectedConfigurationProvider.Encrypt(XmlNode)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Encrypts the passed <xref href=\"System.Xml.XmlNode\"></xref> object from a configuration file.\n  remarks: ''\n  example:\n  - \"The following example shows how to use <xref:System.Configuration.ProtectedConfigurationProvider.Encrypt%2A> to perform custom encryption.  \\n  \\n [!code-csharp[System.Configuration.ProtectedConfigurationProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ProtectedConfigurationProvider/CS/ProtectedConfigurationProviderLib.cs#3)]\\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ProtectedConfigurationProvider/VB/ProtectedConfigurationProviderLib.vb#3)]\"\n  syntax:\n    content: public abstract System.Xml.XmlNode Encrypt (System.Xml.XmlNode node);\n    parameters:\n    - id: node\n      type: System.Xml.XmlNode\n      description: The <xref href=\"System.Xml.XmlNode\"></xref> object to encrypt.\n    return:\n      type: System.Xml.XmlNode\n      description: The <xref href=\"System.Xml.XmlNode\"></xref> object containing encrypted data.\n  overload: System.Configuration.ProtectedConfigurationProvider.Encrypt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ProtectedConfigurationProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.Provider.ProviderBase\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderBase\n  nameWithType: ProviderBase\n  fullName: System.Configuration.Provider.ProviderBase\n- uid: System.Configuration.ProtectedConfigurationProvider.#ctor\n  parent: System.Configuration.ProtectedConfigurationProvider\n  isExternal: false\n  name: ProtectedConfigurationProvider()\n  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider()\n  fullName: ProtectedConfigurationProvider.ProtectedConfigurationProvider()\n- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)\n  parent: System.Configuration.ProtectedConfigurationProvider\n  isExternal: false\n  name: Decrypt(XmlNode)\n  nameWithType: ProtectedConfigurationProvider.Decrypt(XmlNode)\n  fullName: ProtectedConfigurationProvider.Decrypt(XmlNode)\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)\n  parent: System.Configuration.ProtectedConfigurationProvider\n  isExternal: false\n  name: Encrypt(XmlNode)\n  nameWithType: ProtectedConfigurationProvider.Encrypt(XmlNode)\n  fullName: ProtectedConfigurationProvider.Encrypt(XmlNode)\n- uid: System.Configuration.ProtectedConfigurationProvider.#ctor*\n  parent: System.Configuration.ProtectedConfigurationProvider\n  isExternal: false\n  name: ProtectedConfigurationProvider\n  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider\n  fullName: ProtectedConfigurationProvider.ProtectedConfigurationProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ProtectedConfigurationProvider.xml\n- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt*\n  parent: System.Configuration.ProtectedConfigurationProvider\n  isExternal: false\n  name: Decrypt\n  nameWithType: ProtectedConfigurationProvider.Decrypt\n  fullName: ProtectedConfigurationProvider.Decrypt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ProtectedConfigurationProvider.xml\n- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt*\n  parent: System.Configuration.ProtectedConfigurationProvider\n  isExternal: false\n  name: Encrypt\n  nameWithType: ProtectedConfigurationProvider.Encrypt\n  fullName: ProtectedConfigurationProvider.Encrypt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ProtectedConfigurationProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.Provider.ProviderBase.Description\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Description\n  nameWithType: ProviderBase.Description\n  fullName: ProviderBase.Description\n- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Initialize(String, NameValueCollection)\n  nameWithType: ProviderBase.Initialize(String, NameValueCollection)\n  fullName: ProviderBase.Initialize(String, NameValueCollection)\n- uid: System.Configuration.Provider.ProviderBase.Name\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Name\n  nameWithType: ProviderBase.Name\n  fullName: ProviderBase.Name\n"}