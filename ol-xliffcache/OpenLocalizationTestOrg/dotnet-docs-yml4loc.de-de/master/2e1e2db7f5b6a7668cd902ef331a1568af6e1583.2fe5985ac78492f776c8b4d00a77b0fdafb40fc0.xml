{"nodes":[{"content":"Implements the <xref href=\"System.ComponentModel.Design.IMenuCommandService\"></xref> interface.","nodes":[{"pos":[0,95],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.IMenuCommandService\"&gt;&lt;/xref&gt;</ph> interface.","source":"Implements the <xref href=\"System.ComponentModel.Design.IMenuCommandService\"></xref> interface."}],"pos":[2104,2200],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.MenuCommandService> class implements the <xref:System.ComponentModel.Design.IMenuCommandService> interface, which is the managed interface used to add handlers for menu commands and to define verbs.  \n  \n The <xref:System.ComponentModel.Design.MenuCommandService> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the `Microsoft.VisualStudio.Shell.WindowPane` class to offer commands for the current window. This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <xref:System.ComponentModel.Design.IMenuCommandService> interface.  \n  \n The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services. All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing. The following table shows which services are used and for what purpose.  \n  \n|Service|Purpose|  \n|-------------|-------------|  \n|<xref:System.ComponentModel.Design.ISelectionService>|Used to discover the current selection in order to obtain verbs offered by the currently selected designer.|  \n|<xref:System.ComponentModel.Design.IDesignerHost>|Used to obtain the designer for the currently selected component, if any.|  \n|`Microsoft.VisualStudio.Shell.Interop.IVsUIShell`|Used to notify [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] that the command status has changed.|  \n|`Microsoft.VisualStudio.Shell.Interop.IOleComponentUIManager`|Used to show context menus.|","nodes":[{"pos":[0,237],"content":"The <xref:System.ComponentModel.Design.MenuCommandService> class implements the <xref:System.ComponentModel.Design.IMenuCommandService> interface, which is the managed interface used to add handlers for menu commands and to define verbs.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class implements the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface, which is the managed interface used to add handlers for menu commands and to define verbs.","pos":[0,237],"source":"The <xref:System.ComponentModel.Design.MenuCommandService> class implements the <xref:System.ComponentModel.Design.IMenuCommandService> interface, which is the managed interface used to add handlers for menu commands and to define verbs."}]},{"pos":[244,764],"content":"The <xref:System.ComponentModel.Design.MenuCommandService> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the `Microsoft.VisualStudio.Shell.WindowPane` class to offer commands for the current window. This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <xref:System.ComponentModel.Design.IMenuCommandService> interface.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the <ph id=\"ph2\">`Microsoft.VisualStudio.Shell.WindowPane`</ph> class to offer commands for the current window.","pos":[0,278],"source":"The <xref:System.ComponentModel.Design.MenuCommandService> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the `Microsoft.VisualStudio.Shell.WindowPane` class to offer commands for the current window."},{"content":"This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface.","pos":[279,520],"source":" This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <xref:System.ComponentModel.Design.IMenuCommandService> interface."}]},{"pos":[771,1106],"content":"The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services. All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing. The following table shows which services are used and for what purpose.","nodes":[{"content":"The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services. All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing. The following table shows which services are used and for what purpose.","pos":[0,335],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class utilizes several other services.","pos":[0,97],"source":"The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services."},{"content":"All of these services are optional, so the behavior of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> class degrades if one or more services are missing.","pos":[98,263],"source":" All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing."},{"content":"The following table shows which services are used and for what purpose.","pos":[264,335]}]}]},{"pos":[1113,1120],"content":"Service","nodes":[{"content":"Service","pos":[0,7]}]},{"pos":[1121,1128],"content":"Purpose","nodes":[{"content":"Purpose","pos":[0,7]}]},{"pos":[1165,1218],"content":"<xref:System.ComponentModel.Design.ISelectionService>","nodes":[]},{"pos":[1219,1326],"content":"Used to discover the current selection in order to obtain verbs offered by the currently selected designer.","nodes":[{"content":"Used to discover the current selection in order to obtain verbs offered by the currently selected designer.","pos":[0,107]}]},{"pos":[1331,1380],"content":"<xref:System.ComponentModel.Design.IDesignerHost>","nodes":[]},{"pos":[1381,1454],"content":"Used to obtain the designer for the currently selected component, if any.","nodes":[{"content":"Used to obtain the designer for the currently selected component, if any.","pos":[0,73]}]},{"pos":[1509,1604],"content":"Used to notify <ph id=\"ph1\">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph> that the command status has changed.","source":"Used to notify [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] that the command status has changed."},{"pos":[1671,1698],"content":"Used to show context menus.","nodes":[{"content":"Used to show context menus.","pos":[0,27]}]}],"pos":[2211,3924],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommandService\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref> class."}],"pos":[5596,5706],"yaml":true},{"content":"If the service is being used with a designer, the `serviceProvider` parameter should be the service provider for the designer, as is the case with <xref:System.ComponentModel.Design.DesignSurface>.","nodes":[{"pos":[0,197],"content":"If the service is being used with a designer, the <ph id=\"ph1\">`serviceProvider`</ph> parameter should be the service provider for the designer, as is the case with <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.","source":"If the service is being used with a designer, the `serviceProvider` parameter should be the service provider for the designer, as is the case with <xref:System.ComponentModel.Design.DesignSurface>."}],"pos":[5717,5915],"yaml":true,"extradata":"MT"},{"content":"The service provider that this service uses to obtain other services.","nodes":[{"pos":[0,69],"content":"The service provider that this service uses to obtain other services.","nodes":[{"content":"The service provider that this service uses to obtain other services.","pos":[0,69]}]}],"pos":[6097,6167],"yaml":true},{"content":"Adds a command handler to the menu command service.","nodes":[{"pos":[0,51],"content":"Adds a command handler to the menu command service.","nodes":[{"content":"Adds a command handler to the menu command service.","pos":[0,51]}]}],"pos":[7405,7457],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service. Command handlers do not define the text, shortcut, or placement of a menu item. Rather, they define the menu item’s behavior if the item is clicked.","nodes":[{"pos":[0,280],"content":"The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service. Command handlers do not define the text, shortcut, or placement of a menu item. Rather, they define the menu item’s behavior if the item is clicked.","nodes":[{"content":"The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service. Command handlers do not define the text, shortcut, or placement of a menu item. Rather, they define the menu item’s behavior if the item is clicked.","pos":[0,280],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A&gt;</ph> method adds a command handler to the menu command service.","pos":[0,131],"source":"The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service."},{"content":"Command handlers do not define the text, shortcut, or placement of a menu item.","pos":[132,211]},{"content":"Rather, they define the menu item’s behavior if the item is clicked.","pos":[212,280]}]}]}],"pos":[7468,7749],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> to add.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;&lt;/xref&gt;</ph> to add.","source":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> to add."}],"pos":[7961,8035],"yaml":true},{"content":"<code>command</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;command&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>command</code> is `null`."}],"pos":[8223,8255],"yaml":true},{"content":"A command handler <code>command</code> already exists.","nodes":[{"pos":[0,54],"content":"A command handler <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">command</ph><ept id=\"p1\">&lt;/code&gt;</ept> already exists.","source":"A command handler <code>command</code> already exists."}],"pos":[8349,8404],"yaml":true},{"content":"Adds a verb to the verb table of the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>.","nodes":[{"pos":[0,106],"content":"Adds a verb to the verb table of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommandService\"&gt;&lt;/xref&gt;</ph>.","source":"Adds a verb to the verb table of the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>."}],"pos":[9546,9653],"yaml":true},{"content":"This verb is available regardless of what designer is currently selected. Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.","nodes":[{"pos":[0,224],"content":"This verb is available regardless of what designer is currently selected. Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.","nodes":[{"content":"This verb is available regardless of what designer is currently selected. Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.","pos":[0,224],"nodes":[{"content":"This verb is available regardless of what designer is currently selected.","pos":[0,73]},{"content":"Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.","pos":[74,224]}]}]}],"pos":[9664,9889],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.Design.DesignerVerb\"></xref> to add.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerVerb\"&gt;&lt;/xref&gt;</ph> to add.","source":"The <xref href=\"System.ComponentModel.Design.DesignerVerb\"></xref> to add."}],"pos":[10094,10169],"yaml":true},{"content":"<code>verb</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;verb&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>verb</code> is `null`."}],"pos":[10354,10383],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>.","nodes":[{"pos":[0,104],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommandService\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>."}],"pos":[11360,11465],"yaml":true},{"content":"Call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.MenuCommandService>. The <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.MenuCommandService> in an unusable state. After calling <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.MenuCommandService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.MenuCommandService> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method.","nodes":[{"pos":[0,831],"content":"Call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.MenuCommandService>. The <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.MenuCommandService> in an unusable state. After calling <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.MenuCommandService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.MenuCommandService> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>.","pos":[0,158],"source":"Call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.MenuCommandService>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> in an unusable state.","pos":[159,323],"source":" The <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.MenuCommandService> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> was occupying.","pos":[324,625],"source":" After calling <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.MenuCommandService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.MenuCommandService> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[626,831],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[839,1205],"content":"[!NOTE]\n Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method.","pos":[8,364],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph>.","pos":[1,180],"source":" Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[181,356],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method."}]}]}],"pos":[11476,12687],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>.","nodes":[{"pos":[0,104],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommandService\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>."}],"pos":[13885,13990],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.MenuCommandService> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,293],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[300,549],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.MenuCommandService> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.MenuCommandService&gt;</ph> references.","pos":[0,179],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.MenuCommandService> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[180,249],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[14001,14555],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[14709,14812],"yaml":true},{"content":"Ensures that the verb list has been created.","nodes":[{"pos":[0,44],"content":"Ensures that the verb list has been created.","nodes":[{"content":"Ensures that the verb list has been created.","pos":[0,44]}]}],"pos":[15899,15944],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> method creates the verb list if it has not already been created.","nodes":[{"pos":[0,138],"content":"The <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> method creates the verb list if it has not already been created.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A&gt;</ph> method creates the verb list if it has not already been created.","pos":[0,138],"source":"The <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> method creates the verb list if it has not already been created."}]}],"pos":[15955,16094],"yaml":true,"extradata":"MT"},{"content":"Searches for the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command ID.","nodes":[{"pos":[0,116],"content":"Searches for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;&lt;/xref&gt;</ph> associated with the given command ID.","source":"Searches for the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command ID."}],"pos":[17405,17522],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> to find.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.CommandID\"&gt;&lt;/xref&gt;</ph> to find.","source":"The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> to find."}],"pos":[17763,17836],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command; otherwise, `null` if the command is not found.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;&lt;/xref&gt;</ph> associated with the given command; otherwise, <ph id=\"ph2\">`null`</ph> if the command is not found.","source":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command; otherwise, `null` if the command is not found."}],"pos":[17920,18068],"yaml":true},{"content":"Searches for the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command.","nodes":[{"pos":[0,113],"content":"Searches for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;&lt;/xref&gt;</ph> associated with the given command.","source":"Searches for the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command."}],"pos":[19270,19384],"yaml":true},{"content":"The GUID of the command.","nodes":[{"pos":[0,24],"content":"The GUID of the command.","nodes":[{"content":"The GUID of the command.","pos":[0,24]}]}],"pos":[19565,19590],"yaml":true},{"content":"The ID of the command.","nodes":[{"pos":[0,22],"content":"The ID of the command.","nodes":[{"content":"The ID of the command.","pos":[0,22]}]}],"pos":[19647,19670],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command; otherwise, `null` if the command is not found.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommand\"&gt;&lt;/xref&gt;</ph> associated with the given command; otherwise, <ph id=\"ph2\">`null`</ph> if the command is not found.","source":"The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command; otherwise, `null` if the command is not found."}],"pos":[19754,19902],"yaml":true},{"content":"Gets the command list for a given GUID.","nodes":[{"pos":[0,39],"content":"Gets the command list for a given GUID.","nodes":[{"content":"Gets the command list for a given GUID.","pos":[0,39]}]}],"pos":[21062,21102],"yaml":true},{"content":"The GUID of the command list.","nodes":[{"pos":[0,29],"content":"The GUID of the command list.","nodes":[{"content":"The GUID of the command list.","pos":[0,29]}]}],"pos":[21268,21298],"yaml":true},{"content":"An <xref href=\"System.Collections.ICollection\"></xref> of commands.","nodes":[{"pos":[0,67],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> of commands.","source":"An <xref href=\"System.Collections.ICollection\"></xref> of commands."}],"pos":[21372,21440],"yaml":true},{"content":"Gets a reference to the requested service.","nodes":[{"pos":[0,42],"content":"Gets a reference to the requested service.","nodes":[{"content":"Gets a reference to the requested service.","pos":[0,42]}]}],"pos":[22579,22622],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the service to retrieve.","nodes":[{"pos":[0,64],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the service to retrieve.","source":"The <xref href=\"System.Type\"></xref> of the service to retrieve."}],"pos":[22774,22839],"yaml":true},{"content":"A reference to <code>serviceType</code>; otherwise, `null` if the service is not found.","nodes":[{"pos":[0,87],"content":"A reference to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph2\">`null`</ph> if the service is not found.","source":"A reference to <code>serviceType</code>; otherwise, `null` if the service is not found."}],"pos":[22896,22984],"yaml":true},{"content":"<code>serviceType</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;serviceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serviceType</code> is `null`."}],"pos":[23172,23208],"yaml":true},{"content":"Invokes the given command on the local form or in the global environment.","nodes":[{"pos":[0,73],"content":"Invokes the given command on the local form or in the global environment.","nodes":[{"content":"Invokes the given command on the local form or in the global environment.","pos":[0,73]}]}],"pos":[24362,24436],"yaml":true},{"content":"The local form is first searched for the given command ID. If it is found, it is invoked. Otherwise, the command ID is passed to the global environment command handler, if one is available.","nodes":[{"pos":[0,189],"content":"The local form is first searched for the given command ID. If it is found, it is invoked. Otherwise, the command ID is passed to the global environment command handler, if one is available.","nodes":[{"content":"The local form is first searched for the given command ID. If it is found, it is invoked. Otherwise, the command ID is passed to the global environment command handler, if one is available.","pos":[0,189],"nodes":[{"content":"The local form is first searched for the given command ID.","pos":[0,58]},{"content":"If it is found, it is invoked.","pos":[59,89]},{"content":"Otherwise, the command ID is passed to the global environment command handler, if one is available.","pos":[90,189]}]}]}],"pos":[24447,24637],"yaml":true,"extradata":"MT"},{"content":"The command to invoke.","nodes":[{"pos":[0,22],"content":"The command to invoke.","nodes":[{"content":"The command to invoke.","pos":[0,22]}]}],"pos":[24851,24874],"yaml":true},{"content":"`true`, if the command was found; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph>, if the command was found; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true`, if the command was found; otherwise, `false`."}],"pos":[24932,24988],"yaml":true},{"content":"Invokes the given command with the given parameter on the local form or in the global environment.","nodes":[{"pos":[0,98],"content":"Invokes the given command with the given parameter on the local form or in the global environment.","nodes":[{"content":"Invokes the given command with the given parameter on the local form or in the global environment.","pos":[0,98]}]}],"pos":[26299,26398],"yaml":true},{"content":"The local form is first searched for the given command ID. If it is found, it is invoked. Otherwise, the command ID is passed to the global environment command handler, if one is available.","nodes":[{"pos":[0,189],"content":"The local form is first searched for the given command ID. If it is found, it is invoked. Otherwise, the command ID is passed to the global environment command handler, if one is available.","nodes":[{"content":"The local form is first searched for the given command ID. If it is found, it is invoked. Otherwise, the command ID is passed to the global environment command handler, if one is available.","pos":[0,189],"nodes":[{"content":"The local form is first searched for the given command ID.","pos":[0,58]},{"content":"If it is found, it is invoked.","pos":[59,89]},{"content":"Otherwise, the command ID is passed to the global environment command handler, if one is available.","pos":[90,189]}]}]}],"pos":[26409,26599],"yaml":true,"extradata":"MT"},{"content":"The command to invoke.","nodes":[{"pos":[0,22],"content":"The command to invoke.","nodes":[{"content":"The command to invoke.","pos":[0,22]}]}],"pos":[26825,26848],"yaml":true},{"content":"A parameter for the invocation.","nodes":[{"pos":[0,31],"content":"A parameter for the invocation.","nodes":[{"content":"A parameter for the invocation.","pos":[0,31]}]}],"pos":[26907,26939],"yaml":true},{"content":"`true`, if the command was found; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph>, if the command was found; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true`, if the command was found; otherwise, `false`."}],"pos":[26997,27053],"yaml":true},{"content":"Occurs when the status of a menu command has changed.","nodes":[{"pos":[0,53],"content":"Occurs when the status of a menu command has changed.","nodes":[{"content":"Occurs when the status of a menu command has changed.","pos":[0,53]}]}],"pos":[28186,28240],"yaml":true},{"content":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,142],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[28251,28396],"yaml":true,"extradata":"MT"},{"content":"Raises the <xref href=\"System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged\"></xref> event.","nodes":[{"pos":[0,106],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged\"></xref> event."}],"pos":[29936,30043],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method is called by a menu command when its status has changed.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,143],"content":"The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method is called by a menu command when its status has changed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> method is called by a menu command when its status has changed.","pos":[0,143],"source":"The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method is called by a menu command when its status has changed."}]},{"pos":[150,333],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[340,579],"content":"The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,239],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,164],"source":"The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[165,239]}]}]}],"pos":[30054,30640],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.Design.MenuCommandsChangedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.MenuCommandsChangedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.ComponentModel.Design.MenuCommandsChangedEventArgs\"></xref> that contains the event data."}],"pos":[30884,30995],"yaml":true},{"content":"Removes the given menu command from the document.","nodes":[{"pos":[0,49],"content":"Removes the given menu command from the document.","nodes":[{"content":"Removes the given menu command from the document.","pos":[0,49]}]}],"pos":[32263,32313],"yaml":true},{"content":"If there are no more commands in the command group, the group is removed.","nodes":[{"pos":[0,73],"content":"If there are no more commands in the command group, the group is removed.","nodes":[{"content":"If there are no more commands in the command group, the group is removed.","pos":[0,73]}]}],"pos":[32324,32398],"yaml":true,"extradata":"MT"},{"content":"The command to remove.","nodes":[{"pos":[0,22],"content":"The command to remove.","nodes":[{"content":"The command to remove.","pos":[0,22]}]}],"pos":[32613,32636],"yaml":true},{"content":"<code>command</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;command&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>command</code> is `null`."}],"pos":[32827,32859],"yaml":true},{"content":"Removes the given verb from the document.","nodes":[{"pos":[0,41],"content":"Removes the given verb from the document.","nodes":[{"content":"Removes the given verb from the document.","pos":[0,41]}]}],"pos":[34019,34061],"yaml":true},{"content":"The verb to remove.","nodes":[{"pos":[0,19],"content":"The verb to remove.","nodes":[{"content":"The verb to remove.","pos":[0,19]}]}],"pos":[34269,34289],"yaml":true},{"content":"<code>verb</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;verb&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>verb</code> is `null`."}],"pos":[34477,34506],"yaml":true},{"content":"Shows the shortcut menu with the given command ID at the given location.","nodes":[{"pos":[0,72],"content":"Shows the shortcut menu with the given command ID at the given location.","nodes":[{"content":"Shows the shortcut menu with the given command ID at the given location.","pos":[0,72]}]}],"pos":[35798,35871],"yaml":true},{"content":"The default implementation does nothing.","nodes":[{"pos":[0,40],"content":"The default implementation does nothing.","nodes":[{"content":"The default implementation does nothing.","pos":[0,40]}]}],"pos":[35882,35923],"yaml":true,"extradata":"MT"},{"content":"The shortcut menu to display.","nodes":[{"pos":[0,29],"content":"The shortcut menu to display.","nodes":[{"content":"The shortcut menu to display.","pos":[0,29]}]}],"pos":[36148,36178],"yaml":true},{"content":"The x-coordinate of the shortcut menu's location.","nodes":[{"pos":[0,49],"content":"The x-coordinate of the shortcut menu's location.","nodes":[{"content":"The x-coordinate of the shortcut menu's location.","pos":[0,49]}]}],"pos":[36234,36284],"yaml":true},{"content":"The y-coordinate of the shortcut menu's location.","nodes":[{"pos":[0,49],"content":"The y-coordinate of the shortcut menu's location.","nodes":[{"content":"The y-coordinate of the shortcut menu's location.","pos":[0,49]}]}],"pos":[36340,36390],"yaml":true},{"content":"Gets a collection of the designer verbs that are currently available.","nodes":[{"pos":[0,69],"content":"Gets a collection of the designer verbs that are currently available.","nodes":[{"content":"Gets a collection of the designer verbs that are currently available.","pos":[0,69]}]}],"pos":[37445,37515],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs. These verbs come from two places:  \n  \n-   Verbs added through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method of <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.  \n  \n-   Verbs offered by the currently selected designer.  \n  \n Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window. Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>. If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer’s verbs are added to this list. If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.","nodes":[{"pos":[0,142],"content":"The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs. These verbs come from two places:","nodes":[{"content":"The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs. These verbs come from two places:","pos":[0,142],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph> property provides a collection of verbs.","pos":[0,108],"source":"The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs."},{"content":"These verbs come from two places:","pos":[109,142]}]}]},{"pos":[152,316],"content":"Verbs added through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method of <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.","nodes":[{"content":"Verbs added through the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> method of <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A&gt;</ph>.","pos":[0,164],"source":"Verbs added through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method of <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>."}]},{"pos":[326,375],"content":"Verbs offered by the currently selected designer.","nodes":[{"content":"Verbs offered by the currently selected designer.","pos":[0,49]}]},{"pos":[382,1150],"content":"Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window. Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>. If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer’s verbs are added to this list. If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.","nodes":[{"content":"Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window. Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>. If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer’s verbs are added to this list. If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.","pos":[0,768],"nodes":[{"content":"Verbs added to this service through the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A&gt;</ph> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window.","pos":[0,263],"source":"Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window."},{"content":"Designer verbs are obtained by querying the service provider for <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ISelectionService&gt;</ph>.","pos":[264,437],"source":" Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>."},{"content":"If the selection service offers a primary selection, and a designer can be obtained for that selection from <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>, the designer’s verbs are added to this list.","pos":[438,641],"source":" If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer’s verbs are added to this list."},{"content":"If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.","pos":[642,768]}]}]}],"pos":[37526,38685],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"></xref> of the designer verbs that are currently available.","nodes":[{"pos":[0,126],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"&gt;&lt;/xref&gt;</ph> of the designer verbs that are currently available.","source":"A <xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"></xref> of the designer verbs that are currently available."}],"pos":[38885,39012],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.MenuCommandService\n  commentId: T:System.ComponentModel.Design.MenuCommandService\n  id: MenuCommandService\n  children:\n  - System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)\n  - System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)\n  - System.ComponentModel.Design.MenuCommandService.Dispose\n  - System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)\n  - System.ComponentModel.Design.MenuCommandService.EnsureVerbs\n  - System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)\n  - System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)\n  - System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)\n  - System.ComponentModel.Design.MenuCommandService.GetService(System.Type)\n  - System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)\n  - System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)\n  - System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged\n  - System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)\n  - System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  - System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  - System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  - System.ComponentModel.Design.MenuCommandService.Verbs\n  langs:\n  - csharp\n  name: MenuCommandService\n  nameWithType: MenuCommandService\n  fullName: System.ComponentModel.Design.MenuCommandService\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Implements the <xref href=\"System.ComponentModel.Design.IMenuCommandService\"></xref> interface.\n  remarks: \"The <xref:System.ComponentModel.Design.MenuCommandService> class implements the <xref:System.ComponentModel.Design.IMenuCommandService> interface, which is the managed interface used to add handlers for menu commands and to define verbs.  \\n  \\n The <xref:System.ComponentModel.Design.MenuCommandService> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the `Microsoft.VisualStudio.Shell.WindowPane` class to offer commands for the current window. This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <xref:System.ComponentModel.Design.IMenuCommandService> interface.  \\n  \\n The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services. All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing. The following table shows which services are used and for what purpose.  \\n  \\n|Service|Purpose|  \\n|-------------|-------------|  \\n|<xref:System.ComponentModel.Design.ISelectionService>|Used to discover the current selection in order to obtain verbs offered by the currently selected designer.|  \\n|<xref:System.ComponentModel.Design.IDesignerHost>|Used to obtain the designer for the currently selected component, if any.|  \\n|`Microsoft.VisualStudio.Shell.Interop.IVsUIShell`|Used to notify [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] that the command status has changed.|  \\n|`Microsoft.VisualStudio.Shell.Interop.IOleComponentUIManager`|Used to show context menus.|\"\n  syntax:\n    content: 'public class MenuCommandService : IDisposable, System.ComponentModel.Design.IMenuCommandService'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ComponentModel.Design.IMenuCommandService\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: MenuCommandService(IServiceProvider)\n  nameWithType: MenuCommandService.MenuCommandService(IServiceProvider)\n  fullName: MenuCommandService.MenuCommandService(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref> class.\n  remarks: If the service is being used with a designer, the `serviceProvider` parameter should be the service provider for the designer, as is the case with <xref:System.ComponentModel.Design.DesignSurface>.\n  syntax:\n    content: public MenuCommandService (IServiceProvider serviceProvider);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: The service provider that this service uses to obtain other services.\n  overload: System.ComponentModel.Design.MenuCommandService.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)\n  id: AddCommand(System.ComponentModel.Design.MenuCommand)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: AddCommand(MenuCommand)\n  nameWithType: MenuCommandService.AddCommand(MenuCommand)\n  fullName: MenuCommandService.AddCommand(MenuCommand)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Adds a command handler to the menu command service.\n  remarks: The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service. Command handlers do not define the text, shortcut, or placement of a menu item. Rather, they define the menu item’s behavior if the item is clicked.\n  syntax:\n    content: public virtual void AddCommand (System.ComponentModel.Design.MenuCommand command);\n    parameters:\n    - id: command\n      type: System.ComponentModel.Design.MenuCommand\n      description: The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> to add.\n  overload: System.ComponentModel.Design.MenuCommandService.AddCommand*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>command</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A command handler <code>command</code> already exists.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)\n  id: AddVerb(System.ComponentModel.Design.DesignerVerb)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: AddVerb(DesignerVerb)\n  nameWithType: MenuCommandService.AddVerb(DesignerVerb)\n  fullName: MenuCommandService.AddVerb(DesignerVerb)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Adds a verb to the verb table of the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>.\n  remarks: This verb is available regardless of what designer is currently selected. Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.\n  syntax:\n    content: public virtual void AddVerb (System.ComponentModel.Design.DesignerVerb verb);\n    parameters:\n    - id: verb\n      type: System.ComponentModel.Design.DesignerVerb\n      description: The <xref href=\"System.ComponentModel.Design.DesignerVerb\"></xref> to add.\n  overload: System.ComponentModel.Design.MenuCommandService.AddVerb*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>verb</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.Dispose\n  commentId: M:System.ComponentModel.Design.MenuCommandService.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: MenuCommandService.Dispose()\n  fullName: MenuCommandService.Dispose()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases all resources used by the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>.\n  remarks: \"Call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.MenuCommandService>. The <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.MenuCommandService> in an unusable state. After calling <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.MenuCommandService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.MenuCommandService> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Design.MenuCommandService.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MenuCommandService.Dispose(Boolean)\n  fullName: MenuCommandService.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases all resources used by the <xref href=\"System.ComponentModel.Design.MenuCommandService\"></xref>.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.MenuCommandService> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.ComponentModel.Design.MenuCommandService.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.EnsureVerbs\n  commentId: M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs\n  id: EnsureVerbs\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: EnsureVerbs()\n  nameWithType: MenuCommandService.EnsureVerbs()\n  fullName: MenuCommandService.EnsureVerbs()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Ensures that the verb list has been created.\n  remarks: The <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> method creates the verb list if it has not already been created.\n  syntax:\n    content: protected void EnsureVerbs ();\n    parameters: []\n  overload: System.ComponentModel.Design.MenuCommandService.EnsureVerbs*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)\n  id: FindCommand(System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: FindCommand(CommandID)\n  nameWithType: MenuCommandService.FindCommand(CommandID)\n  fullName: MenuCommandService.FindCommand(CommandID)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Searches for the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command ID.\n  syntax:\n    content: public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);\n    parameters:\n    - id: commandID\n      type: System.ComponentModel.Design.CommandID\n      description: The <xref href=\"System.ComponentModel.Design.CommandID\"></xref> to find.\n    return:\n      type: System.ComponentModel.Design.MenuCommand\n      description: The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command; otherwise, `null` if the command is not found.\n  overload: System.ComponentModel.Design.MenuCommandService.FindCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)\n  id: FindCommand(System.Guid,System.Int32)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: FindCommand(Guid, Int32)\n  nameWithType: MenuCommandService.FindCommand(Guid, Int32)\n  fullName: MenuCommandService.FindCommand(Guid, Int32)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Searches for the <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command.\n  syntax:\n    content: protected System.ComponentModel.Design.MenuCommand FindCommand (Guid guid, int id);\n    parameters:\n    - id: guid\n      type: System.Guid\n      description: The GUID of the command.\n    - id: id\n      type: System.Int32\n      description: The ID of the command.\n    return:\n      type: System.ComponentModel.Design.MenuCommand\n      description: The <xref href=\"System.ComponentModel.Design.MenuCommand\"></xref> associated with the given command; otherwise, `null` if the command is not found.\n  overload: System.ComponentModel.Design.MenuCommandService.FindCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)\n  id: GetCommandList(System.Guid)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: GetCommandList(Guid)\n  nameWithType: MenuCommandService.GetCommandList(Guid)\n  fullName: MenuCommandService.GetCommandList(Guid)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the command list for a given GUID.\n  syntax:\n    content: protected System.Collections.ICollection GetCommandList (Guid guid);\n    parameters:\n    - id: guid\n      type: System.Guid\n      description: The GUID of the command list.\n    return:\n      type: System.Collections.ICollection\n      description: An <xref href=\"System.Collections.ICollection\"></xref> of commands.\n  overload: System.ComponentModel.Design.MenuCommandService.GetCommandList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.GetService(System.Type)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: MenuCommandService.GetService(Type)\n  fullName: MenuCommandService.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a reference to the requested service.\n  syntax:\n    content: protected object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the service to retrieve.\n    return:\n      type: System.Object\n      description: A reference to <code>serviceType</code>; otherwise, `null` if the service is not found.\n  overload: System.ComponentModel.Design.MenuCommandService.GetService*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serviceType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)\n  id: GlobalInvoke(System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: GlobalInvoke(CommandID)\n  nameWithType: MenuCommandService.GlobalInvoke(CommandID)\n  fullName: MenuCommandService.GlobalInvoke(CommandID)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Invokes the given command on the local form or in the global environment.\n  remarks: The local form is first searched for the given command ID. If it is found, it is invoked. Otherwise, the command ID is passed to the global environment command handler, if one is available.\n  syntax:\n    content: public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);\n    parameters:\n    - id: commandID\n      type: System.ComponentModel.Design.CommandID\n      description: The command to invoke.\n    return:\n      type: System.Boolean\n      description: '`true`, if the command was found; otherwise, `false`.'\n  overload: System.ComponentModel.Design.MenuCommandService.GlobalInvoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)\n  id: GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: GlobalInvoke(CommandID, Object)\n  nameWithType: MenuCommandService.GlobalInvoke(CommandID, Object)\n  fullName: MenuCommandService.GlobalInvoke(CommandID, Object)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Invokes the given command with the given parameter on the local form or in the global environment.\n  remarks: The local form is first searched for the given command ID. If it is found, it is invoked. Otherwise, the command ID is passed to the global environment command handler, if one is available.\n  syntax:\n    content: public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandId, object arg);\n    parameters:\n    - id: commandId\n      type: System.ComponentModel.Design.CommandID\n      description: The command to invoke.\n    - id: arg\n      type: System.Object\n      description: A parameter for the invocation.\n    return:\n      type: System.Boolean\n      description: '`true`, if the command was found; otherwise, `false`.'\n  overload: System.ComponentModel.Design.MenuCommandService.GlobalInvoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged\n  commentId: E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged\n  id: MenuCommandsChanged\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: MenuCommandsChanged\n  nameWithType: MenuCommandService.MenuCommandsChanged\n  fullName: MenuCommandService.MenuCommandsChanged\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the status of a menu command has changed.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  syntax:\n    content: public event System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged;\n    return:\n      type: System.ComponentModel.Design.MenuCommandsChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)\n  id: OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: OnCommandsChanged(MenuCommandsChangedEventArgs)\n  nameWithType: MenuCommandService.OnCommandsChanged(MenuCommandsChangedEventArgs)\n  fullName: MenuCommandService.OnCommandsChanged(MenuCommandsChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged\"></xref> event.\n  remarks: \"The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method is called by a menu command when its status has changed.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnCommandsChanged (System.ComponentModel.Design.MenuCommandsChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.Design.MenuCommandsChangedEventArgs\n      description: A <xref href=\"System.ComponentModel.Design.MenuCommandsChangedEventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.MenuCommandService.OnCommandsChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  id: RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: RemoveCommand(MenuCommand)\n  nameWithType: MenuCommandService.RemoveCommand(MenuCommand)\n  fullName: MenuCommandService.RemoveCommand(MenuCommand)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Removes the given menu command from the document.\n  remarks: If there are no more commands in the command group, the group is removed.\n  syntax:\n    content: public virtual void RemoveCommand (System.ComponentModel.Design.MenuCommand command);\n    parameters:\n    - id: command\n      type: System.ComponentModel.Design.MenuCommand\n      description: The command to remove.\n  overload: System.ComponentModel.Design.MenuCommandService.RemoveCommand*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>command</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  id: RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: RemoveVerb(DesignerVerb)\n  nameWithType: MenuCommandService.RemoveVerb(DesignerVerb)\n  fullName: MenuCommandService.RemoveVerb(DesignerVerb)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Removes the given verb from the document.\n  syntax:\n    content: public virtual void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);\n    parameters:\n    - id: verb\n      type: System.ComponentModel.Design.DesignerVerb\n      description: The verb to remove.\n  overload: System.ComponentModel.Design.MenuCommandService.RemoveVerb*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>verb</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  commentId: M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  id: ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: ShowContextMenu(CommandID, Int32, Int32)\n  nameWithType: MenuCommandService.ShowContextMenu(CommandID, Int32, Int32)\n  fullName: MenuCommandService.ShowContextMenu(CommandID, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Shows the shortcut menu with the given command ID at the given location.\n  remarks: The default implementation does nothing.\n  syntax:\n    content: public virtual void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);\n    parameters:\n    - id: menuID\n      type: System.ComponentModel.Design.CommandID\n      description: The shortcut menu to display.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the shortcut menu's location.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the shortcut menu's location.\n  overload: System.ComponentModel.Design.MenuCommandService.ShowContextMenu*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.MenuCommandService.Verbs\n  commentId: P:System.ComponentModel.Design.MenuCommandService.Verbs\n  id: Verbs\n  parent: System.ComponentModel.Design.MenuCommandService\n  langs:\n  - csharp\n  name: Verbs\n  nameWithType: MenuCommandService.Verbs\n  fullName: MenuCommandService.Verbs\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a collection of the designer verbs that are currently available.\n  remarks: \"The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs. These verbs come from two places:  \\n  \\n-   Verbs added through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method of <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.  \\n  \\n-   Verbs offered by the currently selected designer.  \\n  \\n Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window. Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>. If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer’s verbs are added to this list. If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.\"\n  syntax:\n    content: public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }\n    return:\n      type: System.ComponentModel.Design.DesignerVerbCollection\n      description: A <xref href=\"System.ComponentModel.Design.DesignerVerbCollection\"></xref> of the designer verbs that are currently available.\n  overload: System.ComponentModel.Design.MenuCommandService.Verbs*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: MenuCommandService(IServiceProvider)\n  nameWithType: MenuCommandService.MenuCommandService(IServiceProvider)\n  fullName: MenuCommandService.MenuCommandService(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: AddCommand(MenuCommand)\n  nameWithType: MenuCommandService.AddCommand(MenuCommand)\n  fullName: MenuCommandService.AddCommand(MenuCommand)\n- uid: System.ComponentModel.Design.MenuCommand\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: MenuCommand\n  nameWithType: MenuCommand\n  fullName: System.ComponentModel.Design.MenuCommand\n- uid: System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: AddVerb(DesignerVerb)\n  nameWithType: MenuCommandService.AddVerb(DesignerVerb)\n  fullName: MenuCommandService.AddVerb(DesignerVerb)\n- uid: System.ComponentModel.Design.DesignerVerb\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerVerb\n  nameWithType: DesignerVerb\n  fullName: System.ComponentModel.Design.DesignerVerb\n- uid: System.ComponentModel.Design.MenuCommandService.Dispose\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: Dispose()\n  nameWithType: MenuCommandService.Dispose()\n  fullName: MenuCommandService.Dispose()\n- uid: System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MenuCommandService.Dispose(Boolean)\n  fullName: MenuCommandService.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.MenuCommandService.EnsureVerbs\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: EnsureVerbs()\n  nameWithType: MenuCommandService.EnsureVerbs()\n  fullName: MenuCommandService.EnsureVerbs()\n- uid: System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: FindCommand(CommandID)\n  nameWithType: MenuCommandService.FindCommand(CommandID)\n  fullName: MenuCommandService.FindCommand(CommandID)\n- uid: System.ComponentModel.Design.CommandID\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: CommandID\n  nameWithType: CommandID\n  fullName: System.ComponentModel.Design.CommandID\n- uid: System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: FindCommand(Guid, Int32)\n  nameWithType: MenuCommandService.FindCommand(Guid, Int32)\n  fullName: MenuCommandService.FindCommand(Guid, Int32)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: GetCommandList(Guid)\n  nameWithType: MenuCommandService.GetCommandList(Guid)\n  fullName: MenuCommandService.GetCommandList(Guid)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ComponentModel.Design.MenuCommandService.GetService(System.Type)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: MenuCommandService.GetService(Type)\n  fullName: MenuCommandService.GetService(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: GlobalInvoke(CommandID)\n  nameWithType: MenuCommandService.GlobalInvoke(CommandID)\n  fullName: MenuCommandService.GlobalInvoke(CommandID)\n- uid: System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: GlobalInvoke(CommandID, Object)\n  nameWithType: MenuCommandService.GlobalInvoke(CommandID, Object)\n  fullName: MenuCommandService.GlobalInvoke(CommandID, Object)\n- uid: System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: MenuCommandsChanged\n  nameWithType: MenuCommandService.MenuCommandsChanged\n  fullName: MenuCommandService.MenuCommandsChanged\n- uid: System.ComponentModel.Design.MenuCommandsChangedEventHandler\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: MenuCommandsChangedEventHandler\n  nameWithType: MenuCommandsChangedEventHandler\n  fullName: System.ComponentModel.Design.MenuCommandsChangedEventHandler\n- uid: System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: OnCommandsChanged(MenuCommandsChangedEventArgs)\n  nameWithType: MenuCommandService.OnCommandsChanged(MenuCommandsChangedEventArgs)\n  fullName: MenuCommandService.OnCommandsChanged(MenuCommandsChangedEventArgs)\n- uid: System.ComponentModel.Design.MenuCommandsChangedEventArgs\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: MenuCommandsChangedEventArgs\n  nameWithType: MenuCommandsChangedEventArgs\n  fullName: System.ComponentModel.Design.MenuCommandsChangedEventArgs\n- uid: System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: RemoveCommand(MenuCommand)\n  nameWithType: MenuCommandService.RemoveCommand(MenuCommand)\n  fullName: MenuCommandService.RemoveCommand(MenuCommand)\n- uid: System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: RemoveVerb(DesignerVerb)\n  nameWithType: MenuCommandService.RemoveVerb(DesignerVerb)\n  fullName: MenuCommandService.RemoveVerb(DesignerVerb)\n- uid: System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: ShowContextMenu(CommandID, Int32, Int32)\n  nameWithType: MenuCommandService.ShowContextMenu(CommandID, Int32, Int32)\n  fullName: MenuCommandService.ShowContextMenu(CommandID, Int32, Int32)\n- uid: System.ComponentModel.Design.MenuCommandService.Verbs\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: Verbs\n  nameWithType: MenuCommandService.Verbs\n  fullName: MenuCommandService.Verbs\n- uid: System.ComponentModel.Design.DesignerVerbCollection\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerVerbCollection\n  nameWithType: DesignerVerbCollection\n  fullName: System.ComponentModel.Design.DesignerVerbCollection\n- uid: System.ComponentModel.Design.MenuCommandService.#ctor*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: MenuCommandService\n  nameWithType: MenuCommandService.MenuCommandService\n  fullName: MenuCommandService.MenuCommandService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.AddCommand*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: AddCommand\n  nameWithType: MenuCommandService.AddCommand\n  fullName: MenuCommandService.AddCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.AddVerb*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: AddVerb\n  nameWithType: MenuCommandService.AddVerb\n  fullName: MenuCommandService.AddVerb\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.Dispose*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: Dispose\n  nameWithType: MenuCommandService.Dispose\n  fullName: MenuCommandService.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.EnsureVerbs*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: EnsureVerbs\n  nameWithType: MenuCommandService.EnsureVerbs\n  fullName: MenuCommandService.EnsureVerbs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.FindCommand*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: FindCommand\n  nameWithType: MenuCommandService.FindCommand\n  fullName: MenuCommandService.FindCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.GetCommandList*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: GetCommandList\n  nameWithType: MenuCommandService.GetCommandList\n  fullName: MenuCommandService.GetCommandList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.GetService*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: GetService\n  nameWithType: MenuCommandService.GetService\n  fullName: MenuCommandService.GetService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.GlobalInvoke*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: GlobalInvoke\n  nameWithType: MenuCommandService.GlobalInvoke\n  fullName: MenuCommandService.GlobalInvoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.OnCommandsChanged*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: OnCommandsChanged\n  nameWithType: MenuCommandService.OnCommandsChanged\n  fullName: MenuCommandService.OnCommandsChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.RemoveCommand*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: RemoveCommand\n  nameWithType: MenuCommandService.RemoveCommand\n  fullName: MenuCommandService.RemoveCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.RemoveVerb*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: RemoveVerb\n  nameWithType: MenuCommandService.RemoveVerb\n  fullName: MenuCommandService.RemoveVerb\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.ShowContextMenu*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: ShowContextMenu\n  nameWithType: MenuCommandService.ShowContextMenu\n  fullName: MenuCommandService.ShowContextMenu\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.ComponentModel.Design.MenuCommandService.Verbs*\n  parent: System.ComponentModel.Design.MenuCommandService\n  isExternal: false\n  name: Verbs\n  nameWithType: MenuCommandService.Verbs\n  fullName: MenuCommandService.Verbs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/MenuCommandService.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.Design.IMenuCommandService\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IMenuCommandService\n  nameWithType: IMenuCommandService\n  fullName: System.ComponentModel.Design.IMenuCommandService\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}