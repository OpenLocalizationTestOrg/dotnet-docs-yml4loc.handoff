### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RijndaelManaged
  commentId: T:System.Security.Cryptography.RijndaelManaged
  id: RijndaelManaged
  children:
  - System.Security.Cryptography.RijndaelManaged.#ctor
  - System.Security.Cryptography.RijndaelManaged.BlockSize
  - System.Security.Cryptography.RijndaelManaged.CreateDecryptor
  - System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RijndaelManaged.CreateEncryptor
  - System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)
  - System.Security.Cryptography.RijndaelManaged.GenerateIV
  - System.Security.Cryptography.RijndaelManaged.GenerateKey
  - System.Security.Cryptography.RijndaelManaged.IV
  - System.Security.Cryptography.RijndaelManaged.Key
  - System.Security.Cryptography.RijndaelManaged.KeySize
  - System.Security.Cryptography.RijndaelManaged.LegalKeySizes
  - System.Security.Cryptography.RijndaelManaged.Mode
  - System.Security.Cryptography.RijndaelManaged.Padding
  langs:
  - csharp
  name: RijndaelManaged
  nameWithType: RijndaelManaged
  fullName: System.Security.Cryptography.RijndaelManaged
  type: Class
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Accesses the managed version of the <xref href="System.Security.Cryptography.Rijndael"></xref> algorithm. This class cannot be inherited.
  remarks: "This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).  \n  \n The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>. You should use the <xref:System.Security.Cryptography.Aes> class instead of <xref:System.Security.Cryptography.RijndaelManaged>. For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog."
  example:
  - "The following example demonstrates how to encrypt and decrypt sample data using the `RijndaelManaged` class.  \n  \n [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\n [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\n [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RijndaelManaged : System.Security.Cryptography.Rijndael
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.Rijndael
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Cryptography.Rijndael.Create
  - System.Security.Cryptography.Rijndael.Create(System.String)
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RijndaelManaged.#ctor
  commentId: M:System.Security.Cryptography.RijndaelManaged.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: RijndaelManaged()
  nameWithType: RijndaelManaged.RijndaelManaged()
  fullName: RijndaelManaged.RijndaelManaged()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.RijndaelManaged"></xref> class.
  remarks: ''
  example:
  - "The following example creates a new instance of the `RijndaelManaged` class.  \n  \n [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\n [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\n [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]"
  syntax:
    content: public RijndaelManaged ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManaged.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This class is not compliant with the FIPS algorithm.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RijndaelManaged.BlockSize
  commentId: P:System.Security.Cryptography.RijndaelManaged.BlockSize
  id: BlockSize
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: BlockSize
  nameWithType: RijndaelManaged.BlockSize
  fullName: RijndaelManaged.BlockSize
  type: Property
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override int BlockSize { get; set; }
    return:
      type: System.Int32
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.BlockSize*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor
  commentId: M:System.Security.Cryptography.RijndaelManaged.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: CreateDecryptor()
  nameWithType: RijndaelManaged.CreateDecryptor()
  fullName: RijndaelManaged.CreateDecryptor()
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: CreateDecryptor(Byte[], Byte[])
  nameWithType: RijndaelManaged.CreateDecryptor(Byte[], Byte[])
  fullName: RijndaelManaged.CreateDecryptor(Byte[], Byte[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Creates a symmetric <xref href="System.Security.Cryptography.Rijndael"></xref> decryptor object with the specified <xref href="System.Security.Cryptography.SymmetricAlgorithm.Key"></xref> and initialization vector (<xref href="System.Security.Cryptography.SymmetricAlgorithm.IV"></xref>).
  remarks: "This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature.  \n  \n The `rgbkey` size must be 128, 192, or 256 bits."
  example:
  - "The following code example demonstrates how to use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> method to decrypt messages encoded with the same signature parameter.  \n  \n [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\n [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\n [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.
    - id: rgbIV
      type: System.Byte[]
      description: The IV to be used for the symmetric algorithm.
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric <xref href="System.Security.Cryptography.Rijndael"></xref> decryptor object.
  overload: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbKey</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>rgbIV</code> parameter is `null`."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The value of the <xref href="System.Security.Cryptography.SymmetricAlgorithm.Mode"></xref> property is not <xref href="System.Security.Cryptography.CipherMode.ECB"></xref>, <xref href="System.Security.Cryptography.CipherMode.CBC"></xref>, or <xref href="System.Security.Cryptography.CipherMode.CFB"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor
  commentId: M:System.Security.Cryptography.RijndaelManaged.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: CreateEncryptor()
  nameWithType: RijndaelManaged.CreateEncryptor()
  fullName: RijndaelManaged.CreateEncryptor()
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: CreateEncryptor(Byte[], Byte[])
  nameWithType: RijndaelManaged.CreateEncryptor(Byte[], Byte[])
  fullName: RijndaelManaged.CreateEncryptor(Byte[], Byte[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Creates a symmetric <xref href="System.Security.Cryptography.Rijndael"></xref> encryptor object with the specified <xref href="System.Security.Cryptography.SymmetricAlgorithm.Key"></xref> and initialization vector (<xref href="System.Security.Cryptography.SymmetricAlgorithm.IV"></xref>).
  remarks: "Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.  \n  \n The `rgbkey` size must be 128, 192, or 256 bits."
  example:
  - "The following code examples demonstrates how to encrypt a message using the `CreateEncryptor` method.  \n  \n [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\n [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\n [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.
    - id: rgbIV
      type: System.Byte[]
      description: The IV to be used for the symmetric algorithm.
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric <xref href="System.Security.Cryptography.Rijndael"></xref> encryptor object.
  overload: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbKey</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>rgbIV</code> parameter is `null`."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The value of the <xref href="System.Security.Cryptography.SymmetricAlgorithm.Mode"></xref> property is not <xref href="System.Security.Cryptography.CipherMode.ECB"></xref>, <xref href="System.Security.Cryptography.CipherMode.CBC"></xref>, or <xref href="System.Security.Cryptography.CipherMode.CFB"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RijndaelManaged.Dispose(Boolean)
  fullName: RijndaelManaged.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.Dispose*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV
  commentId: M:System.Security.Cryptography.RijndaelManaged.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: RijndaelManaged.GenerateIV()
  fullName: RijndaelManaged.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Generates a random initialization vector (<xref href="System.Security.Cryptography.SymmetricAlgorithm.IV"></xref>) to be used for the algorithm.
  remarks: Use this method to generate a random IV when none is specified.
  example:
  - >-
    [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]
     [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]
     [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManaged.GenerateIV*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey
  commentId: M:System.Security.Cryptography.RijndaelManaged.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: RijndaelManaged.GenerateKey()
  fullName: RijndaelManaged.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Generates a random <xref href="System.Security.Cryptography.SymmetricAlgorithm.Key"></xref> to be used for the algorithm.
  remarks: Use this method to generate a random key when none is specified.
  example:
  - >-
    [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]
     [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]
     [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManaged.GenerateKey*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.RijndaelManaged.IV
  commentId: P:System.Security.Cryptography.RijndaelManaged.IV
  id: IV
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: IV
  nameWithType: RijndaelManaged.IV
  fullName: RijndaelManaged.IV
  type: Property
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override byte[] IV { get; set; }
    return:
      type: System.Byte[]
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.IV*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.Key
  commentId: P:System.Security.Cryptography.RijndaelManaged.Key
  id: Key
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: Key
  nameWithType: RijndaelManaged.Key
  fullName: RijndaelManaged.Key
  type: Property
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.Key*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.KeySize
  commentId: P:System.Security.Cryptography.RijndaelManaged.KeySize
  id: KeySize
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: KeySize
  nameWithType: RijndaelManaged.KeySize
  fullName: RijndaelManaged.KeySize
  type: Property
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override int KeySize { get; set; }
    return:
      type: System.Int32
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.KeySize*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.LegalKeySizes
  commentId: P:System.Security.Cryptography.RijndaelManaged.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: LegalKeySizes
  nameWithType: RijndaelManaged.LegalKeySizes
  fullName: RijndaelManaged.LegalKeySizes
  type: Property
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.LegalKeySizes*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.Mode
  commentId: P:System.Security.Cryptography.RijndaelManaged.Mode
  id: Mode
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: Mode
  nameWithType: RijndaelManaged.Mode
  fullName: RijndaelManaged.Mode
  type: Property
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override System.Security.Cryptography.CipherMode Mode { get; set; }
    return:
      type: System.Security.Cryptography.CipherMode
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.Mode*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.Padding
  commentId: P:System.Security.Cryptography.RijndaelManaged.Padding
  id: Padding
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: Padding
  nameWithType: RijndaelManaged.Padding
  fullName: RijndaelManaged.Padding
  type: Property
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override System.Security.Cryptography.PaddingMode Padding { get; set; }
    return:
      type: System.Security.Cryptography.PaddingMode
      description: ''
  overload: System.Security.Cryptography.RijndaelManaged.Padding*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
references:
- uid: System.Security.Cryptography.Rijndael
  parent: System.Security.Cryptography
  isExternal: false
  name: Rijndael
  nameWithType: Rijndael
  fullName: System.Security.Cryptography.Rijndael
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.RijndaelManaged.#ctor
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: RijndaelManaged()
  nameWithType: RijndaelManaged.RijndaelManaged()
  fullName: RijndaelManaged.RijndaelManaged()
- uid: System.Security.Cryptography.RijndaelManaged.BlockSize
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: BlockSize
  nameWithType: RijndaelManaged.BlockSize
  fullName: RijndaelManaged.BlockSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateDecryptor()
  nameWithType: RijndaelManaged.CreateDecryptor()
  fullName: RijndaelManaged.CreateDecryptor()
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateDecryptor(Byte[], Byte[])
  nameWithType: RijndaelManaged.CreateDecryptor(Byte[], Byte[])
  fullName: RijndaelManaged.CreateDecryptor(Byte[], Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateEncryptor()
  nameWithType: RijndaelManaged.CreateEncryptor()
  fullName: RijndaelManaged.CreateEncryptor()
- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateEncryptor(Byte[], Byte[])
  nameWithType: RijndaelManaged.CreateEncryptor(Byte[], Byte[])
  fullName: RijndaelManaged.CreateEncryptor(Byte[], Byte[])
- uid: System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RijndaelManaged.Dispose(Boolean)
  fullName: RijndaelManaged.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: GenerateIV()
  nameWithType: RijndaelManaged.GenerateIV()
  fullName: RijndaelManaged.GenerateIV()
- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: GenerateKey()
  nameWithType: RijndaelManaged.GenerateKey()
  fullName: RijndaelManaged.GenerateKey()
- uid: System.Security.Cryptography.RijndaelManaged.IV
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: IV
  nameWithType: RijndaelManaged.IV
  fullName: RijndaelManaged.IV
- uid: System.Security.Cryptography.RijndaelManaged.Key
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: Key
  nameWithType: RijndaelManaged.Key
  fullName: RijndaelManaged.Key
- uid: System.Security.Cryptography.RijndaelManaged.KeySize
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: KeySize
  nameWithType: RijndaelManaged.KeySize
  fullName: RijndaelManaged.KeySize
- uid: System.Security.Cryptography.RijndaelManaged.LegalKeySizes
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: LegalKeySizes
  nameWithType: RijndaelManaged.LegalKeySizes
  fullName: RijndaelManaged.LegalKeySizes
- uid: System.Security.Cryptography.KeySizes
  name: KeySizes
  nameWithType: KeySizes
  fullName: System.Security.Cryptography.KeySizes
- uid: System.Security.Cryptography.KeySizes[]
  parent: System.Security.Cryptography
  isExternal: false
  name: KeySizes[]
  nameWithType: KeySizes[]
  fullName: System.Security.Cryptography.KeySizes[]
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: System.Security.Cryptography.KeySizes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RijndaelManaged.Mode
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: Mode
  nameWithType: RijndaelManaged.Mode
  fullName: RijndaelManaged.Mode
- uid: System.Security.Cryptography.CipherMode
  parent: System.Security.Cryptography
  isExternal: false
  name: CipherMode
  nameWithType: CipherMode
  fullName: System.Security.Cryptography.CipherMode
- uid: System.Security.Cryptography.RijndaelManaged.Padding
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: Padding
  nameWithType: RijndaelManaged.Padding
  fullName: RijndaelManaged.Padding
- uid: System.Security.Cryptography.PaddingMode
  parent: System.Security.Cryptography
  isExternal: false
  name: PaddingMode
  nameWithType: PaddingMode
  fullName: System.Security.Cryptography.PaddingMode
- uid: System.Security.Cryptography.RijndaelManaged.#ctor*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: RijndaelManaged
  nameWithType: RijndaelManaged.RijndaelManaged
  fullName: RijndaelManaged.RijndaelManaged
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.BlockSize*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: BlockSize
  nameWithType: RijndaelManaged.BlockSize
  fullName: RijndaelManaged.BlockSize
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateDecryptor
  nameWithType: RijndaelManaged.CreateDecryptor
  fullName: RijndaelManaged.CreateDecryptor
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateEncryptor
  nameWithType: RijndaelManaged.CreateEncryptor
  fullName: RijndaelManaged.CreateEncryptor
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.Dispose*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: Dispose
  nameWithType: RijndaelManaged.Dispose
  fullName: RijndaelManaged.Dispose
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: GenerateIV
  nameWithType: RijndaelManaged.GenerateIV
  fullName: RijndaelManaged.GenerateIV
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: GenerateKey
  nameWithType: RijndaelManaged.GenerateKey
  fullName: RijndaelManaged.GenerateKey
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.IV*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: IV
  nameWithType: RijndaelManaged.IV
  fullName: RijndaelManaged.IV
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.Key*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: Key
  nameWithType: RijndaelManaged.Key
  fullName: RijndaelManaged.Key
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.KeySize*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: KeySize
  nameWithType: RijndaelManaged.KeySize
  fullName: RijndaelManaged.KeySize
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.LegalKeySizes*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: LegalKeySizes
  nameWithType: RijndaelManaged.LegalKeySizes
  fullName: RijndaelManaged.LegalKeySizes
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.Mode*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: Mode
  nameWithType: RijndaelManaged.Mode
  fullName: RijndaelManaged.Mode
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Security.Cryptography.RijndaelManaged.Padding*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: Padding
  nameWithType: RijndaelManaged.Padding
  fullName: RijndaelManaged.Padding
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: BlockSizeValue
  nameWithType: SymmetricAlgorithm.BlockSizeValue
  fullName: SymmetricAlgorithm.BlockSizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: SymmetricAlgorithm.Clear()
  fullName: SymmetricAlgorithm.Clear()
- uid: System.Security.Cryptography.Rijndael.Create
  parent: System.Security.Cryptography.Rijndael
  isExternal: false
  name: Create()
  nameWithType: Rijndael.Create()
  fullName: Rijndael.Create()
- uid: System.Security.Cryptography.Rijndael.Create(System.String)
  parent: System.Security.Cryptography.Rijndael
  isExternal: false
  name: Create(String)
  nameWithType: Rijndael.Create(String)
  fullName: Rijndael.Create(String)
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: SymmetricAlgorithm.Dispose()
  fullName: SymmetricAlgorithm.Dispose()
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: FeedbackSize
  nameWithType: SymmetricAlgorithm.FeedbackSize
  fullName: SymmetricAlgorithm.FeedbackSize
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: FeedbackSizeValue
  nameWithType: SymmetricAlgorithm.FeedbackSizeValue
  fullName: SymmetricAlgorithm.FeedbackSizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: IVValue
  nameWithType: SymmetricAlgorithm.IVValue
  fullName: SymmetricAlgorithm.IVValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: KeySizeValue
  nameWithType: SymmetricAlgorithm.KeySizeValue
  fullName: SymmetricAlgorithm.KeySizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: KeyValue
  nameWithType: SymmetricAlgorithm.KeyValue
  fullName: SymmetricAlgorithm.KeyValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalBlockSizes
  nameWithType: SymmetricAlgorithm.LegalBlockSizes
  fullName: SymmetricAlgorithm.LegalBlockSizes
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalBlockSizesValue
  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue
  fullName: SymmetricAlgorithm.LegalBlockSizesValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalKeySizesValue
  nameWithType: SymmetricAlgorithm.LegalKeySizesValue
  fullName: SymmetricAlgorithm.LegalKeySizesValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: ModeValue
  nameWithType: SymmetricAlgorithm.ModeValue
  fullName: SymmetricAlgorithm.ModeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: PaddingValue
  nameWithType: SymmetricAlgorithm.PaddingValue
  fullName: SymmetricAlgorithm.PaddingValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: ValidKeySize(Int32)
  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)
  fullName: SymmetricAlgorithm.ValidKeySize(Int32)
