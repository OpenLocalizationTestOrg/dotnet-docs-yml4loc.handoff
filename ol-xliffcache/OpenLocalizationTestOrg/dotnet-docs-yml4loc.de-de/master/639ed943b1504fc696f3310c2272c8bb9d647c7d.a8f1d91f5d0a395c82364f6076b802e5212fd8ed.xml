{"nodes":[{"content":"The <xref href=\"System.Linq.Expressions\"></xref> namespace contains classes, interfaces and enumerations that enable language-level code expressions to be represented as objects in the form of expression trees.","nodes":[{"pos":[0,210],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions\"&gt;&lt;/xref&gt;</ph> namespace contains classes, interfaces and enumerations that enable language-level code expressions to be represented as objects in the form of expression trees.","source":"The <xref href=\"System.Linq.Expressions\"></xref> namespace contains classes, interfaces and enumerations that enable language-level code expressions to be represented as objects in the form of expression trees."}],"pos":[2216,2427],"yaml":true},{"content":"The abstract class <xref:System.Linq.Expressions.Expression> provides the root of a class hierarchy used to model expression trees.  \n  \n The classes in this namespace that derive from <xref:System.Linq.Expressions.Expression>, for example <xref:System.Linq.Expressions.MemberExpression> and <xref:System.Linq.Expressions.ParameterExpression>, are used to represent nodes in an expression tree. The <xref:System.Linq.Expressions.Expression> class contains `static` (`Shared` in Visual Basic) factory methods to create expression tree nodes of the various types.  \n  \n The enumeration type <xref:System.Linq.Expressions.ExpressionType> specifies the unique node types.","nodes":[{"pos":[0,131],"content":"The abstract class <xref:System.Linq.Expressions.Expression> provides the root of a class hierarchy used to model expression trees.","nodes":[{"content":"The abstract class <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.Expression&gt;</ph> provides the root of a class hierarchy used to model expression trees.","pos":[0,131],"source":"The abstract class <xref:System.Linq.Expressions.Expression> provides the root of a class hierarchy used to model expression trees."}]},{"pos":[138,561],"content":"The classes in this namespace that derive from <xref:System.Linq.Expressions.Expression>, for example <xref:System.Linq.Expressions.MemberExpression> and <xref:System.Linq.Expressions.ParameterExpression>, are used to represent nodes in an expression tree. The <xref:System.Linq.Expressions.Expression> class contains `static` (`Shared` in Visual Basic) factory methods to create expression tree nodes of the various types.","nodes":[{"content":"The classes in this namespace that derive from <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.Expression&gt;</ph>, for example <ph id=\"ph2\">&lt;xref:System.Linq.Expressions.MemberExpression&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Linq.Expressions.ParameterExpression&gt;</ph>, are used to represent nodes in an expression tree.","pos":[0,256],"source":"The classes in this namespace that derive from <xref:System.Linq.Expressions.Expression>, for example <xref:System.Linq.Expressions.MemberExpression> and <xref:System.Linq.Expressions.ParameterExpression>, are used to represent nodes in an expression tree."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.Expression&gt;</ph> class contains <ph id=\"ph2\">`static`</ph> (<ph id=\"ph3\">`Shared`</ph> in Visual Basic) factory methods to create expression tree nodes of the various types.","pos":[257,423],"source":" The <xref:System.Linq.Expressions.Expression> class contains `static` (`Shared` in Visual Basic) factory methods to create expression tree nodes of the various types."}]},{"pos":[568,667],"content":"The enumeration type <xref:System.Linq.Expressions.ExpressionType> specifies the unique node types.","nodes":[{"content":"The enumeration type <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.ExpressionType&gt;</ph> specifies the unique node types.","pos":[0,99],"source":"The enumeration type <xref:System.Linq.Expressions.ExpressionType> specifies the unique node types."}]}],"pos":[2438,3112],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions\n  id: System.Linq.Expressions\n  children:\n  - System.Linq.Expressions.BinaryExpression\n  - System.Linq.Expressions.BlockExpression\n  - System.Linq.Expressions.CatchBlock\n  - System.Linq.Expressions.ConditionalExpression\n  - System.Linq.Expressions.ConstantExpression\n  - System.Linq.Expressions.DebugInfoExpression\n  - System.Linq.Expressions.DefaultExpression\n  - System.Linq.Expressions.DynamicExpression\n  - System.Linq.Expressions.DynamicExpressionVisitor\n  - System.Linq.Expressions.ElementInit\n  - System.Linq.Expressions.Expression\n  - System.Linq.Expressions.Expression`1\n  - System.Linq.Expressions.ExpressionType\n  - System.Linq.Expressions.ExpressionVisitor\n  - System.Linq.Expressions.GotoExpression\n  - System.Linq.Expressions.GotoExpressionKind\n  - System.Linq.Expressions.IArgumentProvider\n  - System.Linq.Expressions.IDynamicExpression\n  - System.Linq.Expressions.IndexExpression\n  - System.Linq.Expressions.InvocationExpression\n  - System.Linq.Expressions.LabelExpression\n  - System.Linq.Expressions.LabelTarget\n  - System.Linq.Expressions.LambdaExpression\n  - System.Linq.Expressions.ListInitExpression\n  - System.Linq.Expressions.LoopExpression\n  - System.Linq.Expressions.MemberAssignment\n  - System.Linq.Expressions.MemberBinding\n  - System.Linq.Expressions.MemberBindingType\n  - System.Linq.Expressions.MemberExpression\n  - System.Linq.Expressions.MemberInitExpression\n  - System.Linq.Expressions.MemberListBinding\n  - System.Linq.Expressions.MemberMemberBinding\n  - System.Linq.Expressions.MethodCallExpression\n  - System.Linq.Expressions.NewArrayExpression\n  - System.Linq.Expressions.NewExpression\n  - System.Linq.Expressions.ParameterExpression\n  - System.Linq.Expressions.RuntimeVariablesExpression\n  - System.Linq.Expressions.SwitchCase\n  - System.Linq.Expressions.SwitchExpression\n  - System.Linq.Expressions.SymbolDocumentInfo\n  - System.Linq.Expressions.TryExpression\n  - System.Linq.Expressions.TypeBinaryExpression\n  - System.Linq.Expressions.UnaryExpression\n  langs:\n  - csharp\n  name: System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  type: Namespace\n  summary: The <xref href=\"System.Linq.Expressions\"></xref> namespace contains classes, interfaces and enumerations that enable language-level code expressions to be represented as objects in the form of expression trees.\n  remarks: \"The abstract class <xref:System.Linq.Expressions.Expression> provides the root of a class hierarchy used to model expression trees.  \\n  \\n The classes in this namespace that derive from <xref:System.Linq.Expressions.Expression>, for example <xref:System.Linq.Expressions.MemberExpression> and <xref:System.Linq.Expressions.ParameterExpression>, are used to represent nodes in an expression tree. The <xref:System.Linq.Expressions.Expression> class contains `static` (`Shared` in Visual Basic) factory methods to create expression tree nodes of the various types.  \\n  \\n The enumeration type <xref:System.Linq.Expressions.ExpressionType> specifies the unique node types.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Linq.Expressions.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\nreferences:\n- uid: System.Linq.Expressions.BinaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: BinaryExpression\n  nameWithType: BinaryExpression\n  fullName: System.Linq.Expressions.BinaryExpression\n- uid: System.Linq.Expressions.BlockExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: BlockExpression\n  nameWithType: BlockExpression\n  fullName: System.Linq.Expressions.BlockExpression\n- uid: System.Linq.Expressions.CatchBlock\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: CatchBlock\n  nameWithType: CatchBlock\n  fullName: System.Linq.Expressions.CatchBlock\n- uid: System.Linq.Expressions.ConditionalExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ConditionalExpression\n  nameWithType: ConditionalExpression\n  fullName: System.Linq.Expressions.ConditionalExpression\n- uid: System.Linq.Expressions.ConstantExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ConstantExpression\n  nameWithType: ConstantExpression\n  fullName: System.Linq.Expressions.ConstantExpression\n- uid: System.Linq.Expressions.DebugInfoExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DebugInfoExpression\n  nameWithType: DebugInfoExpression\n  fullName: System.Linq.Expressions.DebugInfoExpression\n- uid: System.Linq.Expressions.DefaultExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DefaultExpression\n  nameWithType: DefaultExpression\n  fullName: System.Linq.Expressions.DefaultExpression\n- uid: System.Linq.Expressions.DynamicExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DynamicExpression\n  nameWithType: DynamicExpression\n  fullName: System.Linq.Expressions.DynamicExpression\n- uid: System.Linq.Expressions.DynamicExpressionVisitor\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DynamicExpressionVisitor\n  nameWithType: DynamicExpressionVisitor\n  fullName: System.Linq.Expressions.DynamicExpressionVisitor\n- uid: System.Linq.Expressions.ElementInit\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ElementInit\n  nameWithType: ElementInit\n  fullName: System.Linq.Expressions.ElementInit\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.Expression`1\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionType\n  nameWithType: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n- uid: System.Linq.Expressions.ExpressionVisitor\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionVisitor\n  nameWithType: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n- uid: System.Linq.Expressions.GotoExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: GotoExpression\n  nameWithType: GotoExpression\n  fullName: System.Linq.Expressions.GotoExpression\n- uid: System.Linq.Expressions.GotoExpressionKind\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: GotoExpressionKind\n  nameWithType: GotoExpressionKind\n  fullName: System.Linq.Expressions.GotoExpressionKind\n- uid: System.Linq.Expressions.IArgumentProvider\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: IArgumentProvider\n  nameWithType: IArgumentProvider\n  fullName: System.Linq.Expressions.IArgumentProvider\n- uid: System.Linq.Expressions.IDynamicExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: IDynamicExpression\n  nameWithType: IDynamicExpression\n  fullName: System.Linq.Expressions.IDynamicExpression\n- uid: System.Linq.Expressions.IndexExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: IndexExpression\n  nameWithType: IndexExpression\n  fullName: System.Linq.Expressions.IndexExpression\n- uid: System.Linq.Expressions.InvocationExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: InvocationExpression\n  nameWithType: InvocationExpression\n  fullName: System.Linq.Expressions.InvocationExpression\n- uid: System.Linq.Expressions.LabelExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelExpression\n  nameWithType: LabelExpression\n  fullName: System.Linq.Expressions.LabelExpression\n- uid: System.Linq.Expressions.LabelTarget\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelTarget\n  nameWithType: LabelTarget\n  fullName: System.Linq.Expressions.LabelTarget\n- uid: System.Linq.Expressions.LambdaExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LambdaExpression\n  nameWithType: LambdaExpression\n  fullName: System.Linq.Expressions.LambdaExpression\n- uid: System.Linq.Expressions.ListInitExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ListInitExpression\n  nameWithType: ListInitExpression\n  fullName: System.Linq.Expressions.ListInitExpression\n- uid: System.Linq.Expressions.LoopExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LoopExpression\n  nameWithType: LoopExpression\n  fullName: System.Linq.Expressions.LoopExpression\n- uid: System.Linq.Expressions.MemberAssignment\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberAssignment\n  nameWithType: MemberAssignment\n  fullName: System.Linq.Expressions.MemberAssignment\n- uid: System.Linq.Expressions.MemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberBinding\n  nameWithType: MemberBinding\n  fullName: System.Linq.Expressions.MemberBinding\n- uid: System.Linq.Expressions.MemberBindingType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberBindingType\n  nameWithType: MemberBindingType\n  fullName: System.Linq.Expressions.MemberBindingType\n- uid: System.Linq.Expressions.MemberExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberExpression\n  nameWithType: MemberExpression\n  fullName: System.Linq.Expressions.MemberExpression\n- uid: System.Linq.Expressions.MemberInitExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberInitExpression\n  nameWithType: MemberInitExpression\n  fullName: System.Linq.Expressions.MemberInitExpression\n- uid: System.Linq.Expressions.MemberListBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberListBinding\n  nameWithType: MemberListBinding\n  fullName: System.Linq.Expressions.MemberListBinding\n- uid: System.Linq.Expressions.MemberMemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberMemberBinding\n  nameWithType: MemberMemberBinding\n  fullName: System.Linq.Expressions.MemberMemberBinding\n- uid: System.Linq.Expressions.MethodCallExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MethodCallExpression\n  nameWithType: MethodCallExpression\n  fullName: System.Linq.Expressions.MethodCallExpression\n- uid: System.Linq.Expressions.NewArrayExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: NewArrayExpression\n  nameWithType: NewArrayExpression\n  fullName: System.Linq.Expressions.NewArrayExpression\n- uid: System.Linq.Expressions.NewExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: NewExpression\n  nameWithType: NewExpression\n  fullName: System.Linq.Expressions.NewExpression\n- uid: System.Linq.Expressions.ParameterExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ParameterExpression\n  nameWithType: ParameterExpression\n  fullName: System.Linq.Expressions.ParameterExpression\n- uid: System.Linq.Expressions.RuntimeVariablesExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: RuntimeVariablesExpression\n  nameWithType: RuntimeVariablesExpression\n  fullName: System.Linq.Expressions.RuntimeVariablesExpression\n- uid: System.Linq.Expressions.SwitchCase\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SwitchCase\n  nameWithType: SwitchCase\n  fullName: System.Linq.Expressions.SwitchCase\n- uid: System.Linq.Expressions.SwitchExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SwitchExpression\n  nameWithType: SwitchExpression\n  fullName: System.Linq.Expressions.SwitchExpression\n- uid: System.Linq.Expressions.SymbolDocumentInfo\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SymbolDocumentInfo\n  nameWithType: SymbolDocumentInfo\n  fullName: System.Linq.Expressions.SymbolDocumentInfo\n- uid: System.Linq.Expressions.TryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: TryExpression\n  nameWithType: TryExpression\n  fullName: System.Linq.Expressions.TryExpression\n- uid: System.Linq.Expressions.TypeBinaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: TypeBinaryExpression\n  nameWithType: TypeBinaryExpression\n  fullName: System.Linq.Expressions.TypeBinaryExpression\n- uid: System.Linq.Expressions.UnaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: UnaryExpression\n  nameWithType: UnaryExpression\n  fullName: System.Linq.Expressions.UnaryExpression\n"}