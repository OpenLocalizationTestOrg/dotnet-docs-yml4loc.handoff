### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlConnectionStringBuilder
  commentId: T:System.Data.SqlClient.SqlConnectionStringBuilder
  id: SqlConnectionStringBuilder
  children:
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  - System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  - System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  - System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  - System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  - System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  - System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  - System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  - System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  - System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  - System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  - System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  - System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  - System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  - System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  - System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  - System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Password
  - System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  - System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  - System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  - System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  - System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  - System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  - System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  - System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  - System.Data.SqlClient.SqlConnectionStringBuilder.Values
  - System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  langs:
  - csharp
  name: SqlConnectionStringBuilder
  nameWithType: SqlConnectionStringBuilder
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder
  type: Class
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Provides a simple way to create and manage the contents of connection strings used by the <xref href="System.Data.SqlClient.SqlConnection"></xref> class.
  remarks: "The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class. The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by SQL Server. Developers needing to create connection strings as part of applications can use the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class to build and modify connection strings. The class also makes it easy to manage connection strings stored in an application configuration file.  \n  \n The <xref:System.Data.SqlClient.SqlConnectionStringBuilder> performs checks for valid key/value pairs. Therefore, you cannot use this class to create invalid connection strings; trying to add invalid pairs will throw an exception. The class maintains a fixed collection of synonyms and can translate from a synonym to the corresponding well-known key name.  \n  \n For example, when you use the **Item** property to retrieve a value, you can specify a string that contains any synonym for the key you need. For example, you can specify \"Network Address\", \"addr\", or any other acceptable synonym for this key within a connection string when you use any member that requires a string that contains the key name, such as the **Item** property or the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A> method. See the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property for a full list of acceptable synonyms.  \n  \n The **Item** property handles tries to insert malicious entries. For example, the following code, using the default Item property (the indexer, in C#) correctly escapes the nested key/value pair:  \n  \n```vb  \nDim builder As New System.Data.SqlClient.SqlConnectionStringBuilder  \nbuilder(\"Data Source\") = \"(local)\"  \nbuilder(\"Integrated Security\") = True  \nbuilder(\"Initial Catalog\") = \"AdventureWorks;NewValue=Bad\"  \nConsole.WriteLine(builder.ConnectionString)  \n```  \n  \n```csharp  \nSystem.Data.SqlClient.SqlConnectionStringBuilder builder =  \n  new System.Data.SqlClient.SqlConnectionStringBuilder();  \nbuilder[\"Data Source\"] = \"(local)\";  \nbuilder[\"integrated Security\"] = true;  \nbuilder[\"Initial Catalog\"] = \"AdventureWorks;NewValue=Bad\";  \nConsole.WriteLine(builder.ConnectionString);  \n  \n```  \n  \n The result is the following connection string that handles the invalid value in a safe manner:  \n  \n```  \nSource=(local);Initial Catalog=\"AdventureWorks;NewValue=Bad\";  \nIntegrated Security=True  \n```"
  example:
  - "The following console application builds connection strings for a [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] database. The code uses a <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class to create the connection string, and then passes the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance to the constructor of the connection class. The example also parses an existing connection string and demonstrates various ways of manipulating the connection string's contents.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/SqlConnectionStringBuilderConverter))]

      public sealed class SqlConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#IsFixedSize
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  commentId: M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: SqlConnectionStringBuilder()
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  fullName: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> class.
  syntax:
    content: public SqlConnectionStringBuilder ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  commentId: M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: SqlConnectionStringBuilder(String)
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  fullName: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> class. The provided connection string provides the data for the instance's internal connection information.
  remarks: The <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class provides a fixed internal collection of key/value pairs. Even if you supply only a small subset of the possible connection string values in the constructor, the object always provides default values for each key/value pair. When the `ConnectionString` property of the object is retrieved, the string contains only key/value pairs in which the value is not the default value for the item.
  example:
  - "The following example supplies a simple SQL Server connection string in the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object's constructor, and then iterates through all the key/value pairs within the object. Note that the collection provides default values for each item. Also note that the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class converts synonyms for the well-known keys so that they are consistent with the well-known names.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.Password#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Password/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Password#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Password/VB/source.vb#1)]"
  syntax:
    content: public SqlConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: The basis for the object's internal connection information. Parsed into name/value pairs. Invalid key names raise <xref href="System.Collections.Generic.KeyNotFoundException"></xref>.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: Invalid key name within the connection string.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: Invalid value within the connection string (specifically, when a Boolean or numeric value was expected but not supplied).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The supplied <code>connectionString</code> is not valid.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  id: ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: SqlConnectionStringBuilder.ApplicationIntent
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Declares the application workload type when connecting to a database in an SQL Server Availability Group. You can set the value of this property with <xref href="System.Data.SqlClient.ApplicationIntent"></xref>. For more information about SqlClient support for Always On Availability Groups, see [SqlClient Support for High Availability, Disaster Recovery](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).
  syntax:
    content: public System.Data.SqlClient.ApplicationIntent ApplicationIntent { get; set; }
    return:
      type: System.Data.SqlClient.ApplicationIntent
      description: Returns the current value of the property (a value of type <xref href="System.Data.SqlClient.ApplicationIntent"></xref>).
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  id: ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: SqlConnectionStringBuilder.ApplicationName
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the name of the application associated with the connection string.
  remarks: This property corresponds to the "Application Name" and "app" keys within the connection string.
  example:
  - "The following example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> and assigns a connection string in the object's constructor. The code displays the parsed and recreated version of the connection string, and then modifies the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName%2A> property of the object. Finally, the code displays the new connection string, including the new key/value pair.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.ApplicationName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.ApplicationName/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ApplicationName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.ApplicationName/VB/source.vb#1)]  \n  \n The sample displays the following text in the console window:  \n  \n```  \nOriginal: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nApplicationName=\".Net SqlClient Data Provider\"  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True;Application Name=\"My Application\"  \n```"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: The name of the application, or ".NET SqlClient Data Provider" if no name has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  id: AsynchronousProcessing
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: SqlConnectionStringBuilder.AsynchronousProcessing
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether asynchronous processing is allowed by the connection created by using this connection string.
  remarks: This property corresponds to the "Asynchronous Processing" and "async" keys within the connection string. In order to take advantage of the asynchronous processing provided by the <xref:System.Data.SqlClient.SqlCommand> object, this key/value pair must be included within the connection string of the associated <xref:System.Data.SqlClient.SqlConnection> object.
  example:
  - "The following example retrieves a connection string and verifies that the connection string is configured to allow for asynchronous processing. (In this case, the string comes from a procedure within the application, but in a production application, the connection string might come from a configuration file, or some other source.) Then, the example performs an asynchronous operation, updating values within a sample database on a background thread.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.Async#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Async/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Async#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Async/VB/source.vb#1)]"
  syntax:
    content: public bool AsynchronousProcessing { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing"></xref> property, or `false` if no value has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  id: AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: SqlConnectionStringBuilder.AttachDBFilename
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a string that contains the name of the primary data file. This includes the full path name of an attachable database.
  remarks: "This property corresponds to the \"AttachDBFilename\", \"extended properties\", and \"initial file name\" keys within the connection string.  \n  \n `AttachDBFilename` is only supported for primary data files with an .mdf extension.  \n  \n An error will be generated if a log file exists in the same directory as the data file and the 'database' keyword is used when attaching the primary data file. In this case, remove the log file. Once the database is attached, a new log file will be automatically generated based on the physical path."
  example:
  - "The following example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance, and sets the `AttachDBFilename` property in order to specify the name of an attached data file.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.AttachDBFilename#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.AttachDBFilename/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.AttachDBFilename#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.AttachDBFilename/VB/source.vb#1)]"
  syntax:
    content: public string AttachDBFilename { get; set; }
    return:
      type: System.String
      description: The value of the `AttachDBFilename` property, or `String.Empty` if no value has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  id: Authentication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: SqlConnectionStringBuilder.Authentication
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets the authentication of the connection string.
  syntax:
    content: public System.Data.SqlClient.SqlAuthenticationMethod Authentication { get; set; }
    return:
      type: System.Data.SqlClient.SqlAuthenticationMethod
      description: The authentication of the connection string.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication*
  exceptions: []
  attributes: []
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  commentId: M:System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: SqlConnectionStringBuilder.Clear()
  fullName: SqlConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Clears the contents of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> instance.
  remarks: The <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method removes all key/value pairs from the <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, and resets all corresponding properties. This includes setting the <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A> property to 0, and setting the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property to an empty string.
  example:
  - "The following example demonstrates calling the <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method. This example populates the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> with some key/value pairs, and then calls the <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method and shows the results.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Clear/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Clear/VB/source.vb#1)]"
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Clear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: SqlConnectionStringBuilder.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets and sets the column encryption settings for the connection string builder.
  syntax:
    content: public System.Data.SqlClient.SqlConnectionColumnEncryptionSetting ColumnEncryptionSetting { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
      description: The column encryption settings for the connection string builder.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting*
  exceptions: []
  attributes: []
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  id: ConnectionReset
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: SqlConnectionStringBuilder.ConnectionReset
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Obsolete. Gets or sets a Boolean value that indicates whether the connection is reset when drawn from the connection pool.
  remarks: This property corresponds to the "Connection Reset" key within the <xref:System.Data.SqlClient.SqlConnection> connection string, which has been removed from version 3.5 SP1 of the .NET Framework.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      [System.Obsolete("ConnectionReset has been deprecated.  SqlConnection will ignore the 'connection reset' keyword and always reset the connection")]

      public bool ConnectionReset { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset"></xref> property, or true if no value has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  id: ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: SqlConnectionStringBuilder.ConnectRetryCount
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: "[Supported in the .NET Framework 4.5.1 and later versions]  \n  \n The number of reconnections attempted after identifying that there was an idle connection failure. This must be an integer between 0 and 255. Default is 1. Set to 0 to disable reconnecting on idle connection failures. An <xref href=\"System.ArgumentException\"></xref> will be thrown if set to a value outside of the allowed range."
  syntax:
    content: public int ConnectRetryCount { get; set; }
    return:
      type: System.Int32
      description: The number of reconnections attempted after identifying that there was an idle connection failure.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  id: ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: SqlConnectionStringBuilder.ConnectRetryInterval
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: "[Supported in the .NET Framework 4.5.1 and later versions]  \n  \n Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure. This must be an integer between 1 and 60. The default is 10 seconds. An <xref href=\"System.ArgumentException\"></xref> will be thrown if set to a value outside of the allowed range."
  syntax:
    content: public int ConnectRetryInterval { get; set; }
    return:
      type: System.Int32
      description: Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  id: ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: SqlConnectionStringBuilder.ConnectTimeout
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.
  remarks: "This property corresponds to the \"Connect Timeout\", \"connection timeout\", and \"timeout\" keys within the connection string.  \n  \n When opening a connection to a Azure SQL Database, set the connection timeout to 30 seconds."
  example:
  - "The following example first displays the contents of a connection string that does not specify the \"Connect Timeout\" value, sets the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout%2A> property, and then displays the new connection string.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.ConnectTimeout#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.ConnectTimeout/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ConnectTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.ConnectTimeout/VB/source.vb#1)]"
  syntax:
    content: public int ConnectTimeout { get; set; }
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout"></xref> property, or 15 seconds if no value has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  commentId: M:System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: SqlConnectionStringBuilder.ContainsKey(String)
  fullName: SqlConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Determines whether the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> contains a specific key.
  remarks: Because the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> contains a fixed-size collection of key/value pairs, the <xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A> method determines only if a particular key name is valid.
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the **ContainsKey** method.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.ContainsKey#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.ContainsKey/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ContainsKey#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.ContainsKey/VB/source.vb#1)]  \n  \n The example displays the following output in the console window:  \n  \n```  \nConnection string = Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nTrue  \nTrue  \nTrue  \nFalse  \n```"
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: The key to locate in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref>.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> contains an element that has the specified key; otherwise, false.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>keyword</code> is null (`Nothing` in Visual Basic)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  id: ContextConnection
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: SqlConnectionStringBuilder.ContextConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets or sets a value that indicates whether a client/server or in-process connection to SQL Server should be made.
  remarks: "This property corresponds to the \"Context Connection\" key within the connection string.  \n  \n> [!NOTE]\n>  The <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> property returns `null` if the connection string for the <xref:System.Data.SqlClient.SqlConnection> is \"context connection=true\"."
  syntax:
    content: public bool ContextConnection { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection"></xref> property, or `False` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  id: CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: SqlConnectionStringBuilder.CurrentLanguage
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the SQL Server Language record name.
  remarks: This property corresponds to the "Current Language" and "language" keys within the connection string.
  syntax:
    content: public string CurrentLanguage { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage"></xref> property, or `String.Empty` if no value has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: SqlConnectionStringBuilder.DataSource
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the name or network address of the instance of SQL Server to connect to.
  remarks: This property corresponds to the "Data Source", "server", "address", "addr", and "network address" keys within the connection string. Regardless of which of these values has been supplied within the supplied connection string, the connection string created by the `SqlConnectionStringBuilder` will use the well-known "Data Source" key.
  example:
  - "The following example demonstrates that the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class converts synonyms for the \"Data Source\" connection string key into the well-known key:  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.DataSource/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.DataSource/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/SqlDataSourceConverter))]

      public string DataSource { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.DataSource"></xref> property, or `String.Empty` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  id: Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: SqlConnectionStringBuilder.Encrypt
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed.
  remarks: This property corresponds to the "Encrypt" key within the connection string.
  syntax:
    content: public bool Encrypt { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt"></xref> property, or `false` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  id: Enlist
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: SqlConnectionStringBuilder.Enlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether the SQL Server connection pooler automatically enlists the connection in the creation thread's current transaction context.
  remarks: This property corresponds to the "Enlist" key within the connection string.
  syntax:
    content: public bool Enlist { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Enlist"></xref> property, or `true` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  id: FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: SqlConnectionStringBuilder.FailoverPartner
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the name or address of the partner server to connect to if the primary server is down.
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/SqlDataSourceConverter))]

      public string FailoverPartner { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner"></xref> property, or `String.Empty` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  commentId: M:System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  id: GetProperties(System.Collections.Hashtable)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: GetProperties(Hashtable)
  nameWithType: SqlConnectionStringBuilder.GetProperties(Hashtable)
  fullName: SqlConnectionStringBuilder.GetProperties(Hashtable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);
    parameters:
    - id: propertyDescriptors
      type: System.Collections.Hashtable
      description: ''
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  id: InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: SqlConnectionStringBuilder.InitialCatalog
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the name of the database associated with the connection.
  remarks: This property corresponds to the "Initial Catalog" and "database" keys within the connection string.
  example:
  - "The following example creates a simple connection string and then uses the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class to add the name of the database to the connection string. The code displays the contents of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog%2A> property, just to verify that the class was able to convert from the synonym (\"Database\") to the appropriate property value.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.InitialCatalog#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.InitialCatalog/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.InitialCatalog#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.InitialCatalog/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/SqlInitialCatalogConverter))]

      public string InitialCatalog { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog"></xref> property, or `String.Empty` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  id: IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: SqlConnectionStringBuilder.IntegratedSecurity
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether User ID and Password are specified in the connection (when `false`) or whether the current Windows account credentials are used for authentication (when `true`).
  remarks: This property corresponds to the "Integrated Security" and "trusted_connection" keys within the connection string.
  example:
  - "The following example converts an existing connection string from using SQL Server Authentication to using integrated security. The example does its work by removing the user name and password from the connection string and then setting the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity%2A> property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.IntegratedSecurity/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.IntegratedSecurity/VB/source.vb#1)]"
  syntax:
    content: public bool IntegratedSecurity { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity"></xref> property, or `false` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  id: IsFixedSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: SqlConnectionStringBuilder.IsFixedSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets a value that indicates whether the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> has a fixed size.
  syntax:
    content: public override bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: '`true` in every case, because the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> supplies a fixed-size collection of key/value pairs.'
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: SqlConnectionStringBuilder.Item(String)
  fullName: SqlConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the value associated with the specified key. In C#, this property is the indexer.
  remarks: Because the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> contains a fixed-size dictionary, trying to add a key that does not exist within the dictionary throws a <xref:System.Collections.Generic.KeyNotFoundException>.
  example:
  - "The following code, in a console application, creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> and adds key/value pairs to its connection string, using the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Item%2A> property.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Item/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Item/VB/source.vb#1)]"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: The key of the item to get or set.
    return:
      type: System.Object
      description: The value associated with the specified key.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>keyword</code> is a null reference (`Nothing` in Visual Basic).
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: Tried to add a key that does not exist within the available keys.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: Invalid value within the connection string (specifically, a Boolean or numeric value was expected but not supplied).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: SqlConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets an <xref href="System.Collections.ICollection"></xref> that contains the keys in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref>.
  remarks: The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Values%2A> property.
  example:
  - "The following console application example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code loops through the <xref:System.Collections.ICollection> returned by the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Keys%2A> property displaying the key/value pairs.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.Keys#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Keys/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Keys#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Keys/VB/source.vb#1)]"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection"></xref> that contains the keys in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref>.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Keys*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  id: LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: SqlConnectionStringBuilder.LoadBalanceTimeout
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed.
  remarks: This property corresponds to the "Load Balance Timeout" and "connection lifetime" keys within the connection string.
  syntax:
    content: public int LoadBalanceTimeout { get; set; }
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout"></xref> property, or 0 if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  id: MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: SqlConnectionStringBuilder.MaxPoolSize
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the maximum number of connections allowed in the connection pool for this specific connection string.
  remarks: This property corresponds to the "Max Pool Size" key within the connection string.
  syntax:
    content: public int MaxPoolSize { get; set; }
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize"></xref> property, or 100 if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  id: MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: SqlConnectionStringBuilder.MinPoolSize
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the minimum number of connections allowed in the connection pool for this specific connection string.
  remarks: This property corresponds to the "Min Pool Size" key within the connection string.
  syntax:
    content: public int MinPoolSize { get; set; }
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize"></xref> property, or 0 if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  id: MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: SqlConnectionStringBuilder.MultipleActiveResultSets
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: "When true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection.  \n  \n For more information, see [Multiple Active Result Sets (MARS)](http://msdn.microsoft.com//library/cfa084cz.aspx)."
  remarks: This property corresponds to the "MultipleActiveResultSets" key within the connection string.
  example:
  - "The following example explicitly disables the Multiple Active Result Sets feature.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.MARS#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.MARS/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.MARS#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.MARS/VB/source.vb#1)]"
  syntax:
    content: public bool MultipleActiveResultSets { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets"></xref> property, or `false` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  id: MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: SqlConnectionStringBuilder.MultiSubnetFailover
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server. For more information about SqlClient support for Always On Availability Groups, see [SqlClient Support for High Availability, Disaster Recovery](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).
  syntax:
    content: public bool MultiSubnetFailover { get; set; }
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean"></xref> indicating the current value of the property.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  id: NetworkLibrary
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: SqlConnectionStringBuilder.NetworkLibrary
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets or sets a string that contains the name of the network library used to establish a connection to the SQL Server.
  remarks: "This property corresponds to the \"Network Library\", \"network\", and \"net\" keys within the connection string.  \n  \n Supported values for this property include dbnmpntw (Named Pipes), dbmsrpcn (Multiprotocol), dbmsadsn (AppleTalk), dbmsgnet (VIA), dbmslpcn (Shared Memory) and dbmsspxn (IPX/SPX), and dbmssocn (TCP/IP). The corresponding network DLL must be installed on the system to which you connect. If you do not specify a network and you use a local server (for example, \".\" or \"(local)\"), Shared Memory is used."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/NetworkLibraryConverter))]

      public string NetworkLibrary { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary"></xref> property, or `String.Empty` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: SqlConnectionStringBuilder.PacketSize
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server.
  remarks: This property corresponds to the "Packet Size" key within the connection string.
  syntax:
    content: public int PacketSize { get; set; }
    return:
      type: System.Int32
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize"></xref> property, or 8000 if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Password
  id: Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: SqlConnectionStringBuilder.Password
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the password for the SQL Server account.
  remarks: "This property corresponds to the \"Password\" and \"pwd\" keys within the connection string.  \n  \n If <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Password%2A> has not been set and you retrieve the value, the return value is <xref:System.String.Empty>. To reset the password for the connection string, pass null to the Item property."
  example:
  - "The following example shows how to set <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Password%2A>.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.Password.2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/dataworks sqlconnectionstringbuilder.password.2/cs/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Password.2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/dataworks sqlconnectionstringbuilder.password.2/vb/source.vb#1)]"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Password"></xref> property, or `String.Empty` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Password*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The password was incorrectly set to null.  See code sample below.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: SqlConnectionStringBuilder.PersistSecurityInfo
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.
  remarks: This property corresponds to the "Persist Security Info" and "persistsecurityinfo" keys within the connection string.
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo"></xref> property, or `false` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  id: PoolBlockingPeriod
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: SqlConnectionStringBuilder.PoolBlockingPeriod
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: The blocking period behavior for a connection pool.
  remarks: "When connection pooling is enabled and  a timeout error or other login error occurs, an exception will be thrown and subsequent connection attempts will fail for the next five seconds, the \"blocking period\". If the application attempts to connect within the blocking period, the first exception will be thrown again. Subsequent failures after a blocking period ends will result in a new blocking period that is twice as long as the previous blocking period, up to a maximum of one minute.  \n  \n Attempting to connect to Azure SQL databases can fail with transient errors which are typically recovered within a few seconds. However, with the connection pool blocking period behavior, you may not be able to reach your database for extensive periods even though the database is  available. This is especially problematic for apps that need to render fast. The **PoolBlockingPeriod** enables you to select the blocking period best suited for your app. See the [PoolBlockingPeriod Enumeration](../Topic/PoolBlockingPeriod%20Enumeration.md) for available settings."
  syntax:
    content: public System.Data.SqlClient.PoolBlockingPeriod PoolBlockingPeriod { get; set; }
    return:
      type: System.Data.SqlClient.PoolBlockingPeriod
      description: The available blocking period settings.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod*
  exceptions: []
  attributes: []
  version:
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  id: Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: SqlConnectionStringBuilder.Pooling
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested.
  remarks: This property corresponds to the "Pooling" key within the connection string.
  syntax:
    content: public bool Pooling { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Pooling"></xref> property, or `true` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  commentId: M:System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: SqlConnectionStringBuilder.Remove(String)
  fullName: SqlConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Removes the entry with the specified key from the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> instance.
  remarks: "Because the **Remove** method returns a value that indicates its success, it is not required to look for a key before trying to remove the key/value pair from the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance. Because the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> maintains a fixed-size collection of key/value pairs, calling the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A> method simply resets the value of the key/value pair back to its default value.  \n  \n Because the collection of keys supported by the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> is fixed, every item within the collection has a known default value. The following table lists the keys, and the value for each when the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> is first initialized, or after the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A> method has been called.  \n  \n|Key|Default value|  \n|---------|-------------------|  \n|Application Name|\".Net SqlClient Data Provider\"|  \n|Asynchronous Processing|False|  \n|AttachDBFilename|Empty string|  \n|Connection Timeout|15|  \n|Context Connection|False|  \n|Current Language|Empty string|  \n|Data Source|Empty string|  \n|Encrypt|False|  \n|Enlist|True|  \n|Failover Partner|Empty string|  \n|Initial Catalog|Empty string|  \n|Integrated Security|False|  \n|Load Balance Timeout|0|  \n|Max Pool Size|100|  \n|Min Pool Size|0|  \n|MultipleActiveResultSets|False|  \n|Network Library|Empty string|  \n|Packet Size|8000|  \n|Password|Empty string|  \n|Persist Security Info|False|  \n|Pooling|True|  \n|Replication|False|  \n|Transaction Binding|Implicit Unbind|  \n|User ID|Empty string|  \n|User Instance|False|  \n|Workstation ID|Empty string|"
  example:
  - "The following example converts an existing connection string from using Windows Authentication to using integrated security. The example works by removing the user name and password from the connection string, and then setting the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity%2A> property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.Remove#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Remove/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Remove/VB/source.vb#1)]  \n  \n The example displays the following text in the console window:  \n  \n```  \nOriginal: Data Source=(local);Initial Catalog=AdventureWorks;User ID=ab;Password= a1Pass@@11  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nDatabase = AdventureWorks  \n```"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: The key of the key/value pair to be removed from the connection string in this <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the key existed within the connection string and was removed; `false` if the key did not exist.'
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>keyword</code> is null (`Nothing` in Visual Basic)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  id: Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: SqlConnectionStringBuilder.Replication
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a Boolean value that indicates whether replication is supported using the connection.
  remarks: This property corresponds to the "Replication" key within the connection string.
  syntax:
    content: public bool Replication { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.Replication"></xref> property, or false if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Replication*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  commentId: M:System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  id: ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ShouldSerialize(String)
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize(String)
  fullName: SqlConnectionStringBuilder.ShouldSerialize(String)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Indicates whether the specified key exists in this <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> instance.
  remarks: This method behaves identically to the <xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A> method.
  syntax:
    content: public override bool ShouldSerialize (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: The key to locate in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref> contains an entry with the specified key; otherwise, `false`.'
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  id: TransactionBinding
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: SqlConnectionStringBuilder.TransactionBinding
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets or sets a string value that indicates how the connection maintains its association with an enlisted `System.Transactions` transaction.
  remarks: "The Transaction Binding keywords in a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> control how a <xref:System.Data.SqlClient.SqlConnection> binds to an enlisted <xref:System.Transactions.Transaction>.  \n  \n The following table shows the possible values for the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding%2A> property:  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|Implicit Unbind|The default. Causes the connection to detach from the transaction when it ends. After detaching, additional requests on the connection are performed in autocommit mode. The <xref:System.Transactions.Transaction.Current%2A> property is not checked when executing requests while the transaction is active. After the transaction has ended, additional requests are performed in autocommit mode.|  \n|Explicit Unbind|Causes the connection to remain attached to the transaction until the connection is closed or until <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> is called with a `null` (`Nothing` in Visual Basic) value. An <xref:System.InvalidOperationException> is thrown if <xref:System.Transactions.Transaction.Current%2A> is not the enlisted transaction or if the enlisted transaction is not active. This behavior enforces the strict scoping rules required for <xref:System.Transactions.TransactionScope> support.|"
  syntax:
    content: public string TransactionBinding { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding"></xref> property, or `String.Empty` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  id: TransparentNetworkIPResolution
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: When the value of this key is set to `true`, the application is required to retrieve all IP addresses for a particular DNS entry and attempt to connect with the first one in the list. If the connection is not established within 0.5 seconds, the application will try to connect to all others in parallel. When the first answers, the application will establish the connection with the respondent IP address.
  remarks: "If the `MultiSubnetFailover` key is set to `true`, `TransparentNetworkIPResolution` is ignored.  \n  \n If the `Failover Partner` key is set, `TransparentNetworkIPResolution` is ignored.  \n  \n The value of this key must be `true`, `false`, `yes`, or `no`.  \n  \n A value of `yes` is treated the same as a value of `true`.  \n  \n A value of `no` is treated the same as a value of `false`.  \n  \n This key defaults to `false` when:  \n  \n-   Connecting to Azure SQL Database where the data source ends with:  \n  \n    -   .database.chinacloudapi.cn  \n  \n    -   .database.usgovcloudapi.net  \n  \n    -   .database.cloudapi.de  \n  \n    -   .database.windows.net  \n  \n-   `Authentication` is 'Active Directory Password' or 'Active Directory Integrated'  \n  \n Otherwise it defaults to `true`."
  syntax:
    content: public bool TransparentNetworkIPResolution { get; set; }
    return:
      type: System.Boolean
      description: A boolean value.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution*
  exceptions: []
  attributes: []
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  id: TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: SqlConnectionStringBuilder.TrustServerCertificate
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust.
  remarks: "When `TrustServerCertificate` is set to `true`, the transport layer will use SSL to encrypt the channel and bypass walking the certificate chain to validate trust. If `TrustServerCertificate` is set to `true` and encryption is turned on, the encryption level specified on the server will be used even if `Encrypt` is set to `false`. The connection will fail otherwise.  \n  \n For more information, see \"Encryption Hierarchy\" and \"Using Encryption Without Validation\" in SQL Server Books Online."
  syntax:
    content: public bool TrustServerCertificate { get; set; }
    return:
      type: System.Boolean
      description: A `Boolean`. Recognized values are `true`, `false`, `yes`, and `no`.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  commentId: M:System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String, Object)
  nameWithType: SqlConnectionStringBuilder.TryGetValue(String, Object)
  fullName: SqlConnectionStringBuilder.TryGetValue(String, Object)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Retrieves a value corresponding to the supplied key from this <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref>.
  remarks: The <xref:System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue%2A> method lets developers safely retrieve a value from a <xref:System.Data.SqlClient.SqlConnectionStringBuilder> without needing to verify that the supplied key name is a valid key name. Because **TryGetValue** does not raise an exception when you call it, passing in a nonexistent key, you do not have to look for a key before retrieving its value.  Calling **TryGetValue** with a nonexistent key will place the value null (`Nothing` in Visual Basic) in the `value` parameter.
  example:
  - "The following example demonstrates the behavior of the **TryGetValue** method.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.TryGetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.TryGetValue/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.TryGetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.TryGetValue/VB/source.vb#1)]  \n  \n The sample displays the following results:  \n  \n```  \nData Source=(local)  \nTrusted_Connection=True  \nUnable to retrieve value for 'InvalidKey'  \nUnable to retrieve value for null key.  \n```"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: The key of the item to retrieve.
    - id: value
      type: System.Object
      description: The value corresponding to <code>keyword.</code>
    return:
      type: System.Boolean
      description: '`true` if <code>keyword</code> was found within the connection string; otherwise, `false`.'
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>keyword</code> contains a null value (`Nothing` in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  id: TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: SqlConnectionStringBuilder.TypeSystemVersion
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a string value that indicates the type system the application expects.
  remarks: The `TypeSystemVersion` property can be used to specify a down-level version of [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] for applications written against that version. This avoids possible problems with incompatible types in a newer version of [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] that may cause the application to break.
  syntax:
    content: public string TypeSystemVersion { get; set; }
    return:
      type: System.String
      description: "The following table shows the possible values for the <xref href=\"System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion\"></xref> property:  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] 2005  \n  \n </td><td> Uses the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] 2005 type system. No conversions are made for the current version of ADO.NET.  \n  \n </td></tr><tr><td> SQL Server 2008  \n  \n </td><td> Uses the SQL Server 2008 type system.  \n  \n </td></tr><tr><td> Latest  \n  \n </td><td> Use the latest version than this client-server pair can handle. This will automatically move forward as the client and server components are upgraded.  \n  \n </td></tr></tbody></table>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  id: UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: SqlConnectionStringBuilder.UserID
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the user ID to be used when connecting to SQL Server.
  remarks: This property corresponds to the "User ID", "user", and "uid" keys within the connection string.
  syntax:
    content: public string UserID { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.UserID"></xref> property, or `String.Empty` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.UserID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  id: UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: SqlConnectionStringBuilder.UserInstance
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a value that indicates whether to redirect the connection from the default SQL Server Express instance to a runtime-initiated instance running under the account of the caller.
  remarks: "This property corresponds to the \"User Instance\" key within the connection string.  \n  \n> [!NOTE]\n>  This feature is available only with the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] Express Edition. For more information on user instances, see [SQL Server Express User Instances](~/docs/framework/data/adonet/sql/sql-server-express-user-instances.md) and \"User Instances for Non-Administrators\" in [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] Books Online."
  syntax:
    content: public bool UserInstance { get; set; }
    return:
      type: System.Boolean
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance"></xref> property, or `False` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.Values
  id: Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: SqlConnectionStringBuilder.Values
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets an <xref href="System.Collections.ICollection"></xref> that contains the values in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref>.
  remarks: The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Keys%2A> property. Because each instance of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> always contains the same fixed set of keys, the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Values%2A> property always returns the values corresponding to the fixed set of keys, in the same order as the keys.
  example:
  - "The following example first creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, and then iterates through all the values within the object.  \n  \n [!code-csharp[DataWorks SqlConnectionStringBuilder.Values#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Values/CS/source.cs#1)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Values#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnectionStringBuilder.Values/VB/source.vb#1)]"
  syntax:
    content: public override System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection"></xref> that contains the values in the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder"></xref>.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Values*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  commentId: P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  id: WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: SqlConnectionStringBuilder.WorkstationID
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the name of the workstation connecting to SQL Server.
  remarks: This property corresponds to the "Workstation ID" and "wsid" keys within the connection string.
  syntax:
    content: public string WorkstationID { get; set; }
    return:
      type: System.String
      description: The value of the <xref href="System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID"></xref> property, or `String.Empty` if none has been supplied.
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: To set the value to null, use <xref href="System.DBNull.Value"></xref>.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  parent: System.Data.Common
  isExternal: false
  name: DbConnectionStringBuilder
  nameWithType: DbConnectionStringBuilder
  fullName: System.Data.Common.DbConnectionStringBuilder
- uid: System.Collections.Generic.KeyNotFoundException
  parent: System.Collections.Generic
  isExternal: false
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder()
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  fullName: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder(String)
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  fullName: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: SqlConnectionStringBuilder.ApplicationIntent
- uid: System.Data.SqlClient.ApplicationIntent
  parent: System.Data.SqlClient
  isExternal: false
  name: ApplicationIntent
  nameWithType: ApplicationIntent
  fullName: System.Data.SqlClient.ApplicationIntent
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: SqlConnectionStringBuilder.ApplicationName
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: SqlConnectionStringBuilder.AsynchronousProcessing
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: SqlConnectionStringBuilder.AttachDBFilename
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: SqlConnectionStringBuilder.Authentication
- uid: System.Data.SqlClient.SqlAuthenticationMethod
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlAuthenticationMethod
  nameWithType: SqlAuthenticationMethod
  fullName: System.Data.SqlClient.SqlAuthenticationMethod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: SqlConnectionStringBuilder.Clear()
  fullName: SqlConnectionStringBuilder.Clear()
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: SqlConnectionStringBuilder.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnectionColumnEncryptionSetting
  nameWithType: SqlConnectionColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: SqlConnectionStringBuilder.ConnectionReset
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: SqlConnectionStringBuilder.ConnectRetryCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: SqlConnectionStringBuilder.ConnectRetryInterval
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: SqlConnectionStringBuilder.ConnectTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: SqlConnectionStringBuilder.ContainsKey(String)
  fullName: SqlConnectionStringBuilder.ContainsKey(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: SqlConnectionStringBuilder.ContextConnection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: SqlConnectionStringBuilder.CurrentLanguage
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: SqlConnectionStringBuilder.DataSource
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: SqlConnectionStringBuilder.Encrypt
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: SqlConnectionStringBuilder.Enlist
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: SqlConnectionStringBuilder.FailoverPartner
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: GetProperties(Hashtable)
  nameWithType: SqlConnectionStringBuilder.GetProperties(Hashtable)
  fullName: SqlConnectionStringBuilder.GetProperties(Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: SqlConnectionStringBuilder.InitialCatalog
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: SqlConnectionStringBuilder.IntegratedSecurity
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: SqlConnectionStringBuilder.IsFixedSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: SqlConnectionStringBuilder.Item(String)
  fullName: SqlConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: SqlConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: SqlConnectionStringBuilder.LoadBalanceTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: SqlConnectionStringBuilder.MaxPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: SqlConnectionStringBuilder.MinPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: SqlConnectionStringBuilder.MultipleActiveResultSets
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: SqlConnectionStringBuilder.MultiSubnetFailover
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: SqlConnectionStringBuilder.NetworkLibrary
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: SqlConnectionStringBuilder.PacketSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: SqlConnectionStringBuilder.Password
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: SqlConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: SqlConnectionStringBuilder.PoolBlockingPeriod
- uid: System.Data.SqlClient.PoolBlockingPeriod
  parent: System.Data.SqlClient
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: PoolBlockingPeriod
  fullName: System.Data.SqlClient.PoolBlockingPeriod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: SqlConnectionStringBuilder.Pooling
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: SqlConnectionStringBuilder.Remove(String)
  fullName: SqlConnectionStringBuilder.Remove(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: SqlConnectionStringBuilder.Replication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ShouldSerialize(String)
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize(String)
  fullName: SqlConnectionStringBuilder.ShouldSerialize(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: SqlConnectionStringBuilder.TransactionBinding
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: SqlConnectionStringBuilder.TransparentNetworkIPResolution
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: SqlConnectionStringBuilder.TrustServerCertificate
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String, Object)
  nameWithType: SqlConnectionStringBuilder.TryGetValue(String, Object)
  fullName: SqlConnectionStringBuilder.TryGetValue(String, Object)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: SqlConnectionStringBuilder.TypeSystemVersion
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: SqlConnectionStringBuilder.UserID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: SqlConnectionStringBuilder.UserInstance
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: SqlConnectionStringBuilder.Values
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: SqlConnectionStringBuilder.WorkstationID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder
  fullName: SqlConnectionStringBuilder.SqlConnectionStringBuilder
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: SqlConnectionStringBuilder.ApplicationIntent
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: SqlConnectionStringBuilder.ApplicationName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: SqlConnectionStringBuilder.AsynchronousProcessing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: SqlConnectionStringBuilder.AttachDBFilename
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: SqlConnectionStringBuilder.Authentication
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: SqlConnectionStringBuilder.Clear
  fullName: SqlConnectionStringBuilder.Clear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: SqlConnectionStringBuilder.ColumnEncryptionSetting
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: SqlConnectionStringBuilder.ConnectionReset
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: SqlConnectionStringBuilder.ConnectRetryCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: SqlConnectionStringBuilder.ConnectRetryInterval
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: SqlConnectionStringBuilder.ConnectTimeout
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: SqlConnectionStringBuilder.ContainsKey
  fullName: SqlConnectionStringBuilder.ContainsKey
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: SqlConnectionStringBuilder.ContextConnection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: SqlConnectionStringBuilder.CurrentLanguage
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: SqlConnectionStringBuilder.DataSource
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: SqlConnectionStringBuilder.Encrypt
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: SqlConnectionStringBuilder.Enlist
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: SqlConnectionStringBuilder.FailoverPartner
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: GetProperties
  nameWithType: SqlConnectionStringBuilder.GetProperties
  fullName: SqlConnectionStringBuilder.GetProperties
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: SqlConnectionStringBuilder.InitialCatalog
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: SqlConnectionStringBuilder.IntegratedSecurity
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: SqlConnectionStringBuilder.IsFixedSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: SqlConnectionStringBuilder.Item
  fullName: SqlConnectionStringBuilder.Item
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: SqlConnectionStringBuilder.Keys
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: SqlConnectionStringBuilder.LoadBalanceTimeout
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: SqlConnectionStringBuilder.MaxPoolSize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: SqlConnectionStringBuilder.MinPoolSize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: SqlConnectionStringBuilder.MultipleActiveResultSets
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: SqlConnectionStringBuilder.MultiSubnetFailover
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: SqlConnectionStringBuilder.NetworkLibrary
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: SqlConnectionStringBuilder.PacketSize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: SqlConnectionStringBuilder.Password
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: SqlConnectionStringBuilder.PersistSecurityInfo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: SqlConnectionStringBuilder.PoolBlockingPeriod
  monikers:
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: SqlConnectionStringBuilder.Pooling
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: SqlConnectionStringBuilder.Remove
  fullName: SqlConnectionStringBuilder.Remove
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: SqlConnectionStringBuilder.Replication
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ShouldSerialize
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize
  fullName: SqlConnectionStringBuilder.ShouldSerialize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: SqlConnectionStringBuilder.TransactionBinding
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: SqlConnectionStringBuilder.TrustServerCertificate
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: SqlConnectionStringBuilder.TryGetValue
  fullName: SqlConnectionStringBuilder.TryGetValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: SqlConnectionStringBuilder.TypeSystemVersion
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: SqlConnectionStringBuilder.UserID
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: SqlConnectionStringBuilder.UserInstance
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: SqlConnectionStringBuilder.Values
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: SqlConnectionStringBuilder.WorkstationID
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Data.Common.DbConnectionStringBuilder.ToString
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ToString()
  nameWithType: DbConnectionStringBuilder.ToString()
  fullName: DbConnectionStringBuilder.ToString()
- uid: System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: Add(String, Object)
  nameWithType: DbConnectionStringBuilder.Add(String, Object)
  fullName: DbConnectionStringBuilder.Add(String, Object)
- uid: System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: AppendKeyValuePair(StringBuilder, String, String)
  nameWithType: DbConnectionStringBuilder.AppendKeyValuePair(StringBuilder, String, String)
  fullName: DbConnectionStringBuilder.AppendKeyValuePair(StringBuilder, String, String)
- uid: System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: AppendKeyValuePair(StringBuilder, String, String, Boolean)
  nameWithType: DbConnectionStringBuilder.AppendKeyValuePair(StringBuilder, String, String, Boolean)
  fullName: DbConnectionStringBuilder.AppendKeyValuePair(StringBuilder, String, String, Boolean)
- uid: System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: BrowsableConnectionString
  nameWithType: DbConnectionStringBuilder.BrowsableConnectionString
  fullName: DbConnectionStringBuilder.BrowsableConnectionString
- uid: System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ClearPropertyDescriptors()
  nameWithType: DbConnectionStringBuilder.ClearPropertyDescriptors()
  fullName: DbConnectionStringBuilder.ClearPropertyDescriptors()
- uid: System.Data.Common.DbConnectionStringBuilder.ConnectionString
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ConnectionString
  nameWithType: DbConnectionStringBuilder.ConnectionString
  fullName: DbConnectionStringBuilder.ConnectionString
- uid: System.Data.Common.DbConnectionStringBuilder.Count
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: Count
  nameWithType: DbConnectionStringBuilder.Count
  fullName: DbConnectionStringBuilder.Count
- uid: System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: EquivalentTo(DbConnectionStringBuilder)
  nameWithType: DbConnectionStringBuilder.EquivalentTo(DbConnectionStringBuilder)
  fullName: DbConnectionStringBuilder.EquivalentTo(DbConnectionStringBuilder)
- uid: System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IsReadOnly
  nameWithType: DbConnectionStringBuilder.IsReadOnly
  fullName: DbConnectionStringBuilder.IsReadOnly
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: DbConnectionStringBuilder.ICollection.CopyTo(Array, Int32)
  fullName: DbConnectionStringBuilder.ICollection.CopyTo(Array, Int32)
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: DbConnectionStringBuilder.ICollection.IsSynchronized
  fullName: DbConnectionStringBuilder.ICollection.IsSynchronized
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: DbConnectionStringBuilder.ICollection.SyncRoot
  fullName: DbConnectionStringBuilder.ICollection.SyncRoot
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IDictionary.Add(Object, Object)
  nameWithType: DbConnectionStringBuilder.IDictionary.Add(Object, Object)
  fullName: DbConnectionStringBuilder.IDictionary.Add(Object, Object)
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IDictionary.Contains(Object)
  nameWithType: DbConnectionStringBuilder.IDictionary.Contains(Object)
  fullName: DbConnectionStringBuilder.IDictionary.Contains(Object)
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IDictionary.GetEnumerator()
  nameWithType: DbConnectionStringBuilder.IDictionary.GetEnumerator()
  fullName: DbConnectionStringBuilder.IDictionary.GetEnumerator()
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#IsFixedSize
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IDictionary.IsFixedSize
  nameWithType: DbConnectionStringBuilder.IDictionary.IsFixedSize
  fullName: DbConnectionStringBuilder.IDictionary.IsFixedSize
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#IsReadOnly
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IDictionary.IsReadOnly
  nameWithType: DbConnectionStringBuilder.IDictionary.IsReadOnly
  fullName: DbConnectionStringBuilder.IDictionary.IsReadOnly
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IDictionary.Item(Object)
  nameWithType: DbConnectionStringBuilder.IDictionary.Item(Object)
  fullName: DbConnectionStringBuilder.IDictionary.Item(Object)
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IDictionary.Remove(Object)
  nameWithType: DbConnectionStringBuilder.IDictionary.Remove(Object)
  fullName: DbConnectionStringBuilder.IDictionary.Remove(Object)
- uid: System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: DbConnectionStringBuilder.IEnumerable.GetEnumerator()
  fullName: DbConnectionStringBuilder.IEnumerable.GetEnumerator()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetAttributes()
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetAttributes()
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetAttributes()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetClassName()
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetClassName()
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetClassName()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetComponentName()
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetComponentName()
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetComponentName()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetConverter()
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetConverter()
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetConverter()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetDefaultEvent()
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetDefaultEvent()
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetDefaultEvent()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetDefaultProperty()
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetDefaultProperty()
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetDefaultProperty()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetEditor(Type)
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetEditor(Type)
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetEditor(Type)
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetEvents()
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetEvents()
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetEvents()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetEvents(Attribute[])
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetEvents(Attribute[])
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetEvents(Attribute[])
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetProperties()
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetProperties()
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetProperties()
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetProperties(Attribute[])
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetProperties(Attribute[])
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetProperties(Attribute[])
- uid: System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  nameWithType: DbConnectionStringBuilder.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: DbConnectionStringBuilder.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
