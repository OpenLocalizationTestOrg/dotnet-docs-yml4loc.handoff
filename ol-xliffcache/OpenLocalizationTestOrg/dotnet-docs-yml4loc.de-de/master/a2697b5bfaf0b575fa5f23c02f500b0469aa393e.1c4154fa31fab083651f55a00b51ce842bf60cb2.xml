{"nodes":[{"content":"Contains arguments for the <xref href=\"System.Windows.DragDrop.QueryContinueDrag\"></xref> event.","nodes":[{"pos":[0,96],"content":"Contains arguments for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.DragDrop.QueryContinueDrag\"&gt;&lt;/xref&gt;</ph> event.","source":"Contains arguments for the <xref href=\"System.Windows.DragDrop.QueryContinueDrag\"></xref> event."}],"pos":[692,789],"yaml":true},{"content":"The <xref:System.Windows.DragDrop.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.","nodes":[{"pos":[0,194],"content":"The <xref:System.Windows.DragDrop.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.DragDrop.QueryContinueDrag&gt;</ph> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.","pos":[0,194],"source":"The <xref:System.Windows.DragDrop.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled."}]}],"pos":[800,995],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the current status of the associated drag-and-drop operation.","nodes":[{"pos":[0,74],"content":"Gets or sets the current status of the associated drag-and-drop operation.","nodes":[{"content":"Gets or sets the current status of the associated drag-and-drop operation.","pos":[0,74]}]}],"pos":[2714,2789],"yaml":true},{"content":"By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> property to `Cancel` if the ESC key is pressed, and sets <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> to `Drop` if the left, middle, or right mouse button is released.","nodes":[{"pos":[0,320],"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Windows.DragDrop.QueryContinueDrag&gt;</ph> event sets the <ph id=\"ph2\">&lt;xref:System.Windows.QueryContinueDragEventArgs.Action%2A&gt;</ph> property to <ph id=\"ph3\">`Cancel`</ph> if the ESC key is pressed, and sets <ph id=\"ph4\">&lt;xref:System.Windows.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id=\"ph5\">`Drop`</ph> if the left, middle, or right mouse button is released.","source":"By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> property to `Cancel` if the ESC key is pressed, and sets <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> to `Drop` if the left, middle, or right mouse button is released."}],"pos":[2800,3121],"yaml":true,"extradata":"MT"},{"content":"A member of the <xref href=\"System.Windows.DragAction\"></xref> enumeration indicating the current status of the associated drag-and-drop operation.","nodes":[{"pos":[0,147],"content":"A member of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.DragAction\"&gt;&lt;/xref&gt;</ph> enumeration indicating the current status of the associated drag-and-drop operation.","source":"A member of the <xref href=\"System.Windows.DragAction\"></xref> enumeration indicating the current status of the associated drag-and-drop operation."}],"pos":[3267,3415],"yaml":true},{"content":"Gets a Boolean value indicating whether the ESC key has been pressed.","nodes":[{"pos":[0,69],"content":"Gets a Boolean value indicating whether the ESC key has been pressed.","nodes":[{"content":"Gets a Boolean value indicating whether the ESC key has been pressed.","pos":[0,69]}]}],"pos":[4457,4527],"yaml":true},{"content":"By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> property to `Cancel` if the ESC key is pressed.","nodes":[{"pos":[0,186],"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Windows.DragDrop.QueryContinueDrag&gt;</ph> event sets the <ph id=\"ph2\">&lt;xref:System.Windows.QueryContinueDragEventArgs.Action%2A&gt;</ph> property to <ph id=\"ph3\">`Cancel`</ph> if the ESC key is pressed.","source":"By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> property to `Cancel` if the ESC key is pressed."}],"pos":[4538,4725],"yaml":true,"extradata":"MT"},{"content":"A Boolean value indicating whether the ESC key has been pressed. `true` if the ESC was pressed; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"A Boolean value indicating whether the ESC key has been pressed. `true` if the ESC was pressed; otherwise, `false`.","nodes":[{"content":"A Boolean value indicating whether the ESC key has been pressed.","pos":[0,64]},{"content":"<ph id=\"ph1\">`true`</ph> if the ESC was pressed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[65,115],"source":"`true` if the ESC was pressed; otherwise, `false`."}]}],"pos":[4841,4957],"yaml":true},{"content":"Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.","nodes":[{"pos":[0,129],"content":"Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.","nodes":[{"content":"Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.","pos":[0,129]}]}],"pos":[7409,7539],"yaml":true},{"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","nodes":[{"pos":[0,239],"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","nodes":[{"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","pos":[0,239],"nodes":[{"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key.","pos":[0,99]},{"content":"For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","pos":[100,239]}]}]}],"pos":[7550,7790],"yaml":true,"extradata":"MT"},{"content":"One or more members of the <xref href=\"System.Windows.DragDropKeyStates\"></xref> flag enumeration.","nodes":[{"pos":[0,98],"content":"One or more members of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.DragDropKeyStates\"&gt;&lt;/xref&gt;</ph> flag enumeration.","source":"One or more members of the <xref href=\"System.Windows.DragDropKeyStates\"></xref> flag enumeration."}],"pos":[7948,8047],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.QueryContinueDragEventArgs\n  commentId: T:System.Windows.QueryContinueDragEventArgs\n  id: QueryContinueDragEventArgs\n  children:\n  - System.Windows.QueryContinueDragEventArgs.Action\n  - System.Windows.QueryContinueDragEventArgs.EscapePressed\n  - System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.QueryContinueDragEventArgs.KeyStates\n  langs:\n  - csharp\n  name: QueryContinueDragEventArgs\n  nameWithType: QueryContinueDragEventArgs\n  fullName: System.Windows.QueryContinueDragEventArgs\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Contains arguments for the <xref href=\"System.Windows.DragDrop.QueryContinueDrag\"></xref> event.\n  remarks: The <xref:System.Windows.DragDrop.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.\n  syntax:\n    content: 'public sealed class QueryContinueDragEventArgs : System.Windows.RoutedEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.QueryContinueDragEventArgs.Action\n  commentId: P:System.Windows.QueryContinueDragEventArgs.Action\n  id: Action\n  parent: System.Windows.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n  fullName: QueryContinueDragEventArgs.Action\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets the current status of the associated drag-and-drop operation.\n  remarks: By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> property to `Cancel` if the ESC key is pressed, and sets <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> to `Drop` if the left, middle, or right mouse button is released.\n  syntax:\n    content: public System.Windows.DragAction Action { get; set; }\n    return:\n      type: System.Windows.DragAction\n      description: A member of the <xref href=\"System.Windows.DragAction\"></xref> enumeration indicating the current status of the associated drag-and-drop operation.\n  overload: System.Windows.QueryContinueDragEventArgs.Action*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.QueryContinueDragEventArgs.EscapePressed\n  commentId: P:System.Windows.QueryContinueDragEventArgs.EscapePressed\n  id: EscapePressed\n  parent: System.Windows.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n  fullName: QueryContinueDragEventArgs.EscapePressed\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a Boolean value indicating whether the ESC key has been pressed.\n  remarks: By default, the <xref:System.Windows.DragDrop.QueryContinueDrag> event sets the <xref:System.Windows.QueryContinueDragEventArgs.Action%2A> property to `Cancel` if the ESC key is pressed.\n  syntax:\n    content: public bool EscapePressed { get; }\n    return:\n      type: System.Boolean\n      description: A Boolean value indicating whether the ESC key has been pressed. `true` if the ESC was pressed; otherwise, `false`.\n  overload: System.Windows.QueryContinueDragEventArgs.EscapePressed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  commentId: M:System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: QueryContinueDragEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: QueryContinueDragEventArgs.InvokeEventHandler(Delegate, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: ''\n    - id: genericTarget\n      type: System.Object\n      description: ''\n  overload: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n- uid: System.Windows.QueryContinueDragEventArgs.KeyStates\n  commentId: P:System.Windows.QueryContinueDragEventArgs.KeyStates\n  id: KeyStates\n  parent: System.Windows.QueryContinueDragEventArgs\n  langs:\n  - csharp\n  name: KeyStates\n  nameWithType: QueryContinueDragEventArgs.KeyStates\n  fullName: QueryContinueDragEventArgs.KeyStates\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.\n  remarks: The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.\n  syntax:\n    content: public System.Windows.DragDropKeyStates KeyStates { get; }\n    return:\n      type: System.Windows.DragDropKeyStates\n      description: One or more members of the <xref href=\"System.Windows.DragDropKeyStates\"></xref> flag enumeration.\n  overload: System.Windows.QueryContinueDragEventArgs.KeyStates*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.RoutedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventArgs\n  nameWithType: RoutedEventArgs\n  fullName: System.Windows.RoutedEventArgs\n- uid: System.Windows.QueryContinueDragEventArgs.Action\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n  fullName: QueryContinueDragEventArgs.Action\n- uid: System.Windows.DragAction\n  parent: System.Windows\n  isExternal: false\n  name: DragAction\n  nameWithType: DragAction\n  fullName: System.Windows.DragAction\n- uid: System.Windows.QueryContinueDragEventArgs.EscapePressed\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n  fullName: QueryContinueDragEventArgs.EscapePressed\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: QueryContinueDragEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: QueryContinueDragEventArgs.InvokeEventHandler(Delegate, Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.QueryContinueDragEventArgs.KeyStates\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: KeyStates\n  nameWithType: QueryContinueDragEventArgs.KeyStates\n  fullName: QueryContinueDragEventArgs.KeyStates\n- uid: System.Windows.DragDropKeyStates\n  parent: System.Windows\n  isExternal: false\n  name: DragDropKeyStates\n  nameWithType: DragDropKeyStates\n  fullName: System.Windows.DragDropKeyStates\n- uid: System.Windows.QueryContinueDragEventArgs.Action*\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: Action\n  nameWithType: QueryContinueDragEventArgs.Action\n  fullName: QueryContinueDragEventArgs.Action\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n- uid: System.Windows.QueryContinueDragEventArgs.EscapePressed*\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: EscapePressed\n  nameWithType: QueryContinueDragEventArgs.EscapePressed\n  fullName: QueryContinueDragEventArgs.EscapePressed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n- uid: System.Windows.QueryContinueDragEventArgs.InvokeEventHandler*\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: QueryContinueDragEventArgs.InvokeEventHandler\n  fullName: QueryContinueDragEventArgs.InvokeEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n- uid: System.Windows.QueryContinueDragEventArgs.KeyStates*\n  parent: System.Windows.QueryContinueDragEventArgs\n  isExternal: false\n  name: KeyStates\n  nameWithType: QueryContinueDragEventArgs.KeyStates\n  fullName: QueryContinueDragEventArgs.KeyStates\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/QueryContinueDragEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.Windows.RoutedEventArgs.Handled\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: RoutedEventArgs.Handled\n  fullName: RoutedEventArgs.Handled\n- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OnSetSource(Object)\n  nameWithType: RoutedEventArgs.OnSetSource(Object)\n  fullName: RoutedEventArgs.OnSetSource(Object)\n- uid: System.Windows.RoutedEventArgs.OriginalSource\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OriginalSource\n  nameWithType: RoutedEventArgs.OriginalSource\n  fullName: RoutedEventArgs.OriginalSource\n- uid: System.Windows.RoutedEventArgs.RoutedEvent\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEventArgs.RoutedEvent\n  fullName: RoutedEventArgs.RoutedEvent\n- uid: System.Windows.RoutedEventArgs.Source\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Source\n  nameWithType: RoutedEventArgs.Source\n  fullName: RoutedEventArgs.Source\n"}