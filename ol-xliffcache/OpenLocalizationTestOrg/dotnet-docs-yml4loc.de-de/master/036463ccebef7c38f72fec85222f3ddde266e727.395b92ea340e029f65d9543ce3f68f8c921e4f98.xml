{"nodes":[{"content":"A collection of <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> objects.","nodes":[{"pos":[0,95],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> objects.","source":"A collection of <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> objects."}],"pos":[5502,5598],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]}],"pos":[5609,5700],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class."}],"pos":[38228,38350],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class."}],"pos":[39817,39939],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.OperationInfoBase\"></xref> that uses this collection to define parameter information for the service operation that it represents.","nodes":[{"pos":[0,173],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationInfoBase\"&gt;&lt;/xref&gt;</ph> that uses this collection to define parameter information for the service operation that it represents.","source":"The <xref href=\"System.Workflow.Activities.OperationInfoBase\"></xref> that uses this collection to define parameter information for the service operation that it represents."}],"pos":[40164,40338],"yaml":true},{"content":"Adds an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to the end of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,178],"content":"Adds an <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> to the end of the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Adds an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to the end of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[41649,41828],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to be added.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> to be added.","source":"The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to be added."}],"pos":[42037,42125],"yaml":true},{"content":"Removes all elements from the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,111],"content":"Removes all elements from the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all elements from the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[43227,43339],"yaml":true},{"content":"Determines whether an element is in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,121],"content":"Determines whether an element is in the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether an element is in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[44744,44866],"yaml":true},{"content":"The item to search for.","nodes":[{"pos":[0,23],"content":"The item to search for.","nodes":[{"content":"The item to search for.","pos":[0,23]}]}],"pos":[45080,45104],"yaml":true},{"content":"`true` if <code>item</code> is found in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>, otherwise `false`.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>, otherwise <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>item</code> is found in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>, otherwise `false`."}],"pos":[45162,45309],"yaml":true},{"content":"Gets the number of elements contained in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,126],"content":"Gets the number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of elements contained in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[46412,46539],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> representing the number of elements contained in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,171],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the number of elements contained in the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Int32\"></xref> representing the number of elements contained in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[46644,46816],"yaml":true},{"content":"Returns an enumerator that can iterate through the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,132],"content":"Returns an enumerator that can iterate through the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerator that can iterate through the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[47968,48101],"yaml":true},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can iterate through the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,172],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> object that can iterate through the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can iterate through the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[48391,48564],"yaml":true},{"content":"Returns the zero-based index of the first occurrence of an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,225],"content":"Returns the zero-based index of the first occurrence of an <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> object in the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the zero-based index of the first occurrence of an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[49907,50133],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to locate in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,173],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to locate in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[50345,50519],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> representing the zero-based index of the first occurrence of an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,267],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based index of the first occurrence of an <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> object in the <ph id=\"ph3\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Int32\"></xref> representing the zero-based index of the first occurrence of an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[50575,50843],"yaml":true},{"content":"Inserts an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> into the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> at the specified index.","nodes":[{"pos":[0,195],"content":"Inserts an <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> into the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> at the specified index."}],"pos":[52234,52430],"yaml":true},{"content":"The zero-based index at which <code>item</code> should be inserted.","nodes":[{"pos":[0,67],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>item</code> should be inserted."}],"pos":[52617,52685],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to insert.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> to insert.","source":"The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to insert."}],"pos":[52781,52867],"yaml":true},{"content":"Gets or sets the element at the specified index.  In C#, this property is the indexer for the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class.","nodes":[{"pos":[0,181],"content":"Gets or sets the element at the specified index.  In C#, this property is the indexer for the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]},{"content":"In C#, this property is the indexer for the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph> class.","pos":[50,181],"source":"  In C#, this property is the indexer for the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class."}]}],"pos":[54025,54207],"yaml":true},{"content":"The array index of the requested element.","nodes":[{"pos":[0,41],"content":"The array index of the requested element.","nodes":[{"content":"The array index of the requested element.","pos":[0,41]}]}],"pos":[54393,54435],"yaml":true},{"content":"An <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object representing the element at the specified index.","nodes":[{"pos":[0,129],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> object representing the element at the specified index.","source":"An <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object representing the element at the specified index."}],"pos":[54528,54658],"yaml":true},{"content":"Gets or sets the element with the specified key.","nodes":[{"pos":[0,48],"content":"Gets or sets the element with the specified key.","nodes":[{"content":"Gets or sets the element with the specified key.","pos":[0,48]}]}],"pos":[55820,55869],"yaml":true},{"content":"The key value of the requested element.","nodes":[{"pos":[0,39],"content":"The key value of the requested element.","nodes":[{"content":"The key value of the requested element.","pos":[0,39]}]}],"pos":[56050,56090],"yaml":true},{"content":"An <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object representing the element with the specified key.","nodes":[{"pos":[0,129],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> object representing the element with the specified key.","source":"An <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object representing the element with the specified key."}],"pos":[56183,56313],"yaml":true},{"content":"Removes the first occurrence of a specific <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> from the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,204],"content":"Removes the first occurrence of a specific <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> from the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of a specific <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> from the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[57641,57846],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to remove.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to remove."}],"pos":[58058,58144],"yaml":true},{"content":"`true` if the item was successfully removed, otherwise `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the item was successfully removed, otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the item was successfully removed, otherwise `false`."}],"pos":[58202,58268],"yaml":true},{"content":"Removes the element at the specified index of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.","nodes":[{"pos":[0,131],"content":"Removes the element at the specified index of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the element at the specified index of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>."}],"pos":[59448,59580],"yaml":true},{"content":"The zero-based index of the <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to remove.","nodes":[{"pos":[0,109],"content":"The zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.OperationParameterInfo\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The zero-based index of the <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to remove."}],"pos":[59713,59823],"yaml":true},{"content":"Adds an item to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,82],"content":"Adds an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Adds an item to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[61529,61612],"yaml":true},{"content":"The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,87],"content":"The object to add to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[61850,61938],"yaml":true},{"content":"Removes all items from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,89],"content":"Removes all items from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all items from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[63522,63612],"yaml":true},{"content":"Determines whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> contains a specific value.","nodes":[{"pos":[0,111],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> contains a specific value.","source":"Determines whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> contains a specific value."}],"pos":[65528,65640],"yaml":true},{"content":"The object to locate in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,90],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[65883,65974],"yaml":true},{"content":"`true` if <code>item</code> is found in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>item</code> is found in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`."}],"pos":[66032,66161],"yaml":true},{"content":"Copies the elements of the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> to an Array, starting at a particular Array index.","nodes":[{"pos":[0,139],"content":"Copies the elements of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> to an Array, starting at a particular Array index.","source":"Copies the elements of the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> to an Array, starting at a particular Array index."}],"pos":[68047,68187],"yaml":true},{"content":"The one-dimensional Array that is the destination of the elements copied from <xref href=\"System.Collections.Generic.ICollection`1\"></xref>. The Array must have zero-based indexing.","nodes":[{"pos":[0,181],"content":"The one-dimensional Array that is the destination of the elements copied from <xref href=\"System.Collections.Generic.ICollection`1\"></xref>. The Array must have zero-based indexing.","nodes":[{"content":"The one-dimensional Array that is the destination of the elements copied from <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,140],"source":"The one-dimensional Array that is the destination of the elements copied from <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."},{"content":"The Array must have zero-based indexing.","pos":[141,181]}]}],"pos":[68450,68632],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[68697,68765],"yaml":true},{"content":"Gets the number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,107],"content":"Gets the number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[70348,70456],"yaml":true},{"content":"The number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,102],"content":"The number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[70644,70747],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only.","nodes":[{"pos":[0,111],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only."}],"pos":[72304,72416],"yaml":true},{"content":"`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`."}],"pos":[72612,72724],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,121],"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[74485,74607],"yaml":true},{"content":"The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,92],"content":"The object to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[74848,74941],"yaml":true},{"content":"`true` if <code>item</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`. This method also returns `false` if <code>item</code> is not found in the original <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,290],"content":"`true` if <code>item</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`. This method also returns `false` if <code>item</code> is not found in the original <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> was successfully removed from the <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","pos":[0,144],"source":"`true` if <code>item</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`."},{"content":"This method also returns <ph id=\"ph1\">`false`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not found in the original <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[145,290],"source":" This method also returns `false` if <code>item</code> is not found in the original <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}]}],"pos":[74999,75292],"yaml":true},{"content":"Returns an enumerator that iterates through the collection.","nodes":[{"pos":[0,59],"content":"Returns an enumerator that iterates through the collection.","nodes":[{"content":"Returns an enumerator that iterates through the collection.","pos":[0,59]}]}],"pos":[76927,76987],"yaml":true},{"content":"A <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the collection.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the collection.","source":"A <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the collection."}],"pos":[77306,77422],"yaml":true},{"content":"Determines the index of a specific item in the <xref href=\"System.Collections.Generic.IList`1\"></xref>.","nodes":[{"pos":[0,103],"content":"Determines the index of a specific item in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph>.","source":"Determines the index of a specific item in the <xref href=\"System.Collections.Generic.IList`1\"></xref>."}],"pos":[79211,79315],"yaml":true},{"content":"The object to locate in the <xref href=\"System.Collections.Generic.IList`1\"></xref>.","nodes":[{"pos":[0,84],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Collections.Generic.IList`1\"></xref>."}],"pos":[79550,79635],"yaml":true},{"content":"The index of <code>item</code> if found in the list; otherwise, -1.","nodes":[{"pos":[0,67],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","source":"The index of <code>item</code> if found in the list; otherwise, -1."}],"pos":[79691,79759],"yaml":true},{"content":"Inserts an item to the <xref href=\"System.Collections.Generic.IList`1\"></xref> at the specified index.","nodes":[{"pos":[0,102],"content":"Inserts an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts an item to the <xref href=\"System.Collections.Generic.IList`1\"></xref> at the specified index."}],"pos":[81590,81693],"yaml":true},{"content":"The zero-based index at which <code>item</code> should be inserted.","nodes":[{"pos":[0,67],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>item</code> should be inserted."}],"pos":[81903,81971],"yaml":true},{"content":"The object to insert into the <xref href=\"System.Collections.Generic.IList`1\"></xref>.","nodes":[{"pos":[0,86],"content":"The object to insert into the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to insert into the <xref href=\"System.Collections.Generic.IList`1\"></xref>."}],"pos":[82067,82154],"yaml":true},{"content":"Gets or sets the element at the specified index.","nodes":[{"pos":[0,48],"content":"Gets or sets the element at the specified index.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]}],"pos":[83752,83801],"yaml":true},{"content":"The zero-based index of the element to get or set.","nodes":[{"pos":[0,50],"content":"The zero-based index of the element to get or set.","nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]}],"pos":[84064,84115],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[84208,84244],"yaml":true},{"content":"Removes the <xref href=\"System.Collections.Generic.IList`1\"></xref> item at the specified index.","nodes":[{"pos":[0,96],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph> item at the specified index.","source":"Removes the <xref href=\"System.Collections.Generic.IList`1\"></xref> item at the specified index."}],"pos":[85807,85904],"yaml":true},{"content":"The zero-based index of the item to remove.","nodes":[{"pos":[0,43],"content":"The zero-based index of the item to remove.","nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]}],"pos":[86060,86104],"yaml":true},{"content":"Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an Array, starting at a particular Array index.","nodes":[{"pos":[0,129],"content":"Copies the elements of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> to an Array, starting at a particular Array index.","source":"Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an Array, starting at a particular Array index."}],"pos":[87561,87691],"yaml":true},{"content":"The one-dimensional Array that is the destination of the elements copied from <xref href=\"System.Collections.ICollection\"></xref>. The Array must have zero-based indexing.","nodes":[{"pos":[0,171],"content":"The one-dimensional Array that is the destination of the elements copied from <xref href=\"System.Collections.ICollection\"></xref>. The Array must have zero-based indexing.","nodes":[{"content":"The one-dimensional Array that is the destination of the elements copied from <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,130],"source":"The one-dimensional Array that is the destination of the elements copied from <xref href=\"System.Collections.ICollection\"></xref>."},{"content":"The Array must have zero-based indexing.","pos":[131,171]}]}],"pos":[87840,88012],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[88072,88140],"yaml":true},{"content":"Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe).","nodes":[{"pos":[0,128],"content":"Gets a value indicating whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).","source":"Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe)."}],"pos":[89469,89598],"yaml":true},{"content":"`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe); otherwise, `false`.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">`true`</ph> if access to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe); otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe); otherwise, `false`."}],"pos":[89739,89868],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,113],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[91169,91283],"yaml":true},{"content":"An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,108],"content":"An object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[91419,91528],"yaml":true},{"content":"Returns an enumerator that iterates through a collection.","nodes":[{"pos":[0,57],"content":"Returns an enumerator that iterates through a collection.","nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]}],"pos":[92857,92915],"yaml":true},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> object that can be used to iterate through the collection.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection."}],"pos":[93092,93206],"yaml":true},{"content":"Adds an item to the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,66],"content":"Adds an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Adds an item to the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[94507,94574],"yaml":true},{"content":"The object to add to the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,71],"content":"The object to add to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to add to the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[94704,94776],"yaml":true},{"content":"The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.","nodes":[{"pos":[0,123],"content":"The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.","nodes":[{"content":"The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.","pos":[0,123]}]}],"pos":[94832,94956],"yaml":true},{"content":"Removes all items from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,73],"content":"Removes all items from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all items from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[96190,96264],"yaml":true},{"content":"Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value.","nodes":[{"pos":[0,95],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> contains a specific value.","source":"Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value."}],"pos":[97644,97740],"yaml":true},{"content":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,74],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[97876,97951],"yaml":true},{"content":"`true` if the Object is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if the Object is found in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the Object is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`."}],"pos":[98009,98115],"yaml":true},{"content":"Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"Determines the index of a specific item in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[99429,99523],"yaml":true},{"content":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,74],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[99657,99732],"yaml":true},{"content":"The index of <code>value</code> if found in the list; otherwise, -1.","nodes":[{"pos":[0,68],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","source":"The index of <code>value</code> if found in the list; otherwise, -1."}],"pos":[99788,99857],"yaml":true},{"content":"Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index.","nodes":[{"pos":[0,92],"content":"Inserts an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index."}],"pos":[101224,101317],"yaml":true},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[101461,101530],"yaml":true},{"content":"The object to insert into the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,76],"content":"The object to insert into the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to insert into the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[101591,101668],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,99],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[102937,103037],"yaml":true},{"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`."}],"pos":[103169,103269],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only.","nodes":[{"pos":[0,95],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only."}],"pos":[104537,104633],"yaml":true},{"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`."}],"pos":[104764,104860],"yaml":true},{"content":"Gets or sets the element at the specified index.","nodes":[{"pos":[0,48],"content":"Gets or sets the element at the specified index.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]}],"pos":[106154,106203],"yaml":true},{"content":"The zero-based index of the element to get or set.","nodes":[{"pos":[0,50],"content":"The zero-based index of the element to get or set.","nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]}],"pos":[106364,106415],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[106472,106508],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,105],"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[107812,107918],"yaml":true},{"content":"The object to remove from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,76],"content":"The object to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to remove from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[108052,108129],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.OperationParameterInfoCollection\n  commentId: T:System.Workflow.Activities.OperationParameterInfoCollection\n  id: OperationParameterInfoCollection\n  children:\n  - System.Workflow.Activities.OperationParameterInfoCollection.#ctor\n  - System.Workflow.Activities.OperationParameterInfoCollection.#ctor(System.Workflow.Activities.OperationInfoBase)\n  - System.Workflow.Activities.OperationParameterInfoCollection.Add(System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.Clear\n  - System.Workflow.Activities.OperationParameterInfoCollection.Contains(System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.Count\n  - System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator\n  - System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)\n  - System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)\n  - System.Workflow.Activities.OperationParameterInfoCollection.Remove(System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt(System.Int32)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add(System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains(System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove(System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item(System.Int32)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt(System.Int32)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add(System.Object)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains(System.Object)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item(System.Int32)\n  - System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: OperationParameterInfoCollection\n  nameWithType: OperationParameterInfoCollection\n  fullName: System.Workflow.Activities.OperationParameterInfoCollection\n  type: Class\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: A collection of <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> objects.\n  remarks: >-\n    > [!NOTE]\n\n    >  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public sealed class OperationParameterInfoCollection : System.Collections.Generic.List<System.Workflow.Activities.OperationParameterInfo>, System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>, System.Collections.Generic.IEnumerable<System.Workflow.Activities.OperationParameterInfo>, System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>\n  inheritance:\n  - System.Object\n  - System.Collections.Generic.List`1\n  implements:\n  - System.Collections.Generic.ICollection{System.Workflow.Activities.OperationParameterInfo}\n  - System.Collections.Generic.IEnumerable{System.Workflow.Activities.OperationParameterInfo}\n  - System.Collections.Generic.IList{System.Workflow.Activities.OperationParameterInfo}\n  inheritedMembers:\n  - System.Collections.Generic.List`1.Add(`0)\n  - System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.List`1.AsReadOnly\n  - System.Collections.Generic.List`1.BinarySearch(`0)\n  - System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.List`1.Capacity\n  - System.Collections.Generic.List`1.Contains(`0)\n  - System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})\n  - System.Collections.Generic.List`1.CopyTo(`0[])\n  - System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Exists(System.Predicate{`0})\n  - System.Collections.Generic.List`1.Find(System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindAll(System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindLast(System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})\n  - System.Collections.Generic.List`1.ForEach(System.Action{`0})\n  - System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.IndexOf(`0)\n  - System.Collections.Generic.List`1.IndexOf(`0,System.Int32)\n  - System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Insert(System.Int32,`0)\n  - System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.List`1.LastIndexOf(`0)\n  - System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)\n  - System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Remove(`0)\n  - System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})\n  - System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Reverse\n  - System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Sort\n  - System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.List`1.Sort(System.Comparison{`0})\n  - System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Collections.Generic.List`1.ToArray\n  - System.Collections.Generic.List`1.TrimExcess\n  - System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.#ctor\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: OperationParameterInfoCollection()\n  nameWithType: OperationParameterInfoCollection.OperationParameterInfoCollection()\n  fullName: OperationParameterInfoCollection.OperationParameterInfoCollection()\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class.\n  syntax:\n    content: public OperationParameterInfoCollection ();\n    parameters: []\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.#ctor(System.Workflow.Activities.OperationInfoBase)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.#ctor(System.Workflow.Activities.OperationInfoBase)\n  id: '#ctor(System.Workflow.Activities.OperationInfoBase)'\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: OperationParameterInfoCollection(OperationInfoBase)\n  nameWithType: OperationParameterInfoCollection.OperationParameterInfoCollection(OperationInfoBase)\n  fullName: OperationParameterInfoCollection.OperationParameterInfoCollection(OperationInfoBase)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class.\n  syntax:\n    content: public OperationParameterInfoCollection (System.Workflow.Activities.OperationInfoBase owner);\n    parameters:\n    - id: owner\n      type: System.Workflow.Activities.OperationInfoBase\n      description: The <xref href=\"System.Workflow.Activities.OperationInfoBase\"></xref> that uses this collection to define parameter information for the service operation that it represents.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Add(System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.Add(System.Workflow.Activities.OperationParameterInfo)\n  id: Add(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: Add(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.Add(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.Add(OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Adds an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to the end of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  syntax:\n    content: public void Add (System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to be added.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Clear\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.Clear\n  id: Clear\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: OperationParameterInfoCollection.Clear()\n  fullName: OperationParameterInfoCollection.Clear()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Removes all elements from the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Contains(System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.Contains(System.Workflow.Activities.OperationParameterInfo)\n  id: Contains(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: Contains(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.Contains(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.Contains(OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Determines whether an element is in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  syntax:\n    content: public bool Contains (System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The item to search for.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>item</code> is found in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>, otherwise `false`.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Count\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.Count\n  id: Count\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: OperationParameterInfoCollection.Count\n  fullName: OperationParameterInfoCollection.Count\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets the number of elements contained in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> representing the number of elements contained in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: OperationParameterInfoCollection.GetEnumerator()\n  fullName: OperationParameterInfoCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Returns an enumerator that can iterate through the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Workflow.Activities.OperationParameterInfo> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Workflow.Activities.OperationParameterInfo}\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> object that can iterate through the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  id: IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IndexOf(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.IndexOf(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.IndexOf(OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Returns the zero-based index of the first occurrence of an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  syntax:\n    content: public int IndexOf (System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to locate in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> representing the zero-based index of the first occurrence of an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object in the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  id: Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: Insert(Int32, OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.Insert(Int32, OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.Insert(Int32, OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Inserts an <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> into the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> at the specified index.\n  syntax:\n    content: public void Insert (int index, System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>item</code> should be inserted.\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to insert.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: OperationParameterInfoCollection.Item(Int32)\n  fullName: OperationParameterInfoCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the element at the specified index.  In C#, this property is the indexer for the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref> class.\n  syntax:\n    content: public System.Workflow.Activities.OperationParameterInfo this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The array index of the requested element.\n    return:\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: An <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object representing the element at the specified index.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: OperationParameterInfoCollection.Item(String)\n  fullName: OperationParameterInfoCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the element with the specified key.\n  syntax:\n    content: public System.Workflow.Activities.OperationParameterInfo this[string key] { get; }\n    parameters:\n    - id: key\n      type: System.String\n      description: The key value of the requested element.\n    return:\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: An <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> object representing the element with the specified key.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Remove(System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.Remove(System.Workflow.Activities.OperationParameterInfo)\n  id: Remove(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: Remove(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.Remove(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.Remove(OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Removes the first occurrence of a specific <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> from the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  syntax:\n    content: public bool Remove (System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the item was successfully removed, otherwise `false`.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt(System.Int32)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: OperationParameterInfoCollection.RemoveAt(Int32)\n  fullName: OperationParameterInfoCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Removes the element at the specified index of the <xref href=\"System.Workflow.Activities.OperationParameterInfoCollection\"></xref>.\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.Workflow.Activities.OperationParameterInfo\"></xref> to remove.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add(System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection<System#Workflow#Activities#OperationParameterInfo>#Add(System.Workflow.Activities.OperationParameterInfo)\n  id: System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add(System.Workflow.Activities.OperationParameterInfo)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection<OperationParameterInfo>.Add(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Add(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Add(OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Adds an item to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  syntax:\n    content: void ICollection<OperationParameterInfo>.Add (System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection<System#Workflow#Activities#OperationParameterInfo>#Clear\n  id: System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection<OperationParameterInfo>.Clear()\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Clear()\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Clear()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Removes all items from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  syntax:\n    content: void ICollection<OperationParameterInfo>.Clear ();\n    parameters: []\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains(System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection<System#Workflow#Activities#OperationParameterInfo>#Contains(System.Workflow.Activities.OperationParameterInfo)\n  id: System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains(System.Workflow.Activities.OperationParameterInfo)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection<OperationParameterInfo>.Contains(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Contains(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Contains(OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Determines whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> contains a specific value.\n  syntax:\n    content: bool ICollection<OperationParameterInfo>.Contains (System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The object to locate in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>item</code> is found in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection<System#Workflow#Activities#OperationParameterInfo>#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection<OperationParameterInfo>.CopyTo(OperationParameterInfo[], Int32)\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.CopyTo(OperationParameterInfo[], Int32)\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.CopyTo(OperationParameterInfo[], Int32)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Copies the elements of the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> to an Array, starting at a particular Array index.\n  syntax:\n    content: void ICollection<OperationParameterInfo>.CopyTo (System.Workflow.Activities.OperationParameterInfo[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Workflow.Activities.OperationParameterInfo[]\n      description: The one-dimensional Array that is the destination of the elements copied from <xref href=\"System.Collections.Generic.ICollection`1\"></xref>. The Array must have zero-based indexing.\n    - id: arrayIndex\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection<System#Workflow#Activities#OperationParameterInfo>#Count\n  id: System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection<OperationParameterInfo>.Count\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Count\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Count\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets the number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  syntax:\n    content: int System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection<System#Workflow#Activities#OperationParameterInfo>#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection<OperationParameterInfo>.IsReadOnly\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.IsReadOnly\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only.\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove(System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection<System#Workflow#Activities#OperationParameterInfo>#Remove(System.Workflow.Activities.OperationParameterInfo)\n  id: System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove(System.Workflow.Activities.OperationParameterInfo)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection<OperationParameterInfo>.Remove(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Remove(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Remove(OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  syntax:\n    content: bool ICollection<OperationParameterInfo>.Remove (System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>item</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`. This method also returns `false` if <code>item</code> is not found in the original <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable<System#Workflow#Activities#OperationParameterInfo>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IEnumerable<OperationParameterInfo>.GetEnumerator()\n  nameWithType: OperationParameterInfoCollection.IEnumerable<OperationParameterInfo>.GetEnumerator()\n  fullName: OperationParameterInfoCollection.IEnumerable<OperationParameterInfo>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Returns an enumerator that iterates through the collection.\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Workflow.Activities.OperationParameterInfo> IEnumerable<OperationParameterInfo>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Workflow.Activities.OperationParameterInfo}\n      description: A <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the collection.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList<System#Workflow#Activities#OperationParameterInfo>#IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  id: System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList<OperationParameterInfo>.IndexOf(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.IList<OperationParameterInfo>.IndexOf(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.IList<OperationParameterInfo>.IndexOf(OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Determines the index of a specific item in the <xref href=\"System.Collections.Generic.IList`1\"></xref>.\n  syntax:\n    content: int IList<OperationParameterInfo>.IndexOf (System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The object to locate in the <xref href=\"System.Collections.Generic.IList`1\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>item</code> if found in the list; otherwise, -1.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList<System#Workflow#Activities#OperationParameterInfo>#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  id: System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList<OperationParameterInfo>.Insert(Int32, OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.IList<OperationParameterInfo>.Insert(Int32, OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.IList<OperationParameterInfo>.Insert(Int32, OperationParameterInfo)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Inserts an item to the <xref href=\"System.Collections.Generic.IList`1\"></xref> at the specified index.\n  syntax:\n    content: void IList<OperationParameterInfo>.Insert (int index, System.Workflow.Activities.OperationParameterInfo item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>item</code> should be inserted.\n    - id: item\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The object to insert into the <xref href=\"System.Collections.Generic.IList`1\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item(System.Int32)\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList<System#Workflow#Activities#OperationParameterInfo>#Item(System.Int32)\n  id: System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item(System.Int32)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList<OperationParameterInfo>.Item(Int32)\n  nameWithType: OperationParameterInfoCollection.IList<OperationParameterInfo>.Item(Int32)\n  fullName: OperationParameterInfoCollection.IList<OperationParameterInfo>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the element at the specified index.\n  syntax:\n    content: System.Workflow.Activities.OperationParameterInfo System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Workflow.Activities.OperationParameterInfo\n      description: The element at the specified index.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt(System.Int32)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList<System#Workflow#Activities#OperationParameterInfo>#RemoveAt(System.Int32)\n  id: System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList<OperationParameterInfo>.RemoveAt(Int32)\n  nameWithType: OperationParameterInfoCollection.IList<OperationParameterInfo>.RemoveAt(Int32)\n  fullName: OperationParameterInfoCollection.IList<OperationParameterInfo>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Removes the <xref href=\"System.Collections.Generic.IList`1\"></xref> item at the specified index.\n  syntax:\n    content: void IList<OperationParameterInfo>.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: OperationParameterInfoCollection.ICollection.CopyTo(Array, Int32)\n  fullName: OperationParameterInfoCollection.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an Array, starting at a particular Array index.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional Array that is the destination of the elements copied from <xref href=\"System.Collections.ICollection\"></xref>. The Array must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: OperationParameterInfoCollection.ICollection.IsSynchronized\n  fullName: OperationParameterInfoCollection.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe).\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe); otherwise, `false`.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: OperationParameterInfoCollection.ICollection.SyncRoot\n  fullName: OperationParameterInfoCollection.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: OperationParameterInfoCollection.IEnumerable.GetEnumerator()\n  fullName: OperationParameterInfoCollection.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Returns an enumerator that iterates through a collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: OperationParameterInfoCollection.IList.Add(Object)\n  fullName: OperationParameterInfoCollection.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Adds an item to the <xref href=\"System.Collections.IList\"></xref>.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to add to the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.Clear()\n  nameWithType: OperationParameterInfoCollection.IList.Clear()\n  fullName: OperationParameterInfoCollection.IList.Clear()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Removes all items from the <xref href=\"System.Collections.IList\"></xref>.\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: OperationParameterInfoCollection.IList.Contains(Object)\n  fullName: OperationParameterInfoCollection.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the Object is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: OperationParameterInfoCollection.IList.IndexOf(Object)\n  fullName: OperationParameterInfoCollection.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: OperationParameterInfoCollection.IList.Insert(Int32, Object)\n  fullName: OperationParameterInfoCollection.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: System.Object\n      description: The object to insert into the <xref href=\"System.Collections.IList\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: OperationParameterInfoCollection.IList.IsFixedSize\n  fullName: OperationParameterInfoCollection.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.IsReadOnly\n  nameWithType: OperationParameterInfoCollection.IList.IsReadOnly\n  fullName: OperationParameterInfoCollection.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.'\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: OperationParameterInfoCollection.IList.Item(Int32)\n  fullName: OperationParameterInfoCollection.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Gets or sets the element at the specified index.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: OperationParameterInfoCollection.IList.Remove(Object)\n  fullName: OperationParameterInfoCollection.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.Workflow.Activities\n  summary: Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to remove from the <xref href=\"System.Collections.IList\"></xref>.\n  overload: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Collections.Generic.List`1\n  name: List<T>\n  nameWithType: List<T>\n  fullName: System.Collections.Generic.List<T>\n- uid: System.Workflow.Activities.OperationParameterInfo\n  name: OperationParameterInfo\n  nameWithType: OperationParameterInfo\n  fullName: System.Workflow.Activities.OperationParameterInfo\n- uid: System.Collections.Generic.List{System.Workflow.Activities.OperationParameterInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List<OperationParameterInfo>\n  nameWithType: List<OperationParameterInfo>\n  fullName: System.Collections.Generic.List<System.Workflow.Activities.OperationParameterInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: System.Collections.Generic.List\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Activities.OperationParameterInfo\n    name: OperationParameterInfo\n    nameWithType: OperationParameterInfo\n    fullName: System.Workflow.Activities.OperationParameterInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.#ctor\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: OperationParameterInfoCollection()\n  nameWithType: OperationParameterInfoCollection.OperationParameterInfoCollection()\n  fullName: OperationParameterInfoCollection.OperationParameterInfoCollection()\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.#ctor(System.Workflow.Activities.OperationInfoBase)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: OperationParameterInfoCollection(OperationInfoBase)\n  nameWithType: OperationParameterInfoCollection.OperationParameterInfoCollection(OperationInfoBase)\n  fullName: OperationParameterInfoCollection.OperationParameterInfoCollection(OperationInfoBase)\n- uid: System.Workflow.Activities.OperationInfoBase\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: OperationInfoBase\n  nameWithType: OperationInfoBase\n  fullName: System.Workflow.Activities.OperationInfoBase\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Add(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Add(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.Add(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.Add(OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Clear\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: OperationParameterInfoCollection.Clear()\n  fullName: OperationParameterInfoCollection.Clear()\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Contains(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Contains(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.Contains(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.Contains(OperationParameterInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Count\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Count\n  nameWithType: OperationParameterInfoCollection.Count\n  fullName: OperationParameterInfoCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: OperationParameterInfoCollection.GetEnumerator()\n  fullName: OperationParameterInfoCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{System.Workflow.Activities.OperationParameterInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<OperationParameterInfo>\n  nameWithType: IEnumerator<OperationParameterInfo>\n  fullName: System.Collections.Generic.IEnumerator<System.Workflow.Activities.OperationParameterInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Activities.OperationParameterInfo\n    name: OperationParameterInfo\n    nameWithType: OperationParameterInfo\n    fullName: System.Workflow.Activities.OperationParameterInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IndexOf(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.IndexOf(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.IndexOf(OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Insert(Int32, OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.Insert(Int32, OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.Insert(Int32, OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Item(System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: OperationParameterInfoCollection.Item(Int32)\n  fullName: OperationParameterInfoCollection.Item(Int32)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Item(System.String)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: OperationParameterInfoCollection.Item(String)\n  fullName: OperationParameterInfoCollection.Item(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Remove(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Remove(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.Remove(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.Remove(OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt(System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: OperationParameterInfoCollection.RemoveAt(Int32)\n  fullName: OperationParameterInfoCollection.RemoveAt(Int32)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection<OperationParameterInfo>.Add(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Add(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Add(OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection<OperationParameterInfo>.Clear()\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Clear()\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Clear()\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection<OperationParameterInfo>.Contains(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Contains(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Contains(OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo(System.Workflow.Activities.OperationParameterInfo[],System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection<OperationParameterInfo>.CopyTo(OperationParameterInfo[], Int32)\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.CopyTo(OperationParameterInfo[], Int32)\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.CopyTo(OperationParameterInfo[], Int32)\n- uid: System.Workflow.Activities.OperationParameterInfo[]\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: OperationParameterInfo[]\n  nameWithType: OperationParameterInfo[]\n  fullName: System.Workflow.Activities.OperationParameterInfo[]\n  spec.csharp:\n  - uid: System.Workflow.Activities.OperationParameterInfo\n    name: OperationParameterInfo\n    nameWithType: OperationParameterInfo\n    fullName: System.Workflow.Activities.OperationParameterInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection<OperationParameterInfo>.Count\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Count\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Count\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection<OperationParameterInfo>.IsReadOnly\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.IsReadOnly\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.IsReadOnly\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection<OperationParameterInfo>.Remove(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Remove(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.ICollection<OperationParameterInfo>.Remove(OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IEnumerable<OperationParameterInfo>.GetEnumerator()\n  nameWithType: OperationParameterInfoCollection.IEnumerable<OperationParameterInfo>.GetEnumerator()\n  fullName: OperationParameterInfoCollection.IEnumerable<OperationParameterInfo>.GetEnumerator()\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf(System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList<OperationParameterInfo>.IndexOf(OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.IList<OperationParameterInfo>.IndexOf(OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.IList<OperationParameterInfo>.IndexOf(OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert(System.Int32,System.Workflow.Activities.OperationParameterInfo)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList<OperationParameterInfo>.Insert(Int32, OperationParameterInfo)\n  nameWithType: OperationParameterInfoCollection.IList<OperationParameterInfo>.Insert(Int32, OperationParameterInfo)\n  fullName: OperationParameterInfoCollection.IList<OperationParameterInfo>.Insert(Int32, OperationParameterInfo)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item(System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList<OperationParameterInfo>.Item(Int32)\n  nameWithType: OperationParameterInfoCollection.IList<OperationParameterInfo>.Item(Int32)\n  fullName: OperationParameterInfoCollection.IList<OperationParameterInfo>.Item(Int32)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt(System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList<OperationParameterInfo>.RemoveAt(Int32)\n  nameWithType: OperationParameterInfoCollection.IList<OperationParameterInfo>.RemoveAt(Int32)\n  fullName: OperationParameterInfoCollection.IList<OperationParameterInfo>.RemoveAt(Int32)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: OperationParameterInfoCollection.ICollection.CopyTo(Array, Int32)\n  fullName: OperationParameterInfoCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: OperationParameterInfoCollection.ICollection.IsSynchronized\n  fullName: OperationParameterInfoCollection.ICollection.IsSynchronized\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: OperationParameterInfoCollection.ICollection.SyncRoot\n  fullName: OperationParameterInfoCollection.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: OperationParameterInfoCollection.IEnumerable.GetEnumerator()\n  fullName: OperationParameterInfoCollection.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: OperationParameterInfoCollection.IList.Add(Object)\n  fullName: OperationParameterInfoCollection.IList.Add(Object)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.Clear()\n  nameWithType: OperationParameterInfoCollection.IList.Clear()\n  fullName: OperationParameterInfoCollection.IList.Clear()\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: OperationParameterInfoCollection.IList.Contains(Object)\n  fullName: OperationParameterInfoCollection.IList.Contains(Object)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: OperationParameterInfoCollection.IList.IndexOf(Object)\n  fullName: OperationParameterInfoCollection.IList.IndexOf(Object)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: OperationParameterInfoCollection.IList.Insert(Int32, Object)\n  fullName: OperationParameterInfoCollection.IList.Insert(Int32, Object)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: OperationParameterInfoCollection.IList.IsFixedSize\n  fullName: OperationParameterInfoCollection.IList.IsFixedSize\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: OperationParameterInfoCollection.IList.IsReadOnly\n  fullName: OperationParameterInfoCollection.IList.IsReadOnly\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: OperationParameterInfoCollection.IList.Item(Int32)\n  fullName: OperationParameterInfoCollection.IList.Item(Int32)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: OperationParameterInfoCollection.IList.Remove(Object)\n  fullName: OperationParameterInfoCollection.IList.Remove(Object)\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.#ctor*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: OperationParameterInfoCollection\n  nameWithType: OperationParameterInfoCollection.OperationParameterInfoCollection\n  fullName: OperationParameterInfoCollection.OperationParameterInfoCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Add*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Add\n  nameWithType: OperationParameterInfoCollection.Add\n  fullName: OperationParameterInfoCollection.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Clear*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Clear\n  nameWithType: OperationParameterInfoCollection.Clear\n  fullName: OperationParameterInfoCollection.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Contains*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Contains\n  nameWithType: OperationParameterInfoCollection.Contains\n  fullName: OperationParameterInfoCollection.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Count*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Count\n  nameWithType: OperationParameterInfoCollection.Count\n  fullName: OperationParameterInfoCollection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.GetEnumerator*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: OperationParameterInfoCollection.GetEnumerator\n  fullName: OperationParameterInfoCollection.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.IndexOf*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: OperationParameterInfoCollection.IndexOf\n  fullName: OperationParameterInfoCollection.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Insert*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Insert\n  nameWithType: OperationParameterInfoCollection.Insert\n  fullName: OperationParameterInfoCollection.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Item*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Item\n  nameWithType: OperationParameterInfoCollection.Item\n  fullName: OperationParameterInfoCollection.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.Remove*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: Remove\n  nameWithType: OperationParameterInfoCollection.Remove\n  fullName: OperationParameterInfoCollection.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.RemoveAt*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: OperationParameterInfoCollection.RemoveAt\n  fullName: OperationParameterInfoCollection.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Add*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Add\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Add\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Clear*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Clear\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Clear\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Contains*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Contains\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Contains\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#CopyTo*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.CopyTo\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.CopyTo\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Count*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Count\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Count\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#IsReadOnly*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.IsReadOnly\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.IsReadOnly\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#ICollection{System#Workflow#Activities#OperationParameterInfo}#Remove*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Remove\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Remove\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IEnumerable{System#Workflow#Activities#OperationParameterInfo}#GetEnumerator*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<System.Workflow.Activities.OperationParameterInfo>.GetEnumerator\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.IEnumerable<System.Workflow.Activities.OperationParameterInfo>.GetEnumerator\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.IEnumerable<System.Workflow.Activities.OperationParameterInfo>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#IndexOf*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.IndexOf\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.IndexOf\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Insert*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.Insert\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.Insert\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#Item*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.Item\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.Item\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#Generic#IList{System#Workflow#Activities#OperationParameterInfo}#RemoveAt*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.RemoveAt\n  nameWithType: OperationParameterInfoCollection.System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.RemoveAt\n  fullName: OperationParameterInfoCollection.System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: OperationParameterInfoCollection.System.Collections.ICollection.CopyTo\n  fullName: OperationParameterInfoCollection.System.Collections.ICollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: OperationParameterInfoCollection.System.Collections.ICollection.IsSynchronized\n  fullName: OperationParameterInfoCollection.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: OperationParameterInfoCollection.System.Collections.ICollection.SyncRoot\n  fullName: OperationParameterInfoCollection.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: OperationParameterInfoCollection.System.Collections.IEnumerable.GetEnumerator\n  fullName: OperationParameterInfoCollection.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Add*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.Add\n  fullName: OperationParameterInfoCollection.System.Collections.IList.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Clear*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.Clear\n  fullName: OperationParameterInfoCollection.System.Collections.IList.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Contains*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.Contains\n  fullName: OperationParameterInfoCollection.System.Collections.IList.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IndexOf*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.IndexOf\n  fullName: OperationParameterInfoCollection.System.Collections.IList.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Insert*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.Insert\n  fullName: OperationParameterInfoCollection.System.Collections.IList.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.IsFixedSize\n  fullName: OperationParameterInfoCollection.System.Collections.IList.IsFixedSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#IsReadOnly*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.IsReadOnly\n  fullName: OperationParameterInfoCollection.System.Collections.IList.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Item*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.Item\n  fullName: OperationParameterInfoCollection.System.Collections.IList.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Workflow.Activities.OperationParameterInfoCollection.System#Collections#IList#Remove*\n  parent: System.Workflow.Activities.OperationParameterInfoCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: OperationParameterInfoCollection.System.Collections.IList.Remove\n  fullName: OperationParameterInfoCollection.System.Collections.IList.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/OperationParameterInfoCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.List`1.Add(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: List<T>.Add(T)\n  fullName: List<T>.Add(T)\n- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: AddRange(IEnumerable<T>)\n  nameWithType: List<T>.AddRange(IEnumerable<T>)\n  fullName: List<T>.AddRange(IEnumerable<T>)\n- uid: System.Collections.Generic.List`1.AsReadOnly\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: AsReadOnly()\n  nameWithType: List<T>.AsReadOnly()\n  fullName: List<T>.AsReadOnly()\n- uid: System.Collections.Generic.List`1.BinarySearch(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: BinarySearch(T)\n  nameWithType: List<T>.BinarySearch(T)\n  fullName: List<T>.BinarySearch(T)\n- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: BinarySearch(T, IComparer<T>)\n  nameWithType: List<T>.BinarySearch(T, IComparer<T>)\n  fullName: List<T>.BinarySearch(T, IComparer<T>)\n- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: BinarySearch(Int32, Int32, T, IComparer<T>)\n  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)\n  fullName: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)\n- uid: System.Collections.Generic.List`1.Capacity\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Capacity\n  nameWithType: List<T>.Capacity\n  fullName: List<T>.Capacity\n- uid: System.Collections.Generic.List`1.Contains(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: List<T>.Contains(T)\n  fullName: List<T>.Contains(T)\n- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: ConvertAll<TOutput>(Converter<T,TOutput>)\n  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T,TOutput>)\n  fullName: List<T>.ConvertAll<TOutput>(Converter<T,TOutput>)\n- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: CopyTo(T[], Int32)\n  nameWithType: List<T>.CopyTo(T[], Int32)\n  fullName: List<T>.CopyTo(T[], Int32)\n- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: CopyTo(Int32, T[], Int32, Int32)\n  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)\n  fullName: List<T>.CopyTo(Int32, T[], Int32, Int32)\n- uid: System.Collections.Generic.List`1.CopyTo(`0[])\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: CopyTo(T[])\n  nameWithType: List<T>.CopyTo(T[])\n  fullName: List<T>.CopyTo(T[])\n- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Exists(Predicate<T>)\n  nameWithType: List<T>.Exists(Predicate<T>)\n  fullName: List<T>.Exists(Predicate<T>)\n- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Find(Predicate<T>)\n  nameWithType: List<T>.Find(Predicate<T>)\n  fullName: List<T>.Find(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindAll(Predicate<T>)\n  nameWithType: List<T>.FindAll(Predicate<T>)\n  fullName: List<T>.FindAll(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindIndex(Predicate<T>)\n  nameWithType: List<T>.FindIndex(Predicate<T>)\n  fullName: List<T>.FindIndex(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindIndex(Int32, Predicate<T>)\n  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)\n  fullName: List<T>.FindIndex(Int32, Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindIndex(Int32, Int32, Predicate<T>)\n  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)\n  fullName: List<T>.FindIndex(Int32, Int32, Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindLast(Predicate<T>)\n  nameWithType: List<T>.FindLast(Predicate<T>)\n  fullName: List<T>.FindLast(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindLastIndex(Predicate<T>)\n  nameWithType: List<T>.FindLastIndex(Predicate<T>)\n  fullName: List<T>.FindLastIndex(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindLastIndex(Int32, Predicate<T>)\n  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)\n  fullName: List<T>.FindLastIndex(Int32, Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindLastIndex(Int32, Int32, Predicate<T>)\n  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)\n  fullName: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)\n- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: ForEach(Action<T>)\n  nameWithType: List<T>.ForEach(Action<T>)\n  fullName: List<T>.ForEach(Action<T>)\n- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: GetRange(Int32, Int32)\n  nameWithType: List<T>.GetRange(Int32, Int32)\n  fullName: List<T>.GetRange(Int32, Int32)\n- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: IndexOf(T, Int32)\n  nameWithType: List<T>.IndexOf(T, Int32)\n  fullName: List<T>.IndexOf(T, Int32)\n- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: IndexOf(T, Int32, Int32)\n  nameWithType: List<T>.IndexOf(T, Int32, Int32)\n  fullName: List<T>.IndexOf(T, Int32, Int32)\n- uid: System.Collections.Generic.List`1.IndexOf(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: List<T>.IndexOf(T)\n  fullName: List<T>.IndexOf(T)\n- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Insert(Int32, T)\n  nameWithType: List<T>.Insert(Int32, T)\n  fullName: List<T>.Insert(Int32, T)\n- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: InsertRange(Int32, IEnumerable<T>)\n  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)\n  fullName: List<T>.InsertRange(Int32, IEnumerable<T>)\n- uid: System.Collections.Generic.List`1.LastIndexOf(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: LastIndexOf(T)\n  nameWithType: List<T>.LastIndexOf(T)\n  fullName: List<T>.LastIndexOf(T)\n- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: LastIndexOf(T, Int32)\n  nameWithType: List<T>.LastIndexOf(T, Int32)\n  fullName: List<T>.LastIndexOf(T, Int32)\n- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: LastIndexOf(T, Int32, Int32)\n  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)\n  fullName: List<T>.LastIndexOf(T, Int32, Int32)\n- uid: System.Collections.Generic.List`1.Remove(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: List<T>.Remove(T)\n  fullName: List<T>.Remove(T)\n- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: RemoveAll(Predicate<T>)\n  nameWithType: List<T>.RemoveAll(Predicate<T>)\n  fullName: List<T>.RemoveAll(Predicate<T>)\n- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: RemoveRange(Int32, Int32)\n  nameWithType: List<T>.RemoveRange(Int32, Int32)\n  fullName: List<T>.RemoveRange(Int32, Int32)\n- uid: System.Collections.Generic.List`1.Reverse\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Reverse()\n  nameWithType: List<T>.Reverse()\n  fullName: List<T>.Reverse()\n- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Reverse(Int32, Int32)\n  nameWithType: List<T>.Reverse(Int32, Int32)\n  fullName: List<T>.Reverse(Int32, Int32)\n- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Sort(Comparison<T>)\n  nameWithType: List<T>.Sort(Comparison<T>)\n  fullName: List<T>.Sort(Comparison<T>)\n- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Sort(Int32, Int32, IComparer<T>)\n  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)\n  fullName: List<T>.Sort(Int32, Int32, IComparer<T>)\n- uid: System.Collections.Generic.List`1.Sort\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Sort()\n  nameWithType: List<T>.Sort()\n  fullName: List<T>.Sort()\n- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Sort(IComparer<T>)\n  nameWithType: List<T>.Sort(IComparer<T>)\n  fullName: List<T>.Sort(IComparer<T>)\n- uid: System.Collections.Generic.List`1.ToArray\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: ToArray()\n  nameWithType: List<T>.ToArray()\n  fullName: List<T>.ToArray()\n- uid: System.Collections.Generic.List`1.TrimExcess\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: TrimExcess()\n  nameWithType: List<T>.TrimExcess()\n  fullName: List<T>.TrimExcess()\n- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: TrueForAll(Predicate<T>)\n  nameWithType: List<T>.TrueForAll(Predicate<T>)\n  fullName: List<T>.TrueForAll(Predicate<T>)\n- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: ICollection<T>.IsReadOnly\n  nameWithType: List<T>.ICollection<T>.IsReadOnly\n  fullName: List<T>.ICollection<T>.IsReadOnly\n- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()\n  fullName: List<T>.IEnumerable<T>.GetEnumerator()\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{System.Workflow.Activities.OperationParameterInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<OperationParameterInfo>\n  nameWithType: ICollection<OperationParameterInfo>\n  fullName: System.Collections.Generic.ICollection<System.Workflow.Activities.OperationParameterInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Activities.OperationParameterInfo\n    name: OperationParameterInfo\n    nameWithType: OperationParameterInfo\n    fullName: System.Workflow.Activities.OperationParameterInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Workflow.Activities.OperationParameterInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<OperationParameterInfo>\n  nameWithType: IEnumerable<OperationParameterInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Workflow.Activities.OperationParameterInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Activities.OperationParameterInfo\n    name: OperationParameterInfo\n    nameWithType: OperationParameterInfo\n    fullName: System.Workflow.Activities.OperationParameterInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.Generic.IList{System.Workflow.Activities.OperationParameterInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<OperationParameterInfo>\n  nameWithType: IList<OperationParameterInfo>\n  fullName: System.Collections.Generic.IList<System.Workflow.Activities.OperationParameterInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.Activities.OperationParameterInfo\n    name: OperationParameterInfo\n    nameWithType: OperationParameterInfo\n    fullName: System.Workflow.Activities.OperationParameterInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}