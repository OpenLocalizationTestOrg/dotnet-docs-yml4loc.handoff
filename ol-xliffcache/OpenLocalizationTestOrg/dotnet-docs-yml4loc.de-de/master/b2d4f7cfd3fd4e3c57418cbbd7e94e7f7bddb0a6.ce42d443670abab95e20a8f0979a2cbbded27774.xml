{"nodes":[{"content":"Represents the type that contains cache insert options.","nodes":[{"pos":[0,55],"content":"Represents the type that contains cache insert options.","nodes":[{"content":"Represents the type that contains cache insert options.","pos":[0,55]}]}],"pos":[724,780],"yaml":true},{"content":"Initializes a new instance of this class.","nodes":[{"pos":[0,41],"content":"Initializes a new instance of this class.","nodes":[{"content":"Initializes a new instance of this class.","pos":[0,41]}]}],"pos":[1850,1892],"yaml":true},{"content":"Gets or sets a value that indicates whether a cache entry should be evicted after a specified duration.","nodes":[{"pos":[0,103],"content":"Gets or sets a value that indicates whether a cache entry should be evicted after a specified duration.","nodes":[{"content":"Gets or sets a value that indicates whether a cache entry should be evicted after a specified duration.","pos":[0,103]}]}],"pos":[2737,2841],"yaml":true},{"content":"The eviction duration.","nodes":[{"pos":[0,22],"content":"The eviction duration.","nodes":[{"content":"The eviction duration.","pos":[0,22]}]}],"pos":[2972,2995],"yaml":true},{"content":"Gets or sets the cache dependency.","nodes":[{"pos":[0,34],"content":"Gets or sets the cache dependency.","nodes":[{"content":"Gets or sets the cache dependency.","pos":[0,34]}]}],"pos":[3745,3780],"yaml":true},{"content":"The cache dependency.","nodes":[{"pos":[0,21],"content":"The cache dependency.","nodes":[{"content":"The cache dependency.","pos":[0,21]}]}],"pos":[3950,3972],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Web.Caching.CacheItemRemovedCallback\"></xref> callback.","nodes":[{"pos":[0,91],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Web.Caching.CacheItemRemovedCallback\"&gt;&lt;/xref&gt;</ph> callback.","source":"Gets or sets the <xref href=\"System.Web.Caching.CacheItemRemovedCallback\"></xref> callback."}],"pos":[4746,4838],"yaml":true},{"content":"The <xref href=\"System.Web.Caching.CacheItemRemovedCallback\"></xref> callback.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Caching.CacheItemRemovedCallback\"&gt;&lt;/xref&gt;</ph> callback.","source":"The <xref href=\"System.Web.Caching.CacheItemRemovedCallback\"></xref> callback."}],"pos":[5031,5110],"yaml":true},{"content":"Gets or sets the priority.","nodes":[{"pos":[0,26],"content":"Gets or sets the priority.","nodes":[{"content":"Gets or sets the priority.","pos":[0,26]}]}],"pos":[5835,5862],"yaml":true},{"content":"The priority.","nodes":[{"pos":[0,13],"content":"The priority.","nodes":[{"content":"The priority.","pos":[0,13]}]}],"pos":[6032,6046],"yaml":true},{"content":"Gets or sets the interval between the time the inserted object is last accessed and the time at which that object expires. If this value is the equivalent of 20 minutes, the object will expire and be removed from the cache 20 minutes after it was last accessed.","nodes":[{"pos":[0,261],"content":"Gets or sets the interval between the time the inserted object is last accessed and the time at which that object expires. If this value is the equivalent of 20 minutes, the object will expire and be removed from the cache 20 minutes after it was last accessed.","nodes":[{"content":"Gets or sets the interval between the time the inserted object is last accessed and the time at which that object expires. If this value is the equivalent of 20 minutes, the object will expire and be removed from the cache 20 minutes after it was last accessed.","pos":[0,261],"nodes":[{"content":"Gets or sets the interval between the time the inserted object is last accessed and the time at which that object expires.","pos":[0,122]},{"content":"If this value is the equivalent of 20 minutes, the object will expire and be removed from the cache 20 minutes after it was last accessed.","pos":[123,261]}]}]}],"pos":[6816,7078],"yaml":true},{"content":"The interval between the time the inserted object is last accessed and the time at which that object expires.","nodes":[{"pos":[0,109],"content":"The interval between the time the inserted object is last accessed and the time at which that object expires.","nodes":[{"content":"The interval between the time the inserted object is last accessed and the time at which that object expires.","pos":[0,109]}]}],"pos":[7208,7318],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Caching.CacheInsertOptions\n  commentId: T:System.Web.Caching.CacheInsertOptions\n  id: CacheInsertOptions\n  children:\n  - System.Web.Caching.CacheInsertOptions.#ctor\n  - System.Web.Caching.CacheInsertOptions.AbsoluteExpiration\n  - System.Web.Caching.CacheInsertOptions.Dependencies\n  - System.Web.Caching.CacheInsertOptions.OnRemovedCallback\n  - System.Web.Caching.CacheInsertOptions.Priority\n  - System.Web.Caching.CacheInsertOptions.SlidingExpiration\n  langs:\n  - csharp\n  name: CacheInsertOptions\n  nameWithType: CacheInsertOptions\n  fullName: System.Web.Caching.CacheInsertOptions\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Represents the type that contains cache insert options.\n  syntax:\n    content: public class CacheInsertOptions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.CacheInsertOptions.#ctor\n  commentId: M:System.Web.Caching.CacheInsertOptions.#ctor\n  id: '#ctor'\n  parent: System.Web.Caching.CacheInsertOptions\n  langs:\n  - csharp\n  name: CacheInsertOptions()\n  nameWithType: CacheInsertOptions.CacheInsertOptions()\n  fullName: CacheInsertOptions.CacheInsertOptions()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Initializes a new instance of this class.\n  syntax:\n    content: public CacheInsertOptions ();\n    parameters: []\n  overload: System.Web.Caching.CacheInsertOptions.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.CacheInsertOptions.AbsoluteExpiration\n  commentId: P:System.Web.Caching.CacheInsertOptions.AbsoluteExpiration\n  id: AbsoluteExpiration\n  parent: System.Web.Caching.CacheInsertOptions\n  langs:\n  - csharp\n  name: AbsoluteExpiration\n  nameWithType: CacheInsertOptions.AbsoluteExpiration\n  fullName: CacheInsertOptions.AbsoluteExpiration\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Gets or sets a value that indicates whether a cache entry should be evicted after a specified duration.\n  syntax:\n    content: public DateTime AbsoluteExpiration { get; set; }\n    return:\n      type: System.DateTime\n      description: The eviction duration.\n  overload: System.Web.Caching.CacheInsertOptions.AbsoluteExpiration*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.CacheInsertOptions.Dependencies\n  commentId: P:System.Web.Caching.CacheInsertOptions.Dependencies\n  id: Dependencies\n  parent: System.Web.Caching.CacheInsertOptions\n  langs:\n  - csharp\n  name: Dependencies\n  nameWithType: CacheInsertOptions.Dependencies\n  fullName: CacheInsertOptions.Dependencies\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Gets or sets the cache dependency.\n  syntax:\n    content: public System.Web.Caching.CacheDependency Dependencies { get; set; }\n    return:\n      type: System.Web.Caching.CacheDependency\n      description: The cache dependency.\n  overload: System.Web.Caching.CacheInsertOptions.Dependencies*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.CacheInsertOptions.OnRemovedCallback\n  commentId: P:System.Web.Caching.CacheInsertOptions.OnRemovedCallback\n  id: OnRemovedCallback\n  parent: System.Web.Caching.CacheInsertOptions\n  langs:\n  - csharp\n  name: OnRemovedCallback\n  nameWithType: CacheInsertOptions.OnRemovedCallback\n  fullName: CacheInsertOptions.OnRemovedCallback\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Gets or sets the <xref href=\"System.Web.Caching.CacheItemRemovedCallback\"></xref> callback.\n  syntax:\n    content: public System.Web.Caching.CacheItemRemovedCallback OnRemovedCallback { get; set; }\n    return:\n      type: System.Web.Caching.CacheItemRemovedCallback\n      description: The <xref href=\"System.Web.Caching.CacheItemRemovedCallback\"></xref> callback.\n  overload: System.Web.Caching.CacheInsertOptions.OnRemovedCallback*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.CacheInsertOptions.Priority\n  commentId: P:System.Web.Caching.CacheInsertOptions.Priority\n  id: Priority\n  parent: System.Web.Caching.CacheInsertOptions\n  langs:\n  - csharp\n  name: Priority\n  nameWithType: CacheInsertOptions.Priority\n  fullName: CacheInsertOptions.Priority\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Gets or sets the priority.\n  syntax:\n    content: public System.Web.Caching.CacheItemPriority Priority { get; set; }\n    return:\n      type: System.Web.Caching.CacheItemPriority\n      description: The priority.\n  overload: System.Web.Caching.CacheInsertOptions.Priority*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Caching.CacheInsertOptions.SlidingExpiration\n  commentId: P:System.Web.Caching.CacheInsertOptions.SlidingExpiration\n  id: SlidingExpiration\n  parent: System.Web.Caching.CacheInsertOptions\n  langs:\n  - csharp\n  name: SlidingExpiration\n  nameWithType: CacheInsertOptions.SlidingExpiration\n  fullName: CacheInsertOptions.SlidingExpiration\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Caching\n  summary: Gets or sets the interval between the time the inserted object is last accessed and the time at which that object expires. If this value is the equivalent of 20 minutes, the object will expire and be removed from the cache 20 minutes after it was last accessed.\n  syntax:\n    content: public TimeSpan SlidingExpiration { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The interval between the time the inserted object is last accessed and the time at which that object expires.\n  overload: System.Web.Caching.CacheInsertOptions.SlidingExpiration*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Caching.CacheInsertOptions.#ctor\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: CacheInsertOptions()\n  nameWithType: CacheInsertOptions.CacheInsertOptions()\n  fullName: CacheInsertOptions.CacheInsertOptions()\n- uid: System.Web.Caching.CacheInsertOptions.AbsoluteExpiration\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: AbsoluteExpiration\n  nameWithType: CacheInsertOptions.AbsoluteExpiration\n  fullName: CacheInsertOptions.AbsoluteExpiration\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.Caching.CacheInsertOptions.Dependencies\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: Dependencies\n  nameWithType: CacheInsertOptions.Dependencies\n  fullName: CacheInsertOptions.Dependencies\n- uid: System.Web.Caching.CacheDependency\n  parent: System.Web.Caching\n  isExternal: false\n  name: CacheDependency\n  nameWithType: CacheDependency\n  fullName: System.Web.Caching.CacheDependency\n- uid: System.Web.Caching.CacheInsertOptions.OnRemovedCallback\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: OnRemovedCallback\n  nameWithType: CacheInsertOptions.OnRemovedCallback\n  fullName: CacheInsertOptions.OnRemovedCallback\n- uid: System.Web.Caching.CacheItemRemovedCallback\n  parent: System.Web.Caching\n  isExternal: false\n  name: CacheItemRemovedCallback\n  nameWithType: CacheItemRemovedCallback\n  fullName: System.Web.Caching.CacheItemRemovedCallback\n- uid: System.Web.Caching.CacheInsertOptions.Priority\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: Priority\n  nameWithType: CacheInsertOptions.Priority\n  fullName: CacheInsertOptions.Priority\n- uid: System.Web.Caching.CacheItemPriority\n  parent: System.Web.Caching\n  isExternal: false\n  name: CacheItemPriority\n  nameWithType: CacheItemPriority\n  fullName: System.Web.Caching.CacheItemPriority\n- uid: System.Web.Caching.CacheInsertOptions.SlidingExpiration\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: SlidingExpiration\n  nameWithType: CacheInsertOptions.SlidingExpiration\n  fullName: CacheInsertOptions.SlidingExpiration\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Web.Caching.CacheInsertOptions.#ctor*\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: CacheInsertOptions\n  nameWithType: CacheInsertOptions.CacheInsertOptions\n  fullName: CacheInsertOptions.CacheInsertOptions\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n- uid: System.Web.Caching.CacheInsertOptions.AbsoluteExpiration*\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: AbsoluteExpiration\n  nameWithType: CacheInsertOptions.AbsoluteExpiration\n  fullName: CacheInsertOptions.AbsoluteExpiration\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n- uid: System.Web.Caching.CacheInsertOptions.Dependencies*\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: Dependencies\n  nameWithType: CacheInsertOptions.Dependencies\n  fullName: CacheInsertOptions.Dependencies\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n- uid: System.Web.Caching.CacheInsertOptions.OnRemovedCallback*\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: OnRemovedCallback\n  nameWithType: CacheInsertOptions.OnRemovedCallback\n  fullName: CacheInsertOptions.OnRemovedCallback\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n- uid: System.Web.Caching.CacheInsertOptions.Priority*\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: Priority\n  nameWithType: CacheInsertOptions.Priority\n  fullName: CacheInsertOptions.Priority\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n- uid: System.Web.Caching.CacheInsertOptions.SlidingExpiration*\n  parent: System.Web.Caching.CacheInsertOptions\n  isExternal: false\n  name: SlidingExpiration\n  nameWithType: CacheInsertOptions.SlidingExpiration\n  fullName: CacheInsertOptions.SlidingExpiration\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Caching/CacheInsertOptions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}