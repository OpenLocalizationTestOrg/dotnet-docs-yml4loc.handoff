{"nodes":[{"content":"Represents the Windows user prior to an impersonation operation.","nodes":[{"pos":[0,64],"content":"Represents the Windows user prior to an impersonation operation.","nodes":[{"content":"Represents the Windows user prior to an impersonation operation.","pos":[0,64]}]}],"pos":[680,745],"yaml":true},{"content":"This class reverts a user's identity after the user impersonates another user.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[0,78],"content":"This class reverts a user's identity after the user impersonates another user.","nodes":[{"content":"This class reverts a user's identity after the user impersonates another user.","pos":[0,78]}]},{"pos":[86,612],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[756,1376],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>.","nodes":[{"pos":[0,110],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsImpersonationContext\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>."}],"pos":[3629,3740],"yaml":true},{"content":"Call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsImpersonationContext>. The <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsImpersonationContext> in an unusable state. After calling <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsImpersonationContext> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsImpersonationContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n **Note:** Always call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsImpersonationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsImpersonationContext> object's **Finalize** method.","nodes":[{"pos":[0,873],"content":"Call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsImpersonationContext>. The <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsImpersonationContext> in an unusable state. After calling <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsImpersonationContext> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsImpersonationContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>.","pos":[0,170],"source":"Call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsImpersonationContext>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> in an unusable state.","pos":[171,347],"source":" The <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsImpersonationContext> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> was occupying.","pos":[348,667],"source":" After calling <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsImpersonationContext> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsImpersonationContext> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[668,873],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[880,1265],"content":"**Note:** Always call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsImpersonationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsImpersonationContext> object's **Finalize** method.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Always call <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>.","pos":[0,201],"source":"**Note:** Always call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsImpersonationContext>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> object's <bpt id=\"p1\">**</bpt>Finalize<ept id=\"p1\">**</ept> method.","pos":[202,385],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsImpersonationContext> object's **Finalize** method."}]}],"pos":[3751,5021],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,166],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsImpersonationContext\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref> and optionally releases the managed resources."}],"pos":[6523,6690],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsImpersonationContext> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,293],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[300,555],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsImpersonationContext> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> references.","pos":[0,185],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsImpersonationContext> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[186,255],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[6701,7261],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[7482,7585],"yaml":true},{"content":"Reverts the user context to the Windows user represented by this object.","nodes":[{"pos":[0,72],"content":"Reverts the user context to the Windows user represented by this object.","nodes":[{"content":"Reverts the user context to the Windows user represented by this object.","pos":[0,72]}]}],"pos":[8867,8940],"yaml":true},{"content":"An attempt is made to use this method for any purpose other than to revert identity to self.","nodes":[{"pos":[0,92],"content":"An attempt is made to use this method for any purpose other than to revert identity to self.","nodes":[{"content":"An attempt is made to use this method for any purpose other than to revert identity to self.","pos":[0,92]}]}],"pos":[9883,9976],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.WindowsImpersonationContext\n  commentId: T:System.Security.Principal.WindowsImpersonationContext\n  id: WindowsImpersonationContext\n  children:\n  - System.Security.Principal.WindowsImpersonationContext.Dispose\n  - System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)\n  - System.Security.Principal.WindowsImpersonationContext.Undo\n  langs:\n  - csharp\n  name: WindowsImpersonationContext\n  nameWithType: WindowsImpersonationContext\n  fullName: System.Security.Principal.WindowsImpersonationContext\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Represents the Windows user prior to an impersonation operation.\n  remarks: \"This class reverts a user's identity after the user impersonates another user.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.\"\n  example:\n  - \"The following example demonstrates how to impersonate a user and then revert to the original identity.  \\n  \\n [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]\\n [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]\\n [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class WindowsImpersonationContext : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsImpersonationContext.Dispose\n  commentId: M:System.Security.Principal.WindowsImpersonationContext.Dispose\n  id: Dispose\n  parent: System.Security.Principal.WindowsImpersonationContext\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: WindowsImpersonationContext.Dispose()\n  fullName: WindowsImpersonationContext.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Releases all resources used by the <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref>.\n  remarks: \"Call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsImpersonationContext>. The <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsImpersonationContext> in an unusable state. After calling <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsImpersonationContext> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsImpersonationContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n **Note:** Always call <xref:System.Security.Principal.WindowsImpersonationContext.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsImpersonationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsImpersonationContext> object's **Finalize** method.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public void Dispose ();\n    parameters: []\n  overload: System.Security.Principal.WindowsImpersonationContext.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)\n  commentId: M:System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Principal.WindowsImpersonationContext\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: WindowsImpersonationContext.Dispose(Boolean)\n  fullName: WindowsImpersonationContext.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Security.Principal.WindowsImpersonationContext\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsImpersonationContext> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Security.Principal.WindowsImpersonationContext.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsImpersonationContext.Undo\n  commentId: M:System.Security.Principal.WindowsImpersonationContext.Undo\n  id: Undo\n  parent: System.Security.Principal.WindowsImpersonationContext\n  langs:\n  - csharp\n  name: Undo()\n  nameWithType: WindowsImpersonationContext.Undo()\n  fullName: WindowsImpersonationContext.Undo()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Reverts the user context to the Windows user represented by this object.\n  remarks: ''\n  example:\n  - \"The following example shows how to impersonate a Windows identity using a specified user token.  \\n  \\n [!code-cpp[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/CS/source.cs#1)]\\n [!code-vb[Classic WindowsImpersonationContext.Undo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsImpersonationContext.Undo Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Undo ();\n    parameters: []\n  overload: System.Security.Principal.WindowsImpersonationContext.Undo*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: An attempt is made to use this method for any purpose other than to revert identity to self.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Security.Principal.WindowsImpersonationContext.Dispose\n  parent: System.Security.Principal.WindowsImpersonationContext\n  isExternal: false\n  name: Dispose()\n  nameWithType: WindowsImpersonationContext.Dispose()\n  fullName: WindowsImpersonationContext.Dispose()\n- uid: System.Security.Principal.WindowsImpersonationContext.Dispose(System.Boolean)\n  parent: System.Security.Principal.WindowsImpersonationContext\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: WindowsImpersonationContext.Dispose(Boolean)\n  fullName: WindowsImpersonationContext.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Principal.WindowsImpersonationContext.Undo\n  parent: System.Security.Principal.WindowsImpersonationContext\n  isExternal: false\n  name: Undo()\n  nameWithType: WindowsImpersonationContext.Undo()\n  fullName: WindowsImpersonationContext.Undo()\n- uid: System.Security.Principal.WindowsImpersonationContext.Dispose*\n  parent: System.Security.Principal.WindowsImpersonationContext\n  isExternal: false\n  name: Dispose\n  nameWithType: WindowsImpersonationContext.Dispose\n  fullName: WindowsImpersonationContext.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml\n- uid: System.Security.Principal.WindowsImpersonationContext.Undo*\n  parent: System.Security.Principal.WindowsImpersonationContext\n  isExternal: false\n  name: Undo\n  nameWithType: WindowsImpersonationContext.Undo\n  fullName: WindowsImpersonationContext.Undo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsImpersonationContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}