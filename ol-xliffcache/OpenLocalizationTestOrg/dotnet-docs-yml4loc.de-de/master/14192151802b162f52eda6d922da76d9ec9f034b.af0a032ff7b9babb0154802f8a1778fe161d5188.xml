{"nodes":[{"content":"Allows control of code access permissions for <xref href=\"System.Diagnostics.PerformanceCounter\"></xref>.","nodes":[{"pos":[0,105],"content":"Allows control of code access permissions for <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounter\"&gt;&lt;/xref&gt;</ph>.","source":"Allows control of code access permissions for <xref href=\"System.Diagnostics.PerformanceCounter\"></xref>."}],"pos":[963,1069],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterPermission\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class."}],"pos":[4866,4976],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified permission access level entries.","nodes":[{"pos":[0,160],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterPermission\"&gt;&lt;/xref&gt;</ph> class with the specified permission access level entries.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified permission access level entries."}],"pos":[6559,6720],"yaml":true},{"content":"An array of <xref href=\"System.Diagnostics.PerformanceCounterPermissionEntry\"></xref> objects. The <xref href=\"System.Diagnostics.PerformanceCounterPermission.PermissionEntries\"></xref> property is set to this value.","nodes":[{"pos":[0,216],"content":"An array of <xref href=\"System.Diagnostics.PerformanceCounterPermissionEntry\"></xref> objects. The <xref href=\"System.Diagnostics.PerformanceCounterPermission.PermissionEntries\"></xref> property is set to this value.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterPermissionEntry\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,94],"source":"An array of <xref href=\"System.Diagnostics.PerformanceCounterPermissionEntry\"></xref> objects."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterPermission.PermissionEntries\"&gt;&lt;/xref&gt;</ph> property is set to this value.","pos":[95,216],"source":" The <xref href=\"System.Diagnostics.PerformanceCounterPermission.PermissionEntries\"></xref> property is set to this value."}]}],"pos":[6997,7214],"yaml":true},{"content":"<code>permissionAccessEntries</code> is `null`.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">&lt;code&gt;permissionAccessEntries&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>permissionAccessEntries</code> is `null`."}],"pos":[7397,7445],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified permission state.","nodes":[{"pos":[0,145],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterPermission\"&gt;&lt;/xref&gt;</ph> class with the specified permission state.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified permission state."}],"pos":[8769,8915],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[9134,9218],"yaml":true},{"content":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,122],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[9393,9516],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified access levels, the name of the computer to use, and the category associated with the performance counter.","nodes":[{"pos":[0,233],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterPermission\"&gt;&lt;/xref&gt;</ph> class with the specified access levels, the name of the computer to use, and the category associated with the performance counter.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified access levels, the name of the computer to use, and the category associated with the performance counter."}],"pos":[11059,11293],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.PerformanceCounterPermissionAccess\"></xref> values.","nodes":[{"pos":[0,93],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Diagnostics.PerformanceCounterPermissionAccess\"></xref> values."}],"pos":[11595,11689],"yaml":true},{"content":"The server on which the performance counter and its associate category reside.","nodes":[{"pos":[0,78],"content":"The server on which the performance counter and its associate category reside.","nodes":[{"content":"The server on which the performance counter and its associate category reside.","pos":[0,78]}]}],"pos":[11756,11835],"yaml":true},{"content":"The name of the performance counter category (performance object) with which the performance counter is associated.","nodes":[{"pos":[0,115],"content":"The name of the performance counter category (performance object) with which the performance counter is associated.","nodes":[{"content":"The name of the performance counter category (performance object) with which the performance counter is associated.","pos":[0,115]}]}],"pos":[11903,12019],"yaml":true},{"content":"Gets the collection of permission entries for this permissions request.","nodes":[{"pos":[0,71],"content":"Gets the collection of permission entries for this permissions request.","nodes":[{"content":"Gets the collection of permission entries for this permissions request.","pos":[0,71]}]}],"pos":[13239,13311],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.PerformanceCounterPermissionEntryCollection\"></xref> that contains the permission entries for this permissions request.","nodes":[{"pos":[0,152],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.PerformanceCounterPermissionEntryCollection\"&gt;&lt;/xref&gt;</ph> that contains the permission entries for this permissions request.","source":"A <xref href=\"System.Diagnostics.PerformanceCounterPermissionEntryCollection\"></xref> that contains the permission entries for this permissions request."}],"pos":[13537,13690],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.PerformanceCounterPermission\n  commentId: T:System.Diagnostics.PerformanceCounterPermission\n  id: PerformanceCounterPermission\n  children:\n  - System.Diagnostics.PerformanceCounterPermission.#ctor\n  - System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])\n  - System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)\n  - System.Diagnostics.PerformanceCounterPermission.PermissionEntries\n  langs:\n  - csharp\n  name: PerformanceCounterPermission\n  nameWithType: PerformanceCounterPermission\n  fullName: System.Diagnostics.PerformanceCounterPermission\n  type: Class\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Diagnostics\n  summary: Allows control of code access permissions for <xref href=\"System.Diagnostics.PerformanceCounter\"></xref>.\n  syntax:\n    content: 'public sealed class PerformanceCounterPermission : System.Security.Permissions.ResourcePermissionBase'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  - System.Security.Permissions.ResourcePermissionBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  - System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  - System.Security.Permissions.ResourcePermissionBase.Any\n  - System.Security.Permissions.ResourcePermissionBase.Clear\n  - System.Security.Permissions.ResourcePermissionBase.Copy\n  - System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries\n  - System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.ResourcePermissionBase.IsUnrestricted\n  - System.Security.Permissions.ResourcePermissionBase.Local\n  - System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n  - System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  - System.Security.Permissions.ResourcePermissionBase.TagNames\n  - System.Security.Permissions.ResourcePermissionBase.ToXml\n  - System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/PerformanceCounterPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor\n  commentId: M:System.Diagnostics.PerformanceCounterPermission.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.PerformanceCounterPermission\n  langs:\n  - csharp\n  name: PerformanceCounterPermission()\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission()\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission()\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class.\n  syntax:\n    content: public PerformanceCounterPermission ();\n    parameters: []\n  overload: System.Diagnostics.PerformanceCounterPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/PerformanceCounterPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])\n  commentId: M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])\n  id: '#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])'\n  parent: System.Diagnostics.PerformanceCounterPermission\n  langs:\n  - csharp\n  name: PerformanceCounterPermission(PerformanceCounterPermissionEntry[])\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission(PerformanceCounterPermissionEntry[])\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission(PerformanceCounterPermissionEntry[])\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified permission access level entries.\n  syntax:\n    content: public PerformanceCounterPermission (System.Diagnostics.PerformanceCounterPermissionEntry[] permissionAccessEntries);\n    parameters:\n    - id: permissionAccessEntries\n      type: System.Diagnostics.PerformanceCounterPermissionEntry[]\n      description: An array of <xref href=\"System.Diagnostics.PerformanceCounterPermissionEntry\"></xref> objects. The <xref href=\"System.Diagnostics.PerformanceCounterPermission.PermissionEntries\"></xref> property is set to this value.\n  overload: System.Diagnostics.PerformanceCounterPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>permissionAccessEntries</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/PerformanceCounterPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Diagnostics.PerformanceCounterPermission\n  langs:\n  - csharp\n  name: PerformanceCounterPermission(PermissionState)\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission(PermissionState)\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified permission state.\n  syntax:\n    content: public PerformanceCounterPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Diagnostics.PerformanceCounterPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/PerformanceCounterPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)\n  commentId: M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)\n  id: '#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)'\n  parent: System.Diagnostics.PerformanceCounterPermission\n  langs:\n  - csharp\n  name: PerformanceCounterPermission(PerformanceCounterPermissionAccess, String, String)\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission(PerformanceCounterPermissionAccess, String, String)\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission(PerformanceCounterPermissionAccess, String, String)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.PerformanceCounterPermission\"></xref> class with the specified access levels, the name of the computer to use, and the category associated with the performance counter.\n  syntax:\n    content: public PerformanceCounterPermission (System.Diagnostics.PerformanceCounterPermissionAccess permissionAccess, string machineName, string categoryName);\n    parameters:\n    - id: permissionAccess\n      type: System.Diagnostics.PerformanceCounterPermissionAccess\n      description: One of the <xref href=\"System.Diagnostics.PerformanceCounterPermissionAccess\"></xref> values.\n    - id: machineName\n      type: System.String\n      description: The server on which the performance counter and its associate category reside.\n    - id: categoryName\n      type: System.String\n      description: The name of the performance counter category (performance object) with which the performance counter is associated.\n  overload: System.Diagnostics.PerformanceCounterPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/PerformanceCounterPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.PerformanceCounterPermission.PermissionEntries\n  commentId: P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries\n  id: PermissionEntries\n  parent: System.Diagnostics.PerformanceCounterPermission\n  langs:\n  - csharp\n  name: PermissionEntries\n  nameWithType: PerformanceCounterPermission.PermissionEntries\n  fullName: PerformanceCounterPermission.PermissionEntries\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Diagnostics\n  summary: Gets the collection of permission entries for this permissions request.\n  syntax:\n    content: public System.Diagnostics.PerformanceCounterPermissionEntryCollection PermissionEntries { get; }\n    return:\n      type: System.Diagnostics.PerformanceCounterPermissionEntryCollection\n      description: A <xref href=\"System.Diagnostics.PerformanceCounterPermissionEntryCollection\"></xref> that contains the permission entries for this permissions request.\n  overload: System.Diagnostics.PerformanceCounterPermission.PermissionEntries*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/PerformanceCounterPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Permissions.ResourcePermissionBase\n  parent: System.Security.Permissions\n  isExternal: false\n  name: ResourcePermissionBase\n  nameWithType: ResourcePermissionBase\n  fullName: System.Security.Permissions.ResourcePermissionBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor\n  parent: System.Diagnostics.PerformanceCounterPermission\n  isExternal: false\n  name: PerformanceCounterPermission()\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission()\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission()\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])\n  parent: System.Diagnostics.PerformanceCounterPermission\n  isExternal: false\n  name: PerformanceCounterPermission(PerformanceCounterPermissionEntry[])\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission(PerformanceCounterPermissionEntry[])\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission(PerformanceCounterPermissionEntry[])\n- uid: System.Diagnostics.PerformanceCounterPermissionEntry\n  name: PerformanceCounterPermissionEntry\n  nameWithType: PerformanceCounterPermissionEntry\n  fullName: System.Diagnostics.PerformanceCounterPermissionEntry\n- uid: System.Diagnostics.PerformanceCounterPermissionEntry[]\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterPermissionEntry[]\n  nameWithType: PerformanceCounterPermissionEntry[]\n  fullName: System.Diagnostics.PerformanceCounterPermissionEntry[]\n  spec.csharp:\n  - uid: System.Diagnostics.PerformanceCounterPermissionEntry\n    name: PerformanceCounterPermissionEntry\n    nameWithType: PerformanceCounterPermissionEntry\n    fullName: System.Diagnostics.PerformanceCounterPermissionEntry\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Diagnostics.PerformanceCounterPermission\n  isExternal: false\n  name: PerformanceCounterPermission(PermissionState)\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission(PermissionState)\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)\n  parent: System.Diagnostics.PerformanceCounterPermission\n  isExternal: false\n  name: PerformanceCounterPermission(PerformanceCounterPermissionAccess, String, String)\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission(PerformanceCounterPermissionAccess, String, String)\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission(PerformanceCounterPermissionAccess, String, String)\n- uid: System.Diagnostics.PerformanceCounterPermissionAccess\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterPermissionAccess\n  nameWithType: PerformanceCounterPermissionAccess\n  fullName: System.Diagnostics.PerformanceCounterPermissionAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.PerformanceCounterPermission.PermissionEntries\n  parent: System.Diagnostics.PerformanceCounterPermission\n  isExternal: false\n  name: PermissionEntries\n  nameWithType: PerformanceCounterPermission.PermissionEntries\n  fullName: PerformanceCounterPermission.PermissionEntries\n- uid: System.Diagnostics.PerformanceCounterPermissionEntryCollection\n  parent: System.Diagnostics\n  isExternal: false\n  name: PerformanceCounterPermissionEntryCollection\n  nameWithType: PerformanceCounterPermissionEntryCollection\n  fullName: System.Diagnostics.PerformanceCounterPermissionEntryCollection\n- uid: System.Diagnostics.PerformanceCounterPermission.#ctor*\n  parent: System.Diagnostics.PerformanceCounterPermission\n  isExternal: false\n  name: PerformanceCounterPermission\n  nameWithType: PerformanceCounterPermission.PerformanceCounterPermission\n  fullName: PerformanceCounterPermission.PerformanceCounterPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/PerformanceCounterPermission.xml\n- uid: System.Diagnostics.PerformanceCounterPermission.PermissionEntries*\n  parent: System.Diagnostics.PerformanceCounterPermission\n  isExternal: false\n  name: PermissionEntries\n  nameWithType: PerformanceCounterPermission.PermissionEntries\n  fullName: PerformanceCounterPermission.PermissionEntries\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/PerformanceCounterPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.Permissions.ResourcePermissionBase.Copy\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Copy()\n  nameWithType: ResourcePermissionBase.Copy()\n  fullName: ResourcePermissionBase.Copy()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ResourcePermissionBase.FromXml(SecurityElement)\n  fullName: ResourcePermissionBase.FromXml(SecurityElement)\n- uid: System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: ResourcePermissionBase.Intersect(IPermission)\n  fullName: ResourcePermissionBase.Intersect(IPermission)\n- uid: System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: ResourcePermissionBase.IsSubsetOf(IPermission)\n  fullName: ResourcePermissionBase.IsSubsetOf(IPermission)\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.Permissions.ResourcePermissionBase.ToXml\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: ToXml()\n  nameWithType: ResourcePermissionBase.ToXml()\n  fullName: ResourcePermissionBase.ToXml()\n- uid: System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: ResourcePermissionBase.Union(IPermission)\n  fullName: ResourcePermissionBase.Union(IPermission)\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: AddPermissionAccess(ResourcePermissionBaseEntry)\n  nameWithType: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)\n  fullName: ResourcePermissionBase.AddPermissionAccess(ResourcePermissionBaseEntry)\n- uid: System.Security.Permissions.ResourcePermissionBase.Any\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Any\n  nameWithType: ResourcePermissionBase.Any\n  fullName: ResourcePermissionBase.Any\n- uid: System.Security.Permissions.ResourcePermissionBase.Clear\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Clear()\n  nameWithType: ResourcePermissionBase.Clear()\n  fullName: ResourcePermissionBase.Clear()\n- uid: System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: GetPermissionEntries()\n  nameWithType: ResourcePermissionBase.GetPermissionEntries()\n  fullName: ResourcePermissionBase.GetPermissionEntries()\n- uid: System.Security.Permissions.ResourcePermissionBase.IsUnrestricted\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: ResourcePermissionBase.IsUnrestricted()\n  fullName: ResourcePermissionBase.IsUnrestricted()\n- uid: System.Security.Permissions.ResourcePermissionBase.Local\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: Local\n  nameWithType: ResourcePermissionBase.Local\n  fullName: ResourcePermissionBase.Local\n- uid: System.Security.Permissions.ResourcePermissionBase.PermissionAccessType\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: PermissionAccessType\n  nameWithType: ResourcePermissionBase.PermissionAccessType\n  fullName: ResourcePermissionBase.PermissionAccessType\n- uid: System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: RemovePermissionAccess(ResourcePermissionBaseEntry)\n  nameWithType: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)\n  fullName: ResourcePermissionBase.RemovePermissionAccess(ResourcePermissionBaseEntry)\n- uid: System.Security.Permissions.ResourcePermissionBase.TagNames\n  parent: System.Security.Permissions.ResourcePermissionBase\n  isExternal: false\n  name: TagNames\n  nameWithType: ResourcePermissionBase.TagNames\n  fullName: ResourcePermissionBase.TagNames\n"}