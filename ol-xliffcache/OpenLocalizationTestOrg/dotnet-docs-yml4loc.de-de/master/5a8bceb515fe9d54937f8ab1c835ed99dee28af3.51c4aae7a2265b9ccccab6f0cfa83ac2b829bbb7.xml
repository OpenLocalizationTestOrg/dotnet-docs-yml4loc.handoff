{"nodes":[{"content":"Provides data for the <xref href=\"System.Web.UI.WebControls.FormView.ItemUpdating\"></xref> event.","nodes":[{"pos":[0,97],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FormView.ItemUpdating\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides data for the <xref href=\"System.Web.UI.WebControls.FormView.ItemUpdating\"></xref> event."}],"pos":[779,877],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event when an Update button (a button with its `CommandName` property set to \"Update\") within the control is clicked, but before the <xref:System.Web.UI.WebControls.FormView> control updates the record. This allows you to provide an event-handling method that performs a custom routine, such as HTML encoding or validating the values of a record before updating it in the data source, whenever this event occurs.  \n  \n A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> object is passed to the event-handling method, which allows you to determine the value of an optional command argument sent to the <xref:System.Web.UI.WebControls.FormView> control and to indicate whether the update operation should be canceled. To determine the value of the command argument, use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> property. To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`. If you need to access the original key field values for the record being updated, use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property. The original non-key field values can be accessed by using the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property. Updated values (which include updated key field values, if you allow the user to edit key fields) are accessed using the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \n  \n For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class, see the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A> constructor.","nodes":[{"pos":[0,532],"content":"The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event when an Update button (a button with its `CommandName` property set to \"Update\") within the control is clicked, but before the <xref:System.Web.UI.WebControls.FormView> control updates the record. This allows you to provide an event-handling method that performs a custom routine, such as HTML encoding or validating the values of a record before updating it in the data source, whenever this event occurs.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control raises the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView.ItemUpdating&gt;</ph> event when an Update button (a button with its <ph id=\"ph3\">`CommandName`</ph> property set to \"Update\") within the control is clicked, but before the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control updates the record.","pos":[0,322],"source":"The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event when an Update button (a button with its `CommandName` property set to \"Update\") within the control is clicked, but before the <xref:System.Web.UI.WebControls.FormView> control updates the record."},{"content":"This allows you to provide an event-handling method that performs a custom routine, such as HTML encoding or validating the values of a record before updating it in the data source, whenever this event occurs.","pos":[323,532]}]},{"pos":[539,1609],"content":"A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> object is passed to the event-handling method, which allows you to determine the value of an optional command argument sent to the <xref:System.Web.UI.WebControls.FormView> control and to indicate whether the update operation should be canceled. To determine the value of the command argument, use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> property. To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`. If you need to access the original key field values for the record being updated, use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property. The original non-key field values can be accessed by using the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property. Updated values (which include updated key field values, if you allow the user to edit key fields) are accessed using the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs&gt;</ph> object is passed to the event-handling method, which allows you to determine the value of an optional command argument sent to the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control and to indicate whether the update operation should be canceled.","pos":[0,304],"source":"A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> object is passed to the event-handling method, which allows you to determine the value of an optional command argument sent to the <xref:System.Web.UI.WebControls.FormView> control and to indicate whether the update operation should be canceled."},{"content":"To determine the value of the command argument, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A&gt;</ph> property.","pos":[305,446],"source":" To determine the value of the command argument, use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> property."},{"content":"To cancel the update operation, set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[447,561],"source":" To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`."},{"content":"If you need to access the original key field values for the record being updated, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt;</ph> property.","pos":[562,726],"source":" If you need to access the original key field values for the record being updated, use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property."},{"content":"The original non-key field values can be accessed by using the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A&gt;</ph> property.","pos":[727,869],"source":" The original non-key field values can be accessed by using the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property."},{"content":"Updated values (which include updated key field values, if you allow the user to edit key fields) are accessed using the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt;</ph> property.","pos":[870,1070],"source":" Updated values (which include updated key field values, if you allow the user to edit key fields) are accessed using the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property."}]},{"pos":[1616,1758],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."},{"pos":[1765,1978],"content":"For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class, see the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A> constructor.","nodes":[{"content":"For a list of initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs&gt;</ph> class, see the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A&gt;</ph> constructor.","pos":[0,213],"source":"For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class, see the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A> constructor."}]}],"pos":[888,2877],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FormViewUpdateEventArgs\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FormViewUpdateEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FormViewUpdateEventArgs\"></xref> class."}],"pos":[5213,5325],"yaml":true},{"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class.  \n  \n The following table shows the initial property value for an instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class.  \n  \n|Property|Initial Value|  \n|--------------|-------------------|  \n|<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>|The value of the `commandArgument` parameter.|  \n  \n> [!NOTE]\n>  This constructor is used primarily by control developers when raising events.","nodes":[{"pos":[0,120],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class.","nodes":[{"content":"Use this constructor to initialize a new instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs&gt;</ph> class.","pos":[0,120],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class."}]},{"pos":[127,266],"content":"The following table shows the initial property value for an instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class.","nodes":[{"content":"The following table shows the initial property value for an instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs&gt;</ph> class.","pos":[0,139],"source":"The following table shows the initial property value for an instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class."}]},{"pos":[273,281],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[282,295],"content":"Initial Value","nodes":[{"content":"Initial Value","pos":[0,13]}]},{"pos":[339,414],"content":"<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>","nodes":[]},{"pos":[415,460],"content":"The value of the <ph id=\"ph1\">`commandArgument`</ph> parameter.","source":"The value of the `commandArgument` parameter."},{"pos":[469,557],"content":"[!NOTE]\n This constructor is used primarily by control developers when raising events.","leadings":["","> "],"nodes":[{"content":"This constructor is used primarily by control developers when raising events.","pos":[9,86]}]}],"pos":[5336,5905],"yaml":true,"extradata":"MT"},{"content":"An optional command argument passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control.","nodes":[{"pos":[0,107],"content":"An optional command argument passed to the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FormView\"&gt;&lt;/xref&gt;</ph> control.","source":"An optional command argument passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control."}],"pos":[6072,6180],"yaml":true},{"content":"Gets the command argument for the update operation passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control.","nodes":[{"pos":[0,129],"content":"Gets the command argument for the update operation passed to the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FormView\"&gt;&lt;/xref&gt;</ph> control.","source":"Gets the command argument for the update operation passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control."}],"pos":[7280,7410],"yaml":true},{"content":"When you create an Update button for one of the templates in a <xref:System.Web.UI.WebControls.FormView> control, you can optionally specify a command argument for the button by using the <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName> property. The command argument usually contains any optional information you want to accompany the update command, such as the value for the key field. The <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> property is provided as a convenient way to determine the value of the Update button's command argument.","nodes":[{"pos":[0,616],"content":"When you create an Update button for one of the templates in a <xref:System.Web.UI.WebControls.FormView> control, you can optionally specify a command argument for the button by using the <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName> property. The command argument usually contains any optional information you want to accompany the update command, such as the value for the key field. The <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> property is provided as a convenient way to determine the value of the Update button's command argument.","nodes":[{"content":"When you create an Update button for one of the templates in a <xref:System.Web.UI.WebControls.FormView> control, you can optionally specify a command argument for the button by using the <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName> property. The command argument usually contains any optional information you want to accompany the update command, such as the value for the key field. The <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> property is provided as a convenient way to determine the value of the Update button's command argument.","pos":[0,616],"nodes":[{"content":"When you create an Update button for one of the templates in a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control, you can optionally specify a command argument for the button by using the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,289],"source":"When you create an Update button for one of the templates in a <xref:System.Web.UI.WebControls.FormView> control, you can optionally specify a command argument for the button by using the <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName> property."},{"content":"The command argument usually contains any optional information you want to accompany the update command, such as the value for the key field.","pos":[290,431]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A&gt;</ph> property is provided as a convenient way to determine the value of the Update button's command argument.","pos":[432,616],"source":" The <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> property is provided as a convenient way to determine the value of the Update button's command argument."}]}]}],"pos":[7421,8038],"yaml":true,"extradata":"MT"},{"content":"The command argument for the update operation passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control.","nodes":[{"pos":[0,124],"content":"The command argument for the update operation passed to the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.FormView\"&gt;&lt;/xref&gt;</ph> control.","source":"The command argument for the update operation passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control."}],"pos":[8157,8282],"yaml":true},{"content":"Gets a dictionary that contains the original key field name/value pairs for the record to update.","nodes":[{"pos":[0,97],"content":"Gets a dictionary that contains the original key field name/value pairs for the record to update.","nodes":[{"content":"Gets a dictionary that contains the original key field name/value pairs for the record to update.","pos":[0,97]}]}],"pos":[9326,9424],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original values of the key fields listed in the <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> property of a <xref:System.Web.UI.WebControls.FormView> control. Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property to access the original values of the key fields for the record to update. For example, you can use these values to keep a log of updated records.  \n  \n> [!NOTE]\n>  If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.  \n  \n The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.  \n  \n> [!NOTE]\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","nodes":[{"pos":[0,489],"content":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original values of the key fields listed in the <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> property of a <xref:System.Web.UI.WebControls.FormView> control. Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property to access the original values of the key fields for the record to update. For example, you can use these values to keep a log of updated records.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original values of the key fields listed in the <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> property of a <xref:System.Web.UI.WebControls.FormView> control. Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property to access the original values of the key fields for the record to update. For example, you can use these values to keep a log of updated records.","pos":[0,489],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt;</ph> property contains the original values of the key fields listed in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A&gt;</ph> property of a <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> control.","pos":[0,261],"source":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original values of the key fields listed in the <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> property of a <xref:System.Web.UI.WebControls.FormView> control."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt;</ph> property to access the original values of the key fields for the record to update.","pos":[262,417],"source":" Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property to access the original values of the key fields for the record to update."},{"content":"For example, you can use these values to keep a log of updated records.","pos":[418,489]}]}]},{"pos":[497,804],"content":"[!NOTE]\n If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.","leadings":["","> "],"nodes":[{"content":" If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.","pos":[8,305],"nodes":[{"content":"If you allow the user to update the values of the key fields, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt;</ph> property contains the original key field values.","pos":[1,180],"source":" If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values."},{"content":"The updated values are stored in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt;</ph> property.","pos":[181,297],"source":" The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property."}]}]},{"pos":[811,1586],"content":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.","pos":[0,775],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt;</ph> property returns an <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object that implements the <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt;</ph> interface.","pos":[0,264],"source":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object contains <ph id=\"ph2\">&lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt;</ph> objects that represent the fields of the updated record.","pos":[265,464],"source":" The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record."},{"content":"To access the field names, use the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Keys%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object.","pos":[465,643],"source":" To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object."},{"content":"Similarly, you can access the field values by using the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Values%2A&gt;</ph> property.","pos":[644,775],"source":" Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property."}]}]},{"pos":[1594,1904],"content":"[!NOTE]\n As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","leadings":["","> "],"nodes":[{"content":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","pos":[8,308],"nodes":[{"content":"As a shortcut, you can also use the indexer of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object to access the field values directly.","pos":[1,151],"source":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly."},{"content":"Data source controls that rely on the field order (such as <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;</ph>) can access field values only by index.","pos":[152,300],"source":" Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index."}]}]}],"pos":[9435,11350],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the original key field name/value pairs for the record to update.","nodes":[{"pos":[0,169],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;&lt;/xref&gt;</ph> that contains a dictionary of the original key field name/value pairs for the record to update.","source":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the original key field name/value pairs for the record to update."}],"pos":[12134,12304],"yaml":true},{"content":"Gets a dictionary that contains the new field name/value pairs for the record to update.","nodes":[{"pos":[0,88],"content":"Gets a dictionary that contains the new field name/value pairs for the record to update.","nodes":[{"content":"Gets a dictionary that contains the new field name/value pairs for the record to update.","pos":[0,88]}]}],"pos":[13367,13456],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property to access the new field values for the record to update. For example, you can use these values to keep a log of updated records.  \n  \n> [!NOTE]\n>  If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.  \n  \n The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.  \n  \n> [!NOTE]\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","nodes":[{"pos":[0,215],"content":"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property to access the new field values for the record to update. For example, you can use these values to keep a log of updated records.","nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property to access the new field values for the record to update. For example, you can use these values to keep a log of updated records.","pos":[0,215],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt;</ph> property to access the new field values for the record to update.","pos":[0,143],"source":"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property to access the new field values for the record to update."},{"content":"For example, you can use these values to keep a log of updated records.","pos":[144,215]}]}]},{"pos":[223,530],"content":"[!NOTE]\n If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.","leadings":["","> "],"nodes":[{"content":" If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.","pos":[8,305],"nodes":[{"content":"If you allow the user to update the values of the key fields, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt;</ph> property contains the original key field values.","pos":[1,180],"source":" If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values."},{"content":"The updated values are stored in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt;</ph> property.","pos":[181,297],"source":" The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property."}]}]},{"pos":[537,1317],"content":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.","pos":[0,780],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt;</ph> property returns an <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object that implements the <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt;</ph> interface.","pos":[0,269],"source":"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object contains <ph id=\"ph2\">&lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt;</ph> objects that represent the fields of the updated record.","pos":[270,469],"source":" The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record."},{"content":"To access the field names, use the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Keys%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object.","pos":[470,648],"source":" To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object."},{"content":"Similarly, you can access the field values by using the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Values%2A&gt;</ph> property.","pos":[649,780],"source":" Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property."}]}]},{"pos":[1325,1635],"content":"[!NOTE]\n As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","leadings":["","> "],"nodes":[{"content":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","pos":[8,308],"nodes":[{"content":"As a shortcut, you can also use the indexer of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object to access the field values directly.","pos":[1,151],"source":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly."},{"content":"Data source controls that rely on the field order (such as <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;</ph>) can access field values only by index.","pos":[152,300],"source":" Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index."}]}]}],"pos":[13467,15113],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the new field name/value pairs for the record to update.","nodes":[{"pos":[0,160],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;&lt;/xref&gt;</ph> that contains a dictionary of the new field name/value pairs for the record to update.","source":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the new field name/value pairs for the record to update."}],"pos":[15943,16104],"yaml":true},{"content":"Gets a dictionary that contains the original non-key field name/value pairs for the record to update.","nodes":[{"pos":[0,101],"content":"Gets a dictionary that contains the original non-key field name/value pairs for the record to update.","nodes":[{"content":"Gets a dictionary that contains the original non-key field name/value pairs for the record to update.","pos":[0,101]}]}],"pos":[17172,17274],"yaml":true},{"content":"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property to access the original non-key field values for the updated record. For example, you can use these values to keep a log of updated records. Some data source controls, such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.ObjectDataSource> controls, support conflict detection (optimistic concurrency checking). When the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property of one of these controls is set to `ConflictOptions.CompareAllValues`, the original values of the record are compared against the values in the data source before an update operation is performed. If a record has been modified by another user concurrently, the record is not updated.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property does not contain key fields. If you allow the user to update the values of the key fields, the original key field values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.  \n  \n The <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.  \n  \n> [!NOTE]\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","nodes":[{"pos":[0,808],"content":"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property to access the original non-key field values for the updated record. For example, you can use these values to keep a log of updated records. Some data source controls, such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.ObjectDataSource> controls, support conflict detection (optimistic concurrency checking). When the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property of one of these controls is set to `ConflictOptions.CompareAllValues`, the original values of the record are compared against the values in the data source before an update operation is performed. If a record has been modified by another user concurrently, the record is not updated.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A&gt;</ph> property to access the original non-key field values for the updated record.","pos":[0,154],"source":"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property to access the original non-key field values for the updated record."},{"content":"For example, you can use these values to keep a log of updated records.","pos":[155,226]},{"content":"Some data source controls, such as the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls, support conflict detection (optimistic concurrency checking).","pos":[227,438],"source":" Some data source controls, such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.ObjectDataSource> controls, support conflict detection (optimistic concurrency checking)."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property of one of these controls is set to <ph id=\"ph2\">`ConflictOptions.CompareAllValues`</ph>, the original values of the record are compared against the values in the data source before an update operation is performed.","pos":[439,721],"source":" When the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property of one of these controls is set to `ConflictOptions.CompareAllValues`, the original values of the record are compared against the values in the data source before an update operation is performed."},{"content":"If a record has been modified by another user concurrently, the record is not updated.","pos":[722,808]}]},{"pos":[816,1240],"content":"[!NOTE]\n The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property does not contain key fields. If you allow the user to update the values of the key fields, the original key field values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property does not contain key fields. If you allow the user to update the values of the key fields, the original key field values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.","pos":[8,422],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A&gt;</ph> property does not contain key fields.","pos":[1,112],"source":" The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property does not contain key fields."},{"content":"If you allow the user to update the values of the key fields, the original key field values are stored in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A&gt;</ph> property.","pos":[113,297],"source":" If you allow the user to update the values of the key fields, the original key field values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property."},{"content":"The updated values are stored in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A&gt;</ph> property.","pos":[298,414],"source":" The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property."}]}]},{"pos":[1247,2028],"content":"The <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.","pos":[0,781],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A&gt;</ph> property returns an <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object that implements the <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName&gt;</ph> interface.","pos":[0,270],"source":"The <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object contains <ph id=\"ph2\">&lt;xref:System.Collections.DictionaryEntry?displayProperty=fullName&gt;</ph> objects that represent the fields of the updated record.","pos":[271,470],"source":" The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record."},{"content":"To access the field names, use the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Keys%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object.","pos":[471,649],"source":" To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object."},{"content":"Similarly, you can access the field values by using the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary.Values%2A&gt;</ph> property.","pos":[650,781],"source":" Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property."}]}]},{"pos":[2036,2346],"content":"[!NOTE]\n As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","leadings":["","> "],"nodes":[{"content":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.","pos":[8,308],"nodes":[{"content":"As a shortcut, you can also use the indexer of the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.OrderedDictionary&gt;</ph> object to access the field values directly.","pos":[1,151],"source":" As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly."},{"content":"Data source controls that rely on the field order (such as <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;</ph>) can access field values only by index.","pos":[152,300],"source":" Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index."}]}]}],"pos":[17285,19642],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the original non-key field name/value pairs for the record to update.","nodes":[{"pos":[0,173],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.IOrderedDictionary\"&gt;&lt;/xref&gt;</ph> that contains a dictionary of the original non-key field name/value pairs for the record to update.","source":"An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the original non-key field name/value pairs for the record to update."}],"pos":[20451,20625],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  commentId: T:System.Web.UI.WebControls.FormViewUpdateEventArgs\n  id: FormViewUpdateEventArgs\n  children:\n  - System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)\n  - System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument\n  - System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys\n  - System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues\n  - System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues\n  langs:\n  - csharp\n  name: FormViewUpdateEventArgs\n  nameWithType: FormViewUpdateEventArgs\n  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Provides data for the <xref href=\"System.Web.UI.WebControls.FormView.ItemUpdating\"></xref> event.\n  remarks: \"The <xref:System.Web.UI.WebControls.FormView> control raises the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event when an Update button (a button with its `CommandName` property set to \\\"Update\\\") within the control is clicked, but before the <xref:System.Web.UI.WebControls.FormView> control updates the record. This allows you to provide an event-handling method that performs a custom routine, such as HTML encoding or validating the values of a record before updating it in the data source, whenever this event occurs.  \\n  \\n A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> object is passed to the event-handling method, which allows you to determine the value of an optional command argument sent to the <xref:System.Web.UI.WebControls.FormView> control and to indicate whether the update operation should be canceled. To determine the value of the command argument, use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> property. To cancel the update operation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`. If you need to access the original key field values for the record being updated, use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property. The original non-key field values can be accessed by using the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property. Updated values (which include updated key field values, if you allow the user to edit key fields) are accessed using the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  \\n  \\n For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class, see the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A> constructor.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event to validate the values entered by the user.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: 'public class FormViewUpdateEventArgs : System.ComponentModel.CancelEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.ComponentModel.CancelEventArgs\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.CancelEventArgs.Cancel\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)\n  commentId: M:System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  langs:\n  - csharp\n  name: FormViewUpdateEventArgs(Object)\n  nameWithType: FormViewUpdateEventArgs.FormViewUpdateEventArgs(Object)\n  fullName: FormViewUpdateEventArgs.FormViewUpdateEventArgs(Object)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.FormViewUpdateEventArgs\"></xref> class.\n  remarks: \"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class.  \\n  \\n The following table shows the initial property value for an instance of the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> class.  \\n  \\n|Property|Initial Value|  \\n|--------------|-------------------|  \\n|<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>|The value of the `commandArgument` parameter.|  \\n  \\n> [!NOTE]\\n>  This constructor is used primarily by control developers when raising events.\"\n  syntax:\n    content: public FormViewUpdateEventArgs (object commandArgument);\n    parameters:\n    - id: commandArgument\n      type: System.Object\n      description: An optional command argument passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control.\n  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument\n  commentId: P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument\n  id: CommandArgument\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  langs:\n  - csharp\n  name: CommandArgument\n  nameWithType: FormViewUpdateEventArgs.CommandArgument\n  fullName: FormViewUpdateEventArgs.CommandArgument\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the command argument for the update operation passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control.\n  remarks: When you create an Update button for one of the templates in a <xref:System.Web.UI.WebControls.FormView> control, you can optionally specify a command argument for the button by using the <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName> property. The command argument usually contains any optional information you want to accompany the update command, such as the value for the key field. The <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> property is provided as a convenient way to determine the value of the Update button's command argument.\n  syntax:\n    content: public object CommandArgument { get; }\n    return:\n      type: System.Object\n      description: The command argument for the update operation passed to the <xref href=\"System.Web.UI.WebControls.FormView\"></xref> control.\n  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys\n  commentId: P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys\n  id: Keys\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: FormViewUpdateEventArgs.Keys\n  fullName: FormViewUpdateEventArgs.Keys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the original key field name/value pairs for the record to update.\n  remarks: \"The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original values of the key fields listed in the <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> property of a <xref:System.Web.UI.WebControls.FormView> control. Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property to access the original values of the key fields for the record to update. For example, you can use these values to keep a log of updated records.  \\n  \\n> [!NOTE]\\n>  If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.  \\n  \\n The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property to access the value of the key field for the record being updated.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the original key field name/value pairs for the record to update.\n  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues\n  commentId: P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues\n  id: NewValues\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  langs:\n  - csharp\n  name: NewValues\n  nameWithType: FormViewUpdateEventArgs.NewValues\n  fullName: FormViewUpdateEventArgs.NewValues\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the new field name/value pairs for the record to update.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property to access the new field values for the record to update. For example, you can use these values to keep a log of updated records.  \\n  \\n> [!NOTE]\\n>  If you allow the user to update the values of the key fields, the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property contains the original key field values. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.  \\n  \\n The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property to access the new values entered by the user for the non-key fields of the record being updated.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the new field name/value pairs for the record to update.\n  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues\n  commentId: P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues\n  id: OldValues\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  langs:\n  - csharp\n  name: OldValues\n  nameWithType: FormViewUpdateEventArgs.OldValues\n  fullName: FormViewUpdateEventArgs.OldValues\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a dictionary that contains the original non-key field name/value pairs for the record to update.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property to access the original non-key field values for the updated record. For example, you can use these values to keep a log of updated records. Some data source controls, such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.ObjectDataSource> controls, support conflict detection (optimistic concurrency checking). When the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property of one of these controls is set to `ConflictOptions.CompareAllValues`, the original values of the record are compared against the values in the data source before an update operation is performed. If a record has been modified by another user concurrently, the record is not updated.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property does not contain key fields. If you allow the user to update the values of the key fields, the original key field values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> property. The updated values are stored in the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> property.  \\n  \\n The <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> property returns an <xref:System.Collections.Specialized.OrderedDictionary> object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> interface. The <xref:System.Collections.Specialized.OrderedDictionary> object contains <xref:System.Collections.DictionaryEntry?displayProperty=fullName> objects that represent the fields of the updated record. To access the field names, use the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> property of the <xref:System.Collections.Specialized.OrderedDictionary> object. Similarly, you can access the field values by using the <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> property.  \\n  \\n> [!NOTE]\\n>  As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.OrderedDictionary> object to access the field values directly. Data source controls that rely on the field order (such as <xref:System.Web.UI.WebControls.AccessDataSource>) can access field values only by index.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> property to access the original values of the non-key fields for the record being updated.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }\n    return:\n      type: System.Collections.Specialized.IOrderedDictionary\n      description: An <xref href=\"System.Collections.Specialized.IOrderedDictionary\"></xref> that contains a dictionary of the original non-key field name/value pairs for the record to update.\n  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: FormViewUpdateEventArgs(Object)\n  nameWithType: FormViewUpdateEventArgs.FormViewUpdateEventArgs(Object)\n  fullName: FormViewUpdateEventArgs.FormViewUpdateEventArgs(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: CommandArgument\n  nameWithType: FormViewUpdateEventArgs.CommandArgument\n  fullName: FormViewUpdateEventArgs.CommandArgument\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: Keys\n  nameWithType: FormViewUpdateEventArgs.Keys\n  fullName: FormViewUpdateEventArgs.Keys\n- uid: System.Collections.Specialized.IOrderedDictionary\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: IOrderedDictionary\n  nameWithType: IOrderedDictionary\n  fullName: System.Collections.Specialized.IOrderedDictionary\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: NewValues\n  nameWithType: FormViewUpdateEventArgs.NewValues\n  fullName: FormViewUpdateEventArgs.NewValues\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: OldValues\n  nameWithType: FormViewUpdateEventArgs.OldValues\n  fullName: FormViewUpdateEventArgs.OldValues\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor*\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: FormViewUpdateEventArgs\n  nameWithType: FormViewUpdateEventArgs.FormViewUpdateEventArgs\n  fullName: FormViewUpdateEventArgs.FormViewUpdateEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument*\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: CommandArgument\n  nameWithType: FormViewUpdateEventArgs.CommandArgument\n  fullName: FormViewUpdateEventArgs.CommandArgument\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys*\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: Keys\n  nameWithType: FormViewUpdateEventArgs.Keys\n  fullName: FormViewUpdateEventArgs.Keys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues*\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: NewValues\n  nameWithType: FormViewUpdateEventArgs.NewValues\n  fullName: FormViewUpdateEventArgs.NewValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues*\n  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs\n  isExternal: false\n  name: OldValues\n  nameWithType: FormViewUpdateEventArgs.OldValues\n  fullName: FormViewUpdateEventArgs.OldValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FormViewUpdateEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.ComponentModel.CancelEventArgs.Cancel\n  parent: System.ComponentModel.CancelEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: CancelEventArgs.Cancel\n  fullName: CancelEventArgs.Cancel\n"}