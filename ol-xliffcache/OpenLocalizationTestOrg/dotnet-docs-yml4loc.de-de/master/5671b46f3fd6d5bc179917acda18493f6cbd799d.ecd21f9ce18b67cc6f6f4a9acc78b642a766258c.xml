{"nodes":[{"content":"Defines a way to expose a custom <xref href=\"System.Runtime.Caching.FileChangeMonitor\"></xref> object to a cache implementation.","nodes":[{"pos":[0,128],"content":"Defines a way to expose a custom <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.FileChangeMonitor\"&gt;&lt;/xref&gt;</ph> object to a cache implementation.","source":"Defines a way to expose a custom <xref href=\"System.Runtime.Caching.FileChangeMonitor\"></xref> object to a cache implementation."}],"pos":[817,946],"yaml":true},{"content":"In ASP.NET, the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface provides access to internal file-change notification management.  \n  \n The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface is used internally by the <xref:System.Runtime.Caching.HostFileChangeMonitor> class.  \n  \n When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property. The <xref:System.Runtime.Caching.HostFileChangeMonitor> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.  \n  \n In non-ASP.NET applications, there is no host environment that implements a custom <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface. As a result, the <xref:System.Runtime.Caching.HostFileChangeMonitor> class uses the <xref:System.IO.FileSystemWatcher> class of the CLR.","nodes":[{"pos":[0,158],"content":"In ASP.NET, the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface provides access to internal file-change notification management.","nodes":[{"content":"In ASP.NET, the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface provides access to internal file-change notification management.","pos":[0,158],"source":"In ASP.NET, the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface provides access to internal file-change notification management."}]},{"pos":[165,331],"content":"The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface is used internally by the <xref:System.Runtime.Caching.HostFileChangeMonitor> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface is used internally by the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> class.","pos":[0,166],"source":"The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface is used internally by the <xref:System.Runtime.Caching.HostFileChangeMonitor> class."}]},{"pos":[338,771],"content":"When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property. The <xref:System.Runtime.Caching.HostFileChangeMonitor> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.","nodes":[{"content":"When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property. The <xref:System.Runtime.Caching.HostFileChangeMonitor> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.","pos":[0,433],"nodes":[{"content":"When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface through the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property.","pos":[0,238],"source":"When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.","pos":[239,433],"source":" The <xref:System.Runtime.Caching.HostFileChangeMonitor> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification."}]}]},{"pos":[778,1076],"content":"In non-ASP.NET applications, there is no host environment that implements a custom <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface. As a result, the <xref:System.Runtime.Caching.HostFileChangeMonitor> class uses the <xref:System.IO.FileSystemWatcher> class of the CLR.","nodes":[{"content":"In non-ASP.NET applications, there is no host environment that implements a custom <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface. As a result, the <xref:System.Runtime.Caching.HostFileChangeMonitor> class uses the <xref:System.IO.FileSystemWatcher> class of the CLR.","pos":[0,298],"nodes":[{"content":"In non-ASP.NET applications, there is no host environment that implements a custom <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface.","pos":[0,161],"source":"In non-ASP.NET applications, there is no host environment that implements a custom <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface."},{"content":"As a result, the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.HostFileChangeMonitor&gt;</ph> class uses the <ph id=\"ph2\">&lt;xref:System.IO.FileSystemWatcher&gt;</ph> class of the CLR.","pos":[162,298],"source":" As a result, the <xref:System.Runtime.Caching.HostFileChangeMonitor> class uses the <xref:System.IO.FileSystemWatcher> class of the CLR."}]}]}],"pos":[957,2042],"yaml":true,"extradata":"MT"},{"content":"Registers a file path to monitor with the host environment.","nodes":[{"pos":[0,59],"content":"Registers a file path to monitor with the host environment.","nodes":[{"content":"Registers a file path to monitor with the host environment.","pos":[0,59]}]}],"pos":[3727,3787],"yaml":true},{"content":"This method is used by custom cache objects and custom change monitors that implement the host environment's <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register file paths for monitoring with the host environment. The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> method is called by implementers of the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register a file or directory for change monitoring.","nodes":[{"pos":[0,533],"content":"This method is used by custom cache objects and custom change monitors that implement the host environment's <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register file paths for monitoring with the host environment. The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> method is called by implementers of the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register a file or directory for change monitoring.","nodes":[{"content":"This method is used by custom cache objects and custom change monitors that implement the host environment's <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register file paths for monitoring with the host environment. The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> method is called by implementers of the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register a file or directory for change monitoring.","pos":[0,533],"nodes":[{"content":"This method is used by custom cache objects and custom change monitors that implement the host environment's <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface in order to register file paths for monitoring with the host environment.","pos":[0,260],"source":"This method is used by custom cache objects and custom change monitors that implement the host environment's <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register file paths for monitoring with the host environment."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A&gt;</ph> method is called by implementers of the <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;</ph> interface in order to register a file or directory for change monitoring.","pos":[261,533],"source":" The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> method is called by implementers of the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register a file or directory for change monitoring."}]}]}],"pos":[3798,4332],"yaml":true,"extradata":"MT"},{"content":"The fully qualified physical path of a directory or file to monitor for changes.","nodes":[{"pos":[0,80],"content":"The fully qualified physical path of a directory or file to monitor for changes.","nodes":[{"content":"The fully qualified physical path of a directory or file to monitor for changes.","pos":[0,80]}]}],"pos":[4613,4694],"yaml":true},{"content":"A reference to a method that implements the <xref href=\"System.Runtime.Caching.OnChangedCallback\"></xref> delegate. When the monitored file or directory changes, the host environment's implementation of the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\"></xref> interface raises an event by calling the <xref href=\"System.Runtime.Caching.OnChangedCallback\"></xref> class.","nodes":[{"pos":[0,398],"content":"A reference to a method that implements the <xref href=\"System.Runtime.Caching.OnChangedCallback\"></xref> delegate. When the monitored file or directory changes, the host environment's implementation of the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\"></xref> interface raises an event by calling the <xref href=\"System.Runtime.Caching.OnChangedCallback\"></xref> class.","nodes":[{"content":"A reference to a method that implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.OnChangedCallback\"&gt;&lt;/xref&gt;</ph> delegate.","pos":[0,115],"source":"A reference to a method that implements the <xref href=\"System.Runtime.Caching.OnChangedCallback\"></xref> delegate."},{"content":"When the monitored file or directory changes, the host environment's implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\"&gt;&lt;/xref&gt;</ph> interface raises an event by calling the <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Caching.OnChangedCallback\"&gt;&lt;/xref&gt;</ph> class.","pos":[116,398],"source":" When the monitored file or directory changes, the host environment's implementation of the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\"></xref> interface raises an event by calling the <xref href=\"System.Runtime.Caching.OnChangedCallback\"></xref> class."}]}],"pos":[4794,5193],"yaml":true},{"content":"The state that is supplied by the host environment. Cache implementations and custom change monitors should treat the state value as opaque. However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\"></xref> method.","nodes":[{"pos":[0,395],"content":"The state that is supplied by the host environment. Cache implementations and custom change monitors should treat the state value as opaque. However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\"></xref> method.","nodes":[{"content":"The state that is supplied by the host environment.","pos":[0,51]},{"content":"Cache implementations and custom change monitors should treat the state value as opaque.","pos":[52,140]},{"content":"However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","pos":[141,395],"source":" However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\"></xref> method."}]}],"pos":[5254,5650],"yaml":true},{"content":"When this method returns, contains the last date and time that a write operation occurred on <code>filePath</code>. This parameter is passed uninitialized. This parameter is returned from the host environment.","nodes":[{"pos":[0,209],"content":"When this method returns, contains the last date and time that a write operation occurred on <code>filePath</code>. This parameter is passed uninitialized. This parameter is returned from the host environment.","nodes":[{"content":"When this method returns, contains the last date and time that a write operation occurred on <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filePath</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,115],"source":"When this method returns, contains the last date and time that a write operation occurred on <code>filePath</code>."},{"content":"This parameter is passed uninitialized.","pos":[116,155]},{"content":"This parameter is returned from the host environment.","pos":[156,209]}]}],"pos":[5727,5937],"yaml":true},{"content":"When this method returns, contains the total size of the monitored <code>filePath</code>. This parameter is passed uninitialized. This parameter is returned from the host environment.","nodes":[{"pos":[0,183],"content":"When this method returns, contains the total size of the monitored <code>filePath</code>. This parameter is passed uninitialized. This parameter is returned from the host environment.","nodes":[{"content":"When this method returns, contains the total size of the monitored <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filePath</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,89],"source":"When this method returns, contains the total size of the monitored <code>filePath</code>."},{"content":"This parameter is passed uninitialized.","pos":[90,129]},{"content":"This parameter is returned from the host environment.","pos":[130,183]}]}],"pos":[6000,6184],"yaml":true},{"content":"Ends change monitoring.","nodes":[{"pos":[0,23],"content":"Ends change monitoring.","nodes":[{"content":"Ends change monitoring.","pos":[0,23]}]}],"pos":[7520,7544],"yaml":true},{"content":"The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories.","nodes":[{"pos":[0,259],"content":"The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A&gt;</ph> method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories.","pos":[0,259],"source":"The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories."}]}],"pos":[7555,7815],"yaml":true,"extradata":"MT"},{"content":"The path of the file or folder to stop monitoring. This should match a file path value that was passed in an earlier call to the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"></xref> method.","nodes":[{"pos":[0,342],"content":"The path of the file or folder to stop monitoring. This should match a file path value that was passed in an earlier call to the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"></xref> method.","nodes":[{"content":"The path of the file or folder to stop monitoring.","pos":[0,50]},{"content":"This should match a file path value that was passed in an earlier call to the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"&gt;&lt;/xref&gt;</ph> method.","pos":[51,342],"source":" This should match a file path value that was passed in an earlier call to the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"></xref> method."}]}],"pos":[7978,8321],"yaml":true},{"content":"The state information that was originally supplied by the host environment during an earlier call to the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"></xref> method.","nodes":[{"pos":[0,318],"content":"The state information that was originally supplied by the host environment during an earlier call to the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"&gt;&lt;/xref&gt;</ph> method.","source":"The state information that was originally supplied by the host environment during an earlier call to the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"></xref> method."}],"pos":[8382,8701],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  commentId: T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  id: IFileChangeNotificationSystem\n  children:\n  - System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\n  - System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\n  langs:\n  - csharp\n  name: IFileChangeNotificationSystem\n  nameWithType: IFileChangeNotificationSystem\n  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  type: Interface\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Hosting\n  summary: Defines a way to expose a custom <xref href=\"System.Runtime.Caching.FileChangeMonitor\"></xref> object to a cache implementation.\n  remarks: \"In ASP.NET, the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface provides access to internal file-change notification management.  \\n  \\n The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface is used internally by the <xref:System.Runtime.Caching.HostFileChangeMonitor> class.  \\n  \\n When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property. The <xref:System.Runtime.Caching.HostFileChangeMonitor> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.  \\n  \\n In non-ASP.NET applications, there is no host environment that implements a custom <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface. As a result, the <xref:System.Runtime.Caching.HostFileChangeMonitor> class uses the <xref:System.IO.FileSystemWatcher> class of the CLR.\"\n  syntax:\n    content: public interface IFileChangeNotificationSystem\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\n- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\n  commentId: M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\n  id: StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\n  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  langs:\n  - csharp\n  name: StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)\n  nameWithType: IFileChangeNotificationSystem.StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)\n  fullName: IFileChangeNotificationSystem.StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Hosting\n  summary: Registers a file path to monitor with the host environment.\n  remarks: This method is used by custom cache objects and custom change monitors that implement the host environment's <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register file paths for monitoring with the host environment. The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> method is called by implementers of the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register a file or directory for change monitoring.\n  syntax:\n    content: public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);\n    parameters:\n    - id: filePath\n      type: System.String\n      description: The fully qualified physical path of a directory or file to monitor for changes.\n    - id: onChangedCallback\n      type: System.Runtime.Caching.OnChangedCallback\n      description: A reference to a method that implements the <xref href=\"System.Runtime.Caching.OnChangedCallback\"></xref> delegate. When the monitored file or directory changes, the host environment's implementation of the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\"></xref> interface raises an event by calling the <xref href=\"System.Runtime.Caching.OnChangedCallback\"></xref> class.\n    - id: state\n      type: System.Object\n      description: The state that is supplied by the host environment. Cache implementations and custom change monitors should treat the state value as opaque. However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\"></xref> method.\n    - id: lastWriteTime\n      type: System.DateTimeOffset\n      description: When this method returns, contains the last date and time that a write operation occurred on <code>filePath</code>. This parameter is passed uninitialized. This parameter is returned from the host environment.\n    - id: fileSize\n      type: System.Int64\n      description: When this method returns, contains the total size of the monitored <code>filePath</code>. This parameter is passed uninitialized. This parameter is returned from the host environment.\n  overload: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\n- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\n  commentId: M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\n  id: StopMonitoring(System.String,System.Object)\n  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  langs:\n  - csharp\n  name: StopMonitoring(String, Object)\n  nameWithType: IFileChangeNotificationSystem.StopMonitoring(String, Object)\n  fullName: IFileChangeNotificationSystem.StopMonitoring(String, Object)\n  type: Method\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Hosting\n  summary: Ends change monitoring.\n  remarks: The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories.\n  syntax:\n    content: public void StopMonitoring (string filePath, object state);\n    parameters:\n    - id: filePath\n      type: System.String\n      description: The path of the file or folder to stop monitoring. This should match a file path value that was passed in an earlier call to the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"></xref> method.\n    - id: state\n      type: System.Object\n      description: The state information that was originally supplied by the host environment during an earlier call to the <xref href=\"System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\"></xref> method.\n  overload: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)\n  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  isExternal: false\n  name: StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)\n  nameWithType: IFileChangeNotificationSystem.StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)\n  fullName: IFileChangeNotificationSystem.StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Caching.OnChangedCallback\n  parent: System.Runtime.Caching\n  isExternal: false\n  name: OnChangedCallback\n  nameWithType: OnChangedCallback\n  fullName: System.Runtime.Caching.OnChangedCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)\n  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  isExternal: false\n  name: StopMonitoring(String, Object)\n  nameWithType: IFileChangeNotificationSystem.StopMonitoring(String, Object)\n  fullName: IFileChangeNotificationSystem.StopMonitoring(String, Object)\n- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*\n  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  isExternal: false\n  name: StartMonitoring\n  nameWithType: IFileChangeNotificationSystem.StartMonitoring\n  fullName: IFileChangeNotificationSystem.StartMonitoring\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml\n- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*\n  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem\n  isExternal: false\n  name: StopMonitoring\n  nameWithType: IFileChangeNotificationSystem.StopMonitoring\n  fullName: IFileChangeNotificationSystem.StopMonitoring\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml\n"}