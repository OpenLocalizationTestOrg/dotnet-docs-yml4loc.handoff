{"nodes":[{"content":"Represents a method within a symbol store.","nodes":[{"pos":[0,42],"content":"Represents a method within a symbol store.","nodes":[{"content":"Represents a method within a symbol store.","pos":[0,42]}]}],"pos":[1443,1486],"yaml":true},{"content":"The <xref:System.Diagnostics.SymbolStore.ISymbolMethod> interface provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information. Use it with the <xref:System.Reflection> classes to read the type-related attributes of a method.  \n  \n> [!NOTE]\n>  This interface is the managed counterpart of the `ISymUnmanagedMethod` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","nodes":[{"pos":[0,298],"content":"The <xref:System.Diagnostics.SymbolStore.ISymbolMethod> interface provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information. Use it with the <xref:System.Reflection> classes to read the type-related attributes of a method.","nodes":[{"content":"The <xref:System.Diagnostics.SymbolStore.ISymbolMethod> interface provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information. Use it with the <xref:System.Reflection> classes to read the type-related attributes of a method.","pos":[0,298],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.ISymbolMethod&gt;</ph> interface provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information.","pos":[0,200],"source":"The <xref:System.Diagnostics.SymbolStore.ISymbolMethod> interface provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information."},{"content":"Use it with the <ph id=\"ph1\">&lt;xref:System.Reflection&gt;</ph> classes to read the type-related attributes of a method.","pos":[201,298],"source":" Use it with the <xref:System.Reflection> classes to read the type-related attributes of a method."}]}]},{"pos":[306,519],"content":"[!NOTE]\n This interface is the managed counterpart of the `ISymUnmanagedMethod` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","leadings":["","> "],"nodes":[{"content":"This interface is the managed counterpart of the <ph id=\"ph1\">`ISymUnmanagedMethod`</ph> interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.","pos":[9,211],"source":" This interface is the managed counterpart of the `ISymUnmanagedMethod` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information."}]}],"pos":[1497,2022],"yaml":true,"extradata":"MT"},{"content":"Gets the namespace that the current method is defined within.","nodes":[{"pos":[0,61],"content":"Gets the namespace that the current method is defined within.","nodes":[{"content":"Gets the namespace that the current method is defined within.","pos":[0,61]}]}],"pos":[3523,3585],"yaml":true},{"content":"The namespace that the current method is defined within.","nodes":[{"pos":[0,56],"content":"The namespace that the current method is defined within.","nodes":[{"content":"The namespace that the current method is defined within.","pos":[0,56]}]}],"pos":[3790,3847],"yaml":true},{"content":"Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.","nodes":[{"pos":[0,116],"content":"Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.","nodes":[{"content":"Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.","pos":[0,116]}]}],"pos":[5452,5569],"yaml":true},{"content":"The parameters are returned in the order that they are defined within the signature of the method.","nodes":[{"pos":[0,98],"content":"The parameters are returned in the order that they are defined within the signature of the method.","nodes":[{"content":"The parameters are returned in the order that they are defined within the signature of the method.","pos":[0,98]}]}],"pos":[5580,5679],"yaml":true,"extradata":"MT"},{"content":"The document for which the offset is requested.","nodes":[{"pos":[0,47],"content":"The document for which the offset is requested.","nodes":[{"content":"The document for which the offset is requested.","pos":[0,47]}]}],"pos":[5917,5965],"yaml":true},{"content":"The document line corresponding to the offset.","nodes":[{"pos":[0,46],"content":"The document line corresponding to the offset.","nodes":[{"content":"The document line corresponding to the offset.","pos":[0,46]}]}],"pos":[6024,6071],"yaml":true},{"content":"The document column corresponding to the offset.","nodes":[{"pos":[0,48],"content":"The document column corresponding to the offset.","nodes":[{"content":"The document column corresponding to the offset.","pos":[0,48]}]}],"pos":[6132,6181],"yaml":true},{"content":"The offset within the specified document.","nodes":[{"pos":[0,41],"content":"The offset within the specified document.","nodes":[{"content":"The offset within the specified document.","pos":[0,41]}]}],"pos":[6237,6279],"yaml":true},{"content":"Gets the parameters for the current method.","nodes":[{"pos":[0,43],"content":"Gets the parameters for the current method.","nodes":[{"content":"Gets the parameters for the current method.","pos":[0,43]}]}],"pos":[7596,7640],"yaml":true},{"content":"The parameters are returned in the order that they are defined within the signature of the method.","nodes":[{"pos":[0,98],"content":"The parameters are returned in the order that they are defined within the signature of the method.","nodes":[{"content":"The parameters are returned in the order that they are defined within the signature of the method.","pos":[0,98]}]}],"pos":[7651,7750],"yaml":true,"extradata":"MT"},{"content":"The array of parameters for the current method.","nodes":[{"pos":[0,47],"content":"The array of parameters for the current method.","nodes":[{"content":"The array of parameters for the current method.","pos":[0,47]}]}],"pos":[7958,8006],"yaml":true},{"content":"Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) that a given position covers within this method.","nodes":[{"pos":[0,164],"content":"Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) that a given position covers within this method.","nodes":[{"content":"Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) that a given position covers within this method.","pos":[0,164]}]}],"pos":[9612,9777],"yaml":true},{"content":"The array is an array of integers in the format {{start1, end1}, {start2, end2}...}. The number of range pairs is the length of the array divided by 2.","nodes":[{"pos":[0,151],"content":"The array is an array of integers in the format {{start1, end1}, {start2, end2}...}. The number of range pairs is the length of the array divided by 2.","nodes":[{"content":"The array is an array of integers in the format {{start1, end1}, {start2, end2}...}. The number of range pairs is the length of the array divided by 2.","pos":[0,151],"nodes":[{"content":"The array is an array of integers in the format {{start1, end1}, {start2, end2}...}.","pos":[0,84]},{"content":"The number of range pairs is the length of the array divided by 2.","pos":[85,151]}]}]}],"pos":[9788,9940],"yaml":true,"extradata":"MT"},{"content":"The document for which the offset is requested.","nodes":[{"pos":[0,47],"content":"The document for which the offset is requested.","nodes":[{"content":"The document for which the offset is requested.","pos":[0,47]}]}],"pos":[10180,10228],"yaml":true},{"content":"The document line corresponding to the ranges.","nodes":[{"pos":[0,46],"content":"The document line corresponding to the ranges.","nodes":[{"content":"The document line corresponding to the ranges.","pos":[0,46]}]}],"pos":[10287,10334],"yaml":true},{"content":"The document column corresponding to the ranges.","nodes":[{"pos":[0,48],"content":"The document column corresponding to the ranges.","nodes":[{"content":"The document column corresponding to the ranges.","pos":[0,48]}]}],"pos":[10395,10444],"yaml":true},{"content":"An array of start and end offset pairs.","nodes":[{"pos":[0,39],"content":"An array of start and end offset pairs.","nodes":[{"content":"An array of start and end offset pairs.","pos":[0,39]}]}],"pos":[10502,10542],"yaml":true},{"content":"Returns the most enclosing lexical scope when given an offset within a method.","nodes":[{"pos":[0,78],"content":"Returns the most enclosing lexical scope when given an offset within a method.","nodes":[{"content":"Returns the most enclosing lexical scope when given an offset within a method.","pos":[0,78]}]}],"pos":[11886,11965],"yaml":true},{"content":"You can use the <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> method to start local variable searches.","nodes":[{"pos":[0,120],"content":"You can use the <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> method to start local variable searches.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A&gt;</ph> method to start local variable searches.","pos":[0,120],"source":"You can use the <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> method to start local variable searches."}]}],"pos":[11976,12097],"yaml":true,"extradata":"MT"},{"content":"The byte offset within the method of the lexical scope.","nodes":[{"pos":[0,55],"content":"The byte offset within the method of the lexical scope.","nodes":[{"content":"The byte offset within the method of the lexical scope.","pos":[0,55]}]}],"pos":[12271,12327],"yaml":true},{"content":"The most enclosing lexical scope for the given byte offset within the method.","nodes":[{"pos":[0,77],"content":"The most enclosing lexical scope for the given byte offset within the method.","nodes":[{"content":"The most enclosing lexical scope for the given byte offset within the method.","pos":[0,77]}]}],"pos":[12414,12492],"yaml":true},{"content":"Gets the sequence points for the current method.","nodes":[{"pos":[0,48],"content":"Gets the sequence points for the current method.","nodes":[{"content":"Gets the sequence points for the current method.","pos":[0,48]}]}],"pos":[14393,14442],"yaml":true},{"content":"The sequence points are sorted by offset and are for all documents in the method. Use <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> to retrieve the count of all sequence points and create arrays of the proper size.  \n  \n <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> verifies the size of each array and places the sequence point information into each. If any array is `null`, the data for that array is not returned.","nodes":[{"pos":[0,242],"content":"The sequence points are sorted by offset and are for all documents in the method. Use <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> to retrieve the count of all sequence points and create arrays of the proper size.","nodes":[{"content":"The sequence points are sorted by offset and are for all documents in the method. Use <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> to retrieve the count of all sequence points and create arrays of the proper size.","pos":[0,242],"nodes":[{"content":"The sequence points are sorted by offset and are for all documents in the method.","pos":[0,81]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A&gt;</ph> to retrieve the count of all sequence points and create arrays of the proper size.","pos":[82,242],"source":" Use <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> to retrieve the count of all sequence points and create arrays of the proper size."}]}]},{"pos":[249,471],"content":"<xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> verifies the size of each array and places the sequence point information into each. If any array is `null`, the data for that array is not returned.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A&gt;</ph> verifies the size of each array and places the sequence point information into each.","pos":[0,157],"source":"<xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> verifies the size of each array and places the sequence point information into each."},{"content":"If any array is <ph id=\"ph1\">`null`</ph>, the data for that array is not returned.","pos":[158,222],"source":" If any array is `null`, the data for that array is not returned."}]}],"pos":[14453,14929],"yaml":true,"extradata":"MT"},{"content":"The array of byte offsets from the beginning of the method for the sequence points.","nodes":[{"pos":[0,83],"content":"The array of byte offsets from the beginning of the method for the sequence points.","nodes":[{"content":"The array of byte offsets from the beginning of the method for the sequence points.","pos":[0,83]}]}],"pos":[15201,15285],"yaml":true},{"content":"The array of documents in which the sequence points are located.","nodes":[{"pos":[0,64],"content":"The array of documents in which the sequence points are located.","nodes":[{"content":"The array of documents in which the sequence points are located.","pos":[0,64]}]}],"pos":[15385,15450],"yaml":true},{"content":"The array of lines in the documents at which the sequence points are located.","nodes":[{"pos":[0,77],"content":"The array of lines in the documents at which the sequence points are located.","nodes":[{"content":"The array of lines in the documents at which the sequence points are located.","pos":[0,77]}]}],"pos":[15512,15590],"yaml":true},{"content":"The array of columns in the documents at which the sequence points are located.","nodes":[{"pos":[0,79],"content":"The array of columns in the documents at which the sequence points are located.","nodes":[{"content":"The array of columns in the documents at which the sequence points are located.","pos":[0,79]}]}],"pos":[15654,15734],"yaml":true},{"content":"The array of lines in the documents at which the sequence points end.","nodes":[{"pos":[0,69],"content":"The array of lines in the documents at which the sequence points end.","nodes":[{"content":"The array of lines in the documents at which the sequence points end.","pos":[0,69]}]}],"pos":[15799,15869],"yaml":true},{"content":"The array of columns in the documents at which the sequence points end.","nodes":[{"pos":[0,71],"content":"The array of columns in the documents at which the sequence points end.","nodes":[{"content":"The array of columns in the documents at which the sequence points end.","pos":[0,71]}]}],"pos":[15936,16008],"yaml":true},{"content":"Gets the start and end positions for the source of the current method.","nodes":[{"pos":[0,70],"content":"Gets the start and end positions for the source of the current method.","nodes":[{"content":"Gets the start and end positions for the source of the current method.","pos":[0,70]}]}],"pos":[17702,17773],"yaml":true},{"content":"The first array position is the start, and the second is the end.","nodes":[{"pos":[0,65],"content":"The first array position is the start, and the second is the end.","nodes":[{"content":"The first array position is the start, and the second is the end.","pos":[0,65]}]}],"pos":[17784,17850],"yaml":true,"extradata":"MT"},{"content":"The starting and ending source documents.","nodes":[{"pos":[0,41],"content":"The starting and ending source documents.","nodes":[{"content":"The starting and ending source documents.","pos":[0,41]}]}],"pos":[18099,18141],"yaml":true},{"content":"The starting and ending lines in the corresponding source documents.","nodes":[{"pos":[0,68],"content":"The starting and ending lines in the corresponding source documents.","nodes":[{"content":"The starting and ending lines in the corresponding source documents.","pos":[0,68]}]}],"pos":[18203,18272],"yaml":true},{"content":"The starting and ending columns in the corresponding source documents.","nodes":[{"pos":[0,70],"content":"The starting and ending columns in the corresponding source documents.","nodes":[{"content":"The starting and ending columns in the corresponding source documents.","pos":[0,70]}]}],"pos":[18336,18407],"yaml":true},{"content":"`true` if the positions were defined; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the positions were defined; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the positions were defined; otherwise, `false`."}],"pos":[18465,18525],"yaml":true},{"content":"Gets the root lexical scope for the current method. This scope encloses the entire method.","nodes":[{"pos":[0,90],"content":"Gets the root lexical scope for the current method. This scope encloses the entire method.","nodes":[{"content":"Gets the root lexical scope for the current method. This scope encloses the entire method.","pos":[0,90],"nodes":[{"content":"Gets the root lexical scope for the current method.","pos":[0,51]},{"content":"This scope encloses the entire method.","pos":[52,90]}]}]}],"pos":[19822,19913],"yaml":true},{"content":"The root lexical scope that encloses the entire method.","nodes":[{"pos":[0,55],"content":"The root lexical scope that encloses the entire method.","nodes":[{"content":"The root lexical scope that encloses the entire method.","pos":[0,55]}]}],"pos":[20093,20149],"yaml":true},{"content":"Gets a count of the sequence points in the method.","nodes":[{"pos":[0,50],"content":"Gets a count of the sequence points in the method.","nodes":[{"content":"Gets a count of the sequence points in the method.","pos":[0,50]}]}],"pos":[21492,21543],"yaml":true},{"content":"The count of the sequence points in the method.","nodes":[{"pos":[0,47],"content":"The count of the sequence points in the method.","nodes":[{"content":"The count of the sequence points in the method.","pos":[0,47]}]}],"pos":[21661,21709],"yaml":true},{"content":"Gets the <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> containing the metadata for the current method.","nodes":[{"pos":[0,120],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"&gt;&lt;/xref&gt;</ph> containing the metadata for the current method.","source":"Gets the <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> containing the metadata for the current method."}],"pos":[22983,23104],"yaml":true},{"content":"The metadata token for the current method.","nodes":[{"pos":[0,42],"content":"The metadata token for the current method.","nodes":[{"content":"The metadata token for the current method.","pos":[0,42]}]}],"pos":[23278,23321],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  commentId: T:System.Diagnostics.SymbolStore.ISymbolMethod\n  id: ISymbolMethod\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  - System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n  - System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n  - System.Diagnostics.SymbolStore.ISymbolMethod.Token\n  langs:\n  - csharp\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n  type: Interface\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Represents a method within a symbol store.\n  remarks: \"The <xref:System.Diagnostics.SymbolStore.ISymbolMethod> interface provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information. Use it with the <xref:System.Reflection> classes to read the type-related attributes of a method.  \\n  \\n> [!NOTE]\\n>  This interface is the managed counterpart of the `ISymUnmanagedMethod` interface, one of the unmanaged symbol store interfaces that provide an alternative way to read and write debug symbol information.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolMethod\n  derivedClasses:\n  - System.Diagnostics.SymbolStore.SymMethod\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace\n  id: GetNamespace\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetNamespace()\n  nameWithType: ISymbolMethod.GetNamespace()\n  fullName: ISymbolMethod.GetNamespace()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the namespace that the current method is defined within.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace\n      description: The namespace that the current method is defined within.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetOffset(ISymbolDocument, Int32, Int32)\n  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument, Int32, Int32)\n  fullName: ISymbolMethod.GetOffset(ISymbolDocument, Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.\n  remarks: The parameters are returned in the order that they are defined within the signature of the method.\n  syntax:\n    content: public int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: The document for which the offset is requested.\n    - id: line\n      type: System.Int32\n      description: The document line corresponding to the offset.\n    - id: column\n      type: System.Int32\n      description: The document column corresponding to the offset.\n    return:\n      type: System.Int32\n      description: The offset within the specified document.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters\n  id: GetParameters\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetParameters()\n  nameWithType: ISymbolMethod.GetParameters()\n  fullName: ISymbolMethod.GetParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the parameters for the current method.\n  remarks: The parameters are returned in the order that they are defined within the signature of the method.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: The array of parameters for the current method.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetRanges(ISymbolDocument, Int32, Int32)\n  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument, Int32, Int32)\n  fullName: ISymbolMethod.GetRanges(ISymbolDocument, Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) that a given position covers within this method.\n  remarks: The array is an array of integers in the format {{start1, end1}, {start2, end2}...}. The number of range pairs is the length of the array divided by 2.\n  syntax:\n    content: public int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: The document for which the offset is requested.\n    - id: line\n      type: System.Int32\n      description: The document line corresponding to the ranges.\n    - id: column\n      type: System.Int32\n      description: The document column corresponding to the ranges.\n    return:\n      type: System.Int32[]\n      description: An array of start and end offset pairs.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)\n  id: GetScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetScope(Int32)\n  nameWithType: ISymbolMethod.GetScope(Int32)\n  fullName: ISymbolMethod.GetScope(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Returns the most enclosing lexical scope when given an offset within a method.\n  remarks: You can use the <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> method to start local variable searches.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: The byte offset within the method of the lexical scope.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: The most enclosing lexical scope for the given byte offset within the method.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  id: GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetSequencePoints(Int32[], ISymbolDocument[], Int32[], Int32[], Int32[], Int32[])\n  nameWithType: ISymbolMethod.GetSequencePoints(Int32[], ISymbolDocument[], Int32[], Int32[], Int32[], Int32[])\n  fullName: ISymbolMethod.GetSequencePoints(Int32[], ISymbolDocument[], Int32[], Int32[], Int32[], Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the sequence points for the current method.\n  remarks: \"The sequence points are sorted by offset and are for all documents in the method. Use <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> to retrieve the count of all sequence points and create arrays of the proper size.  \\n  \\n <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> verifies the size of each array and places the sequence point information into each. If any array is `null`, the data for that array is not returned.\"\n  syntax:\n    content: public void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);\n    parameters:\n    - id: offsets\n      type: System.Int32[]\n      description: The array of byte offsets from the beginning of the method for the sequence points.\n    - id: documents\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: The array of documents in which the sequence points are located.\n    - id: lines\n      type: System.Int32[]\n      description: The array of lines in the documents at which the sequence points are located.\n    - id: columns\n      type: System.Int32[]\n      description: The array of columns in the documents at which the sequence points are located.\n    - id: endLines\n      type: System.Int32[]\n      description: The array of lines in the documents at which the sequence points end.\n    - id: endColumns\n      type: System.Int32[]\n      description: The array of columns in the documents at which the sequence points end.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  id: GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetSourceStartEnd(ISymbolDocument[], Int32[], Int32[])\n  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[], Int32[], Int32[])\n  fullName: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[], Int32[], Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the start and end positions for the source of the current method.\n  remarks: The first array position is the start, and the second is the end.\n  syntax:\n    content: public bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);\n    parameters:\n    - id: docs\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: The starting and ending source documents.\n    - id: lines\n      type: System.Int32[]\n      description: The starting and ending lines in the corresponding source documents.\n    - id: columns\n      type: System.Int32[]\n      description: The starting and ending columns in the corresponding source documents.\n    return:\n      type: System.Boolean\n      description: '`true` if the positions were defined; otherwise, `false`.'\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n  commentId: P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n  id: RootScope\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: RootScope\n  nameWithType: ISymbolMethod.RootScope\n  fullName: ISymbolMethod.RootScope\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the root lexical scope for the current method. This scope encloses the entire method.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: The root lexical scope that encloses the entire method.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n  commentId: P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n  id: SequencePointCount\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: SequencePointCount\n  nameWithType: ISymbolMethod.SequencePointCount\n  fullName: ISymbolMethod.SequencePointCount\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets a count of the sequence points in the method.\n  syntax:\n    content: public int SequencePointCount { get; }\n    return:\n      type: System.Int32\n      description: The count of the sequence points in the method.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token\n  commentId: P:System.Diagnostics.SymbolStore.ISymbolMethod.Token\n  id: Token\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: Token\n  nameWithType: ISymbolMethod.Token\n  fullName: ISymbolMethod.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the <xref href=\"System.Diagnostics.SymbolStore.SymbolToken\"></xref> containing the metadata for the current method.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.SymbolToken Token { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: The metadata token for the current method.\n  overload: System.Diagnostics.SymbolStore.ISymbolMethod.Token*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetNamespace()\n  nameWithType: ISymbolMethod.GetNamespace()\n  fullName: ISymbolMethod.GetNamespace()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetOffset(ISymbolDocument, Int32, Int32)\n  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument, Int32, Int32)\n  fullName: ISymbolMethod.GetOffset(ISymbolDocument, Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetParameters()\n  nameWithType: ISymbolMethod.GetParameters()\n  fullName: ISymbolMethod.GetParameters()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable[]\n  nameWithType: ISymbolVariable[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolVariable\n    name: ISymbolVariable\n    nameWithType: ISymbolVariable\n    fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetRanges(ISymbolDocument, Int32, Int32)\n  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument, Int32, Int32)\n  fullName: ISymbolMethod.GetRanges(ISymbolDocument, Int32, Int32)\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetScope(Int32)\n  nameWithType: ISymbolMethod.GetScope(Int32)\n  fullName: ISymbolMethod.GetScope(Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetSequencePoints(Int32[], ISymbolDocument[], Int32[], Int32[], Int32[], Int32[])\n  nameWithType: ISymbolMethod.GetSequencePoints(Int32[], ISymbolDocument[], Int32[], Int32[], Int32[], Int32[])\n  fullName: ISymbolMethod.GetSequencePoints(Int32[], ISymbolDocument[], Int32[], Int32[], Int32[], Int32[])\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument[]\n  nameWithType: ISymbolDocument[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolDocument\n    name: ISymbolDocument\n    nameWithType: ISymbolDocument\n    fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetSourceStartEnd(ISymbolDocument[], Int32[], Int32[])\n  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[], Int32[], Int32[])\n  fullName: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[], Int32[], Int32[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: RootScope\n  nameWithType: ISymbolMethod.RootScope\n  fullName: ISymbolMethod.RootScope\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: SequencePointCount\n  nameWithType: ISymbolMethod.SequencePointCount\n  fullName: ISymbolMethod.SequencePointCount\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: Token\n  nameWithType: ISymbolMethod.Token\n  fullName: ISymbolMethod.Token\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetNamespace\n  nameWithType: ISymbolMethod.GetNamespace\n  fullName: ISymbolMethod.GetNamespace\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetOffset\n  nameWithType: ISymbolMethod.GetOffset\n  fullName: ISymbolMethod.GetOffset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetParameters\n  nameWithType: ISymbolMethod.GetParameters\n  fullName: ISymbolMethod.GetParameters\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetRanges\n  nameWithType: ISymbolMethod.GetRanges\n  fullName: ISymbolMethod.GetRanges\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetScope\n  nameWithType: ISymbolMethod.GetScope\n  fullName: ISymbolMethod.GetScope\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetSequencePoints\n  nameWithType: ISymbolMethod.GetSequencePoints\n  fullName: ISymbolMethod.GetSequencePoints\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetSourceStartEnd\n  nameWithType: ISymbolMethod.GetSourceStartEnd\n  fullName: ISymbolMethod.GetSourceStartEnd\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: RootScope\n  nameWithType: ISymbolMethod.RootScope\n  fullName: ISymbolMethod.RootScope\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: SequencePointCount\n  nameWithType: ISymbolMethod.SequencePointCount\n  fullName: ISymbolMethod.SequencePointCount\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token*\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: Token\n  nameWithType: ISymbolMethod.Token\n  fullName: ISymbolMethod.Token\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolMethod.xml\n"}