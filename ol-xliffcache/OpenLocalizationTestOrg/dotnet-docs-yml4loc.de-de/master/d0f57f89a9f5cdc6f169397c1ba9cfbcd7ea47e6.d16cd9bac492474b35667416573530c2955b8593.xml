{"nodes":[{"content":"Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.","nodes":[{"pos":[0,112],"content":"Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.","nodes":[{"content":"Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.","pos":[0,112]}]}],"pos":[1178,1291],"yaml":true},{"content":"<xref:System.MulticastDelegate> is a special class. Compilers and other tools can derive from this class, but you cannot derive from it explicitly. The same is true of the <xref:System.Delegate> class.  \n  \n In addition to the methods that delegate types inherit from <xref:System.MulticastDelegate>, the common language runtime provides two special methods: `BeginInvoke` and `EndInvoke`. For more information about these methods, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  \n  \n A <xref:System.MulticastDelegate> has a linked list of delegates, called an invocation list, consisting of one or more elements. When a multicast delegate is invoked, the delegates in the invocation list are called synchronously in the order in which they appear. If an error occurs during execution of the list then an exception is thrown.","nodes":[{"pos":[0,201],"content":"<xref:System.MulticastDelegate> is a special class. Compilers and other tools can derive from this class, but you cannot derive from it explicitly. The same is true of the <xref:System.Delegate> class.","nodes":[{"content":"<xref:System.MulticastDelegate> is a special class. Compilers and other tools can derive from this class, but you cannot derive from it explicitly. The same is true of the <xref:System.Delegate> class.","pos":[0,201],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.MulticastDelegate&gt;</ph> is a special class.","pos":[0,51],"source":"<xref:System.MulticastDelegate> is a special class."},{"content":"Compilers and other tools can derive from this class, but you cannot derive from it explicitly.","pos":[52,147]},{"content":"The same is true of the <ph id=\"ph1\">&lt;xref:System.Delegate&gt;</ph> class.","pos":[148,201],"source":" The same is true of the <xref:System.Delegate> class."}]}]},{"pos":[208,578],"content":"In addition to the methods that delegate types inherit from <xref:System.MulticastDelegate>, the common language runtime provides two special methods: `BeginInvoke` and `EndInvoke`. For more information about these methods, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).","nodes":[{"content":"In addition to the methods that delegate types inherit from <ph id=\"ph1\">&lt;xref:System.MulticastDelegate&gt;</ph>, the common language runtime provides two special methods: <ph id=\"ph2\">`BeginInvoke`</ph> and <ph id=\"ph3\">`EndInvoke`</ph>.","pos":[0,181],"source":"In addition to the methods that delegate types inherit from <xref:System.MulticastDelegate>, the common language runtime provides two special methods: `BeginInvoke` and `EndInvoke`."},{"content":"For more information about these methods, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.","pos":[182,370],"source":" For more information about these methods, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)."}]},{"pos":[585,925],"content":"A <xref:System.MulticastDelegate> has a linked list of delegates, called an invocation list, consisting of one or more elements. When a multicast delegate is invoked, the delegates in the invocation list are called synchronously in the order in which they appear. If an error occurs during execution of the list then an exception is thrown.","nodes":[{"content":"A <xref:System.MulticastDelegate> has a linked list of delegates, called an invocation list, consisting of one or more elements. When a multicast delegate is invoked, the delegates in the invocation list are called synchronously in the order in which they appear. If an error occurs during execution of the list then an exception is thrown.","pos":[0,340],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.MulticastDelegate&gt;</ph> has a linked list of delegates, called an invocation list, consisting of one or more elements.","pos":[0,128],"source":"A <xref:System.MulticastDelegate> has a linked list of delegates, called an invocation list, consisting of one or more elements."},{"content":"When a multicast delegate is invoked, the delegates in the invocation list are called synchronously in the order in which they appear.","pos":[129,263]},{"content":"If an error occurs during execution of the list then an exception is thrown.","pos":[264,340]}]}]}],"pos":[1302,2234],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.MulticastDelegate\"></xref> class.","nodes":[{"pos":[0,86],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MulticastDelegate\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.MulticastDelegate\"></xref> class."}],"pos":[8355,8442],"yaml":true},{"content":"This constructor cannot be used in application code. To create a delegate by specifying the name of an instance method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name and a target object. For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29?displayProperty=fullName> method overload creates a delegate for an instance method with a specified name.","nodes":[{"pos":[0,475],"content":"This constructor cannot be used in application code. To create a delegate by specifying the name of an instance method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name and a target object. For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29?displayProperty=fullName> method overload creates a delegate for an instance method with a specified name.","nodes":[{"content":"This constructor cannot be used in application code. To create a delegate by specifying the name of an instance method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name and a target object. For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29?displayProperty=fullName> method overload creates a delegate for an instance method with a specified name.","pos":[0,475],"nodes":[{"content":"This constructor cannot be used in application code.","pos":[0,52]},{"content":"To create a delegate by specifying the name of an instance method, use an overload of the <ph id=\"ph1\">&lt;xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName&gt;</ph> method that specifies a method name and a target object.","pos":[53,265],"source":" To create a delegate by specifying the name of an instance method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name and a target object."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29?displayProperty=fullName&gt;</ph> method overload creates a delegate for an instance method with a specified name.","pos":[266,475],"source":" For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29?displayProperty=fullName> method overload creates a delegate for an instance method with a specified name."}]}]}],"pos":[8453,8929],"yaml":true,"extradata":"MT"},{"content":"The object on which <code>method</code> is defined.","nodes":[{"pos":[0,51],"content":"The object on which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">method</ph><ept id=\"p1\">&lt;/code&gt;</ept> is defined.","source":"The object on which <code>method</code> is defined."}],"pos":[9090,9142],"yaml":true},{"content":"The name of the method for which a delegate is created.","nodes":[{"pos":[0,55],"content":"The name of the method for which a delegate is created.","nodes":[{"content":"The name of the method for which a delegate is created.","pos":[0,55]}]}],"pos":[9204,9260],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[9420,9526],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.MulticastDelegate\"></xref> class.","nodes":[{"pos":[0,86],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MulticastDelegate\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.MulticastDelegate\"></xref> class."}],"pos":[10762,10849],"yaml":true},{"content":"This constructor cannot be used in application code. To create a delegate by specifying the name of a static method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name but does not specify a target object. For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29?displayProperty=fullName> method overload creates a static delegate for a method with a specified name.","nodes":[{"pos":[0,484],"content":"This constructor cannot be used in application code. To create a delegate by specifying the name of a static method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name but does not specify a target object. For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29?displayProperty=fullName> method overload creates a static delegate for a method with a specified name.","nodes":[{"content":"This constructor cannot be used in application code. To create a delegate by specifying the name of a static method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name but does not specify a target object. For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29?displayProperty=fullName> method overload creates a static delegate for a method with a specified name.","pos":[0,484],"nodes":[{"content":"This constructor cannot be used in application code.","pos":[0,52]},{"content":"To create a delegate by specifying the name of a static method, use an overload of the <ph id=\"ph1\">&lt;xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName&gt;</ph> method that specifies a method name but does not specify a target object.","pos":[53,279],"source":" To create a delegate by specifying the name of a static method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name but does not specify a target object."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29?displayProperty=fullName&gt;</ph> method overload creates a static delegate for a method with a specified name.","pos":[280,484],"source":" For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29?displayProperty=fullName> method overload creates a static delegate for a method with a specified name."}]}]}],"pos":[10860,11345],"yaml":true,"extradata":"MT"},{"content":"The type of object on which <code>method</code> is defined.","nodes":[{"pos":[0,59],"content":"The type of object on which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">method</ph><ept id=\"p1\">&lt;/code&gt;</ept> is defined.","source":"The type of object on which <code>method</code> is defined."}],"pos":[11502,11562],"yaml":true},{"content":"The name of the static method for which a delegate is created.","nodes":[{"pos":[0,62],"content":"The name of the static method for which a delegate is created.","nodes":[{"content":"The name of the static method for which a delegate is created.","pos":[0,62]}]}],"pos":[11624,11687],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[11847,11953],"yaml":true},{"content":"Combines this <xref href=\"System.Delegate\"></xref> with the specified <xref href=\"System.Delegate\"></xref> to form a new delegate.","nodes":[{"pos":[0,130],"content":"Combines this <ph id=\"ph1\">&lt;xref href=\"System.Delegate\"&gt;&lt;/xref&gt;</ph> with the specified <ph id=\"ph2\">&lt;xref href=\"System.Delegate\"&gt;&lt;/xref&gt;</ph> to form a new delegate.","source":"Combines this <xref href=\"System.Delegate\"></xref> with the specified <xref href=\"System.Delegate\"></xref> to form a new delegate."}],"pos":[13140,13271],"yaml":true},{"content":"The delegate to combine with this delegate.","nodes":[{"pos":[0,43],"content":"The delegate to combine with this delegate.","nodes":[{"content":"The delegate to combine with this delegate.","pos":[0,43]}]}],"pos":[13440,13484],"yaml":true},{"content":"A delegate that is the new root of the <xref href=\"System.MulticastDelegate\"></xref> invocation list.","nodes":[{"pos":[0,101],"content":"A delegate that is the new root of the <ph id=\"ph1\">&lt;xref href=\"System.MulticastDelegate\"&gt;&lt;/xref&gt;</ph> invocation list.","source":"A delegate that is the new root of the <xref href=\"System.MulticastDelegate\"></xref> invocation list."}],"pos":[13543,13645],"yaml":true},{"content":"<code>follow</code> does not have the same type as this instance.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;follow&lt;/code&gt;</ph> does not have the same type as this instance.","source":"<code>follow</code> does not have the same type as this instance."}],"pos":[13803,13869],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[13971,14077],"yaml":true},{"content":"Determines whether this multicast delegate and the specified object are equal.","nodes":[{"pos":[0,78],"content":"Determines whether this multicast delegate and the specified object are equal.","nodes":[{"content":"Determines whether this multicast delegate and the specified object are equal.","pos":[0,78]}]}],"pos":[16225,16304],"yaml":true},{"content":"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  \n  \n Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.","nodes":[{"pos":[0,288],"content":"Two delegates are equal if they are not <ph id=\"ph1\">`null`</ph> and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.","source":"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate."},{"pos":[295,441],"content":"Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.","nodes":[{"content":"Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.","pos":[0,146]}]}],"pos":[16315,16761],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[16908,16950],"yaml":true},{"content":"`true` if <code>obj</code> and this instance have the same invocation lists; otherwise, `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> and this instance have the same invocation lists; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> and this instance have the same invocation lists; otherwise, `false`."}],"pos":[17008,17107],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[17268,17374],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[18830,18871],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[19012,19047],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[19213,19319],"yaml":true},{"content":"Returns the invocation list of this multicast delegate, in invocation order.","nodes":[{"pos":[0,76],"content":"Returns the invocation list of this multicast delegate, in invocation order.","nodes":[{"content":"Returns the invocation list of this multicast delegate, in invocation order.","pos":[0,76]}]}],"pos":[20811,20888],"yaml":true},{"content":"The array contains a set of delegates, each with an invocation list of one entry. Invoking these delegates sequentially, in the order they appear in the array, produces the same results as invoking the current instance.","nodes":[{"pos":[0,219],"content":"The array contains a set of delegates, each with an invocation list of one entry. Invoking these delegates sequentially, in the order they appear in the array, produces the same results as invoking the current instance.","nodes":[{"content":"The array contains a set of delegates, each with an invocation list of one entry. Invoking these delegates sequentially, in the order they appear in the array, produces the same results as invoking the current instance.","pos":[0,219],"nodes":[{"content":"The array contains a set of delegates, each with an invocation list of one entry.","pos":[0,81]},{"content":"Invoking these delegates sequentially, in the order they appear in the array, produces the same results as invoking the current instance.","pos":[82,219]}]}]}],"pos":[20899,21119],"yaml":true,"extradata":"MT"},{"content":"An array of delegates whose invocation lists collectively match the invocation list of this instance.","nodes":[{"pos":[0,101],"content":"An array of delegates whose invocation lists collectively match the invocation list of this instance.","nodes":[{"content":"An array of delegates whose invocation lists collectively match the invocation list of this instance.","pos":[0,101]}]}],"pos":[21278,21380],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[21552,21658],"yaml":true},{"content":"Returns a static method represented by the current <xref href=\"System.MulticastDelegate\"></xref>.","nodes":[{"pos":[0,97],"content":"Returns a static method represented by the current <ph id=\"ph1\">&lt;xref href=\"System.MulticastDelegate\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a static method represented by the current <xref href=\"System.MulticastDelegate\"></xref>."}],"pos":[23126,23224],"yaml":true},{"content":"If the <xref:System.MulticastDelegate> represents multiple methods, only one method is returned.","nodes":[{"pos":[0,96],"content":"If the <xref:System.MulticastDelegate> represents multiple methods, only one method is returned.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.MulticastDelegate&gt;</ph> represents multiple methods, only one method is returned.","pos":[0,96],"source":"If the <xref:System.MulticastDelegate> represents multiple methods, only one method is returned."}]}],"pos":[23235,23332],"yaml":true,"extradata":"MT"},{"content":"A static method represented by the current <xref href=\"System.MulticastDelegate\"></xref>.","nodes":[{"pos":[0,89],"content":"A static method represented by the current <ph id=\"ph1\">&lt;xref href=\"System.MulticastDelegate\"&gt;&lt;/xref&gt;</ph>.","source":"A static method represented by the current <xref href=\"System.MulticastDelegate\"></xref>."}],"pos":[23512,23602],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data needed to serialize this instance.","nodes":[{"pos":[0,139],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with all the data needed to serialize this instance.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data needed to serialize this instance."}],"pos":[25182,25322],"yaml":true},{"content":"This method stores all the information in `info` necessary to serialize this instance.  \n  \n The `context` parameter is reserved and is not currently used in the execution of this method.","nodes":[{"pos":[0,86],"content":"This method stores all the information in <ph id=\"ph1\">`info`</ph> necessary to serialize this instance.","source":"This method stores all the information in `info` necessary to serialize this instance."},{"pos":[93,187],"content":"The <ph id=\"ph1\">`context`</ph> parameter is reserved and is not currently used in the execution of this method.","source":"The `context` parameter is reserved and is not currently used in the execution of this method."}],"pos":[25333,25525],"yaml":true,"extradata":"MT"},{"content":"An object that holds all the data needed to serialize or deserialize this instance.","nodes":[{"pos":[0,83],"content":"An object that holds all the data needed to serialize or deserialize this instance.","nodes":[{"content":"An object that holds all the data needed to serialize or deserialize this instance.","pos":[0,83]}]}],"pos":[25802,25886],"yaml":true},{"content":"(Reserved) The location where serialized data is stored and retrieved.","nodes":[{"pos":[0,70],"content":"(Reserved) The location where serialized data is stored and retrieved.","nodes":[{"content":"(Reserved) The location where serialized data is stored and retrieved.","pos":[0,70]}]}],"pos":[25981,26052],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[26220,26249],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[26351,26457],"yaml":true},{"content":"A serialization error occurred.","nodes":[{"pos":[0,31],"content":"A serialization error occurred.","nodes":[{"content":"A serialization error occurred.","pos":[0,31]}]}],"pos":[26605,26637],"yaml":true},{"content":"Determines whether two <xref href=\"System.MulticastDelegate\"></xref> objects are equal.","nodes":[{"pos":[0,87],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.MulticastDelegate\"&gt;&lt;/xref&gt;</ph> objects are equal.","source":"Determines whether two <xref href=\"System.MulticastDelegate\"></xref> objects are equal."}],"pos":[28012,28100],"yaml":true},{"content":"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  \n  \n Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.  \n  \n The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,288],"content":"Two delegates are equal if they are not <ph id=\"ph1\">`null`</ph> and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.","source":"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate."},{"pos":[295,441],"content":"Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.","nodes":[{"content":"Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.","pos":[0,146]}]},{"pos":[448,573],"content":"The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,125],"source":"The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[28111,28691],"yaml":true,"extradata":"MT"},{"content":"The left operand.","nodes":[{"pos":[0,17],"content":"The left operand.","nodes":[{"content":"The left operand.","pos":[0,17]}]}],"pos":[28876,28894],"yaml":true},{"content":"The right operand.","nodes":[{"pos":[0,18],"content":"The right operand.","nodes":[{"content":"The right operand.","pos":[0,18]}]}],"pos":[28963,28982],"yaml":true},{"content":"`true` if <code>d1</code> and <code>d2</code> have the same invocation lists; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept> have the same invocation lists; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> and <code>d2</code> have the same invocation lists; otherwise, `false`."}],"pos":[29040,29140],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[29306,29412],"yaml":true},{"content":"Determines whether two <xref href=\"System.MulticastDelegate\"></xref> objects are not equal.","nodes":[{"pos":[0,91],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.MulticastDelegate\"&gt;&lt;/xref&gt;</ph> objects are not equal.","source":"Determines whether two <xref href=\"System.MulticastDelegate\"></xref> objects are not equal."}],"pos":[31143,31235],"yaml":true},{"content":"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  \n  \n Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.  \n  \n The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,288],"content":"Two delegates are equal if they are not <ph id=\"ph1\">`null`</ph> and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.","source":"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate."},{"pos":[295,441],"content":"Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.","nodes":[{"content":"Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.","pos":[0,146]}]},{"pos":[448,573],"content":"The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,125],"source":"The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[31246,31826],"yaml":true,"extradata":"MT"},{"content":"The left operand.","nodes":[{"pos":[0,17],"content":"The left operand.","nodes":[{"content":"The left operand.","pos":[0,17]}]}],"pos":[32013,32031],"yaml":true},{"content":"The right operand.","nodes":[{"pos":[0,18],"content":"The right operand.","nodes":[{"content":"The right operand.","pos":[0,18]}]}],"pos":[32100,32119],"yaml":true},{"content":"`true` if <code>d1</code> and <code>d2</code> do not have the same invocation lists; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept> do not have the same invocation lists; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> and <code>d2</code> do not have the same invocation lists; otherwise, `false`."}],"pos":[32177,32284],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[32452,32558],"yaml":true},{"content":"Removes an element from the invocation list of this <xref href=\"System.MulticastDelegate\"></xref> that is equal to the specified delegate.","nodes":[{"pos":[0,138],"content":"Removes an element from the invocation list of this <ph id=\"ph1\">&lt;xref href=\"System.MulticastDelegate\"&gt;&lt;/xref&gt;</ph> that is equal to the specified delegate.","source":"Removes an element from the invocation list of this <xref href=\"System.MulticastDelegate\"></xref> that is equal to the specified delegate."}],"pos":[34083,34222],"yaml":true},{"content":"The delegate to search for in the invocation list.","nodes":[{"pos":[0,50],"content":"The delegate to search for in the invocation list.","nodes":[{"content":"The delegate to search for in the invocation list.","pos":[0,50]}]}],"pos":[34388,34439],"yaml":true},{"content":"If <code>value</code> is found in the invocation list for this instance, then a new <xref href=\"System.Delegate\"></xref> without <code>value</code> in its invocation list; otherwise, this instance with its original invocation list.","nodes":[{"pos":[0,231],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is found in the invocation list for this instance, then a new <ph id=\"ph2\">&lt;xref href=\"System.Delegate\"&gt;&lt;/xref&gt;</ph> without <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> in its invocation list; otherwise, this instance with its original invocation list.","source":"If <code>value</code> is found in the invocation list for this instance, then a new <xref href=\"System.Delegate\"></xref> without <code>value</code> in its invocation list; otherwise, this instance with its original invocation list."}],"pos":[34498,34730],"yaml":true},{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"pos":[0,105],"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","nodes":[{"content":"Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[0,105]}]}],"pos":[34895,35001],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.MulticastDelegate\n  commentId: T:System.MulticastDelegate\n  id: MulticastDelegate\n  children:\n  - System.MulticastDelegate.#ctor(System.Object,System.String)\n  - System.MulticastDelegate.#ctor(System.Type,System.String)\n  - System.MulticastDelegate.CombineImpl(System.Delegate)\n  - System.MulticastDelegate.DynamicInvokeImpl(System.Object[])\n  - System.MulticastDelegate.Equals(System.Object)\n  - System.MulticastDelegate.GetHashCode\n  - System.MulticastDelegate.GetInvocationList\n  - System.MulticastDelegate.GetMethodImpl\n  - System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  - System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  - System.MulticastDelegate.RemoveImpl(System.Delegate)\n  langs:\n  - csharp\n  name: MulticastDelegate\n  nameWithType: MulticastDelegate\n  fullName: System.MulticastDelegate\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.\n  remarks: \"<xref:System.MulticastDelegate> is a special class. Compilers and other tools can derive from this class, but you cannot derive from it explicitly. The same is true of the <xref:System.Delegate> class.  \\n  \\n In addition to the methods that delegate types inherit from <xref:System.MulticastDelegate>, the common language runtime provides two special methods: `BeginInvoke` and `EndInvoke`. For more information about these methods, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  \\n  \\n A <xref:System.MulticastDelegate> has a linked list of delegates, called an invocation list, consisting of one or more elements. When a multicast delegate is invoked, the delegates in the invocation list are called synchronously in the order in which they appear. If an error occurs during execution of the list then an exception is thrown.\"\n  example:\n  - \"The following example defines a class, `StringContainer`, which includes a collection of strings. One of its members is the `CheckAndDisplayDelegate` delegate, which is used to display strings stored in a `StringContainer` object that satisfy particular criteria. The delegate takes a single string as a parameter and returns `void` (or, in Visual Basic, it's a `Sub` procedure). It also includes a method, `DisplayAllQualified`, that has a single parameter, a `CheckAndDisplayDelegate` delegate. This allows the method to be called and to display a set of strings that are filtered based on the methods that the delegate contains.  \\n  \\n The example also defines a utility class, `StringExtensions`, that has two methods:  \\n  \\n-   `ConStart`, which displays strings that begin with a consonant.  \\n  \\n-   `VowelStart`, which displays strings that begin with a vowel.  \\n  \\n Note that both methods include a single string parameter and return `void`. In other words, both methods can be assigned to the  `CheckAndDisplayDelegate` delegate.  \\n  \\n The `Test.Main` method is the application entry point. It instantiates a `StringContainer` object, populates it with strings, and creates two `CheckAndDisplayDelegate` delegates, `conStart` and `vowelStart`, that invoke a single method. It then calls the <xref:System.Delegate.Combine%2A?displayProperty=fullName> method to create the `multipleDelegates` delegate, which initially contains the `ConStart` and  `VowelStart` delegates. Note that when the `multipleDelegates` delegate is invoked, it displays all the strings in the collection in their original order. This is because each letter is passed separately to each delegate, and each letter meets the filtering criteria of only one of the two delegates. Finally, after calls to <xref:System.Delegate.Remove%2A?displayProperty=fullName> and <xref:System.Delegate.Combine%2A?displayProperty=fullName>, `multipleDelegates` contains two `conStart` delegates. When it is invoked, each string in the `StringContainer` object is displayed twice.  \\n  \\n [!code-cpp[Multicast Delegate Introduction#1](~/samples/snippets/cpp/VS_Snippets_CLR/Multicast Delegate Introduction/CPP/delegatestring.cpp#1)]\\n [!code-csharp[Multicast Delegate Introduction#1](~/samples/snippets/csharp/VS_Snippets_CLR/Multicast Delegate Introduction/CS/delegatestring.cs#1)]\\n [!code-vb[Multicast Delegate Introduction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Multicast Delegate Introduction/VB/delegatestring.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class MulticastDelegate : Delegate\n  inheritance:\n  - System.Object\n  - System.Delegate\n  implements: []\n  inheritedMembers:\n  - System.Delegate.Clone\n  - System.Delegate.Combine(System.Delegate,System.Delegate)\n  - System.Delegate.Combine(System.Delegate[])\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)\n  - System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String)\n  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)\n  - System.Delegate.DynamicInvoke(System.Object[])\n  - System.Delegate.Method\n  - System.Delegate.op_Equality(System.Delegate,System.Delegate)\n  - System.Delegate.op_Inequality(System.Delegate,System.Delegate)\n  - System.Delegate.Remove(System.Delegate,System.Delegate)\n  - System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n  - System.Delegate.Target\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.#ctor(System.Object,System.String)\n  commentId: M:System.MulticastDelegate.#ctor(System.Object,System.String)\n  id: '#ctor(System.Object,System.String)'\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: MulticastDelegate(Object, String)\n  nameWithType: MulticastDelegate.MulticastDelegate(Object, String)\n  fullName: MulticastDelegate.MulticastDelegate(Object, String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MulticastDelegate\"></xref> class.\n  remarks: This constructor cannot be used in application code. To create a delegate by specifying the name of an instance method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name and a target object. For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29?displayProperty=fullName> method overload creates a delegate for an instance method with a specified name.\n  syntax:\n    content: protected MulticastDelegate (object target, string method);\n    parameters:\n    - id: target\n      type: System.Object\n      description: The object on which <code>method</code> is defined.\n    - id: method\n      type: System.String\n      description: The name of the method for which a delegate is created.\n  overload: System.MulticastDelegate.#ctor*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.#ctor(System.Type,System.String)\n  commentId: M:System.MulticastDelegate.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: MulticastDelegate(Type, String)\n  nameWithType: MulticastDelegate.MulticastDelegate(Type, String)\n  fullName: MulticastDelegate.MulticastDelegate(Type, String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MulticastDelegate\"></xref> class.\n  remarks: This constructor cannot be used in application code. To create a delegate by specifying the name of a static method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=fullName> method that specifies a method name but does not specify a target object. For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29?displayProperty=fullName> method overload creates a static delegate for a method with a specified name.\n  syntax:\n    content: protected MulticastDelegate (Type target, string method);\n    parameters:\n    - id: target\n      type: System.Type\n      description: The type of object on which <code>method</code> is defined.\n    - id: method\n      type: System.String\n      description: The name of the static method for which a delegate is created.\n  overload: System.MulticastDelegate.#ctor*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.CombineImpl(System.Delegate)\n  commentId: M:System.MulticastDelegate.CombineImpl(System.Delegate)\n  id: CombineImpl(System.Delegate)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: CombineImpl(Delegate)\n  nameWithType: MulticastDelegate.CombineImpl(Delegate)\n  fullName: MulticastDelegate.CombineImpl(Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Combines this <xref href=\"System.Delegate\"></xref> with the specified <xref href=\"System.Delegate\"></xref> to form a new delegate.\n  syntax:\n    content: protected override sealed Delegate CombineImpl (Delegate follow);\n    parameters:\n    - id: follow\n      type: System.Delegate\n      description: The delegate to combine with this delegate.\n    return:\n      type: System.Delegate\n      description: A delegate that is the new root of the <xref href=\"System.MulticastDelegate\"></xref> invocation list.\n  overload: System.MulticastDelegate.CombineImpl*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>follow</code> does not have the same type as this instance.\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.DynamicInvokeImpl(System.Object[])\n  commentId: M:System.MulticastDelegate.DynamicInvokeImpl(System.Object[])\n  id: DynamicInvokeImpl(System.Object[])\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: DynamicInvokeImpl(Object[])\n  nameWithType: MulticastDelegate.DynamicInvokeImpl(Object[])\n  fullName: MulticastDelegate.DynamicInvokeImpl(Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected override sealed object DynamicInvokeImpl (object[] args);\n    parameters:\n    - id: args\n      type: System.Object[]\n      description: ''\n    return:\n      type: System.Object\n      description: ''\n  overload: System.MulticastDelegate.DynamicInvokeImpl*\n  exceptions: []\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.Equals(System.Object)\n  commentId: M:System.MulticastDelegate.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: MulticastDelegate.Equals(Object)\n  fullName: MulticastDelegate.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether this multicast delegate and the specified object are equal.\n  remarks: \"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  \\n  \\n Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.\"\n  syntax:\n    content: public override sealed bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> and this instance have the same invocation lists; otherwise, `false`.'\n  overload: System.MulticastDelegate.Equals*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.GetHashCode\n  commentId: M:System.MulticastDelegate.GetHashCode\n  id: GetHashCode\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: MulticastDelegate.GetHashCode()\n  fullName: MulticastDelegate.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override sealed int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.MulticastDelegate.GetHashCode*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.GetInvocationList\n  commentId: M:System.MulticastDelegate.GetInvocationList\n  id: GetInvocationList\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: GetInvocationList()\n  nameWithType: MulticastDelegate.GetInvocationList()\n  fullName: MulticastDelegate.GetInvocationList()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the invocation list of this multicast delegate, in invocation order.\n  remarks: The array contains a set of delegates, each with an invocation list of one entry. Invoking these delegates sequentially, in the order they appear in the array, produces the same results as invoking the current instance.\n  syntax:\n    content: public override sealed Delegate[] GetInvocationList ();\n    parameters: []\n    return:\n      type: System.Delegate[]\n      description: An array of delegates whose invocation lists collectively match the invocation list of this instance.\n  overload: System.MulticastDelegate.GetInvocationList*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.GetMethodImpl\n  commentId: M:System.MulticastDelegate.GetMethodImpl\n  id: GetMethodImpl\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: GetMethodImpl()\n  nameWithType: MulticastDelegate.GetMethodImpl()\n  fullName: MulticastDelegate.GetMethodImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a static method represented by the current <xref href=\"System.MulticastDelegate\"></xref>.\n  remarks: If the <xref:System.MulticastDelegate> represents multiple methods, only one method is returned.\n  syntax:\n    content: protected override System.Reflection.MethodInfo GetMethodImpl ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: A static method represented by the current <xref href=\"System.MulticastDelegate\"></xref>.\n  overload: System.MulticastDelegate.GetMethodImpl*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: MulticastDelegate.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: MulticastDelegate.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data needed to serialize this instance.\n  remarks: \"This method stores all the information in `info` necessary to serialize this instance.  \\n  \\n The `context` parameter is reserved and is not currently used in the execution of this method.\"\n  syntax:\n    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: An object that holds all the data needed to serialize or deserialize this instance.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: (Reserved) The location where serialized data is stored and retrieved.\n  overload: System.MulticastDelegate.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: A serialization error occurred.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  commentId: M:System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  id: op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: op_Equality(MulticastDelegate, MulticastDelegate)\n  nameWithType: MulticastDelegate.op_Equality(MulticastDelegate, MulticastDelegate)\n  fullName: MulticastDelegate.op_Equality(MulticastDelegate, MulticastDelegate)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two <xref href=\"System.MulticastDelegate\"></xref> objects are equal.\n  remarks: \"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  \\n  \\n Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.  \\n  \\n The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Equality (MulticastDelegate d1, MulticastDelegate d2);\n    parameters:\n    - id: d1\n      type: System.MulticastDelegate\n      description: The left operand.\n    - id: d2\n      type: System.MulticastDelegate\n      description: The right operand.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> and <code>d2</code> have the same invocation lists; otherwise, `false`.'\n  overload: System.MulticastDelegate.op_Equality*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  commentId: M:System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  id: op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: op_Inequality(MulticastDelegate, MulticastDelegate)\n  nameWithType: MulticastDelegate.op_Inequality(MulticastDelegate, MulticastDelegate)\n  fullName: MulticastDelegate.op_Inequality(MulticastDelegate, MulticastDelegate)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two <xref href=\"System.MulticastDelegate\"></xref> objects are not equal.\n  remarks: \"Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.  \\n  \\n Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.  \\n  \\n The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Inequality (MulticastDelegate d1, MulticastDelegate d2);\n    parameters:\n    - id: d1\n      type: System.MulticastDelegate\n      description: The left operand.\n    - id: d2\n      type: System.MulticastDelegate\n      description: The right operand.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> and <code>d2</code> do not have the same invocation lists; otherwise, `false`.'\n  overload: System.MulticastDelegate.op_Inequality*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MulticastDelegate.RemoveImpl(System.Delegate)\n  commentId: M:System.MulticastDelegate.RemoveImpl(System.Delegate)\n  id: RemoveImpl(System.Delegate)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  name: RemoveImpl(Delegate)\n  nameWithType: MulticastDelegate.RemoveImpl(Delegate)\n  fullName: MulticastDelegate.RemoveImpl(Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Removes an element from the invocation list of this <xref href=\"System.MulticastDelegate\"></xref> that is equal to the specified delegate.\n  syntax:\n    content: protected override sealed Delegate RemoveImpl (Delegate value);\n    parameters:\n    - id: value\n      type: System.Delegate\n      description: The delegate to search for in the invocation list.\n    return:\n      type: System.Delegate\n      description: If <code>value</code> is found in the invocation list for this instance, then a new <xref href=\"System.Delegate\"></xref> without <code>value</code> in its invocation list; otherwise, this instance with its original invocation list.\n  overload: System.MulticastDelegate.RemoveImpl*\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.MemberAccessException\n  parent: System\n  isExternal: false\n  name: MemberAccessException\n  nameWithType: MemberAccessException\n  fullName: System.MemberAccessException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.MulticastDelegate.#ctor(System.Object,System.String)\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: MulticastDelegate(Object, String)\n  nameWithType: MulticastDelegate.MulticastDelegate(Object, String)\n  fullName: MulticastDelegate.MulticastDelegate(Object, String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.MulticastDelegate.#ctor(System.Type,System.String)\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: MulticastDelegate(Type, String)\n  nameWithType: MulticastDelegate.MulticastDelegate(Type, String)\n  fullName: MulticastDelegate.MulticastDelegate(Type, String)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.MulticastDelegate.CombineImpl(System.Delegate)\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: CombineImpl(Delegate)\n  nameWithType: MulticastDelegate.CombineImpl(Delegate)\n  fullName: MulticastDelegate.CombineImpl(Delegate)\n- uid: System.MulticastDelegate.DynamicInvokeImpl(System.Object[])\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: DynamicInvokeImpl(Object[])\n  nameWithType: MulticastDelegate.DynamicInvokeImpl(Object[])\n  fullName: MulticastDelegate.DynamicInvokeImpl(Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.MulticastDelegate.Equals(System.Object)\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MulticastDelegate.Equals(Object)\n  fullName: MulticastDelegate.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.MulticastDelegate.GetHashCode\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MulticastDelegate.GetHashCode()\n  fullName: MulticastDelegate.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.MulticastDelegate.GetInvocationList\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: GetInvocationList()\n  nameWithType: MulticastDelegate.GetInvocationList()\n  fullName: MulticastDelegate.GetInvocationList()\n- uid: System.Delegate[]\n  parent: System\n  isExternal: false\n  name: Delegate[]\n  nameWithType: Delegate[]\n  fullName: System.Delegate[]\n  spec.csharp:\n  - uid: System.Delegate\n    name: Delegate\n    nameWithType: Delegate\n    fullName: System.Delegate\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.MulticastDelegate.GetMethodImpl\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: GetMethodImpl()\n  nameWithType: MulticastDelegate.GetMethodImpl()\n  fullName: MulticastDelegate.GetMethodImpl()\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: MulticastDelegate.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: MulticastDelegate.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: op_Equality(MulticastDelegate, MulticastDelegate)\n  nameWithType: MulticastDelegate.op_Equality(MulticastDelegate, MulticastDelegate)\n  fullName: MulticastDelegate.op_Equality(MulticastDelegate, MulticastDelegate)\n- uid: System.MulticastDelegate\n  parent: System\n  isExternal: false\n  name: MulticastDelegate\n  nameWithType: MulticastDelegate\n  fullName: System.MulticastDelegate\n- uid: System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: op_Inequality(MulticastDelegate, MulticastDelegate)\n  nameWithType: MulticastDelegate.op_Inequality(MulticastDelegate, MulticastDelegate)\n  fullName: MulticastDelegate.op_Inequality(MulticastDelegate, MulticastDelegate)\n- uid: System.MulticastDelegate.RemoveImpl(System.Delegate)\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: RemoveImpl(Delegate)\n  nameWithType: MulticastDelegate.RemoveImpl(Delegate)\n  fullName: MulticastDelegate.RemoveImpl(Delegate)\n- uid: System.MulticastDelegate.#ctor*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: MulticastDelegate\n  nameWithType: MulticastDelegate.MulticastDelegate\n  fullName: MulticastDelegate.MulticastDelegate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.CombineImpl*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: CombineImpl\n  nameWithType: MulticastDelegate.CombineImpl\n  fullName: MulticastDelegate.CombineImpl\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.DynamicInvokeImpl*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: DynamicInvokeImpl\n  nameWithType: MulticastDelegate.DynamicInvokeImpl\n  fullName: MulticastDelegate.DynamicInvokeImpl\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.Equals*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: Equals\n  nameWithType: MulticastDelegate.Equals\n  fullName: MulticastDelegate.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.GetHashCode*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: GetHashCode\n  nameWithType: MulticastDelegate.GetHashCode\n  fullName: MulticastDelegate.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.GetInvocationList*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: GetInvocationList\n  nameWithType: MulticastDelegate.GetInvocationList\n  fullName: MulticastDelegate.GetInvocationList\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.GetMethodImpl*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: GetMethodImpl\n  nameWithType: MulticastDelegate.GetMethodImpl\n  fullName: MulticastDelegate.GetMethodImpl\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.GetObjectData*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: GetObjectData\n  nameWithType: MulticastDelegate.GetObjectData\n  fullName: MulticastDelegate.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.op_Equality*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: op_Equality\n  nameWithType: MulticastDelegate.op_Equality\n  fullName: MulticastDelegate.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.op_Inequality*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: op_Inequality\n  nameWithType: MulticastDelegate.op_Inequality\n  fullName: MulticastDelegate.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.MulticastDelegate.RemoveImpl*\n  parent: System.MulticastDelegate\n  isExternal: false\n  name: RemoveImpl\n  nameWithType: MulticastDelegate.RemoveImpl\n  fullName: MulticastDelegate.RemoveImpl\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MulticastDelegate.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Delegate.Clone\n  parent: System.Delegate\n  isExternal: false\n  name: Clone()\n  nameWithType: Delegate.Clone()\n  fullName: Delegate.Clone()\n- uid: System.Delegate.Combine(System.Delegate[])\n  parent: System.Delegate\n  isExternal: false\n  name: Combine(Delegate[])\n  nameWithType: Delegate.Combine(Delegate[])\n  fullName: Delegate.Combine(Delegate[])\n- uid: System.Delegate.Combine(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: Combine(Delegate, Delegate)\n  nameWithType: Delegate.Combine(Delegate, Delegate)\n  fullName: Delegate.Combine(Delegate, Delegate)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, Type, String, Boolean, Boolean)\n  nameWithType: Delegate.CreateDelegate(Type, Type, String, Boolean, Boolean)\n  fullName: Delegate.CreateDelegate(Type, Type, String, Boolean, Boolean)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, Type, String, Boolean)\n  nameWithType: Delegate.CreateDelegate(Type, Type, String, Boolean)\n  fullName: Delegate.CreateDelegate(Type, Type, String, Boolean)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, Object, String, Boolean)\n  nameWithType: Delegate.CreateDelegate(Type, Object, String, Boolean)\n  fullName: Delegate.CreateDelegate(Type, Object, String, Boolean)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, Object, MethodInfo, Boolean)\n  nameWithType: Delegate.CreateDelegate(Type, Object, MethodInfo, Boolean)\n  fullName: Delegate.CreateDelegate(Type, Object, MethodInfo, Boolean)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, Object, String, Boolean, Boolean)\n  nameWithType: Delegate.CreateDelegate(Type, Object, String, Boolean, Boolean)\n  fullName: Delegate.CreateDelegate(Type, Object, String, Boolean, Boolean)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, MethodInfo, Boolean)\n  nameWithType: Delegate.CreateDelegate(Type, MethodInfo, Boolean)\n  fullName: Delegate.CreateDelegate(Type, MethodInfo, Boolean)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, Object, String)\n  nameWithType: Delegate.CreateDelegate(Type, Object, String)\n  fullName: Delegate.CreateDelegate(Type, Object, String)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, Object, MethodInfo)\n  nameWithType: Delegate.CreateDelegate(Type, Object, MethodInfo)\n  fullName: Delegate.CreateDelegate(Type, Object, MethodInfo)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, Type, String)\n  nameWithType: Delegate.CreateDelegate(Type, Type, String)\n  fullName: Delegate.CreateDelegate(Type, Type, String)\n- uid: System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type, MethodInfo)\n  nameWithType: Delegate.CreateDelegate(Type, MethodInfo)\n  fullName: Delegate.CreateDelegate(Type, MethodInfo)\n- uid: System.Delegate.DynamicInvoke(System.Object[])\n  parent: System.Delegate\n  isExternal: false\n  name: DynamicInvoke(Object[])\n  nameWithType: Delegate.DynamicInvoke(Object[])\n  fullName: Delegate.DynamicInvoke(Object[])\n- uid: System.Delegate.Method\n  parent: System.Delegate\n  isExternal: false\n  name: Method\n  nameWithType: Delegate.Method\n  fullName: Delegate.Method\n- uid: System.Delegate.op_Equality(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: op_Equality(Delegate, Delegate)\n  nameWithType: Delegate.op_Equality(Delegate, Delegate)\n  fullName: Delegate.op_Equality(Delegate, Delegate)\n- uid: System.Delegate.op_Inequality(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: op_Inequality(Delegate, Delegate)\n  nameWithType: Delegate.op_Inequality(Delegate, Delegate)\n  fullName: Delegate.op_Inequality(Delegate, Delegate)\n- uid: System.Delegate.Remove(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: Remove(Delegate, Delegate)\n  nameWithType: Delegate.Remove(Delegate, Delegate)\n  fullName: Delegate.Remove(Delegate, Delegate)\n- uid: System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: RemoveAll(Delegate, Delegate)\n  nameWithType: Delegate.RemoveAll(Delegate, Delegate)\n  fullName: Delegate.RemoveAll(Delegate, Delegate)\n- uid: System.Delegate.Target\n  parent: System.Delegate\n  isExternal: false\n  name: Target\n  nameWithType: Delegate.Target\n  fullName: Delegate.Target\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}