{"nodes":[{"content":"Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.","nodes":[{"pos":[0,106],"content":"Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.","nodes":[{"content":"Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.","pos":[0,106]}]}],"pos":[1143,1250],"yaml":true},{"content":"For general information about how namespaces are declared and used in XML documents, see [Managing Namespaces in an XML Document](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md).  \n  \n <xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings. Here's a summary of management and lookup tasks you can perform with this class. For more information and examples, follow the links to the reference page for each method or property.  \n  \n|To|Use|  \n|--------|---------|  \n|Add a namespace|<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method|  \n|Remove a namespace|<xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> method|  \n|Find the URI for the default namespace|<xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> property|  \n|Find the URI for a namespace prefix|<xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method|  \n|Find the prefix for a namespace URI|<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method|  \n|Get a list of namespaces in the current node|<xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method|  \n|Scope a namespace|<xref:System.Xml.XmlNamespaceManager.PushScope%2A> and <xref:System.Xml.XmlNamespaceManager.PopScope%2A> methods|  \n|Check whether a prefix is defined in the current scope|<xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> method|  \n|Get the name table used to look up prefixes and URIs|<xref:System.Xml.XmlNamespaceManager.NameTable%2A> property|  \n  \n To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method. Default prefix and namespace pairs are automatically added to the namespace manager on creation.  \n  \n When you create the namespace manager, you can specify a name table from the <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, or <xref:System.Xml.XmlDocument> class, and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method to add the namespaces.  \n  \n You can supply the <xref:System.Xml.XmlNamespaceManager> object as a parameter to the <xref:System.Xml.XmlNode.SelectNodes%2A> or <xref:System.Xml.XmlNode.SelectSingleNode%2A> method of the <xref:System.Xml.XmlDocument> class to execute XPath query expressions that reference namespace-qualified element and attribute names.  \n  \n The namespace manager assumes that prefixes and namespaces have already been verified and conform to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) specification. The namespace manager does not perform any validation.  \n  \n The namespace manager atomizes the strings when they are added by using the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method and when a lookup is performed by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> or <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method.  \n  \n The namespace manager implements enumeration support in addition to adding and retrieving namespaces. You can loop through the information saved in the namespace manager by using the `foreach` construct. For example, if you create a namespace manager with the name `nsmanager`, you can iterate through the table by using `foreach (String prefix in nsmanager)`.  \n  \n Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.  \n  \n The following code example shows how to bind the prefix `xsd` with the namespace URI of `http://www.w3.org/2001/XMLSchema` and add it to the namespace manager:  \n  \n```vb  \nnsmgr.AddNamespace(\"xsd\", \"http://www.w3.org/2001/XMLSchema\")  \n```  \n  \n```csharp  \nnsmgr.AddNamespace(\"xsd\", \"http://www.w3.org/2001/XMLSchema\");  \n```  \n  \n You can then find the namespace by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method:  \n  \n```vb  \nnsmgr.LookupNamespace(\"xsd\")  \n```  \n  \n```csharp  \nnsmgr.LookupNamespace(\"xsd\");  \n```  \n  \n The following example creates an <xref:System.Xml.XmlNamespaceManager> by using the name table from an XML reader:  \n  \n```vb  \nDim reader As New XmlTextReader(\"myfile.xml\")  \nDim nsmanager As New XmlNamespaceManager(reader.NameTable)  \nnsmanager.AddNamespace(\"msbooks\", \"www.microsoft.com/books\")  \nnsmanager.PushScope()  \nnsmanager.AddNamespace(\"msstore\", \"www.microsoft.com/store\")  \nWhile reader.Read()  \n    Console.WriteLine(\"Reader Prefix:{0}\", reader.Prefix)  \n    Console.WriteLine(\"XmlNamespaceManager Prefix:{0}\",  \n     nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)))  \nEnd While  \n```  \n  \n```csharp  \nXmlTextReader reader = new XmlTextReader(\"myfile.xml\");  \nXmlNamespaceManager nsmanager = new XmlNamespaceManager(reader.NameTable);  \nnsmanager.AddNamespace(\"msbooks\", \"www.microsoft.com/books\");  \nnsmanager.PushScope();  \nnsmanager.AddNamespace(\"msstore\", \"www.microsoft.com/store\");  \nwhile (reader.Read())  \n{  \n    Console.WriteLine(\"Reader Prefix:{0}\", reader.Prefix);  \n    Console.WriteLine(\"XmlNamespaceManager Prefix:{0}\",  \n    nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)));  \n}  \n```","nodes":[{"pos":[0,198],"content":"For general information about how namespaces are declared and used in XML documents, see <bpt id=\"p1\">[</bpt>Managing Namespaces in an XML Document<ept id=\"p1\">](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)</ept>.","source":"For general information about how namespaces are declared and used in XML documents, see [Managing Namespaces in an XML Document](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md)."},{"pos":[205,469],"content":"<xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings. Here's a summary of management and lookup tasks you can perform with this class. For more information and examples, follow the links to the reference page for each method or property.","nodes":[{"content":"<xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings. Here's a summary of management and lookup tasks you can perform with this class. For more information and examples, follow the links to the reference page for each method or property.","pos":[0,264],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> stores prefixes and namespaces as strings.","pos":[0,80],"source":"<xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings."},{"content":"Here's a summary of management and lookup tasks you can perform with this class.","pos":[81,161]},{"content":"For more information and examples, follow the links to the reference page for each method or property.","pos":[162,264]}]}]},{"pos":[476,478],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[479,482],"content":"Use","nodes":[{"content":"Use","pos":[0,3]}]},{"pos":[510,525],"content":"Add a namespace","nodes":[{"content":"Add a namespace","pos":[0,15]}]},{"pos":[526,586],"content":"<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> method","pos":[0,60],"source":"<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method"}]},{"pos":[591,609],"content":"Remove a namespace","nodes":[{"content":"Remove a namespace","pos":[0,18]}]},{"pos":[610,673],"content":"<xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A&gt;</ph> method","pos":[0,63],"source":"<xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> method"}]},{"pos":[678,716],"content":"Find the URI for the default namespace","nodes":[{"content":"Find the URI for the default namespace","pos":[0,38]}]},{"pos":[717,783],"content":"<xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> property","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A&gt;</ph> property","pos":[0,66],"source":"<xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> property"}]},{"pos":[788,823],"content":"Find the URI for a namespace prefix","nodes":[{"content":"Find the URI for a namespace prefix","pos":[0,35]}]},{"pos":[824,887],"content":"<xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A&gt;</ph> method","pos":[0,63],"source":"<xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method"}]},{"pos":[892,927],"content":"Find the prefix for a namespace URI","nodes":[{"content":"Find the prefix for a namespace URI","pos":[0,35]}]},{"pos":[928,988],"content":"<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A&gt;</ph> method","pos":[0,60],"source":"<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method"}]},{"pos":[993,1037],"content":"Get a list of namespaces in the current node","nodes":[{"content":"Get a list of namespaces in the current node","pos":[0,44]}]},{"pos":[1038,1106],"content":"<xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A&gt;</ph> method","pos":[0,68],"source":"<xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method"}]},{"pos":[1111,1128],"content":"Scope a namespace","nodes":[{"content":"Scope a namespace","pos":[0,17]}]},{"pos":[1129,1241],"content":"<xref:System.Xml.XmlNamespaceManager.PushScope%2A> and <xref:System.Xml.XmlNamespaceManager.PopScope%2A> methods","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.PushScope%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager.PopScope%2A&gt;</ph> methods","pos":[0,112],"source":"<xref:System.Xml.XmlNamespaceManager.PushScope%2A> and <xref:System.Xml.XmlNamespaceManager.PopScope%2A> methods"}]},{"pos":[1246,1300],"content":"Check whether a prefix is defined in the current scope","nodes":[{"content":"Check whether a prefix is defined in the current scope","pos":[0,54]}]},{"pos":[1301,1361],"content":"<xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.HasNamespace%2A&gt;</ph> method","pos":[0,60],"source":"<xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> method"}]},{"pos":[1366,1418],"content":"Get the name table used to look up prefixes and URIs","nodes":[{"content":"Get the name table used to look up prefixes and URIs","pos":[0,52]}]},{"pos":[1419,1478],"content":"<xref:System.Xml.XmlNamespaceManager.NameTable%2A> property","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.NameTable%2A&gt;</ph> property","pos":[0,59],"source":"<xref:System.Xml.XmlNamespaceManager.NameTable%2A> property"}]},{"pos":[1486,1763],"content":"To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method. Default prefix and namespace pairs are automatically added to the namespace manager on creation.","nodes":[{"content":"To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method. Default prefix and namespace pairs are automatically added to the namespace manager on creation.","pos":[0,277],"nodes":[{"content":"To add namespaces to the namespace manager, you create a <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> object and then use the <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> method.","pos":[0,180],"source":"To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method."},{"content":"Default prefix and namespace pairs are automatically added to the namespace manager on creation.","pos":[181,277]}]}]},{"pos":[1770,2051],"content":"When you create the namespace manager, you can specify a name table from the <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, or <xref:System.Xml.XmlDocument> class, and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method to add the namespaces.","nodes":[{"content":"When you create the namespace manager, you can specify a name table from the <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Xml.Xsl.XsltContext&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class, and then use the <ph id=\"ph4\">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> method to add the namespaces.","pos":[0,281],"source":"When you create the namespace manager, you can specify a name table from the <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, or <xref:System.Xml.XmlDocument> class, and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method to add the namespaces."}]},{"pos":[2058,2382],"content":"You can supply the <xref:System.Xml.XmlNamespaceManager> object as a parameter to the <xref:System.Xml.XmlNode.SelectNodes%2A> or <xref:System.Xml.XmlNode.SelectSingleNode%2A> method of the <xref:System.Xml.XmlDocument> class to execute XPath query expressions that reference namespace-qualified element and attribute names.","nodes":[{"content":"You can supply the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> object as a parameter to the <ph id=\"ph2\">&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.Xml.XmlDocument&gt;</ph> class to execute XPath query expressions that reference namespace-qualified element and attribute names.","pos":[0,324],"source":"You can supply the <xref:System.Xml.XmlNamespaceManager> object as a parameter to the <xref:System.Xml.XmlNode.SelectNodes%2A> or <xref:System.Xml.XmlNode.SelectSingleNode%2A> method of the <xref:System.Xml.XmlDocument> class to execute XPath query expressions that reference namespace-qualified element and attribute names."}]},{"pos":[2389,2617],"content":"The namespace manager assumes that prefixes and namespaces have already been verified and conform to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) specification. The namespace manager does not perform any validation.","nodes":[{"content":"The namespace manager assumes that prefixes and namespaces have already been verified and conform to the <bpt id=\"p1\">[</bpt>W3C Namespaces<ept id=\"p1\">](http://www.w3.org/TR/REC-xml-names/)</ept> specification.","pos":[0,173],"source":"The namespace manager assumes that prefixes and namespaces have already been verified and conform to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) specification."},{"content":"The namespace manager does not perform any validation.","pos":[174,228]}]},{"pos":[2624,2926],"content":"The namespace manager atomizes the strings when they are added by using the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method and when a lookup is performed by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> or <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method.","nodes":[{"content":"The namespace manager atomizes the strings when they are added by using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> method and when a lookup is performed by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A&gt;</ph> method.","pos":[0,302],"source":"The namespace manager atomizes the strings when they are added by using the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method and when a lookup is performed by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> or <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method."}]},{"pos":[2933,3293],"content":"The namespace manager implements enumeration support in addition to adding and retrieving namespaces. You can loop through the information saved in the namespace manager by using the `foreach` construct. For example, if you create a namespace manager with the name `nsmanager`, you can iterate through the table by using `foreach (String prefix in nsmanager)`.","nodes":[{"content":"The namespace manager implements enumeration support in addition to adding and retrieving namespaces.","pos":[0,101]},{"content":"You can loop through the information saved in the namespace manager by using the <ph id=\"ph1\">`foreach`</ph> construct.","pos":[102,203],"source":" You can loop through the information saved in the namespace manager by using the `foreach` construct."},{"content":"For example, if you create a namespace manager with the name <ph id=\"ph1\">`nsmanager`</ph>, you can iterate through the table by using <ph id=\"ph2\">`foreach (String prefix in nsmanager)`</ph>.","pos":[204,360],"source":" For example, if you create a namespace manager with the name `nsmanager`, you can iterate through the table by using `foreach (String prefix in nsmanager)`."}]},{"pos":[3300,3509],"content":"Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.","nodes":[{"content":"Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.","pos":[0,209]}]},{"pos":[3516,3675],"content":"The following code example shows how to bind the prefix <ph id=\"ph1\">`xsd`</ph> with the namespace URI of <ph id=\"ph2\">`http://www.w3.org/2001/XMLSchema`</ph> and add it to the namespace manager:","source":"The following code example shows how to bind the prefix `xsd` with the namespace URI of `http://www.w3.org/2001/XMLSchema` and add it to the namespace manager:"},{"pos":[3849,3958],"content":"You can then find the namespace by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method:","nodes":[{"content":"You can then find the namespace by using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A&gt;</ph> method:","pos":[0,109],"source":"You can then find the namespace by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method:"}]},{"pos":[4066,4180],"content":"The following example creates an <xref:System.Xml.XmlNamespaceManager> by using the name table from an XML reader:","nodes":[{"content":"The following example creates an <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> by using the name table from an XML reader:","pos":[0,114],"source":"The following example creates an <xref:System.Xml.XmlNamespaceManager> by using the name table from an XML reader:"}]}],"pos":[1261,6603],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.XmlNamespaceManager\"></xref> class with the specified <xref href=\"System.Xml.XmlNameTable\"></xref>.","nodes":[{"pos":[0,156],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNamespaceManager\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlNameTable\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Xml.XmlNamespaceManager\"></xref> class with the specified <xref href=\"System.Xml.XmlNameTable\"></xref>."}],"pos":[9128,9285],"yaml":true},{"content":"The name table is used to look up prefixes and namespaces. An existing name table with pre-atomized strings can be specified in the constructor. There are several advantages in doing so. For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>.  \n  \n For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.  \n  \n> [!NOTE]\n>  If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>. You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces.","nodes":[{"pos":[0,401],"content":"The name table is used to look up prefixes and namespaces. An existing name table with pre-atomized strings can be specified in the constructor. There are several advantages in doing so. For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>.","nodes":[{"content":"The name table is used to look up prefixes and namespaces. An existing name table with pre-atomized strings can be specified in the constructor. There are several advantages in doing so. For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>.","pos":[0,401],"nodes":[{"content":"The name table is used to look up prefixes and namespaces.","pos":[0,58]},{"content":"An existing name table with pre-atomized strings can be specified in the constructor.","pos":[59,144]},{"content":"There are several advantages in doing so.","pos":[145,186]},{"content":"For example, if the name table of an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>.","pos":[187,401],"source":" For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>."}]}]},{"pos":[408,485],"content":"For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.","nodes":[{"content":"For more information on atomized strings, see <ph id=\"ph1\">&lt;xref:System.Xml.XmlNameTable&gt;</ph>.","pos":[0,77],"source":"For more information on atomized strings, see <xref:System.Xml.XmlNameTable>."}]},{"pos":[493,802],"content":"[!NOTE]\n If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>. You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces.","leadings":["","> "],"nodes":[{"content":" If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>. You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces.","pos":[8,307],"nodes":[{"content":"If you specify an existing name table, any namespaces in the name table are not automatically added to <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>.","pos":[1,142],"source":" If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>."},{"content":"You must use <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A&gt;</ph> to add or remove namespaces.","pos":[143,299],"source":" You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces."}]}]}],"pos":[9296,10106],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XmlNameTable\"></xref> to use.","nodes":[{"pos":[0,56],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNameTable\"&gt;&lt;/xref&gt;</ph> to use.","source":"The <xref href=\"System.Xml.XmlNameTable\"></xref> to use."}],"pos":[11032,11089],"yaml":true},{"content":"`null` is passed to the constructor","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">`null`</ph> is passed to the constructor","source":"`null` is passed to the constructor"}],"pos":[11257,11295],"yaml":true},{"content":"Adds the given namespace to the collection.","nodes":[{"pos":[0,43],"content":"Adds the given namespace to the collection.","nodes":[{"content":"Adds the given namespace to the collection.","pos":[0,43]}]}],"pos":[12886,12930],"yaml":true},{"content":"<xref:System.Xml.XmlNamespaceManager> does not check `prefix` and `uri` for conformance.  \n  \n <xref:System.Xml.XmlReader> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) [Namespaces specification](http://www.w3.org/TR/REC-xml-names/). <xref:System.Xml.XmlNamespaceManager> is used internally by <xref:System.Xml.XmlReader>, so to avoid a duplication of efforts, <xref:System.Xml.XmlNamespaceManager> assumes all prefixes and namespaces are valid.  \n  \n If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination. The same prefix and namespace combination can exist across different scopes.  \n  \n The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>. They can be determined at any scope.  \n  \n|Prefix|Namespace|  \n|------------|---------------|  \n|xmlns|http://www.w3.org/2000/xmlns/ (the xmlns prefix namespace)|  \n|xml|http://www.w3.org/XML/1998/namespace (the XML namespace)|  \n|String.Empty|String.Empty (the empty namespace). This value can be reassigned a different prefix. For example, xmlns=\"\" defines the default namespace to be the empty namespace|","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> does not check <ph id=\"ph2\">`prefix`</ph> and <ph id=\"ph3\">`uri`</ph> for conformance.","source":"<xref:System.Xml.XmlNamespaceManager> does not check `prefix` and `uri` for conformance."},{"pos":[95,532],"content":"<xref:System.Xml.XmlReader> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) [Namespaces specification](http://www.w3.org/TR/REC-xml-names/). <xref:System.Xml.XmlNamespaceManager> is used internally by <xref:System.Xml.XmlReader>, so to avoid a duplication of efforts, <xref:System.Xml.XmlNamespaceManager> assumes all prefixes and namespaces are valid.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) <bpt id=\"p1\">[</bpt>Namespaces specification<ept id=\"p1\">](http://www.w3.org/TR/REC-xml-names/)</ept>.","pos":[0,225],"source":"<xref:System.Xml.XmlReader> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) [Namespaces specification](http://www.w3.org/TR/REC-xml-names/)."},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> is used internally by <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph>, so to avoid a duplication of efforts, <ph id=\"ph3\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> assumes all prefixes and namespaces are valid.","pos":[226,437],"source":" <xref:System.Xml.XmlNamespaceManager> is used internally by <xref:System.Xml.XmlReader>, so to avoid a duplication of efforts, <xref:System.Xml.XmlNamespaceManager> assumes all prefixes and namespaces are valid."}]},{"pos":[539,773],"content":"If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination. The same prefix and namespace combination can exist across different scopes.","nodes":[{"content":"If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination. The same prefix and namespace combination can exist across different scopes.","pos":[0,234],"nodes":[{"content":"If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination.","pos":[0,157]},{"content":"The same prefix and namespace combination can exist across different scopes.","pos":[158,234]}]}]},{"pos":[780,920],"content":"The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>. They can be determined at any scope.","nodes":[{"content":"The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>. They can be determined at any scope.","pos":[0,140],"nodes":[{"content":"The following prefix/namespace pairs are added by default to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>.","pos":[0,103],"source":"The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>."},{"content":"They can be determined at any scope.","pos":[104,140]}]}]},{"pos":[927,933],"content":"Prefix","nodes":[{"content":"Prefix","pos":[0,6]}]},{"pos":[934,943],"content":"Namespace","nodes":[{"content":"Namespace","pos":[0,9]}]},{"pos":[981,986],"content":"xmlns","nodes":[{"content":"xmlns","pos":[0,5]}]},{"pos":[987,1045],"content":"http://www.w3.org/2000/xmlns/ (the xmlns prefix namespace)","nodes":[{"content":"http://www.w3.org/2000/xmlns/ (the xmlns prefix namespace)","pos":[0,58]}]},{"pos":[1050,1053],"content":"xml","nodes":[{"content":"xml","pos":[0,3]}]},{"pos":[1054,1110],"content":"http://www.w3.org/XML/1998/namespace (the XML namespace)","nodes":[{"content":"http://www.w3.org/XML/1998/namespace (the XML namespace)","pos":[0,56]}]},{"pos":[1115,1127],"content":"String.Empty","nodes":[{"content":"String.Empty","pos":[0,12]}]},{"pos":[1128,1290],"content":"String.Empty (the empty namespace). This value can be reassigned a different prefix. For example, xmlns=\"\" defines the default namespace to be the empty namespace","nodes":[{"content":"String.Empty (the empty namespace). This value can be reassigned a different prefix. For example, xmlns=\"\" defines the default namespace to be the empty namespace","pos":[0,162],"nodes":[{"content":"String.Empty (the empty namespace).","pos":[0,35]},{"content":"This value can be reassigned a different prefix.","pos":[36,84]},{"content":"For example, xmlns=\"\" defines the default namespace to be the empty namespace","pos":[85,162]}]}]}],"pos":[12941,14249],"yaml":true,"extradata":"MT"},{"content":"The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.  \n  \n **Note**If the <xref href=\"System.Xml.XmlNamespaceManager\"></xref> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified. If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace. For more information about XPath expressions and the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>, refer to the <xref href=\"System.Xml.XmlNode.SelectNodes(System.String)\"></xref> and <xref href=\"System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\"></xref> methods.","nodes":[{"pos":[0,100],"content":"The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.","nodes":[{"content":"The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.","pos":[0,100],"nodes":[{"content":"The prefix to associate with the namespace being added.","pos":[0,55]},{"content":"Use String.Empty to add a default namespace.","pos":[56,100]}]}]},{"pos":[107,720],"content":"**Note**If the <xref href=\"System.Xml.XmlNamespaceManager\"></xref> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified. If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace. For more information about XPath expressions and the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>, refer to the <xref href=\"System.Xml.XmlNode.SelectNodes(System.String)\"></xref> and <xref href=\"System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\"></xref> methods.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>If the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNamespaceManager\"&gt;&lt;/xref&gt;</ph> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified.","pos":[0,176],"source":"**Note**If the <xref href=\"System.Xml.XmlNamespaceManager\"></xref> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified."},{"content":"If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace.","pos":[177,317]},{"content":"For more information about XPath expressions and the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNamespaceManager\"&gt;&lt;/xref&gt;</ph>, refer to the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlNode.SelectNodes(System.String)\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\"&gt;&lt;/xref&gt;</ph> methods.","pos":[318,613],"source":" For more information about XPath expressions and the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>, refer to the <xref href=\"System.Xml.XmlNode.SelectNodes(System.String)\"></xref> and <xref href=\"System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\"></xref> methods."}]}],"pos":[14929,15662],"yaml":true},{"content":"The namespace to add.","nodes":[{"pos":[0,21],"content":"The namespace to add.","nodes":[{"content":"The namespace to add.","pos":[0,21]}]}],"pos":[15721,15743],"yaml":true},{"content":"The value for <code>prefix</code> is \"xml\" or \"xmlns\".","nodes":[{"pos":[0,54],"content":"The value for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">prefix</ph><ept id=\"p1\">&lt;/code&gt;</ept> is \"xml\" or \"xmlns\".","source":"The value for <code>prefix</code> is \"xml\" or \"xmlns\"."}],"pos":[15908,15963],"yaml":true},{"content":"The value for <code>prefix</code> or <code>uri</code> is `null`.","nodes":[{"pos":[0,64],"content":"The value for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">prefix</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">uri</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"The value for <code>prefix</code> or <code>uri</code> is `null`."}],"pos":[16065,16130],"yaml":true},{"content":"Gets the namespace URI for the default namespace.","nodes":[{"pos":[0,49],"content":"Gets the namespace URI for the default namespace.","nodes":[{"content":"Gets the namespace URI for the default namespace.","pos":[0,49]}]}],"pos":[17612,17662],"yaml":true},{"content":"This method is equivalent to calling LookupNamespace(String.Empty).","nodes":[{"pos":[0,67],"content":"This method is equivalent to calling LookupNamespace(String.Empty).","nodes":[{"content":"This method is equivalent to calling LookupNamespace(String.Empty).","pos":[0,67]}]}],"pos":[17673,17741],"yaml":true,"extradata":"MT"},{"content":"Returns the namespace URI for the default namespace, or String.Empty if there is no default namespace.","nodes":[{"pos":[0,102],"content":"Returns the namespace URI for the default namespace, or String.Empty if there is no default namespace.","nodes":[{"content":"Returns the namespace URI for the default namespace, or String.Empty if there is no default namespace.","pos":[0,102]}]}],"pos":[18561,18664],"yaml":true},{"content":"Returns an enumerator to use to iterate through the namespaces in the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>.","nodes":[{"pos":[0,122],"content":"Returns an enumerator to use to iterate through the namespaces in the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNamespaceManager\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerator to use to iterate through the namespaces in the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>."}],"pos":[20210,20333],"yaml":true},{"content":"The following code shows how to use the <xref:System.Collections.IEnumerator> to view all the namespace pairs stored in the <xref:System.Xml.XmlNamespaceManager> object.  \n  \n```  \nDim nsEnum As IEnumerator = nsmgr.GetEnumerator()  \nDo While nsEnum.MoveNext  \n  If nsEnum.Current <> \"\" Then  \n    MsgBox(\"xmlns:\" + nsEnum.Current + \"=\" + nsmgr.LookupNamespace(nsEnum.Current))  \n  End If  \nLoop  \n```","nodes":[{"pos":[0,169],"content":"The following code shows how to use the <xref:System.Collections.IEnumerator> to view all the namespace pairs stored in the <xref:System.Xml.XmlNamespaceManager> object.","nodes":[{"content":"The following code shows how to use the <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator&gt;</ph> to view all the namespace pairs stored in the <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> object.","pos":[0,169],"source":"The following code shows how to use the <xref:System.Collections.IEnumerator> to view all the namespace pairs stored in the <xref:System.Xml.XmlNamespaceManager> object."}]}],"pos":[20344,20762],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> containing the prefixes stored by the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>.","nodes":[{"pos":[0,145],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> containing the prefixes stored by the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlNamespaceManager\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> containing the prefixes stored by the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>."}],"pos":[20942,21088],"yaml":true},{"content":"Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.","nodes":[{"pos":[0,118],"content":"Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.","nodes":[{"content":"Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.","pos":[0,118]}]}],"pos":[22814,22933],"yaml":true},{"content":"The dictionary consists of a collection of namespace names keyed by prefix. It can be used to enumerate the in-scope namespaces. The dictionary is a disconnected copy of the namespace list. It remains unchanged as the current in-scope namespace list changes.  \n  \n The following table shows how <xref:System.Xml.XmlNamespaceScope> values affect the namespaces returned by the <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method.  \n  \n|XmlNamespaceScope value|xmlns:xml|xmlns:xmlns|xmlns=\"\"|  \n|-----------------------------|---------------|-----------------|---------------|  \n|`All`|Yes|No|No|  \n|`ExcludeXml`|No|No|No|  \n|`Local`|No|No|Yes|","nodes":[{"pos":[0,258],"content":"The dictionary consists of a collection of namespace names keyed by prefix. It can be used to enumerate the in-scope namespaces. The dictionary is a disconnected copy of the namespace list. It remains unchanged as the current in-scope namespace list changes.","nodes":[{"content":"The dictionary consists of a collection of namespace names keyed by prefix. It can be used to enumerate the in-scope namespaces. The dictionary is a disconnected copy of the namespace list. It remains unchanged as the current in-scope namespace list changes.","pos":[0,258],"nodes":[{"content":"The dictionary consists of a collection of namespace names keyed by prefix.","pos":[0,75]},{"content":"It can be used to enumerate the in-scope namespaces.","pos":[76,128]},{"content":"The dictionary is a disconnected copy of the namespace list.","pos":[129,189]},{"content":"It remains unchanged as the current in-scope namespace list changes.","pos":[190,258]}]}]},{"pos":[265,445],"content":"The following table shows how <xref:System.Xml.XmlNamespaceScope> values affect the namespaces returned by the <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method.","nodes":[{"content":"The following table shows how <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceScope&gt;</ph> values affect the namespaces returned by the <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A&gt;</ph> method.","pos":[0,180],"source":"The following table shows how <xref:System.Xml.XmlNamespaceScope> values affect the namespaces returned by the <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method."}]},{"pos":[452,475],"content":"XmlNamespaceScope value","nodes":[{"content":"XmlNamespaceScope value","pos":[0,23]}]},{"pos":[476,485],"content":"xmlns:xml","nodes":[{"content":"xmlns:xml","pos":[0,9]}]},{"pos":[486,497],"content":"xmlns:xmlns","nodes":[{"content":"xmlns:xmlns","pos":[0,11]}]},{"pos":[498,506],"content":"xmlns=\"\"","nodes":[{"content":"xmlns=\"\"","pos":[0,8]}]},{"pos":[601,604],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[605,607],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[608,610],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[628,630],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[631,633],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[634,636],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[649,651],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[652,654],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[655,658],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]}],"pos":[22944,23616],"yaml":true,"extradata":"MT"},{"content":"An enumeration value that specifies the type of namespace nodes to return.","nodes":[{"pos":[0,74],"content":"An enumeration value that specifies the type of namespace nodes to return.","nodes":[{"content":"An enumeration value that specifies the type of namespace nodes to return.","pos":[0,74]}]}],"pos":[23859,23934],"yaml":true},{"content":"A collection of namespace and prefix pairs currently in scope.","nodes":[{"pos":[0,62],"content":"A collection of namespace and prefix pairs currently in scope.","nodes":[{"content":"A collection of namespace and prefix pairs currently in scope.","pos":[0,62]}]}],"pos":[24045,24108],"yaml":true},{"content":"Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.","nodes":[{"pos":[0,105],"content":"Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.","nodes":[{"content":"Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.","pos":[0,105]}]}],"pos":[25715,25821],"yaml":true},{"content":"To determine whether there is a default empty namespace defined, set `prefix` to String.Empty. A return value of `true` indicates that there is a default namespace defined in the current scope; `false` indicates that no default namespace is defined.  \n  \n> [!NOTE]\n>  xmlns:x= \"\" is illegal according to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) recommendation.","nodes":[{"pos":[0,249],"content":"To determine whether there is a default empty namespace defined, set `prefix` to String.Empty. A return value of `true` indicates that there is a default namespace defined in the current scope; `false` indicates that no default namespace is defined.","nodes":[{"content":"To determine whether there is a default empty namespace defined, set <ph id=\"ph1\">`prefix`</ph> to String.Empty.","pos":[0,94],"source":"To determine whether there is a default empty namespace defined, set `prefix` to String.Empty."},{"content":"A return value of <ph id=\"ph1\">`true`</ph> indicates that there is a default namespace defined in the current scope; <ph id=\"ph2\">`false`</ph> indicates that no default namespace is defined.","pos":[95,249],"source":" A return value of `true` indicates that there is a default namespace defined in the current scope; `false` indicates that no default namespace is defined."}]},{"pos":[257,377],"content":"[!NOTE]\n xmlns:x= \"\" is illegal according to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) recommendation.","leadings":["","> "],"nodes":[{"content":"xmlns:x= \"\" is illegal according to the <bpt id=\"p1\">[</bpt>W3C Namespaces<ept id=\"p1\">](http://www.w3.org/TR/REC-xml-names/)</ept> recommendation.","pos":[9,118],"source":" xmlns:x= \"\" is illegal according to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) recommendation."}]}],"pos":[25832,26217],"yaml":true,"extradata":"MT"},{"content":"The prefix of the namespace you want to find.","nodes":[{"pos":[0,45],"content":"The prefix of the namespace you want to find.","nodes":[{"content":"The prefix of the namespace you want to find.","pos":[0,45]}]}],"pos":[27060,27106],"yaml":true},{"content":"`true` if there is a namespace defined; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if there is a namespace defined; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if there is a namespace defined; otherwise, `false`."}],"pos":[27164,27226],"yaml":true},{"content":"Gets the namespace URI for the specified prefix.","nodes":[{"pos":[0,48],"content":"Gets the namespace URI for the specified prefix.","nodes":[{"content":"Gets the namespace URI for the specified prefix.","pos":[0,48]}]}],"pos":[28843,28892],"yaml":true},{"content":"The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.","nodes":[{"pos":[0,102],"content":"The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.","nodes":[{"content":"The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.","pos":[0,102],"nodes":[{"content":"The prefix whose namespace URI you want to resolve.","pos":[0,51]},{"content":"To match the default namespace, pass String.Empty.","pos":[52,102]}]}]}],"pos":[29784,29887],"yaml":true},{"content":"Returns the namespace URI for <code>prefix</code> or `null` if there is no mapped namespace. The returned string is atomized.  \n  \n For more information on atomized strings, see the <xref href=\"System.Xml.XmlNameTable\"></xref> class.","nodes":[{"pos":[0,125],"content":"Returns the namespace URI for <code>prefix</code> or `null` if there is no mapped namespace. The returned string is atomized.","nodes":[{"content":"Returns the namespace URI for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">prefix</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <ph id=\"ph2\">`null`</ph> if there is no mapped namespace.","pos":[0,92],"source":"Returns the namespace URI for <code>prefix</code> or `null` if there is no mapped namespace."},{"content":"The returned string is atomized.","pos":[93,125]}]},{"pos":[132,233],"content":"For more information on atomized strings, see the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNameTable\"&gt;&lt;/xref&gt;</ph> class.","source":"For more information on atomized strings, see the <xref href=\"System.Xml.XmlNameTable\"></xref> class."}],"pos":[29944,30184],"yaml":true},{"content":"Finds the prefix declared for the given namespace URI.","nodes":[{"pos":[0,54],"content":"Finds the prefix declared for the given namespace URI.","nodes":[{"content":"Finds the prefix declared for the given namespace URI.","pos":[0,54]}]}],"pos":[31786,31841],"yaml":true},{"content":"This method finds the mapped prefix by walking the stack (that is, it looks globally). The supplied string must be atomized for the lookup to succeed. In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).  \n  \n The returned string is also atomized. For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class.","nodes":[{"pos":[0,296],"content":"This method finds the mapped prefix by walking the stack (that is, it looks globally). The supplied string must be atomized for the lookup to succeed. In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).","nodes":[{"content":"This method finds the mapped prefix by walking the stack (that is, it looks globally). The supplied string must be atomized for the lookup to succeed. In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).","pos":[0,296],"nodes":[{"content":"This method finds the mapped prefix by walking the stack (that is, it looks globally).","pos":[0,86]},{"content":"The supplied string must be atomized for the lookup to succeed.","pos":[87,150]},{"content":"In other words, the supplied string object must exist in the namespace manager's name table (<ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager.NameTable%2A&gt;</ph>).","pos":[151,296],"source":" In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>)."}]}]},{"pos":[303,428],"content":"The returned string is also atomized. For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class.","nodes":[{"content":"The returned string is also atomized. For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class.","pos":[0,125],"nodes":[{"content":"The returned string is also atomized.","pos":[0,37]},{"content":"For more information on atomized strings, see the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNameTable&gt;</ph> class.","pos":[38,125],"source":" For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class."}]}]}],"pos":[31852,32285],"yaml":true,"extradata":"MT"},{"content":"The namespace to resolve for the prefix.","nodes":[{"pos":[0,40],"content":"The namespace to resolve for the prefix.","nodes":[{"content":"The namespace to resolve for the prefix.","pos":[0,40]}]}],"pos":[33963,34004],"yaml":true},{"content":"The matching prefix. If there is no mapped prefix, the method returns String.Empty. If a null value is supplied, then `null` is returned.","nodes":[{"pos":[0,137],"content":"The matching prefix. If there is no mapped prefix, the method returns String.Empty. If a null value is supplied, then `null` is returned.","nodes":[{"content":"The matching prefix.","pos":[0,20]},{"content":"If there is no mapped prefix, the method returns String.Empty.","pos":[21,83]},{"content":"If a null value is supplied, then <ph id=\"ph1\">`null`</ph> is returned.","pos":[84,137],"source":" If a null value is supplied, then `null` is returned."}]}],"pos":[34061,34199],"yaml":true},{"content":"Gets the <xref href=\"System.Xml.XmlNameTable\"></xref> associated with this object.","nodes":[{"pos":[0,82],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNameTable\"&gt;&lt;/xref&gt;</ph> associated with this object.","source":"Gets the <xref href=\"System.Xml.XmlNameTable\"></xref> associated with this object."}],"pos":[35713,35796],"yaml":true},{"content":"The name table is used to look up prefixes and namespace URIs.","nodes":[{"pos":[0,62],"content":"The name table is used to look up prefixes and namespace URIs.","nodes":[{"content":"The name table is used to look up prefixes and namespace URIs.","pos":[0,62]}]}],"pos":[35807,35870],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XmlNameTable\"></xref> used by this object.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNameTable\"&gt;&lt;/xref&gt;</ph> used by this object.","source":"The <xref href=\"System.Xml.XmlNameTable\"></xref> used by this object."}],"pos":[36018,36088],"yaml":true},{"content":"Pops a namespace scope off the stack.","nodes":[{"pos":[0,37],"content":"Pops a namespace scope off the stack.","nodes":[{"content":"Pops a namespace scope off the stack.","pos":[0,37]}]}],"pos":[37597,37635],"yaml":true},{"content":"When you call this method, all namespaces which were added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) since the last call to <xref:System.Xml.XmlNamespaceManager.PopScope%2A> are removed.","nodes":[{"pos":[0,252],"content":"When you call this method, all namespaces which were added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) since the last call to <xref:System.Xml.XmlNamespaceManager.PopScope%2A> are removed.","nodes":[{"content":"When you call this method, all namespaces which were added to <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> (by calling <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph>) since the last call to <ph id=\"ph3\">&lt;xref:System.Xml.XmlNamespaceManager.PopScope%2A&gt;</ph> are removed.","pos":[0,252],"source":"When you call this method, all namespaces which were added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) since the last call to <xref:System.Xml.XmlNamespaceManager.PopScope%2A> are removed."}]}],"pos":[37646,37899],"yaml":true,"extradata":"MT"},{"content":"`true` if there are namespace scopes left on the stack; `false` if there are no more namespaces to pop.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if there are namespace scopes left on the stack; <ph id=\"ph2\">`false`</ph> if there are no more namespaces to pop.","source":"`true` if there are namespace scopes left on the stack; `false` if there are no more namespaces to pop."}],"pos":[38753,38859],"yaml":true},{"content":"Pushes a namespace scope onto the stack.","nodes":[{"pos":[0,40],"content":"Pushes a namespace scope onto the stack.","nodes":[{"content":"Pushes a namespace scope onto the stack.","pos":[0,40]}]}],"pos":[40373,40414],"yaml":true},{"content":"After a call to this method, all namespaces, which are added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), belong to the pushed namespace scope.","nodes":[{"pos":[0,207],"content":"After a call to this method, all namespaces, which are added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), belong to the pushed namespace scope.","nodes":[{"content":"After a call to this method, all namespaces, which are added to <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> (by calling <ph id=\"ph2\">&lt;xref:System.Xml.XmlNamespaceManager.AddNamespace%2A&gt;</ph>), belong to the pushed namespace scope.","pos":[0,207],"source":"After a call to this method, all namespaces, which are added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), belong to the pushed namespace scope."}]}],"pos":[40425,40633],"yaml":true,"extradata":"MT"},{"content":"Removes the given namespace for the given prefix.","nodes":[{"pos":[0,49],"content":"Removes the given namespace for the given prefix.","nodes":[{"content":"Removes the given namespace for the given prefix.","pos":[0,49]}]}],"pos":[43110,43160],"yaml":true},{"content":"The prefix for the namespace","nodes":[{"pos":[0,28],"content":"The prefix for the namespace","nodes":[{"content":"The prefix for the namespace","pos":[0,28]}]}],"pos":[43326,43355],"yaml":true},{"content":"The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored.","nodes":[{"pos":[0,154],"content":"The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored.","nodes":[{"content":"The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored.","pos":[0,154],"nodes":[{"content":"The namespace to remove for the given prefix.","pos":[0,45]},{"content":"The namespace removed is from the current namespace scope.","pos":[46,104]},{"content":"Namespaces outside the current scope are ignored.","pos":[105,154]}]}]}],"pos":[43414,43569],"yaml":true},{"content":"The value of <code>prefix</code> or <code>uri</code> is `null`.","nodes":[{"pos":[0,63],"content":"The value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">prefix</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">uri</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"The value of <code>prefix</code> or <code>uri</code> is `null`."}],"pos":[43745,43809],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlNamespaceManager\n  commentId: T:System.Xml.XmlNamespaceManager\n  id: XmlNamespaceManager\n  children:\n  - System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)\n  - System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)\n  - System.Xml.XmlNamespaceManager.DefaultNamespace\n  - System.Xml.XmlNamespaceManager.GetEnumerator\n  - System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  - System.Xml.XmlNamespaceManager.HasNamespace(System.String)\n  - System.Xml.XmlNamespaceManager.LookupNamespace(System.String)\n  - System.Xml.XmlNamespaceManager.LookupPrefix(System.String)\n  - System.Xml.XmlNamespaceManager.NameTable\n  - System.Xml.XmlNamespaceManager.PopScope\n  - System.Xml.XmlNamespaceManager.PushScope\n  - System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)\n  langs:\n  - csharp\n  name: XmlNamespaceManager\n  nameWithType: XmlNamespaceManager\n  fullName: System.Xml.XmlNamespaceManager\n  type: Class\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.\n  remarks: \"For general information about how namespaces are declared and used in XML documents, see [Managing Namespaces in an XML Document](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md).  \\n  \\n <xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings. Here's a summary of management and lookup tasks you can perform with this class. For more information and examples, follow the links to the reference page for each method or property.  \\n  \\n|To|Use|  \\n|--------|---------|  \\n|Add a namespace|<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method|  \\n|Remove a namespace|<xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> method|  \\n|Find the URI for the default namespace|<xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> property|  \\n|Find the URI for a namespace prefix|<xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method|  \\n|Find the prefix for a namespace URI|<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method|  \\n|Get a list of namespaces in the current node|<xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method|  \\n|Scope a namespace|<xref:System.Xml.XmlNamespaceManager.PushScope%2A> and <xref:System.Xml.XmlNamespaceManager.PopScope%2A> methods|  \\n|Check whether a prefix is defined in the current scope|<xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> method|  \\n|Get the name table used to look up prefixes and URIs|<xref:System.Xml.XmlNamespaceManager.NameTable%2A> property|  \\n  \\n To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method. Default prefix and namespace pairs are automatically added to the namespace manager on creation.  \\n  \\n When you create the namespace manager, you can specify a name table from the <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, or <xref:System.Xml.XmlDocument> class, and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method to add the namespaces.  \\n  \\n You can supply the <xref:System.Xml.XmlNamespaceManager> object as a parameter to the <xref:System.Xml.XmlNode.SelectNodes%2A> or <xref:System.Xml.XmlNode.SelectSingleNode%2A> method of the <xref:System.Xml.XmlDocument> class to execute XPath query expressions that reference namespace-qualified element and attribute names.  \\n  \\n The namespace manager assumes that prefixes and namespaces have already been verified and conform to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) specification. The namespace manager does not perform any validation.  \\n  \\n The namespace manager atomizes the strings when they are added by using the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method and when a lookup is performed by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> or <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method.  \\n  \\n The namespace manager implements enumeration support in addition to adding and retrieving namespaces. You can loop through the information saved in the namespace manager by using the `foreach` construct. For example, if you create a namespace manager with the name `nsmanager`, you can iterate through the table by using `foreach (String prefix in nsmanager)`.  \\n  \\n Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.  \\n  \\n The following code example shows how to bind the prefix `xsd` with the namespace URI of `http://www.w3.org/2001/XMLSchema` and add it to the namespace manager:  \\n  \\n```vb  \\nnsmgr.AddNamespace(\\\"xsd\\\", \\\"http://www.w3.org/2001/XMLSchema\\\")  \\n```  \\n  \\n```csharp  \\nnsmgr.AddNamespace(\\\"xsd\\\", \\\"http://www.w3.org/2001/XMLSchema\\\");  \\n```  \\n  \\n You can then find the namespace by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method:  \\n  \\n```vb  \\nnsmgr.LookupNamespace(\\\"xsd\\\")  \\n```  \\n  \\n```csharp  \\nnsmgr.LookupNamespace(\\\"xsd\\\");  \\n```  \\n  \\n The following example creates an <xref:System.Xml.XmlNamespaceManager> by using the name table from an XML reader:  \\n  \\n```vb  \\nDim reader As New XmlTextReader(\\\"myfile.xml\\\")  \\nDim nsmanager As New XmlNamespaceManager(reader.NameTable)  \\nnsmanager.AddNamespace(\\\"msbooks\\\", \\\"www.microsoft.com/books\\\")  \\nnsmanager.PushScope()  \\nnsmanager.AddNamespace(\\\"msstore\\\", \\\"www.microsoft.com/store\\\")  \\nWhile reader.Read()  \\n    Console.WriteLine(\\\"Reader Prefix:{0}\\\", reader.Prefix)  \\n    Console.WriteLine(\\\"XmlNamespaceManager Prefix:{0}\\\",  \\n     nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)))  \\nEnd While  \\n```  \\n  \\n```csharp  \\nXmlTextReader reader = new XmlTextReader(\\\"myfile.xml\\\");  \\nXmlNamespaceManager nsmanager = new XmlNamespaceManager(reader.NameTable);  \\nnsmanager.AddNamespace(\\\"msbooks\\\", \\\"www.microsoft.com/books\\\");  \\nnsmanager.PushScope();  \\nnsmanager.AddNamespace(\\\"msstore\\\", \\\"www.microsoft.com/store\\\");  \\nwhile (reader.Read())  \\n{  \\n    Console.WriteLine(\\\"Reader Prefix:{0}\\\", reader.Prefix);  \\n    Console.WriteLine(\\\"XmlNamespaceManager Prefix:{0}\\\",  \\n    nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)));  \\n}  \\n```\"\n  syntax:\n    content: 'public class XmlNamespaceManager : System.Collections.IEnumerable, System.Xml.IXmlNamespaceResolver'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Windows.Data.XmlNamespaceMappingCollection\n  - System.Xml.Xsl.XsltContext\n  implements:\n  - System.Collections.IEnumerable\n  - System.Xml.IXmlNamespaceResolver\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)\n  commentId: M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)\n  id: '#ctor(System.Xml.XmlNameTable)'\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: XmlNamespaceManager(XmlNameTable)\n  nameWithType: XmlNamespaceManager.XmlNamespaceManager(XmlNameTable)\n  fullName: XmlNamespaceManager.XmlNamespaceManager(XmlNameTable)\n  type: Constructor\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlNamespaceManager\"></xref> class with the specified <xref href=\"System.Xml.XmlNameTable\"></xref>.\n  remarks: \"The name table is used to look up prefixes and namespaces. An existing name table with pre-atomized strings can be specified in the constructor. There are several advantages in doing so. For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>.  \\n  \\n For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.  \\n  \\n> [!NOTE]\\n>  If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>. You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces.\"\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlNamespaceManager> using the name table of the reader.  \\n  \\n [!code-cpp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/VB/source.vb#1)]\"\n  syntax:\n    content: public XmlNamespaceManager (System.Xml.XmlNameTable nameTable);\n    parameters:\n    - id: nameTable\n      type: System.Xml.XmlNameTable\n      description: The <xref href=\"System.Xml.XmlNameTable\"></xref> to use.\n  overload: System.Xml.XmlNamespaceManager.#ctor*\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: '`null` is passed to the constructor'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)\n  commentId: M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)\n  id: AddNamespace(System.String,System.String)\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: AddNamespace(String, String)\n  nameWithType: XmlNamespaceManager.AddNamespace(String, String)\n  fullName: XmlNamespaceManager.AddNamespace(String, String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Adds the given namespace to the collection.\n  remarks: \"<xref:System.Xml.XmlNamespaceManager> does not check `prefix` and `uri` for conformance.  \\n  \\n <xref:System.Xml.XmlReader> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) [Namespaces specification](http://www.w3.org/TR/REC-xml-names/). <xref:System.Xml.XmlNamespaceManager> is used internally by <xref:System.Xml.XmlReader>, so to avoid a duplication of efforts, <xref:System.Xml.XmlNamespaceManager> assumes all prefixes and namespaces are valid.  \\n  \\n If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination. The same prefix and namespace combination can exist across different scopes.  \\n  \\n The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>. They can be determined at any scope.  \\n  \\n|Prefix|Namespace|  \\n|------------|---------------|  \\n|xmlns|http://www.w3.org/2000/xmlns/ (the xmlns prefix namespace)|  \\n|xml|http://www.w3.org/XML/1998/namespace (the XML namespace)|  \\n|String.Empty|String.Empty (the empty namespace). This value can be reassigned a different prefix. For example, xmlns=\\\"\\\" defines the default namespace to be the empty namespace|\"\n  example:\n  - \"The following example uses <xref:System.Xml.XmlNamespaceManager> to resolve namespaces in an XML fragment.  \\n  \\n [!code-csharp[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual void AddNamespace (string prefix, string uri);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: \"The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.  \\n  \\n **Note**If the <xref href=\\\"System.Xml.XmlNamespaceManager\\\"></xref> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified. If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace. For more information about XPath expressions and the <xref href=\\\"System.Xml.XmlNamespaceManager\\\"></xref>, refer to the <xref href=\\\"System.Xml.XmlNode.SelectNodes(System.String)\\\"></xref> and <xref href=\\\"System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\\\"></xref> methods.\"\n    - id: uri\n      type: System.String\n      description: The namespace to add.\n  overload: System.Xml.XmlNamespaceManager.AddNamespace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value for <code>prefix</code> is \"xml\" or \"xmlns\".\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value for <code>prefix</code> or <code>uri</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.DefaultNamespace\n  commentId: P:System.Xml.XmlNamespaceManager.DefaultNamespace\n  id: DefaultNamespace\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: DefaultNamespace\n  nameWithType: XmlNamespaceManager.DefaultNamespace\n  fullName: XmlNamespaceManager.DefaultNamespace\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets the namespace URI for the default namespace.\n  remarks: This method is equivalent to calling LookupNamespace(String.Empty).\n  example:\n  - \"The following example displays the default namespace, if one exists.  \\n  \\n [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual string DefaultNamespace { get; }\n    return:\n      type: System.String\n      description: Returns the namespace URI for the default namespace, or String.Empty if there is no default namespace.\n  overload: System.Xml.XmlNamespaceManager.DefaultNamespace*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.GetEnumerator\n  commentId: M:System.Xml.XmlNamespaceManager.GetEnumerator\n  id: GetEnumerator\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: XmlNamespaceManager.GetEnumerator()\n  fullName: XmlNamespaceManager.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Returns an enumerator to use to iterate through the namespaces in the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>.\n  remarks: \"The following code shows how to use the <xref:System.Collections.IEnumerator> to view all the namespace pairs stored in the <xref:System.Xml.XmlNamespaceManager> object.  \\n  \\n```  \\nDim nsEnum As IEnumerator = nsmgr.GetEnumerator()  \\nDo While nsEnum.MoveNext  \\n  If nsEnum.Current <> \\\"\\\" Then  \\n    MsgBox(\\\"xmlns:\\\" + nsEnum.Current + \\\"=\\\" + nsmgr.LookupNamespace(nsEnum.Current))  \\n  End If  \\nLoop  \\n```\"\n  syntax:\n    content: public virtual System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> containing the prefixes stored by the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>.\n  overload: System.Xml.XmlNamespaceManager.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  commentId: M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  id: GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: GetNamespacesInScope(XmlNamespaceScope)\n  nameWithType: XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope)\n  fullName: XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.\n  remarks: \"The dictionary consists of a collection of namespace names keyed by prefix. It can be used to enumerate the in-scope namespaces. The dictionary is a disconnected copy of the namespace list. It remains unchanged as the current in-scope namespace list changes.  \\n  \\n The following table shows how <xref:System.Xml.XmlNamespaceScope> values affect the namespaces returned by the <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method.  \\n  \\n|XmlNamespaceScope value|xmlns:xml|xmlns:xmlns|xmlns=\\\"\\\"|  \\n|-----------------------------|---------------|-----------------|---------------|  \\n|`All`|Yes|No|No|  \\n|`ExcludeXml`|No|No|No|  \\n|`Local`|No|No|Yes|\"\n  syntax:\n    content: public virtual System.Collections.Generic.IDictionary<string,string> GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);\n    parameters:\n    - id: scope\n      type: System.Xml.XmlNamespaceScope\n      description: An enumeration value that specifies the type of namespace nodes to return.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A collection of namespace and prefix pairs currently in scope.\n  overload: System.Xml.XmlNamespaceManager.GetNamespacesInScope*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.HasNamespace(System.String)\n  commentId: M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)\n  id: HasNamespace(System.String)\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: HasNamespace(String)\n  nameWithType: XmlNamespaceManager.HasNamespace(String)\n  fullName: XmlNamespaceManager.HasNamespace(String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.\n  remarks: \"To determine whether there is a default empty namespace defined, set `prefix` to String.Empty. A return value of `true` indicates that there is a default namespace defined in the current scope; `false` indicates that no default namespace is defined.  \\n  \\n> [!NOTE]\\n>  xmlns:x= \\\"\\\" is illegal according to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) recommendation.\"\n  example:\n  - \"The following example displays the default namespace, if one exists.  \\n  \\n [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual bool HasNamespace (string prefix);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: The prefix of the namespace you want to find.\n    return:\n      type: System.Boolean\n      description: '`true` if there is a namespace defined; otherwise, `false`.'\n  overload: System.Xml.XmlNamespaceManager.HasNamespace*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.LookupNamespace(System.String)\n  commentId: M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)\n  id: LookupNamespace(System.String)\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: LookupNamespace(String)\n  nameWithType: XmlNamespaceManager.LookupNamespace(String)\n  fullName: XmlNamespaceManager.LookupNamespace(String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets the namespace URI for the specified prefix.\n  remarks: ''\n  example:\n  - \"The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager>, and then displays all the pairs in the collection.  \\n  \\n [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual string LookupNamespace (string prefix);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.\n    return:\n      type: System.String\n      description: \"Returns the namespace URI for <code>prefix</code> or `null` if there is no mapped namespace. The returned string is atomized.  \\n  \\n For more information on atomized strings, see the <xref href=\\\"System.Xml.XmlNameTable\\\"></xref> class.\"\n  overload: System.Xml.XmlNamespaceManager.LookupNamespace*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.LookupPrefix(System.String)\n  commentId: M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)\n  id: LookupPrefix(System.String)\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: LookupPrefix(String)\n  nameWithType: XmlNamespaceManager.LookupPrefix(String)\n  fullName: XmlNamespaceManager.LookupPrefix(String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Finds the prefix declared for the given namespace URI.\n  remarks: \"This method finds the mapped prefix by walking the stack (that is, it looks globally). The supplied string must be atomized for the lookup to succeed. In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).  \\n  \\n The returned string is also atomized. For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method when writing an attribute. It uses the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=fullName> method to start the attribute, looks up the prefix for the `urn:samples` namespace URI, and then uses that prefix in the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=fullName> when writing the `ISBN` attribute:  \\n  \\n```vb  \\nDim prefix As String = nsMgr.LookupPrefix(\\\"urn:samples\\\")  \\nwriter.WriteStartAttribute(prefix, \\\"ISBN\\\", \\\"urn:samples\\\")  \\n  \\n```  \\n  \\n```csharp  \\nXmlNameTable nt = new XmlNameTable();  \\nXmlNamespaceManager nsMgr = new XmlNamespaceManager(nt);  \\nnsMgr.AddNamespace(\\\"bk\\\",\\\"urn:samples\\\");string prefix = writer nsMgr.LookupPrefix(\\\"urn:samples\\\");  \\nwriter.WriteStartAttribute(prefix, \\\"ISBN\\\", \\\"urn:samples\\\");  \\n```  \\n  \\n The following example uses <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> to find the prefix defined on an element.  \\n  \\n```vb  \\nwriter.WriteStartElement(\\\"root\\\", \\\"book\\\")  \\nwriter.WriteStartElement(\\\"x\\\", \\\"node\\\", \\\"author\\\")  \\ns = writer.LookupPrefix(\\\"author\\\")  \\nCError.Compare(s, \\\"x\\\", \\\"Error in nested element\\\")  \\nwriter.WriteEndElement()  \\ns = writer.LookupPrefix(\\\"book\\\")  \\nCError.Compare(s, Nothing, \\\"Error in root element\\\")  \\nwriter.WriteEndElement()  \\n  \\n```  \\n  \\n **Output**  \\n  \\n```  \\n<root xmlns=\\\"book\\\">  \\n  <x:node xmlns:x=\\\"author\\\" />   \\n</root>  \\n```\"\n  syntax:\n    content: public virtual string LookupPrefix (string uri);\n    parameters:\n    - id: uri\n      type: System.String\n      description: The namespace to resolve for the prefix.\n    return:\n      type: System.String\n      description: The matching prefix. If there is no mapped prefix, the method returns String.Empty. If a null value is supplied, then `null` is returned.\n  overload: System.Xml.XmlNamespaceManager.LookupPrefix*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.NameTable\n  commentId: P:System.Xml.XmlNamespaceManager.NameTable\n  id: NameTable\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: NameTable\n  nameWithType: XmlNamespaceManager.NameTable\n  fullName: XmlNamespaceManager.NameTable\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets the <xref href=\"System.Xml.XmlNameTable\"></xref> associated with this object.\n  remarks: The name table is used to look up prefixes and namespace URIs.\n  syntax:\n    content: public virtual System.Xml.XmlNameTable NameTable { get; }\n    return:\n      type: System.Xml.XmlNameTable\n      description: The <xref href=\"System.Xml.XmlNameTable\"></xref> used by this object.\n  overload: System.Xml.XmlNamespaceManager.NameTable*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.PopScope\n  commentId: M:System.Xml.XmlNamespaceManager.PopScope\n  id: PopScope\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: PopScope()\n  nameWithType: XmlNamespaceManager.PopScope()\n  fullName: XmlNamespaceManager.PopScope()\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Pops a namespace scope off the stack.\n  remarks: When you call this method, all namespaces which were added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) since the last call to <xref:System.Xml.XmlNamespaceManager.PopScope%2A> are removed.\n  example:\n  - \"The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.  \\n  \\n [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual bool PopScope ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if there are namespace scopes left on the stack; `false` if there are no more namespaces to pop.'\n  overload: System.Xml.XmlNamespaceManager.PopScope*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.PushScope\n  commentId: M:System.Xml.XmlNamespaceManager.PushScope\n  id: PushScope\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: PushScope()\n  nameWithType: XmlNamespaceManager.PushScope()\n  fullName: XmlNamespaceManager.PushScope()\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Pushes a namespace scope onto the stack.\n  remarks: After a call to this method, all namespaces, which are added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), belong to the pushed namespace scope.\n  example:\n  - \"The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.  \\n  \\n [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual void PushScope ();\n    parameters: []\n  overload: System.Xml.XmlNamespaceManager.PushScope*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)\n  commentId: M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)\n  id: RemoveNamespace(System.String,System.String)\n  parent: System.Xml.XmlNamespaceManager\n  langs:\n  - csharp\n  name: RemoveNamespace(String, String)\n  nameWithType: XmlNamespaceManager.RemoveNamespace(String, String)\n  fullName: XmlNamespaceManager.RemoveNamespace(String, String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Removes the given namespace for the given prefix.\n  syntax:\n    content: public virtual void RemoveNamespace (string prefix, string uri);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: The prefix for the namespace\n    - id: uri\n      type: System.String\n      description: The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored.\n  overload: System.Xml.XmlNamespaceManager.RemoveNamespace*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value of <code>prefix</code> or <code>uri</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NullReferenceException\n  parent: System\n  isExternal: false\n  name: NullReferenceException\n  nameWithType: NullReferenceException\n  fullName: System.NullReferenceException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: XmlNamespaceManager(XmlNameTable)\n  nameWithType: XmlNamespaceManager.XmlNamespaceManager(XmlNameTable)\n  fullName: XmlNamespaceManager.XmlNamespaceManager(XmlNameTable)\n- uid: System.Xml.XmlNameTable\n  parent: System.Xml\n  isExternal: false\n  name: XmlNameTable\n  nameWithType: XmlNameTable\n  fullName: System.Xml.XmlNameTable\n- uid: System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: AddNamespace(String, String)\n  nameWithType: XmlNamespaceManager.AddNamespace(String, String)\n  fullName: XmlNamespaceManager.AddNamespace(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlNamespaceManager.DefaultNamespace\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: DefaultNamespace\n  nameWithType: XmlNamespaceManager.DefaultNamespace\n  fullName: XmlNamespaceManager.DefaultNamespace\n- uid: System.Xml.XmlNamespaceManager.GetEnumerator\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: XmlNamespaceManager.GetEnumerator()\n  fullName: XmlNamespaceManager.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: GetNamespacesInScope(XmlNamespaceScope)\n  nameWithType: XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope)\n  fullName: XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.XmlNamespaceScope\n  parent: System.Xml\n  isExternal: false\n  name: XmlNamespaceScope\n  nameWithType: XmlNamespaceScope\n  fullName: System.Xml.XmlNamespaceScope\n- uid: System.Xml.XmlNamespaceManager.HasNamespace(System.String)\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: HasNamespace(String)\n  nameWithType: XmlNamespaceManager.HasNamespace(String)\n  fullName: XmlNamespaceManager.HasNamespace(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlNamespaceManager.LookupNamespace(System.String)\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: LookupNamespace(String)\n  nameWithType: XmlNamespaceManager.LookupNamespace(String)\n  fullName: XmlNamespaceManager.LookupNamespace(String)\n- uid: System.Xml.XmlNamespaceManager.LookupPrefix(System.String)\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: LookupPrefix(String)\n  nameWithType: XmlNamespaceManager.LookupPrefix(String)\n  fullName: XmlNamespaceManager.LookupPrefix(String)\n- uid: System.Xml.XmlNamespaceManager.NameTable\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: NameTable\n  nameWithType: XmlNamespaceManager.NameTable\n  fullName: XmlNamespaceManager.NameTable\n- uid: System.Xml.XmlNamespaceManager.PopScope\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: PopScope()\n  nameWithType: XmlNamespaceManager.PopScope()\n  fullName: XmlNamespaceManager.PopScope()\n- uid: System.Xml.XmlNamespaceManager.PushScope\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: PushScope()\n  nameWithType: XmlNamespaceManager.PushScope()\n  fullName: XmlNamespaceManager.PushScope()\n- uid: System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: RemoveNamespace(String, String)\n  nameWithType: XmlNamespaceManager.RemoveNamespace(String, String)\n  fullName: XmlNamespaceManager.RemoveNamespace(String, String)\n- uid: System.Xml.XmlNamespaceManager.#ctor*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: XmlNamespaceManager\n  nameWithType: XmlNamespaceManager.XmlNamespaceManager\n  fullName: XmlNamespaceManager.XmlNamespaceManager\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.AddNamespace*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: AddNamespace\n  nameWithType: XmlNamespaceManager.AddNamespace\n  fullName: XmlNamespaceManager.AddNamespace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.DefaultNamespace*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: DefaultNamespace\n  nameWithType: XmlNamespaceManager.DefaultNamespace\n  fullName: XmlNamespaceManager.DefaultNamespace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.GetEnumerator*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: XmlNamespaceManager.GetEnumerator\n  fullName: XmlNamespaceManager.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.GetNamespacesInScope*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: GetNamespacesInScope\n  nameWithType: XmlNamespaceManager.GetNamespacesInScope\n  fullName: XmlNamespaceManager.GetNamespacesInScope\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.HasNamespace*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: HasNamespace\n  nameWithType: XmlNamespaceManager.HasNamespace\n  fullName: XmlNamespaceManager.HasNamespace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.LookupNamespace*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: LookupNamespace\n  nameWithType: XmlNamespaceManager.LookupNamespace\n  fullName: XmlNamespaceManager.LookupNamespace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.LookupPrefix*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: LookupPrefix\n  nameWithType: XmlNamespaceManager.LookupPrefix\n  fullName: XmlNamespaceManager.LookupPrefix\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.NameTable*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: NameTable\n  nameWithType: XmlNamespaceManager.NameTable\n  fullName: XmlNamespaceManager.NameTable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.PopScope*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: PopScope\n  nameWithType: XmlNamespaceManager.PopScope\n  fullName: XmlNamespaceManager.PopScope\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.PushScope*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: PushScope\n  nameWithType: XmlNamespaceManager.PushScope\n  fullName: XmlNamespaceManager.PushScope\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Xml.XmlNamespaceManager.RemoveNamespace*\n  parent: System.Xml.XmlNamespaceManager\n  isExternal: false\n  name: RemoveNamespace\n  nameWithType: XmlNamespaceManager.RemoveNamespace\n  fullName: XmlNamespaceManager.RemoveNamespace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Xml.IXmlNamespaceResolver\n  parent: System.Xml\n  isExternal: false\n  name: IXmlNamespaceResolver\n  nameWithType: IXmlNamespaceResolver\n  fullName: System.Xml.IXmlNamespaceResolver\n"}