{"nodes":[{"content":"Represents the models workflows using the familiar flowchart paradigm.","nodes":[{"pos":[0,70],"content":"Represents the models workflows using the familiar flowchart paradigm.","nodes":[{"content":"Represents the models workflows using the familiar flowchart paradigm.","pos":[0,70]}]}],"pos":[1124,1195],"yaml":true},{"content":"The <xref:System.Activities.Statements.Flowchart> activity allows free-form creation of a workflow using nodes and links.","nodes":[{"pos":[0,121],"content":"The <xref:System.Activities.Statements.Flowchart> activity allows free-form creation of a workflow using nodes and links.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Flowchart&gt;</ph> activity allows free-form creation of a workflow using nodes and links.","pos":[0,121],"source":"The <xref:System.Activities.Statements.Flowchart> activity allows free-form creation of a workflow using nodes and links."}]}],"pos":[1206,1328],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.Flowchart\"></xref> class.","nodes":[{"pos":[0,96],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Flowchart\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Flowchart\"></xref> class."}],"pos":[4157,4254],"yaml":true},{"content":"Gets or sets the collection of <xref href=\"System.Activities.Statements.FlowNode\"></xref> objects contained by the flowchart.","nodes":[{"pos":[0,125],"content":"Gets or sets the collection of <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;&lt;/xref&gt;</ph> objects contained by the flowchart.","source":"Gets or sets the collection of <xref href=\"System.Activities.Statements.FlowNode\"></xref> objects contained by the flowchart."}],"pos":[8435,8561],"yaml":true},{"content":"A collection of <xref href=\"System.Activities.Statements.FlowNode\"></xref> objects..","nodes":[{"pos":[0,84],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;&lt;/xref&gt;</ph> objects..","source":"A collection of <xref href=\"System.Activities.Statements.FlowNode\"></xref> objects.."}],"pos":[9358,9443],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> to be executed when the flowchart starts.","nodes":[{"pos":[0,117],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;&lt;/xref&gt;</ph> to be executed when the flowchart starts.","source":"Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> to be executed when the flowchart starts."}],"pos":[12343,12461],"yaml":true},{"content":"There must only be one <xref:System.Activities.Statements.Flowchart.StartNode%2A>.","nodes":[{"pos":[0,82],"content":"There must only be one <xref:System.Activities.Statements.Flowchart.StartNode%2A>.","nodes":[{"content":"There must only be one <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Flowchart.StartNode%2A&gt;</ph>.","pos":[0,82],"source":"There must only be one <xref:System.Activities.Statements.Flowchart.StartNode%2A>."}]}],"pos":[12472,12555],"yaml":true,"extradata":"MT"},{"content":"The starting node.","nodes":[{"pos":[0,18],"content":"The starting node.","nodes":[{"content":"The starting node.","pos":[0,18]}]}],"pos":[13281,13300],"yaml":true},{"content":"Gets or sets a value that indicates whether unconnected nodes are validated.","nodes":[{"pos":[0,76],"content":"Gets or sets a value that indicates whether unconnected nodes are validated.","nodes":[{"content":"Gets or sets a value that indicates whether unconnected nodes are validated.","pos":[0,76]}]}],"pos":[15948,16025],"yaml":true},{"content":"`true` if unconnected nodes are validated; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if unconnected nodes are validated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if unconnected nodes are validated; otherwise, `false`."}],"pos":[16157,16222],"yaml":true},{"content":"Gets or sets the collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects associated with the <xref href=\"System.Activities.Statements.Flowchart\"></xref>, which are available to share state across the child activities contained within the Flowchart.","nodes":[{"pos":[0,265],"content":"Gets or sets the collection of <ph id=\"ph1\">&lt;xref href=\"System.WorkflowModel.Variable\"&gt;&lt;/xref&gt;</ph> objects associated with the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.Flowchart\"&gt;&lt;/xref&gt;</ph>, which are available to share state across the child activities contained within the Flowchart.","source":"Gets or sets the collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects associated with the <xref href=\"System.Activities.Statements.Flowchart\"></xref>, which are available to share state across the child activities contained within the Flowchart."}],"pos":[17264,17530],"yaml":true},{"content":"The collection of variables.","nodes":[{"pos":[0,28],"content":"The collection of variables.","nodes":[{"content":"The collection of variables.","pos":[0,28]}]}],"pos":[18256,18285],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Flowchart\n  commentId: T:System.Activities.Statements.Flowchart\n  id: Flowchart\n  children:\n  - System.Activities.Statements.Flowchart.#ctor\n  - System.Activities.Statements.Flowchart.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Flowchart.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Flowchart.Nodes\n  - System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.Flowchart.StartNode\n  - System.Activities.Statements.Flowchart.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Activities.Statements.Flowchart.ValidateUnconnectedNodes\n  - System.Activities.Statements.Flowchart.Variables\n  langs:\n  - csharp\n  name: Flowchart\n  nameWithType: Flowchart\n  fullName: System.Activities.Statements.Flowchart\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Represents the models workflows using the familiar flowchart paradigm.\n  remarks: The <xref:System.Activities.Statements.Flowchart> activity allows free-form creation of a workflow using nodes and links.\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Nodes\")]\n\n      public sealed class Flowchart : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Flowchart.#ctor\n  commentId: M:System.Activities.Statements.Flowchart.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: Flowchart()\n  nameWithType: Flowchart.Flowchart()\n  fullName: Flowchart.Flowchart()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Flowchart\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]\"\n  syntax:\n    content: public Flowchart ();\n    parameters: []\n  overload: System.Activities.Statements.Flowchart.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Flowchart.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.Flowchart.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Flowchart.CacheMetadata(NativeActivityMetadata)\n  fullName: Flowchart.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.Flowchart.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.Flowchart.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Flowchart.Execute(NativeActivityContext)\n  fullName: Flowchart.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.Flowchart.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.Nodes\n  commentId: P:System.Activities.Statements.Flowchart.Nodes\n  id: Nodes\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: Nodes\n  nameWithType: Flowchart.Nodes\n  fullName: Flowchart.Nodes\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the collection of <xref href=\"System.Activities.Statements.FlowNode\"></xref> objects contained by the flowchart.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"StartNode\")]\n\n      public System.Collections.ObjectModel.Collection<System.Activities.Statements.FlowNode> Nodes { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.FlowNode}\n      description: A collection of <xref href=\"System.Activities.Statements.FlowNode\"></xref> objects..\n  overload: System.Activities.Statements.Flowchart.Nodes*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  commentId: M:System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: Flowchart.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: Flowchart.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: ''\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: ''\n  overload: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.StartNode\n  commentId: P:System.Activities.Statements.Flowchart.StartNode\n  id: StartNode\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: StartNode\n  nameWithType: Flowchart.StartNode\n  fullName: Flowchart.StartNode\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> to be executed when the flowchart starts.\n  remarks: There must only be one <xref:System.Activities.Statements.Flowchart.StartNode%2A>.\n  example:\n  - \"The following code sample demonstrates configuring the StartNode of a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"Variables\")]\n\n      public System.Activities.Statements.FlowNode StartNode { get; set; }\n    return:\n      type: System.Activities.Statements.FlowNode\n      description: The starting node.\n  overload: System.Activities.Statements.Flowchart.StartNode*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Flowchart.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  commentId: M:System.Activities.Statements.Flowchart.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: Flowchart.UpdateInstance(NativeActivityUpdateContext)\n  fullName: Flowchart.UpdateInstance(NativeActivityUpdateContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);\n    parameters:\n    - id: updateContext\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n      description: ''\n  overload: System.Activities.Statements.Flowchart.UpdateInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes\n  commentId: P:System.Activities.Statements.Flowchart.ValidateUnconnectedNodes\n  id: ValidateUnconnectedNodes\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: ValidateUnconnectedNodes\n  nameWithType: Flowchart.ValidateUnconnectedNodes\n  fullName: Flowchart.ValidateUnconnectedNodes\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets a value that indicates whether unconnected nodes are validated.\n  syntax:\n    content: public bool ValidateUnconnectedNodes { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if unconnected nodes are validated; otherwise, `false`.'\n  overload: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Flowchart.Variables\n  commentId: P:System.Activities.Statements.Flowchart.Variables\n  id: Variables\n  parent: System.Activities.Statements.Flowchart\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: Flowchart.Variables\n  fullName: Flowchart.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects associated with the <xref href=\"System.Activities.Statements.Flowchart\"></xref>, which are available to share state across the child activities contained within the Flowchart.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates using Variables in a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The collection of variables.\n  overload: System.Activities.Statements.Flowchart.Variables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Flowchart.#ctor\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: Flowchart()\n  nameWithType: Flowchart.Flowchart()\n  fullName: Flowchart.Flowchart()\n- uid: System.Activities.Statements.Flowchart.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Flowchart.CacheMetadata(NativeActivityMetadata)\n  fullName: Flowchart.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Flowchart.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Flowchart.Execute(NativeActivityContext)\n  fullName: Flowchart.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Flowchart.Nodes\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: Nodes\n  nameWithType: Flowchart.Nodes\n  fullName: Flowchart.Nodes\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Activities.Statements.FlowNode\n  name: FlowNode\n  nameWithType: FlowNode\n  fullName: System.Activities.Statements.FlowNode\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.FlowNode}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<FlowNode>\n  nameWithType: Collection<FlowNode>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.FlowNode>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Statements.FlowNode\n    name: FlowNode\n    nameWithType: FlowNode\n    fullName: System.Activities.Statements.FlowNode\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: Flowchart.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: Flowchart.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.Flowchart.StartNode\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: StartNode\n  nameWithType: Flowchart.StartNode\n  fullName: Flowchart.StartNode\n- uid: System.Activities.Statements.Flowchart.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: Flowchart.UpdateInstance(NativeActivityUpdateContext)\n  fullName: Flowchart.UpdateInstance(NativeActivityUpdateContext)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateContext\n  nameWithType: NativeActivityUpdateContext\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n- uid: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: ValidateUnconnectedNodes\n  nameWithType: Flowchart.ValidateUnconnectedNodes\n  fullName: Flowchart.ValidateUnconnectedNodes\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.Flowchart.Variables\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: Variables\n  nameWithType: Flowchart.Variables\n  fullName: Flowchart.Variables\n- uid: System.Activities.Variable\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: System.Activities.Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Flowchart.#ctor*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: Flowchart\n  nameWithType: Flowchart.Flowchart\n  fullName: Flowchart.Flowchart\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.CacheMetadata*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Flowchart.CacheMetadata\n  fullName: Flowchart.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.Execute*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: Execute\n  nameWithType: Flowchart.Execute\n  fullName: Flowchart.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.Nodes*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: Nodes\n  nameWithType: Flowchart.Nodes\n  fullName: Flowchart.Nodes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: Flowchart.OnCreateDynamicUpdateMap\n  fullName: Flowchart.OnCreateDynamicUpdateMap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.StartNode*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: StartNode\n  nameWithType: Flowchart.StartNode\n  fullName: Flowchart.StartNode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.UpdateInstance*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: UpdateInstance\n  nameWithType: Flowchart.UpdateInstance\n  fullName: Flowchart.UpdateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: ValidateUnconnectedNodes\n  nameWithType: Flowchart.ValidateUnconnectedNodes\n  fullName: Flowchart.ValidateUnconnectedNodes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Activities.Statements.Flowchart.Variables*\n  parent: System.Activities.Statements.Flowchart\n  isExternal: false\n  name: Variables\n  nameWithType: Flowchart.Variables\n  fullName: Flowchart.Variables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Flowchart.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n"}