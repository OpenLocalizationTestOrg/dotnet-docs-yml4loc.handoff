{"nodes":[{"content":"Supports standard aggregate functions, such as MIN, MAX, AVG, SUM, and so on. This class cannot be inherited.","nodes":[{"pos":[0,109],"content":"Supports standard aggregate functions, such as MIN, MAX, AVG, SUM, and so on. This class cannot be inherited.","nodes":[{"content":"Supports standard aggregate functions, such as MIN, MAX, AVG, SUM, and so on. This class cannot be inherited.","pos":[0,109],"nodes":[{"content":"Supports standard aggregate functions, such as MIN, MAX, AVG, SUM, and so on.","pos":[0,77]},{"content":"This class cannot be inherited.","pos":[78,109]}]}]}],"pos":[585,695],"yaml":true},{"content":"This aggregate type corresponds to the invocation of an aggregate function.  \n  \n Aggregates are pseudo-expressions, and can only appear in the aggregates clause of a `GroupBy` expression.","nodes":[{"pos":[0,75],"content":"This aggregate type corresponds to the invocation of an aggregate function.","nodes":[{"content":"This aggregate type corresponds to the invocation of an aggregate function.","pos":[0,75]}]},{"pos":[82,188],"content":"Aggregates are pseudo-expressions, and can only appear in the aggregates clause of a <ph id=\"ph1\">`GroupBy`</ph> expression.","source":"Aggregates are pseudo-expressions, and can only appear in the aggregates clause of a `GroupBy` expression."}],"pos":[706,899],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether this aggregate is a distinct aggregate.","nodes":[{"pos":[0,71],"content":"Gets a value indicating whether this aggregate is a distinct aggregate.","nodes":[{"content":"Gets a value indicating whether this aggregate is a distinct aggregate.","pos":[0,71]}]}],"pos":[2682,2754],"yaml":true},{"content":"The <xref:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct%2A> property of the <xref:System.Data.Common.CommandTrees.DbFunctionAggregate> indicates whether the aggregate is distinct. Therefore, duplicates in the input arguments must be eliminated before the aggregate is computed.","nodes":[{"pos":[0,292],"content":"The <xref:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct%2A> property of the <xref:System.Data.Common.CommandTrees.DbFunctionAggregate> indicates whether the aggregate is distinct. Therefore, duplicates in the input arguments must be eliminated before the aggregate is computed.","nodes":[{"content":"The <xref:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct%2A> property of the <xref:System.Data.Common.CommandTrees.DbFunctionAggregate> indicates whether the aggregate is distinct. Therefore, duplicates in the input arguments must be eliminated before the aggregate is computed.","pos":[0,292],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Data.Common.CommandTrees.DbFunctionAggregate&gt;</ph> indicates whether the aggregate is distinct.","pos":[0,194],"source":"The <xref:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct%2A> property of the <xref:System.Data.Common.CommandTrees.DbFunctionAggregate> indicates whether the aggregate is distinct."},{"content":"Therefore, duplicates in the input arguments must be eliminated before the aggregate is computed.","pos":[195,292]}]}]}],"pos":[2765,3058],"yaml":true,"extradata":"MT"},{"content":"`true` if the aggregate is a distinct aggregate; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the aggregate is a distinct aggregate; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the aggregate is a distinct aggregate; otherwise, `false`."}],"pos":[3169,3240],"yaml":true},{"content":"Gets the method metadata that specifies the aggregate function to invoke.","nodes":[{"pos":[0,73],"content":"Gets the method metadata that specifies the aggregate function to invoke.","nodes":[{"content":"Gets the method metadata that specifies the aggregate function to invoke.","pos":[0,73]}]}],"pos":[4338,4412],"yaml":true},{"content":"The method metadata that specifies the aggregate function to invoke.","nodes":[{"pos":[0,68],"content":"The method metadata that specifies the aggregate function to invoke.","nodes":[{"content":"The method metadata that specifies the aggregate function to invoke.","pos":[0,68]}]}],"pos":[4577,4646],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate\n  commentId: T:System.Data.Common.CommandTrees.DbFunctionAggregate\n  id: DbFunctionAggregate\n  children:\n  - System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct\n  - System.Data.Common.CommandTrees.DbFunctionAggregate.Function\n  langs:\n  - csharp\n  name: DbFunctionAggregate\n  nameWithType: DbFunctionAggregate\n  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Supports standard aggregate functions, such as MIN, MAX, AVG, SUM, and so on. This class cannot be inherited.\n  remarks: \"This aggregate type corresponds to the invocation of an aggregate function.  \\n  \\n Aggregates are pseudo-expressions, and can only appear in the aggregates clause of a `GroupBy` expression.\"\n  syntax:\n    content: 'public sealed class DbFunctionAggregate : System.Data.Common.CommandTrees.DbAggregate'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbAggregate\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbAggregate.Arguments\n  - System.Data.Common.CommandTrees.DbAggregate.ResultType\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbFunctionAggregate.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct\n  commentId: P:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct\n  id: Distinct\n  parent: System.Data.Common.CommandTrees.DbFunctionAggregate\n  langs:\n  - csharp\n  name: Distinct\n  nameWithType: DbFunctionAggregate.Distinct\n  fullName: DbFunctionAggregate.Distinct\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets a value indicating whether this aggregate is a distinct aggregate.\n  remarks: The <xref:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct%2A> property of the <xref:System.Data.Common.CommandTrees.DbFunctionAggregate> indicates whether the aggregate is distinct. Therefore, duplicates in the input arguments must be eliminated before the aggregate is computed.\n  syntax:\n    content: public bool Distinct { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the aggregate is a distinct aggregate; otherwise, `false`.'\n  overload: System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbFunctionAggregate.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate.Function\n  commentId: P:System.Data.Common.CommandTrees.DbFunctionAggregate.Function\n  id: Function\n  parent: System.Data.Common.CommandTrees.DbFunctionAggregate\n  langs:\n  - csharp\n  name: Function\n  nameWithType: DbFunctionAggregate.Function\n  fullName: DbFunctionAggregate.Function\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the method metadata that specifies the aggregate function to invoke.\n  syntax:\n    content: public System.Data.Metadata.Edm.EdmFunction Function { get; }\n    return:\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: The method metadata that specifies the aggregate function to invoke.\n  overload: System.Data.Common.CommandTrees.DbFunctionAggregate.Function*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbFunctionAggregate.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.CommandTrees.DbAggregate\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbAggregate\n  nameWithType: DbAggregate\n  fullName: System.Data.Common.CommandTrees.DbAggregate\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct\n  parent: System.Data.Common.CommandTrees.DbFunctionAggregate\n  isExternal: false\n  name: Distinct\n  nameWithType: DbFunctionAggregate.Distinct\n  fullName: DbFunctionAggregate.Distinct\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate.Function\n  parent: System.Data.Common.CommandTrees.DbFunctionAggregate\n  isExternal: false\n  name: Function\n  nameWithType: DbFunctionAggregate.Function\n  fullName: DbFunctionAggregate.Function\n- uid: System.Data.Metadata.Edm.EdmFunction\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct*\n  parent: System.Data.Common.CommandTrees.DbFunctionAggregate\n  isExternal: false\n  name: Distinct\n  nameWithType: DbFunctionAggregate.Distinct\n  fullName: DbFunctionAggregate.Distinct\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbFunctionAggregate.xml\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate.Function*\n  parent: System.Data.Common.CommandTrees.DbFunctionAggregate\n  isExternal: false\n  name: Function\n  nameWithType: DbFunctionAggregate.Function\n  fullName: DbFunctionAggregate.Function\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbFunctionAggregate.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Common.CommandTrees.DbAggregate.Arguments\n  parent: System.Data.Common.CommandTrees.DbAggregate\n  isExternal: false\n  name: Arguments\n  nameWithType: DbAggregate.Arguments\n  fullName: DbAggregate.Arguments\n- uid: System.Data.Common.CommandTrees.DbAggregate.ResultType\n  parent: System.Data.Common.CommandTrees.DbAggregate\n  isExternal: false\n  name: ResultType\n  nameWithType: DbAggregate.ResultType\n  fullName: DbAggregate.ResultType\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: As(DbAggregate, String)\n  nameWithType: DbExpressionBuilder.As(DbAggregate, String)\n  fullName: DbExpressionBuilder.As(DbAggregate, String)\n"}