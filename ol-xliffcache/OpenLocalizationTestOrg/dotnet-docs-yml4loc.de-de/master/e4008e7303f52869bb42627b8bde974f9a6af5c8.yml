### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualDirectory
  commentId: T:System.Web.Hosting.VirtualDirectory
  id: VirtualDirectory
  children:
  - System.Web.Hosting.VirtualDirectory.#ctor(System.String)
  - System.Web.Hosting.VirtualDirectory.Children
  - System.Web.Hosting.VirtualDirectory.Directories
  - System.Web.Hosting.VirtualDirectory.Files
  - System.Web.Hosting.VirtualDirectory.IsDirectory
  langs:
  - csharp
  name: VirtualDirectory
  nameWithType: VirtualDirectory
  fullName: System.Web.Hosting.VirtualDirectory
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Represents a directory object in a virtual file or resource space.
  remarks: The <xref:System.Web.Hosting.VirtualDirectory> class is the base class for objects that represent directories in a virtual file system. Typically, you would implement a descendent of the <xref:System.Web.Hosting.VirtualDirectory> class for each <xref:System.Web.Hosting.VirtualPathProvider> class descendent in your Web application.
  example:
  - "The following code example is a <xref:System.Web.Hosting.VirtualDirectory> class implementation that returns virtual directory information stored in a <xref:System.Data.DataSet> object. This code works with the code examples for the <xref:System.Web.Hosting.VirtualPathProvider> and <xref:System.Web.Hosting.VirtualFile> classes to provide virtual resources from a data store that is loaded into a <xref:System.Data.DataSet> object. For the complete instructions for compiling and running the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview.  \n  \n This example has two parts, the <xref:System.Web.Hosting.VirtualDirectory> class implementation and the XML data file used to populate the <xref:System.Data.DataSet> object.  \n  \n The first code example is an implementation of the <xref:System.Web.Hosting.VirtualDirectory> class. In the constructor it uses a method on a custom <xref:System.Web.Hosting.VirtualPathProvider> object to return a <xref:System.Data.DataSet> object. It then searches the <xref:System.Data.DataSet> object to retrieve the directory information associated with the virtual path provided.  \n  \n [!code-csharp[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#30)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#30)]  \n  \n The second example is the XML data file used to populate the <xref:System.Data.DataSet> object returned by the custom <xref:System.Web.Hosting.VirtualPathProvider> object. This XML data is used to demonstrate using the <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualFile>, and <xref:System.Web.Hosting.VirtualDirectory> classes to retrieve data from external data, and is not intended to represent a production-quality data store.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n  <resource type=\"dir\"   \n    path=\"/vrDir\"   \n    parentPath=\"\"   \n    content=\"\">  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level1FileA.vrf\"  \n      parentPath=\"/vrDir\"   \n      content=\"This is the content of file Level1FileA.\" >  \n    </resource>  \n    <resource type=\"file\"   \n      path=\"/vrDir/Level1FileB.vrf\"  \n      parentPath=\"/vrDir\"   \n      content=\"This is the content of file Level1FileB.\">  \n    </resource>  \n    <resource type=\"dir\"   \n      path=\"/vrDir/Level2DirA\"   \n      parentPath=\"/vrDir\"   \n      content=\"\">  \n        <resource type=\"file\"   \n          path=\"/vrDir/Level2DirA/Level2FileA.vrf\"   \n          parentPath=\"/vrDir/Level2DirA\"   \n          content=\"This is the content of file Level2FileA.\" >  \n        </resource>  \n        <resource type=\"file\"   \n          path=\"/vrDir/Level2DirA/Level2FileB.vrf\"  \n          parentPath=\"/vrDir/Level2DirA\"   \n          content=\"This is the content of file Level2FileB.\">  \n        </resource>  \n    </resource>  \n    <resource type=\"dir\"   \n      path=\"/vrDir/Level2DirB\"   \n      parentPath=\"/vrDir\"   \n      content=\"\">  \n      <resource type=\"file\"   \n        path=\"/vrDir/Level2DirB/Level2FileA.vrf\"   \n        parentPath=\"/vrDir/Level2DirB\"   \n        content=\"This is the content of file Level2FileA.\" >  \n      </resource>  \n      <resource type=\"file\"   \n        path=\"/vrDir/Level2DirB/Level2FileB.vrf\"  \n        parentPath=\"/vrDir/Level2DirB\"   \n        content=\"This is the content of file Level2FileB.\">  \n       </resource>  \n    </resource>  \n  </resource>  \n```"
  syntax:
    content: 'public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Web.Hosting.VirtualFileBase
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  - System.Web.Hosting.VirtualFileBase.Name
  - System.Web.Hosting.VirtualFileBase.VirtualPath
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualDirectory.#ctor(System.String)
  commentId: M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: VirtualDirectory(String)
  nameWithType: VirtualDirectory.VirtualDirectory(String)
  fullName: VirtualDirectory.VirtualDirectory(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Initializes a new instance of the <xref href="System.Web.Hosting.VirtualDirectory"></xref> class.
  remarks: ''
  example:
  - "The following code example is an implementation of the <xref:System.Web.Hosting.VirtualDirectory.%23ctor%2A> constructor that retrieves virtual file information from a <xref:System.Data.DataSet> object provided by a custom <xref:System.Web.Hosting.VirtualPathProvider> object. It includes the `GetData` method used to populate the <xref:System.Web.Hosting.VirtualDirectory> instance. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualDirectory> class overview.  \n  \n [!code-csharp[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#31)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#31)]"
  syntax:
    content: protected VirtualDirectory (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: The virtual path to the resource represented by this instance.
  overload: System.Web.Hosting.VirtualDirectory.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualDirectory.Children
  commentId: P:System.Web.Hosting.VirtualDirectory.Children
  id: Children
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: Children
  nameWithType: VirtualDirectory.Children
  fullName: VirtualDirectory.Children
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Gets a list of the files and subdirectories contained in this virtual directory.
  remarks: The <xref:System.Web.Hosting.VirtualDirectory.Children%2A> property contains both <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects that represent the files and directories contained in this virtual directory. To return only the <xref:System.Web.Hosting.VirtualFile> objects, use the <xref:System.Web.Hosting.VirtualDirectory.Files%2A> property. To return only the <xref:System.Web.Hosting.VirtualDirectory> objects, use the <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> property.
  syntax:
    content: public abstract System.Collections.IEnumerable Children { get; }
    return:
      type: System.Collections.IEnumerable
      description: An object implementing the <xref href="System.Collections.IEnumerable"></xref> interface containing <xref href="System.Web.Hosting.VirtualFile"></xref> and <xref href="System.Web.Hosting.VirtualDirectory"></xref> objects.
  overload: System.Web.Hosting.VirtualDirectory.Children*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualDirectory.Directories
  commentId: P:System.Web.Hosting.VirtualDirectory.Directories
  id: Directories
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: Directories
  nameWithType: VirtualDirectory.Directories
  fullName: VirtualDirectory.Directories
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Gets a list of all the subdirectories contained in this directory.
  remarks: The <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> property contains <xref:System.Web.Hosting.VirtualDirectory> objects that represent the directories contained in this virtual directory. To return the <xref:System.Web.Hosting.VirtualFile> objects, use the <xref:System.Web.Hosting.VirtualDirectory.Files%2A> property. To return both <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects, use the <xref:System.Web.Hosting.VirtualDirectory.Children%2A> property.
  syntax:
    content: public abstract System.Collections.IEnumerable Directories { get; }
    return:
      type: System.Collections.IEnumerable
      description: An object implementing the <xref href="System.Collections.IEnumerable"></xref> interface containing <xref href="System.Web.Hosting.VirtualDirectory"></xref> objects.
  overload: System.Web.Hosting.VirtualDirectory.Directories*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualDirectory.Files
  commentId: P:System.Web.Hosting.VirtualDirectory.Files
  id: Files
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: Files
  nameWithType: VirtualDirectory.Files
  fullName: VirtualDirectory.Files
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Gets a list of all files contained in this directory.
  remarks: The <xref:System.Web.Hosting.VirtualDirectory.Files%2A> property contains <xref:System.Web.Hosting.VirtualFile> objects that represent the files contained in this virtual directory. To return the <xref:System.Web.Hosting.VirtualDirectory> objects, use the <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> property. To return both <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects, use the <xref:System.Web.Hosting.VirtualDirectory.Children%2A> property.
  syntax:
    content: public abstract System.Collections.IEnumerable Files { get; }
    return:
      type: System.Collections.IEnumerable
      description: An object implementing the <xref href="System.Collections.IEnumerable"></xref> interface containing <xref href="System.Web.Hosting.VirtualFile"></xref> objects.
  overload: System.Web.Hosting.VirtualDirectory.Files*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualDirectory.IsDirectory
  commentId: P:System.Web.Hosting.VirtualDirectory.IsDirectory
  id: IsDirectory
  parent: System.Web.Hosting.VirtualDirectory
  langs:
  - csharp
  name: IsDirectory
  nameWithType: VirtualDirectory.IsDirectory
  fullName: VirtualDirectory.IsDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Gets a value that indicates that this is a virtual resource that should be treated as a directory.
  syntax:
    content: public override bool IsDirectory { get; }
    return:
      type: System.Boolean
      description: Always `true`.
  overload: System.Web.Hosting.VirtualDirectory.IsDirectory*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Web.Hosting.VirtualFileBase
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualFileBase
  nameWithType: VirtualFileBase
  fullName: System.Web.Hosting.VirtualFileBase
- uid: System.Web.Hosting.VirtualDirectory.#ctor(System.String)
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: VirtualDirectory(String)
  nameWithType: VirtualDirectory.VirtualDirectory(String)
  fullName: VirtualDirectory.VirtualDirectory(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualDirectory.Children
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Children
  nameWithType: VirtualDirectory.Children
  fullName: VirtualDirectory.Children
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.Hosting.VirtualDirectory.Directories
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Directories
  nameWithType: VirtualDirectory.Directories
  fullName: VirtualDirectory.Directories
- uid: System.Web.Hosting.VirtualDirectory.Files
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Files
  nameWithType: VirtualDirectory.Files
  fullName: VirtualDirectory.Files
- uid: System.Web.Hosting.VirtualDirectory.IsDirectory
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualDirectory.IsDirectory
  fullName: VirtualDirectory.IsDirectory
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualDirectory.#ctor*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: VirtualDirectory
  nameWithType: VirtualDirectory.VirtualDirectory
  fullName: VirtualDirectory.VirtualDirectory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
- uid: System.Web.Hosting.VirtualDirectory.Children*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Children
  nameWithType: VirtualDirectory.Children
  fullName: VirtualDirectory.Children
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
- uid: System.Web.Hosting.VirtualDirectory.Directories*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Directories
  nameWithType: VirtualDirectory.Directories
  fullName: VirtualDirectory.Directories
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
- uid: System.Web.Hosting.VirtualDirectory.Files*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: Files
  nameWithType: VirtualDirectory.Files
  fullName: VirtualDirectory.Files
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
- uid: System.Web.Hosting.VirtualDirectory.IsDirectory*
  parent: System.Web.Hosting.VirtualDirectory
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualDirectory.IsDirectory
  fullName: VirtualDirectory.IsDirectory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualDirectory.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: VirtualFileBase.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.Web.Hosting.VirtualFileBase.Name
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: VirtualFileBase.Name
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: VirtualFileBase.VirtualPath
