{"nodes":[{"content":"Represents a lexical scope within <xref href=\"System.Diagnostics.SymbolStore.ISymbolMethod\"></xref>, providing access to the start and end offsets of the scope, as well as its child and parent scopes.","nodes":[{"pos":[0,200],"content":"Represents a lexical scope within <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.ISymbolMethod\"&gt;&lt;/xref&gt;</ph>, providing access to the start and end offsets of the scope, as well as its child and parent scopes.","source":"Represents a lexical scope within <xref href=\"System.Diagnostics.SymbolStore.ISymbolMethod\"></xref>, providing access to the start and end offsets of the scope, as well as its child and parent scopes."}],"pos":[861,1062],"yaml":true},{"content":"The <xref:System.Diagnostics.SymbolStore.ISymbolScope> interface also provides access to all locals defined within the current scope.  \n  \n> [!NOTE]\n>  This interface is the managed counterpart of the `ISymUnmanagedScope` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.","nodes":[{"pos":[0,133],"content":"The <xref:System.Diagnostics.SymbolStore.ISymbolScope> interface also provides access to all locals defined within the current scope.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.SymbolStore.ISymbolScope&gt;</ph> interface also provides access to all locals defined within the current scope.","pos":[0,133],"source":"The <xref:System.Diagnostics.SymbolStore.ISymbolScope> interface also provides access to all locals defined within the current scope."}]},{"pos":[141,360],"content":"[!NOTE]\n This interface is the managed counterpart of the `ISymUnmanagedScope` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.","leadings":["","> "],"nodes":[{"content":"This interface is the managed counterpart of the <ph id=\"ph1\">`ISymUnmanagedScope`</ph> interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.","pos":[9,217],"source":" This interface is the managed counterpart of the `ISymUnmanagedScope` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information."}]}],"pos":[1073,1439],"yaml":true,"extradata":"MT"},{"content":"Gets the end offset of the current lexical scope.","nodes":[{"pos":[0,49],"content":"Gets the end offset of the current lexical scope.","nodes":[{"content":"Gets the end offset of the current lexical scope.","pos":[0,49]}]}],"pos":[2910,2960],"yaml":true},{"content":"The end offset of the current lexical scope.","nodes":[{"pos":[0,44],"content":"The end offset of the current lexical scope.","nodes":[{"content":"The end offset of the current lexical scope.","pos":[0,44]}]}],"pos":[3069,3114],"yaml":true},{"content":"Gets the child lexical scopes of the current lexical scope.","nodes":[{"pos":[0,59],"content":"Gets the child lexical scopes of the current lexical scope.","nodes":[{"content":"Gets the child lexical scopes of the current lexical scope.","pos":[0,59]}]}],"pos":[4412,4472],"yaml":true},{"content":"The child lexical scopes that of the current lexical scope.","nodes":[{"pos":[0,59],"content":"The child lexical scopes that of the current lexical scope.","nodes":[{"content":"The child lexical scopes that of the current lexical scope.","pos":[0,59]}]}],"pos":[4672,4732],"yaml":true},{"content":"Gets the local variables within the current lexical scope.","nodes":[{"pos":[0,58],"content":"Gets the local variables within the current lexical scope.","nodes":[{"content":"Gets the local variables within the current lexical scope.","pos":[0,58]}]}],"pos":[6020,6079],"yaml":true},{"content":"The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.","nodes":[{"pos":[0,200],"content":"The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.","nodes":[{"content":"The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.","pos":[0,200],"nodes":[{"content":"The local variables are returned in no particular order.","pos":[0,56]},{"content":"If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.","pos":[57,200]}]}]}],"pos":[6090,6291],"yaml":true,"extradata":"MT"},{"content":"The local variables within the current lexical scope.","nodes":[{"pos":[0,53],"content":"The local variables within the current lexical scope.","nodes":[{"content":"The local variables within the current lexical scope.","pos":[0,53]}]}],"pos":[6495,6549],"yaml":true},{"content":"Gets the namespaces that are used within the current scope.","nodes":[{"pos":[0,59],"content":"Gets the namespaces that are used within the current scope.","nodes":[{"content":"Gets the namespaces that are used within the current scope.","pos":[0,59]}]}],"pos":[7859,7919],"yaml":true},{"content":"The namespaces that are used within the current scope.","nodes":[{"pos":[0,54],"content":"The namespaces that are used within the current scope.","nodes":[{"content":"The namespaces that are used within the current scope.","pos":[0,54]}]}],"pos":[8129,8184],"yaml":true},{"content":"Gets the method that contains the current lexical scope.","nodes":[{"pos":[0,56],"content":"Gets the method that contains the current lexical scope.","nodes":[{"content":"Gets the method that contains the current lexical scope.","pos":[0,56]}]}],"pos":[9452,9509],"yaml":true},{"content":"The method that contains the current lexical scope.","nodes":[{"pos":[0,51],"content":"The method that contains the current lexical scope.","nodes":[{"content":"The method that contains the current lexical scope.","pos":[0,51]}]}],"pos":[9688,9740],"yaml":true},{"content":"Gets the parent lexical scope of the current scope.","nodes":[{"pos":[0,51],"content":"Gets the parent lexical scope of the current scope.","nodes":[{"content":"Gets the parent lexical scope of the current scope.","pos":[0,51]}]}],"pos":[11001,11053],"yaml":true},{"content":"The parent lexical scope of the current scope.","nodes":[{"pos":[0,46],"content":"The parent lexical scope of the current scope.","nodes":[{"content":"The parent lexical scope of the current scope.","pos":[0,46]}]}],"pos":[11230,11277],"yaml":true},{"content":"Gets the start offset of the current lexical scope.","nodes":[{"pos":[0,51],"content":"Gets the start offset of the current lexical scope.","nodes":[{"content":"Gets the start offset of the current lexical scope.","pos":[0,51]}]}],"pos":[12568,12620],"yaml":true},{"content":"The start offset of the current lexical scope.","nodes":[{"pos":[0,46],"content":"The start offset of the current lexical scope.","nodes":[{"content":"The start offset of the current lexical scope.","pos":[0,46]}]}],"pos":[12731,12778],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  commentId: T:System.Diagnostics.SymbolStore.ISymbolScope\n  id: ISymbolScope\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolScope.EndOffset\n  - System.Diagnostics.SymbolStore.ISymbolScope.GetChildren\n  - System.Diagnostics.SymbolStore.ISymbolScope.GetLocals\n  - System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces\n  - System.Diagnostics.SymbolStore.ISymbolScope.Method\n  - System.Diagnostics.SymbolStore.ISymbolScope.Parent\n  - System.Diagnostics.SymbolStore.ISymbolScope.StartOffset\n  langs:\n  - csharp\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n  type: Interface\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Represents a lexical scope within <xref href=\"System.Diagnostics.SymbolStore.ISymbolMethod\"></xref>, providing access to the start and end offsets of the scope, as well as its child and parent scopes.\n  remarks: \"The <xref:System.Diagnostics.SymbolStore.ISymbolScope> interface also provides access to all locals defined within the current scope.  \\n  \\n> [!NOTE]\\n>  This interface is the managed counterpart of the `ISymUnmanagedScope` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolScope\n  derivedClasses:\n  - System.Diagnostics.SymbolStore.SymScope\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.EndOffset\n  commentId: P:System.Diagnostics.SymbolStore.ISymbolScope.EndOffset\n  id: EndOffset\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  langs:\n  - csharp\n  name: EndOffset\n  nameWithType: ISymbolScope.EndOffset\n  fullName: ISymbolScope.EndOffset\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the end offset of the current lexical scope.\n  syntax:\n    content: public int EndOffset { get; }\n    return:\n      type: System.Int32\n      description: The end offset of the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.ISymbolScope.EndOffset*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetChildren\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolScope.GetChildren\n  id: GetChildren\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  langs:\n  - csharp\n  name: GetChildren()\n  nameWithType: ISymbolScope.GetChildren()\n  fullName: ISymbolScope.GetChildren()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the child lexical scopes of the current lexical scope.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope[]\n      description: The child lexical scopes that of the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.ISymbolScope.GetChildren*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetLocals\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolScope.GetLocals\n  id: GetLocals\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  langs:\n  - csharp\n  name: GetLocals()\n  nameWithType: ISymbolScope.GetLocals()\n  fullName: ISymbolScope.GetLocals()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the local variables within the current lexical scope.\n  remarks: The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: The local variables within the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.ISymbolScope.GetLocals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces\n  commentId: M:System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces\n  id: GetNamespaces\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  langs:\n  - csharp\n  name: GetNamespaces()\n  nameWithType: ISymbolScope.GetNamespaces()\n  fullName: ISymbolScope.GetNamespaces()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the namespaces that are used within the current scope.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n      description: The namespaces that are used within the current scope.\n  overload: System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.Method\n  commentId: P:System.Diagnostics.SymbolStore.ISymbolScope.Method\n  id: Method\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  langs:\n  - csharp\n  name: Method\n  nameWithType: ISymbolScope.Method\n  fullName: ISymbolScope.Method\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the method that contains the current lexical scope.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolMethod Method { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: The method that contains the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.ISymbolScope.Method*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.Parent\n  commentId: P:System.Diagnostics.SymbolStore.ISymbolScope.Parent\n  id: Parent\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: ISymbolScope.Parent\n  fullName: ISymbolScope.Parent\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the parent lexical scope of the current scope.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolScope Parent { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: The parent lexical scope of the current scope.\n  overload: System.Diagnostics.SymbolStore.ISymbolScope.Parent*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.StartOffset\n  commentId: P:System.Diagnostics.SymbolStore.ISymbolScope.StartOffset\n  id: StartOffset\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  langs:\n  - csharp\n  name: StartOffset\n  nameWithType: ISymbolScope.StartOffset\n  fullName: ISymbolScope.StartOffset\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Gets the start offset of the current lexical scope.\n  syntax:\n    content: public int StartOffset { get; }\n    return:\n      type: System.Int32\n      description: The start offset of the current lexical scope.\n  overload: System.Diagnostics.SymbolStore.ISymbolScope.StartOffset*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.EndOffset\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: EndOffset\n  nameWithType: ISymbolScope.EndOffset\n  fullName: ISymbolScope.EndOffset\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetChildren\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: GetChildren()\n  nameWithType: ISymbolScope.GetChildren()\n  fullName: ISymbolScope.GetChildren()\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n- uid: System.Diagnostics.SymbolStore.ISymbolScope[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolScope[]\n  nameWithType: ISymbolScope[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolScope\n    name: ISymbolScope\n    nameWithType: ISymbolScope\n    fullName: System.Diagnostics.SymbolStore.ISymbolScope\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetLocals\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: GetLocals()\n  nameWithType: ISymbolScope.GetLocals()\n  fullName: ISymbolScope.GetLocals()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable[]\n  nameWithType: ISymbolVariable[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolVariable\n    name: ISymbolVariable\n    nameWithType: ISymbolVariable\n    fullName: System.Diagnostics.SymbolStore.ISymbolVariable\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: GetNamespaces()\n  nameWithType: ISymbolScope.GetNamespaces()\n  fullName: ISymbolScope.GetNamespaces()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace[]\n  nameWithType: ISymbolNamespace[]\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n  spec.csharp:\n  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n    name: ISymbolNamespace\n    nameWithType: ISymbolNamespace\n    fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.Method\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: Method\n  nameWithType: ISymbolScope.Method\n  fullName: ISymbolScope.Method\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.Parent\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: Parent\n  nameWithType: ISymbolScope.Parent\n  fullName: ISymbolScope.Parent\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.StartOffset\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: StartOffset\n  nameWithType: ISymbolScope.StartOffset\n  fullName: ISymbolScope.StartOffset\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.EndOffset*\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: EndOffset\n  nameWithType: ISymbolScope.EndOffset\n  fullName: ISymbolScope.EndOffset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetChildren*\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: GetChildren\n  nameWithType: ISymbolScope.GetChildren\n  fullName: ISymbolScope.GetChildren\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetLocals*\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: GetLocals\n  nameWithType: ISymbolScope.GetLocals\n  fullName: ISymbolScope.GetLocals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces*\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: GetNamespaces\n  nameWithType: ISymbolScope.GetNamespaces\n  fullName: ISymbolScope.GetNamespaces\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.Method*\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: Method\n  nameWithType: ISymbolScope.Method\n  fullName: ISymbolScope.Method\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.Parent*\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: Parent\n  nameWithType: ISymbolScope.Parent\n  fullName: ISymbolScope.Parent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n- uid: System.Diagnostics.SymbolStore.ISymbolScope.StartOffset*\n  parent: System.Diagnostics.SymbolStore.ISymbolScope\n  isExternal: false\n  name: StartOffset\n  nameWithType: ISymbolScope.StartOffset\n  fullName: ISymbolScope.StartOffset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/ISymbolScope.xml\n"}