{"nodes":[{"content":"Represents a collection of associated <xref href=\"System.String\"></xref> keys and <xref href=\"System.String\"></xref> values that can be accessed either with the key or with the index.","nodes":[{"pos":[0,183],"content":"Represents a collection of associated <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> keys and <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> values that can be accessed either with the key or with the index.","source":"Represents a collection of associated <xref href=\"System.String\"></xref> keys and <xref href=\"System.String\"></xref> values that can be accessed either with the key or with the index."}],"pos":[2749,2933],"yaml":true},{"content":"This collection is based on the <xref:System.Collections.Specialized.NameObjectCollectionBase> class. However, unlike the <xref:System.Collections.Specialized.NameObjectCollectionBase>, this class stores multiple string values under a single key.  \n  \n This class can be used for headers, query strings and form data.  \n  \n Each element is a key/value pair.  \n  \n Collections of this type do not preserve the ordering of element, and no particular ordering is guaranteed when enumerating the collection.  \n  \n The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required through reallocation.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n In .NET Framework version 1.0, this class uses culture-sensitive string comparisons. However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings. For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md).  \n  \n `null` is allowed as a key or as a value.  \n  \n> [!CAUTION]\n>  The <xref:System.Collections.Specialized.NameValueCollection.Get%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`.","nodes":[{"pos":[0,246],"content":"This collection is based on the <xref:System.Collections.Specialized.NameObjectCollectionBase> class. However, unlike the <xref:System.Collections.Specialized.NameObjectCollectionBase>, this class stores multiple string values under a single key.","nodes":[{"content":"This collection is based on the <xref:System.Collections.Specialized.NameObjectCollectionBase> class. However, unlike the <xref:System.Collections.Specialized.NameObjectCollectionBase>, this class stores multiple string values under a single key.","pos":[0,246],"nodes":[{"content":"This collection is based on the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> class.","pos":[0,101],"source":"This collection is based on the <xref:System.Collections.Specialized.NameObjectCollectionBase> class."},{"content":"However, unlike the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, this class stores multiple string values under a single key.","pos":[102,246],"source":" However, unlike the <xref:System.Collections.Specialized.NameObjectCollectionBase>, this class stores multiple string values under a single key."}]}]},{"pos":[253,317],"content":"This class can be used for headers, query strings and form data.","nodes":[{"content":"This class can be used for headers, query strings and form data.","pos":[0,64]}]},{"pos":[324,357],"content":"Each element is a key/value pair.","nodes":[{"content":"Each element is a key/value pair.","pos":[0,33]}]},{"pos":[364,503],"content":"Collections of this type do not preserve the ordering of element, and no particular ordering is guaranteed when enumerating the collection.","nodes":[{"content":"Collections of this type do not preserve the ordering of element, and no particular ordering is guaranteed when enumerating the collection.","pos":[0,139]}]},{"pos":[510,843],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required through reallocation.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required through reallocation.","pos":[0,333],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,173],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required through reallocation.","pos":[174,333],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required through reallocation."}]}]},{"pos":[850,1065],"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","pos":[0,215],"nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,118],"source":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The default hash code provider is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.","pos":[119,215],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."}]}]},{"pos":[1072,1202],"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","nodes":[{"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","pos":[0,130],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"The default comparer is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.","pos":[52,130],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."}]}]},{"pos":[1209,1692],"content":"In .NET Framework version 1.0, this class uses culture-sensitive string comparisons. However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings. For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md).","nodes":[{"content":"In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.","pos":[0,84]},{"content":"However, in .NET Framework version 1.1 and later, this class uses <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph> when comparing strings.","pos":[85,259],"source":" However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings."},{"content":"For more information about how culture affects comparisons and sorting, see <bpt id=\"p1\">[</bpt>Performing Culture-Insensitive String Operations<ept id=\"p1\">](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)</ept>.","pos":[260,483],"source":" For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)."}]},{"pos":[1699,1740],"content":"<ph id=\"ph1\">`null`</ph> is allowed as a key or as a value.","source":"`null` is allowed as a key or as a value."},{"pos":[1748,2012],"content":"[!CAUTION]\n The <xref:System.Collections.Specialized.NameValueCollection.Get%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%2A&gt;</ph> method does not distinguish between <ph id=\"ph2\">`null`</ph> which is returned because the specified key is not found and <ph id=\"ph3\">`null`</ph> which is returned because the value associated with the key is <ph id=\"ph4\">`null`</ph>.","pos":[12,262],"source":" The <xref:System.Collections.Specialized.NameValueCollection.Get%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`."}]}],"pos":[2944,4978],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.","nodes":[{"pos":[0,259],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.","source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer."}],"pos":[9735,9995],"yaml":true},{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(1) operation.","nodes":[{"pos":[0,352],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","pos":[0,352],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,178],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.","pos":[179,352],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array."}]}]},{"pos":[359,589],"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,230],"source":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[596,811],"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","pos":[0,215],"nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,118],"source":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The default hash code provider is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.","pos":[119,215],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."}]}]},{"pos":[818,948],"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","nodes":[{"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","pos":[0,130],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"The default comparer is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.","pos":[52,130],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."}]}]},{"pos":[955,993],"content":"This constructor is an O(1) operation.","nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]}],"pos":[10006,11010],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href=\"System.Collections.IEqualityComparer\"></xref> object.","nodes":[{"pos":[0,249],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> class that is empty, has the default initial capacity, and uses the specified <ph id=\"ph2\">&lt;xref href=\"System.Collections.IEqualityComparer\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href=\"System.Collections.IEqualityComparer\"></xref> object."}],"pos":[12667,12917],"yaml":true},{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.  \n  \n This constructor is an O(1) operation.","nodes":[{"pos":[0,359],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","pos":[0,359],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> object is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,185],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.","pos":[186,359],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array."}]}]},{"pos":[366,596],"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,230],"source":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[603,880],"content":"The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.","nodes":[{"content":"The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.","pos":[0,277],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object combines the comparer and the hash code provider.","pos":[0,104],"source":"The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider."},{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[106,224],"source":"  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The comparer determines whether two keys are equal.","pos":[226,277]}]}]},{"pos":[887,925],"content":"This constructor is an O(1) operation.","nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]}],"pos":[12928,13862],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.IEqualityComparer\"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.","nodes":[{"pos":[0,174],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEqualityComparer\"&gt;&lt;/xref&gt;</ph> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.","source":"The <xref href=\"System.Collections.IEqualityComparer\"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection."}],"pos":[14080,14255],"yaml":true},{"content":"Copies the entries from the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection.","nodes":[{"pos":[0,339],"content":"Copies the entries from the specified <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> to a new <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection.","source":"Copies the entries from the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection."}],"pos":[15887,16227],"yaml":true},{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n The elements of the new <xref:System.Collections.Specialized.NameValueCollection> are sorted in the same order as the source <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n This constructor is an O(`n`) operation, where `n` is the number of elements in `col`.","nodes":[{"pos":[0,352],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","pos":[0,352],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,178],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.","pos":[179,352],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array."}]}]},{"pos":[359,589],"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,230],"source":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[596,811],"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","pos":[0,215],"nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,118],"source":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The default hash code provider is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.","pos":[119,215],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."}]}]},{"pos":[818,948],"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","nodes":[{"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","pos":[0,130],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"The default comparer is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.","pos":[52,130],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."}]}]},{"pos":[955,1138],"content":"The elements of the new <xref:System.Collections.Specialized.NameValueCollection> are sorted in the same order as the source <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"The elements of the new <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> are sorted in the same order as the source <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,183],"source":"The elements of the new <xref:System.Collections.Specialized.NameValueCollection> are sorted in the same order as the source <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[1145,1231],"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of elements in <ph id=\"ph3\">`col`</ph>.","source":"This constructor is an O(`n`) operation, where `n` is the number of elements in `col`."}],"pos":[16238,17482],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance.","nodes":[{"pos":[0,176],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> to copy to the new <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance."}],"pos":[17702,17879],"yaml":true},{"content":"<code>col</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;col&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>col</code> is `null`."}],"pos":[18065,18093],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.","nodes":[{"pos":[0,261],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.","source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer."}],"pos":[19482,19744],"yaml":true},{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(`n`) operation, where `n` is `capacity`.","nodes":[{"pos":[0,352],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","pos":[0,352],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,178],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.","pos":[179,352],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array."}]}]},{"pos":[359,589],"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,230],"source":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[596,811],"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","pos":[0,215],"nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,118],"source":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The default hash code provider is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.","pos":[119,215],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."}]}]},{"pos":[818,948],"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","nodes":[{"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","pos":[0,130],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"The default comparer is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.","pos":[52,130],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."}]}]},{"pos":[955,1020],"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">`capacity`</ph>.","source":"This constructor is an O(`n`) operation, where `n` is `capacity`."}],"pos":[19755,20786],"yaml":true,"extradata":"MT"},{"content":"The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain.","nodes":[{"pos":[0,123],"content":"The initial number of entries that the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> can contain.","source":"The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain."}],"pos":[20931,21055],"yaml":true},{"content":"<code>capacity</code> is less than zero.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","source":"<code>capacity</code> is less than zero."}],"pos":[21253,21294],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity and uses the specified hash code provider and the specified comparer.","nodes":[{"pos":[0,229],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> class that is empty, has the default initial capacity and uses the specified hash code provider and the specified comparer.","source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity and uses the specified hash code provider and the specified comparer."}],"pos":[22911,23141],"yaml":true},{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(1) operation.","nodes":[{"pos":[0,352],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","pos":[0,352],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,178],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.","pos":[179,352],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array."}]}]},{"pos":[359,589],"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,230],"source":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[596,811],"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","pos":[0,215],"nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,118],"source":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The default hash code provider is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.","pos":[119,215],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."}]}]},{"pos":[818,948],"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","nodes":[{"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","pos":[0,130],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"The default comparer is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.","pos":[52,130],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."}]}]},{"pos":[955,993],"content":"This constructor is an O(1) operation.","nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]}],"pos":[23152,24156],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,186],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IHashCodeProvider\"&gt;&lt;/xref&gt;</ph> that will supply the hash codes for all keys in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[24501,24688],"yaml":true},{"content":"The <xref href=\"System.Collections.IComparer\"></xref> to use to determine whether two keys are equal.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IComparer\"&gt;&lt;/xref&gt;</ph> to use to determine whether two keys are equal.","source":"The <xref href=\"System.Collections.IComparer\"></xref> to use to determine whether two keys are equal."}],"pos":[24767,24869],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href=\"System.Collections.IEqualityComparer\"></xref> object.","nodes":[{"pos":[0,251],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified <ph id=\"ph2\">&lt;xref href=\"System.Collections.IEqualityComparer\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href=\"System.Collections.IEqualityComparer\"></xref> object."}],"pos":[26498,26750],"yaml":true},{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.  \n  \n This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.","nodes":[{"pos":[0,359],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","pos":[0,359],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> object is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,185],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.","pos":[186,359],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array."}]}]},{"pos":[366,596],"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,230],"source":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[603,880],"content":"The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.","nodes":[{"content":"The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.","pos":[0,277],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object combines the comparer and the hash code provider.","pos":[0,104],"source":"The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider."},{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[106,224],"source":"  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The comparer determines whether two keys are equal.","pos":[226,277]}]}]},{"pos":[887,966],"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the <ph id=\"ph3\">`capacity`</ph> parameter.","source":"This constructor is an O(`n`) operation, where `n` is the `capacity` parameter."}],"pos":[26761,27736],"yaml":true,"extradata":"MT"},{"content":"The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object can contain.","nodes":[{"pos":[0,130],"content":"The initial number of entries that the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> object can contain.","source":"The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object can contain."}],"pos":[27936,28067],"yaml":true},{"content":"The <xref href=\"System.Collections.IEqualityComparer\"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.","nodes":[{"pos":[0,174],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEqualityComparer\"&gt;&lt;/xref&gt;</ph> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.","source":"The <xref href=\"System.Collections.IEqualityComparer\"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection."}],"pos":[28162,28337],"yaml":true},{"content":"<code>capacity</code> is less than zero.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","source":"<code>capacity</code> is less than zero."}],"pos":[28535,28576],"yaml":true},{"content":"Copies the entries from the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer.","nodes":[{"pos":[0,411],"content":"Copies the entries from the specified <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> to a new <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer.","source":"Copies the entries from the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer."}],"pos":[30181,30593],"yaml":true},{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(`n`) operation, where `n` is `capacity`.  If the number of elements in `col` is greater than `capacity`, this constructor becomes an O(`n` + `m`) operation, where `n` is `capacity` and `m` is the number of elements in `col`.","nodes":[{"pos":[0,352],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","pos":[0,352],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,178],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.","pos":[179,352],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array."}]}]},{"pos":[359,589],"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,230],"source":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[596,811],"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","pos":[0,215],"nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,118],"source":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The default hash code provider is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.","pos":[119,215],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."}]}]},{"pos":[818,948],"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","nodes":[{"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","pos":[0,130],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"The default comparer is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.","pos":[52,130],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."}]}]},{"pos":[955,1204],"content":"This constructor is an O(`n`) operation, where `n` is `capacity`.  If the number of elements in `col` is greater than `capacity`, this constructor becomes an O(`n` + `m`) operation, where `n` is `capacity` and `m` is the number of elements in `col`.","nodes":[{"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">`capacity`</ph>.","pos":[0,65],"source":"This constructor is an O(`n`) operation, where `n` is `capacity`."},{"content":"If the number of elements in <ph id=\"ph1\">`col`</ph> is greater than <ph id=\"ph2\">`capacity`</ph>, this constructor becomes an O(<ph id=\"ph3\">`n`</ph><ph id=\"ph4\"> + </ph><ph id=\"ph5\">`m`</ph>) operation, where <ph id=\"ph6\">`n`</ph> is <ph id=\"ph7\">`capacity`</ph> and <ph id=\"ph8\">`m`</ph> is the number of elements in <ph id=\"ph9\">`col`</ph>.","pos":[67,249],"source":"  If the number of elements in `col` is greater than `capacity`, this constructor becomes an O(`n` + `m`) operation, where `n` is `capacity` and `m` is the number of elements in `col`."}]}],"pos":[30604,31819],"yaml":true,"extradata":"MT"},{"content":"The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain.","nodes":[{"pos":[0,123],"content":"The initial number of entries that the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> can contain.","source":"The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain."}],"pos":[32020,32144],"yaml":true},{"content":"The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance.","nodes":[{"pos":[0,176],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> to copy to the new <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance."}],"pos":[32240,32417],"yaml":true},{"content":"<code>capacity</code> is less than zero.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","source":"<code>capacity</code> is less than zero."}],"pos":[32615,32656],"yaml":true},{"content":"<code>col</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;col&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>col</code> is `null`."}],"pos":[32758,32786],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is serializable and uses the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>.","nodes":[{"pos":[0,295],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> class that is serializable and uses the specified <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is serializable and uses the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>."}],"pos":[34505,34801],"yaml":true},{"content":"This constructor is an O(1) operation.","nodes":[{"pos":[0,38],"content":"This constructor is an O(1) operation.","nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]}],"pos":[34812,34851],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information required to serialize the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance.","nodes":[{"pos":[0,218],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that contains the information required to serialize the new <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> instance.","source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information required to serialize the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance."}],"pos":[35123,35342],"yaml":true},{"content":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains the source and destination of the serialized stream associated with the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance.","nodes":[{"pos":[0,247],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> object that contains the source and destination of the serialized stream associated with the new <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> instance.","source":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains the source and destination of the serialized stream associated with the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance."}],"pos":[35437,35685],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.","nodes":[{"pos":[0,231],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.","source":"Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer."}],"pos":[37385,37617],"yaml":true},{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(`n`) operation, where `n` is `capacity`.","nodes":[{"pos":[0,352],"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","nodes":[{"content":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.","pos":[0,352],"nodes":[{"content":"The capacity of a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.","pos":[0,178],"source":"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold."},{"content":"As elements are added to a <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.","pos":[179,352],"source":" As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array."}]}]},{"pos":[359,589],"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.","nodes":[{"content":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,230],"source":"If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>."}]},{"pos":[596,811],"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.","pos":[0,215],"nodes":[{"content":"The hash code provider dispenses hash codes for keys in the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.","pos":[0,118],"source":"The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>."},{"content":"The default hash code provider is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.","pos":[119,215],"source":" The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>."}]}]},{"pos":[818,948],"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","nodes":[{"content":"The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.","pos":[0,130],"nodes":[{"content":"The comparer determines whether two keys are equal.","pos":[0,51]},{"content":"The default comparer is the <ph id=\"ph1\">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.","pos":[52,130],"source":" The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>."}]}]},{"pos":[955,1020],"content":"This constructor is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">`capacity`</ph>.","source":"This constructor is an O(`n`) operation, where `n` is `capacity`."}],"pos":[37628,38659],"yaml":true,"extradata":"MT"},{"content":"The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain.","nodes":[{"pos":[0,123],"content":"The initial number of entries that the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> can contain.","source":"The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain."}],"pos":[38997,39121],"yaml":true},{"content":"The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,186],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IHashCodeProvider\"&gt;&lt;/xref&gt;</ph> that will supply the hash codes for all keys in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[39212,39399],"yaml":true},{"content":"The <xref href=\"System.Collections.IComparer\"></xref> to use to determine whether two keys are equal.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IComparer\"&gt;&lt;/xref&gt;</ph> to use to determine whether two keys are equal.","source":"The <xref href=\"System.Collections.IComparer\"></xref> to use to determine whether two keys are equal."}],"pos":[39478,39580],"yaml":true},{"content":"<code>capacity</code> is less than zero.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.","source":"<code>capacity</code> is less than zero."}],"pos":[39778,39819],"yaml":true},{"content":"Copies the entries in the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to the current <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,195],"content":"Copies the entries in the specified <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> to the current <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Copies the entries in the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to the current <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[41288,41484],"yaml":true},{"content":"If a key in `c` already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the associated value in `c` is added to the existing comma-separated list of values associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance.  \n  \n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \n  \n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","nodes":[{"pos":[0,307],"content":"If a key in <ph id=\"ph1\">`c`</ph> already exists in the target <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance, the associated value in <ph id=\"ph3\">`c`</ph> is added to the existing comma-separated list of values associated with the same key in the target <ph id=\"ph4\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance.","source":"If a key in `c` already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the associated value in `c` is added to the existing comma-separated list of values associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance."},{"pos":[314,645],"content":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","pos":[0,331],"source":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added."}]},{"pos":[652,984],"content":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.","pos":[0,135],"source":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation."},{"content":"If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.","pos":[136,332],"source":" If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}]}],"pos":[41495,42486],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the current <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,171],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> to copy to the current <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the current <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[42691,42863],"yaml":true},{"content":"The collection is read-only.","nodes":[{"pos":[0,28],"content":"The collection is read-only.","nodes":[{"content":"The collection is read-only.","pos":[0,28]}]}],"pos":[43047,43076],"yaml":true},{"content":"<code>c</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;c&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>c</code> is `null`."}],"pos":[43178,43204],"yaml":true},{"content":"Adds an entry with the specified name and value to the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,127],"content":"Adds an entry with the specified name and value to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Adds an entry with the specified name and value to the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[44604,44732],"yaml":true},{"content":"If the specified key already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the specified value is added to the existing comma-separated list of values in the form `\"value1,value2,value3\"`. The values are associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance.  \n  \n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \n  \n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","nodes":[{"pos":[0,357],"content":"If the specified key already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the specified value is added to the existing comma-separated list of values in the form `\"value1,value2,value3\"`. The values are associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance.","nodes":[{"content":"If the specified key already exists in the target <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance, the specified value is added to the existing comma-separated list of values in the form <ph id=\"ph2\">`\"value1,value2,value3\"`</ph>.","pos":[0,231],"source":"If the specified key already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the specified value is added to the existing comma-separated list of values in the form `\"value1,value2,value3\"`."},{"content":"The values are associated with the same key in the target <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance.","pos":[232,357],"source":" The values are associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance."}]},{"pos":[364,695],"content":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.","pos":[0,331],"source":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added."}]},{"pos":[702,1034],"content":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.","pos":[0,135],"source":"If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation."},{"content":"If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.","pos":[136,332],"source":" If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}]}],"pos":[44743,45786],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> key of the entry to add. The key can be `null`.","nodes":[{"pos":[0,86],"content":"The <xref href=\"System.String\"></xref> key of the entry to add. The key can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> key of the entry to add.","pos":[0,63],"source":"The <xref href=\"System.String\"></xref> key of the entry to add."},{"content":"The key can be <ph id=\"ph1\">`null`</ph>.","pos":[64,86],"source":" The key can be `null`."}]}],"pos":[45938,46025],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> value of the entry to add. The value can be `null`.","nodes":[{"pos":[0,90],"content":"The <xref href=\"System.String\"></xref> value of the entry to add. The value can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value of the entry to add.","pos":[0,65],"source":"The <xref href=\"System.String\"></xref> value of the entry to add."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[66,90],"source":" The value can be `null`."}]}],"pos":[46086,46177],"yaml":true},{"content":"The collection is read-only.","nodes":[{"pos":[0,28],"content":"The collection is read-only.","nodes":[{"content":"The collection is read-only.","pos":[0,28]}]}],"pos":[46361,46390],"yaml":true},{"content":"Gets all the keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,97],"content":"Gets all the keys in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets all the keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[47681,47779],"yaml":true},{"content":"If the collection is empty, this method returns an empty <xref:System.String> array, not `null`.  \n  \n The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","nodes":[{"pos":[0,96],"content":"If the collection is empty, this method returns an empty <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> array, not <ph id=\"ph2\">`null`</ph>.","source":"If the collection is empty, this method returns an empty <xref:System.String> array, not `null`."},{"pos":[103,479],"content":"The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.","nodes":[{"content":"The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.","pos":[0,376],"nodes":[{"content":"The arrays returned by <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph> are cached for better performance and are automatically refreshed when the collection changes.","pos":[0,186],"source":"The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes."},{"content":"A derived class can invalidate the cached version by calling <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>, thereby forcing the arrays to be recreated.","pos":[187,376],"source":" A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated."}]}]},{"pos":[486,607],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}],"pos":[47790,48404],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> array that contains all the keys of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,149],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> array that contains all the keys of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.String\"></xref> array that contains all the keys of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[48527,48677],"yaml":true},{"content":"Invalidates the cached arrays and removes all entries from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,135],"content":"Invalidates the cached arrays and removes all entries from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Invalidates the cached arrays and removes all entries from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[50049,50185],"yaml":true},{"content":"This method is an O(1) operation.","nodes":[{"pos":[0,33],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[50196,50230],"yaml":true,"extradata":"MT"},{"content":"The collection is read-only.","nodes":[{"pos":[0,28],"content":"The collection is read-only.","nodes":[{"content":"The collection is read-only.","pos":[0,28]}]}],"pos":[50488,50517],"yaml":true},{"content":"Copies the entire <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.","nodes":[{"pos":[0,209],"content":"Copies the entire <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at the specified index of the target array.","source":"Copies the entire <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array."}],"pos":[51923,52133],"yaml":true},{"content":"The specified array must be of a compatible type.  \n  \n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","nodes":[{"pos":[0,49],"content":"The specified array must be of a compatible type.","nodes":[{"content":"The specified array must be of a compatible type.","pos":[0,49]}]},{"pos":[56,147],"content":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.","nodes":[{"content":"This method uses <ph id=\"ph1\">&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;</ph> to copy the elements.","pos":[0,91],"source":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements."}]},{"pos":[154,275],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}],"pos":[52144,52426],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,247],"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,178],"source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[179,247],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[52568,52816],"yaml":true},{"content":"The zero-based index in <code>dest</code> at which copying begins.","nodes":[{"pos":[0,66],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dest</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>dest</code> at which copying begins."}],"pos":[52876,52943],"yaml":true},{"content":"<code>dest</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;dest&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>dest</code> is `null`."}],"pos":[53130,53159],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[53273,53311],"yaml":true},{"content":"<code>dest</code> is multidimensional.  \n  \n -or-  \n  \n The number of elements in the source <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>dest</code>.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;dest&lt;/code&gt;</ph> is multidimensional.","source":"<code>dest</code> is multidimensional."},{"pos":[45,49],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[56,273],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">dest</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>dest</code>."}],"pos":[53405,53687],"yaml":true},{"content":"The type of the source <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> cannot be cast automatically to the type of the destination <code>dest</code>.","nodes":[{"pos":[0,173],"content":"The type of the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> cannot be cast automatically to the type of the destination <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dest</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the source <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> cannot be cast automatically to the type of the destination <code>dest</code>."}],"pos":[53787,53961],"yaml":true},{"content":"Gets the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> combined into one comma-separated list.","nodes":[{"pos":[0,157],"content":"Gets the values at the specified index of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> combined into one comma-separated list.","source":"Gets the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> combined into one comma-separated list."}],"pos":[55289,55447],"yaml":true},{"content":"This method is an O(`n`) operation, where `n` is the number of values at the specified index.","nodes":[{"pos":[0,93],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of values at the specified index.","source":"This method is an O(`n`) operation, where `n` is the number of values at the specified index."}],"pos":[55458,55552],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the entry that contains the values to get from the collection.","nodes":[{"pos":[0,86],"content":"The zero-based index of the entry that contains the values to get from the collection.","nodes":[{"content":"The zero-based index of the entry that contains the values to get from the collection.","pos":[0,86]}]}],"pos":[55690,55777],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains a comma-separated list of the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.","nodes":[{"pos":[0,219],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains a comma-separated list of the values at the specified index of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.String\"></xref> that contains a comma-separated list of the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`."}],"pos":[55834,56054],"yaml":true},{"content":"<code>index</code> is outside the valid range of indexes for the collection.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","source":"<code>index</code> is outside the valid range of indexes for the collection."}],"pos":[56250,56327],"yaml":true},{"content":"Gets the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> combined into one comma-separated list.","nodes":[{"pos":[0,170],"content":"Gets the values associated with the specified key from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> combined into one comma-separated list.","source":"Gets the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> combined into one comma-separated list."}],"pos":[57661,57832],"yaml":true},{"content":"> [!CAUTION]\n>  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.  \n  \n This method is an O(`n`) operation, where `n` is the number of values associated with the specified key.","nodes":[{"pos":[2,233],"content":"[!CAUTION]\n This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.","leadings":["","> "],"nodes":[{"content":" This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.","pos":[11,229],"nodes":[{"content":"This method returns <ph id=\"ph1\">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id=\"ph2\">`null`</ph>.","pos":[1,162],"source":" This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`."},{"content":"This method does not distinguish between the two cases.","pos":[163,218]}]}]},{"pos":[240,344],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of values associated with the specified key.","source":"This method is an O(`n`) operation, where `n` is the number of values associated with the specified key."}],"pos":[57843,58193],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> key of the entry that contains the values to get. The key can be `null`.","nodes":[{"pos":[0,111],"content":"The <xref href=\"System.String\"></xref> key of the entry that contains the values to get. The key can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> key of the entry that contains the values to get.","pos":[0,88],"source":"The <xref href=\"System.String\"></xref> key of the entry that contains the values to get."},{"content":"The key can be <ph id=\"ph1\">`null`</ph>.","pos":[89,111],"source":" The key can be `null`."}]}],"pos":[58333,58445],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains a comma-separated list of the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains a comma-separated list of the values associated with the specified key from the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.String\"></xref> that contains a comma-separated list of the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`."}],"pos":[58502,58735],"yaml":true},{"content":"Gets the key at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,115],"content":"Gets the key at the specified index of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the key at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[60166,60282],"yaml":true},{"content":"This method is an O(1) operation.","nodes":[{"pos":[0,33],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[60293,60327],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the key to get from the collection.","nodes":[{"pos":[0,59],"content":"The zero-based index of the key to get from the collection.","nodes":[{"content":"The zero-based index of the key to get from the collection.","pos":[0,59]}]}],"pos":[60468,60528],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the key at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.","nodes":[{"pos":[0,190],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the key at the specified index of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.String\"></xref> that contains the key at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`."}],"pos":[60585,60776],"yaml":true},{"content":"<code>index</code> is outside the valid range of indexes for the collection.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","source":"<code>index</code> is outside the valid range of indexes for the collection."}],"pos":[60975,61052],"yaml":true},{"content":"Gets the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,118],"content":"Gets the values at the specified index of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[62416,62535],"yaml":true},{"content":"This method is an O(`n`) operation, where `n` is the number of values at the specified index.","nodes":[{"pos":[0,93],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of values at the specified index.","source":"This method is an O(`n`) operation, where `n` is the number of values at the specified index."}],"pos":[62546,62640],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the entry that contains the values to get from the collection.","nodes":[{"pos":[0,86],"content":"The zero-based index of the entry that contains the values to get from the collection.","nodes":[{"content":"The zero-based index of the entry that contains the values to get from the collection.","pos":[0,86]}]}],"pos":[62786,62873],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> array that contains the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.","nodes":[{"pos":[0,199],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> array that contains the values at the specified index of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.String\"></xref> array that contains the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`."}],"pos":[62932,63132],"yaml":true},{"content":"<code>index</code> is outside the valid range of indexes for the collection.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","source":"<code>index</code> is outside the valid range of indexes for the collection."}],"pos":[63334,63411],"yaml":true},{"content":"Gets the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,131],"content":"Gets the values associated with the specified key from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[64781,64913],"yaml":true},{"content":"> [!CAUTION]\n>  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.  \n  \n This method is an O(`n`) operation, where `n` is the number of values associated with the specified key.","nodes":[{"pos":[2,233],"content":"[!CAUTION]\n This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.","leadings":["","> "],"nodes":[{"content":" This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.","pos":[11,229],"nodes":[{"content":"This method returns <ph id=\"ph1\">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id=\"ph2\">`null`</ph>.","pos":[1,162],"source":" This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`."},{"content":"This method does not distinguish between the two cases.","pos":[163,218]}]}]},{"pos":[240,344],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of values associated with the specified key.","source":"This method is an O(`n`) operation, where `n` is the number of values associated with the specified key."}],"pos":[64924,65274],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> key of the entry that contains the values to get. The key can be `null`.","nodes":[{"pos":[0,111],"content":"The <xref href=\"System.String\"></xref> key of the entry that contains the values to get. The key can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> key of the entry that contains the values to get.","pos":[0,88],"source":"The <xref href=\"System.String\"></xref> key of the entry that contains the values to get."},{"content":"The key can be <ph id=\"ph1\">`null`</ph>.","pos":[89,111],"source":" The key can be `null`."}]}],"pos":[65422,65534],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> array that contains the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.","nodes":[{"pos":[0,212],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> array that contains the values associated with the specified key from the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.String\"></xref> array that contains the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`."}],"pos":[65593,65806],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> contains keys that are not `null`.","nodes":[{"pos":[0,142],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> contains keys that are not <ph id=\"ph2\">`null`</ph>.","source":"Gets a value indicating whether the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> contains keys that are not `null`."}],"pos":[67192,67335],"yaml":true},{"content":"This method is an O(1) operation.","nodes":[{"pos":[0,33],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[67346,67380],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> contains keys that are not `null`; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph> contains keys that are not <ph id=\"ph3\">`null`</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> contains keys that are not `null`; otherwise, `false`."}],"pos":[67504,67647],"yaml":true},{"content":"Resets the cached arrays of the collection to `null`.","nodes":[{"pos":[0,53],"content":"Resets the cached arrays of the collection to <ph id=\"ph1\">`null`</ph>.","source":"Resets the cached arrays of the collection to `null`."}],"pos":[69121,69175],"yaml":true},{"content":"The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,376],"content":"The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.","nodes":[{"content":"The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.","pos":[0,376],"nodes":[{"content":"The arrays returned by <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph> are cached for better performance and are automatically refreshed when the collection changes.","pos":[0,186],"source":"The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes."},{"content":"A derived class can invalidate the cached version by calling <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>, thereby forcing the arrays to be recreated.","pos":[187,376],"source":" A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated."}]}]},{"pos":[383,416],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[69186,69607],"yaml":true,"extradata":"MT"},{"content":"Gets the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,117],"content":"Gets the entry at the specified index of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[71131,71249],"yaml":true},{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \n  \n This property cannot be set. To set the value at a specified index, use `Item[GetKey(index)]`.  \n  \n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.  \n  \n Retrieving the values at the specified index is an O(`n`) operation, where `n` is the number of values.","nodes":[{"pos":[0,135],"content":"This property provides the ability to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[index]`</ph>.","source":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`."},{"pos":[142,236],"content":"This property cannot be set. To set the value at a specified index, use `Item[GetKey(index)]`.","nodes":[{"content":"This property cannot be set.","pos":[0,28]},{"content":"To set the value at a specified index, use <ph id=\"ph1\">`Item[GetKey(index)]`</ph>.","pos":[29,94],"source":" To set the value at a specified index, use `Item[GetKey(index)]`."}]},{"pos":[243,564],"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.","pos":[0,321],"nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> property.","pos":[0,160],"source":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property."},{"content":"Visual Basic implements <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.","pos":[161,321],"source":" Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality."}]}]},{"pos":[571,674],"content":"Retrieving the values at the specified index is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of values.","source":"Retrieving the values at the specified index is an O(`n`) operation, where `n` is the number of values."}],"pos":[71260,71943],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the entry to locate in the collection.","nodes":[{"pos":[0,62],"content":"The zero-based index of the entry to locate in the collection.","nodes":[{"content":"The zero-based index of the entry to locate in the collection.","pos":[0,62]}]}],"pos":[72081,72144],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the comma-separated list of values at the specified index of the collection.","nodes":[{"pos":[0,127],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the comma-separated list of values at the specified index of the collection.","source":"A <xref href=\"System.String\"></xref> that contains the comma-separated list of values at the specified index of the collection."}],"pos":[72201,72329],"yaml":true},{"content":"<code>index</code> is outside the valid range of indexes for the collection.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is outside the valid range of indexes for the collection.","source":"<code>index</code> is outside the valid range of indexes for the collection."}],"pos":[72526,72603],"yaml":true},{"content":"Gets or sets the entry with the specified key in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,125],"content":"Gets or sets the entry with the specified key in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the entry with the specified key in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[73945,74071],"yaml":true},{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[name]`.  \n  \n If the specified key already exists in the collection, setting this property overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.  \n  \n If the specified key does not exist in the collection, setting this property creates a new entry using the specified key and the specified value.  \n  \n> [!CAUTION]\n>  This property returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This property does not distinguish between the two cases.  \n  \n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.  \n  \n Retrieving or setting the values associated with the specified key is an O(`n`) operation, where `n` is the number of values.","nodes":[{"pos":[0,134],"content":"This property provides the ability to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[name]`</ph>.","source":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[name]`."},{"pos":[141,419],"content":"If the specified key already exists in the collection, setting this property overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.","nodes":[{"content":"If the specified key already exists in the collection, setting this property overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.","pos":[0,278],"nodes":[{"content":"If the specified key already exists in the collection, setting this property overwrites the existing list of values with the specified value.","pos":[0,141]},{"content":"To append the new value to the existing list of values, use the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph> method.","pos":[142,278],"source":" To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method."}]}]},{"pos":[426,571],"content":"If the specified key does not exist in the collection, setting this property creates a new entry using the specified key and the specified value.","nodes":[{"content":"If the specified key does not exist in the collection, setting this property creates a new entry using the specified key and the specified value.","pos":[0,145]}]},{"pos":[579,814],"content":"[!CAUTION]\n This property returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This property does not distinguish between the two cases.","leadings":["","> "],"nodes":[{"content":" This property returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This property does not distinguish between the two cases.","pos":[11,233],"nodes":[{"content":"This property returns <ph id=\"ph1\">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id=\"ph2\">`null`</ph>.","pos":[1,164],"source":" This property returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`."},{"content":"This property does not distinguish between the two cases.","pos":[165,222]}]}]},{"pos":[821,1142],"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.","pos":[0,321],"nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> property.","pos":[0,160],"source":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property."},{"content":"Visual Basic implements <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.","pos":[161,321],"source":" Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality."}]}]},{"pos":[1149,1274],"content":"Retrieving or setting the values associated with the specified key is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is the number of values.","source":"Retrieving or setting the values associated with the specified key is an O(`n`) operation, where `n` is the number of values."}],"pos":[74082,75370],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> key of the entry to locate. The key can be `null`.","nodes":[{"pos":[0,89],"content":"The <xref href=\"System.String\"></xref> key of the entry to locate. The key can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> key of the entry to locate.","pos":[0,66],"source":"The <xref href=\"System.String\"></xref> key of the entry to locate."},{"content":"The key can be <ph id=\"ph1\">`null`</ph>.","pos":[67,89],"source":" The key can be `null`."}]}],"pos":[75515,75605],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the comma-separated list of values associated with the specified key, if found; otherwise, `null`.","nodes":[{"pos":[0,149],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the comma-separated list of values associated with the specified key, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.String\"></xref> that contains the comma-separated list of values associated with the specified key, if found; otherwise, `null`."}],"pos":[75662,75812],"yaml":true},{"content":"The collection is read-only and the operation attempts to modify the collection.","nodes":[{"pos":[0,80],"content":"The collection is read-only and the operation attempts to modify the collection.","nodes":[{"content":"The collection is read-only and the operation attempts to modify the collection.","pos":[0,80]}]}],"pos":[75997,76078],"yaml":true},{"content":"Removes the entries with the specified key from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.","nodes":[{"pos":[0,138],"content":"Removes the entries with the specified key from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"&gt;&lt;/xref&gt;</ph> instance.","source":"Removes the entries with the specified key from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance."}],"pos":[77430,77569],"yaml":true},{"content":"If the <xref:System.Collections.Specialized.NameValueCollection> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameValueCollection> remains unchanged. No exception is thrown.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.","nodes":[{"pos":[0,221],"content":"If the <xref:System.Collections.Specialized.NameValueCollection> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameValueCollection> remains unchanged. No exception is thrown.","nodes":[{"content":"If the <xref:System.Collections.Specialized.NameValueCollection> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameValueCollection> remains unchanged. No exception is thrown.","pos":[0,221],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> does not contain an element with the specified key, the <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> remains unchanged.","pos":[0,197],"source":"If the <xref:System.Collections.Specialized.NameValueCollection> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameValueCollection> remains unchanged."},{"content":"No exception is thrown.","pos":[198,221]}]}]},{"pos":[228,573],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,345],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]}]}]},{"pos":[580,701],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."}],"pos":[77580,78288],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> key of the entry to remove. The key can be `null`.","nodes":[{"pos":[0,89],"content":"The <xref href=\"System.String\"></xref> key of the entry to remove. The key can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> key of the entry to remove.","pos":[0,66],"source":"The <xref href=\"System.String\"></xref> key of the entry to remove."},{"content":"The key can be <ph id=\"ph1\">`null`</ph>.","pos":[67,89],"source":" The key can be `null`."}]}],"pos":[78429,78519],"yaml":true},{"content":"The collection is read-only.","nodes":[{"pos":[0,28],"content":"The collection is read-only.","nodes":[{"content":"The collection is read-only.","pos":[0,28]}]}],"pos":[78706,78735],"yaml":true},{"content":"Sets the value of an entry in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.","nodes":[{"pos":[0,106],"content":"Sets the value of an entry in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Sets the value of an entry in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>."}],"pos":[80135,80242],"yaml":true},{"content":"If the specified key already exists in the collection, this method overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.  \n  \n If the specified key does not exist in the collection, this method creates a new entry using the specified key and the specified value.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,268],"content":"If the specified key already exists in the collection, this method overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.","nodes":[{"content":"If the specified key already exists in the collection, this method overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.","pos":[0,268],"nodes":[{"content":"If the specified key already exists in the collection, this method overwrites the existing list of values with the specified value.","pos":[0,131]},{"content":"To append the new value to the existing list of values, use the <ph id=\"ph1\">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph> method.","pos":[132,268],"source":" To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method."}]}]},{"pos":[275,410],"content":"If the specified key does not exist in the collection, this method creates a new entry using the specified key and the specified value.","nodes":[{"content":"If the specified key does not exist in the collection, this method creates a new entry using the specified key and the specified value.","pos":[0,135]}]},{"pos":[417,450],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[80253,80710],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> key of the entry to add the new value to. The key can be `null`.","nodes":[{"pos":[0,103],"content":"The <xref href=\"System.String\"></xref> key of the entry to add the new value to. The key can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> key of the entry to add the new value to.","pos":[0,80],"source":"The <xref href=\"System.String\"></xref> key of the entry to add the new value to."},{"content":"The key can be <ph id=\"ph1\">`null`</ph>.","pos":[81,103],"source":" The key can be `null`."}]}],"pos":[80862,80966],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> that represents the new value to add to the specified entry. The value can be `null`.","nodes":[{"pos":[0,124],"content":"The <xref href=\"System.Object\"></xref> that represents the new value to add to the specified entry. The value can be `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the new value to add to the specified entry.","pos":[0,99],"source":"The <xref href=\"System.Object\"></xref> that represents the new value to add to the specified entry."},{"content":"The value can be <ph id=\"ph1\">`null`</ph>.","pos":[100,124],"source":" The value can be `null`."}]}],"pos":[81027,81152],"yaml":true},{"content":"The collection is read-only.","nodes":[{"pos":[0,28],"content":"The collection is read-only.","nodes":[{"content":"The collection is read-only.","pos":[0,28]}]}],"pos":[81336,81365],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Specialized.NameValueCollection\n  commentId: T:System.Collections.Specialized.NameValueCollection\n  id: NameValueCollection\n  children:\n  - System.Collections.Specialized.NameValueCollection.#ctor\n  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)\n  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)\n  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)\n  - System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  - System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)\n  - System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)\n  - System.Collections.Specialized.NameValueCollection.AllKeys\n  - System.Collections.Specialized.NameValueCollection.Clear\n  - System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.NameValueCollection.Get(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.Get(System.String)\n  - System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.GetValues(System.String)\n  - System.Collections.Specialized.NameValueCollection.HasKeys\n  - System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays\n  - System.Collections.Specialized.NameValueCollection.Item(System.Int32)\n  - System.Collections.Specialized.NameValueCollection.Item(System.String)\n  - System.Collections.Specialized.NameValueCollection.Remove(System.String)\n  - System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)\n  langs:\n  - csharp\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n  type: Class\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Represents a collection of associated <xref href=\"System.String\"></xref> keys and <xref href=\"System.String\"></xref> values that can be accessed either with the key or with the index.\n  remarks: \"This collection is based on the <xref:System.Collections.Specialized.NameObjectCollectionBase> class. However, unlike the <xref:System.Collections.Specialized.NameObjectCollectionBase>, this class stores multiple string values under a single key.  \\n  \\n This class can be used for headers, query strings and form data.  \\n  \\n Each element is a key/value pair.  \\n  \\n Collections of this type do not preserve the ordering of element, and no particular ordering is guaranteed when enumerating the collection.  \\n  \\n The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required through reallocation.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n In .NET Framework version 1.0, this class uses culture-sensitive string comparisons. However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings. For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md).  \\n  \\n `null` is allowed as a key or as a value.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Collections.Specialized.NameValueCollection.Get%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`.\"\n  example:\n  - >-\n    [!code-cpp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CPP/nvc.cpp#1)]\n     [!code-csharp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CS/nvc.cs#1)]\n     [!code-vb[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/VB/nvc.vb#1)]\n  syntax:\n    content: 'public class NameValueCollection : System.Collections.Specialized.NameObjectCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.Specialized.NameObjectCollectionBase\n  derivedClasses:\n  - System.Web.HttpClientCertificate\n  implements: []\n  inheritedMembers:\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.Count\n  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  - System.Collections.Specialized.NameObjectCollectionBase.Keys\n  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor\n  id: '#ctor'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection()\n  nameWithType: NameValueCollection.NameValueCollection()\n  fullName: NameValueCollection.NameValueCollection()\n  type: Constructor\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(1) operation.\"\n  syntax:\n    content: public NameValueCollection ();\n    parameters: []\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)\n  id: '#ctor(System.Collections.IEqualityComparer)'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection(IEqualityComparer)\n  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)\n  fullName: NameValueCollection.NameValueCollection(IEqualityComparer)\n  type: Constructor\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href=\"System.Collections.IEqualityComparer\"></xref> object.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.  \\n  \\n This constructor is an O(1) operation.\"\n  syntax:\n    content: public NameValueCollection (System.Collections.IEqualityComparer equalityComparer);\n    parameters:\n    - id: equalityComparer\n      type: System.Collections.IEqualityComparer\n      description: The <xref href=\"System.Collections.IEqualityComparer\"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)\n  id: '#ctor(System.Collections.Specialized.NameValueCollection)'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection(NameValueCollection)\n  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)\n  fullName: NameValueCollection.NameValueCollection(NameValueCollection)\n  type: Constructor\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Copies the entries from the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n The elements of the new <xref:System.Collections.Specialized.NameValueCollection> are sorted in the same order as the source <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n This constructor is an O(`n`) operation, where `n` is the number of elements in `col`.\"\n  syntax:\n    content: public NameValueCollection (System.Collections.Specialized.NameValueCollection col);\n    parameters:\n    - id: col\n      type: System.Collections.Specialized.NameValueCollection\n      description: The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance.\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>col</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection(Int32)\n  nameWithType: NameValueCollection.NameValueCollection(Int32)\n  fullName: NameValueCollection.NameValueCollection(Int32)\n  type: Constructor\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(`n`) operation, where `n` is `capacity`.\"\n  syntax:\n    content: public NameValueCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain.\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection(IHashCodeProvider, IComparer)\n  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider, IComparer)\n  fullName: NameValueCollection.NameValueCollection(IHashCodeProvider, IComparer)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections.Specialized\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the default initial capacity and uses the specified hash code provider and the specified comparer.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(1) operation.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"Please use NameValueCollection(IEqualityComparer) instead.\")]\n\n      public NameValueCollection (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);\n    parameters:\n    - id: hashProvider\n      type: System.Collections.IHashCodeProvider\n      description: The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n    - id: comparer\n      type: System.Collections.IComparer\n      description: The <xref href=\"System.Collections.IComparer\"></xref> to use to determine whether two keys are equal.\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection(Int32, IEqualityComparer)\n  nameWithType: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)\n  fullName: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)\n  type: Constructor\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href=\"System.Collections.IEqualityComparer\"></xref> object.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.  \\n  \\n This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.\"\n  syntax:\n    content: public NameValueCollection (int capacity, System.Collections.IEqualityComparer equalityComparer);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> object can contain.\n    - id: equalityComparer\n      type: System.Collections.IEqualityComparer\n      description: The <xref href=\"System.Collections.IEqualityComparer\"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than zero.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)\n  id: '#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection(Int32, NameValueCollection)\n  nameWithType: NameValueCollection.NameValueCollection(Int32, NameValueCollection)\n  fullName: NameValueCollection.NameValueCollection(Int32, NameValueCollection)\n  type: Constructor\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Copies the entries from the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(`n`) operation, where `n` is `capacity`.  If the number of elements in `col` is greater than `capacity`, this constructor becomes an O(`n` + `m`) operation, where `n` is `capacity` and `m` is the number of elements in `col`.\"\n  syntax:\n    content: public NameValueCollection (int capacity, System.Collections.Specialized.NameValueCollection col);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain.\n    - id: col\n      type: System.Collections.Specialized.NameValueCollection\n      description: The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance.\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than zero.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>col</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection(SerializationInfo, StreamingContext)\n  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo, StreamingContext)\n  fullName: NameValueCollection.NameValueCollection(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections.Specialized\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is serializable and uses the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>.\n  remarks: This constructor is an O(1) operation.\n  syntax:\n    content: protected NameValueCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the information required to serialize the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains the source and destination of the serialized stream associated with the new <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> instance.\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: NameValueCollection(Int32, IHashCodeProvider, IComparer)\n  nameWithType: NameValueCollection.NameValueCollection(Int32, IHashCodeProvider, IComparer)\n  fullName: NameValueCollection.NameValueCollection(Int32, IHashCodeProvider, IComparer)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Collections.Specialized\n  namespace: System.Collections.Specialized\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.\n  remarks: \"The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \\n  \\n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \\n  \\n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \\n  \\n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \\n  \\n This constructor is an O(`n`) operation, where `n` is `capacity`.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"Please use NameValueCollection(Int32, IEqualityComparer) instead.\")]\n\n      public NameValueCollection (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The initial number of entries that the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> can contain.\n    - id: hashProvider\n      type: System.Collections.IHashCodeProvider\n      description: The <xref href=\"System.Collections.IHashCodeProvider\"></xref> that will supply the hash codes for all keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n    - id: comparer\n      type: System.Collections.IComparer\n      description: The <xref href=\"System.Collections.IComparer\"></xref> to use to determine whether two keys are equal.\n  overload: System.Collections.Specialized.NameValueCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than zero.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)\n  id: Add(System.Collections.Specialized.NameValueCollection)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Add(NameValueCollection)\n  nameWithType: NameValueCollection.Add(NameValueCollection)\n  fullName: NameValueCollection.Add(NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Copies the entries in the specified <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to the current <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: \"If a key in `c` already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the associated value in `c` is added to the existing comma-separated list of values associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance.  \\n  \\n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \\n  \\n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  syntax:\n    content: public void Add (System.Collections.Specialized.NameValueCollection c);\n    parameters:\n    - id: c\n      type: System.Collections.Specialized.NameValueCollection\n      description: The <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to copy to the current <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  overload: System.Collections.Specialized.NameValueCollection.Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>c</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)\n  commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)\n  id: Add(System.String,System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Add(String, String)\n  nameWithType: NameValueCollection.Add(String, String)\n  fullName: NameValueCollection.Add(String, String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Adds an entry with the specified name and value to the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: \"If the specified key already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the specified value is added to the existing comma-separated list of values in the form `\\\"value1,value2,value3\\\"`. The values are associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance.  \\n  \\n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \\n  \\n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  syntax:\n    content: public virtual void Add (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> key of the entry to add. The key can be `null`.\n    - id: value\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> value of the entry to add. The value can be `null`.\n  overload: System.Collections.Specialized.NameValueCollection.Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.AllKeys\n  commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys\n  id: AllKeys\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: AllKeys\n  nameWithType: NameValueCollection.AllKeys\n  fullName: NameValueCollection.AllKeys\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets all the keys in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: \"If the collection is empty, this method returns an empty <xref:System.String> array, not `null`.  \\n  \\n The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  syntax:\n    content: public virtual string[] AllKeys { get; }\n    return:\n      type: System.String[]\n      description: A <xref href=\"System.String\"></xref> array that contains all the keys of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  overload: System.Collections.Specialized.NameValueCollection.AllKeys*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Clear\n  commentId: M:System.Collections.Specialized.NameValueCollection.Clear\n  id: Clear\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: NameValueCollection.Clear()\n  fullName: NameValueCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Invalidates the cached arrays and removes all entries from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: This method is an O(1) operation.\n  syntax:\n    content: public virtual void Clear ();\n    parameters: []\n  overload: System.Collections.Specialized.NameValueCollection.Clear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: CopyTo(Array, Int32)\n  nameWithType: NameValueCollection.CopyTo(Array, Int32)\n  fullName: NameValueCollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Copies the entire <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.\n  remarks: \"The specified array must be of a compatible type.  \\n  \\n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  syntax:\n    content: public void CopyTo (Array dest, int index);\n    parameters:\n    - id: dest\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>dest</code> at which copying begins.\n  overload: System.Collections.Specialized.NameValueCollection.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dest</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>dest</code> is multidimensional.  \\n  \\n -or-  \\n  \\n The number of elements in the source <xref href=\\\"System.Collections.Specialized.NameValueCollection\\\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>dest</code>.\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The type of the source <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> cannot be cast automatically to the type of the destination <code>dest</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)\n  commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)\n  id: Get(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Get(Int32)\n  nameWithType: NameValueCollection.Get(Int32)\n  fullName: NameValueCollection.Get(Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> combined into one comma-separated list.\n  remarks: This method is an O(`n`) operation, where `n` is the number of values at the specified index.\n  syntax:\n    content: public virtual string Get (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry that contains the values to get from the collection.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains a comma-separated list of the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.\n  overload: System.Collections.Specialized.NameValueCollection.Get*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)\n  commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.String)\n  id: Get(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Get(String)\n  nameWithType: NameValueCollection.Get(String)\n  fullName: NameValueCollection.Get(String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> combined into one comma-separated list.\n  remarks: \"> [!CAUTION]\\n>  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.  \\n  \\n This method is an O(`n`) operation, where `n` is the number of values associated with the specified key.\"\n  syntax:\n    content: public virtual string Get (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> key of the entry that contains the values to get. The key can be `null`.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains a comma-separated list of the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.\n  overload: System.Collections.Specialized.NameValueCollection.Get*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)\n  commentId: M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)\n  id: GetKey(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: GetKey(Int32)\n  nameWithType: NameValueCollection.GetKey(Int32)\n  fullName: NameValueCollection.GetKey(Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the key at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: This method is an O(1) operation.\n  syntax:\n    content: public virtual string GetKey (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the key to get from the collection.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the key at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.\n  overload: System.Collections.Specialized.NameValueCollection.GetKey*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)\n  commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)\n  id: GetValues(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: GetValues(Int32)\n  nameWithType: NameValueCollection.GetValues(Int32)\n  fullName: NameValueCollection.GetValues(Int32)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: This method is an O(`n`) operation, where `n` is the number of values at the specified index.\n  syntax:\n    content: public virtual string[] GetValues (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry that contains the values to get from the collection.\n    return:\n      type: System.String[]\n      description: A <xref href=\"System.String\"></xref> array that contains the values at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.\n  overload: System.Collections.Specialized.NameValueCollection.GetValues*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)\n  commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)\n  id: GetValues(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: GetValues(String)\n  nameWithType: NameValueCollection.GetValues(String)\n  fullName: NameValueCollection.GetValues(String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: \"> [!CAUTION]\\n>  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.  \\n  \\n This method is an O(`n`) operation, where `n` is the number of values associated with the specified key.\"\n  syntax:\n    content: public virtual string[] GetValues (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> key of the entry that contains the values to get. The key can be `null`.\n    return:\n      type: System.String[]\n      description: A <xref href=\"System.String\"></xref> array that contains the values associated with the specified key from the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>, if found; otherwise, `null`.\n  overload: System.Collections.Specialized.NameValueCollection.GetValues*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.HasKeys\n  commentId: M:System.Collections.Specialized.NameValueCollection.HasKeys\n  id: HasKeys\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: HasKeys()\n  nameWithType: NameValueCollection.HasKeys()\n  fullName: NameValueCollection.HasKeys()\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> contains keys that are not `null`.\n  remarks: This method is an O(1) operation.\n  syntax:\n    content: public bool HasKeys ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> contains keys that are not `null`; otherwise, `false`.'\n  overload: System.Collections.Specialized.NameValueCollection.HasKeys*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays\n  commentId: M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays\n  id: InvalidateCachedArrays\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: InvalidateCachedArrays()\n  nameWithType: NameValueCollection.InvalidateCachedArrays()\n  fullName: NameValueCollection.InvalidateCachedArrays()\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Resets the cached arrays of the collection to `null`.\n  remarks: \"The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: protected void InvalidateCachedArrays ();\n    parameters: []\n  overload: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)\n  commentId: P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: NameValueCollection.Item(Int32)\n  fullName: NameValueCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets the entry at the specified index of the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \\n  \\n This property cannot be set. To set the value at a specified index, use `Item[GetKey(index)]`.  \\n  \\n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.  \\n  \\n Retrieving the values at the specified index is an O(`n`) operation, where `n` is the number of values.\"\n  syntax:\n    content: public string this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the entry to locate in the collection.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the comma-separated list of values at the specified index of the collection.\n  overload: System.Collections.Specialized.NameValueCollection.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is outside the valid range of indexes for the collection.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)\n  commentId: P:System.Collections.Specialized.NameValueCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: NameValueCollection.Item(String)\n  fullName: NameValueCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Gets or sets the entry with the specified key in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[name]`.  \\n  \\n If the specified key already exists in the collection, setting this property overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.  \\n  \\n If the specified key does not exist in the collection, setting this property creates a new entry using the specified key and the specified value.  \\n  \\n> [!CAUTION]\\n>  This property returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This property does not distinguish between the two cases.  \\n  \\n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.  \\n  \\n Retrieving or setting the values associated with the specified key is an O(`n`) operation, where `n` is the number of values.\"\n  syntax:\n    content: public string this[string name] { get; set; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> key of the entry to locate. The key can be `null`.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the comma-separated list of values associated with the specified key, if found; otherwise, `null`.\n  overload: System.Collections.Specialized.NameValueCollection.Item*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only and the operation attempts to modify the collection.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)\n  commentId: M:System.Collections.Specialized.NameValueCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: NameValueCollection.Remove(String)\n  fullName: NameValueCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Removes the entries with the specified key from the <xref href=\"System.Collections.Specialized.NameObjectCollectionBase\"></xref> instance.\n  remarks: \"If the <xref:System.Collections.Specialized.NameValueCollection> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameValueCollection> remains unchanged. No exception is thrown.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.\"\n  syntax:\n    content: public virtual void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> key of the entry to remove. The key can be `null`.\n  overload: System.Collections.Specialized.NameValueCollection.Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)\n  commentId: M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)\n  id: Set(System.String,System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  langs:\n  - csharp\n  name: Set(String, String)\n  nameWithType: NameValueCollection.Set(String, String)\n  fullName: NameValueCollection.Set(String, String)\n  type: Method\n  assemblies:\n  - System.Collections.Specialized\n  - System\n  - netstandard\n  namespace: System.Collections.Specialized\n  summary: Sets the value of an entry in the <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref>.\n  remarks: \"If the specified key already exists in the collection, this method overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.  \\n  \\n If the specified key does not exist in the collection, this method creates a new entry using the specified key and the specified value.  \\n  \\n This method is an O(1) operation.\"\n  syntax:\n    content: public virtual void Set (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> key of the entry to add the new value to. The key can be `null`.\n    - id: value\n      type: System.String\n      description: The <xref href=\"System.Object\"></xref> that represents the new value to add to the specified entry. The value can be `null`.\n  overload: System.Collections.Specialized.NameValueCollection.Set*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The collection is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Collections.Specialized.NameObjectCollectionBase\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameObjectCollectionBase\n  nameWithType: NameObjectCollectionBase\n  fullName: System.Collections.Specialized.NameObjectCollectionBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Collections.Specialized.NameValueCollection.#ctor\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection()\n  nameWithType: NameValueCollection.NameValueCollection()\n  fullName: NameValueCollection.NameValueCollection()\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection(IEqualityComparer)\n  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)\n  fullName: NameValueCollection.NameValueCollection(IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection(NameValueCollection)\n  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)\n  fullName: NameValueCollection.NameValueCollection(NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection(Int32)\n  nameWithType: NameValueCollection.NameValueCollection(Int32)\n  fullName: NameValueCollection.NameValueCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection(IHashCodeProvider, IComparer)\n  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider, IComparer)\n  fullName: NameValueCollection.NameValueCollection(IHashCodeProvider, IComparer)\n- uid: System.Collections.IHashCodeProvider\n  parent: System.Collections\n  isExternal: false\n  name: IHashCodeProvider\n  nameWithType: IHashCodeProvider\n  fullName: System.Collections.IHashCodeProvider\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection(Int32, IEqualityComparer)\n  nameWithType: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)\n  fullName: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection(Int32, NameValueCollection)\n  nameWithType: NameValueCollection.NameValueCollection(Int32, NameValueCollection)\n  fullName: NameValueCollection.NameValueCollection(Int32, NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection(SerializationInfo, StreamingContext)\n  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo, StreamingContext)\n  fullName: NameValueCollection.NameValueCollection(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection(Int32, IHashCodeProvider, IComparer)\n  nameWithType: NameValueCollection.NameValueCollection(Int32, IHashCodeProvider, IComparer)\n  fullName: NameValueCollection.NameValueCollection(Int32, IHashCodeProvider, IComparer)\n- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Add(NameValueCollection)\n  nameWithType: NameValueCollection.Add(NameValueCollection)\n  fullName: NameValueCollection.Add(NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Add(String, String)\n  nameWithType: NameValueCollection.Add(String, String)\n  fullName: NameValueCollection.Add(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Specialized.NameValueCollection.AllKeys\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: AllKeys\n  nameWithType: NameValueCollection.AllKeys\n  fullName: NameValueCollection.AllKeys\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Collections.Specialized.NameValueCollection.Clear\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: NameValueCollection.Clear()\n  fullName: NameValueCollection.Clear()\n- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: NameValueCollection.CopyTo(Array, Int32)\n  fullName: NameValueCollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Get(Int32)\n  nameWithType: NameValueCollection.Get(Int32)\n  fullName: NameValueCollection.Get(Int32)\n- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Get(String)\n  nameWithType: NameValueCollection.Get(String)\n  fullName: NameValueCollection.Get(String)\n- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: GetKey(Int32)\n  nameWithType: NameValueCollection.GetKey(Int32)\n  fullName: NameValueCollection.GetKey(Int32)\n- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: GetValues(Int32)\n  nameWithType: NameValueCollection.GetValues(Int32)\n  fullName: NameValueCollection.GetValues(Int32)\n- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: GetValues(String)\n  nameWithType: NameValueCollection.GetValues(String)\n  fullName: NameValueCollection.GetValues(String)\n- uid: System.Collections.Specialized.NameValueCollection.HasKeys\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: HasKeys()\n  nameWithType: NameValueCollection.HasKeys()\n  fullName: NameValueCollection.HasKeys()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: InvalidateCachedArrays()\n  nameWithType: NameValueCollection.InvalidateCachedArrays()\n  fullName: NameValueCollection.InvalidateCachedArrays()\n- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: NameValueCollection.Item(Int32)\n  fullName: NameValueCollection.Item(Int32)\n- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: NameValueCollection.Item(String)\n  fullName: NameValueCollection.Item(String)\n- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: NameValueCollection.Remove(String)\n  fullName: NameValueCollection.Remove(String)\n- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Set(String, String)\n  nameWithType: NameValueCollection.Set(String, String)\n  fullName: NameValueCollection.Set(String, String)\n- uid: System.Collections.Specialized.NameValueCollection.#ctor*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection.NameValueCollection\n  fullName: NameValueCollection.NameValueCollection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.Add*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Add\n  nameWithType: NameValueCollection.Add\n  fullName: NameValueCollection.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.AllKeys*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: AllKeys\n  nameWithType: NameValueCollection.AllKeys\n  fullName: NameValueCollection.AllKeys\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.Clear*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Clear\n  nameWithType: NameValueCollection.Clear\n  fullName: NameValueCollection.Clear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.CopyTo*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: NameValueCollection.CopyTo\n  fullName: NameValueCollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.Get*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Get\n  nameWithType: NameValueCollection.Get\n  fullName: NameValueCollection.Get\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.GetKey*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: GetKey\n  nameWithType: NameValueCollection.GetKey\n  fullName: NameValueCollection.GetKey\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.GetValues*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: GetValues\n  nameWithType: NameValueCollection.GetValues\n  fullName: NameValueCollection.GetValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.HasKeys*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: HasKeys\n  nameWithType: NameValueCollection.HasKeys\n  fullName: NameValueCollection.HasKeys\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: InvalidateCachedArrays\n  nameWithType: NameValueCollection.InvalidateCachedArrays\n  fullName: NameValueCollection.InvalidateCachedArrays\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.Item*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Item\n  nameWithType: NameValueCollection.Item\n  fullName: NameValueCollection.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.Remove*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Remove\n  nameWithType: NameValueCollection.Remove\n  fullName: NameValueCollection.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Collections.Specialized.NameValueCollection.Set*\n  parent: System.Collections.Specialized.NameValueCollection\n  isExternal: false\n  name: Set\n  nameWithType: NameValueCollection.Set\n  fullName: NameValueCollection.Set\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseAdd(String, Object)\n  nameWithType: NameObjectCollectionBase.BaseAdd(String, Object)\n  fullName: NameObjectCollectionBase.BaseAdd(String, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseClear()\n  nameWithType: NameObjectCollectionBase.BaseClear()\n  fullName: NameObjectCollectionBase.BaseClear()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGet(Int32)\n  fullName: NameObjectCollectionBase.BaseGet(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet(String)\n  nameWithType: NameObjectCollectionBase.BaseGet(String)\n  fullName: NameObjectCollectionBase.BaseGet(String)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllKeys()\n  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()\n  fullName: NameObjectCollectionBase.BaseGetAllKeys()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues()\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues()\n  fullName: NameObjectCollectionBase.BaseGetAllValues()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues(Type)\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)\n  fullName: NameObjectCollectionBase.BaseGetAllValues(Type)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetKey(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)\n  fullName: NameObjectCollectionBase.BaseGetKey(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseHasKeys()\n  nameWithType: NameObjectCollectionBase.BaseHasKeys()\n  fullName: NameObjectCollectionBase.BaseHasKeys()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemove(String)\n  nameWithType: NameObjectCollectionBase.BaseRemove(String)\n  fullName: NameObjectCollectionBase.BaseRemove(String)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemoveAt(Int32)\n  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)\n  fullName: NameObjectCollectionBase.BaseRemoveAt(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet(Int32, Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(Int32, Object)\n  fullName: NameObjectCollectionBase.BaseSet(Int32, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet(String, Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(String, Object)\n  fullName: NameObjectCollectionBase.BaseSet(String, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Count\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Count\n  nameWithType: NameObjectCollectionBase.Count\n  fullName: NameObjectCollectionBase.Count\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: NameObjectCollectionBase.GetEnumerator()\n  fullName: NameObjectCollectionBase.GetEnumerator()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: NameObjectCollectionBase.IsReadOnly\n  fullName: NameObjectCollectionBase.IsReadOnly\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Keys\n  nameWithType: NameObjectCollectionBase.Keys\n  fullName: NameObjectCollectionBase.Keys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)\n  fullName: NameObjectCollectionBase.OnDeserialization(Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)\n  fullName: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.ICollection.IsSynchronized\n  fullName: NameObjectCollectionBase.ICollection.IsSynchronized\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.ICollection.SyncRoot\n  fullName: NameObjectCollectionBase.ICollection.SyncRoot\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}