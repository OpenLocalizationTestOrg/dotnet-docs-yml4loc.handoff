{"nodes":[{"content":"Specifies the preferred type of *output merge* to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.","nodes":[{"pos":[0,285],"content":"Specifies the preferred type of *output merge* to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.","nodes":[{"content":"Specifies the preferred type of <bpt id=\"p1\">*</bpt>output merge<ept id=\"p1\">*</ept> to use in a query.","pos":[0,65],"source":"Specifies the preferred type of *output merge* to use in a query."},{"content":"In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence.","pos":[66,193]},{"content":"This is a hint only, and may not be respected by the system when parallelizing all queries.","pos":[194,285]}]}],"pos":[609,895],"yaml":true},{"content":"Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded. For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored. However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.  \n  \n Use `AutoBuffered` for most cases; this is the default. It strikes a balance between latency and overall performance.  \n  \n Use `FullyBuffered` for queries when the entire output can be processed before the information is needed. This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.","nodes":[{"pos":[0,475],"content":"Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded. For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored. However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.","nodes":[{"content":"Use <ph id=\"ph1\">`NotBuffered`</ph> for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded.","pos":[0,164],"source":"Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded."},{"content":"For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored.","pos":[165,325]},{"content":"However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.","pos":[326,475]}]},{"pos":[482,599],"content":"Use `AutoBuffered` for most cases; this is the default. It strikes a balance between latency and overall performance.","nodes":[{"content":"Use <ph id=\"ph1\">`AutoBuffered`</ph> for most cases; this is the default.","pos":[0,55],"source":"Use `AutoBuffered` for most cases; this is the default."},{"content":"It strikes a balance between latency and overall performance.","pos":[56,117]}]},{"pos":[606,912],"content":"Use `FullyBuffered` for queries when the entire output can be processed before the information is needed. This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.","nodes":[{"content":"Use <ph id=\"ph1\">`FullyBuffered`</ph> for queries when the entire output can be processed before the information is needed.","pos":[0,105],"source":"Use `FullyBuffered` for queries when the entire output can be processed before the information is needed."},{"content":"This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.","pos":[106,306]}]}],"pos":[906,1825],"yaml":true,"extradata":"MT"},{"content":"Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.","nodes":[{"pos":[0,165],"content":"Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.","nodes":[{"content":"Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.","pos":[0,165],"nodes":[{"content":"Use a merge with output buffers of a size chosen by the system.","pos":[0,63]},{"content":"Results will accumulate into an output buffer before they are available to the consumer of the query.","pos":[64,165]}]}]}],"pos":[3157,3323],"yaml":true},{"content":"Use the default merge type, which is AutoBuffered.","nodes":[{"pos":[0,50],"content":"Use the default merge type, which is AutoBuffered.","nodes":[{"content":"Use the default merge type, which is AutoBuffered.","pos":[0,50]}]}],"pos":[4555,4606],"yaml":true},{"content":"Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.","nodes":[{"pos":[0,149],"content":"Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.","nodes":[{"content":"Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.","pos":[0,149],"nodes":[{"content":"Use a merge with full output buffers.","pos":[0,37]},{"content":"The system will accumulate all of the results before making any of them available to the consumer of the query.","pos":[38,149]}]}]}],"pos":[5869,6019],"yaml":true},{"content":"Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.","nodes":[{"pos":[0,140],"content":"Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.","nodes":[{"content":"Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.","pos":[0,140],"nodes":[{"content":"Use a merge without output buffers.","pos":[0,35]},{"content":"As soon as result elements have been computed, make that element available to the consumer of the query.","pos":[36,140]}]}]}],"pos":[7276,7417],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.ParallelMergeOptions\n  commentId: T:System.Linq.ParallelMergeOptions\n  id: ParallelMergeOptions\n  children:\n  - System.Linq.ParallelMergeOptions.AutoBuffered\n  - System.Linq.ParallelMergeOptions.Default\n  - System.Linq.ParallelMergeOptions.FullyBuffered\n  - System.Linq.ParallelMergeOptions.NotBuffered\n  langs:\n  - csharp\n  name: ParallelMergeOptions\n  nameWithType: ParallelMergeOptions\n  fullName: System.Linq.ParallelMergeOptions\n  type: Enum\n  assemblies:\n  - System.Linq.Parallel\n  - System.Core\n  - netstandard\n  namespace: System.Linq\n  summary: Specifies the preferred type of *output merge* to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.\n  remarks: \"Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded. For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored. However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.  \\n  \\n Use `AutoBuffered` for most cases; this is the default. It strikes a balance between latency and overall performance.  \\n  \\n Use `FullyBuffered` for queries when the entire output can be processed before the information is needed. This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.\"\n  syntax:\n    content: public enum ParallelMergeOptions\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelMergeOptions.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.ParallelMergeOptions.AutoBuffered\n  commentId: F:System.Linq.ParallelMergeOptions.AutoBuffered\n  id: AutoBuffered\n  parent: System.Linq.ParallelMergeOptions\n  langs:\n  - csharp\n  name: AutoBuffered\n  nameWithType: ParallelMergeOptions.AutoBuffered\n  fullName: ParallelMergeOptions.AutoBuffered\n  type: Field\n  assemblies:\n  - System.Linq.Parallel\n  - System.Core\n  - netstandard\n  namespace: System.Linq\n  summary: Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.\n  syntax:\n    content: AutoBuffered\n    return:\n      type: System.Linq.ParallelMergeOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelMergeOptions.xml\n- uid: System.Linq.ParallelMergeOptions.Default\n  commentId: F:System.Linq.ParallelMergeOptions.Default\n  id: Default\n  parent: System.Linq.ParallelMergeOptions\n  langs:\n  - csharp\n  name: Default\n  nameWithType: ParallelMergeOptions.Default\n  fullName: ParallelMergeOptions.Default\n  type: Field\n  assemblies:\n  - System.Linq.Parallel\n  - System.Core\n  - netstandard\n  namespace: System.Linq\n  summary: Use the default merge type, which is AutoBuffered.\n  syntax:\n    content: Default\n    return:\n      type: System.Linq.ParallelMergeOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelMergeOptions.xml\n- uid: System.Linq.ParallelMergeOptions.FullyBuffered\n  commentId: F:System.Linq.ParallelMergeOptions.FullyBuffered\n  id: FullyBuffered\n  parent: System.Linq.ParallelMergeOptions\n  langs:\n  - csharp\n  name: FullyBuffered\n  nameWithType: ParallelMergeOptions.FullyBuffered\n  fullName: ParallelMergeOptions.FullyBuffered\n  type: Field\n  assemblies:\n  - System.Linq.Parallel\n  - System.Core\n  - netstandard\n  namespace: System.Linq\n  summary: Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.\n  syntax:\n    content: FullyBuffered\n    return:\n      type: System.Linq.ParallelMergeOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelMergeOptions.xml\n- uid: System.Linq.ParallelMergeOptions.NotBuffered\n  commentId: F:System.Linq.ParallelMergeOptions.NotBuffered\n  id: NotBuffered\n  parent: System.Linq.ParallelMergeOptions\n  langs:\n  - csharp\n  name: NotBuffered\n  nameWithType: ParallelMergeOptions.NotBuffered\n  fullName: ParallelMergeOptions.NotBuffered\n  type: Field\n  assemblies:\n  - System.Linq.Parallel\n  - System.Core\n  - netstandard\n  namespace: System.Linq\n  summary: Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.\n  syntax:\n    content: NotBuffered\n    return:\n      type: System.Linq.ParallelMergeOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ParallelMergeOptions.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Linq.ParallelMergeOptions.AutoBuffered\n  parent: System.Linq.ParallelMergeOptions\n  isExternal: false\n  name: AutoBuffered\n  nameWithType: ParallelMergeOptions.AutoBuffered\n  fullName: ParallelMergeOptions.AutoBuffered\n- uid: System.Linq.ParallelMergeOptions\n  parent: System.Linq\n  isExternal: false\n  name: ParallelMergeOptions\n  nameWithType: ParallelMergeOptions\n  fullName: System.Linq.ParallelMergeOptions\n- uid: System.Linq.ParallelMergeOptions.Default\n  parent: System.Linq.ParallelMergeOptions\n  isExternal: false\n  name: Default\n  nameWithType: ParallelMergeOptions.Default\n  fullName: ParallelMergeOptions.Default\n- uid: System.Linq.ParallelMergeOptions.FullyBuffered\n  parent: System.Linq.ParallelMergeOptions\n  isExternal: false\n  name: FullyBuffered\n  nameWithType: ParallelMergeOptions.FullyBuffered\n  fullName: ParallelMergeOptions.FullyBuffered\n- uid: System.Linq.ParallelMergeOptions.NotBuffered\n  parent: System.Linq.ParallelMergeOptions\n  isExternal: false\n  name: NotBuffered\n  nameWithType: ParallelMergeOptions.NotBuffered\n  fullName: ParallelMergeOptions.NotBuffered\n"}