{"nodes":[{"content":"Represents the method that will handle the <xref href=\"System.Windows.Forms.BindingSource.AddingNew\"></xref> event.","nodes":[{"pos":[0,115],"content":"Represents the method that will handle the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BindingSource.AddingNew\"&gt;&lt;/xref&gt;</ph> event.","source":"Represents the method that will handle the <xref href=\"System.Windows.Forms.BindingSource.AddingNew\"></xref> event."}],"pos":[462,578],"yaml":true},{"content":"The <xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=fullName> event occurs prior to adding a new item to a collection, typically in data-binding scenarios. The handler of this event can supply the new item to be added, overriding the standard action of the collection class. This is accomplished by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter `e` to this new item. Typically this item must be of a type expected by the recipient collection, or the collection will throw an exception of type <xref:System.InvalidCastException>.  \n  \n This event is commonly used in data-binding scenarios, within classes such as <xref:System.Windows.Forms.BindingSource?displayProperty=fullName> and <xref:System.ComponentModel.BindingList%601?displayProperty=fullName>.  \n  \n When you create an <xref:System.ComponentModel.AddingNewEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).","nodes":[{"pos":[0,648],"content":"The <xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=fullName> event occurs prior to adding a new item to a collection, typically in data-binding scenarios. The handler of this event can supply the new item to be added, overriding the standard action of the collection class. This is accomplished by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter `e` to this new item. Typically this item must be of a type expected by the recipient collection, or the collection will throw an exception of type <xref:System.InvalidCastException>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=fullName&gt;</ph> event occurs prior to adding a new item to a collection, typically in data-binding scenarios.","pos":[0,174],"source":"The <xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=fullName> event occurs prior to adding a new item to a collection, typically in data-binding scenarios."},{"content":"The handler of this event can supply the new item to be added, overriding the standard action of the collection class.","pos":[175,293]},{"content":"This is accomplished by setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.AddingNewEventArgs&gt;</ph> parameter <ph id=\"ph3\">`e`</ph> to this new item.","pos":[294,486],"source":" This is accomplished by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter `e` to this new item."},{"content":"Typically this item must be of a type expected by the recipient collection, or the collection will throw an exception of type <ph id=\"ph1\">&lt;xref:System.InvalidCastException&gt;</ph>.","pos":[487,648],"source":" Typically this item must be of a type expected by the recipient collection, or the collection will throw an exception of type <xref:System.InvalidCastException>."}]},{"pos":[655,874],"content":"This event is commonly used in data-binding scenarios, within classes such as <xref:System.Windows.Forms.BindingSource?displayProperty=fullName> and <xref:System.ComponentModel.BindingList%601?displayProperty=fullName>.","nodes":[{"content":"This event is commonly used in data-binding scenarios, within classes such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BindingSource?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.BindingList%601?displayProperty=fullName&gt;</ph>.","pos":[0,219],"source":"This event is commonly used in data-binding scenarios, within classes such as <xref:System.Windows.Forms.BindingSource?displayProperty=fullName> and <xref:System.ComponentModel.BindingList%601?displayProperty=fullName>."}]},{"pos":[881,1348],"content":"When you create an <xref:System.ComponentModel.AddingNewEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).","nodes":[{"content":"When you create an <ph id=\"ph1\">&lt;xref:System.ComponentModel.AddingNewEventHandler&gt;</ph> delegate, you identify the method that will handle the event.","pos":[0,131],"source":"When you create an <xref:System.ComponentModel.AddingNewEventHandler> delegate, you identify the method that will handle the event."},{"content":"To associate the event with your event handler, add an instance of the delegate to the event.","pos":[132,225]},{"content":"The event handler is called whenever the event occurs, unless you remove the delegate.","pos":[226,312]},{"content":"For more information about event-handler delegates, see <bpt id=\"p1\">[</bpt>NIB: Events and Delegates<ept id=\"p1\">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.","pos":[313,467],"source":" For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."}]}],"pos":[589,1944],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.AddingNewEventHandler\n  commentId: T:System.ComponentModel.AddingNewEventHandler\n  id: AddingNewEventHandler\n  langs:\n  - csharp\n  name: AddingNewEventHandler\n  nameWithType: AddingNewEventHandler\n  fullName: System.ComponentModel.AddingNewEventHandler\n  type: Delegate\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Represents the method that will handle the <xref href=\"System.Windows.Forms.BindingSource.AddingNew\"></xref> event.\n  remarks: \"The <xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=fullName> event occurs prior to adding a new item to a collection, typically in data-binding scenarios. The handler of this event can supply the new item to be added, overriding the standard action of the collection class. This is accomplished by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter `e` to this new item. Typically this item must be of a type expected by the recipient collection, or the collection will throw an exception of type <xref:System.InvalidCastException>.  \\n  \\n This event is commonly used in data-binding scenarios, within classes such as <xref:System.Windows.Forms.BindingSource?displayProperty=fullName> and <xref:System.ComponentModel.BindingList%601?displayProperty=fullName>.  \\n  \\n When you create an <xref:System.ComponentModel.AddingNewEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.ComponentModel.AddingNewEventHandler> delegate to handle the <xref:System.Windows.Forms.BindingSource.AddingNew?displayProperty=fullName> event. This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).  \\n  \\n [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]\\n [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]\\n [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]\"\n  syntax:\n    content: public delegate void AddingNewEventHandler(object sender, AddingNewEventArgs e);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AddingNewEventHandler.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}