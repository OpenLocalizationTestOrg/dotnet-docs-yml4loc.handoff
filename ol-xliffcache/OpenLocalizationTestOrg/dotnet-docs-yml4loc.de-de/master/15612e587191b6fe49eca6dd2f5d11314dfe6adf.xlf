<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15612e587191b6fe49eca6dd2f5d11314dfe6adf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Data.BindingGroup.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">639bee70466ab247f77efdd16313c11f2272f756</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34f6a70f2608199ba6a5d34cbded3f4c1782061a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains a collection of bindings and <ph id="ph1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> objects that are used to validate an object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> creates a relationship between multiple bindings, which can be validated and updated together.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that an application prompts the user to enter an address.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application then populates an object of type <ph id="ph1">`Address`</ph>, which has the properties, <ph id="ph2">`Street`</ph>, <ph id="ph3">`City`</ph>, <ph id="ph4">`ZipCode`</ph>, and <ph id="ph5">`Country`</ph>, with the values that the user provided.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application has a panel that contains four <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which is data bound to one of the objectâ€™s properties.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to validate the <ph id="ph3">`Address`</ph> object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the bindings participate in the same <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, you can ensure that the zip-code is valid for the country of the address.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BindingGroup%2A&gt;</ph> property on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Child elements inherit the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> from their parent elements, just as with any other inheritable property.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A binding on a descendent element is added to a <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> if one of the following situations occurs:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binding's source and the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are the same object and the <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property is not set.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of the binding is equal to the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.BindingGroup%2A&gt;</ph> and they are not explicitly set to <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the example of the address, suppose that the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Controls.Panel&gt;</ph> is set to the object of type <ph id="ph3">`Address`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binding for each <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> of the panel.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> objects to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> is passed as the first parameter of the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method when the <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> runs.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> method on that <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to get the proposed values of the object, and the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property to get the sources of the bindings.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> updates the sources of the binding at the same time instead of each binding being updated separately.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call one of the methods to validate the data (<ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph>), the binding for each <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> in the example is validated and potentially updated.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a binding is part of a <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, the source of the binding is not updated until you call <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> on the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, unless you explicitly set the <ph id="ph5">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Begins an edit transaction on the sources in the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the sources in the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> support discarding pending changes, you can call <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> to begin the edit transaction, call <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> to save the pending changes, call <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> to discard the pending changes.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each object in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> that implements <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph> objects that contains information for each Binding in the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> belongs to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> if one of the following cases occurs:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binding's source and the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are the same object and the <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is not set.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of the binding and the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are set to the same non-null value and the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> belongs to a parent element of the binding's target element.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add a <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BindingExpressions%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph> objects that contains information for each binding in the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Ends the edit transaction and discards the pending changes.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the method updates the target properties with the saved source values.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each object in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> that implements <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets whether each source in the binding can discard pending changes and restore the original values.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>A source can discard pending changes if it implements <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if each source in the binding can discard pending changes and restore the original values; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Runs all the <ph id="ph1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> objects and updates the binding sources if all validation rules succeed.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If every <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each object in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> that implements <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if every <ph id="ph2">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> succeeds and the values are committed to the sources; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns the proposed value for the specified property and item.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method in the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName&gt;</ph> method to get the value to be committed to the source.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the return value depends on the stage at which the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> occurs.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is data bound to a property of type integer and the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that calls <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> has its <ph id="ph4">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> set to <ph id="ph5">&lt;xref:System.Windows.Controls.ValidationStep.RawProposedValue&gt;</ph>, the method returns a string.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> has its <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> set to <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue&gt;</ph>, the method returns whatever type that is returned by the binding's converter.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this example, <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> usually returns an integer.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The object that contains the specified property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The property whose proposed value to get.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The proposed property value.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>There is not a binding for the specified item and property.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> has a failed validation rule.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> has a failed validation rule; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> contains a proposed value that has not been written to the source.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> contains a proposed value that has not been written to the source; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the sources that are used by the Binding objects in the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each object that is used as a source is added into the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property once, even if the object is used as the source for multiple bindings.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Often, there is just one item in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph>, which is the object that is the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the element that uses the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible for a <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to have multiple sources, however.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if Binding objects share the same <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> but use different source objects, each object that is used as a source is in <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>There can also be multiple objects in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> if the path of a Binding resolves to a nested property of the source.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> control's binding is a part of a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and its <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> is a <ph id="ph4">`Customer`</ph> object, which has a property of type <ph id="ph5">`Address`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> is the <ph id="ph3">`Address.ZipCode`</ph> property, the <ph id="ph4">`Address`</ph> is added to the <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The sources that are used by the Binding objects in the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the name that identifies the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>, which can be used to include and exclude Binding objects in the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> is <ph id="ph2">`null`</ph>, bindings that have a source that is the same object as the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the element that has the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> participate in the <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can include bindings that have a source that is different from the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to the same value.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can exclude bindings that have the same source as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to different values.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The name that identifies the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the <ph id="ph1">&lt;xref href="System.Windows.Controls.Validation.Error"&gt;&lt;/xref&gt;</ph> event occurs when the state of a <ph id="ph2">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> changes.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;</ph> attached event occurs on the element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Controls.Validation.Error"&gt;&lt;/xref&gt;</ph> event occurs when the state of a <ph id="ph3">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> changes; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets the object that this <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> is assigned to.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The object that this <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> is assigned to.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> reuses target values that have not been committed to the source.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that there is a two-way binding on a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user changes the value of the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, the proposed value is the value that is in the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> before it is committed to source.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a field is not being edited, the application displays it in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user begins to edit a field, the application replaces the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user finishes editing that field, the application replaces the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the source is not updated until the user clicks the button, there must be a way for the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> to display the proposed value.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>By setting <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A&gt;</ph> to <ph id="ph2">`true`</ph>, the application will display the user's changes to a field even when the source has not been updated.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> reuses target values that have not been committed to the source; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Attempts to get the proposed value for the specified property and item.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method in the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName&gt;</ph> method to get the value to be committed to the source.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type <ph id="ph1">`value`</ph> depends on the stage at which the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> occurs.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is data bound to a property of type integer, <ph id="ph2">`value`</ph> is a string if the <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that calls <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> has its <ph id="ph5">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> set to <ph id="ph6">&lt;xref:System.Windows.Controls.ValidationStep.RawProposedValue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> has its <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> set to <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue&gt;</ph>, the type of <ph id="ph4">`value`</ph> is whatever type that is returned by the binding's converter.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this example, <ph id="ph1">`value`</ph> is usually an integer.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The object that contains the specified property.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The property whose proposed value to get.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When this method returns, contains an object that represents the proposed property value.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if value is the proposed value for the specified property; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Runs the converter on the binding and the <ph id="ph1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> objects that have the <ph id="ph2">&lt;xref href="System.Windows.Controls.ValidationRule.ValidationStep"&gt;&lt;/xref&gt;</ph> property set to <ph id="ph3">&lt;xref href="System.Windows.Controls.ValidationStep.RawProposedValue"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Windows.Controls.ValidationStep.ConvertedProposedValue"&gt;&lt;/xref&gt;</ph>, or <ph id="ph5">&lt;xref href="System.Windows.Controls.ValidationStep.UpdatedValue"&gt;&lt;/xref&gt;</ph> and saves the values of the targets to the source objects if all the validation rules succeed.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method updates the source if every <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, if the source object implements <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method does not cause <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A&gt;</ph> to be called.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> method to have the sources commit the pending changes.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all validation rules succeed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the <ph id="ph1">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements <ph id="ph3">&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include the <ph id="ph2">&lt;xref href="System.Windows.Controls.NotifyDataErrorValidationRule"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Runs the converter on the binding and the <ph id="ph1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> objects that have the <ph id="ph2">&lt;xref href="System.Windows.Controls.ValidationRule.ValidationStep"&gt;&lt;/xref&gt;</ph> property set to <ph id="ph3">&lt;xref href="System.Windows.Controls.ValidationStep.RawProposedValue"&gt;&lt;/xref&gt;</ph> or <ph id="ph4">&lt;xref href="System.Windows.Controls.ValidationStep.ConvertedProposedValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sources are not updated when you call this method.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the validation rules succeed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.Windows.Controls.ValidationError"&gt;&lt;/xref&gt;</ph> objects that caused the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> to be invalid.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.Windows.Controls.ValidationError"&gt;&lt;/xref&gt;</ph> objects that caused <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph> to be invalid.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The value is <ph id="ph1">`null`</ph> if there are no errors.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> objects that validate the source objects in the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> is added to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> is passed in as the first parameter of the <ph id="ph4">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can get the proposed values of the object by using the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can get the objects that are the sources of the bindings from the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.Windows.Controls.ValidationRule"&gt;&lt;/xref&gt;</ph> objects that validate the source objects in the <ph id="ph2">&lt;xref href="System.Windows.Data.BindingGroup"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>