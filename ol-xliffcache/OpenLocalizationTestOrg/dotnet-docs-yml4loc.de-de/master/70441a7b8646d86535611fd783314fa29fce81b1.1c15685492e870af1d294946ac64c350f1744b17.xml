{"nodes":[{"content":"Enables enumeration of components at design time.","nodes":[{"pos":[0,49],"content":"Enables enumeration of components at design time.","nodes":[{"content":"Enables enumeration of components at design time.","pos":[0,49]}]}],"pos":[667,717],"yaml":true},{"content":"The default implementation of the <xref:System.ComponentModel.Design.IComponentDiscoveryService> interface enables design-time enumeration of components in the Toolbox.  \n  \n You could provide a custom implementation that enumerates across other types available at design time. For example, your implementation could enumerate the components that are present in a particular designer.","nodes":[{"pos":[0,168],"content":"The default implementation of the <xref:System.ComponentModel.Design.IComponentDiscoveryService> interface enables design-time enumeration of components in the Toolbox.","nodes":[{"content":"The default implementation of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentDiscoveryService&gt;</ph> interface enables design-time enumeration of components in the Toolbox.","pos":[0,168],"source":"The default implementation of the <xref:System.ComponentModel.Design.IComponentDiscoveryService> interface enables design-time enumeration of components in the Toolbox."}]},{"pos":[175,384],"content":"You could provide a custom implementation that enumerates across other types available at design time. For example, your implementation could enumerate the components that are present in a particular designer.","nodes":[{"content":"You could provide a custom implementation that enumerates across other types available at design time. For example, your implementation could enumerate the components that are present in a particular designer.","pos":[0,209],"nodes":[{"content":"You could provide a custom implementation that enumerates across other types available at design time.","pos":[0,102]},{"content":"For example, your implementation could enumerate the components that are present in a particular designer.","pos":[103,209]}]}]}],"pos":[728,1117],"yaml":true,"extradata":"MT"},{"content":"Gets the list of available component types.","nodes":[{"pos":[0,43],"content":"Gets the list of available component types.","nodes":[{"content":"Gets the list of available component types.","pos":[0,43]}]}],"pos":[3400,3444],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes%2A> method retrieves the list of available component types, which are types implementing the <xref:System.ComponentModel.IComponent> interface. If the `baseType` parameter is `null`, all components are retrieved; otherwise, only component types derived from `baseType` are returned.  \n  \n When you pass in a value for the `designerHost` parameter, type resolution is scoped to `designerHost`. This means that if there is a <xref:System.Drawing.Design.ToolboxItem> whose type is on disk, and not in the global assembly cache, its type will fail to load through `designerHost`.  \n  \n If you pass in `null` for `designerHost`, it returns all types that can be queried from the global assembly cache or the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,366],"content":"The <xref:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes%2A> method retrieves the list of available component types, which are types implementing the <xref:System.ComponentModel.IComponent> interface. If the `baseType` parameter is `null`, all components are retrieved; otherwise, only component types derived from `baseType` are returned.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes%2A&gt;</ph> method retrieves the list of available component types, which are types implementing the <ph id=\"ph2\">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.","pos":[0,227],"source":"The <xref:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes%2A> method retrieves the list of available component types, which are types implementing the <xref:System.ComponentModel.IComponent> interface."},{"content":"If the <ph id=\"ph1\">`baseType`</ph> parameter is <ph id=\"ph2\">`null`</ph>, all components are retrieved; otherwise, only component types derived from <ph id=\"ph3\">`baseType`</ph> are returned.","pos":[228,366],"source":" If the `baseType` parameter is `null`, all components are retrieved; otherwise, only component types derived from `baseType` are returned."}]},{"pos":[373,659],"content":"When you pass in a value for the `designerHost` parameter, type resolution is scoped to `designerHost`. This means that if there is a <xref:System.Drawing.Design.ToolboxItem> whose type is on disk, and not in the global assembly cache, its type will fail to load through `designerHost`.","nodes":[{"content":"When you pass in a value for the <ph id=\"ph1\">`designerHost`</ph> parameter, type resolution is scoped to <ph id=\"ph2\">`designerHost`</ph>.","pos":[0,103],"source":"When you pass in a value for the `designerHost` parameter, type resolution is scoped to `designerHost`."},{"content":"This means that if there is a <ph id=\"ph1\">&lt;xref:System.Drawing.Design.ToolboxItem&gt;</ph> whose type is on disk, and not in the global assembly cache, its type will fail to load through <ph id=\"ph2\">`designerHost`</ph>.","pos":[104,286],"source":" This means that if there is a <xref:System.Drawing.Design.ToolboxItem> whose type is on disk, and not in the global assembly cache, its type will fail to load through `designerHost`."}]},{"pos":[666,865],"content":"If you pass in <ph id=\"ph1\">`null`</ph> for <ph id=\"ph2\">`designerHost`</ph>, it returns all types that can be queried from the global assembly cache or the <ph id=\"ph3\">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName&gt;</ph> method.","source":"If you pass in `null` for `designerHost`, it returns all types that can be queried from the global assembly cache or the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method."}],"pos":[3455,4327],"yaml":true,"extradata":"MT"},{"content":"The designer host providing design-time services. Can be `null`.","nodes":[{"pos":[0,64],"content":"The designer host providing design-time services. Can be `null`.","nodes":[{"content":"The designer host providing design-time services.","pos":[0,49]},{"content":"Can be <ph id=\"ph1\">`null`</ph>.","pos":[50,64],"source":" Can be `null`."}]}],"pos":[5210,5275],"yaml":true},{"content":"The base type specifying the components to retrieve. Can be `null`.","nodes":[{"pos":[0,67],"content":"The base type specifying the components to retrieve. Can be `null`.","nodes":[{"content":"The base type specifying the components to retrieve.","pos":[0,52]},{"content":"Can be <ph id=\"ph1\">`null`</ph>.","pos":[53,67],"source":" Can be `null`."}]}],"pos":[5337,5405],"yaml":true},{"content":"The list of available component types.","nodes":[{"pos":[0,38],"content":"The list of available component types.","nodes":[{"content":"The list of available component types.","pos":[0,38]}]}],"pos":[5479,5518],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IComponentDiscoveryService\n  commentId: T:System.ComponentModel.Design.IComponentDiscoveryService\n  id: IComponentDiscoveryService\n  children:\n  - System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)\n  langs:\n  - csharp\n  name: IComponentDiscoveryService\n  nameWithType: IComponentDiscoveryService\n  fullName: System.ComponentModel.Design.IComponentDiscoveryService\n  type: Interface\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Enables enumeration of components at design time.\n  remarks: \"The default implementation of the <xref:System.ComponentModel.Design.IComponentDiscoveryService> interface enables design-time enumeration of components in the Toolbox.  \\n  \\n You could provide a custom implementation that enumerates across other types available at design time. For example, your implementation could enumerate the components that are present in a particular designer.\"\n  example:\n  - \"The following code example demonstrates how to use <xref:System.ComponentModel.Design.IComponentDiscoveryService> to find all the types that derive from the <xref:System.Windows.Forms.ScrollableControl> type.  \\n  \\n [!code-csharp[System.ComponentModel.Design.DesignerServices#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#13)]\\n [!code-vb[System.ComponentModel.Design.DesignerServices#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#13)]\"\n  syntax:\n    content: public interface IComponentDiscoveryService\n  derivedClasses:\n  - System.Drawing.Design.ToolboxService\n  implements: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IComponentDiscoveryService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)\n  commentId: M:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)\n  id: GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)\n  parent: System.ComponentModel.Design.IComponentDiscoveryService\n  langs:\n  - csharp\n  name: GetComponentTypes(IDesignerHost, Type)\n  nameWithType: IComponentDiscoveryService.GetComponentTypes(IDesignerHost, Type)\n  fullName: IComponentDiscoveryService.GetComponentTypes(IDesignerHost, Type)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Gets the list of available component types.\n  remarks: \"The <xref:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes%2A> method retrieves the list of available component types, which are types implementing the <xref:System.ComponentModel.IComponent> interface. If the `baseType` parameter is `null`, all components are retrieved; otherwise, only component types derived from `baseType` are returned.  \\n  \\n When you pass in a value for the `designerHost` parameter, type resolution is scoped to `designerHost`. This means that if there is a <xref:System.Drawing.Design.ToolboxItem> whose type is on disk, and not in the global assembly cache, its type will fail to load through `designerHost`.  \\n  \\n If you pass in `null` for `designerHost`, it returns all types that can be queried from the global assembly cache or the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes%2A> method to find all the types that derive from the <xref:System.Windows.Forms.ScrollableControl> type.  \\n  \\n [!code-csharp[System.ComponentModel.Design.DesignerServices#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#13)]\\n [!code-vb[System.ComponentModel.Design.DesignerServices#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#13)]\"\n  syntax:\n    content: public System.Collections.ICollection GetComponentTypes (System.ComponentModel.Design.IDesignerHost designerHost, Type baseType);\n    parameters:\n    - id: designerHost\n      type: System.ComponentModel.Design.IDesignerHost\n      description: The designer host providing design-time services. Can be `null`.\n    - id: baseType\n      type: System.Type\n      description: The base type specifying the components to retrieve. Can be `null`.\n    return:\n      type: System.Collections.ICollection\n      description: The list of available component types.\n  overload: System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IComponentDiscoveryService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)\n  parent: System.ComponentModel.Design.IComponentDiscoveryService\n  isExternal: false\n  name: GetComponentTypes(IDesignerHost, Type)\n  nameWithType: IComponentDiscoveryService.GetComponentTypes(IDesignerHost, Type)\n  fullName: IComponentDiscoveryService.GetComponentTypes(IDesignerHost, Type)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ComponentModel.Design.IDesignerHost\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IDesignerHost\n  nameWithType: IDesignerHost\n  fullName: System.ComponentModel.Design.IDesignerHost\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes*\n  parent: System.ComponentModel.Design.IComponentDiscoveryService\n  isExternal: false\n  name: GetComponentTypes\n  nameWithType: IComponentDiscoveryService.GetComponentTypes\n  fullName: IComponentDiscoveryService.GetComponentTypes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IComponentDiscoveryService.xml\n"}