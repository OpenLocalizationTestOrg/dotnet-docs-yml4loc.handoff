{"nodes":[{"content":"Represents any time zone in the world.","nodes":[{"pos":[0,38],"content":"Represents any time zone in the world.","nodes":[{"content":"Represents any time zone in the world.","pos":[0,38]}]}],"pos":[3144,3183],"yaml":true},{"content":"A time zone is a geographical region in which the same time is used.  \n  \n The<xref:System.TimeZoneInfo> class offers significant enhancements over the <xref:System.TimeZone> class, which provides only limited functionality.  \n  \n The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time. A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone. The members of the <xref:System.TimeZoneInfo> class support the following operations:  \n  \n-   Retrieving a time zone that is already defined by the operating system.  \n  \n-   Enumerating the time zones that are available on a system.  \n  \n-   Converting times between different time zones.  \n  \n-   Creating a new time zone that is not already defined by the operating system.  \n  \n-   Serializing a time zone for later retrieval.  \n  \n> [!NOTE]\n>  An instance of the <xref:System.TimeZoneInfo> class is immutable. Once an object has been instantiated, its values cannot be modified.  \n  \n You cannot instantiate a <xref:System.TimeZoneInfo> object using the `new` keyword. Instead, you must call one of the static members of the <xref:System.TimeZoneInfo> class shown in the following table.  \n  \n|Static member name|Description|  \n|------------------------|-----------------|  \n|<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method|Creates a custom time zone from application-supplied data.|  \n|<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method|Instantiates a time zone defined in the system registry based on the zone's identifier.|  \n|<xref:System.TimeZoneInfo.FromSerializedString%2A> method|Deserializes a string value to re-create a previously serialized <xref:System.TimeZoneInfo> object.|  \n|<xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method|Returns an enumerable <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.TimeZoneInfo> objects that represents all time zones that are available on the local system.|  \n|<xref:System.TimeZoneInfo.Local%2A> property|Instantiates a <xref:System.TimeZoneInfo> object that represents the local time zone.|  \n|<xref:System.TimeZoneInfo.Utc%2A> property|Instantiates a <xref:System.TimeZoneInfo> object that represents the UTC zone.|  \n  \n You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry. You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application. You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object.","nodes":[{"pos":[0,68],"content":"A time zone is a geographical region in which the same time is used.","nodes":[{"content":"A time zone is a geographical region in which the same time is used.","pos":[0,68]}]},{"pos":[75,224],"content":"The<xref:System.TimeZoneInfo> class offers significant enhancements over the <xref:System.TimeZone> class, which provides only limited functionality.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> class offers significant enhancements over the <ph id=\"ph2\">&lt;xref:System.TimeZone&gt;</ph> class, which provides only limited functionality.","pos":[0,149],"source":"The<xref:System.TimeZoneInfo> class offers significant enhancements over the <xref:System.TimeZone> class, which provides only limited functionality."}]},{"pos":[231,681],"content":"The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time. A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone. The members of the <xref:System.TimeZoneInfo> class support the following operations:","nodes":[{"content":"The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time. A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone. The members of the <xref:System.TimeZoneInfo> class support the following operations:","pos":[0,450],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZone&gt;</ph> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time.","pos":[0,148],"source":"The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time."},{"content":"A <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object can represent any time zone, and methods of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> class can be used to convert the time in one time zone to the corresponding time in any other time zone.","pos":[149,364],"source":" A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone."},{"content":"The members of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> class support the following operations:","pos":[365,450],"source":" The members of the <xref:System.TimeZoneInfo> class support the following operations:"}]}]},{"pos":[691,762],"content":"Retrieving a time zone that is already defined by the operating system.","nodes":[{"content":"Retrieving a time zone that is already defined by the operating system.","pos":[0,71]}]},{"pos":[772,830],"content":"Enumerating the time zones that are available on a system.","nodes":[{"content":"Enumerating the time zones that are available on a system.","pos":[0,58]}]},{"pos":[840,886],"content":"Converting times between different time zones.","nodes":[{"content":"Converting times between different time zones.","pos":[0,46]}]},{"pos":[896,973],"content":"Creating a new time zone that is not already defined by the operating system.","nodes":[{"content":"Creating a new time zone that is not already defined by the operating system.","pos":[0,77]}]},{"pos":[983,1027],"content":"Serializing a time zone for later retrieval.","nodes":[{"content":"Serializing a time zone for later retrieval.","pos":[0,44]}]},{"pos":[1035,1180],"content":"[!NOTE]\n An instance of the <xref:System.TimeZoneInfo> class is immutable. Once an object has been instantiated, its values cannot be modified.","leadings":["","> "],"nodes":[{"content":" An instance of the <xref:System.TimeZoneInfo> class is immutable. Once an object has been instantiated, its values cannot be modified.","pos":[8,143],"nodes":[{"content":"An instance of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> class is immutable.","pos":[1,66],"source":" An instance of the <xref:System.TimeZoneInfo> class is immutable."},{"content":"Once an object has been instantiated, its values cannot be modified.","pos":[67,135]}]}]},{"pos":[1187,1389],"content":"You cannot instantiate a <xref:System.TimeZoneInfo> object using the `new` keyword. Instead, you must call one of the static members of the <xref:System.TimeZoneInfo> class shown in the following table.","nodes":[{"content":"You cannot instantiate a <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object using the <ph id=\"ph2\">`new`</ph> keyword.","pos":[0,83],"source":"You cannot instantiate a <xref:System.TimeZoneInfo> object using the `new` keyword."},{"content":"Instead, you must call one of the static members of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> class shown in the following table.","pos":[84,202],"source":" Instead, you must call one of the static members of the <xref:System.TimeZoneInfo> class shown in the following table."}]},{"pos":[1396,1414],"content":"Static member name","nodes":[{"content":"Static member name","pos":[0,18]}]},{"pos":[1415,1426],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[1478,1535],"content":"<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method","pos":[0,57],"source":"<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method"}]},{"pos":[1536,1594],"content":"Creates a custom time zone from application-supplied data.","nodes":[{"content":"Creates a custom time zone from application-supplied data.","pos":[0,58]}]},{"pos":[1599,1658],"content":"<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> method","pos":[0,59],"source":"<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method"}]},{"pos":[1659,1746],"content":"Instantiates a time zone defined in the system registry based on the zone's identifier.","nodes":[{"content":"Instantiates a time zone defined in the system registry based on the zone's identifier.","pos":[0,87]}]},{"pos":[1751,1808],"content":"<xref:System.TimeZoneInfo.FromSerializedString%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FromSerializedString%2A&gt;</ph> method","pos":[0,57],"source":"<xref:System.TimeZoneInfo.FromSerializedString%2A> method"}]},{"pos":[1809,1908],"content":"Deserializes a string value to re-create a previously serialized <xref:System.TimeZoneInfo> object.","nodes":[{"content":"Deserializes a string value to re-create a previously serialized <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object.","pos":[0,99],"source":"Deserializes a string value to re-create a previously serialized <xref:System.TimeZoneInfo> object."}]},{"pos":[1913,1968],"content":"<xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetSystemTimeZones%2A&gt;</ph> method","pos":[0,55],"source":"<xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method"}]},{"pos":[1969,2160],"content":"Returns an enumerable <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.TimeZoneInfo> objects that represents all time zones that are available on the local system.","nodes":[{"content":"Returns an enumerable <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects that represents all time zones that are available on the local system.","pos":[0,191],"source":"Returns an enumerable <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.TimeZoneInfo> objects that represents all time zones that are available on the local system."}]},{"pos":[2165,2209],"content":"<xref:System.TimeZoneInfo.Local%2A> property","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Local%2A&gt;</ph> property","pos":[0,44],"source":"<xref:System.TimeZoneInfo.Local%2A> property"}]},{"pos":[2210,2295],"content":"Instantiates a <xref:System.TimeZoneInfo> object that represents the local time zone.","nodes":[{"content":"Instantiates a <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object that represents the local time zone.","pos":[0,85],"source":"Instantiates a <xref:System.TimeZoneInfo> object that represents the local time zone."}]},{"pos":[2300,2342],"content":"<xref:System.TimeZoneInfo.Utc%2A> property","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Utc%2A&gt;</ph> property","pos":[0,42],"source":"<xref:System.TimeZoneInfo.Utc%2A> property"}]},{"pos":[2343,2421],"content":"Instantiates a <xref:System.TimeZoneInfo> object that represents the UTC zone.","nodes":[{"content":"Instantiates a <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object that represents the UTC zone.","pos":[0,78],"source":"Instantiates a <xref:System.TimeZoneInfo> object that represents the UTC zone."}]},{"pos":[2429,2931],"content":"You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry. You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application. You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object.","nodes":[{"content":"You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry. You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application. You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object.","pos":[0,502],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method to create a time zone that is not defined in the local system registry.","pos":[0,145],"source":"You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry."},{"content":"You can then use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ToSerializedString%2A&gt;</ph> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application.","pos":[146,352],"source":" You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FromSerializedString%2A&gt;</ph> method to convert a serialized string back to a <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object.","pos":[353,502],"source":" You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object."}]}]}],"pos":[3194,6158],"yaml":true,"extradata":"MT"},{"content":"Gets the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).","nodes":[{"pos":[0,108],"content":"Gets the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).","nodes":[{"content":"Gets the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).","pos":[0,108]}]}],"pos":[8185,8294],"yaml":true},{"content":"The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC). Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.  \n  \n The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes. It cannot include a fractional number of minutes.  \n  \n> [!NOTE]\n>  Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments. To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.  \n  \n The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property differs from the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method in the following ways:  \n  \n-   The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property returns the difference between UTC and the time zone's standard time; the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method returns the difference between UTC and the time zone's time at a particular point in time.  \n  \n-   The <xref:System.TimeZoneInfo.GetUtcOffset%2A> method reflects the application of any adjustment rules to the time zone; the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property does not.","nodes":[{"pos":[0,355],"content":"The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC). Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.","nodes":[{"content":"The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC). Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.","pos":[0,355],"nodes":[{"content":"The time span returned by the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC).","pos":[0,243],"source":"The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC)."},{"content":"Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.","pos":[244,355]}]}]},{"pos":[362,510],"content":"The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes. It cannot include a fractional number of minutes.","nodes":[{"content":"The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes. It cannot include a fractional number of minutes.","pos":[0,148],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> value is represented as a whole number of minutes.","pos":[0,98],"source":"The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes."},{"content":"It cannot include a fractional number of minutes.","pos":[99,148]}]}]},{"pos":[518,971],"content":"[!NOTE]\n Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments. To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.","leadings":["","> "],"nodes":[{"content":" Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments. To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.","pos":[8,451],"nodes":[{"content":"Because <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> is a property of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object rather than the <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.AdjustmentRule&gt;</ph> object, the <ph id=\"ph4\">&lt;xref:System.TimeZoneInfo&gt;</ph> class applies a single offset from UTC to all of a time zone's adjustments.","pos":[1,280],"source":" Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments."},{"content":"To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method.","pos":[281,443],"source":" To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method."}]}]},{"pos":[978,1124],"content":"The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property differs from the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method in the following ways:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property differs from the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetUtcOffset%2A&gt;</ph> method in the following ways:","pos":[0,146],"source":"The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property differs from the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method in the following ways:"}]},{"pos":[1134,1405],"content":"The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property returns the difference between UTC and the time zone's standard time; the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method returns the difference between UTC and the time zone's time at a particular point in time.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property returns the difference between UTC and the time zone's standard time; the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetUtcOffset%2A&gt;</ph> method returns the difference between UTC and the time zone's time at a particular point in time.","pos":[0,271],"source":"The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property returns the difference between UTC and the time zone's standard time; the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method returns the difference between UTC and the time zone's time at a particular point in time."}]},{"pos":[1415,1602],"content":"The <xref:System.TimeZoneInfo.GetUtcOffset%2A> method reflects the application of any adjustment rules to the time zone; the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property does not.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetUtcOffset%2A&gt;</ph> method reflects the application of any adjustment rules to the time zone; the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property does not.","pos":[0,187],"source":"The <xref:System.TimeZoneInfo.GetUtcOffset%2A> method reflects the application of any adjustment rules to the time zone; the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property does not."}]}],"pos":[8305,9921],"yaml":true,"extradata":"MT"},{"content":"An object that indicates the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).","nodes":[{"pos":[0,128],"content":"An object that indicates the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).","nodes":[{"content":"An object that indicates the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).","pos":[0,128]}]}],"pos":[10523,10652],"yaml":true},{"content":"Clears cached time zone data.","nodes":[{"pos":[0,29],"content":"Clears cached time zone data.","nodes":[{"content":"Clears cached time zone data.","pos":[0,29]}]}],"pos":[12166,12196],"yaml":true},{"content":"Cached time zone data includes data on the local time zone, the Coordinated Universal Time (UTC) zone, and any time zones that are retrieved by using methods such as <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> and <xref:System.TimeZoneInfo.GetSystemTimeZones%2A>.  \n  \n You might call the <xref:System.TimeZoneInfo.ClearCachedData%2A> method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed.  \n  \n Storing references to the local and UTC time zones is not recommended. After the call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method, these object variables will be undefined <xref:System.TimeZoneInfo> objects that are no longer references to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>. For example, in the following code, the second call to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method throws an <xref:System.ArgumentException> because the `local` variable is no longer considered equal to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.  \n  \n [!code-csharp[System.TimeZone2.BestPractices#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/cs/System.TimeZone2.BestPractices.cs#1)]\n [!code-vb[System.TimeZone2.BestPractices#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/vb/System.TimeZone2.BestPractices.vb#1)]","nodes":[{"pos":[0,272],"content":"Cached time zone data includes data on the local time zone, the Coordinated Universal Time (UTC) zone, and any time zones that are retrieved by using methods such as <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> and <xref:System.TimeZoneInfo.GetSystemTimeZones%2A>.","nodes":[{"content":"Cached time zone data includes data on the local time zone, the Coordinated Universal Time (UTC) zone, and any time zones that are retrieved by using methods such as <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetSystemTimeZones%2A&gt;</ph>.","pos":[0,272],"source":"Cached time zone data includes data on the local time zone, the Coordinated Universal Time (UTC) zone, and any time zones that are retrieved by using methods such as <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> and <xref:System.TimeZoneInfo.GetSystemTimeZones%2A>."}]},{"pos":[279,501],"content":"You might call the <xref:System.TimeZoneInfo.ClearCachedData%2A> method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed.","nodes":[{"content":"You might call the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ClearCachedData%2A&gt;</ph> method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed.","pos":[0,222],"source":"You might call the <xref:System.TimeZoneInfo.ClearCachedData%2A> method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed."}]},{"pos":[508,1248],"content":"Storing references to the local and UTC time zones is not recommended. After the call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method, these object variables will be undefined <xref:System.TimeZoneInfo> objects that are no longer references to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>. For example, in the following code, the second call to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method throws an <xref:System.ArgumentException> because the `local` variable is no longer considered equal to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.","nodes":[{"content":"Storing references to the local and UTC time zones is not recommended.","pos":[0,70]},{"content":"After the call to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ClearCachedData%2A&gt;</ph> method, these object variables will be undefined <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects that are no longer references to <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph>.","pos":[71,379],"source":" After the call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method, these object variables will be undefined <xref:System.TimeZoneInfo> objects that are no longer references to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>."},{"content":"For example, in the following code, the second call to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph> because the <ph id=\"ph3\">`local`</ph> variable is no longer considered equal to <ph id=\"ph4\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph>.","pos":[380,740],"source":" For example, in the following code, the second call to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method throws an <xref:System.ArgumentException> because the `local` variable is no longer considered equal to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>."}]},{"pos":[1255,1594],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.TimeZone2.BestPractices#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/cs/System.TimeZone2.BestPractices.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.TimeZone2.BestPractices#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/vb/System.TimeZone2.BestPractices.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.TimeZone2.BestPractices#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/cs/System.TimeZone2.BestPractices.cs#1)]\n [!code-vb[System.TimeZone2.BestPractices#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/vb/System.TimeZone2.BestPractices.vb#1)]"}],"pos":[12207,13811],"yaml":true,"extradata":"MT"},{"content":"Converts a time to the time in a particular time zone.","nodes":[{"pos":[0,54],"content":"Converts a time to the time in a particular time zone.","nodes":[{"content":"Converts a time to the time in a particular time zone.","pos":[0,54]}]}],"pos":[15217,15272],"yaml":true},{"content":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.  \n  \n This overload of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.  \n  \n|Kind property value|Source time zone|Method behavior|  \n|-------------------------|----------------------|---------------------|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Local%2A>|Converts the local time to the time in `destinationTimeZone`.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Utc%2A>|Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Assumed to be <xref:System.TimeZoneInfo.Local%2A>.|Converts the local time to the time in `destinationTimeZone`.|  \n  \n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.  \n  \n|Condition|Returned Kind property value|  \n|---------------|----------------------------------|  \n|The `destinationTimeZone` is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.|<xref:System.DateTimeKind?displayProperty=fullName>|  \n|The `destinationTimeZone` is <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.|<xref:System.DateTimeKind?displayProperty=fullName>|  \n|All other date and time values and destination time zones.|<xref:System.DateTimeKind?displayProperty=fullName>|  \n  \n If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time. If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.  \n  \n If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively.  \n  \n You can also convert to or from UTC by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.","nodes":[{"pos":[0,209],"content":"When performing the conversion, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29&gt;</ph> method applies any adjustment rules in effect in the <ph id=\"ph2\">`destinationTimeZone`</ph> time zone.","source":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone."},{"pos":[216,473],"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29&gt;</ph> method determines the source time zone from the value of the <ph id=\"ph2\">`dateTime`</ph> parameter's <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property, as the following table shows.","source":"This overload of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows."},{"pos":[480,499],"content":"Kind property value","nodes":[{"content":"Kind property value","pos":[0,19]}]},{"pos":[500,516],"content":"Source time zone","nodes":[{"content":"Source time zone","pos":[0,16]}]},{"pos":[517,532],"content":"Method behavior","nodes":[{"content":"Method behavior","pos":[0,15]}]},{"pos":[612,663],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[664,699],"content":"<xref:System.TimeZoneInfo.Local%2A>","nodes":[]},{"pos":[700,761],"content":"Converts the local time to the time in <ph id=\"ph1\">`destinationTimeZone`</ph>.","source":"Converts the local time to the time in `destinationTimeZone`."},{"pos":[766,817],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[818,851],"content":"<xref:System.TimeZoneInfo.Utc%2A>","nodes":[]},{"pos":[852,931],"content":"Converts Coordinated Universal Time (UTC) to the time in <ph id=\"ph1\">`destinationTimeZone`</ph>.","source":"Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`."},{"pos":[936,987],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[988,1038],"content":"Assumed to be <xref:System.TimeZoneInfo.Local%2A>.","nodes":[{"content":"Assumed to be <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Local%2A&gt;</ph>.","pos":[0,50],"source":"Assumed to be <xref:System.TimeZoneInfo.Local%2A>."}]},{"pos":[1039,1100],"content":"Converts the local time to the time in <ph id=\"ph1\">`destinationTimeZone`</ph>.","source":"Converts the local time to the time in `destinationTimeZone`."},{"pos":[1108,1236],"content":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is set as shown in the following table.","pos":[0,128],"source":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table."}]},{"pos":[1243,1252],"content":"Condition","nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[1253,1281],"content":"Returned Kind property value","nodes":[{"content":"Returned Kind property value","pos":[0,28]}]},{"pos":[1341,1429],"content":"The <ph id=\"ph1\">`destinationTimeZone`</ph> is <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph>.","source":"The `destinationTimeZone` is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>."},{"pos":[1430,1481],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1486,1576],"content":"The <ph id=\"ph1\">`destinationTimeZone`</ph> is <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph>.","source":"The `destinationTimeZone` is <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>."},{"pos":[1577,1628],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1633,1691],"content":"All other date and time values and destination time zones.","nodes":[{"content":"All other date and time values and destination time zones.","pos":[0,58]}]},{"pos":[1692,1743],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1751,1966],"content":"If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time. If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.","nodes":[{"content":"If the value of the <ph id=\"ph1\">`dateTime`</ph> parameter is an ambiguous local time, it is interpreted as a standard time.","pos":[0,106],"source":"If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time."},{"content":"If the <ph id=\"ph1\">`dateTime`</ph> parameter is an invalid local time, this method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[107,215],"source":" If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>."}]},{"pos":[1973,2339],"content":"If the conversion of <ph id=\"ph1\">`dateTime`</ph> results in a date and time value that is earlier than <ph id=\"ph2\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or later than <ph id=\"ph3\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph4\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, respectively.","source":"If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively."},{"pos":[2346,2505],"content":"You can also convert to or from UTC by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.","nodes":[{"content":"You can also convert to or from UTC by calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ConvertTimeToUtc%2A&gt;</ph> methods.","pos":[0,159],"source":"You can also convert to or from UTC by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods."}]}],"pos":[15283,17813],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[18861,18891],"yaml":true},{"content":"The time zone to convert <code>dateTime</code> to.","nodes":[{"pos":[0,50],"content":"The time zone to convert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> to.","source":"The time zone to convert <code>dateTime</code> to."}],"pos":[18972,19023],"yaml":true},{"content":"The date and time in the destination time zone.","nodes":[{"pos":[0,47],"content":"The date and time in the destination time zone.","nodes":[{"content":"The date and time in the destination time zone.","pos":[0,47]}]}],"pos":[19082,19130],"yaml":true},{"content":"The value of the <code>dateTime</code> parameter represents an invalid time.","nodes":[{"pos":[0,76],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter represents an invalid time.","source":"The value of the <code>dateTime</code> parameter represents an invalid time."}],"pos":[19283,19360],"yaml":true},{"content":"The value of the <code>destinationTimeZone</code> parameter is `null`.","nodes":[{"pos":[0,70],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationTimeZone</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The value of the <code>destinationTimeZone</code> parameter is `null`."}],"pos":[19462,19533],"yaml":true},{"content":"Converts a time to the time in a particular time zone.","nodes":[{"pos":[0,54],"content":"Converts a time to the time in a particular time zone.","nodes":[{"content":"Converts a time to the time in a particular time zone.","pos":[0,54]}]}],"pos":[21172,21227],"yaml":true},{"content":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.  \n  \n This overload differs from the other overloads of the <xref:System.TimeZoneInfo.ConvertTime%2A> method by accepting a <xref:System.DateTimeOffset> value as its first parameter. This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone. As a result, the `dateTimeOffset` parameter cannot represent either an ambiguous time or an invalid time.  \n  \n In converting the `dateTimeOffset` value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone.  \n  \n If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, respectively.","nodes":[{"pos":[0,209],"content":"When performing the conversion, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29&gt;</ph> method applies any adjustment rules in effect in the <ph id=\"ph2\">`destinationTimeZone`</ph> time zone.","source":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone."},{"pos":[216,643],"content":"This overload differs from the other overloads of the <xref:System.TimeZoneInfo.ConvertTime%2A> method by accepting a <xref:System.DateTimeOffset> value as its first parameter. This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone. As a result, the `dateTimeOffset` parameter cannot represent either an ambiguous time or an invalid time.","nodes":[{"content":"This overload differs from the other overloads of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%2A&gt;</ph> method by accepting a <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> value as its first parameter.","pos":[0,176],"source":"This overload differs from the other overloads of the <xref:System.TimeZoneInfo.ConvertTime%2A> method by accepting a <xref:System.DateTimeOffset> value as its first parameter."},{"content":"This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone.","pos":[177,321]},{"content":"As a result, the <ph id=\"ph1\">`dateTimeOffset`</ph> parameter cannot represent either an ambiguous time or an invalid time.","pos":[322,427],"source":" As a result, the `dateTimeOffset` parameter cannot represent either an ambiguous time or an invalid time."}]},{"pos":[650,824],"content":"In converting the <ph id=\"ph1\">`dateTimeOffset`</ph> value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone.","source":"In converting the `dateTimeOffset` value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone."},{"pos":[831,1227],"content":"If the conversion of <ph id=\"ph1\">`dateTimeOffset`</ph> results in a date and time value that is earlier than <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.MinValue?displayProperty=fullName&gt;</ph> or later than <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.MaxValue?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph4\">&lt;xref:System.DateTimeOffset.MinValue?displayProperty=fullName&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTimeOffset.MaxValue?displayProperty=fullName&gt;</ph>, respectively.","source":"If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, respectively."}],"pos":[21238,22474],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[23403,23433],"yaml":true},{"content":"The time zone to convert <code>dateTime</code> to.","nodes":[{"pos":[0,50],"content":"The time zone to convert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> to.","source":"The time zone to convert <code>dateTime</code> to."}],"pos":[23514,23565],"yaml":true},{"content":"The date and time in the destination time zone.","nodes":[{"pos":[0,47],"content":"The date and time in the destination time zone.","nodes":[{"content":"The date and time in the destination time zone.","pos":[0,47]}]}],"pos":[23630,23678],"yaml":true},{"content":"The value of the <code>destinationTimeZone</code> parameter is `null`.","nodes":[{"pos":[0,70],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationTimeZone</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The value of the <code>destinationTimeZone</code> parameter is `null`."}],"pos":[23839,23910],"yaml":true},{"content":"Converts a time from one time zone to another.","nodes":[{"pos":[0,46],"content":"Converts a time from one time zone to another.","nodes":[{"content":"Converts a time from one time zone to another.","pos":[0,46]}]}],"pos":[25615,25662],"yaml":true},{"content":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.  \n  \n The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZone` parameter, as the following table shows.  \n  \n|DateTime.Kind value|sourceTimeZone value|Method behavior|  \n|-------------------------|--------------------------|---------------------|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.|Converts `dateTime` to the destination time zone's time.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.|Throws an <xref:System.ArgumentException>.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Equals <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.|Converts `dateTime` to the destination time zone's time.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.|Throws an <xref:System.ArgumentException>.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Any.|Converts `dateTime` to the destination time zone's time.|  \n  \n You can also convert to or from Coordinated Universal Time (UTC) by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.  \n  \n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.  \n  \n|Condition|Returned Kind property value|  \n|---------------|----------------------------------|  \n|The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.|<xref:System.DateTimeKind?displayProperty=fullName>|  \n|The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.|<xref:System.DateTimeKind?displayProperty=fullName>|  \n|All other date and time values, source time zones, and destination time zones.|<xref:System.DateTimeKind?displayProperty=fullName>|  \n  \n If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time. If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.  \n  \n If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively.  \n  \n The <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method throws an <xref:System.ArgumentException> exception if the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` argument is <xref:System.DateTimeKind?displayProperty=fullName> but the `sourceTimeZone` argument is not <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method. Note that <xref:System.TimeZoneInfo> objects that represent the local time zone and that are retrieved by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. Furthermore, <xref:System.TimeZoneInfo> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>. As an alternative, you can call the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> method.","nodes":[{"pos":[0,163],"content":"When performing the conversion, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%2A&gt;</ph> method applies any adjustment rules in effect in the <ph id=\"ph2\">`destinationTimeZone`</ph> time zone.","source":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone."},{"pos":[170,335],"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTime`</ph> parameter must correspond to the <ph id=\"ph3\">`sourceTimeZone`</ph> parameter, as the following table shows.","source":"The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZone` parameter, as the following table shows."},{"pos":[342,361],"content":"DateTime.Kind value","nodes":[{"content":"DateTime.Kind value","pos":[0,19]}]},{"pos":[362,382],"content":"sourceTimeZone value","nodes":[{"content":"sourceTimeZone value","pos":[0,20]}]},{"pos":[383,398],"content":"Method behavior","nodes":[{"content":"Method behavior","pos":[0,15]}]},{"pos":[482,533],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[534,600],"content":"Equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.","nodes":[{"content":"Equals <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph>.","pos":[0,66],"source":"Equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>."}]},{"pos":[601,657],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the destination time zone's time.","source":"Converts `dateTime` to the destination time zone's time."},{"pos":[662,713],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[714,788],"content":"Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.","nodes":[{"content":"Does not equal <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph>.","pos":[0,74],"source":"Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>."}]},{"pos":[789,831],"content":"Throws an <xref:System.ArgumentException>.","nodes":[{"content":"Throws an <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,42],"source":"Throws an <xref:System.ArgumentException>."}]},{"pos":[836,887],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[888,956],"content":"Equals <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.","nodes":[{"content":"Equals <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph>.","pos":[0,68],"source":"Equals <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>."}]},{"pos":[957,1013],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the destination time zone's time.","source":"Converts `dateTime` to the destination time zone's time."},{"pos":[1018,1069],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1070,1146],"content":"Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.","nodes":[{"content":"Does not equal <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph>.","pos":[0,76],"source":"Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>."}]},{"pos":[1147,1189],"content":"Throws an <xref:System.ArgumentException>.","nodes":[{"content":"Throws an <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,42],"source":"Throws an <xref:System.ArgumentException>."}]},{"pos":[1194,1245],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1246,1250],"content":"Any.","nodes":[{"content":"Any.","pos":[0,4]}]},{"pos":[1251,1307],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the destination time zone's time.","source":"Converts `dateTime` to the destination time zone's time."},{"pos":[1315,1503],"content":"You can also convert to or from Coordinated Universal Time (UTC) by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.","nodes":[{"content":"You can also convert to or from Coordinated Universal Time (UTC) by calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ConvertTimeToUtc%2A&gt;</ph> methods.","pos":[0,188],"source":"You can also convert to or from Coordinated Universal Time (UTC) by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods."}]},{"pos":[1510,1638],"content":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is set as shown in the following table.","pos":[0,128],"source":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table."}]},{"pos":[1645,1654],"content":"Condition","nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[1655,1683],"content":"Returned Kind property value","nodes":[{"content":"Returned Kind property value","pos":[0,28]}]},{"pos":[1743,1840],"content":"The <ph id=\"ph1\">`destinationTimeZone`</ph> argument is <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph>.","source":"The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>."},{"pos":[1841,1892],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1897,1996],"content":"The <ph id=\"ph1\">`destinationTimeZone`</ph> argument is <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph>.","source":"The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>."},{"pos":[1997,2048],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[2053,2131],"content":"All other date and time values, source time zones, and destination time zones.","nodes":[{"content":"All other date and time values, source time zones, and destination time zones.","pos":[0,78]}]},{"pos":[2132,2183],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[2191,2442],"content":"If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time. If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.","nodes":[{"content":"If the value of the <ph id=\"ph1\">`dateTime`</ph> parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.","pos":[0,124],"source":"If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time."},{"content":"If the <ph id=\"ph1\">`dateTime`</ph> parameter is an invalid time in the source time zone, this method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[125,251],"source":" If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>."}]},{"pos":[2449,2815],"content":"If the conversion of <ph id=\"ph1\">`dateTime`</ph> results in a date and time value that is earlier than <ph id=\"ph2\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or later than <ph id=\"ph3\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph4\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, respectively.","source":"If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively."},{"pos":[2822,4305],"content":"The <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method throws an <xref:System.ArgumentException> exception if the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` argument is <xref:System.DateTimeKind?displayProperty=fullName> but the `sourceTimeZone` argument is not <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method. Note that <xref:System.TimeZoneInfo> objects that represent the local time zone and that are retrieved by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. Furthermore, <xref:System.TimeZoneInfo> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>. As an alternative, you can call the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29&gt;</ph> method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph> exception if the <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph4\">`dateTime`</ph> argument is <ph id=\"ph5\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> but the <ph id=\"ph6\">`sourceTimeZone`</ph> argument is not <ph id=\"ph7\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph>.","pos":[0,423],"source":"The <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method throws an <xref:System.ArgumentException> exception if the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` argument is <xref:System.DateTimeKind?displayProperty=fullName> but the `sourceTimeZone` argument is not <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>."},{"content":"To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29&gt;</ph> method.","pos":[424,670],"source":" To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method."},{"content":"Note that <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects that represent the local time zone and that are retrieved by calling the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> method do not have referential equality with <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph>.","pos":[671,948],"source":" Note that <xref:System.TimeZoneInfo> objects that represent the local time zone and that are retrieved by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>."},{"content":"Furthermore, <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetSystemTimeZones%2A&gt;</ph> method do not have referential equality with <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph>.","pos":[949,1329],"source":" Furthermore, <xref:System.TimeZoneInfo> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>."},{"content":"As an alternative, you can call the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29&gt;</ph> method.","pos":[1330,1483],"source":" As an alternative, you can call the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> method."}]}],"pos":[25673,30007],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[30765,30795],"yaml":true},{"content":"The time zone of <code>dateTime</code>.","nodes":[{"pos":[0,39],"content":"The time zone of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The time zone of <code>dateTime</code>."}],"pos":[30871,30911],"yaml":true},{"content":"The time zone to convert <code>dateTime</code> to.","nodes":[{"pos":[0,50],"content":"The time zone to convert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> to.","source":"The time zone to convert <code>dateTime</code> to."}],"pos":[30992,31043],"yaml":true},{"content":"The date and time in the destination time zone that corresponds to the <code>dateTime</code> parameter in the source time zone.","nodes":[{"pos":[0,127],"content":"The date and time in the destination time zone that corresponds to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter in the source time zone.","source":"The date and time in the destination time zone that corresponds to the <code>dateTime</code> parameter in the source time zone."}],"pos":[31102,31230],"yaml":true},{"content":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> parameter is <xref href=\"System.DateTimeKind.Local\"></xref>, but the <code>sourceTimeZone</code> parameter does not equal <xref href=\"System.DateTimeKind.Local\"></xref>.  \n  \n -or-  \n  \n The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> parameter is <xref href=\"System.DateTimeKind.Utc\"></xref>, but the <code>sourceTimeZone</code> parameter does not equal <xref href=\"System.TimeZoneInfo.Utc\"></xref>.  \n  \n -or-  \n  \n The <code>dateTime</code> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone's adjustment rules).","nodes":[{"pos":[0,253],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph>, but the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">sourceTimeZone</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter does not equal <ph id=\"ph5\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> parameter is <xref href=\"System.DateTimeKind.Local\"></xref>, but the <code>sourceTimeZone</code> parameter does not equal <xref href=\"System.DateTimeKind.Local\"></xref>."},{"pos":[260,264],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[271,520],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Utc\"&gt;&lt;/xref&gt;</ph>, but the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">sourceTimeZone</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter does not equal <ph id=\"ph5\">&lt;xref href=\"System.TimeZoneInfo.Utc\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> parameter is <xref href=\"System.DateTimeKind.Utc\"></xref>, but the <code>sourceTimeZone</code> parameter does not equal <xref href=\"System.TimeZoneInfo.Utc\"></xref>."},{"pos":[527,531],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[538,687],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone's adjustment rules).","source":"The <code>dateTime</code> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone's adjustment rules)."}],"pos":[31383,32093],"yaml":true},{"content":"The <code>sourceTimeZone</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>destinationTimeZone</code> parameter is `null`.","nodes":[{"pos":[0,52],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceTimeZone</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>sourceTimeZone</code> parameter is `null`."},{"pos":[59,63],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[70,127],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationTimeZone</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>destinationTimeZone</code> parameter is `null`."}],"pos":[32195,32329],"yaml":true},{"content":"Converts a time to the time in another time zone based on the time zone's identifier.","nodes":[{"pos":[0,85],"content":"Converts a time to the time in another time zone based on the time zone's identifier.","nodes":[{"content":"Converts a time to the time in another time zone based on the time zone's identifier.","pos":[0,85]}]}],"pos":[33884,33970],"yaml":true},{"content":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.  \n  \n This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  \n  \n The <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.  \n  \n|Kind property value|Source time zone|Method behavior|  \n|-------------------------|----------------------|---------------------|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Local%2A>|Converts the local time to the time in `destinationTimeZone`.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Utc%2A>|Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Assumed to be <xref:System.TimeZoneInfo.Local%2A>.|Converts the local time to the time in `destinationTimeZone`.|  \n  \n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.  \n  \n|Condition|Returned Kind property value|  \n|---------------|----------------------------------|  \n|The `destinationTimeZone` is `TimeZoneInfo.Utc.Id`.|<xref:System.DateTimeKind?displayProperty=fullName>|  \n|Any other `destinationTimeZone` value.|<xref:System.DateTimeKind?displayProperty=fullName>|  \n  \n If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time. If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.  \n  \n If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively.  \n  \n This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry. It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. The `destinationTimeZoneId` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.","nodes":[{"pos":[0,183],"content":"When performing the conversion, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A&gt;</ph> method applies any adjustment rules in effect in the <ph id=\"ph2\">`destinationTimeZoneId`</ph> time zone.","source":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone."},{"pos":[190,657],"content":"This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","nodes":[{"content":"This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","pos":[0,467],"nodes":[{"content":"This overload is largely identical to calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29&gt;</ph> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.","pos":[0,256],"source":"This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference."},{"content":"This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","pos":[257,467]}]}]},{"pos":[664,916],"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29&gt;</ph> method determines the source time zone from the value of the <ph id=\"ph2\">`dateTime`</ph> parameter's <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property, as the following table shows.","source":"The <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows."},{"pos":[923,942],"content":"Kind property value","nodes":[{"content":"Kind property value","pos":[0,19]}]},{"pos":[943,959],"content":"Source time zone","nodes":[{"content":"Source time zone","pos":[0,16]}]},{"pos":[960,975],"content":"Method behavior","nodes":[{"content":"Method behavior","pos":[0,15]}]},{"pos":[1055,1106],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1107,1142],"content":"<xref:System.TimeZoneInfo.Local%2A>","nodes":[]},{"pos":[1143,1204],"content":"Converts the local time to the time in <ph id=\"ph1\">`destinationTimeZone`</ph>.","source":"Converts the local time to the time in `destinationTimeZone`."},{"pos":[1209,1260],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1261,1294],"content":"<xref:System.TimeZoneInfo.Utc%2A>","nodes":[]},{"pos":[1295,1374],"content":"Converts Coordinated Universal Time (UTC) to the time in <ph id=\"ph1\">`destinationTimeZone`</ph>.","source":"Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`."},{"pos":[1379,1430],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1431,1481],"content":"Assumed to be <xref:System.TimeZoneInfo.Local%2A>.","nodes":[{"content":"Assumed to be <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Local%2A&gt;</ph>.","pos":[0,50],"source":"Assumed to be <xref:System.TimeZoneInfo.Local%2A>."}]},{"pos":[1482,1543],"content":"Converts the local time to the time in <ph id=\"ph1\">`destinationTimeZone`</ph>.","source":"Converts the local time to the time in `destinationTimeZone`."},{"pos":[1551,1679],"content":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is set as shown in the following table.","pos":[0,128],"source":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table."}]},{"pos":[1686,1695],"content":"Condition","nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[1696,1724],"content":"Returned Kind property value","nodes":[{"content":"Returned Kind property value","pos":[0,28]}]},{"pos":[1784,1835],"content":"The <ph id=\"ph1\">`destinationTimeZone`</ph> is <ph id=\"ph2\">`TimeZoneInfo.Utc.Id`</ph>.","source":"The `destinationTimeZone` is `TimeZoneInfo.Utc.Id`."},{"pos":[1836,1887],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1892,1930],"content":"Any other <ph id=\"ph1\">`destinationTimeZone`</ph> value.","source":"Any other `destinationTimeZone` value."},{"pos":[1931,1982],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1990,2205],"content":"If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time. If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.","nodes":[{"content":"If the value of the <ph id=\"ph1\">`dateTime`</ph> parameter is an ambiguous local time, it is interpreted as a standard time.","pos":[0,106],"source":"If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time."},{"content":"If the <ph id=\"ph1\">`dateTime`</ph> parameter is an invalid local time, this method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[107,215],"source":" If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>."}]},{"pos":[2212,2578],"content":"If the conversion of <ph id=\"ph1\">`dateTime`</ph> results in a date and time value that is earlier than <ph id=\"ph2\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or later than <ph id=\"ph3\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph4\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, respectively.","source":"If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively."},{"pos":[2585,3087],"content":"This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry. It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. The `destinationTimeZoneId` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.","nodes":[{"content":"This method retrieves the time zone whose identifier is specified by the <ph id=\"ph1\">`destinationTimeZoneId`</ph> parameter from the registry.","pos":[0,125],"source":"This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry."},{"content":"It cannot retrieve a time zone object that is created using the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method.","pos":[126,248],"source":" It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method."},{"content":"The <ph id=\"ph1\">`destinationTimeZoneId`</ph> parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of <ph id=\"ph2\">`destinationTimeZoneId`</ph> with time zone identifiers is case-insensitive.","pos":[249,502],"source":" The `destinationTimeZoneId` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive."}]}],"pos":[33981,37094],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[37303,37333],"yaml":true},{"content":"The identifier of the destination time zone.","nodes":[{"pos":[0,44],"content":"The identifier of the destination time zone.","nodes":[{"content":"The identifier of the destination time zone.","pos":[0,44]}]}],"pos":[37410,37455],"yaml":true},{"content":"The date and time in the destination time zone.","nodes":[{"pos":[0,47],"content":"The date and time in the destination time zone.","nodes":[{"content":"The date and time in the destination time zone.","pos":[0,47]}]}],"pos":[37514,37562],"yaml":true},{"content":"<code>destinationTimeZoneId</code> is `null`.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;destinationTimeZoneId&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destinationTimeZoneId</code> is `null`."}],"pos":[37741,37787],"yaml":true},{"content":"The time zone identifier was found, but the registry data is corrupted.","nodes":[{"pos":[0,71],"content":"The time zone identifier was found, but the registry data is corrupted.","nodes":[{"content":"The time zone identifier was found, but the registry data is corrupted.","pos":[0,71]}]}],"pos":[37895,37967],"yaml":true},{"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","nodes":[{"pos":[0,121],"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","nodes":[{"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","pos":[0,121]}]}],"pos":[38079,38201],"yaml":true},{"content":"The <code>destinationTimeZoneId</code> identifier was not found on the local system.","nodes":[{"pos":[0,84],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationTimeZoneId</ph><ept id=\"p1\">&lt;/code&gt;</ept> identifier was not found on the local system.","source":"The <code>destinationTimeZoneId</code> identifier was not found on the local system."}],"pos":[38311,38396],"yaml":true},{"content":"Converts a time to the time in another time zone based on the time zone's identifier.","nodes":[{"pos":[0,85],"content":"Converts a time to the time in another time zone based on the time zone's identifier.","nodes":[{"content":"Converts a time to the time in another time zone based on the time zone's identifier.","pos":[0,85]}]}],"pos":[39763,39849],"yaml":true},{"content":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.  \n  \n This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  \n  \n Because the `dateTimeOffset` parameter represents a date and time together with that time's offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time.  \n  \n This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry. It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. The `destinationTimeZoneId` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.  \n  \n In converting the `dateTimeOffset` value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone.  \n  \n If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, respectively.","nodes":[{"pos":[0,183],"content":"When performing the conversion, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A&gt;</ph> method applies any adjustment rules in effect in the <ph id=\"ph2\">`destinationTimeZoneId`</ph> time zone.","source":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone."},{"pos":[190,649],"content":"This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","nodes":[{"content":"This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","pos":[0,459],"nodes":[{"content":"This overload is identical to calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29&gt;</ph> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.","pos":[0,248],"source":"This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference."},{"content":"This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","pos":[249,459]}]}]},{"pos":[656,858],"content":"Because the <ph id=\"ph1\">`dateTimeOffset`</ph> parameter represents a date and time together with that time's offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time.","source":"Because the `dateTimeOffset` parameter represents a date and time together with that time's offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time."},{"pos":[865,1367],"content":"This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry. It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. The `destinationTimeZoneId` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.","nodes":[{"content":"This method retrieves the time zone whose identifier is specified by the <ph id=\"ph1\">`destinationTimeZoneId`</ph> parameter from the registry.","pos":[0,125],"source":"This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry."},{"content":"It cannot retrieve a time zone object that is created using the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method.","pos":[126,248],"source":" It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method."},{"content":"The <ph id=\"ph1\">`destinationTimeZoneId`</ph> parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of <ph id=\"ph2\">`destinationTimeZoneId`</ph> with time zone identifiers is case-insensitive.","pos":[249,502],"source":" The `destinationTimeZoneId` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive."}]},{"pos":[1374,1547],"content":"In converting the <ph id=\"ph1\">`dateTimeOffset`</ph> value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone.","source":"In converting the `dateTimeOffset` value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone."},{"pos":[1554,1950],"content":"If the conversion of <ph id=\"ph1\">`dateTimeOffset`</ph> results in a date and time value that is earlier than <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.MinValue?displayProperty=fullName&gt;</ph> or later than <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.MaxValue?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph4\">&lt;xref:System.DateTimeOffset.MinValue?displayProperty=fullName&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTimeOffset.MaxValue?displayProperty=fullName&gt;</ph>, respectively.","source":"If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, respectively."}],"pos":[39860,41823],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[42062,42092],"yaml":true},{"content":"The identifier of the destination time zone.","nodes":[{"pos":[0,44],"content":"The identifier of the destination time zone.","nodes":[{"content":"The identifier of the destination time zone.","pos":[0,44]}]}],"pos":[42169,42214],"yaml":true},{"content":"The date and time in the destination time zone.","nodes":[{"pos":[0,47],"content":"The date and time in the destination time zone.","nodes":[{"content":"The date and time in the destination time zone.","pos":[0,47]}]}],"pos":[42279,42327],"yaml":true},{"content":"<code>destinationTimeZoneId</code> is `null`.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;destinationTimeZoneId&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destinationTimeZoneId</code> is `null`."}],"pos":[42506,42552],"yaml":true},{"content":"The time zone identifier was found but the registry data is corrupted.","nodes":[{"pos":[0,70],"content":"The time zone identifier was found but the registry data is corrupted.","nodes":[{"content":"The time zone identifier was found but the registry data is corrupted.","pos":[0,70]}]}],"pos":[42660,42731],"yaml":true},{"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","nodes":[{"pos":[0,121],"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","nodes":[{"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","pos":[0,121]}]}],"pos":[42843,42965],"yaml":true},{"content":"The <code>destinationTimeZoneId</code> identifier was not found on the local system.","nodes":[{"pos":[0,84],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationTimeZoneId</ph><ept id=\"p1\">&lt;/code&gt;</ept> identifier was not found on the local system.","source":"The <code>destinationTimeZoneId</code> identifier was not found on the local system."}],"pos":[43075,43160],"yaml":true},{"content":"Converts a time from one time zone to another based on time zone identifiers.","nodes":[{"pos":[0,77],"content":"Converts a time from one time zone to another based on time zone identifiers.","nodes":[{"content":"Converts a time from one time zone to another based on time zone identifiers.","pos":[0,77]}]}],"pos":[44557,44635],"yaml":true},{"content":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.  \n  \n Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=fullName> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  \n  \n This method retrieves the time zones whose identifiers are the `sourceTimeZoneId` and `destinationTimeZoneId` parameters from the registry. It cannot retrieve time zone objects that are created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.  \n  \n The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZoneId` parameter, as the following table shows.  \n  \n|DateTime.Kind value|sourceTimeZone value|Method behavior|  \n|-------------------------|--------------------------|---------------------|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Equals `TimeZoneInfo.Utc.Id`.|Converts `dateTime` to the destination time zone's time.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Does not equal `TimeZoneInfo.Utc.Id`.|Throws an <xref:System.ArgumentException>.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Equals `TimeZoneInfo.Local.Id`.|Converts `dateTime` to the destination time zone's time.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Does not equal `TimeZoneInfo.Local.Id`.|Throws an <xref:System.ArgumentException>.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Any.|Converts `dateTime` to the destination time zone's time.|  \n  \n Because it relies on calls to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method performs a case-insensitive search to locate the time zones that correspond to `sourceTimeZoneId` and `destinationTimeZoneId`.  \n  \n If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time. If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.  \n  \n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"pos":[0,183],"content":"When performing the conversion, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A&gt;</ph> method applies any adjustment rules in effect in the <ph id=\"ph2\">`destinationTimeZoneId`</ph> time zone.","source":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone."},{"pos":[190,840],"content":"Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=fullName> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","nodes":[{"content":"Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=fullName> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","pos":[0,650],"nodes":[{"content":"Although it is similar to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method, you can use <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=fullName&gt;</ph> to specify the source and destination time zones using their identifiers instead of their <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects.","pos":[0,439],"source":"Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=fullName> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects."},{"content":"This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.","pos":[440,650]}]}]},{"pos":[847,1109],"content":"This method retrieves the time zones whose identifiers are the `sourceTimeZoneId` and `destinationTimeZoneId` parameters from the registry. It cannot retrieve time zone objects that are created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.","nodes":[{"content":"This method retrieves the time zones whose identifiers are the <ph id=\"ph1\">`sourceTimeZoneId`</ph> and <ph id=\"ph2\">`destinationTimeZoneId`</ph> parameters from the registry.","pos":[0,139],"source":"This method retrieves the time zones whose identifiers are the `sourceTimeZoneId` and `destinationTimeZoneId` parameters from the registry."},{"content":"It cannot retrieve time zone objects that are created using the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method.","pos":[140,262],"source":" It cannot retrieve time zone objects that are created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method."}]},{"pos":[1116,1283],"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTime`</ph> parameter must correspond to the <ph id=\"ph3\">`sourceTimeZoneId`</ph> parameter, as the following table shows.","source":"The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZoneId` parameter, as the following table shows."},{"pos":[1290,1309],"content":"DateTime.Kind value","nodes":[{"content":"DateTime.Kind value","pos":[0,19]}]},{"pos":[1310,1330],"content":"sourceTimeZone value","nodes":[{"content":"sourceTimeZone value","pos":[0,20]}]},{"pos":[1331,1346],"content":"Method behavior","nodes":[{"content":"Method behavior","pos":[0,15]}]},{"pos":[1430,1481],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1482,1511],"content":"Equals <ph id=\"ph1\">`TimeZoneInfo.Utc.Id`</ph>.","source":"Equals `TimeZoneInfo.Utc.Id`."},{"pos":[1512,1568],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the destination time zone's time.","source":"Converts `dateTime` to the destination time zone's time."},{"pos":[1573,1624],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1625,1662],"content":"Does not equal <ph id=\"ph1\">`TimeZoneInfo.Utc.Id`</ph>.","source":"Does not equal `TimeZoneInfo.Utc.Id`."},{"pos":[1663,1705],"content":"Throws an <xref:System.ArgumentException>.","nodes":[{"content":"Throws an <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,42],"source":"Throws an <xref:System.ArgumentException>."}]},{"pos":[1710,1761],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1762,1793],"content":"Equals <ph id=\"ph1\">`TimeZoneInfo.Local.Id`</ph>.","source":"Equals `TimeZoneInfo.Local.Id`."},{"pos":[1794,1850],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the destination time zone's time.","source":"Converts `dateTime` to the destination time zone's time."},{"pos":[1855,1906],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1907,1946],"content":"Does not equal <ph id=\"ph1\">`TimeZoneInfo.Local.Id`</ph>.","source":"Does not equal `TimeZoneInfo.Local.Id`."},{"pos":[1947,1989],"content":"Throws an <xref:System.ArgumentException>.","nodes":[{"content":"Throws an <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,42],"source":"Throws an <xref:System.ArgumentException>."}]},{"pos":[1994,2045],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[2046,2050],"content":"Any.","nodes":[{"content":"Any.","pos":[0,4]}]},{"pos":[2051,2107],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the destination time zone's time.","source":"Converts `dateTime` to the destination time zone's time."},{"pos":[2115,2407],"content":"Because it relies on calls to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> method, the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A&gt;</ph> method performs a case-insensitive search to locate the time zones that correspond to <ph id=\"ph3\">`sourceTimeZoneId`</ph> and <ph id=\"ph4\">`destinationTimeZoneId`</ph>.","source":"Because it relies on calls to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method performs a case-insensitive search to locate the time zones that correspond to `sourceTimeZoneId` and `destinationTimeZoneId`."},{"pos":[2414,2665],"content":"If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time. If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.","nodes":[{"content":"If the value of the <ph id=\"ph1\">`dateTime`</ph> parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.","pos":[0,124],"source":"If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time."},{"content":"If the <ph id=\"ph1\">`dateTime`</ph> parameter is an invalid time in the source time zone, this method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[125,251],"source":" If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>."}]},{"pos":[2672,2972],"content":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,300],"source":"The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]}],"pos":[44646,47641],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[48494,48524],"yaml":true},{"content":"The identifier of the source time zone.","nodes":[{"pos":[0,39],"content":"The identifier of the source time zone.","nodes":[{"content":"The identifier of the source time zone.","pos":[0,39]}]}],"pos":[48596,48636],"yaml":true},{"content":"The identifier of the destination time zone.","nodes":[{"pos":[0,44],"content":"The identifier of the destination time zone.","nodes":[{"content":"The identifier of the destination time zone.","pos":[0,44]}]}],"pos":[48713,48758],"yaml":true},{"content":"The date and time in the destination time zone that corresponds to the <code>dateTime</code> parameter in the source time zone.","nodes":[{"pos":[0,127],"content":"The date and time in the destination time zone that corresponds to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter in the source time zone.","source":"The date and time in the destination time zone that corresponds to the <code>dateTime</code> parameter in the source time zone."}],"pos":[48817,48945],"yaml":true},{"content":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> parameter does not correspond to the source time zone.  \n  \n -or-  \n  \n <code>dateTime</code> is an invalid time in the source time zone.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not correspond to the source time zone.","source":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> parameter does not correspond to the source time zone."},{"pos":[145,149],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[156,221],"content":"<ph id=\"ph1\">&lt;code&gt;dateTime&lt;/code&gt;</ph> is an invalid time in the source time zone.","source":"<code>dateTime</code> is an invalid time in the source time zone."}],"pos":[49116,49346],"yaml":true},{"content":"<code>sourceTimeZoneId</code> is `null`.  \n  \n -or-  \n  \n <code>destinationTimeZoneId</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;sourceTimeZoneId&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>sourceTimeZoneId</code> is `null`."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,103],"content":"<ph id=\"ph1\">&lt;code&gt;destinationTimeZoneId&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destinationTimeZoneId</code> is `null`."}],"pos":[49448,49558],"yaml":true},{"content":"The time zone identifiers were found, but the registry data is corrupted.","nodes":[{"pos":[0,73],"content":"The time zone identifiers were found, but the registry data is corrupted.","nodes":[{"content":"The time zone identifiers were found, but the registry data is corrupted.","pos":[0,73]}]}],"pos":[49666,49740],"yaml":true},{"content":"The user does not have the permissions required to read from the registry keys that hold time zone data.","nodes":[{"pos":[0,104],"content":"The user does not have the permissions required to read from the registry keys that hold time zone data.","nodes":[{"content":"The user does not have the permissions required to read from the registry keys that hold time zone data.","pos":[0,104]}]}],"pos":[49852,49957],"yaml":true},{"content":"The <code>sourceTimeZoneId</code> identifier was not found on the local system.  \n  \n -or-  \n  \n The <code>destinationTimeZoneId</code> identifier was not found on the local system.","nodes":[{"pos":[0,79],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sourceTimeZoneId</ph><ept id=\"p1\">&lt;/code&gt;</ept> identifier was not found on the local system.","source":"The <code>sourceTimeZoneId</code> identifier was not found on the local system."},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,181],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationTimeZoneId</ph><ept id=\"p1\">&lt;/code&gt;</ept> identifier was not found on the local system.","source":"The <code>destinationTimeZoneId</code> identifier was not found on the local system."}],"pos":[50067,50255],"yaml":true},{"content":"Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.","nodes":[{"pos":[0,81],"content":"Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.","nodes":[{"content":"Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.","pos":[0,81]}]}],"pos":[51556,51638],"yaml":true},{"content":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.  \n  \n The precise behavior of this method depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.  \n  \n|DateTime.Kind property|Conversion|  \n|----------------------------|----------------|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Throws an <xref:System.ArgumentException>.|  \n|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Converts from Coordinated Universal Time (UTC).|  \n  \n If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively.","nodes":[{"pos":[0,170],"content":"When performing the conversion, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A&gt;</ph> method applies any adjustment rules in effect in the <ph id=\"ph2\">`destinationTimeZone`</ph> time zone.","source":"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone."},{"pos":[177,339],"content":"The precise behavior of this method depends on the value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTime`</ph> parameter, as the following table shows.","source":"The precise behavior of this method depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows."},{"pos":[346,368],"content":"DateTime.Kind property","nodes":[{"content":"DateTime.Kind property","pos":[0,22]}]},{"pos":[369,379],"content":"Conversion","nodes":[{"content":"Conversion","pos":[0,10]}]},{"pos":[434,485],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[486,528],"content":"Throws an <xref:System.ArgumentException>.","nodes":[{"content":"Throws an <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,42],"source":"Throws an <xref:System.ArgumentException>."}]},{"pos":[533,639],"content":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>","pos":[0,106],"source":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>"}]},{"pos":[640,687],"content":"Converts from Coordinated Universal Time (UTC).","nodes":[{"content":"Converts from Coordinated Universal Time (UTC).","pos":[0,47]}]},{"pos":[695,1061],"content":"If the conversion of <ph id=\"ph1\">`dateTime`</ph> results in a date and time value that is earlier than <ph id=\"ph2\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or later than <ph id=\"ph3\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph4\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, respectively.","source":"If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively."}],"pos":[51649,52722],"yaml":true,"extradata":"MT"},{"content":"The Coordinated Universal Time (UTC).","nodes":[{"pos":[0,37],"content":"The Coordinated Universal Time (UTC).","nodes":[{"content":"The Coordinated Universal Time (UTC).","pos":[0,37]}]}],"pos":[53325,53363],"yaml":true},{"content":"The time zone to convert <code>dateTime</code> to.","nodes":[{"pos":[0,50],"content":"The time zone to convert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> to.","source":"The time zone to convert <code>dateTime</code> to."}],"pos":[53444,53495],"yaml":true},{"content":"The date and time in the destination time zone. Its <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Utc\"></xref> if <code>destinationTimeZone</code> is <xref href=\"System.TimeZoneInfo.Utc\"></xref>; otherwise, its <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Unspecified\"></xref>.","nodes":[{"pos":[0,358],"content":"The date and time in the destination time zone. Its <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Utc\"></xref> if <code>destinationTimeZone</code> is <xref href=\"System.TimeZoneInfo.Utc\"></xref>; otherwise, its <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Unspecified\"></xref>.","nodes":[{"content":"The date and time in the destination time zone.","pos":[0,47]},{"content":"Its <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind.Utc\"&gt;&lt;/xref&gt;</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">destinationTimeZone</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph4\">&lt;xref href=\"System.TimeZoneInfo.Utc\"&gt;&lt;/xref&gt;</ph>; otherwise, its <ph id=\"ph5\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph6\">&lt;xref href=\"System.DateTimeKind.Unspecified\"&gt;&lt;/xref&gt;</ph>.","pos":[48,358],"source":" Its <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Utc\"></xref> if <code>destinationTimeZone</code> is <xref href=\"System.TimeZoneInfo.Utc\"></xref>; otherwise, its <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Unspecified\"></xref>."}]}],"pos":[53554,53913],"yaml":true},{"content":"The <xref href=\"System.DateTime.Kind\"></xref> property of <code>dateTime</code> is <xref href=\"System.DateTimeKind.Local\"></xref>.","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime.Kind\"></xref> property of <code>dateTime</code> is <xref href=\"System.DateTimeKind.Local\"></xref>."}],"pos":[54073,54204],"yaml":true},{"content":"<code>destinationTimeZone</code> is `null`.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;destinationTimeZone&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destinationTimeZone</code> is `null`."}],"pos":[54306,54350],"yaml":true},{"content":"Converts the time in a specified time zone to Coordinated Universal Time (UTC).","nodes":[{"pos":[0,79],"content":"Converts the time in a specified time zone to Coordinated Universal Time (UTC).","nodes":[{"content":"Converts the time in a specified time zone to Coordinated Universal Time (UTC).","pos":[0,79]}]}],"pos":[55639,55719],"yaml":true},{"content":"If the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter equals <xref:System.DateTimeKind?displayProperty=fullName> and the `sourceTimeZone` parameter equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>, this method returns `dateTime` without performing any conversion.  \n  \n If `dateTime` corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone. If `dateTime` corresponds to an invalid time, this method throws an <xref:System.ArgumentException>.  \n  \n If the Coordinated Universal Time (UTC) equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later that <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.","nodes":[{"pos":[0,301],"content":"If the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTime`</ph> parameter equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> and the <ph id=\"ph4\">`sourceTimeZone`</ph> parameter equals <ph id=\"ph5\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph6\">`dateTime`</ph> without performing any conversion.","source":"If the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter equals <xref:System.DateTimeKind?displayProperty=fullName> and the `sourceTimeZone` parameter equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>, this method returns `dateTime` without performing any conversion."},{"pos":[308,530],"content":"If `dateTime` corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone. If `dateTime` corresponds to an invalid time, this method throws an <xref:System.ArgumentException>.","nodes":[{"content":"If <ph id=\"ph1\">`dateTime`</ph> corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone.","pos":[0,121],"source":"If `dateTime` corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone."},{"content":"If <ph id=\"ph1\">`dateTime`</ph> corresponds to an invalid time, this method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[122,222],"source":" If `dateTime` corresponds to an invalid time, this method throws an <xref:System.ArgumentException>."}]},{"pos":[537,848],"content":"If the Coordinated Universal Time (UTC) equivalent of <ph id=\"ph1\">`dateTime`</ph> is earlier than <ph id=\"ph2\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or later that <ph id=\"ph3\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph4\">&lt;xref:System.DateTime.MinValue&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTime.MaxValue&gt;</ph>, respectively.","source":"If the Coordinated Universal Time (UTC) equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later that <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively."}],"pos":[55730,56585],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[57365,57395],"yaml":true},{"content":"The time zone of <code>dateTime</code>.","nodes":[{"pos":[0,39],"content":"The time zone of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The time zone of <code>dateTime</code>."}],"pos":[57471,57511],"yaml":true},{"content":"The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter. The <xref href=\"System.DateTime\"></xref> object's <xref href=\"System.DateTime.Kind\"></xref> property is always set to <xref href=\"System.DateTimeKind.Utc\"></xref>.","nodes":[{"pos":[0,257],"content":"The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter. The <xref href=\"System.DateTime\"></xref> object's <xref href=\"System.DateTime.Kind\"></xref> property is always set to <xref href=\"System.DateTimeKind.Utc\"></xref>.","nodes":[{"content":"The Coordinated Universal Time (UTC) that corresponds to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,93],"source":"The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object's <ph id=\"ph2\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property is always set to <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Utc\"&gt;&lt;/xref&gt;</ph>.","pos":[94,257],"source":" The <xref href=\"System.DateTime\"></xref> object's <xref href=\"System.DateTime.Kind\"></xref> property is always set to <xref href=\"System.DateTimeKind.Utc\"></xref>."}]}],"pos":[57570,57828],"yaml":true},{"content":"<code>dateTime</code>\n    `.Kind` is <xref href=\"System.DateTimeKind.Utc\"></xref> and <code>sourceTimeZone</code> does not equal <xref href=\"System.TimeZoneInfo.Utc\"></xref>.  \n  \n -or-  \n  \n <code>dateTime</code>`.Kind` is <xref href=\"System.DateTimeKind.Local\"></xref> and <code>sourceTimeZone</code> does not equal <xref href=\"System.TimeZoneInfo.Local\"></xref>.  \n  \n -or-  \n  \n <code>sourceTimeZone</code>`.IsInvalidDateTime(`<code>dateTime</code>`)` returns `true`.","nodes":[{"pos":[0,174],"content":"<ph id=\"ph1\">&lt;code&gt;dateTime&lt;/code&gt;</ph><ph id=\"ph2\">\n    `.Kind`</ph> is <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Utc\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;code&gt;sourceTimeZone&lt;/code&gt;</ph> does not equal <ph id=\"ph5\">&lt;xref href=\"System.TimeZoneInfo.Utc\"&gt;&lt;/xref&gt;</ph>.","source":"<code>dateTime</code>\n    `.Kind` is <xref href=\"System.DateTimeKind.Utc\"></xref> and <code>sourceTimeZone</code> does not equal <xref href=\"System.TimeZoneInfo.Utc\"></xref>."},{"pos":[181,185],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[192,365],"content":"<ph id=\"ph1\">&lt;code&gt;dateTime&lt;/code&gt;</ph><ph id=\"ph2\">`.Kind`</ph> is <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;code&gt;sourceTimeZone&lt;/code&gt;</ph> does not equal <ph id=\"ph5\">&lt;xref href=\"System.TimeZoneInfo.Local\"&gt;&lt;/xref&gt;</ph>.","source":"<code>dateTime</code>`.Kind` is <xref href=\"System.DateTimeKind.Local\"></xref> and <code>sourceTimeZone</code> does not equal <xref href=\"System.TimeZoneInfo.Local\"></xref>."},{"pos":[372,376],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[383,471],"content":"<ph id=\"ph1\">&lt;code&gt;sourceTimeZone&lt;/code&gt;</ph><ph id=\"ph2\">`.IsInvalidDateTime(`</ph><ph id=\"ph3\">&lt;code&gt;dateTime&lt;/code&gt;</ph><ph id=\"ph4\">`)`</ph> returns <ph id=\"ph5\">`true`</ph>.","source":"<code>sourceTimeZone</code>`.IsInvalidDateTime(`<code>dateTime</code>`)` returns `true`."}],"pos":[57986,58477],"yaml":true},{"content":"<code>sourceTimeZone</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;sourceTimeZone&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>sourceTimeZone</code> is `null`."}],"pos":[58579,58618],"yaml":true},{"content":"Converts the specified date and time to Coordinated Universal Time (UTC).","nodes":[{"pos":[0,73],"content":"Converts the specified date and time to Coordinated Universal Time (UTC).","nodes":[{"content":"Converts the specified date and time to Coordinated Universal Time (UTC).","pos":[0,73]}]}],"pos":[59805,59879],"yaml":true},{"content":"The exact conversion performed depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.  \n  \n|DateTime.Kind property|Conversion|  \n|----------------------------|----------------|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Converts from local time to Coordinated Universal Time (UTC).|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Assumes `dateTime` is local time and converts from local time to UTC.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Returns `dateTime` unchanged.|  \n  \n If `dateTime` corresponds to an ambiguous local time, this method assumes that it is standard local time. If `dateTime` corresponds to an invalid local time, the method throws an <xref:System.ArgumentException>.  \n  \n> [!NOTE]\n>  If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> methods. <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range. And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.  \n  \n If the UTC equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later that <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.","nodes":[{"pos":[0,157],"content":"The exact conversion performed depends on the value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTime`</ph> parameter, as the following table shows.","source":"The exact conversion performed depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows."},{"pos":[164,186],"content":"DateTime.Kind property","nodes":[{"content":"DateTime.Kind property","pos":[0,22]}]},{"pos":[187,197],"content":"Conversion","nodes":[{"content":"Conversion","pos":[0,10]}]},{"pos":[252,303],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[304,365],"content":"Converts from local time to Coordinated Universal Time (UTC).","nodes":[{"content":"Converts from local time to Coordinated Universal Time (UTC).","pos":[0,61]}]},{"pos":[370,421],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[422,491],"content":"Assumes <ph id=\"ph1\">`dateTime`</ph> is local time and converts from local time to UTC.","source":"Assumes `dateTime` is local time and converts from local time to UTC."},{"pos":[496,547],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[548,577],"content":"Returns <ph id=\"ph1\">`dateTime`</ph> unchanged.","source":"Returns `dateTime` unchanged."},{"pos":[585,796],"content":"If `dateTime` corresponds to an ambiguous local time, this method assumes that it is standard local time. If `dateTime` corresponds to an invalid local time, the method throws an <xref:System.ArgumentException>.","nodes":[{"content":"If <ph id=\"ph1\">`dateTime`</ph> corresponds to an ambiguous local time, this method assumes that it is standard local time.","pos":[0,105],"source":"If `dateTime` corresponds to an ambiguous local time, this method assumes that it is standard local time."},{"content":"If <ph id=\"ph1\">`dateTime`</ph> corresponds to an invalid local time, the method throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[106,211],"source":" If `dateTime` corresponds to an invalid local time, the method throws an <xref:System.ArgumentException>."}]},{"pos":[804,1609],"content":"[!NOTE]\n If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> methods. <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range. And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.","leadings":["","> "],"nodes":[{"content":" If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> methods. <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range. And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.","pos":[8,803],"nodes":[{"content":"If the current computer's local time zone includes multiple adjustment rules, this overload of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeToUtc%2A&gt;</ph> method can return results that differ from the <ph id=\"ph2\">&lt;xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> methods.","pos":[1,340],"source":" If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> methods."},{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> always applies the current adjustment rule to time zone conversion, whether or not <ph id=\"ph2\">`dateTime`</ph> lies within its date range.","pos":[341,529],"source":" <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range."},{"content":"And when executing on <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName&gt;</ph> also applies the current adjustment rule to time zone conversion, whether or not <ph id=\"ph3\">`dateTime`</ph> lies within its date range.","pos":[530,795],"source":" And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range."}]}]},{"pos":[1616,1898],"content":"If the UTC equivalent of <ph id=\"ph1\">`dateTime`</ph> is earlier than <ph id=\"ph2\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph> or later that <ph id=\"ph3\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, this method returns <ph id=\"ph4\">&lt;xref:System.DateTime.MinValue&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.DateTime.MaxValue&gt;</ph>, respectively.","source":"If the UTC equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later that <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively."}],"pos":[59890,61804],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[62681,62711],"yaml":true},{"content":"The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter. The <xref href=\"System.DateTime\"></xref> value's <xref href=\"System.DateTime.Kind\"></xref> property is always set to <xref href=\"System.DateTimeKind.Utc\"></xref>.","nodes":[{"pos":[0,256],"content":"The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter. The <xref href=\"System.DateTime\"></xref> value's <xref href=\"System.DateTime.Kind\"></xref> property is always set to <xref href=\"System.DateTimeKind.Utc\"></xref>.","nodes":[{"content":"The Coordinated Universal Time (UTC) that corresponds to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,93],"source":"The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value's <ph id=\"ph2\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property is always set to <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Utc\"&gt;&lt;/xref&gt;</ph>.","pos":[94,256],"source":" The <xref href=\"System.DateTime\"></xref> value's <xref href=\"System.DateTime.Kind\"></xref> property is always set to <xref href=\"System.DateTimeKind.Utc\"></xref>."}]}],"pos":[62770,63027],"yaml":true},{"content":"`TimeZoneInfo.Local.IsInvalidDateTime(`\n    <code>dateTime</code>\n    `)` returns `true`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`TimeZoneInfo.Local.IsInvalidDateTime(`</ph><ph id=\"ph2\">\n</ph><bpt id=\"p1\">    &lt;code&gt;</bpt><ph id=\"ph3\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept><ph id=\"ph4\">\n</ph><ph id=\"ph5\">    `)`</ph> returns <ph id=\"ph6\">`true`</ph>.","source":"`TimeZoneInfo.Local.IsInvalidDateTime(`\n    <code>dateTime</code>\n    `)` returns `true`."}],"pos":[63185,63296],"yaml":true},{"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.","nodes":[{"pos":[0,154],"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.","nodes":[{"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.","pos":[0,154]}]}],"pos":[64705,64860],"yaml":true},{"content":"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time). To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method.  \n  \n The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the properties of the <xref:System.TimeZoneInfo> object that are returned by the method call.  \n  \n|CreateCustomTimeZone parameter|TimeZoneInfo property|  \n|------------------------------------|---------------------------|  \n|`id`|<xref:System.TimeZoneInfo.Id%2A>|  \n|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  \n|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  \n|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  \n  \n Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  \n  \n```  \n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \n(GMT-02:00) Mid-Atlantic  \n(GMT-07:00) Mountain Time (US & Canada)  \n```","nodes":[{"pos":[0,528],"content":"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time). To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method.","nodes":[{"content":"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time). To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method.","pos":[0,528],"nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29&gt;</ph> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time).","pos":[0,272],"source":"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time)."},{"content":"To define a time zone that includes adjustments for daylight saving time, use either the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> method.","pos":[273,528],"source":" To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method."}]}]},{"pos":[535,806],"content":"The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the properties of the <xref:System.TimeZoneInfo> object that are returned by the method call.","nodes":[{"content":"The following table shows the relationship between the parameters that are provided to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> method and the properties of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object that are returned by the method call.","pos":[0,271],"source":"The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the properties of the <xref:System.TimeZoneInfo> object that are returned by the method call."}]},{"pos":[813,843],"content":"CreateCustomTimeZone parameter","nodes":[{"content":"CreateCustomTimeZone parameter","pos":[0,30]}]},{"pos":[844,865],"content":"TimeZoneInfo property","nodes":[{"content":"TimeZoneInfo property","pos":[0,21]}]},{"pos":[944,976],"content":"<xref:System.TimeZoneInfo.Id%2A>","nodes":[]},{"pos":[997,1040],"content":"<xref:System.TimeZoneInfo.BaseUtcOffset%2A>","nodes":[]},{"pos":[1059,1100],"content":"<xref:System.TimeZoneInfo.DisplayName%2A>","nodes":[]},{"pos":[1127,1169],"content":"<xref:System.TimeZoneInfo.StandardName%2A>","nodes":[]},{"pos":[1177,1772],"content":"Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:","nodes":[{"content":"Typically, the time zone's standard time name and its identifier are the same.","pos":[0,78]},{"content":"However, the length of the time zone's identifier should not exceed 32 characters.","pos":[79,161]},{"content":"The string passed to the <ph id=\"ph1\">`displayName`</ph> parameter follows a fairly standard format.","pos":[162,244],"source":" The string passed to the `displayName` parameter follows a fairly standard format."},{"content":"The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.","pos":[245,436]},{"content":"This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.","pos":[437,582]},{"content":"For example:","pos":[583,595]}]}],"pos":[64871,66793],"yaml":true,"extradata":"MT"},{"content":"The time zone's identifier.","nodes":[{"pos":[0,27],"content":"The time zone's identifier.","nodes":[{"content":"The time zone's identifier.","pos":[0,27]}]}],"pos":[67587,67615],"yaml":true},{"content":"An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).","nodes":[{"pos":[0,106],"content":"An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).","nodes":[{"content":"An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).","pos":[0,106]}]}],"pos":[67686,67793],"yaml":true},{"content":"The display name of the new time zone.","nodes":[{"pos":[0,38],"content":"The display name of the new time zone.","nodes":[{"content":"The display name of the new time zone.","pos":[0,38]}]}],"pos":[67860,67899],"yaml":true},{"content":"The name of the new time zone's standard time.","nodes":[{"pos":[0,46],"content":"The name of the new time zone's standard time.","nodes":[{"content":"The name of the new time zone's standard time.","pos":[0,46]}]}],"pos":[67974,68021],"yaml":true},{"content":"The new time zone.","nodes":[{"pos":[0,18],"content":"The new time zone.","nodes":[{"content":"The new time zone.","pos":[0,18]}]}],"pos":[68084,68103],"yaml":true},{"content":"The <code>id</code> parameter is `null`.","nodes":[{"pos":[0,40],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>id</code> parameter is `null`."}],"pos":[68273,68314],"yaml":true},{"content":"The <code>id</code> parameter is an empty string (\"\").  \n  \n -or-  \n  \n The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.","nodes":[{"pos":[0,54],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an empty string (\"\").","source":"The <code>id</code> parameter is an empty string (\"\")."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,158],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUtcOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not represent a whole number of minutes.","source":"The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes."}],"pos":[68408,68575],"yaml":true},{"content":"The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.","nodes":[{"pos":[0,89],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUtcOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than 14 hours or less than -14 hours.","source":"The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours."}],"pos":[68689,68779],"yaml":true},{"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.","nodes":[{"pos":[0,203],"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.","nodes":[{"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.","pos":[0,203]}]}],"pos":[70458,70662],"yaml":true},{"content":"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method is suitable for creating a time zone that supports daylight saving time. To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method.  \n  \n The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.  \n  \n|CreateCustomTimeZone parameter|TimeZoneInfo member|  \n|------------------------------------|-------------------------|  \n|`id`|<xref:System.TimeZoneInfo.Id%2A>|  \n|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  \n|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  \n|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  \n|`daylightDisplayName`|<xref:System.TimeZoneInfo.DaylightName%2A>|  \n|`adjustmentRules`|An array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method.|  \n  \n Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  \n  \n```  \n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \n(GMT-02:00) Mid-Atlantic  \n(GMT-07:00) Mountain Time (US & Canada)  \n```  \n  \n The `baseUtcOffset` parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules. In other words, the <xref:System.TimeZoneInfo> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules. To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.  \n  \n A time zone's adjustment rules are defined by doing the following:  \n  \n1.  Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition time for each adjustment rule.  \n  \n2.  Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.  \n  \n3.  Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.","nodes":[{"pos":[0,424],"content":"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method is suitable for creating a time zone that supports daylight saving time. To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method.","nodes":[{"content":"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method is suitable for creating a time zone that supports daylight saving time. To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method.","pos":[0,424],"nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> method is suitable for creating a time zone that supports daylight saving time.","pos":[0,176],"source":"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method is suitable for creating a time zone that supports daylight saving time."},{"content":"To define a time zone that does not support daylight saving time, use either the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> method.","pos":[177,424],"source":" To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method."}]}]},{"pos":[431,699],"content":"The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.","nodes":[{"content":"The following table shows the relationship between the parameters that are provided to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> method and the members of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object that are returned by the method call.","pos":[0,268],"source":"The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call."}]},{"pos":[706,736],"content":"CreateCustomTimeZone parameter","nodes":[{"content":"CreateCustomTimeZone parameter","pos":[0,30]}]},{"pos":[737,756],"content":"TimeZoneInfo member","nodes":[{"content":"TimeZoneInfo member","pos":[0,19]}]},{"pos":[833,865],"content":"<xref:System.TimeZoneInfo.Id%2A>","nodes":[]},{"pos":[886,929],"content":"<xref:System.TimeZoneInfo.BaseUtcOffset%2A>","nodes":[]},{"pos":[948,989],"content":"<xref:System.TimeZoneInfo.DisplayName%2A>","nodes":[]},{"pos":[1016,1058],"content":"<xref:System.TimeZoneInfo.StandardName%2A>","nodes":[]},{"pos":[1085,1127],"content":"<xref:System.TimeZoneInfo.DaylightName%2A>","nodes":[]},{"pos":[1150,1309],"content":"An array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName&gt;</ph> objects returned by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A&gt;</ph> method.","pos":[0,159],"source":"An array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method."}]},{"pos":[1317,1912],"content":"Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:","nodes":[{"content":"Typically, the time zone's standard time name and its identifier are the same.","pos":[0,78]},{"content":"However, the length of the time zone's identifier should not exceed 32 characters.","pos":[79,161]},{"content":"The string passed to the <ph id=\"ph1\">`displayName`</ph> parameter follows a fairly standard format.","pos":[162,244],"source":" The string passed to the `displayName` parameter follows a fairly standard format."},{"content":"The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.","pos":[245,436]},{"content":"This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.","pos":[437,582]},{"content":"For example:","pos":[583,595]}]},{"pos":[2049,2510],"content":"The `baseUtcOffset` parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules. In other words, the <xref:System.TimeZoneInfo> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules. To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.","nodes":[{"content":"The <ph id=\"ph1\">`baseUtcOffset`</ph> parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules.","pos":[0,150],"source":"The `baseUtcOffset` parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules."},{"content":"In other words, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules.","pos":[151,360],"source":" In other words, the <xref:System.TimeZoneInfo> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules."},{"content":"To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.","pos":[361,461]}]},{"pos":[2517,2583],"content":"A time zone's adjustment rules are defined by doing the following:","nodes":[{"content":"A time zone's adjustment rules are defined by doing the following:","pos":[0,66]}]},{"pos":[2593,2834],"content":"Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition time for each adjustment rule.","nodes":[{"content":"Calling either the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A&gt;</ph> method to define the starting and ending transition time for each adjustment rule.","pos":[0,241],"source":"Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition time for each adjustment rule."}]},{"pos":[2844,2954],"content":"Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A&gt;</ph> method for each adjustment rule.","pos":[0,110],"source":"Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule."}]},{"pos":[2964,3061],"content":"Assigning the adjustment rules to an array that can be passed as the <ph id=\"ph1\">`adjustmentRules`</ph> parameter.","source":"Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter."}],"pos":[70673,73766],"yaml":true,"extradata":"MT"},{"content":"The time zone's identifier.","nodes":[{"pos":[0,27],"content":"The time zone's identifier.","nodes":[{"content":"The time zone's identifier.","pos":[0,27]}]}],"pos":[74638,74666],"yaml":true},{"content":"An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).","nodes":[{"pos":[0,106],"content":"An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).","nodes":[{"content":"An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).","pos":[0,106]}]}],"pos":[74737,74844],"yaml":true},{"content":"The display name of the new time zone.","nodes":[{"pos":[0,38],"content":"The display name of the new time zone.","nodes":[{"content":"The display name of the new time zone.","pos":[0,38]}]}],"pos":[74911,74950],"yaml":true},{"content":"The new time zone's standard time name.","nodes":[{"pos":[0,39],"content":"The new time zone's standard time name.","nodes":[{"content":"The new time zone's standard time name.","pos":[0,39]}]}],"pos":[75025,75065],"yaml":true},{"content":"The daylight saving time name of the new time zone.","nodes":[{"pos":[0,51],"content":"The daylight saving time name of the new time zone.","nodes":[{"content":"The daylight saving time name of the new time zone.","pos":[0,51]}]}],"pos":[75140,75192],"yaml":true},{"content":"An array that augments the base UTC offset for a particular period.","nodes":[{"pos":[0,67],"content":"An array that augments the base UTC offset for a particular period.","nodes":[{"content":"An array that augments the base UTC offset for a particular period.","pos":[0,67]}]}],"pos":[75286,75354],"yaml":true},{"content":"A <xref href=\"System.TimeZoneInfo\"></xref> object that represents the new time zone.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object that represents the new time zone.","source":"A <xref href=\"System.TimeZoneInfo\"></xref> object that represents the new time zone."}],"pos":[75417,75502],"yaml":true},{"content":"The <code>id</code> parameter is `null`.","nodes":[{"pos":[0,40],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>id</code> parameter is `null`."}],"pos":[75672,75713],"yaml":true},{"content":"The <code>id</code> parameter is an empty string (\"\").  \n  \n -or-  \n  \n The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.","nodes":[{"pos":[0,54],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an empty string (\"\").","source":"The <code>id</code> parameter is an empty string (\"\")."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,158],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUtcOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not represent a whole number of minutes.","source":"The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes."}],"pos":[75807,75974],"yaml":true},{"content":"The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.","nodes":[{"pos":[0,89],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUtcOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than 14 hours or less than -14 hours.","source":"The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours."}],"pos":[76088,76178],"yaml":true},{"content":"The adjustment rules specified in the <code>adjustmentRules</code> parameter overlap.  \n  \n -or-  \n  \n The adjustment rules specified in the <code>adjustmentRules</code> parameter are not in chronological order.  \n  \n -or-  \n  \n One or more elements in <code>adjustmentRules</code> are `null`.  \n  \n -or-  \n  \n A date can have multiple adjustment rules applied to it.  \n  \n -or-  \n  \n The sum of the <code>baseUtcOffset</code> parameter and the <xref href=\"System.TimeZoneInfo.AdjustmentRule.DaylightDelta\"></xref> value of one or more objects in the <code>adjustmentRules</code> array is greater than 14 hours or less than -14 hours.","nodes":[{"pos":[0,85],"content":"The adjustment rules specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">adjustmentRules</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter overlap.","source":"The adjustment rules specified in the <code>adjustmentRules</code> parameter overlap."},{"pos":[92,96],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[103,211],"content":"The adjustment rules specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">adjustmentRules</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter are not in chronological order.","source":"The adjustment rules specified in the <code>adjustmentRules</code> parameter are not in chronological order."},{"pos":[218,222],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[229,293],"content":"One or more elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">adjustmentRules</ph><ept id=\"p1\">&lt;/code&gt;</ept> are <ph id=\"ph2\">`null`</ph>.","source":"One or more elements in <code>adjustmentRules</code> are `null`."},{"pos":[300,304],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[311,367],"content":"A date can have multiple adjustment rules applied to it.","nodes":[{"content":"A date can have multiple adjustment rules applied to it.","pos":[0,56]}]},{"pos":[374,378],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[385,634],"content":"The sum of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUtcOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter and the <ph id=\"ph2\">&lt;xref href=\"System.TimeZoneInfo.AdjustmentRule.DaylightDelta\"&gt;&lt;/xref&gt;</ph> value of one or more objects in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">adjustmentRules</ph><ept id=\"p2\">&lt;/code&gt;</ept> array is greater than 14 hours or less than -14 hours.","source":"The sum of the <code>baseUtcOffset</code> parameter and the <xref href=\"System.TimeZoneInfo.AdjustmentRule.DaylightDelta\"></xref> value of one or more objects in the <code>adjustmentRules</code> array is greater than 14 hours or less than -14 hours."}],"pos":[76286,76941],"yaml":true},{"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.","nodes":[{"pos":[0,297],"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.","nodes":[{"content":"Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.","pos":[0,297]}]}],"pos":[78692,78990],"yaml":true},{"content":"You can use this overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.  \n  \n The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.  \n  \n|CreateCustomTimeZone parameter|TimeZoneInfo property|  \n|------------------------------------|---------------------------|  \n|`id`|<xref:System.TimeZoneInfo.Id%2A>|  \n|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  \n|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  \n|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  \n|`daylightDisplayName`|<xref:System.TimeZoneInfo.DaylightName%2A> if `disableDaylightSavingTime` is `false`; <xref:System.String.Empty?displayProperty=fullName> if `disableDaylightSavingTime` is `true`.|  \n|`adjustmentRules`|An array of <xref:System.TimeZoneInfo.AdjustmentRule> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `false`; an empty array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `true`.|  \n|`disableDaylightSavingTime`|Not <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>.|  \n  \n Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  \n  \n```  \n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \n(GMT-02:00) Mid-Atlantic  \n(GMT-07:00) Mountain Time (US & Canada)  \n```  \n  \n A time zone's adjustment rules are defined by doing the following:  \n  \n1.  Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition rules for each adjustment rule.  \n  \n2.  Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.  \n  \n3.  Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.  \n  \n If `disableDaylightSavingTime` parameter is `false`, the operation of this method is identical to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> overload. If `disableDaylightSavingTime` is `true`, the returned object includes no adjustment rules and a <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is an empty string.","nodes":[{"pos":[0,228],"content":"You can use this overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.","nodes":[{"content":"You can use this overload of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.","pos":[0,228],"source":"You can use this overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time."}]},{"pos":[235,503],"content":"The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.","nodes":[{"content":"The following table shows the relationship between the parameters that are provided to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> method and the members of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object that are returned by the method call.","pos":[0,268],"source":"The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call."}]},{"pos":[510,540],"content":"CreateCustomTimeZone parameter","nodes":[{"content":"CreateCustomTimeZone parameter","pos":[0,30]}]},{"pos":[541,562],"content":"TimeZoneInfo property","nodes":[{"content":"TimeZoneInfo property","pos":[0,21]}]},{"pos":[641,673],"content":"<xref:System.TimeZoneInfo.Id%2A>","nodes":[]},{"pos":[694,737],"content":"<xref:System.TimeZoneInfo.BaseUtcOffset%2A>","nodes":[]},{"pos":[756,797],"content":"<xref:System.TimeZoneInfo.DisplayName%2A>","nodes":[]},{"pos":[824,866],"content":"<xref:System.TimeZoneInfo.StandardName%2A>","nodes":[]},{"pos":[893,1072],"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.DaylightName%2A&gt;</ph> if <ph id=\"ph2\">`disableDaylightSavingTime`</ph> is <ph id=\"ph3\">`false`</ph>; <ph id=\"ph4\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph> if <ph id=\"ph5\">`disableDaylightSavingTime`</ph> is <ph id=\"ph6\">`true`</ph>.","source":"<xref:System.TimeZoneInfo.DaylightName%2A> if `disableDaylightSavingTime` is `false`; <xref:System.String.Empty?displayProperty=fullName> if `disableDaylightSavingTime` is `true`."},{"pos":[1095,1400],"content":"An array of <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.AdjustmentRule&gt;</ph> objects returned by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A&gt;</ph> method if <ph id=\"ph3\">`disableDaylightSavingTime`</ph> is <ph id=\"ph4\">`false`</ph>; an empty array returned by the <ph id=\"ph5\">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A&gt;</ph> method if <ph id=\"ph6\">`disableDaylightSavingTime`</ph> is <ph id=\"ph7\">`true`</ph>.","source":"An array of <xref:System.TimeZoneInfo.AdjustmentRule> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `false`; an empty array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `true`."},{"pos":[1433,1494],"content":"Not <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>.","nodes":[{"content":"Not <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A&gt;</ph>.","pos":[0,61],"source":"Not <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>."}]},{"pos":[1502,2097],"content":"Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:","nodes":[{"content":"Typically, the time zone's standard time name and its identifier are the same.","pos":[0,78]},{"content":"However, the length of the time zone's identifier should not exceed 32 characters.","pos":[79,161]},{"content":"The string passed to the <ph id=\"ph1\">`displayName`</ph> parameter follows a fairly standard format.","pos":[162,244],"source":" The string passed to the `displayName` parameter follows a fairly standard format."},{"content":"The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.","pos":[245,436]},{"content":"This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.","pos":[437,582]},{"content":"For example:","pos":[583,595]}]},{"pos":[2234,2300],"content":"A time zone's adjustment rules are defined by doing the following:","nodes":[{"content":"A time zone's adjustment rules are defined by doing the following:","pos":[0,66]}]},{"pos":[2310,2552],"content":"Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition rules for each adjustment rule.","nodes":[{"content":"Calling either the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A&gt;</ph> method to define the starting and ending transition rules for each adjustment rule.","pos":[0,242],"source":"Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition rules for each adjustment rule."}]},{"pos":[2562,2672],"content":"Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A&gt;</ph> method for each adjustment rule.","pos":[0,110],"source":"Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule."}]},{"pos":[2682,2779],"content":"Assigning the adjustment rules to an array that can be passed as the <ph id=\"ph1\">`adjustmentRules`</ph> parameter.","source":"Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter."},{"pos":[2786,3154],"content":"If `disableDaylightSavingTime` parameter is `false`, the operation of this method is identical to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> overload. If `disableDaylightSavingTime` is `true`, the returned object includes no adjustment rules and a <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is an empty string.","nodes":[{"content":"If <ph id=\"ph1\">`disableDaylightSavingTime`</ph> parameter is <ph id=\"ph2\">`false`</ph>, the operation of this method is identical to the <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName&gt;</ph> overload.","pos":[0,187],"source":"If `disableDaylightSavingTime` parameter is `false`, the operation of this method is identical to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> overload."},{"content":"If <ph id=\"ph1\">`disableDaylightSavingTime`</ph> is <ph id=\"ph2\">`true`</ph>, the returned object includes no adjustment rules and a <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.DaylightName%2A&gt;</ph> property whose value is an empty string.","pos":[188,368],"source":" If `disableDaylightSavingTime` is `true`, the returned object includes no adjustment rules and a <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is an empty string."}]}],"pos":[79001,82188],"yaml":true,"extradata":"MT"},{"content":"The time zone's identifier.","nodes":[{"pos":[0,27],"content":"The time zone's identifier.","nodes":[{"content":"The time zone's identifier.","pos":[0,27]}]}],"pos":[83358,83386],"yaml":true},{"content":"A <xref href=\"System.TimeSpan\"></xref> object that represents the time difference between this time zone and Coordinated Universal Time (UTC).","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> object that represents the time difference between this time zone and Coordinated Universal Time (UTC).","source":"A <xref href=\"System.TimeSpan\"></xref> object that represents the time difference between this time zone and Coordinated Universal Time (UTC)."}],"pos":[83457,83600],"yaml":true},{"content":"The display name of the new time zone.","nodes":[{"pos":[0,38],"content":"The display name of the new time zone.","nodes":[{"content":"The display name of the new time zone.","pos":[0,38]}]}],"pos":[83667,83706],"yaml":true},{"content":"The standard time name of the new time zone.","nodes":[{"pos":[0,44],"content":"The standard time name of the new time zone.","nodes":[{"content":"The standard time name of the new time zone.","pos":[0,44]}]}],"pos":[83781,83826],"yaml":true},{"content":"The daylight saving time name of the new time zone.","nodes":[{"pos":[0,51],"content":"The daylight saving time name of the new time zone.","nodes":[{"content":"The daylight saving time name of the new time zone.","pos":[0,51]}]}],"pos":[83901,83953],"yaml":true},{"content":"An array of <xref href=\"System.TimeZoneInfo.AdjustmentRule\"></xref> objects that augment the base UTC offset for a particular period.","nodes":[{"pos":[0,133],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo.AdjustmentRule\"&gt;&lt;/xref&gt;</ph> objects that augment the base UTC offset for a particular period.","source":"An array of <xref href=\"System.TimeZoneInfo.AdjustmentRule\"></xref> objects that augment the base UTC offset for a particular period."}],"pos":[84047,84181],"yaml":true},{"content":"`true` to discard any daylight saving time-related information present in <code>adjustmentRules</code> with the new object; otherwise, `false`.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> to discard any daylight saving time-related information present in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">adjustmentRules</ph><ept id=\"p1\">&lt;/code&gt;</ept> with the new object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to discard any daylight saving time-related information present in <code>adjustmentRules</code> with the new object; otherwise, `false`."}],"pos":[84263,84409],"yaml":true},{"content":"The new time zone. If the <code>disableDaylightSavingTime</code> parameter is `true`, the returned object has no daylight saving time data.","nodes":[{"pos":[0,139],"content":"The new time zone. If the <code>disableDaylightSavingTime</code> parameter is `true`, the returned object has no daylight saving time data.","nodes":[{"content":"The new time zone.","pos":[0,18]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">disableDaylightSavingTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`true`</ph>, the returned object has no daylight saving time data.","pos":[19,139],"source":" If the <code>disableDaylightSavingTime</code> parameter is `true`, the returned object has no daylight saving time data."}]}],"pos":[84472,84612],"yaml":true},{"content":"The <code>id</code> parameter is `null`.","nodes":[{"pos":[0,40],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>id</code> parameter is `null`."}],"pos":[84782,84823],"yaml":true},{"content":"The <code>id</code> parameter is an empty string (\"\").  \n  \n -or-  \n  \n The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.","nodes":[{"pos":[0,54],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an empty string (\"\").","source":"The <code>id</code> parameter is an empty string (\"\")."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,158],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUtcOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not represent a whole number of minutes.","source":"The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes."}],"pos":[84917,85084],"yaml":true},{"content":"The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.","nodes":[{"pos":[0,89],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUtcOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than 14 hours or less than -14 hours.","source":"The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours."}],"pos":[85198,85288],"yaml":true},{"content":"The adjustment rules specified in the <code>adjustmentRules</code> parameter overlap.  \n  \n -or-  \n  \n The adjustment rules specified in the <code>adjustmentRules</code> parameter are not in chronological order.  \n  \n -or-  \n  \n One or more elements in <code>adjustmentRules</code> are `null`.  \n  \n -or-  \n  \n A date can have multiple adjustment rules applied to it.  \n  \n -or-  \n  \n The sum of the <code>baseUtcOffset</code> parameter and the <xref href=\"System.TimeZoneInfo.AdjustmentRule.DaylightDelta\"></xref> value of one or more objects in the <code>adjustmentRules</code> array is greater than 14 hours or less than -14 hours.","nodes":[{"pos":[0,85],"content":"The adjustment rules specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">adjustmentRules</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter overlap.","source":"The adjustment rules specified in the <code>adjustmentRules</code> parameter overlap."},{"pos":[92,96],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[103,211],"content":"The adjustment rules specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">adjustmentRules</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter are not in chronological order.","source":"The adjustment rules specified in the <code>adjustmentRules</code> parameter are not in chronological order."},{"pos":[218,222],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[229,293],"content":"One or more elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">adjustmentRules</ph><ept id=\"p1\">&lt;/code&gt;</ept> are <ph id=\"ph2\">`null`</ph>.","source":"One or more elements in <code>adjustmentRules</code> are `null`."},{"pos":[300,304],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[311,367],"content":"A date can have multiple adjustment rules applied to it.","nodes":[{"content":"A date can have multiple adjustment rules applied to it.","pos":[0,56]}]},{"pos":[374,378],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[385,634],"content":"The sum of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUtcOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter and the <ph id=\"ph2\">&lt;xref href=\"System.TimeZoneInfo.AdjustmentRule.DaylightDelta\"&gt;&lt;/xref&gt;</ph> value of one or more objects in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">adjustmentRules</ph><ept id=\"p2\">&lt;/code&gt;</ept> array is greater than 14 hours or less than -14 hours.","source":"The sum of the <code>baseUtcOffset</code> parameter and the <xref href=\"System.TimeZoneInfo.AdjustmentRule.DaylightDelta\"></xref> value of one or more objects in the <code>adjustmentRules</code> array is greater than 14 hours or less than -14 hours."}],"pos":[85396,86051],"yaml":true},{"content":"Gets the display name for the current time zone's daylight saving time.","nodes":[{"pos":[0,71],"content":"Gets the display name for the current time zone's daylight saving time.","nodes":[{"content":"Gets the display name for the current time zone's daylight saving time.","pos":[0,71]}]}],"pos":[87135,87207],"yaml":true},{"content":"The display name is localized based on the culture installed with the Windows operating system.  \n  \n A <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is not <xref:System.String?displayProperty=fullName> or `null` does not necessarily indicate that the time zone supports daylight saving time. To determine whether the time zone supports daylight saving time, check the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.  \n  \n In most cases, the <xref:System.TimeZoneInfo.DaylightName%2A> property of time zones defined in the registry is not <xref:System.String.Empty?displayProperty=fullName> or `null`. However, the <xref:System.TimeZoneInfo.DaylightName%2A> property of custom time zones can be set to <xref:System.String.Empty?displayProperty=fullName>. This occurs when custom time zones are created by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=fullName> overload and the `disableDaylightSavingTime` parameter is `true`. Therefore, your code should never assume that the value of the <xref:System.TimeZoneInfo.DaylightName%2A> property is not `null` or empty.  \n  \n The <xref:System.TimeZoneInfo.DaylightName%2A> property is equivalent to the <xref:System.TimeZone.DaylightName%2A> property of the <xref:System.TimeZone> class.","nodes":[{"pos":[0,95],"content":"The display name is localized based on the culture installed with the Windows operating system.","nodes":[{"content":"The display name is localized based on the culture installed with the Windows operating system.","pos":[0,95]}]},{"pos":[102,466],"content":"A <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is not <xref:System.String?displayProperty=fullName> or `null` does not necessarily indicate that the time zone supports daylight saving time. To determine whether the time zone supports daylight saving time, check the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.DaylightName%2A&gt;</ph> property whose value is not <ph id=\"ph2\">&lt;xref:System.String?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">`null`</ph> does not necessarily indicate that the time zone supports daylight saving time.","pos":[0,208],"source":"A <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is not <xref:System.String?displayProperty=fullName> or `null` does not necessarily indicate that the time zone supports daylight saving time."},{"content":"To determine whether the time zone supports daylight saving time, check the value of its <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A&gt;</ph> property.","pos":[209,364],"source":" To determine whether the time zone supports daylight saving time, check the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property."}]},{"pos":[473,1430],"content":"In most cases, the <xref:System.TimeZoneInfo.DaylightName%2A> property of time zones defined in the registry is not <xref:System.String.Empty?displayProperty=fullName> or `null`. However, the <xref:System.TimeZoneInfo.DaylightName%2A> property of custom time zones can be set to <xref:System.String.Empty?displayProperty=fullName>. This occurs when custom time zones are created by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=fullName> overload and the `disableDaylightSavingTime` parameter is `true`. Therefore, your code should never assume that the value of the <xref:System.TimeZoneInfo.DaylightName%2A> property is not `null` or empty.","nodes":[{"content":"In most cases, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.DaylightName%2A&gt;</ph> property of time zones defined in the registry is not <ph id=\"ph2\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">`null`</ph>.","pos":[0,178],"source":"In most cases, the <xref:System.TimeZoneInfo.DaylightName%2A> property of time zones defined in the registry is not <xref:System.String.Empty?displayProperty=fullName> or `null`."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.DaylightName%2A&gt;</ph> property of custom time zones can be set to <ph id=\"ph2\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.","pos":[179,331],"source":" However, the <xref:System.TimeZoneInfo.DaylightName%2A> property of custom time zones can be set to <xref:System.String.Empty?displayProperty=fullName>."},{"content":"This occurs when custom time zones are created by the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=fullName&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> overload and the <ph id=\"ph3\">`disableDaylightSavingTime`</ph> parameter is <ph id=\"ph4\">`true`</ph>.","pos":[332,818],"source":" This occurs when custom time zones are created by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=fullName> overload and the `disableDaylightSavingTime` parameter is `true`."},{"content":"Therefore, your code should never assume that the value of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.DaylightName%2A&gt;</ph> property is not <ph id=\"ph2\">`null`</ph> or empty.","pos":[819,957],"source":" Therefore, your code should never assume that the value of the <xref:System.TimeZoneInfo.DaylightName%2A> property is not `null` or empty."}]},{"pos":[1437,1598],"content":"The <xref:System.TimeZoneInfo.DaylightName%2A> property is equivalent to the <xref:System.TimeZone.DaylightName%2A> property of the <xref:System.TimeZone> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.DaylightName%2A&gt;</ph> property is equivalent to the <ph id=\"ph2\">&lt;xref:System.TimeZone.DaylightName%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.TimeZone&gt;</ph> class.","pos":[0,161],"source":"The <xref:System.TimeZoneInfo.DaylightName%2A> property is equivalent to the <xref:System.TimeZone.DaylightName%2A> property of the <xref:System.TimeZone> class."}]}],"pos":[87218,88825],"yaml":true,"extradata":"MT"},{"content":"The display name for the time zone's daylight saving time.","nodes":[{"pos":[0,58],"content":"The display name for the time zone's daylight saving time.","nodes":[{"content":"The display name for the time zone's daylight saving time.","pos":[0,58]}]}],"pos":[89575,89634],"yaml":true},{"content":"Gets the general display name that represents the time zone.","nodes":[{"pos":[0,60],"content":"Gets the general display name that represents the time zone.","nodes":[{"content":"Gets the general display name that represents the time zone.","pos":[0,60]}]}],"pos":[91119,91180],"yaml":true},{"content":"The display name is localized based on the culture installed with the Windows operating system.  \n  \n Time zone display names for Windows system time zones follow a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.  This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone. For example:  \n  \n```  \n(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London  \n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \n(GMT-02:00) Mid-Atlantic  \n(GMT-07:00) Mountain Time (US & Canada)  \n```","nodes":[{"pos":[0,95],"content":"The display name is localized based on the culture installed with the Windows operating system.","nodes":[{"content":"The display name is localized based on the culture installed with the Windows operating system.","pos":[0,95]}]},{"pos":[102,614],"content":"Time zone display names for Windows system time zones follow a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.  This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone. For example:","nodes":[{"content":"Time zone display names for Windows system time zones follow a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.  This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone. For example:","pos":[0,512],"nodes":[{"content":"Time zone display names for Windows system time zones follow a fairly standard format.","pos":[0,86]},{"content":"The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.","pos":[87,278]},{"content":"For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.","pos":[279,369]},{"content":"This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone.","pos":[371,499]},{"content":"For example:","pos":[500,512]}]}]}],"pos":[91191,92011],"yaml":true,"extradata":"MT"},{"content":"The time zone's general display name.","nodes":[{"pos":[0,37],"content":"The time zone's general display name.","nodes":[{"content":"The time zone's general display name.","pos":[0,37]}]}],"pos":[92698,92736],"yaml":true},{"content":"Determines whether the current <xref href=\"System.TimeZoneInfo\"></xref> object and another object are equal.","nodes":[{"pos":[0,108],"content":"Determines whether the current <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object and another object are equal.","source":"Determines whether the current <xref href=\"System.TimeZoneInfo\"></xref> object and another object are equal."}],"pos":[94257,94366],"yaml":true},{"content":"This method converts or casts `obj` to a <xref:System.TimeZoneInfo> object and compares it with the current instance. The test for equality is based on a comparison of values. The current <xref:System.TimeZoneInfo> instance and `obj` are considered to be equal under the following conditions:  \n  \n-   The run-time type of `obj` is <xref:System.TimeZoneInfo>.  \n  \n-   The two objects have the same <xref:System.TimeZoneInfo.Id%2A> property value.  \n  \n-   The two objects have the same adjustment rules.  \n  \n If `obj` is `null`, this method returns `false`.","nodes":[{"pos":[0,292],"content":"This method converts or casts `obj` to a <xref:System.TimeZoneInfo> object and compares it with the current instance. The test for equality is based on a comparison of values. The current <xref:System.TimeZoneInfo> instance and `obj` are considered to be equal under the following conditions:","nodes":[{"content":"This method converts or casts <ph id=\"ph1\">`obj`</ph> to a <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object and compares it with the current instance.","pos":[0,117],"source":"This method converts or casts `obj` to a <xref:System.TimeZoneInfo> object and compares it with the current instance."},{"content":"The test for equality is based on a comparison of values.","pos":[118,175]},{"content":"The current <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> instance and <ph id=\"ph2\">`obj`</ph> are considered to be equal under the following conditions:","pos":[176,292],"source":" The current <xref:System.TimeZoneInfo> instance and `obj` are considered to be equal under the following conditions:"}]},{"pos":[302,359],"content":"The run-time type of <ph id=\"ph1\">`obj`</ph> is <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph>.","source":"The run-time type of `obj` is <xref:System.TimeZoneInfo>."},{"pos":[369,447],"content":"The two objects have the same <xref:System.TimeZoneInfo.Id%2A> property value.","nodes":[{"content":"The two objects have the same <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Id%2A&gt;</ph> property value.","pos":[0,78],"source":"The two objects have the same <xref:System.TimeZoneInfo.Id%2A> property value."}]},{"pos":[457,504],"content":"The two objects have the same adjustment rules.","nodes":[{"content":"The two objects have the same adjustment rules.","pos":[0,47]}]},{"pos":[511,559],"content":"If <ph id=\"ph1\">`obj`</ph> is <ph id=\"ph2\">`null`</ph>, this method returns <ph id=\"ph3\">`false`</ph>.","source":"If `obj` is `null`, this method returns `false`."}],"pos":[94377,94947],"yaml":true,"extradata":"MT"},{"content":"A second object to compare with the current object.","nodes":[{"pos":[0,51],"content":"A second object to compare with the current object.","nodes":[{"content":"A second object to compare with the current object.","pos":[0,51]}]}],"pos":[95556,95608],"yaml":true},{"content":"`true` if <code>obj</code> is a <xref href=\"System.TimeZoneInfo\"></xref> object that is equal to the current instance; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object that is equal to the current instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is a <xref href=\"System.TimeZoneInfo\"></xref> object that is equal to the current instance; otherwise, `false`."}],"pos":[95666,95807],"yaml":true},{"content":"Determines whether the current <xref href=\"System.TimeZoneInfo\"></xref> object and another <xref href=\"System.TimeZoneInfo\"></xref> object are equal.","nodes":[{"pos":[0,149],"content":"Determines whether the current <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object and another <ph id=\"ph2\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object are equal.","source":"Determines whether the current <xref href=\"System.TimeZoneInfo\"></xref> object and another <xref href=\"System.TimeZoneInfo\"></xref> object are equal."}],"pos":[97015,97165],"yaml":true},{"content":"Equality is based on a comparison of values. Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:  \n  \n-   The value of their <xref:System.TimeZoneInfo.Id%2A> property is the same.  \n  \n-   They have the same adjustment rules.  \n  \n <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> returns the Boolean value that results from evaluating the following expression:  \n  \n ```csharp \n other.Id == this.Id && HasSameRules(other);  \n ```\n  \n ```vb\n other.Id = me.Id AndAlso HasSameRules(other)  \n ```\n\n If the `other` parameter is an uninitialized <xref:System.TimeZoneInfo> object, this method returns `false`.","nodes":[{"pos":[0,142],"content":"Equality is based on a comparison of values. Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:","nodes":[{"content":"Equality is based on a comparison of values. Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:","pos":[0,142],"nodes":[{"content":"Equality is based on a comparison of values.","pos":[0,44]},{"content":"Two <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects are considered to be equal under the following conditions:","pos":[45,142],"source":" Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:"}]}]},{"pos":[152,225],"content":"The value of their <xref:System.TimeZoneInfo.Id%2A> property is the same.","nodes":[{"content":"The value of their <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Id%2A&gt;</ph> property is the same.","pos":[0,73],"source":"The value of their <xref:System.TimeZoneInfo.Id%2A> property is the same."}]},{"pos":[235,271],"content":"They have the same adjustment rules.","nodes":[{"content":"They have the same adjustment rules.","pos":[0,36]}]},{"pos":[278,442],"content":"<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> returns the Boolean value that results from evaluating the following expression:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> returns the Boolean value that results from evaluating the following expression:","pos":[0,164],"source":"<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> returns the Boolean value that results from evaluating the following expression:"}]},{"pos":[577,685],"content":"If the <ph id=\"ph1\">`other`</ph> parameter is an uninitialized <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object, this method returns <ph id=\"ph3\">`false`</ph>.","source":"If the `other` parameter is an uninitialized <xref:System.TimeZoneInfo> object, this method returns `false`."}],"pos":[97176,97880],"yaml":true,"extradata":"MT"},{"content":"A second object to compare with the current object.","nodes":[{"pos":[0,51],"content":"A second object to compare with the current object.","nodes":[{"content":"A second object to compare with the current object.","pos":[0,51]}]}],"pos":[98508,98560],"yaml":true},{"content":"`true` if the two <xref href=\"System.TimeZoneInfo\"></xref> objects are equal; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> objects are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.TimeZoneInfo\"></xref> objects are equal; otherwise, `false`."}],"pos":[98618,98718],"yaml":true},{"content":"Retrieves a <xref href=\"System.TimeZoneInfo\"></xref> object from the registry based on its identifier.","nodes":[{"pos":[0,102],"content":"Retrieves a <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object from the registry based on its identifier.","source":"Retrieves a <xref href=\"System.TimeZoneInfo\"></xref> object from the registry based on its identifier."}],"pos":[100330,100433],"yaml":true},{"content":"The `id` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `id` with time zone identifiers is case-insensitive. If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <xref:System.TimeZoneInfo> objects returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method.  \n  \n <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> tries to match `id` to the subkey names of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones branch of the registry under Windows XP and Windows Vista. This branch does not necessarily contain a comprehensive list of time zone identifiers. If required by an application, you can create a particular time zone either by calling one of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method or by calling <xref:System.TimeZoneInfo.FromSerializedString%2A> to deserialize a <xref:System.TimeZoneInfo> object that represents the required time zone. However, time zones created by these method calls are not included in the registry and cannot be retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method. These custom time zones can be accessed only through the object reference returned by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> or <xref:System.TimeZoneInfo.FromSerializedString%2A> method call.","nodes":[{"pos":[0,466],"content":"The `id` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `id` with time zone identifiers is case-insensitive. If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <xref:System.TimeZoneInfo> objects returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">`id`</ph> parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of <ph id=\"ph2\">`id`</ph> with time zone identifiers is case-insensitive.","pos":[0,215],"source":"The `id` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `id` with time zone identifiers is case-insensitive."},{"content":"If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects returned by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetSystemTimeZones%2A&gt;</ph> method.","pos":[216,466],"source":" If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <xref:System.TimeZoneInfo> objects returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method."}]},{"pos":[473,1509],"content":"<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> tries to match `id` to the subkey names of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones branch of the registry under Windows XP and Windows Vista. This branch does not necessarily contain a comprehensive list of time zone identifiers. If required by an application, you can create a particular time zone either by calling one of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method or by calling <xref:System.TimeZoneInfo.FromSerializedString%2A> to deserialize a <xref:System.TimeZoneInfo> object that represents the required time zone. However, time zones created by these method calls are not included in the registry and cannot be retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method. These custom time zones can be accessed only through the object reference returned by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> or <xref:System.TimeZoneInfo.FromSerializedString%2A> method call.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> tries to match <ph id=\"ph2\">`id`</ph> to the subkey names of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones branch of the registry under Windows XP and Windows Vista.","pos":[0,233],"source":"<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> tries to match `id` to the subkey names of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones branch of the registry under Windows XP and Windows Vista."},{"content":"This branch does not necessarily contain a comprehensive list of time zone identifiers.","pos":[234,321]},{"content":"If required by an application, you can create a particular time zone either by calling one of the overloads of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method or by calling <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.FromSerializedString%2A&gt;</ph> to deserialize a <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo&gt;</ph> object that represents the required time zone.","pos":[322,650],"source":" If required by an application, you can create a particular time zone either by calling one of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method or by calling <xref:System.TimeZoneInfo.FromSerializedString%2A> to deserialize a <xref:System.TimeZoneInfo> object that represents the required time zone."},{"content":"However, time zones created by these method calls are not included in the registry and cannot be retrieved using the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> method.","pos":[651,828],"source":" However, time zones created by these method calls are not included in the registry and cannot be retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method."},{"content":"These custom time zones can be accessed only through the object reference returned by the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.FromSerializedString%2A&gt;</ph> method call.","pos":[829,1036],"source":" These custom time zones can be accessed only through the object reference returned by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> or <xref:System.TimeZoneInfo.FromSerializedString%2A> method call."}]}],"pos":[100444,101963],"yaml":true,"extradata":"MT"},{"content":"The time zone identifier, which corresponds to the <xref href=\"System.TimeZoneInfo.Id\"></xref> property.","nodes":[{"pos":[0,104],"content":"The time zone identifier, which corresponds to the <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo.Id\"&gt;&lt;/xref&gt;</ph> property.","source":"The time zone identifier, which corresponds to the <xref href=\"System.TimeZoneInfo.Id\"></xref> property."}],"pos":[102748,102853],"yaml":true},{"content":"An object whose identifier is the value of the <code>id</code> parameter.","nodes":[{"pos":[0,73],"content":"An object whose identifier is the value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An object whose identifier is the value of the <code>id</code> parameter."}],"pos":[102916,102990],"yaml":true},{"content":"The system does not have enough memory to hold information about the time zone.","nodes":[{"pos":[0,79],"content":"The system does not have enough memory to hold information about the time zone.","nodes":[{"content":"The system does not have enough memory to hold information about the time zone.","pos":[0,79]}]}],"pos":[103160,103240],"yaml":true},{"content":"The <code>id</code> parameter is `null`.","nodes":[{"pos":[0,40],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>id</code> parameter is `null`."}],"pos":[103342,103383],"yaml":true},{"content":"The time zone identifier specified by <code>id</code> was not found. This means that a registry key whose name matches <code>id</code> does not exist, or that the key exists but does not contain any time zone data.","nodes":[{"pos":[0,214],"content":"The time zone identifier specified by <code>id</code> was not found. This means that a registry key whose name matches <code>id</code> does not exist, or that the key exists but does not contain any time zone data.","nodes":[{"content":"The time zone identifier specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> was not found.","pos":[0,68],"source":"The time zone identifier specified by <code>id</code> was not found."},{"content":"This means that a registry key whose name matches <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist, or that the key exists but does not contain any time zone data.","pos":[69,214],"source":" This means that a registry key whose name matches <code>id</code> does not exist, or that the key exists but does not contain any time zone data."}]}],"pos":[103493,103708],"yaml":true},{"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","nodes":[{"pos":[0,121],"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","nodes":[{"content":"The process does not have the permissions required to read from the registry key that contains the time zone information.","pos":[0,121]}]}],"pos":[103820,103942],"yaml":true},{"content":"The time zone identifier was found, but the registry data is corrupted.","nodes":[{"pos":[0,71],"content":"The time zone identifier was found, but the registry data is corrupted.","nodes":[{"content":"The time zone identifier was found, but the registry data is corrupted.","pos":[0,71]}]}],"pos":[104050,104122],"yaml":true},{"content":"Deserializes a string to re-create an original serialized <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,106],"content":"Deserializes a string to re-create an original serialized <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Deserializes a string to re-create an original serialized <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[105545,105652],"yaml":true},{"content":"There is an alternative to providing all the code required to create a time zone that is not found in the registry. You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string. The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method.","nodes":[{"pos":[0,484],"content":"There is an alternative to providing all the code required to create a time zone that is not found in the registry. You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string. The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method.","nodes":[{"content":"There is an alternative to providing all the code required to create a time zone that is not found in the registry. You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string. The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method.","pos":[0,484],"nodes":[{"content":"There is an alternative to providing all the code required to create a time zone that is not found in the registry.","pos":[0,115]},{"content":"You can define a custom time zone and either use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ToSerializedString%2A&gt;</ph> method in a standalone executable or use an application's setup program to save the time zone as a string.","pos":[116,324],"source":" You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string."},{"content":"The application can then retrieve this string from its storage location and instantiate it using the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FromSerializedString%2A&gt;</ph> method.","pos":[325,484],"source":" The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method."}]}]}],"pos":[105663,106148],"yaml":true,"extradata":"MT"},{"content":"The string representation of the serialized <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,92],"content":"The string representation of the serialized <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"The string representation of the serialized <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[107019,107112],"yaml":true},{"content":"The original serialized object.","nodes":[{"pos":[0,31],"content":"The original serialized object.","nodes":[{"content":"The original serialized object.","pos":[0,31]}]}],"pos":[107175,107207],"yaml":true},{"content":"The <code>source</code> parameter is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,78],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>source</code> parameter is <xref href=\"System.String.Empty\"></xref>."}],"pos":[107369,107448],"yaml":true},{"content":"The <code>source</code> parameter is a null string.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a null string.","source":"The <code>source</code> parameter is a null string."}],"pos":[107550,107602],"yaml":true},{"content":"The source parameter cannot be deserialized back into a <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,104],"content":"The source parameter cannot be deserialized back into a <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"The source parameter cannot be deserialized back into a <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[107750,107855],"yaml":true},{"content":"Retrieves an array of <xref href=\"System.TimeZoneInfo.AdjustmentRule\"></xref> objects that apply to the current <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,160],"content":"Retrieves an array of <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo.AdjustmentRule\"&gt;&lt;/xref&gt;</ph> objects that apply to the current <ph id=\"ph2\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves an array of <xref href=\"System.TimeZoneInfo.AdjustmentRule\"></xref> objects that apply to the current <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[108979,109140],"yaml":true},{"content":"The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects. Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change). In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=fullName> objects that define when each annual transition to and from standard time occurs.  \n  \n If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <xref:System.Array.Length%2A> – 1).  \n  \n If a time zone has no adjustment rules, the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an empty array (an array whose <xref:System.Array.Length%2A> is zero).  \n  \n Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone. To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.","nodes":[{"pos":[0,528],"content":"The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects. Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change). In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=fullName> objects that define when each annual transition to and from standard time occurs.","nodes":[{"content":"The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects. Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change). In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=fullName> objects that define when each annual transition to and from standard time occurs.","pos":[0,528],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A&gt;</ph> method retrieves an array of <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName&gt;</ph> objects.","pos":[0,157],"source":"The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects."},{"content":"Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change).","pos":[158,344]},{"content":"In addition, two properties return <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.TransitionTime?displayProperty=fullName&gt;</ph> objects that define when each annual transition to and from standard time occurs.","pos":[345,528],"source":" In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=fullName> objects that define when each annual transition to and from standard time occurs."}]}]},{"pos":[535,690],"content":"If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <xref:System.Array.Length%2A> – 1).","nodes":[{"content":"If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <ph id=\"ph1\">&lt;xref:System.Array.Length%2A&gt;</ph> – 1).","pos":[0,155],"source":"If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <xref:System.Array.Length%2A> – 1)."}]},{"pos":[697,875],"content":"If a time zone has no adjustment rules, the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an empty array (an array whose <xref:System.Array.Length%2A> is zero).","nodes":[{"content":"If a time zone has no adjustment rules, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A&gt;</ph> method returns an empty array (an array whose <ph id=\"ph2\">&lt;xref:System.Array.Length%2A&gt;</ph> is zero).","pos":[0,178],"source":"If a time zone has no adjustment rules, the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an empty array (an array whose <xref:System.Array.Length%2A> is zero)."}]},{"pos":[882,1310],"content":"Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone. To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.","nodes":[{"content":"Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone. To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.","pos":[0,428],"nodes":[{"content":"Any modifications to the elements of the array returned by the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A&gt;</ph> method are not reflected in the adjustment rules that belong to a particular time zone.","pos":[0,199],"source":"Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone."},{"content":"To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.","pos":[200,428]}]}]}],"pos":[109151,110470],"yaml":true,"extradata":"MT"},{"content":"An array of objects for this time zone.","nodes":[{"pos":[0,39],"content":"An array of objects for this time zone.","nodes":[{"content":"An array of objects for this time zone.","pos":[0,39]}]}],"pos":[111223,111263],"yaml":true},{"content":"The system does not have enough memory to make an in-memory copy of the adjustment rules.","nodes":[{"pos":[0,89],"content":"The system does not have enough memory to make an in-memory copy of the adjustment rules.","nodes":[{"content":"The system does not have enough memory to make an in-memory copy of the adjustment rules.","pos":[0,89]}]}],"pos":[111429,111519],"yaml":true},{"content":"Returns information about the possible dates and times that an ambiguous date and time can be mapped to.","nodes":[{"pos":[0,104],"content":"Returns information about the possible dates and times that an ambiguous date and time can be mapped to.","nodes":[{"content":"Returns information about the possible dates and times that an ambiguous date and time can be mapped to.","pos":[0,104]}]}],"pos":[112748,112853],"yaml":true},{"content":"The precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.  \n  \n|TimeZoneInfo object type|Kind property value|Behavior|  \n|------------------------------|-------------------------|--------------|  \n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Returns ambiguous time offsets for `dateTime`.|  \n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName>|Converts `dateTime` to the local time, and then returns ambiguous time offsets for that time.|  \n|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>|Any value.|Throws an <xref:System.ArgumentException>.|  \n|Any other time zone.|<xref:System.DateTimeKind.Local> or <xref:System.DateTimeKind?displayProperty=fullName>|Converts `dateTime` to the specified time zone, and then determines whether that time is ambiguous.|  \n|Any other time zone.|<xref:System.DateTimeKind?displayProperty=fullName>|Determines whether `dateTime` is ambiguous in the specified time zone.|  \n  \n The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined. However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property. To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).","nodes":[{"pos":[0,188],"content":"The precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.","nodes":[{"content":"The precise behavior of this method depends on the relationship between the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object, as the following table shows.","pos":[0,188],"source":"The precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows."}]},{"pos":[195,219],"content":"TimeZoneInfo object type","nodes":[{"content":"TimeZoneInfo object type","pos":[0,24]}]},{"pos":[220,239],"content":"Kind property value","nodes":[{"content":"Kind property value","pos":[0,19]}]},{"pos":[240,248],"content":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"pos":[329,389],"content":"<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>","nodes":[]},{"pos":[390,496],"content":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>","pos":[0,106],"source":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>"}]},{"pos":[497,543],"content":"Returns ambiguous time offsets for <ph id=\"ph1\">`dateTime`</ph>.","source":"Returns ambiguous time offsets for `dateTime`."},{"pos":[548,608],"content":"<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>","nodes":[]},{"pos":[609,660],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[661,754],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the local time, and then returns ambiguous time offsets for that time.","source":"Converts `dateTime` to the local time, and then returns ambiguous time offsets for that time."},{"pos":[759,817],"content":"<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>","nodes":[]},{"pos":[818,828],"content":"Any value.","nodes":[{"content":"Any value.","pos":[0,10]}]},{"pos":[829,871],"content":"Throws an <xref:System.ArgumentException>.","nodes":[{"content":"Throws an <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[0,42],"source":"Throws an <xref:System.ArgumentException>."}]},{"pos":[876,896],"content":"Any other time zone.","nodes":[{"content":"Any other time zone.","pos":[0,20]}]},{"pos":[897,984],"content":"<xref:System.DateTimeKind.Local> or <xref:System.DateTimeKind?displayProperty=fullName>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeKind.Local&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>","pos":[0,87],"source":"<xref:System.DateTimeKind.Local> or <xref:System.DateTimeKind?displayProperty=fullName>"}]},{"pos":[985,1084],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the specified time zone, and then determines whether that time is ambiguous.","source":"Converts `dateTime` to the specified time zone, and then determines whether that time is ambiguous."},{"pos":[1089,1109],"content":"Any other time zone.","nodes":[{"content":"Any other time zone.","pos":[0,20]}]},{"pos":[1110,1161],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1162,1232],"content":"Determines whether <ph id=\"ph1\">`dateTime`</ph> is ambiguous in the specified time zone.","source":"Determines whether `dateTime` is ambiguous in the specified time zone."},{"pos":[1240,1678],"content":"The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined. However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property. To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).","nodes":[{"content":"The order of <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> objects in the array returned by this method is undefined.","pos":[0,94],"source":"The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined."},{"content":"However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property.","pos":[95,289],"source":" However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property."},{"content":"To map an ambiguous time to a time zone's standard time, see <bpt id=\"p1\">[</bpt>How to: Resolve Ambiguous Times<ept id=\"p1\">](~/docs/standard/datetime/resolve-ambiguous-times.md)</ept>.","pos":[290,438],"source":" To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md)."}]}],"pos":[112864,114555],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[115886,115903],"yaml":true},{"content":"An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.","nodes":[{"pos":[0,135],"content":"An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.","nodes":[{"content":"An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.","pos":[0,135]}]}],"pos":[115964,116100],"yaml":true},{"content":"<code>dateTime</code> is not an ambiguous time.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">&lt;code&gt;dateTime&lt;/code&gt;</ph> is not an ambiguous time.","source":"<code>dateTime</code> is not an ambiguous time."}],"pos":[116265,116313],"yaml":true},{"content":"Returns information about the possible dates and times that an ambiguous date and time can be mapped to.","nodes":[{"pos":[0,104],"content":"Returns information about the possible dates and times that an ambiguous date and time can be mapped to.","nodes":[{"content":"Returns information about the possible dates and times that an ambiguous date and time can be mapped to.","pos":[0,104]}]}],"pos":[117922,118027],"yaml":true},{"content":"The precise behavior of this method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the <xref:System.TimeZoneInfo> object. If the value of the <xref:System.DateTimeOffset.Offset%2A> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets. Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then returns the possible offsets of that date and time.  \n  \n The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined. However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property. To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).","nodes":[{"pos":[0,566],"content":"The precise behavior of this method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the <xref:System.TimeZoneInfo> object. If the value of the <xref:System.DateTimeOffset.Offset%2A> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets. Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then returns the possible offsets of that date and time.","nodes":[{"content":"The precise behavior of this method depends on the relationship between the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTimeOffset`</ph> parameter and the <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo&gt;</ph> object.","pos":[0,200],"source":"The precise behavior of this method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the <xref:System.TimeZoneInfo> object."},{"content":"If the value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets.","pos":[201,427],"source":" If the value of the <xref:System.DateTimeOffset.Offset%2A> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets."},{"content":"Otherwise, it converts <ph id=\"ph1\">`dateTimeOffset`</ph> to the time in the current time zone, and then returns the possible offsets of that date and time.","pos":[428,566],"source":" Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then returns the possible offsets of that date and time."}]},{"pos":[573,1011],"content":"The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined. However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property. To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).","nodes":[{"content":"The order of <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> objects in the array returned by this method is undefined.","pos":[0,94],"source":"The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined."},{"content":"However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property.","pos":[95,289],"source":" However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property."},{"content":"To map an ambiguous time to a time zone's standard time, see <bpt id=\"p1\">[</bpt>How to: Resolve Ambiguous Times<ept id=\"p1\">](~/docs/standard/datetime/resolve-ambiguous-times.md)</ept>.","pos":[290,438],"source":" To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md)."}]}],"pos":[118038,119054],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[119246,119263],"yaml":true},{"content":"An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.","nodes":[{"pos":[0,135],"content":"An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.","nodes":[{"content":"An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.","pos":[0,135]}]}],"pos":[119324,119460],"yaml":true},{"content":"<code>dateTimeOffset</code> is not an ambiguous time.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;dateTimeOffset&lt;/code&gt;</ph> is not an ambiguous time.","source":"<code>dateTimeOffset</code> is not an ambiguous time."}],"pos":[119625,119679],"yaml":true},{"content":"Serves as a hash function for hashing algorithms and data structures such as hash tables.","nodes":[{"pos":[0,89],"content":"Serves as a hash function for hashing algorithms and data structures such as hash tables.","nodes":[{"content":"Serves as a hash function for hashing algorithms and data structures such as hash tables.","pos":[0,89]}]}],"pos":[121105,121195],"yaml":true},{"content":"For additional detail about the <xref:System.TimeZoneInfo.GetHashCode%2A> method, see <xref:System.Object.GetHashCode%2A>.","nodes":[{"pos":[0,122],"content":"For additional detail about the <xref:System.TimeZoneInfo.GetHashCode%2A> method, see <xref:System.Object.GetHashCode%2A>.","nodes":[{"content":"For additional detail about the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetHashCode%2A&gt;</ph> method, see <ph id=\"ph2\">&lt;xref:System.Object.GetHashCode%2A&gt;</ph>.","pos":[0,122],"source":"For additional detail about the <xref:System.TimeZoneInfo.GetHashCode%2A> method, see <xref:System.Object.GetHashCode%2A>."}]}],"pos":[121206,121329],"yaml":true,"extradata":"MT"},{"content":"A 32-bit signed integer that serves as the hash code for this <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,110],"content":"A 32-bit signed integer that serves as the hash code for this <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"A 32-bit signed integer that serves as the hash code for this <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[121463,121574],"yaml":true},{"content":"Returns a sorted collection of all the time zones about which information is available on the local system.","nodes":[{"pos":[0,107],"content":"Returns a sorted collection of all the time zones about which information is available on the local system.","nodes":[{"content":"Returns a sorted collection of all the time zones about which information is available on the local system.","pos":[0,107]}]}],"pos":[123104,123212],"yaml":true},{"content":"The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones key. If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string (\"\").  \n  \n> [!IMPORTANT]\n>  The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the registry. It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. These are accessible only through the object reference returned by the time zone creation method.  \n  \n The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture. For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>.  \n  \n The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object returned by this method supports the <xref:System.Collections.Generic.IEnumerable%601> interface, which means that it can be iterated using the `foreach` (in C#) or `For Each…Next` (in Visual Basic) statements. Each iteration of the loop provides the next <xref:System.TimeZoneInfo> object in the collection.  \n  \n The collection of <xref:System.TimeZoneInfo> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods. If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. For more information, see [How to: Create Time Zones Without Adjustment Rules](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md) and [How to: Create Time Zones with Adjustment Rules](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  \n  \n You can also determine whether an individual time zone is defined on the local computer by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method and providing the identifier of the time zone you want to retrieve as a parameter.","nodes":[{"pos":[0,415],"content":"The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones key. If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string (\"\").","nodes":[{"content":"The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones key. If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string (\"\").","pos":[0,415],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetSystemTimeZones%2A&gt;</ph> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones key.","pos":[0,220],"source":"The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones key."},{"content":"If it is unable to successfully retrieve and parse values for particular string properties of individual <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects, this method sets their value to an empty string (\"\").","pos":[221,415],"source":" If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string (\"\")."}]}]},{"pos":[423,825],"content":"[!IMPORTANT]\n The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the registry. It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. These are accessible only through the object reference returned by the time zone creation method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the registry. It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. These are accessible only through the object reference returned by the time zone creation method.","pos":[13,400],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetSystemTimeZones%2A&gt;</ph> method returns a collection of <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects only for time zones defined in the registry.","pos":[1,164],"source":" The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the registry."},{"content":"It does not include time zones created using the overloads of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method.","pos":[165,289],"source":" It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method."},{"content":"These are accessible only through the object reference returned by the time zone creation method.","pos":[290,387]}]}]},{"pos":[832,1079],"content":"The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture. For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>.","nodes":[{"content":"The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture. For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>.","pos":[0,247],"nodes":[{"content":"The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture.","pos":[0,160]},{"content":"For information about the display name, see <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.DisplayName%2A&gt;</ph>.","pos":[161,247],"source":" For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>."}]}]},{"pos":[1086,1466],"content":"The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object returned by this method supports the <xref:System.Collections.Generic.IEnumerable%601> interface, which means that it can be iterated using the `foreach` (in C#) or `For Each…Next` (in Visual Basic) statements. Each iteration of the loop provides the next <xref:System.TimeZoneInfo> object in the collection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> object returned by this method supports the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface, which means that it can be iterated using the <ph id=\"ph3\">`foreach`</ph> (in C#) or <ph id=\"ph4\">`For Each…Next`</ph> (in Visual Basic) statements.","pos":[0,282],"source":"The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object returned by this method supports the <xref:System.Collections.Generic.IEnumerable%601> interface, which means that it can be iterated using the `foreach` (in C#) or `For Each…Next` (in Visual Basic) statements."},{"content":"Each iteration of the loop provides the next <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object in the collection.","pos":[283,380],"source":" Each iteration of the loop provides the next <xref:System.TimeZoneInfo> object in the collection."}]},{"pos":[1473,2142],"content":"The collection of <xref:System.TimeZoneInfo> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods. If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. For more information, see [How to: Create Time Zones Without Adjustment Rules](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md) and [How to: Create Time Zones with Adjustment Rules](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).","nodes":[{"content":"The collection of <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods.","pos":[0,202],"source":"The collection of <xref:System.TimeZoneInfo> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods."},{"content":"If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method.","pos":[203,394],"source":" If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Create Time Zones Without Adjustment Rules<ept id=\"p1\">](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Create Time Zones with Adjustment Rules<ept id=\"p2\">](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)</ept>.","pos":[395,669],"source":" For more information, see [How to: Create Time Zones Without Adjustment Rules](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md) and [How to: Create Time Zones with Adjustment Rules](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)."}]},{"pos":[2149,2394],"content":"You can also determine whether an individual time zone is defined on the local computer by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method and providing the identifier of the time zone you want to retrieve as a parameter.","nodes":[{"content":"You can also determine whether an individual time zone is defined on the local computer by calling the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> method and providing the identifier of the time zone you want to retrieve as a parameter.","pos":[0,245],"source":"You can also determine whether an individual time zone is defined on the local computer by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method and providing the identifier of the time zone you want to retrieve as a parameter."}]}],"pos":[123223,125638],"yaml":true,"extradata":"MT"},{"content":"A read-only collection of <xref href=\"System.TimeZoneInfo\"></xref> objects.","nodes":[{"pos":[0,75],"content":"A read-only collection of <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> objects.","source":"A read-only collection of <xref href=\"System.TimeZoneInfo\"></xref> objects."}],"pos":[126375,126451],"yaml":true},{"content":"There is insufficient memory to store all time zone information.","nodes":[{"pos":[0,64],"content":"There is insufficient memory to store all time zone information.","nodes":[{"content":"There is insufficient memory to store all time zone information.","pos":[0,64]}]}],"pos":[126617,126682],"yaml":true},{"content":"The user does not have permission to read from the registry keys that contain time zone information.","nodes":[{"pos":[0,100],"content":"The user does not have permission to read from the registry keys that contain time zone information.","nodes":[{"content":"The user does not have permission to read from the registry keys that contain time zone information.","pos":[0,100]}]}],"pos":[126794,126895],"yaml":true},{"content":"Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.","nodes":[{"pos":[0,139],"content":"Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.","nodes":[{"content":"Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.","pos":[0,139]}]}],"pos":[128282,128422],"yaml":true},{"content":"The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.  \n  \n If the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result. For example, this can occur if the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> but the time zone object is not the local time zone. If `dateTime` is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time. If `dateTime` is invalid, this method returns a <xref:System.TimeSpan> object that reflects the difference between UTC and the time zone's standard time.  \n  \n The <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=fullName> method is similar in operation to the <xref:System.TimeZone.GetUtcOffset%2A> method of the <xref:System.TimeZone> class.","nodes":[{"pos":[0,355],"content":"The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.","nodes":[{"content":"The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.","pos":[0,355],"nodes":[{"content":"The returned time span includes any differences due to the application of adjustment rules to the current time zone.","pos":[0,116]},{"content":"It differs from the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.","pos":[117,355],"source":" It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account."}]}]},{"pos":[362,1015],"content":"If the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result. For example, this can occur if the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> but the time zone object is not the local time zone. If `dateTime` is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time. If `dateTime` is invalid, this method returns a <xref:System.TimeSpan> object that reflects the difference between UTC and the time zone's standard time.","nodes":[{"content":"If the <ph id=\"ph1\">`dateTime`</ph> parameter's <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result.","pos":[0,187],"source":"If the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result."},{"content":"For example, this can occur if the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> but the time zone object is not the local time zone.","pos":[188,370],"source":" For example, this can occur if the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> but the time zone object is not the local time zone."},{"content":"If <ph id=\"ph1\">`dateTime`</ph> is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time.","pos":[371,499],"source":" If `dateTime` is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time."},{"content":"If <ph id=\"ph1\">`dateTime`</ph> is invalid, this method returns a <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> object that reflects the difference between UTC and the time zone's standard time.","pos":[500,653],"source":" If `dateTime` is invalid, this method returns a <xref:System.TimeSpan> object that reflects the difference between UTC and the time zone's standard time."}]},{"pos":[1022,1232],"content":"The <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=fullName> method is similar in operation to the <xref:System.TimeZone.GetUtcOffset%2A> method of the <xref:System.TimeZone> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=fullName&gt;</ph> method is similar in operation to the <ph id=\"ph2\">&lt;xref:System.TimeZone.GetUtcOffset%2A&gt;</ph> method of the <ph id=\"ph3\">&lt;xref:System.TimeZone&gt;</ph> class.","pos":[0,210],"source":"The <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=fullName> method is similar in operation to the <xref:System.TimeZone.GetUtcOffset%2A> method of the <xref:System.TimeZone> class."}]}],"pos":[128433,129672],"yaml":true,"extradata":"MT"},{"content":"The date and time to determine the offset for.","nodes":[{"pos":[0,46],"content":"The date and time to determine the offset for.","nodes":[{"content":"The date and time to determine the offset for.","pos":[0,46]}]}],"pos":[130419,130466],"yaml":true},{"content":"An object that indicates the time difference between the two time zones.","nodes":[{"pos":[0,72],"content":"An object that indicates the time difference between the two time zones.","nodes":[{"content":"An object that indicates the time difference between the two time zones.","pos":[0,72]}]}],"pos":[130525,130598],"yaml":true},{"content":"Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.","nodes":[{"pos":[0,139],"content":"Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.","nodes":[{"content":"Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.","pos":[0,139]}]}],"pos":[132204,132344],"yaml":true},{"content":"The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.","nodes":[{"pos":[0,355],"content":"The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.","nodes":[{"content":"The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.","pos":[0,355],"nodes":[{"content":"The returned time span includes any differences due to the application of adjustment rules to the current time zone.","pos":[0,116]},{"content":"It differs from the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.","pos":[117,355],"source":" It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account."}]}]}],"pos":[132355,132711],"yaml":true,"extradata":"MT"},{"content":"The date and time to determine the offset for.","nodes":[{"pos":[0,46],"content":"The date and time to determine the offset for.","nodes":[{"content":"The date and time to determine the offset for.","pos":[0,46]}]}],"pos":[132890,132937],"yaml":true},{"content":"An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.","nodes":[{"pos":[0,112],"content":"An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.","nodes":[{"content":"An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.","pos":[0,112]}]}],"pos":[132996,133109],"yaml":true},{"content":"Indicates whether the current object and another <xref href=\"System.TimeZoneInfo\"></xref> object have the same adjustment rules.","nodes":[{"pos":[0,128],"content":"Indicates whether the current object and another <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object have the same adjustment rules.","source":"Indicates whether the current object and another <xref href=\"System.TimeZoneInfo\"></xref> object have the same adjustment rules."}],"pos":[134703,134832],"yaml":true},{"content":"Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules. Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property).","nodes":[{"pos":[0,565],"content":"Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules. Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property).","nodes":[{"content":"Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules. Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property).","pos":[0,565],"nodes":[{"content":"Like the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method, the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.HasSameRules%2A&gt;</ph> method indicates whether two time zones have the same base offset (as defined by the <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.BaseUtcOffset%2A&gt;</ph> property) and the same adjustment rules.","pos":[0,317],"source":"Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules."},{"content":"Unlike the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method, <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.HasSameRules%2A&gt;</ph> does not compare time zone identifiers (as defined by the <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.Id%2A&gt;</ph> property).","pos":[318,565],"source":" Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property)."}]}]}],"pos":[134843,135409],"yaml":true,"extradata":"MT"},{"content":"A second object to compare with the current <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,92],"content":"A second object to compare with the current <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"A second object to compare with the current <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[136110,136203],"yaml":true},{"content":"`true` if the two time zones have identical adjustment rules and an identical base offset; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if the two time zones have identical adjustment rules and an identical base offset; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two time zones have identical adjustment rules and an identical base offset; otherwise, `false`."}],"pos":[136261,136374],"yaml":true},{"content":"The <code>other</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>other</code> parameter is `null`."}],"pos":[136536,136580],"yaml":true},{"content":"Gets the time zone identifier.","nodes":[{"pos":[0,30],"content":"Gets the time zone identifier.","nodes":[{"content":"Gets the time zone identifier.","pos":[0,30]}]}],"pos":[137604,137635],"yaml":true},{"content":"The time zone identifier is a key string that uniquely identifies a particular time zone. In Windows XP and Windows Vista, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zone branch of the registry. It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve a particular time zone from the registry.  \n  \n> [!IMPORTANT]\n>  Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer. The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.  \n  \n The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property. The identifier of the Coordinated Universal Time zone is UTC.","nodes":[{"pos":[0,410],"content":"The time zone identifier is a key string that uniquely identifies a particular time zone. In Windows XP and Windows Vista, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zone branch of the registry. It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve a particular time zone from the registry.","nodes":[{"content":"The time zone identifier is a key string that uniquely identifies a particular time zone. In Windows XP and Windows Vista, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zone branch of the registry. It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve a particular time zone from the registry.","pos":[0,410],"nodes":[{"content":"The time zone identifier is a key string that uniquely identifies a particular time zone.","pos":[0,89]},{"content":"In Windows XP and Windows Vista, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Time Zone branch of the registry.","pos":[90,257]},{"content":"It can be passed as a parameter to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> method to retrieve a particular time zone from the registry.","pos":[258,410],"source":" It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve a particular time zone from the registry."}]}]},{"pos":[418,729],"content":"[!IMPORTANT]\n Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer. The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.","leadings":["","> "],"nodes":[{"content":" Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer. The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.","pos":[13,309],"nodes":[{"content":"Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer.","pos":[1,177]},{"content":"The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.","pos":[178,296]}]}]},{"pos":[736,962],"content":"The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property. The identifier of the Coordinated Universal Time zone is UTC.","nodes":[{"content":"The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property. The identifier of the Coordinated Universal Time zone is UTC.","pos":[0,226],"nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Id%2A&gt;</ph> property is usually, but not always, identical to that of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.StandardName%2A&gt;</ph> property.","pos":[0,164],"source":"The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property."},{"content":"The identifier of the Coordinated Universal Time zone is UTC.","pos":[165,226]}]}]}],"pos":[137646,138621],"yaml":true,"extradata":"MT"},{"content":"The time zone identifier.","nodes":[{"pos":[0,25],"content":"The time zone identifier.","nodes":[{"content":"The time zone identifier.","pos":[0,25]}]}],"pos":[139137,139163],"yaml":true},{"content":"Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.","nodes":[{"pos":[0,157],"content":"Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.","nodes":[{"content":"Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.","pos":[0,157]}]}],"pos":[140621,140779],"yaml":true},{"content":"An ambiguous time falls within a range of times for the current time zone. This means it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. See the Example section for an illustration.  \n  \n Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time. Therefore, these time zones have no adjustment rules and calls to the <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> method always return `false`.  \n  \n For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.  \n  \n|TimeZoneInfo object type|Kind property value|Behavior|  \n|------------------------------|-------------------------|--------------|  \n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Determines whether the `dateTime` parameter is ambiguous.|  \n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName>|Converts `dateTime` to the local time and then determines whether that time is ambiguous.|  \n|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Returns `false`.|  \n|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName>|If `dateTime` is ambiguous, assumes it is a standard time, converts it to UTC, and returns `false`.|  \n|Any other time zone.|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Converts `dateTime` to the time in the specified time zone and then determines whether that time is ambiguous.|  \n|Any other time zone.|<xref:System.DateTimeKind?displayProperty=fullName>|Determines whether `dateTime` is ambiguous.|","nodes":[{"pos":[0,340],"content":"An ambiguous time falls within a range of times for the current time zone. This means it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. See the Example section for an illustration.","nodes":[{"content":"An ambiguous time falls within a range of times for the current time zone. This means it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. See the Example section for an illustration.","pos":[0,340],"nodes":[{"content":"An ambiguous time falls within a range of times for the current time zone.","pos":[0,74]},{"content":"This means it can be either a standard time or a time that results from the application of an adjustment rule.","pos":[75,185]},{"content":"Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.","pos":[186,295]},{"content":"See the Example section for an illustration.","pos":[296,340]}]}]},{"pos":[347,613],"content":"Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time. Therefore, these time zones have no adjustment rules and calls to the <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> method always return `false`.","nodes":[{"content":"Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.","pos":[0,120]},{"content":"Therefore, these time zones have no adjustment rules and calls to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsAmbiguousTime%2A&gt;</ph> method always return <ph id=\"ph2\">`false`</ph>.","pos":[121,266],"source":" Therefore, these time zones have no adjustment rules and calls to the <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> method always return `false`."}]},{"pos":[620,861],"content":"For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.","nodes":[{"content":"For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object, as the following table shows.","pos":[0,241],"source":"For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows."}]},{"pos":[868,892],"content":"TimeZoneInfo object type","nodes":[{"content":"TimeZoneInfo object type","pos":[0,24]}]},{"pos":[893,912],"content":"Kind property value","nodes":[{"content":"Kind property value","pos":[0,19]}]},{"pos":[913,921],"content":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"pos":[1002,1062],"content":"<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>","nodes":[]},{"pos":[1063,1169],"content":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>","pos":[0,106],"source":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>"}]},{"pos":[1170,1227],"content":"Determines whether the <ph id=\"ph1\">`dateTime`</ph> parameter is ambiguous.","source":"Determines whether the `dateTime` parameter is ambiguous."},{"pos":[1232,1292],"content":"<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>","nodes":[]},{"pos":[1293,1344],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1345,1434],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the local time and then determines whether that time is ambiguous.","source":"Converts `dateTime` to the local time and then determines whether that time is ambiguous."},{"pos":[1439,1497],"content":"<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>","nodes":[]},{"pos":[1498,1604],"content":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>","pos":[0,106],"source":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>"}]},{"pos":[1605,1621],"content":"Returns <ph id=\"ph1\">`false`</ph>.","source":"Returns `false`."},{"pos":[1626,1684],"content":"<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>","nodes":[]},{"pos":[1685,1736],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1737,1836],"content":"If <ph id=\"ph1\">`dateTime`</ph> is ambiguous, assumes it is a standard time, converts it to UTC, and returns <ph id=\"ph2\">`false`</ph>.","source":"If `dateTime` is ambiguous, assumes it is a standard time, converts it to UTC, and returns `false`."},{"pos":[1841,1861],"content":"Any other time zone.","nodes":[{"content":"Any other time zone.","pos":[0,20]}]},{"pos":[1862,1968],"content":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>","pos":[0,106],"source":"<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>"}]},{"pos":[1969,2079],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the time in the specified time zone and then determines whether that time is ambiguous.","source":"Converts `dateTime` to the time in the specified time zone and then determines whether that time is ambiguous."},{"pos":[2084,2104],"content":"Any other time zone.","nodes":[{"content":"Any other time zone.","pos":[0,20]}]},{"pos":[2105,2156],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[2157,2200],"content":"Determines whether <ph id=\"ph1\">`dateTime`</ph> is ambiguous.","source":"Determines whether `dateTime` is ambiguous."}],"pos":[140790,143007],"yaml":true,"extradata":"MT"},{"content":"A date and time value.","nodes":[{"pos":[0,22],"content":"A date and time value.","nodes":[{"content":"A date and time value.","pos":[0,22]}]}],"pos":[143975,143998],"yaml":true},{"content":"`true` if the <code>dateTime</code> parameter is ambiguous; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is ambiguous; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>dateTime</code> parameter is ambiguous; otherwise, `false`."}],"pos":[144056,144138],"yaml":true},{"content":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> value is <xref href=\"System.DateTimeKind.Local\"></xref> and <code>dateTime</code> is an invalid time.","nodes":[{"pos":[0,185],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> value is <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">dateTime</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an invalid time.","source":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> value is <xref href=\"System.DateTimeKind.Local\"></xref> and <code>dateTime</code> is an invalid time."}],"pos":[144295,144481],"yaml":true},{"content":"Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.","nodes":[{"pos":[0,157],"content":"Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.","nodes":[{"content":"Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.","pos":[0,157]}]}],"pos":[146042,146200],"yaml":true},{"content":"An ambiguous time falls within a range of times for the current time zone. This means that it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.  \n  \n The precise behavior of the method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the current time zone. If the value of the <xref:System.DateTimeOffset.Offset%2A> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous. Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then determines whether that date and time is ambiguous.","nodes":[{"pos":[0,421],"content":"An ambiguous time falls within a range of times for the current time zone. This means that it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.","nodes":[{"content":"An ambiguous time falls within a range of times for the current time zone. This means that it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.","pos":[0,421],"nodes":[{"content":"An ambiguous time falls within a range of times for the current time zone.","pos":[0,74]},{"content":"This means that it can be either a standard time or a time that results from the application of an adjustment rule.","pos":[75,190]},{"content":"Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.","pos":[191,300]},{"content":"Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.","pos":[301,421]}]}]},{"pos":[428,941],"content":"The precise behavior of the method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the current time zone. If the value of the <xref:System.DateTimeOffset.Offset%2A> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous. Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then determines whether that date and time is ambiguous.","nodes":[{"content":"The precise behavior of the method depends on the relationship between the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTimeOffset`</ph> parameter and the current time zone.","pos":[0,183],"source":"The precise behavior of the method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the current time zone."},{"content":"If the value of the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous.","pos":[184,374],"source":" If the value of the <xref:System.DateTimeOffset.Offset%2A> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous."},{"content":"Otherwise, it converts <ph id=\"ph1\">`dateTimeOffset`</ph> to the time in the current time zone, and then determines whether that date and time is ambiguous.","pos":[375,513],"source":" Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then determines whether that date and time is ambiguous."}]}],"pos":[146211,147157],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[147335,147352],"yaml":true},{"content":"`true` if the <code>dateTimeOffset</code> parameter is ambiguous in the current time zone; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTimeOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is ambiguous in the current time zone; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>dateTimeOffset</code> parameter is ambiguous in the current time zone; otherwise, `false`."}],"pos":[147410,147523],"yaml":true},{"content":"Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,168],"content":"Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[149180,149349],"yaml":true},{"content":"The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter. If `dateTimeOffset` does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone. It then determines whether that date and time is a daylight saving time.  \n  \n If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`. To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.","nodes":[{"pos":[0,547],"content":"The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter. If `dateTimeOffset` does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone. It then determines whether that date and time is a daylight saving time.","nodes":[{"content":"The return value of <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> is affected by the relationship between the time zone represented by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object and the <ph id=\"ph3\">&lt;xref:System.DateTimeOffset.Offset%2A&gt;</ph> property of the <ph id=\"ph4\">`dateTimeOffset`</ph> parameter.","pos":[0,293],"source":"The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter."},{"content":"If <ph id=\"ph1\">`dateTimeOffset`</ph> does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone.","pos":[294,474],"source":" If `dateTimeOffset` does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone."},{"content":"It then determines whether that date and time is a daylight saving time.","pos":[475,547]}]},{"pos":[554,854],"content":"If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`. To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.","nodes":[{"content":"If the time zone represented by the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object does not support daylight saving time, the method always returns <ph id=\"ph2\">`false`</ph>.","pos":[0,143],"source":"If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`."},{"content":"To determine whether a time zone supports daylight saving time, retrieve the value of its <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A&gt;</ph> property.","pos":[144,300],"source":" To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property."}]}],"pos":[149360,150219],"yaml":true,"extradata":"MT"},{"content":"A date and time value.","nodes":[{"pos":[0,22],"content":"A date and time value.","nodes":[{"content":"A date and time value.","pos":[0,22]}]}],"pos":[150402,150425],"yaml":true},{"content":"`true` if the <code>dateTimeOffset</code> parameter is a daylight saving time; otherwise, `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTimeOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a daylight saving time; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>dateTimeOffset</code> parameter is a daylight saving time; otherwise, `false`."}],"pos":[150483,150584],"yaml":true},{"content":"Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,168],"content":"Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[152210,152379],"yaml":true},{"content":"The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.  \n  \n|TimeZoneInfo object|DateTime.Kind property|Result|  \n|-------------------------|----------------------------|------------|  \n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|`DateTimeKind.Local`|Determines whether `dateTime` is daylight saving time.|  \n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|`DateTimeKind.Utc`|Converts `dateTime` from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time.|  \n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|`DateTimeKind.Unspecified`|Assumes that `dateTime` represents local time and determines whether it is daylight saving time.|  \n|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>|`DateTimeKind.Local`, `DateTimeKind.Unspecified`, or `DateTimeKind.Utc`|Returns `false` (UTC does not support daylight saving time).|  \n|Any other <xref:System.TimeZoneInfo>object.|`DateTimeKind.Local`|Converts the local time to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.|  \n|Any other <xref:System.TimeZoneInfo>object.|`DateTimeKind.Utc`|Converts UTC to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.|  \n|Any other <xref:System.TimeZoneInfo>object.|`DateTimeKind.Unspecified`|Determines whether `dateTime` is daylight saving time.|  \n  \n If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`. A number of time zones, including <xref:System.TimeZoneInfo.Utc%2A>, do not observe daylight saving time.  To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.  \n  \n If the `dateTime` parameter specifies an ambiguous time in the current object's time zone, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method interprets `dateTime` as standard time and returns `false` if its <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>. If the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.  \n  \n Because the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=fullName> method can return `false` for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=fullName> method can be paired with the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether a time may be a daylight saving time. Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method can be called first to determine whether a date and time may be a daylight saving time. If the method returns `false`, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method can be called to determine whether the <xref:System.DateTime> value is a daylight saving time. The following example illustrates this technique.  \n  \n [!code-csharp[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#2)]\n [!code-vb[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#2)]  \n  \n If the `dateTime` parameter specifies an invalid time, the method call throws an <xref:System.ArgumentException> if the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>; otherwise, the method returns `false`.  \n  \n Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name. See the Example section for an illustration.","nodes":[{"pos":[0,309],"content":"The return value of <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> is affected by the relationship between the time zone represented by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object and the <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph4\">`dateTime`</ph> parameter, as the following table shows.","source":"The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows."},{"pos":[316,335],"content":"TimeZoneInfo object","nodes":[{"content":"TimeZoneInfo object","pos":[0,19]}]},{"pos":[336,358],"content":"DateTime.Kind property","nodes":[{"content":"DateTime.Kind property","pos":[0,22]}]},{"pos":[359,365],"content":"Result","nodes":[{"content":"Result","pos":[0,6]}]},{"pos":[442,502],"content":"<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>","nodes":[]},{"pos":[524,578],"content":"Determines whether <ph id=\"ph1\">`dateTime`</ph> is daylight saving time.","source":"Determines whether `dateTime` is daylight saving time."},{"pos":[583,643],"content":"<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>","nodes":[]},{"pos":[663,785],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time.","source":"Converts `dateTime` from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time."},{"pos":[790,850],"content":"<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>","nodes":[]},{"pos":[878,974],"content":"Assumes that <ph id=\"ph1\">`dateTime`</ph> represents local time and determines whether it is daylight saving time.","source":"Assumes that `dateTime` represents local time and determines whether it is daylight saving time."},{"pos":[979,1037],"content":"<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>","nodes":[]},{"pos":[1038,1109],"content":"<ph id=\"ph1\">`DateTimeKind.Local`</ph>, <ph id=\"ph2\">`DateTimeKind.Unspecified`</ph>, or <ph id=\"ph3\">`DateTimeKind.Utc`</ph>","source":"`DateTimeKind.Local`, `DateTimeKind.Unspecified`, or `DateTimeKind.Utc`"},{"pos":[1110,1170],"content":"Returns <ph id=\"ph1\">`false`</ph> (UTC does not support daylight saving time).","source":"Returns `false` (UTC does not support daylight saving time)."},{"pos":[1175,1218],"content":"Any other <xref:System.TimeZoneInfo>object.","nodes":[{"content":"Any other <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph>object.","pos":[0,43],"source":"Any other <xref:System.TimeZoneInfo>object."}]},{"pos":[1240,1391],"content":"Converts the local time to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.","nodes":[{"content":"Converts the local time to the equivalent time of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object and then determines whether the latter is daylight saving time.","pos":[0,151],"source":"Converts the local time to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time."}]},{"pos":[1396,1439],"content":"Any other <xref:System.TimeZoneInfo>object.","nodes":[{"content":"Any other <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph>object.","pos":[0,43],"source":"Any other <xref:System.TimeZoneInfo>object."}]},{"pos":[1459,1599],"content":"Converts UTC to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.","nodes":[{"content":"Converts UTC to the equivalent time of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object and then determines whether the latter is daylight saving time.","pos":[0,140],"source":"Converts UTC to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time."}]},{"pos":[1604,1647],"content":"Any other <xref:System.TimeZoneInfo>object.","nodes":[{"content":"Any other <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph>object.","pos":[0,43],"source":"Any other <xref:System.TimeZoneInfo>object."}]},{"pos":[1675,1729],"content":"Determines whether <ph id=\"ph1\">`dateTime`</ph> is daylight saving time.","source":"Determines whether `dateTime` is daylight saving time."},{"pos":[1737,2144],"content":"If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`. A number of time zones, including <xref:System.TimeZoneInfo.Utc%2A>, do not observe daylight saving time.  To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.","nodes":[{"content":"If the time zone represented by the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object does not support daylight saving time, the method always returns <ph id=\"ph2\">`false`</ph>.","pos":[0,143],"source":"If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`."},{"content":"A number of time zones, including <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Utc%2A&gt;</ph>, do not observe daylight saving time.","pos":[144,249],"source":" A number of time zones, including <xref:System.TimeZoneInfo.Utc%2A>, do not observe daylight saving time."},{"content":"To determine whether a time zone supports daylight saving time, retrieve the value of its <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A&gt;</ph> property.","pos":[251,407],"source":"  To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property."}]},{"pos":[2151,2750],"content":"If the `dateTime` parameter specifies an ambiguous time in the current object's time zone, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method interprets `dateTime` as standard time and returns `false` if its <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>. If the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.","nodes":[{"content":"If the <ph id=\"ph1\">`dateTime`</ph> parameter specifies an ambiguous time in the current object's time zone, the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> method interprets <ph id=\"ph3\">`dateTime`</ph> as standard time and returns <ph id=\"ph4\">`false`</ph> if its <ph id=\"ph5\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph6\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> or <ph id=\"ph7\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,394],"source":"If the `dateTime` parameter specifies an ambiguous time in the current object's time zone, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method interprets `dateTime` as standard time and returns `false` if its <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.","pos":[395,599],"source":" If the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time."}]},{"pos":[2757,3819],"content":"Because the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=fullName> method can return `false` for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=fullName> method can be paired with the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether a time may be a daylight saving time. Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method can be called first to determine whether a date and time may be a daylight saving time. If the method returns `false`, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method can be called to determine whether the <xref:System.DateTime> value is a daylight saving time. The following example illustrates this technique.","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=fullName&gt;</ph> method can return <ph id=\"ph2\">`false`</ph> for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=fullName&gt;</ph> method can be paired with the <ph id=\"ph4\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29&gt;</ph> method to determine whether a time may be a daylight saving time.","pos":[0,549],"source":"Because the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=fullName> method can return `false` for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=fullName> method can be paired with the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether a time may be a daylight saving time."},{"content":"Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29&gt;</ph> method can be called first to determine whether a date and time may be a daylight saving time.","pos":[550,806],"source":" Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method can be called first to determine whether a date and time may be a daylight saving time."},{"content":"If the method returns <ph id=\"ph1\">`false`</ph>, the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29&gt;</ph> method can be called to determine whether the <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value is a daylight saving time.","pos":[807,1012],"source":" If the method returns `false`, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method can be called to determine whether the <xref:System.DateTime> value is a daylight saving time."},{"content":"The following example illustrates this technique.","pos":[1013,1062]}]},{"pos":[3826,4173],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.TimeZone2.IsDaylightSavingTime#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.TimeZone2.IsDaylightSavingTime#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#2)]\n [!code-vb[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#2)]"},{"pos":[4180,4470],"content":"If the <ph id=\"ph1\">`dateTime`</ph> parameter specifies an invalid time, the method call throws an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph> if the value of the <ph id=\"ph3\">`dateTime`</ph> parameter's <ph id=\"ph4\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph5\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>; otherwise, the method returns <ph id=\"ph6\">`false`</ph>.","source":"If the `dateTime` parameter specifies an invalid time, the method call throws an <xref:System.ArgumentException> if the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>; otherwise, the method returns `false`."},{"pos":[4477,4796],"content":"Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name. See the Example section for an illustration.","nodes":[{"content":"Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name. See the Example section for an illustration.","pos":[0,319],"nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> method to determine whether to use a time zone's <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.StandardName%2A&gt;</ph> value or its <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.DaylightName%2A&gt;</ph> value when displaying the time zone name.","pos":[0,274],"source":"Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name."},{"content":"See the Example section for an illustration.","pos":[275,319]}]}]}],"pos":[152390,157212],"yaml":true,"extradata":"MT"},{"content":"A date and time value.","nodes":[{"pos":[0,22],"content":"A date and time value.","nodes":[{"content":"A date and time value.","pos":[0,22]}]}],"pos":[158012,158035],"yaml":true},{"content":"`true` if the <code>dateTime</code> parameter is a daylight saving time; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a daylight saving time; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>dateTime</code> parameter is a daylight saving time; otherwise, `false`."}],"pos":[158093,158188],"yaml":true},{"content":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> value is <xref href=\"System.DateTimeKind.Local\"></xref> and <code>dateTime</code> is an invalid time.","nodes":[{"pos":[0,185],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> value is <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">dateTime</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an invalid time.","source":"The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> value is <xref href=\"System.DateTimeKind.Local\"></xref> and <code>dateTime</code> is an invalid time."}],"pos":[158350,158536],"yaml":true},{"content":"Indicates whether a particular date and time is invalid.","nodes":[{"pos":[0,56],"content":"Indicates whether a particular date and time is invalid.","nodes":[{"content":"Indicates whether a particular date and time is invalid.","pos":[0,56]}]}],"pos":[160049,160106],"yaml":true},{"content":"An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule. Typically, invalid times occur when the time moves ahead for daylight saving time. See the Example section for an illustration.  \n  \n The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter affects whether `dateTime` represents an invalid time, as the following table shows.  \n  \n|DateTime.Kind property|TimeZoneInfo object (if applicable)|Behavior|  \n|----------------------------|-------------------------------------------|--------------|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|Determines whether the time is invalid.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> or a non-local time zone.|Converts `dateTime` to the time of the <xref:System.TimeZoneInfo> object and returns `false`.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Not applicable.|Assumes `dateTime` is the time of the <xref:System.TimeZoneInfo> object and determines whether it is invalid.|  \n|<xref:System.DateTimeKind?displayProperty=fullName>|Not applicable.|Returns `false`.|","nodes":[{"pos":[0,303],"content":"An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule. Typically, invalid times occur when the time moves ahead for daylight saving time. See the Example section for an illustration.","nodes":[{"content":"An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule. Typically, invalid times occur when the time moves ahead for daylight saving time. See the Example section for an illustration.","pos":[0,303],"nodes":[{"content":"An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule.","pos":[0,175]},{"content":"Typically, invalid times occur when the time moves ahead for daylight saving time.","pos":[176,258]},{"content":"See the Example section for an illustration.","pos":[259,303]}]}]},{"pos":[310,479],"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`dateTime`</ph> parameter affects whether <ph id=\"ph3\">`dateTime`</ph> represents an invalid time, as the following table shows.","source":"The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter affects whether `dateTime` represents an invalid time, as the following table shows."},{"pos":[486,508],"content":"DateTime.Kind property","nodes":[{"content":"DateTime.Kind property","pos":[0,22]}]},{"pos":[509,544],"content":"TimeZoneInfo object (if applicable)","nodes":[{"content":"TimeZoneInfo object (if applicable)","pos":[0,35]}]},{"pos":[545,553],"content":"Behavior","nodes":[{"content":"Behavior","pos":[0,8]}]},{"pos":[650,701],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[702,762],"content":"<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>","nodes":[]},{"pos":[763,802],"content":"Determines whether the time is invalid.","nodes":[{"content":"Determines whether the time is invalid.","pos":[0,39]}]},{"pos":[807,858],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[859,943],"content":"<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> or a non-local time zone.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph> or a non-local time zone.","pos":[0,84],"source":"<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> or a non-local time zone."}]},{"pos":[944,1037],"content":"Converts <ph id=\"ph1\">`dateTime`</ph> to the time of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object and returns <ph id=\"ph3\">`false`</ph>.","source":"Converts `dateTime` to the time of the <xref:System.TimeZoneInfo> object and returns `false`."},{"pos":[1042,1093],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1094,1109],"content":"Not applicable.","nodes":[{"content":"Not applicable.","pos":[0,15]}]},{"pos":[1110,1219],"content":"Assumes <ph id=\"ph1\">`dateTime`</ph> is the time of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object and determines whether it is invalid.","source":"Assumes `dateTime` is the time of the <xref:System.TimeZoneInfo> object and determines whether it is invalid."},{"pos":[1224,1275],"content":"<xref:System.DateTimeKind?displayProperty=fullName>","nodes":[]},{"pos":[1276,1291],"content":"Not applicable.","nodes":[{"content":"Not applicable.","pos":[0,15]}]},{"pos":[1292,1308],"content":"Returns <ph id=\"ph1\">`false`</ph>.","source":"Returns `false`."}],"pos":[160117,161438],"yaml":true,"extradata":"MT"},{"content":"A date and time value.","nodes":[{"pos":[0,22],"content":"A date and time value.","nodes":[{"content":"A date and time value.","pos":[0,22]}]}],"pos":[162365,162388],"yaml":true},{"content":"`true` if <code>dateTime</code> is invalid; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dateTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> is invalid; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>dateTime</code> is invalid; otherwise, `false`."}],"pos":[162446,162512],"yaml":true},{"content":"Gets a <xref href=\"System.TimeZoneInfo\"></xref> object that represents the local time zone.","nodes":[{"pos":[0,91],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object that represents the local time zone.","source":"Gets a <xref href=\"System.TimeZoneInfo\"></xref> object that represents the local time zone."}],"pos":[163962,164054],"yaml":true},{"content":"The local time zone is the time zone on the computer where the code is executing.  \n  \n> [!IMPORTANT]\n>  You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable. This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.  \n  \n The <xref:System.TimeZoneInfo> object returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property reflects the setting of the **Automatically adjust clock for daylight saving changes** checkbox or the **Automatically adjust clock for Daylight Saving Time** checkbox in the Control Panel **Date and Time** application for Windows XP and Windows Vista, respectively. If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information. This means that:  \n  \n-   The local time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an array whose length is zero.  \n  \n-   The local time zone's <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property returns `false`.  \n  \n-   The local time zone has no ambiguous or invalid times (all calls to <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> or <xref:System.TimeZoneInfo.IsInvalidTime%2A> return `false`).  \n  \n-   All calls to <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> with individual local times return false.  \n  \n This is not true, however, if a reference to the local time zone is retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.  \n  \n The <xref:System.TimeZoneInfo.Local%2A> property corresponds to the <xref:System.TimeZone.CurrentTimeZone%2A> property of the <xref:System.TimeZone> class.","nodes":[{"pos":[0,81],"content":"The local time zone is the time zone on the computer where the code is executing.","nodes":[{"content":"The local time zone is the time zone on the computer where the code is executing.","pos":[0,81]}]},{"pos":[89,477],"content":"[!IMPORTANT]\n You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable. This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.","leadings":["","> "],"nodes":[{"content":" You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable. This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.","pos":[13,386],"nodes":[{"content":"You should always access the local time zone through the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> property rather than assigning the local time zone to a <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object variable.","pos":[1,218],"source":" You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable."},{"content":"This prevents the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object variable from being invalidated by a call to the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ClearCachedData%2A&gt;</ph> method.","pos":[219,373],"source":" This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method."}]}]},{"pos":[484,1006],"content":"The <xref:System.TimeZoneInfo> object returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property reflects the setting of the **Automatically adjust clock for daylight saving changes** checkbox or the **Automatically adjust clock for Daylight Saving Time** checkbox in the Control Panel **Date and Time** application for Windows XP and Windows Vista, respectively. If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information. This means that:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> property reflects the setting of the <bpt id=\"p1\">**</bpt>Automatically adjust clock for daylight saving changes<ept id=\"p1\">**</ept> checkbox or the <bpt id=\"p2\">**</bpt>Automatically adjust clock for Daylight Saving Time<ept id=\"p2\">**</ept> checkbox in the Control Panel <bpt id=\"p3\">**</bpt>Date and Time<ept id=\"p3\">**</ept> application for Windows XP and Windows Vista, respectively.","pos":[0,390],"source":"The <xref:System.TimeZoneInfo> object returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property reflects the setting of the **Automatically adjust clock for daylight saving changes** checkbox or the **Automatically adjust clock for Daylight Saving Time** checkbox in the Control Panel **Date and Time** application for Windows XP and Windows Vista, respectively."},{"content":"If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information.","pos":[391,505]},{"content":"This means that:","pos":[506,522]}]},{"pos":[1016,1132],"content":"The local time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an array whose length is zero.","nodes":[{"content":"The local time zone's <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A&gt;</ph> method returns an array whose length is zero.","pos":[0,116],"source":"The local time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an array whose length is zero."}]},{"pos":[1142,1246],"content":"The local time zone's <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A&gt;</ph> property returns <ph id=\"ph2\">`false`</ph>.","source":"The local time zone's <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property returns `false`."},{"pos":[1256,1433],"content":"The local time zone has no ambiguous or invalid times (all calls to <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsAmbiguousTime%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.IsInvalidTime%2A&gt;</ph> return <ph id=\"ph3\">`false`</ph>).","source":"The local time zone has no ambiguous or invalid times (all calls to <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> or <xref:System.TimeZoneInfo.IsInvalidTime%2A> return `false`)."},{"pos":[1443,1548],"content":"All calls to <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> with individual local times return false.","nodes":[{"content":"All calls to <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsDaylightSavingTime%2A&gt;</ph> with individual local times return false.","pos":[0,105],"source":"All calls to <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> with individual local times return false."}]},{"pos":[1555,1703],"content":"This is not true, however, if a reference to the local time zone is retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.","nodes":[{"content":"This is not true, however, if a reference to the local time zone is retrieved using the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A&gt;</ph> method.","pos":[0,148],"source":"This is not true, however, if a reference to the local time zone is retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method."}]},{"pos":[1710,1865],"content":"The <xref:System.TimeZoneInfo.Local%2A> property corresponds to the <xref:System.TimeZone.CurrentTimeZone%2A> property of the <xref:System.TimeZone> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Local%2A&gt;</ph> property corresponds to the <ph id=\"ph2\">&lt;xref:System.TimeZone.CurrentTimeZone%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.TimeZone&gt;</ph> class.","pos":[0,155],"source":"The <xref:System.TimeZoneInfo.Local%2A> property corresponds to the <xref:System.TimeZone.CurrentTimeZone%2A> property of the <xref:System.TimeZone> class."}]}],"pos":[164065,165950],"yaml":true,"extradata":"MT"},{"content":"An object that represents the local time zone.","nodes":[{"pos":[0,46],"content":"An object that represents the local time zone.","nodes":[{"content":"An object that represents the local time zone.","pos":[0,46]}]}],"pos":[166573,166620],"yaml":true},{"content":"Gets the display name for the time zone's standard time.","nodes":[{"pos":[0,56],"content":"Gets the display name for the time zone's standard time.","nodes":[{"content":"Gets the display name for the time zone's standard time.","pos":[0,56]}]}],"pos":[168104,168161],"yaml":true},{"content":"The display name is localized based on the culture installed with the Windows operating system.  \n  \n The <xref:System.TimeZoneInfo.StandardName%2A> property is identical to the <xref:System.TimeZone.StandardName%2A> property of the <xref:System.TimeZone> class.  \n  \n If the operating system language is English, the value of the <xref:System.TimeZoneInfo.StandardName%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.Id%2A> property.","nodes":[{"pos":[0,95],"content":"The display name is localized based on the culture installed with the Windows operating system.","nodes":[{"content":"The display name is localized based on the culture installed with the Windows operating system.","pos":[0,95]}]},{"pos":[102,262],"content":"The <xref:System.TimeZoneInfo.StandardName%2A> property is identical to the <xref:System.TimeZone.StandardName%2A> property of the <xref:System.TimeZone> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.StandardName%2A&gt;</ph> property is identical to the <ph id=\"ph2\">&lt;xref:System.TimeZone.StandardName%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.TimeZone&gt;</ph> class.","pos":[0,160],"source":"The <xref:System.TimeZoneInfo.StandardName%2A> property is identical to the <xref:System.TimeZone.StandardName%2A> property of the <xref:System.TimeZone> class."}]},{"pos":[269,478],"content":"If the operating system language is English, the value of the <xref:System.TimeZoneInfo.StandardName%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.Id%2A> property.","nodes":[{"content":"If the operating system language is English, the value of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.StandardName%2A&gt;</ph> property is usually, but not always, identical to that of the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Id%2A&gt;</ph> property.","pos":[0,209],"source":"If the operating system language is English, the value of the <xref:System.TimeZoneInfo.StandardName%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.Id%2A> property."}]}],"pos":[168172,168657],"yaml":true,"extradata":"MT"},{"content":"The display name of the time zone's standard time.","nodes":[{"pos":[0,50],"content":"The display name of the time zone's standard time.","nodes":[{"content":"The display name of the time zone's standard time.","pos":[0,50]}]}],"pos":[169407,169458],"yaml":true},{"content":"Gets a value indicating whether the time zone has any daylight saving time rules.","nodes":[{"pos":[0,81],"content":"Gets a value indicating whether the time zone has any daylight saving time rules.","nodes":[{"content":"Gets a value indicating whether the time zone has any daylight saving time rules.","pos":[0,81]}]}],"pos":[171033,171115],"yaml":true},{"content":"The value of the <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property for the local time zone returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property reflects the setting of the Control Panel **Date and Time** application's checkbox that defines whether the system automatically adjusts for daylight saving time. If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is `false`.","nodes":[{"pos":[0,462],"content":"The value of the <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property for the local time zone returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property reflects the setting of the Control Panel **Date and Time** application's checkbox that defines whether the system automatically adjusts for daylight saving time. If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is `false`.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A&gt;</ph> property for the local time zone returned by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> property reflects the setting of the Control Panel <bpt id=\"p1\">**</bpt>Date and Time<ept id=\"p1\">**</ept> application's checkbox that defines whether the system automatically adjusts for daylight saving time.","pos":[0,355],"source":"The value of the <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property for the local time zone returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property reflects the setting of the Control Panel **Date and Time** application's checkbox that defines whether the system automatically adjusts for daylight saving time."},{"content":"If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is <ph id=\"ph1\">`false`</ph>.","pos":[356,462],"source":" If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is `false`."}]}],"pos":[171126,171589],"yaml":true,"extradata":"MT"},{"content":"`true` if the time zone supports daylight saving time; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the time zone supports daylight saving time; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the time zone supports daylight saving time; otherwise, `false`."}],"pos":[172202,172279],"yaml":true},{"content":"Converts the current <xref href=\"System.TimeZoneInfo\"></xref> object to a serialized string.","nodes":[{"pos":[0,92],"content":"Converts the current <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object to a serialized string.","source":"Converts the current <xref href=\"System.TimeZoneInfo\"></xref> object to a serialized string."}],"pos":[173824,173917],"yaml":true},{"content":"Applications that rely on time zones that are not typically defined in the registry of Windows systems can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects. The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string.  \n  \n The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed. Possible locations include:  \n  \n-   The registry.  \n  \n-   An application resource file.  \n  \n-   An external file, such as a text file.","nodes":[{"pos":[0,386],"content":"Applications that rely on time zones that are not typically defined in the registry of Windows systems can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects. The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string.","nodes":[{"content":"Applications that rely on time zones that are not typically defined in the registry of Windows systems can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects. The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string.","pos":[0,386],"nodes":[{"content":"Applications that rely on time zones that are not typically defined in the registry of Windows systems can use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.CreateCustomTimeZone%2A&gt;</ph> method to instantiate the necessary time zones as <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects.","pos":[0,251],"source":"Applications that rely on time zones that are not typically defined in the registry of Windows systems can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects."},{"content":"The application can then call the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ToSerializedString%2A&gt;</ph> method to convert the time zone object to a string.","pos":[252,386],"source":" The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string."}]}]},{"pos":[393,545],"content":"The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed. Possible locations include:","nodes":[{"content":"The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed. Possible locations include:","pos":[0,152],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object should also be stored in a location where the application can retrieve it when needed.","pos":[0,124],"source":"The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed."},{"content":"Possible locations include:","pos":[125,152]}]}]},{"pos":[555,568],"content":"The registry.","nodes":[{"content":"The registry.","pos":[0,13]}]},{"pos":[578,607],"content":"An application resource file.","nodes":[{"content":"An application resource file.","pos":[0,29]}]},{"pos":[617,655],"content":"An external file, such as a text file.","nodes":[{"content":"An external file, such as a text file.","pos":[0,38]}]}],"pos":[173928,174594],"yaml":true,"extradata":"MT"},{"content":"A string that represents the current <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,85],"content":"A string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"A string that represents the current <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[175424,175510],"yaml":true},{"content":"Returns the current <xref href=\"System.TimeZoneInfo\"></xref> object's display name.","nodes":[{"pos":[0,83],"content":"Returns the current <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object's display name.","source":"Returns the current <xref href=\"System.TimeZoneInfo\"></xref> object's display name."}],"pos":[176643,176727],"yaml":true},{"content":"When assigning a collection that contains <xref:System.TimeZoneInfo> objects to a list control such as the <xref:System.Windows.Forms.ListBox> control, the control automatically calls the <xref:System.TimeZoneInfo.ToString%2A> method to extract a string that describes each object to be represented in the list. As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection. See [How to: Enumerate Time Zones Present on a Computer](~/docs/standard/datetime/enumerate-time-zones.md) for more detail.","nodes":[{"pos":[0,614],"content":"When assigning a collection that contains <xref:System.TimeZoneInfo> objects to a list control such as the <xref:System.Windows.Forms.ListBox> control, the control automatically calls the <xref:System.TimeZoneInfo.ToString%2A> method to extract a string that describes each object to be represented in the list. As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection. See [How to: Enumerate Time Zones Present on a Computer](~/docs/standard/datetime/enumerate-time-zones.md) for more detail.","nodes":[{"content":"When assigning a collection that contains <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> objects to a list control such as the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control, the control automatically calls the <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo.ToString%2A&gt;</ph> method to extract a string that describes each object to be represented in the list.","pos":[0,311],"source":"When assigning a collection that contains <xref:System.TimeZoneInfo> objects to a list control such as the <xref:System.Windows.Forms.ListBox> control, the control automatically calls the <xref:System.TimeZoneInfo.ToString%2A> method to extract a string that describes each object to be represented in the list."},{"content":"As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection.","pos":[312,490]},{"content":"See <bpt id=\"p1\">[</bpt>How to: Enumerate Time Zones Present on a Computer<ept id=\"p1\">](~/docs/standard/datetime/enumerate-time-zones.md)</ept> for more detail.","pos":[491,614],"source":" See [How to: Enumerate Time Zones Present on a Computer](~/docs/standard/datetime/enumerate-time-zones.md) for more detail."}]}],"pos":[176738,177355],"yaml":true,"extradata":"MT"},{"content":"The value of the <xref href=\"System.TimeZoneInfo.DisplayName\"></xref> property of the current <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,142],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo.DisplayName\"&gt;&lt;/xref&gt;</ph> property of the current <ph id=\"ph2\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"The value of the <xref href=\"System.TimeZoneInfo.DisplayName\"></xref> property of the current <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[177490,177633],"yaml":true},{"content":"Gets a <xref href=\"System.TimeZoneInfo\"></xref> object that represents the Coordinated Universal Time (UTC) zone.","nodes":[{"pos":[0,113],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object that represents the Coordinated Universal Time (UTC) zone.","source":"Gets a <xref href=\"System.TimeZoneInfo\"></xref> object that represents the Coordinated Universal Time (UTC) zone."}],"pos":[179066,179180],"yaml":true},{"content":"This is a built-in object; information about this <xref:System.TimeZoneInfo> object is not retrieved from the registry.  \n  \n> [!IMPORTANT]\n>  You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable. This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.  \n  \n Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).","nodes":[{"pos":[0,119],"content":"This is a built-in object; information about this <xref:System.TimeZoneInfo> object is not retrieved from the registry.","nodes":[{"content":"This is a built-in object; information about this <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object is not retrieved from the registry.","pos":[0,119],"source":"This is a built-in object; information about this <xref:System.TimeZoneInfo> object is not retrieved from the registry."}]},{"pos":[127,533],"content":"[!IMPORTANT]\n You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable. This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.","leadings":["","> "],"nodes":[{"content":" You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable. This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.","pos":[13,404],"nodes":[{"content":"You should always access the Coordinated Universal Time (UTC) zone through the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName&gt;</ph> property rather than assigning the UTC time zone to a <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object variable.","pos":[1,236],"source":" You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable."},{"content":"This prevents the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object variable from being invalidated by a call to the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.ClearCachedData%2A&gt;</ph> method.","pos":[237,391],"source":" This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method."}]}]},{"pos":[540,617],"content":"Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).","nodes":[{"content":"Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).","pos":[0,77]}]}],"pos":[179191,179816],"yaml":true,"extradata":"MT"},{"content":"An object that represents the Coordinated Universal Time (UTC) zone.","nodes":[{"pos":[0,68],"content":"An object that represents the Coordinated Universal Time (UTC) zone.","nodes":[{"content":"An object that represents the Coordinated Universal Time (UTC) zone.","pos":[0,68]}]}],"pos":[180450,180519],"yaml":true},{"content":"Runs when the deserialization of an object has been completed.","nodes":[{"pos":[0,62],"content":"Runs when the deserialization of an object has been completed.","nodes":[{"content":"Runs when the deserialization of an object has been completed.","pos":[0,62]}]}],"pos":[182349,182412],"yaml":true},{"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","nodes":[{"pos":[0,106],"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","nodes":[{"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","pos":[0,106],"nodes":[{"content":"The object that initiated the callback.","pos":[0,39]},{"content":"The functionality for this parameter is not currently implemented.","pos":[40,106]}]}]}],"pos":[182578,182685],"yaml":true},{"content":"The <xref href=\"System.TimeZoneInfo\"></xref> object contains invalid or corrupted data.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object contains invalid or corrupted data.","source":"The <xref href=\"System.TimeZoneInfo\"></xref> object contains invalid or corrupted data."}],"pos":[182952,183040],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.TimeZoneInfo\"></xref> object.","nodes":[{"pos":[0,181],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with the data needed to serialize the current <ph id=\"ph2\">&lt;xref href=\"System.TimeZoneInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.TimeZoneInfo\"></xref> object."}],"pos":[184706,184888],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object to populate with data.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object to populate with data.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object to populate with data."}],"pos":[185163,185265],"yaml":true},{"content":"The destination for this serialization (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>).","nodes":[{"pos":[0,112],"content":"The destination for this serialization (see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph>).","source":"The destination for this serialization (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>)."}],"pos":[185360,185473],"yaml":true},{"content":"The <code>info</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>info</code> parameter is `null`."}],"pos":[185679,185722],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.TimeZoneInfo\n  commentId: T:System.TimeZoneInfo\n  id: TimeZoneInfo\n  children:\n  - System.TimeZoneInfo.BaseUtcOffset\n  - System.TimeZoneInfo.ClearCachedData\n  - System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)\n  - System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)\n  - System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)\n  - System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)\n  - System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)\n  - System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)\n  - System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)\n  - System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)\n  - System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)\n  - System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)\n  - System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])\n  - System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)\n  - System.TimeZoneInfo.DaylightName\n  - System.TimeZoneInfo.DisplayName\n  - System.TimeZoneInfo.Equals(System.Object)\n  - System.TimeZoneInfo.Equals(System.TimeZoneInfo)\n  - System.TimeZoneInfo.FindSystemTimeZoneById(System.String)\n  - System.TimeZoneInfo.FromSerializedString(System.String)\n  - System.TimeZoneInfo.GetAdjustmentRules\n  - System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)\n  - System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)\n  - System.TimeZoneInfo.GetHashCode\n  - System.TimeZoneInfo.GetSystemTimeZones\n  - System.TimeZoneInfo.GetUtcOffset(System.DateTime)\n  - System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)\n  - System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)\n  - System.TimeZoneInfo.Id\n  - System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)\n  - System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)\n  - System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)\n  - System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)\n  - System.TimeZoneInfo.IsInvalidTime(System.DateTime)\n  - System.TimeZoneInfo.Local\n  - System.TimeZoneInfo.StandardName\n  - System.TimeZoneInfo.SupportsDaylightSavingTime\n  - System.TimeZoneInfo.ToSerializedString\n  - System.TimeZoneInfo.ToString\n  - System.TimeZoneInfo.Utc\n  - System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: TimeZoneInfo\n  nameWithType: TimeZoneInfo\n  fullName: System.TimeZoneInfo\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents any time zone in the world.\n  remarks: \"A time zone is a geographical region in which the same time is used.  \\n  \\n The<xref:System.TimeZoneInfo> class offers significant enhancements over the <xref:System.TimeZone> class, which provides only limited functionality.  \\n  \\n The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time. A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone. The members of the <xref:System.TimeZoneInfo> class support the following operations:  \\n  \\n-   Retrieving a time zone that is already defined by the operating system.  \\n  \\n-   Enumerating the time zones that are available on a system.  \\n  \\n-   Converting times between different time zones.  \\n  \\n-   Creating a new time zone that is not already defined by the operating system.  \\n  \\n-   Serializing a time zone for later retrieval.  \\n  \\n> [!NOTE]\\n>  An instance of the <xref:System.TimeZoneInfo> class is immutable. Once an object has been instantiated, its values cannot be modified.  \\n  \\n You cannot instantiate a <xref:System.TimeZoneInfo> object using the `new` keyword. Instead, you must call one of the static members of the <xref:System.TimeZoneInfo> class shown in the following table.  \\n  \\n|Static member name|Description|  \\n|------------------------|-----------------|  \\n|<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method|Creates a custom time zone from application-supplied data.|  \\n|<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method|Instantiates a time zone defined in the system registry based on the zone's identifier.|  \\n|<xref:System.TimeZoneInfo.FromSerializedString%2A> method|Deserializes a string value to re-create a previously serialized <xref:System.TimeZoneInfo> object.|  \\n|<xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method|Returns an enumerable <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.TimeZoneInfo> objects that represents all time zones that are available on the local system.|  \\n|<xref:System.TimeZoneInfo.Local%2A> property|Instantiates a <xref:System.TimeZoneInfo> object that represents the local time zone.|  \\n|<xref:System.TimeZoneInfo.Utc%2A> property|Instantiates a <xref:System.TimeZoneInfo> object that represents the UTC zone.|  \\n  \\n You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry. You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application. You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object.\"\n  syntax:\n    content: 'public sealed class TimeZoneInfo : IEquatable<TimeZoneInfo>, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable{System.TimeZoneInfo}\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.BaseUtcOffset\n  commentId: P:System.TimeZoneInfo.BaseUtcOffset\n  id: BaseUtcOffset\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: BaseUtcOffset\n  nameWithType: TimeZoneInfo.BaseUtcOffset\n  fullName: TimeZoneInfo.BaseUtcOffset\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).\n  remarks: \"The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC). Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.  \\n  \\n The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes. It cannot include a fractional number of minutes.  \\n  \\n> [!NOTE]\\n>  Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments. To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.  \\n  \\n The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property differs from the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method in the following ways:  \\n  \\n-   The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property returns the difference between UTC and the time zone's standard time; the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method returns the difference between UTC and the time zone's time at a particular point in time.  \\n  \\n-   The <xref:System.TimeZoneInfo.GetUtcOffset%2A> method reflects the application of any adjustment rules to the time zone; the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property does not.\"\n  example:\n  - \"The following example uses the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property to display the difference between the local time and Coordinated Universal Time (UTC).  \\n  \\n [!code-csharp[System.TimeZone2.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#1)]\\n [!code-vb[System.TimeZone2.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#1)]\"\n  syntax:\n    content: public TimeSpan BaseUtcOffset { get; }\n    return:\n      type: System.TimeSpan\n      description: An object that indicates the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).\n  overload: System.TimeZoneInfo.BaseUtcOffset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ClearCachedData\n  commentId: M:System.TimeZoneInfo.ClearCachedData\n  id: ClearCachedData\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ClearCachedData()\n  nameWithType: TimeZoneInfo.ClearCachedData()\n  fullName: TimeZoneInfo.ClearCachedData()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Clears cached time zone data.\n  remarks: \"Cached time zone data includes data on the local time zone, the Coordinated Universal Time (UTC) zone, and any time zones that are retrieved by using methods such as <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> and <xref:System.TimeZoneInfo.GetSystemTimeZones%2A>.  \\n  \\n You might call the <xref:System.TimeZoneInfo.ClearCachedData%2A> method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed.  \\n  \\n Storing references to the local and UTC time zones is not recommended. After the call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method, these object variables will be undefined <xref:System.TimeZoneInfo> objects that are no longer references to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>. For example, in the following code, the second call to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method throws an <xref:System.ArgumentException> because the `local` variable is no longer considered equal to <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.  \\n  \\n [!code-csharp[System.TimeZone2.BestPractices#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/cs/System.TimeZone2.BestPractices.cs#1)]\\n [!code-vb[System.TimeZone2.BestPractices#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/vb/System.TimeZone2.BestPractices.vb#1)]\"\n  syntax:\n    content: public static void ClearCachedData ();\n    parameters: []\n  overload: System.TimeZoneInfo.ClearCachedData*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)\n  commentId: M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)\n  id: ConvertTime(System.DateTime,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTime(DateTime, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTime(DateTime, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTime(DateTime, TimeZoneInfo)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts a time to the time in a particular time zone.\n  remarks: \"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.  \\n  \\n This overload of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.  \\n  \\n|Kind property value|Source time zone|Method behavior|  \\n|-------------------------|----------------------|---------------------|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Local%2A>|Converts the local time to the time in `destinationTimeZone`.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Utc%2A>|Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Assumed to be <xref:System.TimeZoneInfo.Local%2A>.|Converts the local time to the time in `destinationTimeZone`.|  \\n  \\n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.  \\n  \\n|Condition|Returned Kind property value|  \\n|---------------|----------------------------------|  \\n|The `destinationTimeZone` is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.|<xref:System.DateTimeKind?displayProperty=fullName>|  \\n|The `destinationTimeZone` is <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.|<xref:System.DateTimeKind?displayProperty=fullName>|  \\n|All other date and time values and destination time zones.|<xref:System.DateTimeKind?displayProperty=fullName>|  \\n  \\n If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time. If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.  \\n  \\n If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively.  \\n  \\n You can also convert to or from UTC by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.\"\n  example:\n  - \"The following example converts an array of date and time values to times in the Eastern Time zone of the U.S. and Canada. It shows that the source time zone depends on the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the source <xref:System.DateTime> value. It also illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M. on November 7, 2010.  \\n  \\n [!code-csharp[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime1.cs#1)]\\n [!code-vb[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime1.vb#1)]\"\n  syntax:\n    content: public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo destinationTimeZone);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: The date and time to convert.\n    - id: destinationTimeZone\n      type: System.TimeZoneInfo\n      description: The time zone to convert <code>dateTime</code> to.\n    return:\n      type: System.DateTime\n      description: The date and time in the destination time zone.\n  overload: System.TimeZoneInfo.ConvertTime*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value of the <code>dateTime</code> parameter represents an invalid time.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value of the <code>destinationTimeZone</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)\n  commentId: M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)\n  id: ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTime(DateTimeOffset, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTime(DateTimeOffset, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTime(DateTimeOffset, TimeZoneInfo)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts a time to the time in a particular time zone.\n  remarks: \"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.  \\n  \\n This overload differs from the other overloads of the <xref:System.TimeZoneInfo.ConvertTime%2A> method by accepting a <xref:System.DateTimeOffset> value as its first parameter. This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone. As a result, the `dateTimeOffset` parameter cannot represent either an ambiguous time or an invalid time.  \\n  \\n In converting the `dateTimeOffset` value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone.  \\n  \\n If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, respectively.\"\n  example:\n  - \"The following example converts an array of <xref:System.DateTimeOffset> values to times in the Eastern Time zone of the U.S. and Canada. It illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M. on November 7, 2010.  \\n  \\n [!code-csharp[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime2.cs#2)]\\n [!code-vb[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime2.vb#2)]\"\n  syntax:\n    content: public static DateTimeOffset ConvertTime (DateTimeOffset dateTimeOffset, TimeZoneInfo destinationTimeZone);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: The date and time to convert.\n    - id: destinationTimeZone\n      type: System.TimeZoneInfo\n      description: The time zone to convert <code>dateTime</code> to.\n    return:\n      type: System.DateTimeOffset\n      description: The date and time in the destination time zone.\n  overload: System.TimeZoneInfo.ConvertTime*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value of the <code>destinationTimeZone</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)\n  commentId: M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)\n  id: ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts a time from one time zone to another.\n  remarks: \"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.  \\n  \\n The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZone` parameter, as the following table shows.  \\n  \\n|DateTime.Kind value|sourceTimeZone value|Method behavior|  \\n|-------------------------|--------------------------|---------------------|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.|Converts `dateTime` to the destination time zone's time.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.|Throws an <xref:System.ArgumentException>.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Equals <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.|Converts `dateTime` to the destination time zone's time.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.|Throws an <xref:System.ArgumentException>.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Any.|Converts `dateTime` to the destination time zone's time.|  \\n  \\n You can also convert to or from Coordinated Universal Time (UTC) by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.  \\n  \\n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.  \\n  \\n|Condition|Returned Kind property value|  \\n|---------------|----------------------------------|  \\n|The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>.|<xref:System.DateTimeKind?displayProperty=fullName>|  \\n|The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.|<xref:System.DateTimeKind?displayProperty=fullName>|  \\n|All other date and time values, source time zones, and destination time zones.|<xref:System.DateTimeKind?displayProperty=fullName>|  \\n  \\n If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time. If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.  \\n  \\n If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively.  \\n  \\n The <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method throws an <xref:System.ArgumentException> exception if the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` argument is <xref:System.DateTimeKind?displayProperty=fullName> but the `sourceTimeZone` argument is not <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method. Note that <xref:System.TimeZoneInfo> objects that represent the local time zone and that are retrieved by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>. Furthermore, <xref:System.TimeZoneInfo> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>. As an alternative, you can call the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> method.\"\n  example:\n  - \"The following example illustrates the use of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method to convert from Hawaiian Standard Time to local time.  \\n  \\n [!code-csharp[System.TimeZone2.Concepts#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#9)]\\n [!code-vb[System.TimeZone2.Concepts#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#9)]\"\n  syntax:\n    content: public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: The date and time to convert.\n    - id: sourceTimeZone\n      type: System.TimeZoneInfo\n      description: The time zone of <code>dateTime</code>.\n    - id: destinationTimeZone\n      type: System.TimeZoneInfo\n      description: The time zone to convert <code>dateTime</code> to.\n    return:\n      type: System.DateTime\n      description: The date and time in the destination time zone that corresponds to the <code>dateTime</code> parameter in the source time zone.\n  overload: System.TimeZoneInfo.ConvertTime*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <xref href=\\\"System.DateTime.Kind\\\"></xref> property of the <code>dateTime</code> parameter is <xref href=\\\"System.DateTimeKind.Local\\\"></xref>, but the <code>sourceTimeZone</code> parameter does not equal <xref href=\\\"System.DateTimeKind.Local\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.DateTime.Kind\\\"></xref> property of the <code>dateTime</code> parameter is <xref href=\\\"System.DateTimeKind.Utc\\\"></xref>, but the <code>sourceTimeZone</code> parameter does not equal <xref href=\\\"System.TimeZoneInfo.Utc\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>dateTime</code> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone's adjustment rules).\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>sourceTimeZone</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The <code>destinationTimeZone</code> parameter is `null`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)\n  commentId: M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)\n  id: ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTimeBySystemTimeZoneId(DateTime, String)\n  nameWithType: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime, String)\n  fullName: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts a time to the time in another time zone based on the time zone's identifier.\n  remarks: \"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.  \\n  \\n This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  \\n  \\n The <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.  \\n  \\n|Kind property value|Source time zone|Method behavior|  \\n|-------------------------|----------------------|---------------------|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Local%2A>|Converts the local time to the time in `destinationTimeZone`.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Utc%2A>|Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Assumed to be <xref:System.TimeZoneInfo.Local%2A>.|Converts the local time to the time in `destinationTimeZone`.|  \\n  \\n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.  \\n  \\n|Condition|Returned Kind property value|  \\n|---------------|----------------------------------|  \\n|The `destinationTimeZone` is `TimeZoneInfo.Utc.Id`.|<xref:System.DateTimeKind?displayProperty=fullName>|  \\n|Any other `destinationTimeZone` value.|<xref:System.DateTimeKind?displayProperty=fullName>|  \\n  \\n If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time. If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.  \\n  \\n If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively.  \\n  \\n This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry. It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. The `destinationTimeZoneId` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.\"\n  syntax:\n    content: public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string destinationTimeZoneId);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: The date and time to convert.\n    - id: destinationTimeZoneId\n      type: System.String\n      description: The identifier of the destination time zone.\n    return:\n      type: System.DateTime\n      description: The date and time in the destination time zone.\n  overload: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationTimeZoneId</code> is `null`.\n  - type: System.InvalidTimeZoneException\n    commentId: T:System.InvalidTimeZoneException\n    description: The time zone identifier was found, but the registry data is corrupted.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The process does not have the permissions required to read from the registry key that contains the time zone information.\n  - type: System.TimeZoneNotFoundException\n    commentId: T:System.TimeZoneNotFoundException\n    description: The <code>destinationTimeZoneId</code> identifier was not found on the local system.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)\n  commentId: M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)\n  id: ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTimeBySystemTimeZoneId(DateTimeOffset, String)\n  nameWithType: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTimeOffset, String)\n  fullName: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTimeOffset, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts a time to the time in another time zone based on the time zone's identifier.\n  remarks: \"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.  \\n  \\n This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  \\n  \\n Because the `dateTimeOffset` parameter represents a date and time together with that time's offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time.  \\n  \\n This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry. It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. The `destinationTimeZoneId` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.  \\n  \\n In converting the `dateTimeOffset` value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone.  \\n  \\n If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> or <xref:System.DateTimeOffset.MaxValue?displayProperty=fullName>, respectively.\"\n  syntax:\n    content: public static DateTimeOffset ConvertTimeBySystemTimeZoneId (DateTimeOffset dateTimeOffset, string destinationTimeZoneId);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: The date and time to convert.\n    - id: destinationTimeZoneId\n      type: System.String\n      description: The identifier of the destination time zone.\n    return:\n      type: System.DateTimeOffset\n      description: The date and time in the destination time zone.\n  overload: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationTimeZoneId</code> is `null`.\n  - type: System.InvalidTimeZoneException\n    commentId: T:System.InvalidTimeZoneException\n    description: The time zone identifier was found but the registry data is corrupted.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The process does not have the permissions required to read from the registry key that contains the time zone information.\n  - type: System.TimeZoneNotFoundException\n    commentId: T:System.TimeZoneNotFoundException\n    description: The <code>destinationTimeZoneId</code> identifier was not found on the local system.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)\n  commentId: M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)\n  id: ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTimeBySystemTimeZoneId(DateTime, String, String)\n  nameWithType: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime, String, String)\n  fullName: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime, String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts a time from one time zone to another based on time zone identifiers.\n  remarks: \"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.  \\n  \\n Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=fullName> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects. This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.  \\n  \\n This method retrieves the time zones whose identifiers are the `sourceTimeZoneId` and `destinationTimeZoneId` parameters from the registry. It cannot retrieve time zone objects that are created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.  \\n  \\n The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZoneId` parameter, as the following table shows.  \\n  \\n|DateTime.Kind value|sourceTimeZone value|Method behavior|  \\n|-------------------------|--------------------------|---------------------|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Equals `TimeZoneInfo.Utc.Id`.|Converts `dateTime` to the destination time zone's time.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Does not equal `TimeZoneInfo.Utc.Id`.|Throws an <xref:System.ArgumentException>.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Equals `TimeZoneInfo.Local.Id`.|Converts `dateTime` to the destination time zone's time.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Does not equal `TimeZoneInfo.Local.Id`.|Throws an <xref:System.ArgumentException>.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Any.|Converts `dateTime` to the destination time zone's time.|  \\n  \\n Because it relies on calls to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method performs a case-insensitive search to locate the time zones that correspond to `sourceTimeZoneId` and `destinationTimeZoneId`.  \\n  \\n If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time. If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.  \\n  \\n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <xref:System.DateTimeKind?displayProperty=fullName>.\"\n  example:\n  - \"The following example uses the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=fullName> method to display the time that corresponds to the local system time in eight cities of the world.  \\n  \\n [!code-csharp[System.TimeZone2.Conversions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#3)]\\n [!code-vb[System.TimeZone2.Conversions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#3)]\"\n  syntax:\n    content: public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: The date and time to convert.\n    - id: sourceTimeZoneId\n      type: System.String\n      description: The identifier of the source time zone.\n    - id: destinationTimeZoneId\n      type: System.String\n      description: The identifier of the destination time zone.\n    return:\n      type: System.DateTime\n      description: The date and time in the destination time zone that corresponds to the <code>dateTime</code> parameter in the source time zone.\n  overload: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <xref href=\\\"System.DateTime.Kind\\\"></xref> property of the <code>dateTime</code> parameter does not correspond to the source time zone.  \\n  \\n -or-  \\n  \\n <code>dateTime</code> is an invalid time in the source time zone.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>sourceTimeZoneId</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>destinationTimeZoneId</code> is `null`.\"\n  - type: System.InvalidTimeZoneException\n    commentId: T:System.InvalidTimeZoneException\n    description: The time zone identifiers were found, but the registry data is corrupted.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The user does not have the permissions required to read from the registry keys that hold time zone data.\n  - type: System.TimeZoneNotFoundException\n    commentId: T:System.TimeZoneNotFoundException\n    description: \"The <code>sourceTimeZoneId</code> identifier was not found on the local system.  \\n  \\n -or-  \\n  \\n The <code>destinationTimeZoneId</code> identifier was not found on the local system.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)\n  commentId: M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)\n  id: ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTimeFromUtc(DateTime, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTimeFromUtc(DateTime, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTimeFromUtc(DateTime, TimeZoneInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.\n  remarks: \"When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.  \\n  \\n The precise behavior of this method depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.  \\n  \\n|DateTime.Kind property|Conversion|  \\n|----------------------------|----------------|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Throws an <xref:System.ArgumentException>.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Converts from Coordinated Universal Time (UTC).|  \\n  \\n If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later than <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue?displayProperty=fullName> or <xref:System.DateTime.MaxValue?displayProperty=fullName>, respectively.\"\n  example:\n  - \"The following example converts Coordinated Universal Time (UTC) to Central Time.  \\n  \\n [!code-csharp[System.TimeZone2.Concepts#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#8)]\\n [!code-vb[System.TimeZone2.Concepts#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#8)]\"\n  syntax:\n    content: public static DateTime ConvertTimeFromUtc (DateTime dateTime, TimeZoneInfo destinationTimeZone);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: The Coordinated Universal Time (UTC).\n    - id: destinationTimeZone\n      type: System.TimeZoneInfo\n      description: The time zone to convert <code>dateTime</code> to.\n    return:\n      type: System.DateTime\n      description: The date and time in the destination time zone. Its <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Utc\"></xref> if <code>destinationTimeZone</code> is <xref href=\"System.TimeZoneInfo.Utc\"></xref>; otherwise, its <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Unspecified\"></xref>.\n  overload: System.TimeZoneInfo.ConvertTimeFromUtc*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.DateTime.Kind\"></xref> property of <code>dateTime</code> is <xref href=\"System.DateTimeKind.Local\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationTimeZone</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)\n  commentId: M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)\n  id: ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTimeToUtc(DateTime, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTimeToUtc(DateTime, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTimeToUtc(DateTime, TimeZoneInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the time in a specified time zone to Coordinated Universal Time (UTC).\n  remarks: \"If the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter equals <xref:System.DateTimeKind?displayProperty=fullName> and the `sourceTimeZone` parameter equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>, this method returns `dateTime` without performing any conversion.  \\n  \\n If `dateTime` corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone. If `dateTime` corresponds to an invalid time, this method throws an <xref:System.ArgumentException>.  \\n  \\n If the Coordinated Universal Time (UTC) equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later that <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.\"\n  example:\n  - \"The following example retrieves the current date from the local system and converts it to Coordinated Universal Time (UTC), then converts it to Tokyo Standard Time, and finally converts from Tokyo Standard Time back to UTC. Note that the two UTC times are identical.  \\n  \\n [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]\\n [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]\"\n  syntax:\n    content: public static DateTime ConvertTimeToUtc (DateTime dateTime, TimeZoneInfo sourceTimeZone);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: The date and time to convert.\n    - id: sourceTimeZone\n      type: System.TimeZoneInfo\n      description: The time zone of <code>dateTime</code>.\n    return:\n      type: System.DateTime\n      description: The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter. The <xref href=\"System.DateTime\"></xref> object's <xref href=\"System.DateTime.Kind\"></xref> property is always set to <xref href=\"System.DateTimeKind.Utc\"></xref>.\n  overload: System.TimeZoneInfo.ConvertTimeToUtc*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>dateTime</code>\\n    `.Kind` is <xref href=\\\"System.DateTimeKind.Utc\\\"></xref> and <code>sourceTimeZone</code> does not equal <xref href=\\\"System.TimeZoneInfo.Utc\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>dateTime</code>`.Kind` is <xref href=\\\"System.DateTimeKind.Local\\\"></xref> and <code>sourceTimeZone</code> does not equal <xref href=\\\"System.TimeZoneInfo.Local\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>sourceTimeZone</code>`.IsInvalidDateTime(`<code>dateTime</code>`)` returns `true`.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sourceTimeZone</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)\n  commentId: M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)\n  id: ConvertTimeToUtc(System.DateTime)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ConvertTimeToUtc(DateTime)\n  nameWithType: TimeZoneInfo.ConvertTimeToUtc(DateTime)\n  fullName: TimeZoneInfo.ConvertTimeToUtc(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified date and time to Coordinated Universal Time (UTC).\n  remarks: \"The exact conversion performed depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.  \\n  \\n|DateTime.Kind property|Conversion|  \\n|----------------------------|----------------|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Converts from local time to Coordinated Universal Time (UTC).|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Assumes `dateTime` is local time and converts from local time to UTC.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Returns `dateTime` unchanged.|  \\n  \\n If `dateTime` corresponds to an ambiguous local time, this method assumes that it is standard local time. If `dateTime` corresponds to an invalid local time, the method throws an <xref:System.ArgumentException>.  \\n  \\n> [!NOTE]\\n>  If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> methods. <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=fullName> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range. And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=fullName> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.  \\n  \\n If the UTC equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=fullName> or later that <xref:System.DateTime.MaxValue?displayProperty=fullName>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.\"\n  example:\n  - \"The following example illustrates the conversion of time values whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, <xref:System.DateTimeKind?displayProperty=fullName>, and <xref:System.DateTimeKind?displayProperty=fullName>, respectively. It also illustrates the conversion of ambiguous and invalid times.  \\n  \\n [!code-csharp[System.TimeZone2.Conversions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#1)]\\n [!code-vb[System.TimeZone2.Conversions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#1)]\"\n  syntax:\n    content: public static DateTime ConvertTimeToUtc (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: The date and time to convert.\n    return:\n      type: System.DateTime\n      description: The Coordinated Universal Time (UTC) that corresponds to the <code>dateTime</code> parameter. The <xref href=\"System.DateTime\"></xref> value's <xref href=\"System.DateTime.Kind\"></xref> property is always set to <xref href=\"System.DateTimeKind.Utc\"></xref>.\n  overload: System.TimeZoneInfo.ConvertTimeToUtc*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: >-\n      `TimeZoneInfo.Local.IsInvalidDateTime(`\n          <code>dateTime</code>\n          `)` returns `true`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)\n  commentId: M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)\n  id: CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: CreateCustomTimeZone(String, TimeSpan, String, String)\n  nameWithType: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String)\n  fullName: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.\n  remarks: \"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time). To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method.  \\n  \\n The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the properties of the <xref:System.TimeZoneInfo> object that are returned by the method call.  \\n  \\n|CreateCustomTimeZone parameter|TimeZoneInfo property|  \\n|------------------------------------|---------------------------|  \\n|`id`|<xref:System.TimeZoneInfo.Id%2A>|  \\n|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  \\n|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  \\n|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  \\n  \\n Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  \\n  \\n```  \\n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \\n(GMT-02:00) Mid-Atlantic  \\n(GMT-07:00) Mountain Time (US & Canada)  \\n```\"\n  example:\n  - \"The following example creates a custom time zone for the Mawson and Holme Bay regions of Antarctica. It then displays the result of converting the local time to the time in the new time zone.  \\n  \\n [!code-csharp[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#1)]\\n [!code-vb[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#1)]\"\n  syntax:\n    content: public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName);\n    parameters:\n    - id: id\n      type: System.String\n      description: The time zone's identifier.\n    - id: baseUtcOffset\n      type: System.TimeSpan\n      description: An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).\n    - id: displayName\n      type: System.String\n      description: The display name of the new time zone.\n    - id: standardDisplayName\n      type: System.String\n      description: The name of the new time zone's standard time.\n    return:\n      type: System.TimeZoneInfo\n      description: The new time zone.\n  overload: System.TimeZoneInfo.CreateCustomTimeZone*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>id</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>id</code> parameter is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])\n  commentId: M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])\n  id: CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[])\n  nameWithType: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[])\n  fullName: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.\n  remarks: \"This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method is suitable for creating a time zone that supports daylight saving time. To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method.  \\n  \\n The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.  \\n  \\n|CreateCustomTimeZone parameter|TimeZoneInfo member|  \\n|------------------------------------|-------------------------|  \\n|`id`|<xref:System.TimeZoneInfo.Id%2A>|  \\n|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  \\n|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  \\n|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  \\n|`daylightDisplayName`|<xref:System.TimeZoneInfo.DaylightName%2A>|  \\n|`adjustmentRules`|An array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method.|  \\n  \\n Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  \\n  \\n```  \\n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \\n(GMT-02:00) Mid-Atlantic  \\n(GMT-07:00) Mountain Time (US & Canada)  \\n```  \\n  \\n The `baseUtcOffset` parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules. In other words, the <xref:System.TimeZoneInfo> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules. To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.  \\n  \\n A time zone's adjustment rules are defined by doing the following:  \\n  \\n1.  Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition time for each adjustment rule.  \\n  \\n2.  Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.  \\n  \\n3.  Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.\"\n  example:\n  - \"The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica. It then converts the local time to the time in the new time zone and displays the result.  \\n  \\n [!code-csharp[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#2)]\\n [!code-vb[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#2)]\"\n  syntax:\n    content: public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules);\n    parameters:\n    - id: id\n      type: System.String\n      description: The time zone's identifier.\n    - id: baseUtcOffset\n      type: System.TimeSpan\n      description: An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).\n    - id: displayName\n      type: System.String\n      description: The display name of the new time zone.\n    - id: standardDisplayName\n      type: System.String\n      description: The new time zone's standard time name.\n    - id: daylightDisplayName\n      type: System.String\n      description: The daylight saving time name of the new time zone.\n    - id: adjustmentRules\n      type: System.TimeZoneInfo+AdjustmentRule[]\n      description: An array that augments the base UTC offset for a particular period.\n    return:\n      type: System.TimeZoneInfo\n      description: A <xref href=\"System.TimeZoneInfo\"></xref> object that represents the new time zone.\n  overload: System.TimeZoneInfo.CreateCustomTimeZone*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>id</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>id</code> parameter is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.\n  - type: System.InvalidTimeZoneException\n    commentId: T:System.InvalidTimeZoneException\n    description: \"The adjustment rules specified in the <code>adjustmentRules</code> parameter overlap.  \\n  \\n -or-  \\n  \\n The adjustment rules specified in the <code>adjustmentRules</code> parameter are not in chronological order.  \\n  \\n -or-  \\n  \\n One or more elements in <code>adjustmentRules</code> are `null`.  \\n  \\n -or-  \\n  \\n A date can have multiple adjustment rules applied to it.  \\n  \\n -or-  \\n  \\n The sum of the <code>baseUtcOffset</code> parameter and the <xref href=\\\"System.TimeZoneInfo.AdjustmentRule.DaylightDelta\\\"></xref> value of one or more objects in the <code>adjustmentRules</code> array is greater than 14 hours or less than -14 hours.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)\n  commentId: M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)\n  id: CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[], Boolean)\n  nameWithType: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[], Boolean)\n  fullName: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[], Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.\n  remarks: \"You can use this overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.  \\n  \\n The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.  \\n  \\n|CreateCustomTimeZone parameter|TimeZoneInfo property|  \\n|------------------------------------|---------------------------|  \\n|`id`|<xref:System.TimeZoneInfo.Id%2A>|  \\n|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  \\n|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  \\n|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  \\n|`daylightDisplayName`|<xref:System.TimeZoneInfo.DaylightName%2A> if `disableDaylightSavingTime` is `false`; <xref:System.String.Empty?displayProperty=fullName> if `disableDaylightSavingTime` is `true`.|  \\n|`adjustmentRules`|An array of <xref:System.TimeZoneInfo.AdjustmentRule> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `false`; an empty array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `true`.|  \\n|`disableDaylightSavingTime`|Not <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>.|  \\n  \\n Typically, the time zone's standard time name and its identifier are the same. However, the length of the time zone's identifier should not exceed 32 characters. The string passed to the `displayName` parameter follows a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both. For example:  \\n  \\n```  \\n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \\n(GMT-02:00) Mid-Atlantic  \\n(GMT-07:00) Mountain Time (US & Canada)  \\n```  \\n  \\n A time zone's adjustment rules are defined by doing the following:  \\n  \\n1.  Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition rules for each adjustment rule.  \\n  \\n2.  Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.  \\n  \\n3.  Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.  \\n  \\n If `disableDaylightSavingTime` parameter is `false`, the operation of this method is identical to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> overload. If `disableDaylightSavingTime` is `true`, the returned object includes no adjustment rules and a <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is an empty string.\"\n  example:\n  - \"The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica. It sets the `disableDaylightSavingTime` parameter in the call to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=fullName> method to `true`. It then displays the new time zone's daylight saving time name, if one is present, and the number of adjustment rules to confirm that the new time zone has no daylight saving time information.  \\n  \\n [!code-csharp[System.TimeZone2.CreateTimeZone#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#3)]\\n [!code-vb[System.TimeZone2.CreateTimeZone#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#3)]\"\n  syntax:\n    content: public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime);\n    parameters:\n    - id: id\n      type: System.String\n      description: The time zone's identifier.\n    - id: baseUtcOffset\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> object that represents the time difference between this time zone and Coordinated Universal Time (UTC).\n    - id: displayName\n      type: System.String\n      description: The display name of the new time zone.\n    - id: standardDisplayName\n      type: System.String\n      description: The standard time name of the new time zone.\n    - id: daylightDisplayName\n      type: System.String\n      description: The daylight saving time name of the new time zone.\n    - id: adjustmentRules\n      type: System.TimeZoneInfo+AdjustmentRule[]\n      description: An array of <xref href=\"System.TimeZoneInfo.AdjustmentRule\"></xref> objects that augment the base UTC offset for a particular period.\n    - id: disableDaylightSavingTime\n      type: System.Boolean\n      description: '`true` to discard any daylight saving time-related information present in <code>adjustmentRules</code> with the new object; otherwise, `false`.'\n    return:\n      type: System.TimeZoneInfo\n      description: The new time zone. If the <code>disableDaylightSavingTime</code> parameter is `true`, the returned object has no daylight saving time data.\n  overload: System.TimeZoneInfo.CreateCustomTimeZone*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>id</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>id</code> parameter is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n The <code>baseUtcOffset</code> parameter does not represent a whole number of minutes.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>baseUtcOffset</code> parameter is greater than 14 hours or less than -14 hours.\n  - type: System.InvalidTimeZoneException\n    commentId: T:System.InvalidTimeZoneException\n    description: \"The adjustment rules specified in the <code>adjustmentRules</code> parameter overlap.  \\n  \\n -or-  \\n  \\n The adjustment rules specified in the <code>adjustmentRules</code> parameter are not in chronological order.  \\n  \\n -or-  \\n  \\n One or more elements in <code>adjustmentRules</code> are `null`.  \\n  \\n -or-  \\n  \\n A date can have multiple adjustment rules applied to it.  \\n  \\n -or-  \\n  \\n The sum of the <code>baseUtcOffset</code> parameter and the <xref href=\\\"System.TimeZoneInfo.AdjustmentRule.DaylightDelta\\\"></xref> value of one or more objects in the <code>adjustmentRules</code> array is greater than 14 hours or less than -14 hours.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.DaylightName\n  commentId: P:System.TimeZoneInfo.DaylightName\n  id: DaylightName\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: DaylightName\n  nameWithType: TimeZoneInfo.DaylightName\n  fullName: TimeZoneInfo.DaylightName\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the display name for the current time zone's daylight saving time.\n  remarks: \"The display name is localized based on the culture installed with the Windows operating system.  \\n  \\n A <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is not <xref:System.String?displayProperty=fullName> or `null` does not necessarily indicate that the time zone supports daylight saving time. To determine whether the time zone supports daylight saving time, check the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.  \\n  \\n In most cases, the <xref:System.TimeZoneInfo.DaylightName%2A> property of time zones defined in the registry is not <xref:System.String.Empty?displayProperty=fullName> or `null`. However, the <xref:System.TimeZoneInfo.DaylightName%2A> property of custom time zones can be set to <xref:System.String.Empty?displayProperty=fullName>. This occurs when custom time zones are created by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=fullName> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=fullName> overload and the `disableDaylightSavingTime` parameter is `true`. Therefore, your code should never assume that the value of the <xref:System.TimeZoneInfo.DaylightName%2A> property is not `null` or empty.  \\n  \\n The <xref:System.TimeZoneInfo.DaylightName%2A> property is equivalent to the <xref:System.TimeZone.DaylightName%2A> property of the <xref:System.TimeZone> class.\"\n  example:\n  - \"The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.  \\n  \\n [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]\\n [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]\"\n  syntax:\n    content: public string DaylightName { get; }\n    return:\n      type: System.String\n      description: The display name for the time zone's daylight saving time.\n  overload: System.TimeZoneInfo.DaylightName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.DisplayName\n  commentId: P:System.TimeZoneInfo.DisplayName\n  id: DisplayName\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: TimeZoneInfo.DisplayName\n  fullName: TimeZoneInfo.DisplayName\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the general display name that represents the time zone.\n  remarks: \"The display name is localized based on the culture installed with the Windows operating system.  \\n  \\n Time zone display names for Windows system time zones follow a fairly standard format. The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses. For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.  This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone. For example:  \\n  \\n```  \\n(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London  \\n(GMT+02:00) Athens, Beirut, Istanbul, Minsk  \\n(GMT-02:00) Mid-Atlantic  \\n(GMT-07:00) Mountain Time (US & Canada)  \\n```\"\n  example:\n  - \"The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name. The output is displayed for a system in the U.S. Pacific Standard Time zone.  \\n  \\n [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]\\n [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]\"\n  syntax:\n    content: public string DisplayName { get; }\n    return:\n      type: System.String\n      description: The time zone's general display name.\n  overload: System.TimeZoneInfo.DisplayName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.Equals(System.Object)\n  commentId: M:System.TimeZoneInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: TimeZoneInfo.Equals(Object)\n  fullName: TimeZoneInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Determines whether the current <xref href=\"System.TimeZoneInfo\"></xref> object and another object are equal.\n  remarks: \"This method converts or casts `obj` to a <xref:System.TimeZoneInfo> object and compares it with the current instance. The test for equality is based on a comparison of values. The current <xref:System.TimeZoneInfo> instance and `obj` are considered to be equal under the following conditions:  \\n  \\n-   The run-time type of `obj` is <xref:System.TimeZoneInfo>.  \\n  \\n-   The two objects have the same <xref:System.TimeZoneInfo.Id%2A> property value.  \\n  \\n-   The two objects have the same adjustment rules.  \\n  \\n If `obj` is `null`, this method returns `false`.\"\n  example:\n  - \"The following example uses the <xref:System.TimeZoneInfo.Equals%28System.Object%29> method to determine whether the local time zone is Pacific Time or Eastern Time.  \\n  \\n [!code-csharp[System.TimeZoneInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.equals/cs/equals1.cs#1)]\\n [!code-vb[System.TimeZoneInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.equals/vb/equals1.vb#1)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: A second object to compare with the current object.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is a <xref href=\"System.TimeZoneInfo\"></xref> object that is equal to the current instance; otherwise, `false`.'\n  overload: System.TimeZoneInfo.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.Equals(System.TimeZoneInfo)\n  commentId: M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)\n  id: Equals(System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: Equals(TimeZoneInfo)\n  nameWithType: TimeZoneInfo.Equals(TimeZoneInfo)\n  fullName: TimeZoneInfo.Equals(TimeZoneInfo)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether the current <xref href=\"System.TimeZoneInfo\"></xref> object and another <xref href=\"System.TimeZoneInfo\"></xref> object are equal.\n  remarks: \"Equality is based on a comparison of values. Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:  \\n  \\n-   The value of their <xref:System.TimeZoneInfo.Id%2A> property is the same.  \\n  \\n-   They have the same adjustment rules.  \\n  \\n <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> returns the Boolean value that results from evaluating the following expression:  \\n  \\n ```csharp \\n other.Id == this.Id && HasSameRules(other);  \\n ```\\n  \\n ```vb\\n other.Id = me.Id AndAlso HasSameRules(other)  \\n ```\\n\\n If the `other` parameter is an uninitialized <xref:System.TimeZoneInfo> object, this method returns `false`.\"\n  example:\n  - \"The following example uses the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method to determine whether the local time zone is Pacific Time or Eastern Time.  \\n  \\n [!code-csharp[System.TimeZone2.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#7)]\\n [!code-vb[System.TimeZone2.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#7)]\"\n  syntax:\n    content: public bool Equals (TimeZoneInfo other);\n    parameters:\n    - id: other\n      type: System.TimeZoneInfo\n      description: A second object to compare with the current object.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.TimeZoneInfo\"></xref> objects are equal; otherwise, `false`.'\n  overload: System.TimeZoneInfo.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.FindSystemTimeZoneById(System.String)\n  commentId: M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)\n  id: FindSystemTimeZoneById(System.String)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: FindSystemTimeZoneById(String)\n  nameWithType: TimeZoneInfo.FindSystemTimeZoneById(String)\n  fullName: TimeZoneInfo.FindSystemTimeZoneById(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Retrieves a <xref href=\"System.TimeZoneInfo\"></xref> object from the registry based on its identifier.\n  remarks: \"The `id` parameter must correspond exactly to the time zone's registry key in length, but not in case, for a successful match to occur; that is, the comparison of `id` with time zone identifiers is case-insensitive. If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <xref:System.TimeZoneInfo> objects returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method.  \\n  \\n <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> tries to match `id` to the subkey names of the HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Time Zones branch of the registry under Windows XP and Windows Vista. This branch does not necessarily contain a comprehensive list of time zone identifiers. If required by an application, you can create a particular time zone either by calling one of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method or by calling <xref:System.TimeZoneInfo.FromSerializedString%2A> to deserialize a <xref:System.TimeZoneInfo> object that represents the required time zone. However, time zones created by these method calls are not included in the registry and cannot be retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method. These custom time zones can be accessed only through the object reference returned by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> or <xref:System.TimeZoneInfo.FromSerializedString%2A> method call.\"\n  example:\n  - \"The following example uses the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve the Tokyo Standard Time zone. This <xref:System.TimeZoneInfo> object is then used to convert the local time to the time in Tokyo and to determine whether it is Tokyo Standard Time or Tokyo Daylight Time.  \\n  \\n [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]\\n [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]\"\n  syntax:\n    content: public static TimeZoneInfo FindSystemTimeZoneById (string id);\n    parameters:\n    - id: id\n      type: System.String\n      description: The time zone identifier, which corresponds to the <xref href=\"System.TimeZoneInfo.Id\"></xref> property.\n    return:\n      type: System.TimeZoneInfo\n      description: An object whose identifier is the value of the <code>id</code> parameter.\n  overload: System.TimeZoneInfo.FindSystemTimeZoneById*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: The system does not have enough memory to hold information about the time zone.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>id</code> parameter is `null`.\n  - type: System.TimeZoneNotFoundException\n    commentId: T:System.TimeZoneNotFoundException\n    description: The time zone identifier specified by <code>id</code> was not found. This means that a registry key whose name matches <code>id</code> does not exist, or that the key exists but does not contain any time zone data.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The process does not have the permissions required to read from the registry key that contains the time zone information.\n  - type: System.InvalidTimeZoneException\n    commentId: T:System.InvalidTimeZoneException\n    description: The time zone identifier was found, but the registry data is corrupted.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.FromSerializedString(System.String)\n  commentId: M:System.TimeZoneInfo.FromSerializedString(System.String)\n  id: FromSerializedString(System.String)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: FromSerializedString(String)\n  nameWithType: TimeZoneInfo.FromSerializedString(String)\n  fullName: TimeZoneInfo.FromSerializedString(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Deserializes a string to re-create an original serialized <xref href=\"System.TimeZoneInfo\"></xref> object.\n  remarks: There is an alternative to providing all the code required to create a time zone that is not found in the registry. You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string. The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method.\n  example:\n  - \"The following example tries to retrieve the Antarctica/South Pole time zone from the local system. If it fails, the code tries to retrieve information about the time zone from a text file in the application directory. If this attempt fails, the code creates the time zone and writes information about the time zone to the text file.  \\n  \\n [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]\\n [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]\"\n  syntax:\n    content: public static TimeZoneInfo FromSerializedString (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: The string representation of the serialized <xref href=\"System.TimeZoneInfo\"></xref> object.\n    return:\n      type: System.TimeZoneInfo\n      description: The original serialized object.\n  overload: System.TimeZoneInfo.FromSerializedString*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>source</code> parameter is <xref href=\"System.String.Empty\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>source</code> parameter is a null string.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The source parameter cannot be deserialized back into a <xref href=\"System.TimeZoneInfo\"></xref> object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.GetAdjustmentRules\n  commentId: M:System.TimeZoneInfo.GetAdjustmentRules\n  id: GetAdjustmentRules\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: GetAdjustmentRules()\n  nameWithType: TimeZoneInfo.GetAdjustmentRules()\n  fullName: TimeZoneInfo.GetAdjustmentRules()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Retrieves an array of <xref href=\"System.TimeZoneInfo.AdjustmentRule\"></xref> objects that apply to the current <xref href=\"System.TimeZoneInfo\"></xref> object.\n  remarks: \"The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> objects. Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change). In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=fullName> objects that define when each annual transition to and from standard time occurs.  \\n  \\n If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <xref:System.Array.Length%2A> – 1).  \\n  \\n If a time zone has no adjustment rules, the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an empty array (an array whose <xref:System.Array.Length%2A> is zero).  \\n  \\n Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone. To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.\"\n  example:\n  - \"The following example retrieves all time zones that are defined on the local system and displays complete information about their adjustment rules to the console.  \\n  \\n [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]\\n [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]\"\n  syntax:\n    content: public TimeZoneInfo.AdjustmentRule[] GetAdjustmentRules ();\n    parameters: []\n    return:\n      type: System.TimeZoneInfo+AdjustmentRule[]\n      description: An array of objects for this time zone.\n  overload: System.TimeZoneInfo.GetAdjustmentRules*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: The system does not have enough memory to make an in-memory copy of the adjustment rules.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)\n  commentId: M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)\n  id: GetAmbiguousTimeOffsets(System.DateTime)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: GetAmbiguousTimeOffsets(DateTime)\n  nameWithType: TimeZoneInfo.GetAmbiguousTimeOffsets(DateTime)\n  fullName: TimeZoneInfo.GetAmbiguousTimeOffsets(DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns information about the possible dates and times that an ambiguous date and time can be mapped to.\n  remarks: \"The precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.  \\n  \\n|TimeZoneInfo object type|Kind property value|Behavior|  \\n|------------------------------|-------------------------|--------------|  \\n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Returns ambiguous time offsets for `dateTime`.|  \\n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName>|Converts `dateTime` to the local time, and then returns ambiguous time offsets for that time.|  \\n|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>|Any value.|Throws an <xref:System.ArgumentException>.|  \\n|Any other time zone.|<xref:System.DateTimeKind.Local> or <xref:System.DateTimeKind?displayProperty=fullName>|Converts `dateTime` to the specified time zone, and then determines whether that time is ambiguous.|  \\n|Any other time zone.|<xref:System.DateTimeKind?displayProperty=fullName>|Determines whether `dateTime` is ambiguous in the specified time zone.|  \\n  \\n The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined. However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property. To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).\"\n  example:\n  - \"The following example defines a method named `ShowPossibleUtcTimes` that uses the <xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29> method to map an ambiguous time to its possible corresponding Coordinated Universal Time (UTC) times.  \\n  \\n [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#1)]\\n [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#1)]  \\n  \\n The method can then be called using code such as the following:  \\n  \\n [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#2)]\\n [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#2)]\"\n  syntax:\n    content: public TimeSpan[] GetAmbiguousTimeOffsets (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: A date and time.\n    return:\n      type: System.TimeSpan[]\n      description: An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.\n  overload: System.TimeZoneInfo.GetAmbiguousTimeOffsets*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dateTime</code> is not an ambiguous time.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)\n  commentId: M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)\n  id: GetAmbiguousTimeOffsets(System.DateTimeOffset)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: GetAmbiguousTimeOffsets(DateTimeOffset)\n  nameWithType: TimeZoneInfo.GetAmbiguousTimeOffsets(DateTimeOffset)\n  fullName: TimeZoneInfo.GetAmbiguousTimeOffsets(DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns information about the possible dates and times that an ambiguous date and time can be mapped to.\n  remarks: \"The precise behavior of this method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the <xref:System.TimeZoneInfo> object. If the value of the <xref:System.DateTimeOffset.Offset%2A> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets. Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then returns the possible offsets of that date and time.  \\n  \\n The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined. However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property. To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).\"\n  syntax:\n    content: public TimeSpan[] GetAmbiguousTimeOffsets (DateTimeOffset dateTimeOffset);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: A date and time.\n    return:\n      type: System.TimeSpan[]\n      description: An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.\n  overload: System.TimeZoneInfo.GetAmbiguousTimeOffsets*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dateTimeOffset</code> is not an ambiguous time.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.GetHashCode\n  commentId: M:System.TimeZoneInfo.GetHashCode\n  id: GetHashCode\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: TimeZoneInfo.GetHashCode()\n  fullName: TimeZoneInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Serves as a hash function for hashing algorithms and data structures such as hash tables.\n  remarks: For additional detail about the <xref:System.TimeZoneInfo.GetHashCode%2A> method, see <xref:System.Object.GetHashCode%2A>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer that serves as the hash code for this <xref href=\"System.TimeZoneInfo\"></xref> object.\n  overload: System.TimeZoneInfo.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.GetSystemTimeZones\n  commentId: M:System.TimeZoneInfo.GetSystemTimeZones\n  id: GetSystemTimeZones\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: GetSystemTimeZones()\n  nameWithType: TimeZoneInfo.GetSystemTimeZones()\n  fullName: TimeZoneInfo.GetSystemTimeZones()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a sorted collection of all the time zones about which information is available on the local system.\n  remarks: \"The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Time Zones key. If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string (\\\"\\\").  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the registry. It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. These are accessible only through the object reference returned by the time zone creation method.  \\n  \\n The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture. For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>.  \\n  \\n The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object returned by this method supports the <xref:System.Collections.Generic.IEnumerable%601> interface, which means that it can be iterated using the `foreach` (in C#) or `For Each…Next` (in Visual Basic) statements. Each iteration of the loop provides the next <xref:System.TimeZoneInfo> object in the collection.  \\n  \\n The collection of <xref:System.TimeZoneInfo> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods. If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method. For more information, see [How to: Create Time Zones Without Adjustment Rules](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md) and [How to: Create Time Zones with Adjustment Rules](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  \\n  \\n You can also determine whether an individual time zone is defined on the local computer by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method and providing the identifier of the time zone you want to retrieve as a parameter.\"\n  example:\n  - \"The following example retrieves a collection of time zone objects that represent the time zones defined on a computer and writes information about them to a text file.  \\n  \\n [!code-csharp[System.TimeZone2.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/getsystemtimezones1.cs#6)]\\n [!code-vb[System.TimeZone2.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/getsystemtimezones1.vb#6)]\"\n  syntax:\n    content: public static System.Collections.ObjectModel.ReadOnlyCollection<TimeZoneInfo> GetSystemTimeZones ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.TimeZoneInfo}\n      description: A read-only collection of <xref href=\"System.TimeZoneInfo\"></xref> objects.\n  overload: System.TimeZoneInfo.GetSystemTimeZones*\n  exceptions:\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is insufficient memory to store all time zone information.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The user does not have permission to read from the registry keys that contain time zone information.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.GetUtcOffset(System.DateTime)\n  commentId: M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)\n  id: GetUtcOffset(System.DateTime)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: GetUtcOffset(DateTime)\n  nameWithType: TimeZoneInfo.GetUtcOffset(DateTime)\n  fullName: TimeZoneInfo.GetUtcOffset(DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.\n  remarks: \"The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.  \\n  \\n If the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result. For example, this can occur if the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> but the time zone object is not the local time zone. If `dateTime` is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time. If `dateTime` is invalid, this method returns a <xref:System.TimeSpan> object that reflects the difference between UTC and the time zone's standard time.  \\n  \\n The <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=fullName> method is similar in operation to the <xref:System.TimeZone.GetUtcOffset%2A> method of the <xref:System.TimeZone> class.\"\n  example:\n  - \"The following example illustrates the use of the <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29> method with different time zones and with date values that have different <xref:System.DateTime.Kind%2A> property values.  \\n  \\n [!code-csharp[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/cs/System.TimeZone2.GetUtcOffset.cs#1)]\\n [!code-vb[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/vb/System.TimeZone2.GetUtcOffset.vb#1)]\"\n  syntax:\n    content: public TimeSpan GetUtcOffset (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: The date and time to determine the offset for.\n    return:\n      type: System.TimeSpan\n      description: An object that indicates the time difference between the two time zones.\n  overload: System.TimeZoneInfo.GetUtcOffset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)\n  commentId: M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)\n  id: GetUtcOffset(System.DateTimeOffset)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: GetUtcOffset(DateTimeOffset)\n  nameWithType: TimeZoneInfo.GetUtcOffset(DateTimeOffset)\n  fullName: TimeZoneInfo.GetUtcOffset(DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.\n  remarks: The returned time span includes any differences due to the application of adjustment rules to the current time zone. It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.\n  syntax:\n    content: public TimeSpan GetUtcOffset (DateTimeOffset dateTimeOffset);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: The date and time to determine the offset for.\n    return:\n      type: System.TimeSpan\n      description: An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.\n  overload: System.TimeZoneInfo.GetUtcOffset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)\n  commentId: M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)\n  id: HasSameRules(System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: HasSameRules(TimeZoneInfo)\n  nameWithType: TimeZoneInfo.HasSameRules(TimeZoneInfo)\n  fullName: TimeZoneInfo.HasSameRules(TimeZoneInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Indicates whether the current object and another <xref href=\"System.TimeZoneInfo\"></xref> object have the same adjustment rules.\n  remarks: Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules. Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=fullName> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property).\n  example:\n  - \"Typically, a number of time zones defined in the registry have the same offset from Coordinated Universal Time (UTC) and the same adjustment rules. The following example displays a list of these time zones to the console.  \\n  \\n [!code-csharp[System.TimeZone2.HasSameRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/cs/HasSameRules.cs#1)]\\n [!code-vb[System.TimeZone2.HasSameRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/vb/HasSameRules.vb#1)]\"\n  syntax:\n    content: public bool HasSameRules (TimeZoneInfo other);\n    parameters:\n    - id: other\n      type: System.TimeZoneInfo\n      description: A second object to compare with the current <xref href=\"System.TimeZoneInfo\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the two time zones have identical adjustment rules and an identical base offset; otherwise, `false`.'\n  overload: System.TimeZoneInfo.HasSameRules*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>other</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.Id\n  commentId: P:System.TimeZoneInfo.Id\n  id: Id\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: Id\n  nameWithType: TimeZoneInfo.Id\n  fullName: TimeZoneInfo.Id\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the time zone identifier.\n  remarks: \"The time zone identifier is a key string that uniquely identifies a particular time zone. In Windows XP and Windows Vista, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Time Zone branch of the registry. It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve a particular time zone from the registry.  \\n  \\n> [!IMPORTANT]\\n>  Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer. The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.  \\n  \\n The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property. The identifier of the Coordinated Universal Time zone is UTC.\"\n  example:\n  - \"The following example lists the identifier of each of the time zones defined on the local computer.  \\n  \\n [!code-csharp[System.TimeZone2.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#5)]\\n [!code-vb[System.TimeZone2.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#5)]\"\n  syntax:\n    content: public string Id { get; }\n    return:\n      type: System.String\n      description: The time zone identifier.\n  overload: System.TimeZoneInfo.Id*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)\n  commentId: M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)\n  id: IsAmbiguousTime(System.DateTime)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: IsAmbiguousTime(DateTime)\n  nameWithType: TimeZoneInfo.IsAmbiguousTime(DateTime)\n  fullName: TimeZoneInfo.IsAmbiguousTime(DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.\n  remarks: \"An ambiguous time falls within a range of times for the current time zone. This means it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. See the Example section for an illustration.  \\n  \\n Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time. Therefore, these time zones have no adjustment rules and calls to the <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> method always return `false`.  \\n  \\n For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.  \\n  \\n|TimeZoneInfo object type|Kind property value|Behavior|  \\n|------------------------------|-------------------------|--------------|  \\n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Determines whether the `dateTime` parameter is ambiguous.|  \\n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName>|Converts `dateTime` to the local time and then determines whether that time is ambiguous.|  \\n|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Returns `false`.|  \\n|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>|<xref:System.DateTimeKind?displayProperty=fullName>|If `dateTime` is ambiguous, assumes it is a standard time, converts it to UTC, and returns `false`.|  \\n|Any other time zone.|<xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>|Converts `dateTime` to the time in the specified time zone and then determines whether that time is ambiguous.|  \\n|Any other time zone.|<xref:System.DateTimeKind?displayProperty=fullName>|Determines whether `dateTime` is ambiguous.|\"\n  example:\n  - \"In the Pacific Time zone, daylight saving time ends at 2:00 A.M. on November 4, 2007. The following example passes the time at one-minute intervals from 12:59 A.M. on November 4, 2007, to 2:01 A.M. on November 4, 2007, to the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone. The console output indicates that all times from 1:00 A.M. on November 4, 2007, to 1:59 A.M. on November 4, 2007, are ambiguous.  \\n  \\n [!code-csharp[System.TimeZone2.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#8)]\\n [!code-vb[System.TimeZone2.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#8)]\"\n  syntax:\n    content: public bool IsAmbiguousTime (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: A date and time value.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>dateTime</code> parameter is ambiguous; otherwise, `false`.'\n  overload: System.TimeZoneInfo.IsAmbiguousTime*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> value is <xref href=\"System.DateTimeKind.Local\"></xref> and <code>dateTime</code> is an invalid time.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)\n  commentId: M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)\n  id: IsAmbiguousTime(System.DateTimeOffset)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: IsAmbiguousTime(DateTimeOffset)\n  nameWithType: TimeZoneInfo.IsAmbiguousTime(DateTimeOffset)\n  fullName: TimeZoneInfo.IsAmbiguousTime(DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.\n  remarks: \"An ambiguous time falls within a range of times for the current time zone. This means that it can be either a standard time or a time that results from the application of an adjustment rule. Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time. Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.  \\n  \\n The precise behavior of the method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the current time zone. If the value of the <xref:System.DateTimeOffset.Offset%2A> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous. Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then determines whether that date and time is ambiguous.\"\n  syntax:\n    content: public bool IsAmbiguousTime (DateTimeOffset dateTimeOffset);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: A date and time.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>dateTimeOffset</code> parameter is ambiguous in the current time zone; otherwise, `false`.'\n  overload: System.TimeZoneInfo.IsAmbiguousTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)\n  commentId: M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)\n  id: IsDaylightSavingTime(System.DateTimeOffset)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: IsDaylightSavingTime(DateTimeOffset)\n  nameWithType: TimeZoneInfo.IsDaylightSavingTime(DateTimeOffset)\n  fullName: TimeZoneInfo.IsDaylightSavingTime(DateTimeOffset)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <xref href=\"System.TimeZoneInfo\"></xref> object.\n  remarks: \"The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter. If `dateTimeOffset` does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone. It then determines whether that date and time is a daylight saving time.  \\n  \\n If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`. To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.\"\n  syntax:\n    content: public bool IsDaylightSavingTime (DateTimeOffset dateTimeOffset);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: A date and time value.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>dateTimeOffset</code> parameter is a daylight saving time; otherwise, `false`.'\n  overload: System.TimeZoneInfo.IsDaylightSavingTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)\n  commentId: M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)\n  id: IsDaylightSavingTime(System.DateTime)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: IsDaylightSavingTime(DateTime)\n  nameWithType: TimeZoneInfo.IsDaylightSavingTime(DateTime)\n  fullName: TimeZoneInfo.IsDaylightSavingTime(DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <xref href=\"System.TimeZoneInfo\"></xref> object.\n  remarks: \"The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.  \\n  \\n|TimeZoneInfo object|DateTime.Kind property|Result|  \\n|-------------------------|----------------------------|------------|  \\n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|`DateTimeKind.Local`|Determines whether `dateTime` is daylight saving time.|  \\n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|`DateTimeKind.Utc`|Converts `dateTime` from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time.|  \\n|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|`DateTimeKind.Unspecified`|Assumes that `dateTime` represents local time and determines whether it is daylight saving time.|  \\n|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName>|`DateTimeKind.Local`, `DateTimeKind.Unspecified`, or `DateTimeKind.Utc`|Returns `false` (UTC does not support daylight saving time).|  \\n|Any other <xref:System.TimeZoneInfo>object.|`DateTimeKind.Local`|Converts the local time to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.|  \\n|Any other <xref:System.TimeZoneInfo>object.|`DateTimeKind.Utc`|Converts UTC to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.|  \\n|Any other <xref:System.TimeZoneInfo>object.|`DateTimeKind.Unspecified`|Determines whether `dateTime` is daylight saving time.|  \\n  \\n If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`. A number of time zones, including <xref:System.TimeZoneInfo.Utc%2A>, do not observe daylight saving time.  To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.  \\n  \\n If the `dateTime` parameter specifies an ambiguous time in the current object's time zone, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method interprets `dateTime` as standard time and returns `false` if its <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>. If the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.  \\n  \\n Because the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=fullName> method can return `false` for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=fullName> method can be paired with the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether a time may be a daylight saving time. Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method can be called first to determine whether a date and time may be a daylight saving time. If the method returns `false`, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method can be called to determine whether the <xref:System.DateTime> value is a daylight saving time. The following example illustrates this technique.  \\n  \\n [!code-csharp[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#2)]\\n [!code-vb[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#2)]  \\n  \\n If the `dateTime` parameter specifies an invalid time, the method call throws an <xref:System.ArgumentException> if the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>; otherwise, the method returns `false`.  \\n  \\n Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name. See the Example section for an illustration.\"\n  example:\n  - \"The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> method to determine whether to display a time zone's standard time name or daylight saving time name.  \\n  \\n [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]\\n [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]\"\n  syntax:\n    content: public bool IsDaylightSavingTime (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: A date and time value.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>dateTime</code> parameter is a daylight saving time; otherwise, `false`.'\n  overload: System.TimeZoneInfo.IsDaylightSavingTime*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.DateTime.Kind\"></xref> property of the <code>dateTime</code> value is <xref href=\"System.DateTimeKind.Local\"></xref> and <code>dateTime</code> is an invalid time.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.IsInvalidTime(System.DateTime)\n  commentId: M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)\n  id: IsInvalidTime(System.DateTime)\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: IsInvalidTime(DateTime)\n  nameWithType: TimeZoneInfo.IsInvalidTime(DateTime)\n  fullName: TimeZoneInfo.IsInvalidTime(DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether a particular date and time is invalid.\n  remarks: \"An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule. Typically, invalid times occur when the time moves ahead for daylight saving time. See the Example section for an illustration.  \\n  \\n The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter affects whether `dateTime` represents an invalid time, as the following table shows.  \\n  \\n|DateTime.Kind property|TimeZoneInfo object (if applicable)|Behavior|  \\n|----------------------------|-------------------------------------------|--------------|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>|Determines whether the time is invalid.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> or a non-local time zone.|Converts `dateTime` to the time of the <xref:System.TimeZoneInfo> object and returns `false`.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Not applicable.|Assumes `dateTime` is the time of the <xref:System.TimeZoneInfo> object and determines whether it is invalid.|  \\n|<xref:System.DateTimeKind?displayProperty=fullName>|Not applicable.|Returns `false`.|\"\n  example:\n  - \"In the Pacific Time zone, daylight saving time begins at 2:00 A.M. on April 2, 2006. The following code passes the time at one-minute intervals from 1:59 A.M. on April 2, 2006, to 3:01 A.M. on April 2, 2006, to the <xref:System.TimeZoneInfo.IsInvalidTime%2A> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone. The console output indicates that all times from 2:00 A.M. on April 2, 2006, to 2:59 A.M. on April 2, 2006, are invalid.  \\n  \\n [!code-csharp[System.TimeZone2.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#9)]\\n [!code-vb[System.TimeZone2.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#9)]\"\n  syntax:\n    content: public bool IsInvalidTime (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: A date and time value.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>dateTime</code> is invalid; otherwise, `false`.'\n  overload: System.TimeZoneInfo.IsInvalidTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.Local\n  commentId: P:System.TimeZoneInfo.Local\n  id: Local\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: Local\n  nameWithType: TimeZoneInfo.Local\n  fullName: TimeZoneInfo.Local\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.TimeZoneInfo\"></xref> object that represents the local time zone.\n  remarks: \"The local time zone is the time zone on the computer where the code is executing.  \\n  \\n> [!IMPORTANT]\\n>  You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable. This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.  \\n  \\n The <xref:System.TimeZoneInfo> object returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property reflects the setting of the **Automatically adjust clock for daylight saving changes** checkbox or the **Automatically adjust clock for Daylight Saving Time** checkbox in the Control Panel **Date and Time** application for Windows XP and Windows Vista, respectively. If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information. This means that:  \\n  \\n-   The local time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an array whose length is zero.  \\n  \\n-   The local time zone's <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property returns `false`.  \\n  \\n-   The local time zone has no ambiguous or invalid times (all calls to <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> or <xref:System.TimeZoneInfo.IsInvalidTime%2A> return `false`).  \\n  \\n-   All calls to <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> with individual local times return false.  \\n  \\n This is not true, however, if a reference to the local time zone is retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.  \\n  \\n The <xref:System.TimeZoneInfo.Local%2A> property corresponds to the <xref:System.TimeZone.CurrentTimeZone%2A> property of the <xref:System.TimeZone> class.\"\n  example:\n  - \"The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.  \\n  \\n [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]\\n [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]\"\n  syntax:\n    content: public static TimeZoneInfo Local { get; }\n    return:\n      type: System.TimeZoneInfo\n      description: An object that represents the local time zone.\n  overload: System.TimeZoneInfo.Local*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.StandardName\n  commentId: P:System.TimeZoneInfo.StandardName\n  id: StandardName\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: StandardName\n  nameWithType: TimeZoneInfo.StandardName\n  fullName: TimeZoneInfo.StandardName\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the display name for the time zone's standard time.\n  remarks: \"The display name is localized based on the culture installed with the Windows operating system.  \\n  \\n The <xref:System.TimeZoneInfo.StandardName%2A> property is identical to the <xref:System.TimeZone.StandardName%2A> property of the <xref:System.TimeZone> class.  \\n  \\n If the operating system language is English, the value of the <xref:System.TimeZoneInfo.StandardName%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.Id%2A> property.\"\n  example:\n  - \"The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.  \\n  \\n [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]\\n [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]\"\n  syntax:\n    content: public string StandardName { get; }\n    return:\n      type: System.String\n      description: The display name of the time zone's standard time.\n  overload: System.TimeZoneInfo.StandardName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.SupportsDaylightSavingTime\n  commentId: P:System.TimeZoneInfo.SupportsDaylightSavingTime\n  id: SupportsDaylightSavingTime\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: SupportsDaylightSavingTime\n  nameWithType: TimeZoneInfo.SupportsDaylightSavingTime\n  fullName: TimeZoneInfo.SupportsDaylightSavingTime\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a value indicating whether the time zone has any daylight saving time rules.\n  remarks: The value of the <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property for the local time zone returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property reflects the setting of the Control Panel **Date and Time** application's checkbox that defines whether the system automatically adjusts for daylight saving time. If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is `false`.\n  example:\n  - \"The following example retrieves a collection of all time zones that are available on a local system and displays the names of those that do not support daylight saving time.  \\n  \\n [!code-csharp[System.TimeZone2.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#4)]\\n [!code-vb[System.TimeZone2.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#4)]\"\n  syntax:\n    content: public bool SupportsDaylightSavingTime { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the time zone supports daylight saving time; otherwise, `false`.'\n  overload: System.TimeZoneInfo.SupportsDaylightSavingTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ToSerializedString\n  commentId: M:System.TimeZoneInfo.ToSerializedString\n  id: ToSerializedString\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ToSerializedString()\n  nameWithType: TimeZoneInfo.ToSerializedString()\n  fullName: TimeZoneInfo.ToSerializedString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the current <xref href=\"System.TimeZoneInfo\"></xref> object to a serialized string.\n  remarks: \"Applications that rely on time zones that are not typically defined in the registry of Windows systems can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects. The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string.  \\n  \\n The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed. Possible locations include:  \\n  \\n-   The registry.  \\n  \\n-   An application resource file.  \\n  \\n-   An external file, such as a text file.\"\n  example:\n  - \"The following example tries to retrieve the Antarctica/South Pole time zone from the local system. If it fails, the code tries to retrieve information about the time zone from a text file in the application directory. If this attempt fails, the code creates the time zone and writes information about it to the text file.  \\n  \\n [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]\\n [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]\"\n  syntax:\n    content: public string ToSerializedString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.TimeZoneInfo\"></xref> object.\n  overload: System.TimeZoneInfo.ToSerializedString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.ToString\n  commentId: M:System.TimeZoneInfo.ToString\n  id: ToString\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: TimeZoneInfo.ToString()\n  fullName: TimeZoneInfo.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the current <xref href=\"System.TimeZoneInfo\"></xref> object's display name.\n  remarks: 'When assigning a collection that contains <xref:System.TimeZoneInfo> objects to a list control such as the <xref:System.Windows.Forms.ListBox> control, the control automatically calls the <xref:System.TimeZoneInfo.ToString%2A> method to extract a string that describes each object to be represented in the list. As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection. See [How to: Enumerate Time Zones Present on a Computer](~/docs/standard/datetime/enumerate-time-zones.md) for more detail.'\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The value of the <xref href=\"System.TimeZoneInfo.DisplayName\"></xref> property of the current <xref href=\"System.TimeZoneInfo\"></xref> object.\n  overload: System.TimeZoneInfo.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.Utc\n  commentId: P:System.TimeZoneInfo.Utc\n  id: Utc\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: Utc\n  nameWithType: TimeZoneInfo.Utc\n  fullName: TimeZoneInfo.Utc\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.TimeZoneInfo\"></xref> object that represents the Coordinated Universal Time (UTC) zone.\n  remarks: \"This is a built-in object; information about this <xref:System.TimeZoneInfo> object is not retrieved from the registry.  \\n  \\n> [!IMPORTANT]\\n>  You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=fullName> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable. This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.  \\n  \\n Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).\"\n  example:\n  - \"The following example retrieves a <xref:System.TimeZoneInfo> object that represents Coordinated Universal Time (UTC) and outputs its display name, standard time name, and daylight saving time name.  \\n  \\n [!code-csharp[System.TimeZone2.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#3)]\\n [!code-vb[System.TimeZone2.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#3)]\"\n  syntax:\n    content: public static TimeZoneInfo Utc { get; }\n    return:\n      type: System.TimeZoneInfo\n      description: An object that represents the Coordinated Universal Time (UTC) zone.\n  overload: System.TimeZoneInfo.Utc*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  commentId: M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: TimeZoneInfo.IDeserializationCallback.OnDeserialization(Object)\n  fullName: TimeZoneInfo.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Runs when the deserialization of an object has been completed.\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The object that initiated the callback. The functionality for this parameter is not currently implemented.\n  overload: System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <xref href=\"System.TimeZoneInfo\"></xref> object contains invalid or corrupted data.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.TimeZoneInfo\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: TimeZoneInfo.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: TimeZoneInfo.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.TimeZoneInfo\"></xref> object.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination for this serialization (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>).\n  overload: System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>info</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidTimeZoneException\n  parent: System\n  isExternal: false\n  name: InvalidTimeZoneException\n  nameWithType: InvalidTimeZoneException\n  fullName: System.InvalidTimeZoneException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.TimeZoneNotFoundException\n  parent: System\n  isExternal: false\n  name: TimeZoneNotFoundException\n  nameWithType: TimeZoneNotFoundException\n  fullName: System.TimeZoneNotFoundException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.OutOfMemoryException\n  parent: System\n  isExternal: false\n  name: OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.TimeZoneInfo.BaseUtcOffset\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: BaseUtcOffset\n  nameWithType: TimeZoneInfo.BaseUtcOffset\n  fullName: TimeZoneInfo.BaseUtcOffset\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.TimeZoneInfo.ClearCachedData\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ClearCachedData()\n  nameWithType: TimeZoneInfo.ClearCachedData()\n  fullName: TimeZoneInfo.ClearCachedData()\n- uid: System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTime(DateTime, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTime(DateTime, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTime(DateTime, TimeZoneInfo)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.TimeZoneInfo\n  parent: System\n  isExternal: false\n  name: TimeZoneInfo\n  nameWithType: TimeZoneInfo\n  fullName: System.TimeZoneInfo\n- uid: System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTime(DateTimeOffset, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTime(DateTimeOffset, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTime(DateTimeOffset, TimeZoneInfo)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo)\n- uid: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeBySystemTimeZoneId(DateTime, String)\n  nameWithType: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime, String)\n  fullName: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeBySystemTimeZoneId(DateTimeOffset, String)\n  nameWithType: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTimeOffset, String)\n  fullName: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTimeOffset, String)\n- uid: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeBySystemTimeZoneId(DateTime, String, String)\n  nameWithType: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime, String, String)\n  fullName: TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime, String, String)\n- uid: System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeFromUtc(DateTime, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTimeFromUtc(DateTime, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTimeFromUtc(DateTime, TimeZoneInfo)\n- uid: System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeToUtc(DateTime, TimeZoneInfo)\n  nameWithType: TimeZoneInfo.ConvertTimeToUtc(DateTime, TimeZoneInfo)\n  fullName: TimeZoneInfo.ConvertTimeToUtc(DateTime, TimeZoneInfo)\n- uid: System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeToUtc(DateTime)\n  nameWithType: TimeZoneInfo.ConvertTimeToUtc(DateTime)\n  fullName: TimeZoneInfo.ConvertTimeToUtc(DateTime)\n- uid: System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: CreateCustomTimeZone(String, TimeSpan, String, String)\n  nameWithType: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String)\n  fullName: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String)\n- uid: System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[])\n  nameWithType: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[])\n  fullName: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[])\n- uid: System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[], Boolean)\n  nameWithType: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[], Boolean)\n  fullName: TimeZoneInfo.CreateCustomTimeZone(String, TimeSpan, String, String, String, TimeZoneInfo+AdjustmentRule[], Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeZoneInfo.DaylightName\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: DaylightName\n  nameWithType: TimeZoneInfo.DaylightName\n  fullName: TimeZoneInfo.DaylightName\n- uid: System.TimeZoneInfo.DisplayName\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: DisplayName\n  nameWithType: TimeZoneInfo.DisplayName\n  fullName: TimeZoneInfo.DisplayName\n- uid: System.TimeZoneInfo.Equals(System.Object)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: TimeZoneInfo.Equals(Object)\n  fullName: TimeZoneInfo.Equals(Object)\n- uid: System.TimeZoneInfo.Equals(System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Equals(TimeZoneInfo)\n  nameWithType: TimeZoneInfo.Equals(TimeZoneInfo)\n  fullName: TimeZoneInfo.Equals(TimeZoneInfo)\n- uid: System.TimeZoneInfo.FindSystemTimeZoneById(System.String)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: FindSystemTimeZoneById(String)\n  nameWithType: TimeZoneInfo.FindSystemTimeZoneById(String)\n  fullName: TimeZoneInfo.FindSystemTimeZoneById(String)\n- uid: System.TimeZoneInfo.FromSerializedString(System.String)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: FromSerializedString(String)\n  nameWithType: TimeZoneInfo.FromSerializedString(String)\n  fullName: TimeZoneInfo.FromSerializedString(String)\n- uid: System.TimeZoneInfo.GetAdjustmentRules\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetAdjustmentRules()\n  nameWithType: TimeZoneInfo.GetAdjustmentRules()\n  fullName: TimeZoneInfo.GetAdjustmentRules()\n- uid: System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetAmbiguousTimeOffsets(DateTime)\n  nameWithType: TimeZoneInfo.GetAmbiguousTimeOffsets(DateTime)\n  fullName: TimeZoneInfo.GetAmbiguousTimeOffsets(DateTime)\n- uid: System.TimeSpan[]\n  parent: System\n  isExternal: false\n  name: TimeSpan[]\n  nameWithType: TimeSpan[]\n  fullName: System.TimeSpan[]\n  spec.csharp:\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: System.TimeSpan\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetAmbiguousTimeOffsets(DateTimeOffset)\n  nameWithType: TimeZoneInfo.GetAmbiguousTimeOffsets(DateTimeOffset)\n  fullName: TimeZoneInfo.GetAmbiguousTimeOffsets(DateTimeOffset)\n- uid: System.TimeZoneInfo.GetHashCode\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: TimeZoneInfo.GetHashCode()\n  fullName: TimeZoneInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.TimeZoneInfo.GetSystemTimeZones\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetSystemTimeZones()\n  nameWithType: TimeZoneInfo.GetSystemTimeZones()\n  fullName: TimeZoneInfo.GetSystemTimeZones()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.TimeZoneInfo}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<TimeZoneInfo>\n  nameWithType: ReadOnlyCollection<TimeZoneInfo>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.TimeZoneInfo>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeZoneInfo\n    name: TimeZoneInfo\n    nameWithType: TimeZoneInfo\n    fullName: System.TimeZoneInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.TimeZoneInfo.GetUtcOffset(System.DateTime)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetUtcOffset(DateTime)\n  nameWithType: TimeZoneInfo.GetUtcOffset(DateTime)\n  fullName: TimeZoneInfo.GetUtcOffset(DateTime)\n- uid: System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetUtcOffset(DateTimeOffset)\n  nameWithType: TimeZoneInfo.GetUtcOffset(DateTimeOffset)\n  fullName: TimeZoneInfo.GetUtcOffset(DateTimeOffset)\n- uid: System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: HasSameRules(TimeZoneInfo)\n  nameWithType: TimeZoneInfo.HasSameRules(TimeZoneInfo)\n  fullName: TimeZoneInfo.HasSameRules(TimeZoneInfo)\n- uid: System.TimeZoneInfo.Id\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Id\n  nameWithType: TimeZoneInfo.Id\n  fullName: TimeZoneInfo.Id\n- uid: System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IsAmbiguousTime(DateTime)\n  nameWithType: TimeZoneInfo.IsAmbiguousTime(DateTime)\n  fullName: TimeZoneInfo.IsAmbiguousTime(DateTime)\n- uid: System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IsAmbiguousTime(DateTimeOffset)\n  nameWithType: TimeZoneInfo.IsAmbiguousTime(DateTimeOffset)\n  fullName: TimeZoneInfo.IsAmbiguousTime(DateTimeOffset)\n- uid: System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IsDaylightSavingTime(DateTimeOffset)\n  nameWithType: TimeZoneInfo.IsDaylightSavingTime(DateTimeOffset)\n  fullName: TimeZoneInfo.IsDaylightSavingTime(DateTimeOffset)\n- uid: System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IsDaylightSavingTime(DateTime)\n  nameWithType: TimeZoneInfo.IsDaylightSavingTime(DateTime)\n  fullName: TimeZoneInfo.IsDaylightSavingTime(DateTime)\n- uid: System.TimeZoneInfo.IsInvalidTime(System.DateTime)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IsInvalidTime(DateTime)\n  nameWithType: TimeZoneInfo.IsInvalidTime(DateTime)\n  fullName: TimeZoneInfo.IsInvalidTime(DateTime)\n- uid: System.TimeZoneInfo.Local\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Local\n  nameWithType: TimeZoneInfo.Local\n  fullName: TimeZoneInfo.Local\n- uid: System.TimeZoneInfo.StandardName\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: StandardName\n  nameWithType: TimeZoneInfo.StandardName\n  fullName: TimeZoneInfo.StandardName\n- uid: System.TimeZoneInfo.SupportsDaylightSavingTime\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: SupportsDaylightSavingTime\n  nameWithType: TimeZoneInfo.SupportsDaylightSavingTime\n  fullName: TimeZoneInfo.SupportsDaylightSavingTime\n- uid: System.TimeZoneInfo.ToSerializedString\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ToSerializedString()\n  nameWithType: TimeZoneInfo.ToSerializedString()\n  fullName: TimeZoneInfo.ToSerializedString()\n- uid: System.TimeZoneInfo.ToString\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: TimeZoneInfo.ToString()\n  fullName: TimeZoneInfo.ToString()\n- uid: System.TimeZoneInfo.Utc\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Utc\n  nameWithType: TimeZoneInfo.Utc\n  fullName: TimeZoneInfo.Utc\n- uid: System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: TimeZoneInfo.IDeserializationCallback.OnDeserialization(Object)\n  fullName: TimeZoneInfo.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: TimeZoneInfo.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: TimeZoneInfo.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.TimeZoneInfo.BaseUtcOffset*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: BaseUtcOffset\n  nameWithType: TimeZoneInfo.BaseUtcOffset\n  fullName: TimeZoneInfo.BaseUtcOffset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.ClearCachedData*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ClearCachedData\n  nameWithType: TimeZoneInfo.ClearCachedData\n  fullName: TimeZoneInfo.ClearCachedData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.ConvertTime*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTime\n  nameWithType: TimeZoneInfo.ConvertTime\n  fullName: TimeZoneInfo.ConvertTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeBySystemTimeZoneId\n  nameWithType: TimeZoneInfo.ConvertTimeBySystemTimeZoneId\n  fullName: TimeZoneInfo.ConvertTimeBySystemTimeZoneId\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.ConvertTimeFromUtc*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeFromUtc\n  nameWithType: TimeZoneInfo.ConvertTimeFromUtc\n  fullName: TimeZoneInfo.ConvertTimeFromUtc\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.ConvertTimeToUtc*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ConvertTimeToUtc\n  nameWithType: TimeZoneInfo.ConvertTimeToUtc\n  fullName: TimeZoneInfo.ConvertTimeToUtc\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.CreateCustomTimeZone*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: CreateCustomTimeZone\n  nameWithType: TimeZoneInfo.CreateCustomTimeZone\n  fullName: TimeZoneInfo.CreateCustomTimeZone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.DaylightName*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: DaylightName\n  nameWithType: TimeZoneInfo.DaylightName\n  fullName: TimeZoneInfo.DaylightName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.DisplayName*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: DisplayName\n  nameWithType: TimeZoneInfo.DisplayName\n  fullName: TimeZoneInfo.DisplayName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.Equals*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Equals\n  nameWithType: TimeZoneInfo.Equals\n  fullName: TimeZoneInfo.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.FindSystemTimeZoneById*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: FindSystemTimeZoneById\n  nameWithType: TimeZoneInfo.FindSystemTimeZoneById\n  fullName: TimeZoneInfo.FindSystemTimeZoneById\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.FromSerializedString*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: FromSerializedString\n  nameWithType: TimeZoneInfo.FromSerializedString\n  fullName: TimeZoneInfo.FromSerializedString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.GetAdjustmentRules*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetAdjustmentRules\n  nameWithType: TimeZoneInfo.GetAdjustmentRules\n  fullName: TimeZoneInfo.GetAdjustmentRules\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.GetAmbiguousTimeOffsets*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetAmbiguousTimeOffsets\n  nameWithType: TimeZoneInfo.GetAmbiguousTimeOffsets\n  fullName: TimeZoneInfo.GetAmbiguousTimeOffsets\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.GetHashCode*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: TimeZoneInfo.GetHashCode\n  fullName: TimeZoneInfo.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.GetSystemTimeZones*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetSystemTimeZones\n  nameWithType: TimeZoneInfo.GetSystemTimeZones\n  fullName: TimeZoneInfo.GetSystemTimeZones\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.GetUtcOffset*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: GetUtcOffset\n  nameWithType: TimeZoneInfo.GetUtcOffset\n  fullName: TimeZoneInfo.GetUtcOffset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.HasSameRules*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: HasSameRules\n  nameWithType: TimeZoneInfo.HasSameRules\n  fullName: TimeZoneInfo.HasSameRules\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.Id*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Id\n  nameWithType: TimeZoneInfo.Id\n  fullName: TimeZoneInfo.Id\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.IsAmbiguousTime*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IsAmbiguousTime\n  nameWithType: TimeZoneInfo.IsAmbiguousTime\n  fullName: TimeZoneInfo.IsAmbiguousTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.IsDaylightSavingTime*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IsDaylightSavingTime\n  nameWithType: TimeZoneInfo.IsDaylightSavingTime\n  fullName: TimeZoneInfo.IsDaylightSavingTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.IsInvalidTime*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: IsInvalidTime\n  nameWithType: TimeZoneInfo.IsInvalidTime\n  fullName: TimeZoneInfo.IsInvalidTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.Local*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Local\n  nameWithType: TimeZoneInfo.Local\n  fullName: TimeZoneInfo.Local\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.StandardName*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: StandardName\n  nameWithType: TimeZoneInfo.StandardName\n  fullName: TimeZoneInfo.StandardName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.SupportsDaylightSavingTime*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: SupportsDaylightSavingTime\n  nameWithType: TimeZoneInfo.SupportsDaylightSavingTime\n  fullName: TimeZoneInfo.SupportsDaylightSavingTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.ToSerializedString*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ToSerializedString\n  nameWithType: TimeZoneInfo.ToSerializedString\n  fullName: TimeZoneInfo.ToSerializedString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.ToString*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: ToString\n  nameWithType: TimeZoneInfo.ToString\n  fullName: TimeZoneInfo.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.Utc*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: Utc\n  nameWithType: TimeZoneInfo.Utc\n  fullName: TimeZoneInfo.Utc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: TimeZoneInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  fullName: TimeZoneInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.TimeZoneInfo\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: TimeZoneInfo.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: TimeZoneInfo.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TimeZoneInfo.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.TimeZoneInfo}\n  parent: System\n  isExternal: false\n  name: IEquatable<TimeZoneInfo>\n  nameWithType: IEquatable<TimeZoneInfo>\n  fullName: System.IEquatable<System.TimeZoneInfo>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeZoneInfo\n    name: TimeZoneInfo\n    nameWithType: TimeZoneInfo\n    fullName: System.TimeZoneInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Serialization.IDeserializationCallback\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IDeserializationCallback\n  nameWithType: IDeserializationCallback\n  fullName: System.Runtime.Serialization.IDeserializationCallback\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}