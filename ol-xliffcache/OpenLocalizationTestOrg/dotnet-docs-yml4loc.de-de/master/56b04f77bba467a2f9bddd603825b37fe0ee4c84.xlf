<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56b04f77bba467a2f9bddd603825b37fe0ee4c84</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.IHttpHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92915083a1f17fc2e17a7225584e80c47360f399</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4ff9570dd7e09229c0174f75b925c1f1c2aea1e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Executable code defined in the <ph id="ph1">`HttpHandler`</ph> classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your handler will access session state values, it must implement the <ph id="ph1">&lt;xref:System.Web.SessionState.IRequiresSessionState&gt;</ph> interface (a marker interface with no methods).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether another request can use the <ph id="ph1">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You explicitly set the <ph id="ph1">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph> by code you provide that overrides the <ph id="ph4">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> property accessor (getter).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> instance is reusable; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Enables processing of HTTP Web requests by a custom <ph id="ph1">`HttpHandler`</ph> that implements the <ph id="ph2">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Place your custom <ph id="ph1">`HttpHandler`</ph> code in the <ph id="ph2">&lt;xref:System.Web.IHttpHandler.ProcessRequest%2A&gt;</ph> virtual method, as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> object that provides references to the intrinsic server objects (for example, <ph id="ph2">`Request`</ph>, <ph id="ph3">`Response`</ph>, <ph id="ph4">`Session`</ph>, and <ph id="ph5">`Server`</ph>) used to service HTTP requests.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>