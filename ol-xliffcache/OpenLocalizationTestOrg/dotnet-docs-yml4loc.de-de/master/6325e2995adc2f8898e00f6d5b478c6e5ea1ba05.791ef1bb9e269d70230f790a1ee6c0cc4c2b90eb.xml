{"nodes":[{"content":"Contains properties that specify how an application should behave relative to WPF features that are in the PresentationCore assembly.","nodes":[{"pos":[0,133],"content":"Contains properties that specify how an application should behave relative to WPF features that are in the PresentationCore assembly.","nodes":[{"content":"Contains properties that specify how an application should behave relative to WPF features that are in the PresentationCore assembly.","pos":[0,133]}]}],"pos":[609,743],"yaml":true},{"content":"Gets or sets a value that indicates whether to enable clipping in a multi-monitor display.","nodes":[{"pos":[0,90],"content":"Gets or sets a value that indicates whether to enable clipping in a multi-monitor display.","nodes":[{"content":"Gets or sets a value that indicates whether to enable clipping in a multi-monitor display.","pos":[0,90]}]}],"pos":[2276,2367],"yaml":true},{"content":"`true` to enable clipping in a multi-monitor display; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> to enable clipping in a multi-monitor display; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to enable clipping in a multi-monitor display; otherwise, `false`."}],"pos":[2542,2618],"yaml":true},{"content":"Gets or sets a value that indicates whether the user needs to use the ALT key to invoke a shortcut.","nodes":[{"pos":[0,99],"content":"Gets or sets a value that indicates whether the user needs to use the ALT key to invoke a shortcut.","nodes":[{"content":"Gets or sets a value that indicates whether the user needs to use the ALT key to invoke a shortcut.","pos":[0,99]}]}],"pos":[3745,3845],"yaml":true},{"content":"If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.  After the value is read, you cannot change it again.","nodes":[{"pos":[0,244],"content":"If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.  After the value is read, you cannot change it again.","nodes":[{"content":"If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.  After the value is read, you cannot change it again.","pos":[0,244],"nodes":[{"content":"If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.","pos":[0,190]},{"content":"After the value is read, you cannot change it again.","pos":[192,244]}]}]}],"pos":[3856,4101],"yaml":true,"extradata":"MT"},{"content":"`true` if the user needs to use the ALT key to invoke a shortcut; otherwise, `false`.  The default is `false`.","nodes":[{"pos":[0,110],"content":"`true` if the user needs to use the ALT key to invoke a shortcut; otherwise, `false`.  The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the user needs to use the ALT key to invoke a shortcut; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,85],"source":"`true` if the user needs to use the ALT key to invoke a shortcut; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[87,110],"source":"  The default is `false`."}]}],"pos":[4255,4368],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.CoreCompatibilityPreferences\n  commentId: T:System.Windows.CoreCompatibilityPreferences\n  id: CoreCompatibilityPreferences\n  children:\n  - System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  - System.Windows.CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  langs:\n  - csharp\n  name: CoreCompatibilityPreferences\n  nameWithType: CoreCompatibilityPreferences\n  fullName: System.Windows.CoreCompatibilityPreferences\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Contains properties that specify how an application should behave relative to WPF features that are in the PresentationCore assembly.\n  syntax:\n    content: public static class CoreCompatibilityPreferences\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/CoreCompatibilityPreferences.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  commentId: P:System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  id: EnableMultiMonitorDisplayClipping\n  parent: System.Windows.CoreCompatibilityPreferences\n  langs:\n  - csharp\n  name: EnableMultiMonitorDisplayClipping\n  nameWithType: CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  fullName: CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets a value that indicates whether to enable clipping in a multi-monitor display.\n  syntax:\n    content: public static Nullable<bool> EnableMultiMonitorDisplayClipping { get; set; }\n    return:\n      type: System.Nullable{System.Boolean}\n      description: '`true` to enable clipping in a multi-monitor display; otherwise, `false`.'\n  overload: System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping*\n  exceptions: []\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/CoreCompatibilityPreferences.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  commentId: P:System.Windows.CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  id: IsAltKeyRequiredInAccessKeyDefaultScope\n  parent: System.Windows.CoreCompatibilityPreferences\n  langs:\n  - csharp\n  name: IsAltKeyRequiredInAccessKeyDefaultScope\n  nameWithType: CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  fullName: CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets a value that indicates whether the user needs to use the ALT key to invoke a shortcut.\n  remarks: If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.  After the value is read, you cannot change it again.\n  syntax:\n    content: public static bool IsAltKeyRequiredInAccessKeyDefaultScope { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user needs to use the ALT key to invoke a shortcut; otherwise, `false`.  The default is `false`.'\n  overload: System.Windows.CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/CoreCompatibilityPreferences.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  parent: System.Windows.CoreCompatibilityPreferences\n  isExternal: false\n  name: EnableMultiMonitorDisplayClipping\n  nameWithType: CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  fullName: CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.Boolean\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: false\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  parent: System.Windows.CoreCompatibilityPreferences\n  isExternal: false\n  name: IsAltKeyRequiredInAccessKeyDefaultScope\n  nameWithType: CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  fullName: CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n- uid: System.Windows.CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping*\n  parent: System.Windows.CoreCompatibilityPreferences\n  isExternal: false\n  name: EnableMultiMonitorDisplayClipping\n  nameWithType: CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  fullName: CoreCompatibilityPreferences.EnableMultiMonitorDisplayClipping\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/CoreCompatibilityPreferences.xml\n- uid: System.Windows.CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope*\n  parent: System.Windows.CoreCompatibilityPreferences\n  isExternal: false\n  name: IsAltKeyRequiredInAccessKeyDefaultScope\n  nameWithType: CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  fullName: CoreCompatibilityPreferences.IsAltKeyRequiredInAccessKeyDefaultScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/CoreCompatibilityPreferences.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}