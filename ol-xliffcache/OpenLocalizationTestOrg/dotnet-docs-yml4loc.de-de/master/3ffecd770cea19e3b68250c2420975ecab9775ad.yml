### YamlMime:ManagedReference
items:
- uid: System.Collections.CollectionBase
  commentId: T:System.Collections.CollectionBase
  id: CollectionBase
  children:
  - System.Collections.CollectionBase.#ctor
  - System.Collections.CollectionBase.#ctor(System.Int32)
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: CollectionBase
  nameWithType: CollectionBase
  fullName: System.Collections.CollectionBase
  type: Class
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Provides the `abstract` base class for a strongly typed collection.
  remarks: "A <xref:System.Collections.CollectionBase> instance is always modifiable. See <xref:System.Collections.ReadOnlyCollectionBase> for a read-only version of this class.  \n  \n The capacity of a <xref:System.Collections.CollectionBase> is the number of elements the <xref:System.Collections.CollectionBase> can hold. As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required through reallocation. The capacity can be decreased by setting the <xref:System.Collections.CollectionBase.Capacity%2A> property explicitly."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CollectionBase : System.Collections.IList
  inheritance:
  - System.Object
  derivedClasses:
  - System.CodeDom.CodeAttributeArgumentCollection
  - System.CodeDom.CodeAttributeDeclarationCollection
  - System.CodeDom.CodeCatchClauseCollection
  - System.CodeDom.CodeCommentStatementCollection
  - System.CodeDom.CodeDirectiveCollection
  - System.CodeDom.CodeExpressionCollection
  - System.CodeDom.CodeNamespaceCollection
  - System.CodeDom.CodeParameterDeclarationExpressionCollection
  - System.CodeDom.CodeStatementCollection
  - System.CodeDom.CodeTypeDeclarationCollection
  - System.CodeDom.CodeTypeMemberCollection
  - System.CodeDom.CodeTypeParameterCollection
  - System.CodeDom.CodeTypeReferenceCollection
  - System.CodeDom.Compiler.CompilerErrorCollection
  - System.ComponentModel.Design.DesignerActionItemCollection
  - System.ComponentModel.Design.DesignerActionListCollection
  - System.ComponentModel.Design.DesignerVerbCollection
  - System.ComponentModel.Design.Data.DataSourceDescriptorCollection
  - System.ComponentModel.Design.Data.DataSourceGroupCollection
  - System.Configuration.Install.InstallerCollection
  - System.Diagnostics.CounterCreationDataCollection
  - System.Diagnostics.EventLogPermissionEntryCollection
  - System.Diagnostics.PerformanceCounterPermissionEntryCollection
  - System.DirectoryServices.DirectoryServicesPermissionEntryCollection
  - System.DirectoryServices.PropertyValueCollection
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection
  - System.DirectoryServices.ActiveDirectory.DirectoryServerCollection
  - System.DirectoryServices.Protocols.DirectoryAttribute
  - System.DirectoryServices.Protocols.DirectoryAttributeCollection
  - System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection
  - System.DirectoryServices.Protocols.DirectoryControlCollection
  - System.Messaging.AccessControlList
  - System.Messaging.MessageQueuePermissionEntryCollection
  - System.ServiceProcess.ServiceControllerPermissionEntryCollection
  - System.Web.ParserErrorCollection
  - System.Web.Services.Description.BasicProfileViolationCollection
  - System.Web.Services.Description.MimePartCollection
  - System.Web.Services.Description.MimeTextMatchCollection
  - System.Web.Services.Description.ServiceDescriptionBaseCollection
  - System.Web.Services.Description.WebReferenceCollection
  - System.Web.Services.Discovery.DiscoveryClientResultCollection
  - System.Web.Services.Discovery.DiscoveryReferenceCollection
  - System.Web.Services.Protocols.SoapHeaderCollection
  - System.Web.UI.WebControls.EmbeddedMailObjectsCollection
  - System.Web.UI.WebControls.RoleGroupCollection
  - System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection
  - System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  - System.Web.UI.WebControls.WebParts.WebPartTransformerCollection
  - System.Windows.Documents.LinkTargetCollection
  - System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection
  - System.Windows.Forms.Design.Behavior.GlyphCollection
  - System.Xml.Schema.XmlSchemaObjectCollection
  - System.Xml.Serialization.XmlSchemas
  - System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection
  implements:
  - System.Collections.IList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.#ctor
  commentId: M:System.Collections.CollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: CollectionBase()
  nameWithType: CollectionBase.CollectionBase()
  fullName: CollectionBase.CollectionBase()
  type: Constructor
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.CollectionBase"></xref> class with the default initial capacity.
  remarks: "The capacity of a <xref:System.Collections.CollectionBase> is the number of elements that the <xref:System.Collections.CollectionBase> can hold. As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.CollectionBase>.  \n  \n This constructor is an O(1) operation."
  syntax:
    content: protected CollectionBase ();
    parameters: []
  overload: System.Collections.CollectionBase.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.#ctor(System.Int32)
  commentId: M:System.Collections.CollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: CollectionBase(Int32)
  nameWithType: CollectionBase.CollectionBase(Int32)
  fullName: CollectionBase.CollectionBase(Int32)
  type: Constructor
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.CollectionBase"></xref> class with the specified capacity.
  remarks: "The capacity of a <xref:System.Collections.CollectionBase> is the number of elements that the <xref:System.Collections.CollectionBase> can hold. As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.CollectionBase>.  \n  \n This constructor is an O(`n`) operation, where `n` is `capacity`."
  syntax:
    content: protected CollectionBase (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: The number of elements that the new list can initially store.
  overload: System.Collections.CollectionBase.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.Capacity
  commentId: P:System.Collections.CollectionBase.Capacity
  id: Capacity
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: Capacity
  nameWithType: CollectionBase.Capacity
  fullName: CollectionBase.Capacity
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets or sets the number of elements that the <xref href="System.Collections.CollectionBase"></xref> can contain.
  remarks: "<xref:System.Collections.CollectionBase.Capacity%2A> is the number of elements that the <xref:System.Collections.CollectionBase> can store. <xref:System.Collections.CollectionBase.Count%2A> is the number of elements that are actually in the <xref:System.Collections.CollectionBase>.  \n  \n <xref:System.Collections.CollectionBase.Capacity%2A> is always greater than or equal to <xref:System.Collections.CollectionBase.Count%2A>. If <xref:System.Collections.CollectionBase.Count%2A> exceeds <xref:System.Collections.CollectionBase.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.  \n  \n The capacity can be decreased by setting the <xref:System.Collections.CollectionBase.Capacity%2A> property explicitly. When the value of <xref:System.Collections.CollectionBase.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.  \n  \n Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public int Capacity { get; set; }
    return:
      type: System.Int32
      description: The number of elements that the <xref href="System.Collections.CollectionBase"></xref> can contain.
  overload: System.Collections.CollectionBase.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <xref href="System.Collections.CollectionBase.Capacity"></xref> is set to a value that is less than <xref href="System.Collections.CollectionBase.Count"></xref>.
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is not enough memory available on the system.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.Clear
  commentId: M:System.Collections.CollectionBase.Clear
  id: Clear
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: Clear()
  nameWithType: CollectionBase.Clear()
  fullName: CollectionBase.Clear()
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Removes all objects from the <xref href="System.Collections.CollectionBase"></xref> instance. This method cannot be overridden.
  remarks: "<xref:System.Collections.CollectionBase.Count%2A> is set to zero.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.  \n  \n To perform custom actions before or after the collection is cleared, override the protected <xref:System.Collections.CollectionBase.OnClear%2A> or <xref:System.Collections.CollectionBase.OnClearComplete%2A> method."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.CollectionBase.Clear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.Count
  commentId: P:System.Collections.CollectionBase.Count
  id: Count
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: Count
  nameWithType: CollectionBase.Count
  fullName: CollectionBase.Count
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets the number of elements contained in the <xref href="System.Collections.CollectionBase"></xref> instance. This property cannot be overridden.
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of elements contained in the <xref href=\"System.Collections.CollectionBase\"></xref> instance.  \n  \n Retrieving the value of this property is an O(1) operation."
  overload: System.Collections.CollectionBase.Count*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.GetEnumerator
  commentId: M:System.Collections.CollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: CollectionBase.GetEnumerator()
  fullName: CollectionBase.GetEnumerator()
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Returns an enumerator that iterates through the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "[Visual Basic, C#]  \n  \n The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \n  \n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \n  \n While the <xref:System.Collections.CollectionBase.GetEnumerator%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.CollectionBase> class can expose it and can cause undesirable behavior in COM clients.  \n  \n This method is an O(1) operation."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator"></xref> for the <xref href="System.Collections.CollectionBase"></xref> instance.
  overload: System.Collections.CollectionBase.GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.InnerList
  commentId: P:System.Collections.CollectionBase.InnerList
  id: InnerList
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: InnerList
  nameWithType: CollectionBase.InnerList
  fullName: CollectionBase.InnerList
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets an <xref href="System.Collections.ArrayList"></xref> containing the list of elements in the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.
  syntax:
    content: protected System.Collections.ArrayList InnerList { get; }
    return:
      type: System.Collections.ArrayList
      description: "An <xref href=\"System.Collections.ArrayList\"></xref> representing the <xref href=\"System.Collections.CollectionBase\"></xref> instance itself.  \n  \n Retrieving the value of this property is an O(1) operation."
  overload: System.Collections.CollectionBase.InnerList*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.List
  commentId: P:System.Collections.CollectionBase.List
  id: List
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: List
  nameWithType: CollectionBase.List
  fullName: CollectionBase.List
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets an <xref href="System.Collections.IList"></xref> containing the list of elements in the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n Retrieving the value of this property is an O(1) operation."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: protected System.Collections.IList List { get; }
    return:
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList"></xref> representing the <xref href="System.Collections.CollectionBase"></xref> instance itself.
  overload: System.Collections.CollectionBase.List*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnClear
  commentId: M:System.Collections.CollectionBase.OnClear
  id: OnClear
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnClear()
  nameWithType: CollectionBase.OnClear()
  fullName: CollectionBase.OnClear()
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes when clearing the contents of the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n If the process fails, the collection reverts back to its previous state.  \n  \n The default implementation of this method is an O(1) operation."
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Collections.CollectionBase.OnClear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnClearComplete
  commentId: M:System.Collections.CollectionBase.OnClearComplete
  id: OnClearComplete
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: CollectionBase.OnClearComplete()
  fullName: CollectionBase.OnClearComplete()
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes after clearing the contents of the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n The default implementation of this method is an O(1) operation."
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Collections.CollectionBase.OnClearComplete*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  id: OnInsert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnInsert(Int32, Object)
  nameWithType: CollectionBase.OnInsert(Int32, Object)
  fullName: CollectionBase.OnInsert(Int32, Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes before inserting a new element into the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n If the process fails, the collection reverts back to its previous state.  \n  \n The default implementation of this method is an O(1) operation."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: protected virtual void OnInsert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which to insert <code>value</code>.
    - id: value
      type: System.Object
      description: The new value of the element at <code>index</code>.
  overload: System.Collections.CollectionBase.OnInsert*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnInsertComplete(Int32, Object)
  nameWithType: CollectionBase.OnInsertComplete(Int32, Object)
  fullName: CollectionBase.OnInsertComplete(Int32, Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes after inserting a new element into the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n The collection reverts back to its previous state if one of the following occurs:  \n  \n-   The process fails.  \n  \n-   This method is overridden to throw an exception.  \n  \n The default implementation of this method is an O(1) operation."
  syntax:
    content: protected virtual void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which to insert <code>value</code>.
    - id: value
      type: System.Object
      description: The new value of the element at <code>index</code>.
  overload: System.Collections.CollectionBase.OnInsertComplete*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  id: OnRemove(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnRemove(Int32, Object)
  nameWithType: CollectionBase.OnRemove(Int32, Object)
  fullName: CollectionBase.OnRemove(Int32, Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes when removing an element from the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n If the process fails, the collection reverts back to its previous state.  \n  \n The default implementation of this method is an O(1) operation."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: protected virtual void OnRemove (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code>value</code> can be found.
    - id: value
      type: System.Object
      description: The value of the element to remove from <code>index</code>.
  overload: System.Collections.CollectionBase.OnRemove*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnRemoveComplete(Int32, Object)
  nameWithType: CollectionBase.OnRemoveComplete(Int32, Object)
  fullName: CollectionBase.OnRemoveComplete(Int32, Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes after removing an element from the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n The collection reverts back to its previous state if one of the following occurs:  \n  \n-   The process fails.  \n  \n-   This method is overridden to throw an exception.  \n  \n The default implementation of this method is an O(1) operation."
  syntax:
    content: protected virtual void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code>value</code> can be found.
    - id: value
      type: System.Object
      description: The value of the element to remove from <code>index</code>.
  overload: System.Collections.CollectionBase.OnRemoveComplete*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  commentId: M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  id: OnSet(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnSet(Int32, Object, Object)
  nameWithType: CollectionBase.OnSet(Int32, Object, Object)
  fullName: CollectionBase.OnSet(Int32, Object, Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes before setting a value in the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n If the process fails, the collection reverts back to its previous state.  \n  \n The default implementation of this method is an O(1) operation."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: protected virtual void OnSet (int index, object oldValue, object newValue);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code>oldValue</code> can be found.
    - id: oldValue
      type: System.Object
      description: The value to replace with <code>newValue</code>.
    - id: newValue
      type: System.Object
      description: The new value of the element at <code>index</code>.
  overload: System.Collections.CollectionBase.OnSet*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  commentId: M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  id: OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnSetComplete(Int32, Object, Object)
  nameWithType: CollectionBase.OnSetComplete(Int32, Object, Object)
  fullName: CollectionBase.OnSetComplete(Int32, Object, Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes after setting a value in the <xref href="System.Collections.CollectionBase"></xref> instance.
  remarks: "The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n The collection reverts back to its previous state if one of the following occurs:  \n  \n-   The process fails.  \n  \n-   This method is overridden to throw an exception.  \n  \n The default implementation of this method is an O(1) operation."
  syntax:
    content: protected virtual void OnSetComplete (int index, object oldValue, object newValue);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code>oldValue</code> can be found.
    - id: oldValue
      type: System.Object
      description: The value to replace with <code>newValue</code>.
    - id: newValue
      type: System.Object
      description: The new value of the element at <code>index</code>.
  overload: System.Collections.CollectionBase.OnSetComplete*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.OnValidate(System.Object)
  commentId: M:System.Collections.CollectionBase.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: CollectionBase.OnValidate(Object)
  fullName: CollectionBase.OnValidate(Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Performs additional custom processes when validating a value.
  remarks: "The default implementation of this method determines whether `value` is `null`, and, if so, throws <xref:System.ArgumentNullException>. It is intended to be overridden by a derived class to perform additional action when the specified element is validated.  \n  \n The On* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.  \n  \n The default implementation of this method is an O(1) operation."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to validate.
  overload: System.Collections.CollectionBase.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
  commentId: M:System.Collections.CollectionBase.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: CollectionBase.RemoveAt(Int32)
  fullName: CollectionBase.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Removes the element at the specified index of the <xref href="System.Collections.CollectionBase"></xref> instance. This method is not overridable.
  remarks: "In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to remove.
  overload: System.Collections.CollectionBase.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than <xref href=\"System.Collections.CollectionBase.Count\"></xref>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: CollectionBase.ICollection.CopyTo(Array, Int32)
  fullName: CollectionBase.ICollection.CopyTo(Array, Int32)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Copies the entire <xref href="System.Collections.CollectionBase"></xref> to a compatible one-dimensional <xref href="System.Array"></xref>, starting at the specified index of the target array.
  remarks: "The specified array must be of a compatible type.  \n  \n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional <xref href="System.Array"></xref> that is the destination of the elements copied from <xref href="System.Collections.CollectionBase"></xref>. The <xref href="System.Array"></xref> must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in <code>array</code> at which copying begins.
  overload: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>array</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is less than zero.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is multidimensional.  \n  \n -or-  \n  \n The number of elements in the source <xref href=\"System.Collections.CollectionBase\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The type of the source <xref href="System.Collections.CollectionBase"></xref> cannot be cast automatically to the type of the destination <code>array</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: ICollection.IsSynchronized
  nameWithType: CollectionBase.ICollection.IsSynchronized
  fullName: CollectionBase.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets a value indicating whether access to the <xref href="System.Collections.CollectionBase"></xref> is synchronized (thread safe).
  remarks: "A <xref:System.Collections.CollectionBase> instance is not synchronized. Derived classes can provide a synchronized version of the <xref:System.Collections.CollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.  \n  \n Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \n  \n The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:  \n  \n [!code-cpp[System.Collections.CollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/remarks.cpp#2)]\n [!code-csharp[System.Collections.CollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/remarks.cs#2)]\n [!code-vb[System.Collections.CollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/remarks.vb#2)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: '`true` if access to the <xref href="System.Collections.CollectionBase"></xref> is synchronized (thread safe); otherwise, `false`. The default is `false`.'
  overload: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: ICollection.SyncRoot
  nameWithType: CollectionBase.ICollection.SyncRoot
  fullName: CollectionBase.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to the <xref href="System.Collections.CollectionBase"></xref>.
  remarks: "Derived classes can provide their own synchronized version of the <xref:System.Collections.CollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property. The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.CollectionBase>, not directly on the <xref:System.Collections.CollectionBase>. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.CollectionBase> object.  \n  \n Enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \n  \n The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:  \n  \n [!code-cpp[System.Collections.CollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/remarks.cpp#2)]\n [!code-csharp[System.Collections.CollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/remarks.cs#2)]\n [!code-vb[System.Collections.CollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/remarks.vb#2)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="System.Collections.CollectionBase"></xref>.
  overload: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: IList.Add(Object)
  nameWithType: CollectionBase.IList.Add(Object)
  fullName: CollectionBase.IList.Add(Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Adds an object to the end of the <xref href="System.Collections.CollectionBase"></xref>.
  remarks: "If <xref:System.Collections.CollectionBase.Count%2A> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.  \n  \n If <xref:System.Collections.CollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to be added to the end of the <xref href="System.Collections.CollectionBase"></xref>.
    return:
      type: System.Int32
      description: The <xref href="System.Collections.CollectionBase"></xref> index at which the <code>value</code> has been added.
  overload: System.Collections.CollectionBase.System#Collections#IList#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Collections.CollectionBase\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.CollectionBase\"></xref> has a fixed size."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: IList.Contains(Object)
  nameWithType: CollectionBase.IList.Contains(Object)
  fullName: CollectionBase.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Determines whether the <xref href="System.Collections.CollectionBase"></xref> contains a specific element.
  remarks: "This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.  \n  \n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \n  \n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to locate in the <xref href="System.Collections.CollectionBase"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Collections.CollectionBase"></xref> contains the specified <code>value</code>; otherwise, `false`.'
  overload: System.Collections.CollectionBase.System#Collections#IList#Contains*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: IList.IndexOf(Object)
  nameWithType: CollectionBase.IList.IndexOf(Object)
  fullName: CollectionBase.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Searches for the specified <xref href="System.Object"></xref> and returns the zero-based index of the first occurrence within the entire <xref href="System.Collections.CollectionBase"></xref>.
  remarks: "This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.  \n  \n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \n  \n Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists. In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to locate in the <xref href="System.Collections.CollectionBase"></xref>.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <code>value</code> within the entire <xref href="System.Collections.CollectionBase"></xref>, if found; otherwise, -1.
  overload: System.Collections.CollectionBase.System#Collections#IList#IndexOf*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: IList.Insert(Int32, Object)
  nameWithType: CollectionBase.IList.Insert(Int32, Object)
  fullName: CollectionBase.IList.Insert(Int32, Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Inserts an element into the <xref href="System.Collections.CollectionBase"></xref> at the specified index.
  remarks: "If <xref:System.Collections.CollectionBase.Count%2A> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.  \n  \n If `index` is equal to <xref:System.Collections.CollectionBase.Count%2A>, `value` is added to the end of <xref:System.Collections.CollectionBase>.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code>value</code> should be inserted.
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to insert.
  overload: System.Collections.CollectionBase.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is greater than <xref href=\"System.Collections.CollectionBase.Count\"></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Collections.CollectionBase\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.CollectionBase\"></xref> has a fixed size."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: IList.IsFixedSize
  nameWithType: CollectionBase.IList.IsFixedSize
  fullName: CollectionBase.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.CollectionBase"></xref> has a fixed size.
  remarks: "A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.  \n  \n A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Collections.CollectionBase"></xref> has a fixed size; otherwise, `false`. The default is `false`.'
  overload: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: IList.IsReadOnly
  nameWithType: CollectionBase.IList.IsReadOnly
  fullName: CollectionBase.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.CollectionBase"></xref> is read-only.
  remarks: "A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \n  \n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Collections.CollectionBase"></xref> is read-only; otherwise, `false`. The default is `false`.'
  overload: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: IList.Item(Int32)
  nameWithType: CollectionBase.IList.Item(Int32)
  fullName: CollectionBase.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Gets or sets the element at the specified index.
  remarks: "This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \n  \n Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Object
      description: The element at the specified index.
  overload: System.Collections.CollectionBase.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than <xref href=\"System.Collections.CollectionBase.Count\"></xref>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: IList.Remove(Object)
  nameWithType: CollectionBase.IList.Remove(Object)
  fullName: CollectionBase.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Collections.NonGeneric
  - mscorlib
  - netstandard
  namespace: System.Collections
  summary: Removes the first occurrence of a specific object from the <xref href="System.Collections.CollectionBase"></xref>.
  remarks: "If the <xref:System.Collections.CollectionBase> does not contain the specified object, the <xref:System.Collections.CollectionBase> remains unchanged. No exception is thrown.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.  \n  \n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]\n [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]\n [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to remove from the <xref href="System.Collections.CollectionBase"></xref>.
  overload: System.Collections.CollectionBase.System#Collections#IList#Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>value</code> parameter was not found in the <xref href="System.Collections.CollectionBase"></xref> object.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Collections.CollectionBase\"></xref> is read-only.  \n  \n -or-  \n  \n The <xref href=\"System.Collections.CollectionBase\"></xref> has a fixed size."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.OutOfMemoryException
  parent: System
  isExternal: false
  name: OutOfMemoryException
  nameWithType: OutOfMemoryException
  fullName: System.OutOfMemoryException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Collections.CollectionBase.#ctor
  parent: System.Collections.CollectionBase
  isExternal: false
  name: CollectionBase()
  nameWithType: CollectionBase.CollectionBase()
  fullName: CollectionBase.CollectionBase()
- uid: System.Collections.CollectionBase.#ctor(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: CollectionBase(Int32)
  nameWithType: CollectionBase.CollectionBase(Int32)
  fullName: CollectionBase.CollectionBase(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.CollectionBase.Capacity
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Capacity
  nameWithType: CollectionBase.Capacity
  fullName: CollectionBase.Capacity
- uid: System.Collections.CollectionBase.Clear
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Clear()
  nameWithType: CollectionBase.Clear()
  fullName: CollectionBase.Clear()
- uid: System.Collections.CollectionBase.Count
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Count
  nameWithType: CollectionBase.Count
  fullName: CollectionBase.Count
- uid: System.Collections.CollectionBase.GetEnumerator
  parent: System.Collections.CollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: CollectionBase.GetEnumerator()
  fullName: CollectionBase.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.CollectionBase.InnerList
  parent: System.Collections.CollectionBase
  isExternal: false
  name: InnerList
  nameWithType: CollectionBase.InnerList
  fullName: CollectionBase.InnerList
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections.CollectionBase.List
  parent: System.Collections.CollectionBase
  isExternal: false
  name: List
  nameWithType: CollectionBase.List
  fullName: CollectionBase.List
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.CollectionBase.OnClear
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClear()
  nameWithType: CollectionBase.OnClear()
  fullName: CollectionBase.OnClear()
- uid: System.Collections.CollectionBase.OnClearComplete
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClearComplete()
  nameWithType: CollectionBase.OnClearComplete()
  fullName: CollectionBase.OnClearComplete()
- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsert(Int32, Object)
  nameWithType: CollectionBase.OnInsert(Int32, Object)
  fullName: CollectionBase.OnInsert(Int32, Object)
- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsertComplete(Int32, Object)
  nameWithType: CollectionBase.OnInsertComplete(Int32, Object)
  fullName: CollectionBase.OnInsertComplete(Int32, Object)
- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemove(Int32, Object)
  nameWithType: CollectionBase.OnRemove(Int32, Object)
  fullName: CollectionBase.OnRemove(Int32, Object)
- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemoveComplete(Int32, Object)
  nameWithType: CollectionBase.OnRemoveComplete(Int32, Object)
  fullName: CollectionBase.OnRemoveComplete(Int32, Object)
- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSet(Int32, Object, Object)
  nameWithType: CollectionBase.OnSet(Int32, Object, Object)
  fullName: CollectionBase.OnSet(Int32, Object, Object)
- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSetComplete(Int32, Object, Object)
  nameWithType: CollectionBase.OnSetComplete(Int32, Object, Object)
  fullName: CollectionBase.OnSetComplete(Int32, Object, Object)
- uid: System.Collections.CollectionBase.OnValidate(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnValidate(Object)
  nameWithType: CollectionBase.OnValidate(Object)
  fullName: CollectionBase.OnValidate(Object)
- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: CollectionBase.RemoveAt(Int32)
  fullName: CollectionBase.RemoveAt(Int32)
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: CollectionBase.ICollection.CopyTo(Array, Int32)
  fullName: CollectionBase.ICollection.CopyTo(Array, Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.CollectionBase
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: CollectionBase.ICollection.IsSynchronized
  fullName: CollectionBase.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.CollectionBase
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: CollectionBase.ICollection.SyncRoot
  fullName: CollectionBase.ICollection.SyncRoot
- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Add(Object)
  nameWithType: CollectionBase.IList.Add(Object)
  fullName: CollectionBase.IList.Add(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Contains(Object)
  nameWithType: CollectionBase.IList.Contains(Object)
  fullName: CollectionBase.IList.Contains(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.IndexOf(Object)
  nameWithType: CollectionBase.IList.IndexOf(Object)
  fullName: CollectionBase.IList.IndexOf(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Insert(Int32, Object)
  nameWithType: CollectionBase.IList.Insert(Int32, Object)
  fullName: CollectionBase.IList.Insert(Int32, Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.IsFixedSize
  nameWithType: CollectionBase.IList.IsFixedSize
  fullName: CollectionBase.IList.IsFixedSize
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.IsReadOnly
  nameWithType: CollectionBase.IList.IsReadOnly
  fullName: CollectionBase.IList.IsReadOnly
- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Item(Int32)
  nameWithType: CollectionBase.IList.Item(Int32)
  fullName: CollectionBase.IList.Item(Int32)
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Remove(Object)
  nameWithType: CollectionBase.IList.Remove(Object)
  fullName: CollectionBase.IList.Remove(Object)
- uid: System.Collections.CollectionBase.#ctor*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: CollectionBase
  nameWithType: CollectionBase.CollectionBase
  fullName: CollectionBase.CollectionBase
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.Capacity*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Capacity
  nameWithType: CollectionBase.Capacity
  fullName: CollectionBase.Capacity
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.Clear*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Clear
  nameWithType: CollectionBase.Clear
  fullName: CollectionBase.Clear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.Count*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Count
  nameWithType: CollectionBase.Count
  fullName: CollectionBase.Count
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.GetEnumerator*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: GetEnumerator
  nameWithType: CollectionBase.GetEnumerator
  fullName: CollectionBase.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.InnerList*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: InnerList
  nameWithType: CollectionBase.InnerList
  fullName: CollectionBase.InnerList
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.List*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: List
  nameWithType: CollectionBase.List
  fullName: CollectionBase.List
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnClear*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClear
  nameWithType: CollectionBase.OnClear
  fullName: CollectionBase.OnClear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnClearComplete*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClearComplete
  nameWithType: CollectionBase.OnClearComplete
  fullName: CollectionBase.OnClearComplete
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnInsert*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsert
  nameWithType: CollectionBase.OnInsert
  fullName: CollectionBase.OnInsert
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnInsertComplete*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsertComplete
  nameWithType: CollectionBase.OnInsertComplete
  fullName: CollectionBase.OnInsertComplete
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnRemove*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemove
  nameWithType: CollectionBase.OnRemove
  fullName: CollectionBase.OnRemove
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnRemoveComplete*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemoveComplete
  nameWithType: CollectionBase.OnRemoveComplete
  fullName: CollectionBase.OnRemoveComplete
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnSet*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSet
  nameWithType: CollectionBase.OnSet
  fullName: CollectionBase.OnSet
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnSetComplete*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSetComplete
  nameWithType: CollectionBase.OnSetComplete
  fullName: CollectionBase.OnSetComplete
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.OnValidate*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnValidate
  nameWithType: CollectionBase.OnValidate
  fullName: CollectionBase.OnValidate
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.RemoveAt*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: RemoveAt
  nameWithType: CollectionBase.RemoveAt
  fullName: CollectionBase.RemoveAt
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: CollectionBase.System.Collections.ICollection.CopyTo
  fullName: CollectionBase.System.Collections.ICollection.CopyTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: CollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: CollectionBase.System.Collections.ICollection.IsSynchronized
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: CollectionBase.System.Collections.ICollection.SyncRoot
  fullName: CollectionBase.System.Collections.ICollection.SyncRoot
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#IList#Add*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: CollectionBase.System.Collections.IList.Add
  fullName: CollectionBase.System.Collections.IList.Add
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: CollectionBase.System.Collections.IList.Contains
  fullName: CollectionBase.System.Collections.IList.Contains
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: CollectionBase.System.Collections.IList.IndexOf
  fullName: CollectionBase.System.Collections.IList.IndexOf
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: CollectionBase.System.Collections.IList.Insert
  fullName: CollectionBase.System.Collections.IList.Insert
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: CollectionBase.System.Collections.IList.IsFixedSize
  fullName: CollectionBase.System.Collections.IList.IsFixedSize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: CollectionBase.System.Collections.IList.IsReadOnly
  fullName: CollectionBase.System.Collections.IList.IsReadOnly
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#IList#Item*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: CollectionBase.System.Collections.IList.Item
  fullName: CollectionBase.System.Collections.IList.Item
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: CollectionBase.System.Collections.IList.Remove
  fullName: CollectionBase.System.Collections.IList.Remove
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections/CollectionBase.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
