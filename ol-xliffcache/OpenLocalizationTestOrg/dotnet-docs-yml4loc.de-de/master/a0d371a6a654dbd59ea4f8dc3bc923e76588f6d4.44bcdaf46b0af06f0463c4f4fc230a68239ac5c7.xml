{"nodes":[{"content":"Directs tracing or debugging output as XML-encoded data to a <xref href=\"System.IO.TextWriter\"></xref> or to a <xref href=\"System.IO.Stream\"></xref>, such as a <xref href=\"System.IO.FileStream\"></xref>.","nodes":[{"pos":[0,202],"content":"Directs tracing or debugging output as XML-encoded data to a <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> or to a <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, such as a <ph id=\"ph3\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph>.","source":"Directs tracing or debugging output as XML-encoded data to a <xref href=\"System.IO.TextWriter\"></xref> or to a <xref href=\"System.IO.Stream\"></xref>, such as a <xref href=\"System.IO.FileStream\"></xref>."}],"pos":[1980,2183],"yaml":true},{"content":"> [!NOTE]\n>  You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.  \n  \n The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream. The description of the XML output is shown in the tables that follow. You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.  \n  \n You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application. Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.  \n  \n To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application. In this file, you can add or remove a listener, set the properties for a listener, or remove listeners. The configuration file should be formatted like the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"xmlListener\"   \n          type=\"System.Diagnostics.XmlWriterTraceListener\"   \n          initializeData=\"xmlOutput.xml\"   \n          traceOutputOptions=\"ProcessId, DateTime\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.  The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.  If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.  \n  \n> [!NOTE]\n>  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.  \n  \n> [!NOTE]\n>  Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.  The listener methods are not intended to be called directly from application code. The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class. The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.  \n  \n The following table describes the elements and attributes of the XML output.  \n  \n|Element|Attributes|Output|Notes|  \n|-------------|----------------|------------|-----------|  \n|`CallStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|Special characters such as > or < are replaced with escape sequences. See the escaped character translation table that follows.|  \n|`Computer`|None|Always present.|The value of the <xref:System.Environment.MachineName%2A> property.|  \n|`Correlation`|`ActivityID`|Always present|If not specified, the default is an empty GUID.|  \n||`RelatedActivityID`|Depends on the presence of the `relatedActivityId` parameter in the Trace method call.|The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.|  \n|`DataItem`|None|Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.|This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.<br /><br /> The data output uses the `ToString` method of the passed-in data objects.|  \n|`EventID`|None|Always present.|Parameter input (`id`).|  \n|`Execution`|`ProcessName`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n||`ProcessID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>. On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.|  \n||`ThreadID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Level`|None|Always present.|Parameter input (the numeric value of `eventType`). Parameter values greater than 255 are output as 255.|  \n|`LogicalOperationStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.|  \n|`Message`|None|Depends on the presence of a message in the Trace method call.|This element is a formatted message if formatting arguments are provided.|  \n|`Source`|`Name`|Always present.|Parameter input.|  \n|`SubType`|`Name`|Always present.|Parameter input.|  \n|`TimeCreated`|`SystemTime`|Always present.|If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.|  \n|`TimeStamp`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Type`|None|Always present.|Always the value 3.|  \n  \n The following table shows the characters that are escaped in the XML output. Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object. If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.  \n  \n|Escaped character|Value|  \n|-----------------------|-----------|  \n|&|&amp;|  \n|\\<|&lt;|  \n|>|&gt;|  \n|\"|&quot;|  \n|\\|&apos;|  \n|0xD|&\\#xD;|  \n|0xA|&\\#xA;|","nodes":[{"pos":[2,137],"content":"[!NOTE]\n You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.","leadings":["","> "],"nodes":[{"content":"You must have unmanaged code permission to create an instance of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> class.","pos":[9,133],"source":" You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class."}]},{"pos":[144,489],"content":"The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream. The description of the XML output is shown in the tables that follow. You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> class converts tracing and debugging information into an XML-encoded text stream.","pos":[0,134],"source":"The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream."},{"content":"The description of the XML output is shown in the tables that follow.","pos":[135,204]},{"content":"You can use the <bpt id=\"p1\">[</bpt>Service Trace Viewer Tool (SvcTraceViewer.exe)<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=240129)</ept> to display the XML output.","pos":[205,345],"source":" You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output."}]},{"pos":[496,808],"content":"You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application. Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.","nodes":[{"content":"You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application. Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.","pos":[0,312],"nodes":[{"content":"You can enable or disable an <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> through the application configuration file and then use the configured <ph id=\"ph2\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> in your application.","pos":[0,218],"source":"You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application."},{"content":"Alternately, you can create an <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> in your code.","pos":[219,312],"source":" Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code."}]}]},{"pos":[815,1133],"content":"To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application. In this file, you can add or remove a listener, set the properties for a listener, or remove listeners. The configuration file should be formatted like the following example.","nodes":[{"content":"To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application. In this file, you can add or remove a listener, set the properties for a listener, or remove listeners. The configuration file should be formatted like the following example.","pos":[0,318],"nodes":[{"content":"To configure an <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph>, edit the configuration file that corresponds to the name of your application.","pos":[0,143],"source":"To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application."},{"content":"In this file, you can add or remove a listener, set the properties for a listener, or remove listeners.","pos":[144,247]},{"content":"The configuration file should be formatted like the following example.","pos":[248,318]}]}]},{"pos":[1579,2100],"content":"The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.  The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.  If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> class inherits the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property from the base class <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.","pos":[0,191],"source":"The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property allows an additional level of trace output filtering at the listener.","pos":[193,325],"source":"  The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener."},{"content":"If there is a filter present, the <ph id=\"ph1\">`Trace`</ph> methods of the trace listener call the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A&gt;</ph> method of the filter to determine whether to emit the trace.","pos":[327,521],"source":"  If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace."}]},{"pos":[2108,2241],"content":"[!NOTE]\n If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.","leadings":["","> "],"nodes":[{"content":"If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.","pos":[9,131]}]},{"pos":[2249,3051],"content":"[!NOTE]\n Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.  The listener methods are not intended to be called directly from application code. The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class. The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.","leadings":["","> "],"nodes":[{"content":" Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.  The listener methods are not intended to be called directly from application code. The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class. The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.","pos":[8,800],"nodes":[{"content":"Listener methods are intended to be called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes.","pos":[1,178],"source":" Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes."},{"content":"The listener methods are not intended to be called directly from application code.","pos":[180,262]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> listener is primarily intended for use by the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.","pos":[263,406],"source":" The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.Write%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A&gt;</ph> methods can be called by the <ph id=\"ph3\">&lt;xref:System.Diagnostics.Trace&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Diagnostics.Debug&gt;</ph> classes, and default values are provided for the XML elements that <ph id=\"ph5\">&lt;xref:System.Diagnostics.Trace&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.Diagnostics.Debug&gt;</ph> do not supply values for.","pos":[407,792],"source":" The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for."}]}]},{"pos":[3058,3134],"content":"The following table describes the elements and attributes of the XML output.","nodes":[{"content":"The following table describes the elements and attributes of the XML output.","pos":[0,76]}]},{"pos":[3141,3148],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[3149,3159],"content":"Attributes","nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[3160,3166],"content":"Output","nodes":[{"content":"Output","pos":[0,6]}]},{"pos":[3167,3172],"content":"Notes","nodes":[{"content":"Notes","pos":[0,5]}]},{"pos":[3249,3253],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[3254,3417],"content":"Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.","nodes":[{"content":"Depends on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.","pos":[0,163],"source":"Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."}]},{"pos":[3418,3545],"content":"Special characters such as > or < are replaced with escape sequences. See the escaped character translation table that follows.","nodes":[{"content":"Special characters such as > or < are replaced with escape sequences. See the escaped character translation table that follows.","pos":[0,127],"nodes":[{"content":"Special characters such as &gt; or &lt; are replaced with escape sequences.","pos":[0,69],"source":"Special characters such as > or < are replaced with escape sequences."},{"content":"See the escaped character translation table that follows.","pos":[70,127]}]}]},{"pos":[3561,3565],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[3566,3581],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[3582,3649],"content":"The value of the <xref:System.Environment.MachineName%2A> property.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Environment.MachineName%2A&gt;</ph> property.","pos":[0,67],"source":"The value of the <xref:System.Environment.MachineName%2A> property."}]},{"pos":[3681,3695],"content":"Always present","nodes":[{"content":"Always present","pos":[0,14]}]},{"pos":[3696,3743],"content":"If not specified, the default is an empty GUID.","nodes":[{"content":"If not specified, the default is an empty GUID.","pos":[0,47]}]},{"pos":[3769,3855],"content":"Depends on the presence of the <ph id=\"ph1\">`relatedActivityId`</ph> parameter in the Trace method call.","source":"Depends on the presence of the `relatedActivityId` parameter in the Trace method call."},{"pos":[3856,3970],"content":"The <ph id=\"ph1\">`relatedActivityId`</ph> parameter of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph> method.","source":"The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method."},{"pos":[3986,3990],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[3991,4099],"content":"Depends on the <ph id=\"ph1\">`data`</ph> parameter of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A&gt;</ph> method.","source":"Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method."},{"pos":[4100,4333],"content":"This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.<br /><br /> The data output uses the `ToString` method of the passed-in data objects.","nodes":[{"content":"This element can contain an array of elements or one element, so the values are written as a set of <ph id=\"ph1\">`DataItem`</ph> nodes under the <ph id=\"ph2\">`TraceData`</ph> element.","pos":[0,147],"source":"This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element."},{"content":"The data output uses the <ph id=\"ph1\">`ToString`</ph> method of the passed-in data objects.","pos":[160,233],"source":" The data output uses the `ToString` method of the passed-in data objects."}]},{"pos":[4348,4352],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[4353,4368],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[4369,4392],"content":"Parameter input (<ph id=\"ph1\">`id`</ph>).","source":"Parameter input (`id`)."},{"pos":[4423,4438],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[4439,4490],"content":"From the <xref:System.Diagnostics.TraceEventCache>.","nodes":[{"content":"From the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.","pos":[0,51],"source":"From the <xref:System.Diagnostics.TraceEventCache>."}]},{"pos":[4508,4523],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[4524,4787],"content":"From the <xref:System.Diagnostics.TraceEventCache>. On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.","nodes":[{"content":"From the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.","pos":[0,51],"source":"From the <xref:System.Diagnostics.TraceEventCache>."},{"content":"On Windows 98 and Windows Me operating systems, if <ph id=\"ph1\">`ProcessID`</ph> is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.","pos":[52,263],"source":" On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier."}]},{"pos":[4804,4819],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[4820,4871],"content":"From the <xref:System.Diagnostics.TraceEventCache>.","nodes":[{"content":"From the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.","pos":[0,51],"source":"From the <xref:System.Diagnostics.TraceEventCache>."}]},{"pos":[4884,4888],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[4889,4904],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[4905,5009],"content":"Parameter input (the numeric value of `eventType`). Parameter values greater than 255 are output as 255.","nodes":[{"content":"Parameter input (the numeric value of <ph id=\"ph1\">`eventType`</ph>).","pos":[0,51],"source":"Parameter input (the numeric value of `eventType`)."},{"content":"Parameter values greater than 255 are output as 255.","pos":[52,104]}]},{"pos":[5038,5042],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[5043,5218],"content":"Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.","nodes":[{"content":"Depends on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.","pos":[0,175],"source":"Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."}]},{"pos":[5219,5361],"content":"There can be more than one logical operation, so the values are written as <ph id=\"ph1\">`LogicalOperation`</ph> nodes under the <ph id=\"ph2\">`LogicalOperationStack`</ph> element.","source":"There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element."},{"pos":[5376,5380],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[5381,5443],"content":"Depends on the presence of a message in the Trace method call.","nodes":[{"content":"Depends on the presence of a message in the Trace method call.","pos":[0,62]}]},{"pos":[5444,5517],"content":"This element is a formatted message if formatting arguments are provided.","nodes":[{"content":"This element is a formatted message if formatting arguments are provided.","pos":[0,73]}]},{"pos":[5538,5553],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[5554,5570],"content":"Parameter input.","nodes":[{"content":"Parameter input.","pos":[0,16]}]},{"pos":[5592,5607],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[5608,5624],"content":"Parameter input.","nodes":[{"content":"Parameter input.","pos":[0,16]}]},{"pos":[5656,5671],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[5672,5769],"content":"If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.","nodes":[{"content":"If not present in the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>, the default is the current time.","pos":[0,97],"source":"If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time."}]},{"pos":[5786,5790],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[5791,5954],"content":"Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.","nodes":[{"content":"Depends on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.","pos":[0,163],"source":"Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."}]},{"pos":[5955,6006],"content":"From the <xref:System.Diagnostics.TraceEventCache>.","nodes":[{"content":"From the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.","pos":[0,51],"source":"From the <xref:System.Diagnostics.TraceEventCache>."}]},{"pos":[6018,6022],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[6023,6038],"content":"Always present.","nodes":[{"content":"Always present.","pos":[0,15]}]},{"pos":[6039,6058],"content":"Always the value 3.","nodes":[{"content":"Always the value 3.","pos":[0,19]}]},{"pos":[6066,6636],"content":"The following table shows the characters that are escaped in the XML output. Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object. If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.","nodes":[{"content":"The following table shows the characters that are escaped in the XML output.","pos":[0,76]},{"content":"Escaping occurs in all the elements and attributes with the exception of the <ph id=\"ph1\">`DataItem`</ph> element, which is not escaped if the object passed to the <ph id=\"ph2\">`data`</ph> parameter of the <ph id=\"ph3\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A&gt;</ph> method is an <ph id=\"ph4\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object.","pos":[77,368],"source":" Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object."},{"content":"If an <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> is used for the data object, the <ph id=\"ph2\">&lt;xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A&gt;</ph> method is called and the entire root node is traced as unescaped data.","pos":[369,570],"source":" If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data."}]},{"pos":[6643,6660],"content":"Escaped character","nodes":[{"content":"Escaped character","pos":[0,17]}]},{"pos":[6661,6666],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[6711,6712],"content":"&","nodes":[]},{"pos":[6713,6718],"content":"&amp;","nodes":[]},{"pos":[6723,6725],"content":"\\<","nodes":[]},{"pos":[6726,6730],"content":"&lt;","nodes":[]},{"pos":[6735,6736],"content":">","nodes":[]},{"pos":[6737,6741],"content":"&gt;","nodes":[]},{"pos":[6746,6747],"content":"\"","nodes":[{"content":"\"","pos":[0,1]}]},{"pos":[6748,6754],"content":"&quot;","nodes":[]},{"pos":[6759,6760],"content":"\\","nodes":[]},{"pos":[6761,6767],"content":"&apos;","nodes":[]},{"pos":[6772,6775],"content":"0xD","nodes":[{"content":"0xD","pos":[0,3]}]},{"pos":[6776,6782],"content":"&\\#xD;","nodes":[{"content":"<ph id=\"ph1\">&amp;</ph><ph id=\"ph2\">\\#</ph>xD;","pos":[0,6],"source":"&\\#xD;"}]},{"pos":[6787,6790],"content":"0xA","nodes":[{"content":"0xA","pos":[0,3]}]},{"pos":[6791,6797],"content":"&\\#xA;","nodes":[{"content":"<ph id=\"ph1\">&amp;</ph><ph id=\"ph2\">\\#</ph>xA;","pos":[0,6],"source":"&\\#xA;"}]}],"pos":[2194,9079],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class, using the specified stream as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,184],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.XmlWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class, using the specified stream as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class, using the specified stream as the recipient of the debugging and tracing output."}],"pos":[12570,12755],"yaml":true},{"content":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\").","nodes":[{"pos":[0,100],"content":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\").","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string (\"\").","pos":[0,100],"source":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\")."}]}],"pos":[12766,12867],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that represents the stream the trace listener writes to.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that represents the stream the trace listener writes to.","source":"A <xref href=\"System.IO.Stream\"></xref> that represents the stream the trace listener writes to."}],"pos":[13028,13125],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[13302,13333],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class using the specified writer as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,183],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.XmlWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class using the specified writer as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class using the specified writer as the recipient of the debugging and tracing output."}],"pos":[14455,14639],"yaml":true},{"content":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\").","nodes":[{"pos":[0,100],"content":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\").","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string (\"\").","pos":[0,100],"source":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\")."}]}],"pos":[14650,14751],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the trace listener.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> that receives the output from the trace listener.","source":"A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the trace listener."}],"pos":[14920,15014],"yaml":true},{"content":"<code>writer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>writer</code> is `null`."}],"pos":[15191,15222],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class, using the specified file as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,182],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.XmlWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class, using the specified file as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class, using the specified file as the recipient of the debugging and tracing output."}],"pos":[16311,16494],"yaml":true},{"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.  \n  \n> [!NOTE]\n>  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.  \n  \n The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\").","nodes":[{"pos":[0,274],"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.","nodes":[{"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.","pos":[0,274],"nodes":[{"content":"This constructor initializes a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class for the specified file on the specified path, using <ph id=\"ph2\">&lt;xref:System.Text.Encoding.UTF8%2A&gt;</ph> encoding.","pos":[0,184],"source":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding."},{"content":"If the file exists, it is appended to.","pos":[185,223]},{"content":"If the file does not exist, a new file is created.","pos":[224,274]}]}]},{"pos":[282,411],"content":"[!NOTE]\n To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.","leadings":["","> "],"nodes":[{"content":"To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.","pos":[9,127]}]},{"pos":[418,518],"content":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\").","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string (\"\").","pos":[0,100],"source":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\")."}]}],"pos":[16505,17035],"yaml":true,"extradata":"MT"},{"content":"The name of the file to write to.","nodes":[{"pos":[0,33],"content":"The name of the file to write to.","nodes":[{"content":"The name of the file to write to.","pos":[0,33]}]}],"pos":[17187,17221],"yaml":true},{"content":"<code>filename</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;filename&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filename</code> is `null`."}],"pos":[17398,17431],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,208],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.XmlWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified stream as the recipient of the debugging and tracing output."}],"pos":[18595,18804],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\".  \n  \n```  \n((XmlWriterTraceListener)Trace.Listeners[\"xmlListener\"]).TraceOutputOptions =   \n    TraceOptions.Timestamp  \n```","nodes":[{"pos":[0,625],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\".","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to the <ph id=\"ph2\">`name`</ph> parameter value or to an empty string (\"\") if the <ph id=\"ph3\">`name`</ph> parameter is <ph id=\"ph4\">`null`</ph>.","pos":[0,181],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The name can be used as an index into the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;</ph> collection to programmatically change the properties for the listener.","pos":[182,364],"source":" The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener."},{"content":"For example, the following code sets the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for an instance of <ph id=\"ph2\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> whose <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is \"xmlListener\".","pos":[365,625],"source":" For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\"."}]}],"pos":[18815,19579],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that represents the stream the trace listener writes to.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that represents the stream the trace listener writes to.","source":"A <xref href=\"System.IO.Stream\"></xref> that represents the stream the trace listener writes to."}],"pos":[19753,19850],"yaml":true},{"content":"The name of the new instance.","nodes":[{"pos":[0,29],"content":"The name of the new instance.","nodes":[{"content":"The name of the new instance.","pos":[0,29]}]}],"pos":[19910,19940],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[20117,20148],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,208],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.XmlWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified writer as the recipient of the debugging and tracing output."}],"pos":[21336,21545],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\".  \n  \n```  \n((XmlWriterTraceListener)Trace.Listeners[\"xmlListener\"]).TraceOutputOptions =   \n    TraceOptions.Timestamp.  \n```","nodes":[{"pos":[0,625],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\".","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to the <ph id=\"ph2\">`name`</ph> parameter value or to an empty string (\"\") if the <ph id=\"ph3\">`name`</ph> parameter is <ph id=\"ph4\">`null`</ph>.","pos":[0,181],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The name can be used as an index into the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;</ph> collection to programmatically change the properties for the listener.","pos":[182,364],"source":" The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener."},{"content":"For example, the following code sets the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for an instance of <ph id=\"ph2\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> whose <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is \"xmlListener\".","pos":[365,625],"source":" For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\"."}]}],"pos":[21556,22321],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the trace listener.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> that receives the output from the trace listener.","source":"A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the trace listener."}],"pos":[22503,22597],"yaml":true},{"content":"The name of the new instance.","nodes":[{"pos":[0,29],"content":"The name of the new instance.","nodes":[{"content":"The name of the new instance.","pos":[0,29]}]}],"pos":[22657,22687],"yaml":true},{"content":"<code>writer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>writer</code> is `null`."}],"pos":[22864,22895],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified file as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,206],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.XmlWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class with the specified name, using the specified file as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified file as the recipient of the debugging and tracing output."}],"pos":[24050,24257],"yaml":true},{"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.  \n  \n> [!NOTE]\n>  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.  \n  \n The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\".  \n  \n```  \n((XmlWriterTraceListener)Trace.Listeners[\"xmlListener\"]).TraceOutputOptions =  \n    TraceOptions.Timestamp.  \n```","nodes":[{"pos":[0,274],"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.","nodes":[{"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.","pos":[0,274],"nodes":[{"content":"This constructor initializes a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class for the specified file on the specified path, using <ph id=\"ph2\">&lt;xref:System.Text.Encoding.UTF8%2A&gt;</ph> encoding.","pos":[0,184],"source":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding."},{"content":"If the file exists, it is appended to.","pos":[185,223]},{"content":"If the file does not exist, a new file is created.","pos":[224,274]}]}]},{"pos":[282,411],"content":"[!NOTE]\n To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.","leadings":["","> "],"nodes":[{"content":"To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.","pos":[9,127]}]},{"pos":[418,1021],"content":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\".","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is set to the <ph id=\"ph2\">`name`</ph> parameter value or to an empty string (\"\") if the <ph id=\"ph3\">`name`</ph> parameter is <ph id=\"ph4\">`null`</ph>.","pos":[0,159],"source":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The name can be used as an index into the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;</ph> collection to programmatically change the properties for the listener.","pos":[160,342],"source":" The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener."},{"content":"For example, the following code sets the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for an instance of <ph id=\"ph2\">&lt;xref:System.Diagnostics.XmlWriterTraceListener&gt;</ph> whose <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is \"xmlListener\".","pos":[343,603],"source":" For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \"xmlListener\"."}]}],"pos":[24268,25435],"yaml":true,"extradata":"MT"},{"content":"The name of the file to write to.","nodes":[{"pos":[0,33],"content":"The name of the file to write to.","nodes":[{"content":"The name of the file to write to.","pos":[0,33]}]}],"pos":[25600,25634],"yaml":true},{"content":"The name of the new instance.","nodes":[{"pos":[0,29],"content":"The name of the new instance.","nodes":[{"content":"The name of the new instance.","pos":[0,29]}]}],"pos":[25694,25724],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[25901,25932],"yaml":true},{"content":"Closes the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> for this listener so that it no longer receives tracing or debugging output.","nodes":[{"pos":[0,158],"content":"Closes the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"&gt;&lt;/xref&gt;</ph> for this listener so that it no longer receives tracing or debugging output.","source":"Closes the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> for this listener so that it no longer receives tracing or debugging output."}],"pos":[26900,27059],"yaml":true},{"content":"Writes trace information including an error message and a detailed error message to the file or stream.","nodes":[{"pos":[0,103],"content":"Writes trace information including an error message and a detailed error message to the file or stream.","nodes":[{"content":"Writes trace information including an error message and a detailed error message to the file or stream.","pos":[0,103]}]}],"pos":[28301,28405],"yaml":true},{"content":"The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection. By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>. You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.","nodes":[{"pos":[0,506],"content":"The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection. By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>. You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.","nodes":[{"content":"The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection. By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>. You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.","pos":[0,506],"nodes":[{"content":"The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;</ph> collection.","pos":[0,290],"source":"The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection."},{"content":"By default, the collection contains an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[291,389],"source":" By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"You can customize this behavior by adding or removing a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> from the collection.","pos":[390,506],"source":" You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection."}]}]}],"pos":[28416,28923],"yaml":true,"extradata":"MT"},{"content":"The error message to write.","nodes":[{"pos":[0,27],"content":"The error message to write.","nodes":[{"content":"The error message to write.","pos":[0,27]}]}],"pos":[29091,29119],"yaml":true},{"content":"The detailed error message to append to the error message.","nodes":[{"pos":[0,58],"content":"The detailed error message to append to the error message.","nodes":[{"content":"The detailed error message to append to the error message.","pos":[0,58]}]}],"pos":[29188,29247],"yaml":true},{"content":"Writes trace information, a data object, and event information to the file or stream.","nodes":[{"pos":[0,85],"content":"Writes trace information, a data object, and event information to the file or stream.","nodes":[{"content":"Writes trace information, a data object, and event information to the file or stream.","pos":[0,85]}]}],"pos":[30811,30897],"yaml":true},{"content":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `data` parameter is written as a `DataItem` node in the `TraceData` element. The `ToString` method of the data object is used to convert the object to a string.  \n  \n> [!IMPORTANT]\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","nodes":[{"pos":[0,409],"content":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `data` parameter is written as a `DataItem` node in the `TraceData` element. The `ToString` method of the data object is used to convert the object to a string.","nodes":[{"content":"The <ph id=\"ph1\">`eventCache`</ph>, <ph id=\"ph2\">`source`</ph>, <ph id=\"ph3\">`eventType`</ph>, and <ph id=\"ph4\">`id`</ph> parameters are used in the header and footer of the trace.","pos":[0,108],"source":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace."},{"content":"The <ph id=\"ph1\">`id`</ph> parameter is converted to an unsigned integer before writing, so a negative <ph id=\"ph2\">`id`</ph> value is written as a large positive integer.","pos":[109,244],"source":" The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer."},{"content":"The <ph id=\"ph1\">`data`</ph> parameter is written as a <ph id=\"ph2\">`DataItem`</ph> node in the <ph id=\"ph3\">`TraceData`</ph> element.","pos":[245,325],"source":" The `data` parameter is written as a `DataItem` node in the `TraceData` element."},{"content":"The <ph id=\"ph1\">`ToString`</ph> method of the data object is used to convert the object to a string.","pos":[326,409],"source":" The `ToString` method of the data object is used to convert the object to a string."}]},{"pos":[417,672],"content":"[!IMPORTANT]\n This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","leadings":["","> "],"nodes":[{"content":" This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","pos":[13,253],"nodes":[{"content":"This method is not intended to be called directly by application code.","pos":[1,71]},{"content":"It is called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.","pos":[73,240],"source":"  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]}]}],"pos":[30908,31586],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information."}],"pos":[31873,32009],"yaml":true},{"content":"The source name.","nodes":[{"pos":[0,16],"content":"The source name.","nodes":[{"content":"The source name.","pos":[0,16]}]}],"pos":[32071,32088],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values."}],"pos":[32173,32247],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[32304,32340],"yaml":true},{"content":"A data object to emit.","nodes":[{"pos":[0,22],"content":"A data object to emit.","nodes":[{"content":"A data object to emit.","pos":[0,22]}]}],"pos":[32400,32423],"yaml":true},{"content":"Writes trace information, data objects, and event information to the file or stream.","nodes":[{"pos":[0,84],"content":"Writes trace information, data objects, and event information to the file or stream.","nodes":[{"content":"Writes trace information, data objects, and event information to the file or stream.","pos":[0,84]}]}],"pos":[34004,34089],"yaml":true},{"content":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element. The `ToString` method of each data object is used to convert the object to a string.  \n  \n> [!IMPORTANT]\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","nodes":[{"pos":[0,431],"content":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element. The `ToString` method of each data object is used to convert the object to a string.","nodes":[{"content":"The <ph id=\"ph1\">`eventCache`</ph>, <ph id=\"ph2\">`source`</ph>, <ph id=\"ph3\">`eventType`</ph>, and <ph id=\"ph4\">`id`</ph> parameters are used in the header and footer of the trace.","pos":[0,108],"source":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace."},{"content":"The <ph id=\"ph1\">`id`</ph> parameter is converted to an unsigned integer before writing, so a negative <ph id=\"ph2\">`id`</ph> value is written as a large positive integer.","pos":[109,244],"source":" The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer."},{"content":"The objects in the <ph id=\"ph1\">`data`</ph> parameter array are written as <ph id=\"ph2\">`DataItem`</ph> nodes in the <ph id=\"ph3\">`TraceData`</ph> element.","pos":[245,346],"source":" The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element."},{"content":"The <ph id=\"ph1\">`ToString`</ph> method of each data object is used to convert the object to a string.","pos":[347,431],"source":" The `ToString` method of each data object is used to convert the object to a string."}]},{"pos":[439,694],"content":"[!IMPORTANT]\n This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","leadings":["","> "],"nodes":[{"content":" This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","pos":[13,253],"nodes":[{"content":"This method is not intended to be called directly by application code.","pos":[1,71]},{"content":"It is called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.","pos":[73,240],"source":"  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]}]}],"pos":[34100,34800],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information."}],"pos":[35089,35225],"yaml":true},{"content":"The source name.","nodes":[{"pos":[0,16],"content":"The source name.","nodes":[{"content":"The source name.","pos":[0,16]}]}],"pos":[35287,35304],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values."}],"pos":[35389,35463],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[35520,35556],"yaml":true},{"content":"An array of data objects to emit.","nodes":[{"pos":[0,33],"content":"An array of data objects to emit.","nodes":[{"content":"An array of data objects to emit.","pos":[0,33]}]}],"pos":[35618,35652],"yaml":true},{"content":"Writes trace information, a message, and event information to the file or stream.","nodes":[{"pos":[0,81],"content":"Writes trace information, a message, and event information to the file or stream.","nodes":[{"content":"Writes trace information, a message, and event information to the file or stream.","pos":[0,81]}]}],"pos":[37227,37309],"yaml":true},{"content":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `message` parameter is written as the `Message` element.  \n  \n> [!IMPORTANT]\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","nodes":[{"pos":[0,305],"content":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `message` parameter is written as the `Message` element.","nodes":[{"content":"The <ph id=\"ph1\">`eventCache`</ph>, <ph id=\"ph2\">`source`</ph>, <ph id=\"ph3\">`eventType`</ph>, and <ph id=\"ph4\">`id`</ph> parameters are used in the header and footer of the trace.","pos":[0,108],"source":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace."},{"content":"The <ph id=\"ph1\">`id`</ph> parameter is converted to an unsigned integer before writing, so a negative <ph id=\"ph2\">`id`</ph> value is written as a large positive integer.","pos":[109,244],"source":" The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer."},{"content":"The <ph id=\"ph1\">`message`</ph> parameter is written as the <ph id=\"ph2\">`Message`</ph> element.","pos":[245,305],"source":" The `message` parameter is written as the `Message` element."}]},{"pos":[313,568],"content":"[!IMPORTANT]\n This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","leadings":["","> "],"nodes":[{"content":" This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","pos":[13,253],"nodes":[{"content":"This method is not intended to be called directly by application code.","pos":[1,71]},{"content":"It is called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.","pos":[73,240],"source":"  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]}]}],"pos":[37320,37894],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information."}],"pos":[38185,38321],"yaml":true},{"content":"The source name.","nodes":[{"pos":[0,16],"content":"The source name.","nodes":[{"content":"The source name.","pos":[0,16]}]}],"pos":[38383,38400],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values."}],"pos":[38485,38559],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[38616,38652],"yaml":true},{"content":"The message to write.","nodes":[{"pos":[0,21],"content":"The message to write.","nodes":[{"content":"The message to write.","pos":[0,21]}]}],"pos":[38715,38737],"yaml":true},{"content":"Writes trace information, a formatted message, and event information to the file or stream.","nodes":[{"pos":[0,91],"content":"Writes trace information, a formatted message, and event information to the file or stream.","nodes":[{"content":"Writes trace information, a formatted message, and event information to the file or stream.","pos":[0,91]}]}],"pos":[40391,40483],"yaml":true},{"content":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.  \n  \n> [!IMPORTANT]\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","nodes":[{"pos":[0,483],"content":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.","nodes":[{"content":"The <ph id=\"ph1\">`eventCache`</ph>, <ph id=\"ph2\">`source`</ph>, <ph id=\"ph3\">`eventType`</ph>, and <ph id=\"ph4\">`id`</ph> parameters are used in the header and footer of the trace.","pos":[0,108],"source":"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace."},{"content":"The <ph id=\"ph1\">`id`</ph> parameter is converted to an unsigned integer before writing, so a negative <ph id=\"ph2\">`id`</ph> value is written as a large positive integer.","pos":[109,244],"source":" The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer."},{"content":"The <ph id=\"ph1\">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method is called, passing in the <ph id=\"ph2\">`format`</ph> string and <ph id=\"ph3\">`args`</ph> array as parameters, to format the <ph id=\"ph4\">`args`</ph> object array as the <ph id=\"ph5\">`Message`</ph> element.","pos":[245,483],"source":" The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element."}]},{"pos":[491,746],"content":"[!IMPORTANT]\n This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","leadings":["","> "],"nodes":[{"content":" This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","pos":[13,253],"nodes":[{"content":"This method is not intended to be called directly by application code.","pos":[1,71]},{"content":"It is called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.","pos":[73,240],"source":"  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]}]}],"pos":[40494,41246],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information."}],"pos":[41551,41687],"yaml":true},{"content":"The source name.","nodes":[{"pos":[0,16],"content":"The source name.","nodes":[{"content":"The source name.","pos":[0,16]}]}],"pos":[41749,41766],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values."}],"pos":[41851,41925],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[41982,42018],"yaml":true},{"content":"A format string that contains zero or more format items that correspond to objects in the <code>args</code> array.","nodes":[{"pos":[0,114],"content":"A format string that contains zero or more format items that correspond to objects in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","source":"A format string that contains zero or more format items that correspond to objects in the <code>args</code> array."}],"pos":[42080,42195],"yaml":true},{"content":"An object array containing zero or more objects to format.","nodes":[{"pos":[0,58],"content":"An object array containing zero or more objects to format.","nodes":[{"content":"An object array containing zero or more objects to format.","pos":[0,58]}]}],"pos":[42257,42316],"yaml":true},{"content":"Writes trace information including the identity of a related activity, a message, and event information to the file or stream.","nodes":[{"pos":[0,126],"content":"Writes trace information including the identity of a related activity, a message, and event information to the file or stream.","nodes":[{"content":"Writes trace information including the identity of a related activity, a message, and event information to the file or stream.","pos":[0,126]}]}],"pos":[43814,43941],"yaml":true},{"content":"The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces. The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `message` parameter is written as the `Message` element. The <xref:System.Guid.ToString%28System.String%29?displayProperty=fullName> method is called to convert the `relatedActivityId`value to a \"B\" formatted string, which appears in the header. The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.  It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.","nodes":[{"pos":[0,754],"content":"The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces. The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `message` parameter is written as the `Message` element. The <xref:System.Guid.ToString%28System.String%29?displayProperty=fullName> method is called to convert the `relatedActivityId`value to a \"B\" formatted string, which appears in the header. The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph> method is used for the correlation of related traces.","pos":[0,123],"source":"The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces."},{"content":"The <ph id=\"ph1\">`eventCache`</ph>, <ph id=\"ph2\">`source`</ph>, <ph id=\"ph3\">`id`</ph>, and <ph id=\"ph4\">`relatedActivityId`</ph> parameters are used in the header and footer of the trace.","pos":[124,240],"source":" The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace."},{"content":"The <ph id=\"ph1\">`id`</ph> parameter is converted to an unsigned integer before writing, so a negative <ph id=\"ph2\">`id`</ph> value is written as a large positive integer.","pos":[241,376],"source":" The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer."},{"content":"The <ph id=\"ph1\">`message`</ph> parameter is written as the <ph id=\"ph2\">`Message`</ph> element.","pos":[377,437],"source":" The `message` parameter is written as the `Message` element."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Guid.ToString%28System.String%29?displayProperty=fullName&gt;</ph> method is called to convert the <ph id=\"ph2\">`relatedActivityId`</ph>value to a \"B\" formatted string, which appears in the header.","pos":[438,626],"source":" The <xref:System.Guid.ToString%28System.String%29?displayProperty=fullName> method is called to convert the `relatedActivityId`value to a \"B\" formatted string, which appears in the header."},{"content":"The <ph id=\"ph1\">`SubTypeName`</ph> element in the footer identifies the trace event type as a <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph>.","pos":[627,754],"source":" The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>."}]},{"pos":[762,1084],"content":"[!IMPORTANT]\n The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.  It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.  It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.","pos":[13,320],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph> method is not intended to be called by application code.","pos":[1,127],"source":" The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code."},{"content":"It is intended to be called by a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> object to emit the trace information for its <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceSource.TraceTransfer%2A&gt;</ph> method.","pos":[129,307],"source":"  It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method."}]}]}],"pos":[43952,45044],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information."}],"pos":[45317,45453],"yaml":true},{"content":"The source name.","nodes":[{"pos":[0,16],"content":"The source name.","nodes":[{"content":"The source name.","pos":[0,16]}]}],"pos":[45515,45532],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[45589,45625],"yaml":true},{"content":"A trace message to write.","nodes":[{"pos":[0,25],"content":"A trace message to write.","nodes":[{"content":"A trace message to write.","pos":[0,25]}]}],"pos":[45688,45714],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> structure that identifies a related activity.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> structure that identifies a related activity.","source":"A <xref href=\"System.Guid\"></xref> structure that identifies a related activity."}],"pos":[45785,45866],"yaml":true},{"content":"Writes a verbatim message without any additional context information to the file or stream.","nodes":[{"pos":[0,91],"content":"Writes a verbatim message without any additional context information to the file or stream.","nodes":[{"content":"Writes a verbatim message without any additional context information to the file or stream.","pos":[0,91]}]}],"pos":[46983,47075],"yaml":true},{"content":"Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.","nodes":[{"pos":[0,126],"content":"Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A&gt;</ph> method to include context information in the log output.","pos":[0,126],"source":"Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output."}]}],"pos":[47086,47213],"yaml":true,"extradata":"MT"},{"content":"The message to write.","nodes":[{"pos":[0,21],"content":"The message to write.","nodes":[{"content":"The message to write.","pos":[0,21]}]}],"pos":[47360,47382],"yaml":true},{"content":"Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.","nodes":[{"pos":[0,131],"content":"Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.","nodes":[{"content":"Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.","pos":[0,131]}]}],"pos":[48515,48647],"yaml":true},{"content":"Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.","nodes":[{"pos":[0,126],"content":"Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A&gt;</ph> method to include context information in the log output.","pos":[0,126],"source":"Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output."}]}],"pos":[48658,48785],"yaml":true,"extradata":"MT"},{"content":"The message to write.","nodes":[{"pos":[0,21],"content":"The message to write.","nodes":[{"content":"The message to write.","pos":[0,21]}]}],"pos":[48936,48958],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.XmlWriterTraceListener\n  commentId: T:System.Diagnostics.XmlWriterTraceListener\n  id: XmlWriterTraceListener\n  children:\n  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)\n  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)\n  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)\n  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)\n  - System.Diagnostics.XmlWriterTraceListener.Close\n  - System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)\n  - System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  - System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  - System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  - System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  - System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  - System.Diagnostics.XmlWriterTraceListener.Write(System.String)\n  - System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)\n  langs:\n  - csharp\n  name: XmlWriterTraceListener\n  nameWithType: XmlWriterTraceListener\n  fullName: System.Diagnostics.XmlWriterTraceListener\n  type: Class\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Directs tracing or debugging output as XML-encoded data to a <xref href=\"System.IO.TextWriter\"></xref> or to a <xref href=\"System.IO.Stream\"></xref>, such as a <xref href=\"System.IO.FileStream\"></xref>.\n  remarks: \"> [!NOTE]\\n>  You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.  \\n  \\n The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream. The description of the XML output is shown in the tables that follow. You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.  \\n  \\n You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application. Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.  \\n  \\n To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application. In this file, you can add or remove a listener, set the properties for a listener, or remove listeners. The configuration file should be formatted like the following example.  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n      <listeners>  \\n        <add name=\\\"xmlListener\\\"   \\n          type=\\\"System.Diagnostics.XmlWriterTraceListener\\\"   \\n          initializeData=\\\"xmlOutput.xml\\\"   \\n          traceOutputOptions=\\\"ProcessId, DateTime\\\" />  \\n        <remove name=\\\"Default\\\" />  \\n      </listeners>  \\n    </trace>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.  The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.  If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.  \\n  \\n> [!NOTE]\\n>  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.  \\n  \\n> [!NOTE]\\n>  Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.  The listener methods are not intended to be called directly from application code. The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class. The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.  \\n  \\n The following table describes the elements and attributes of the XML output.  \\n  \\n|Element|Attributes|Output|Notes|  \\n|-------------|----------------|------------|-----------|  \\n|`CallStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|Special characters such as > or < are replaced with escape sequences. See the escaped character translation table that follows.|  \\n|`Computer`|None|Always present.|The value of the <xref:System.Environment.MachineName%2A> property.|  \\n|`Correlation`|`ActivityID`|Always present|If not specified, the default is an empty GUID.|  \\n||`RelatedActivityID`|Depends on the presence of the `relatedActivityId` parameter in the Trace method call.|The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.|  \\n|`DataItem`|None|Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.|This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.<br /><br /> The data output uses the `ToString` method of the passed-in data objects.|  \\n|`EventID`|None|Always present.|Parameter input (`id`).|  \\n|`Execution`|`ProcessName`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \\n||`ProcessID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>. On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.|  \\n||`ThreadID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \\n|`Level`|None|Always present.|Parameter input (the numeric value of `eventType`). Parameter values greater than 255 are output as 255.|  \\n|`LogicalOperationStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.|  \\n|`Message`|None|Depends on the presence of a message in the Trace method call.|This element is a formatted message if formatting arguments are provided.|  \\n|`Source`|`Name`|Always present.|Parameter input.|  \\n|`SubType`|`Name`|Always present.|Parameter input.|  \\n|`TimeCreated`|`SystemTime`|Always present.|If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.|  \\n|`TimeStamp`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|From the <xref:System.Diagnostics.TraceEventCache>.|  \\n|`Type`|None|Always present.|Always the value 3.|  \\n  \\n The following table shows the characters that are escaped in the XML output. Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object. If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.  \\n  \\n|Escaped character|Value|  \\n|-----------------------|-----------|  \\n|&|&amp;|  \\n|\\\\<|&lt;|  \\n|>|&gt;|  \\n|\\\"|&quot;|  \\n|\\\\|&apos;|  \\n|0xD|&\\\\#xD;|  \\n|0xA|&\\\\#xA;|\"\n  example:\n  - \"The following code example shows the use of the <xref:System.Diagnostics.XmlWriterTraceListener> class to write both escaped and non-escaped data to file logs.  \\n  \\n [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]\\n [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]\"\n  syntax:\n    content: 'public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener'\n  inheritance:\n  - System.Object\n  - System.Diagnostics.TraceListener\n  - System.Diagnostics.TextWriterTraceListener\n  implements: []\n  inheritedMembers:\n  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  - System.Diagnostics.TextWriterTraceListener.Flush\n  - System.Diagnostics.TextWriterTraceListener.Writer\n  - System.Diagnostics.TraceListener.Attributes\n  - System.Diagnostics.TraceListener.Dispose\n  - System.Diagnostics.TraceListener.Fail(System.String)\n  - System.Diagnostics.TraceListener.Filter\n  - System.Diagnostics.TraceListener.GetSupportedAttributes\n  - System.Diagnostics.TraceListener.IndentLevel\n  - System.Diagnostics.TraceListener.IndentSize\n  - System.Diagnostics.TraceListener.IsThreadSafe\n  - System.Diagnostics.TraceListener.Name\n  - System.Diagnostics.TraceListener.NeedIndent\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  - System.Diagnostics.TraceListener.TraceOutputOptions\n  - System.Diagnostics.TraceListener.Write(System.Object)\n  - System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  - System.Diagnostics.TraceListener.Write(System.String,System.String)\n  - System.Diagnostics.TraceListener.WriteIndent\n  - System.Diagnostics.TraceListener.WriteLine(System.Object)\n  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: XmlWriterTraceListener(Stream)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(Stream)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class, using the specified stream as the recipient of the debugging and tracing output.\n  remarks: The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\").\n  syntax:\n    content: public XmlWriterTraceListener (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that represents the stream the trace listener writes to.\n  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)\n  id: '#ctor(System.IO.TextWriter)'\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: XmlWriterTraceListener(TextWriter)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class using the specified writer as the recipient of the debugging and tracing output.\n  remarks: The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\").\n  syntax:\n    content: public XmlWriterTraceListener (System.IO.TextWriter writer);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the trace listener.\n  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>writer</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: XmlWriterTraceListener(String)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class, using the specified file as the recipient of the debugging and tracing output.\n  remarks: \"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.  \\n  \\n> [!NOTE]\\n>  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \\\"?\\\" character.  \\n  \\n The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\\\"\\\").\"\n  syntax:\n    content: public XmlWriterTraceListener (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to write to.\n  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filename</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  id: '#ctor(System.IO.Stream,System.String)'\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: XmlWriterTraceListener(Stream, String)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream, String)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(Stream, String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.\n  remarks: \"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string (\\\"\\\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \\\"xmlListener\\\".  \\n  \\n```  \\n((XmlWriterTraceListener)Trace.Listeners[\\\"xmlListener\\\"]).TraceOutputOptions =   \\n    TraceOptions.Timestamp  \\n```\"\n  syntax:\n    content: public XmlWriterTraceListener (System.IO.Stream stream, string name);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that represents the stream the trace listener writes to.\n    - id: name\n      type: System.String\n      description: The name of the new instance.\n  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  id: '#ctor(System.IO.TextWriter,System.String)'\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: XmlWriterTraceListener(TextWriter, String)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter, String)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter, String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.\n  remarks: \"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string (\\\"\\\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \\\"xmlListener\\\".  \\n  \\n```  \\n((XmlWriterTraceListener)Trace.Listeners[\\\"xmlListener\\\"]).TraceOutputOptions =   \\n    TraceOptions.Timestamp.  \\n```\"\n  syntax:\n    content: public XmlWriterTraceListener (System.IO.TextWriter writer, string name);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the trace listener.\n    - id: name\n      type: System.String\n      description: The name of the new instance.\n  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>writer</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: XmlWriterTraceListener(String, String)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String, String)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(String, String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.XmlWriterTraceListener\"></xref> class with the specified name, using the specified file as the recipient of the debugging and tracing output.\n  remarks: \"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.  \\n  \\n> [!NOTE]\\n>  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \\\"?\\\" character.  \\n  \\n The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string (\\\"\\\") if the `name` parameter is `null`. The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is \\\"xmlListener\\\".  \\n  \\n```  \\n((XmlWriterTraceListener)Trace.Listeners[\\\"xmlListener\\\"]).TraceOutputOptions =  \\n    TraceOptions.Timestamp.  \\n```\"\n  syntax:\n    content: public XmlWriterTraceListener (string filename, string name);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to write to.\n    - id: name\n      type: System.String\n      description: The name of the new instance.\n  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.Close\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.Close\n  id: Close\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: XmlWriterTraceListener.Close()\n  fullName: XmlWriterTraceListener.Close()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Closes the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> for this listener so that it no longer receives tracing or debugging output.\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Diagnostics.XmlWriterTraceListener.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)\n  id: Fail(System.String,System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: Fail(String, String)\n  nameWithType: XmlWriterTraceListener.Fail(String, String)\n  fullName: XmlWriterTraceListener.Fail(String, String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information including an error message and a detailed error message to the file or stream.\n  remarks: The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collection. By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>. You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.\n  syntax:\n    content: public override void Fail (string message, string detailMessage);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message to write.\n    - id: detailMessage\n      type: System.String\n      description: The detailed error message to append to the error message.\n  overload: System.Diagnostics.XmlWriterTraceListener.Fail*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  fullName: XmlWriterTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information, a data object, and event information to the file or stream.\n  remarks: \"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `data` parameter is written as a `DataItem` node in the `TraceData` element. The `ToString` method of the data object is used to convert the object to a string.  \\n  \\n> [!IMPORTANT]\\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: The source name.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: data\n      type: System.Object\n      description: A data object to emit.\n  overload: System.Diagnostics.XmlWriterTraceListener.TraceData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  fullName: XmlWriterTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information, data objects, and event information to the file or stream.\n  remarks: \"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element. The `ToString` method of each data object is used to convert the object to a string.  \\n  \\n> [!IMPORTANT]\\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: The source name.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: data\n      type: System.Object[]\n      description: An array of data objects to emit.\n  overload: System.Diagnostics.XmlWriterTraceListener.TraceData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  fullName: XmlWriterTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information, a message, and event information to the file or stream.\n  remarks: \"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `message` parameter is written as the `Message` element.  \\n  \\n> [!IMPORTANT]\\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: The source name.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: message\n      type: System.String\n      description: The message to write.\n  overload: System.Diagnostics.XmlWriterTraceListener.TraceEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  fullName: XmlWriterTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information, a formatted message, and event information to the file or stream.\n  remarks: \"The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.  \\n  \\n> [!IMPORTANT]\\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: The source name.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: format\n      type: System.String\n      description: A format string that contains zero or more format items that correspond to objects in the <code>args</code> array.\n    - id: args\n      type: System.Object[]\n      description: An object array containing zero or more objects to format.\n  overload: System.Diagnostics.XmlWriterTraceListener.TraceEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  nameWithType: XmlWriterTraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  fullName: XmlWriterTraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information including the identity of a related activity, a message, and event information to the file or stream.\n  remarks: \"The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces. The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The `message` parameter is written as the `Message` element. The <xref:System.Guid.ToString%28System.String%29?displayProperty=fullName> method is called to convert the `relatedActivityId`value to a \\\"B\\\" formatted string, which appears in the header. The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.  It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.\"\n  syntax:\n    content: public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: The source name.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: message\n      type: System.String\n      description: A trace message to write.\n    - id: relatedActivityId\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> structure that identifies a related activity.\n  overload: System.Diagnostics.XmlWriterTraceListener.TraceTransfer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.Write(System.String)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)\n  id: Write(System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: XmlWriterTraceListener.Write(String)\n  fullName: XmlWriterTraceListener.Write(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes a verbatim message without any additional context information to the file or stream.\n  remarks: Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.\n  syntax:\n    content: public override void Write (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to write.\n  overload: System.Diagnostics.XmlWriterTraceListener.Write*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)\n  commentId: M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  langs:\n  - csharp\n  name: WriteLine(String)\n  nameWithType: XmlWriterTraceListener.WriteLine(String)\n  fullName: XmlWriterTraceListener.WriteLine(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.\n  remarks: Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.\n  syntax:\n    content: public override void WriteLine (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to write.\n  overload: System.Diagnostics.XmlWriterTraceListener.WriteLine*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.TextWriterTraceListener\n  parent: System.Diagnostics\n  isExternal: false\n  name: TextWriterTraceListener\n  nameWithType: TextWriterTraceListener\n  fullName: System.Diagnostics.TextWriterTraceListener\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: XmlWriterTraceListener(Stream)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: XmlWriterTraceListener(TextWriter)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: XmlWriterTraceListener(String)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: XmlWriterTraceListener(Stream, String)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream, String)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(Stream, String)\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: XmlWriterTraceListener(TextWriter, String)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter, String)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter, String)\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: XmlWriterTraceListener(String, String)\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String, String)\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener(String, String)\n- uid: System.Diagnostics.XmlWriterTraceListener.Close\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: Close()\n  nameWithType: XmlWriterTraceListener.Close()\n  fullName: XmlWriterTraceListener.Close()\n- uid: System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: Fail(String, String)\n  nameWithType: XmlWriterTraceListener.Fail(String, String)\n  fullName: XmlWriterTraceListener.Fail(String, String)\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  fullName: XmlWriterTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  fullName: XmlWriterTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  fullName: XmlWriterTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  fullName: XmlWriterTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  nameWithType: XmlWriterTraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  fullName: XmlWriterTraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.XmlWriterTraceListener.Write(System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: Write(String)\n  nameWithType: XmlWriterTraceListener.Write(String)\n  fullName: XmlWriterTraceListener.Write(String)\n- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: WriteLine(String)\n  nameWithType: XmlWriterTraceListener.WriteLine(String)\n  fullName: XmlWriterTraceListener.WriteLine(String)\n- uid: System.Diagnostics.XmlWriterTraceListener.#ctor*\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: XmlWriterTraceListener\n  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener\n  fullName: XmlWriterTraceListener.XmlWriterTraceListener\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n- uid: System.Diagnostics.XmlWriterTraceListener.Close*\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: Close\n  nameWithType: XmlWriterTraceListener.Close\n  fullName: XmlWriterTraceListener.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n- uid: System.Diagnostics.XmlWriterTraceListener.Fail*\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: Fail\n  nameWithType: XmlWriterTraceListener.Fail\n  fullName: XmlWriterTraceListener.Fail\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceData*\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: TraceData\n  nameWithType: XmlWriterTraceListener.TraceData\n  fullName: XmlWriterTraceListener.TraceData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent*\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: TraceEvent\n  nameWithType: XmlWriterTraceListener.TraceEvent\n  fullName: XmlWriterTraceListener.TraceEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer*\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: TraceTransfer\n  nameWithType: XmlWriterTraceListener.TraceTransfer\n  fullName: XmlWriterTraceListener.TraceTransfer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n- uid: System.Diagnostics.XmlWriterTraceListener.Write*\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: Write\n  nameWithType: XmlWriterTraceListener.Write\n  fullName: XmlWriterTraceListener.Write\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine*\n  parent: System.Diagnostics.XmlWriterTraceListener\n  isExternal: false\n  name: WriteLine\n  nameWithType: XmlWriterTraceListener.WriteLine\n  fullName: XmlWriterTraceListener.WriteLine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/XmlWriterTraceListener.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Diagnostics.TraceListener.Attributes\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Attributes\n  nameWithType: TraceListener.Attributes\n  fullName: TraceListener.Attributes\n- uid: System.Diagnostics.TraceListener.Dispose\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Dispose()\n  nameWithType: TraceListener.Dispose()\n  fullName: TraceListener.Dispose()\n- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TextWriterTraceListener.Dispose(Boolean)\n  fullName: TextWriterTraceListener.Dispose(Boolean)\n- uid: System.Diagnostics.TraceListener.Fail(System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Fail(String)\n  nameWithType: TraceListener.Fail(String)\n  fullName: TraceListener.Fail(String)\n- uid: System.Diagnostics.TraceListener.Filter\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Filter\n  nameWithType: TraceListener.Filter\n  fullName: TraceListener.Filter\n- uid: System.Diagnostics.TextWriterTraceListener.Flush\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Flush()\n  nameWithType: TextWriterTraceListener.Flush()\n  fullName: TextWriterTraceListener.Flush()\n- uid: System.Diagnostics.TraceListener.GetSupportedAttributes\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: GetSupportedAttributes()\n  nameWithType: TraceListener.GetSupportedAttributes()\n  fullName: TraceListener.GetSupportedAttributes()\n- uid: System.Diagnostics.TraceListener.IndentLevel\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentLevel\n  nameWithType: TraceListener.IndentLevel\n  fullName: TraceListener.IndentLevel\n- uid: System.Diagnostics.TraceListener.IndentSize\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentSize\n  nameWithType: TraceListener.IndentSize\n  fullName: TraceListener.IndentSize\n- uid: System.Diagnostics.TraceListener.IsThreadSafe\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IsThreadSafe\n  nameWithType: TraceListener.IsThreadSafe\n  fullName: TraceListener.IsThreadSafe\n- uid: System.Diagnostics.TraceListener.Name\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Name\n  nameWithType: TraceListener.Name\n  fullName: TraceListener.Name\n- uid: System.Diagnostics.TraceListener.NeedIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: NeedIndent\n  nameWithType: TraceListener.NeedIndent\n  fullName: TraceListener.NeedIndent\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n- uid: System.Diagnostics.TraceListener.TraceOutputOptions\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceOutputOptions\n  nameWithType: TraceListener.TraceOutputOptions\n  fullName: TraceListener.TraceOutputOptions\n- uid: System.Diagnostics.TraceListener.Write(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(Object)\n  nameWithType: TraceListener.Write(Object)\n  fullName: TraceListener.Write(Object)\n- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(Object, String)\n  nameWithType: TraceListener.Write(Object, String)\n  fullName: TraceListener.Write(Object, String)\n- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(String, String)\n  nameWithType: TraceListener.Write(String, String)\n  fullName: TraceListener.Write(String, String)\n- uid: System.Diagnostics.TraceListener.WriteIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteIndent()\n  nameWithType: TraceListener.WriteIndent()\n  fullName: TraceListener.WriteIndent()\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(Object)\n  nameWithType: TraceListener.WriteLine(Object)\n  fullName: TraceListener.WriteLine(Object)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(Object, String)\n  nameWithType: TraceListener.WriteLine(Object, String)\n  fullName: TraceListener.WriteLine(Object, String)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(String, String)\n  nameWithType: TraceListener.WriteLine(String, String)\n  fullName: TraceListener.WriteLine(String, String)\n- uid: System.Diagnostics.TextWriterTraceListener.Writer\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Writer\n  nameWithType: TextWriterTraceListener.Writer\n  fullName: TextWriterTraceListener.Writer\n"}