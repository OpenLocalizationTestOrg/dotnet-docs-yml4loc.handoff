{"nodes":[{"content":"Implements a <xref href=\"System.IO.TextWriter\"></xref> for writing characters to a stream in a particular encoding.","nodes":[{"pos":[0,115],"content":"Implements a <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> for writing characters to a stream in a particular encoding.","source":"Implements a <xref href=\"System.IO.TextWriter\"></xref> for writing characters to a stream in a particular encoding."}],"pos":[1909,2025],"yaml":true},{"content":"> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamwriter.cs#9e38cb1c84769eba). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n <xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n <xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise. This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.  \n  \n By default, a <xref:System.IO.StreamWriter> is not thread safe. See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,414],"content":"[!NOTE]\n To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamwriter.cs#9e38cb1c84769eba). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","leadings":["","> "],"nodes":[{"content":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamwriter.cs#9e38cb1c84769eba). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","pos":[8,410],"nodes":[{"content":"To view the .NET Framework source code for this type, see the <bpt id=\"p1\">[</bpt>Reference Source<ept id=\"p1\">](http://referencesource.microsoft.com/#mscorlib/system/io/streamwriter.cs#9e38cb1c84769eba)</ept>.","pos":[1,173],"source":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamwriter.cs#9e38cb1c84769eba)."},{"content":"You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id=\"p1\">[</bpt>instructions<ept id=\"p1\">](http://referencesource.microsoft.com/)</ept>.","pos":[174,402],"source":" You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/)."}]}]},{"pos":[421,602],"content":"<xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> is designed for character output in a particular encoding, whereas classes derived from <ph id=\"ph2\">&lt;xref:System.IO.Stream&gt;</ph> are designed for byte input and output.","pos":[0,181],"source":"<xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output."}]},{"pos":[610,1136],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]},{"pos":[1143,1968],"content":"<xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise. This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> defaults to using an instance of <ph id=\"ph2\">&lt;xref:System.Text.UTF8Encoding&gt;</ph> unless specified otherwise.","pos":[0,122],"source":"<xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise."},{"content":"This instance of <ph id=\"ph1\">`UTF8Encoding`</ph> is constructed without a byte order mark (BOM), so its <ph id=\"ph2\">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.","pos":[123,288],"source":" This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array."},{"content":"The default UTF-8 encoding for this constructor throws an exception on invalid bytes.","pos":[289,374]},{"content":"This behavior is different from the behavior provided by the encoding object in the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName&gt;</ph> property.","pos":[375,529],"source":" This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property."},{"content":"To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>.","pos":[530,825],"source":" To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>."}]},{"pos":[1975,2138],"content":"By default, a <xref:System.IO.StreamWriter> is not thread safe. See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.","nodes":[{"content":"By default, a <xref:System.IO.StreamWriter> is not thread safe. See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.","pos":[0,163],"nodes":[{"content":"By default, a <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> is not thread safe.","pos":[0,63],"source":"By default, a <xref:System.IO.StreamWriter> is not thread safe."},{"content":"See <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=fullName&gt;</ph> for a thread-safe wrapper.","pos":[64,163],"source":" See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper."}]}]},{"pos":[2145,2240],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[2036,4293],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using UTF-8 encoding and the default buffer size.","nodes":[{"pos":[0,161],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class for the specified stream by using UTF-8 encoding and the default buffer size.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using UTF-8 encoding and the default buffer size."}],"pos":[9292,9454],"yaml":true},{"content":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>. The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter. The position of the stream is not reset.  \n  \n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,755],"content":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>. The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter. The position of the stream is not reset.","nodes":[{"content":"This constructor creates a <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id=\"ph2\">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.","pos":[0,195],"source":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array."},{"content":"The default UTF-8 encoding for this constructor throws an exception on invalid bytes.","pos":[196,281]},{"content":"This behavior is different from the behavior provided by the encoding object in the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName&gt;</ph> property.","pos":[282,436],"source":" This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property."},{"content":"To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>.","pos":[437,612],"source":" To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property is initialized using the <ph id=\"ph2\">`stream`</ph> parameter.","pos":[613,714],"source":" The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter."},{"content":"The position of the stream is not reset.","pos":[715,755]}]},{"pos":[762,969],"content":"The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id=\"ph2\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph4\">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,207],"source":"The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called."}]},{"pos":[977,1217],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","pos":[12,238]}]},{"pos":[1224,1319],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[9465,10794],"yaml":true,"extradata":"MT"},{"content":"The stream to write to.","nodes":[{"pos":[0,23],"content":"The stream to write to.","nodes":[{"content":"The stream to write to.","pos":[0,23]}]}],"pos":[11313,11337],"yaml":true},{"content":"<code>stream</code> is not writable.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is not writable.","source":"<code>stream</code> is not writable."}],"pos":[11487,11524],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[11626,11657],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the default encoding and buffer size.","nodes":[{"pos":[0,153],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class for the specified file by using the default encoding and buffer size.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the default encoding and buffer size."}],"pos":[13161,13315],"yaml":true},{"content":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share. If the file exists, it is overwritten; otherwise, a new file is created.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,688],"content":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.","nodes":[{"content":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.","pos":[0,688],"nodes":[{"content":"This constructor creates a <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id=\"ph2\">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.","pos":[0,195],"source":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array."},{"content":"The default UTF-8 encoding for this constructor throws an exception on invalid bytes.","pos":[196,281]},{"content":"This behavior is different from the behavior provided by the encoding object in the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName&gt;</ph> property.","pos":[282,436],"source":" This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property."},{"content":"To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>.","pos":[437,688],"source":" To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>."}]}]},{"pos":[695,871],"content":"The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share. If the file exists, it is overwritten; otherwise, a new file is created.","nodes":[{"content":"The <ph id=\"ph1\">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.","pos":[0,103],"source":"The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"content":"If the file exists, it is overwritten; otherwise, a new file is created.","pos":[104,176]}]},{"pos":[878,1010],"content":"The <ph id=\"ph1\">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.","source":"The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams."},{"pos":[1018,1258],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","pos":[12,238]}]},{"pos":[1265,1360],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[13326,14698],"yaml":true,"extradata":"MT"},{"content":"The complete file path to write to. <code>path</code> can be a file name.","nodes":[{"pos":[0,73],"content":"The complete file path to write to. <code>path</code> can be a file name.","nodes":[{"content":"The complete file path to write to.","pos":[0,35]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be a file name.","pos":[36,73],"source":"<code>path</code> can be a file name."}]}],"pos":[15200,15274],"yaml":true},{"content":"Access is denied.","nodes":[{"pos":[0,17],"content":"Access is denied.","nodes":[{"content":"Access is denied.","pos":[0,17]}]}],"pos":[15444,15462],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>path</code> contains the name of a system device (com1, com2, and so on).","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,139],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains the name of a system device (com1, com2, and so on).","source":"<code>path</code> contains the name of a system device (com1, com2, and so on)."}],"pos":[15556,15704],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[15806,15835],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[15953,16026],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","nodes":[{"pos":[0,206],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","pos":[0,206],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","pos":[81,206]}]}]}],"pos":[16132,16339],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax."}],"pos":[16427,16540],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[16652,16702],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and the default buffer size.","nodes":[{"pos":[0,169],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class for the specified stream by using the specified encoding and the default buffer size.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and the default buffer size."}],"pos":[17978,18148],"yaml":true},{"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \n  \n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,316],"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.","nodes":[{"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.","pos":[0,316],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter, and the <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property using the stream parameter.","pos":[0,202],"source":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter."},{"content":"The position of the stream is not reset.","pos":[203,243]},{"content":"For additional information, see <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.","pos":[244,316],"source":" For additional information, see <xref:System.IO.TextWriter.Encoding%2A>."}]}]},{"pos":[323,530],"content":"The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id=\"ph2\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph4\">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,207],"source":"The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called."}]},{"pos":[538,779],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[786,881],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[18159,19050],"yaml":true,"extradata":"MT"},{"content":"The stream to write to.","nodes":[{"pos":[0,23],"content":"The stream to write to.","nodes":[{"content":"The stream to write to.","pos":[0,23]}]}],"pos":[19595,19619],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[19690,19721],"yaml":true},{"content":"<code>stream</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>stream</code> or <code>encoding</code> is `null`."}],"pos":[19879,19935],"yaml":true},{"content":"<code>stream</code> is not writable.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is not writable.","source":"<code>stream</code> is not writable."}],"pos":[20029,20066],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the default encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.","nodes":[{"pos":[0,283],"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the default encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class for the specified file by using the default encoding and buffer size.","pos":[0,153],"source":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the default encoding and buffer size."},{"content":"If the file exists, it can be either overwritten or appended to.","pos":[154,218]},{"content":"If the file does not exist, this constructor creates a new file.","pos":[219,283]}]}],"pos":[21642,21926],"yaml":true},{"content":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,688],"content":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.","nodes":[{"content":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.","pos":[0,688],"nodes":[{"content":"This constructor creates a <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id=\"ph2\">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.","pos":[0,195],"source":"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array."},{"content":"The default UTF-8 encoding for this constructor throws an exception on invalid bytes.","pos":[196,281]},{"content":"This behavior is different from the behavior provided by the encoding object in the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName&gt;</ph> property.","pos":[282,436],"source":" This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property."},{"content":"To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>.","pos":[437,688],"source":" To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>."}]}]},{"pos":[695,798],"content":"The <ph id=\"ph1\">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.","source":"The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"pos":[805,937],"content":"The <ph id=\"ph1\">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.","source":"The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams."},{"pos":[945,1186],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[1193,1288],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[21937,23237],"yaml":true,"extradata":"MT"},{"content":"The complete file path to write to.","nodes":[{"pos":[0,35],"content":"The complete file path to write to.","nodes":[{"content":"The complete file path to write to.","pos":[0,35]}]}],"pos":[23752,23788],"yaml":true},{"content":"`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","nodes":[{"pos":[0,173],"content":"`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to append data to the file; <ph id=\"ph2\">`false`</ph> to overwrite the file.","pos":[0,65],"source":"`true` to append data to the file; `false` to overwrite the file."},{"content":"If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","pos":[66,173]}]}],"pos":[23851,24027],"yaml":true},{"content":"Access is denied.","nodes":[{"pos":[0,17],"content":"Access is denied.","nodes":[{"content":"Access is denied.","pos":[0,17]}]}],"pos":[24197,24215],"yaml":true},{"content":"<code>path</code> is empty.  \n  \n -or-  \n  \n <code>path</code> contains the name of a system device (com1, com2, and so on).","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is empty.","source":"<code>path</code> is empty."},{"pos":[34,38],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[45,124],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains the name of a system device (com1, com2, and so on).","source":"<code>path</code> contains the name of a system device (com1, com2, and so on)."}],"pos":[24309,24440],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[24542,24571],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[24689,24762],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax."}],"pos":[24850,24963],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","nodes":[{"pos":[0,206],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","pos":[0,206],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","pos":[81,206]}]}]}],"pos":[25069,25276],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[25388,25438],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and buffer size.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class for the specified stream by using the specified encoding and buffer size.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and buffer size."}],"pos":[26774,26932],"yaml":true},{"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \n  \n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,320],"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the <ph id=\"ph2\">`encoding`</ph> parameter, and the <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property using the <ph id=\"ph4\">`stream`</ph> parameter.","pos":[0,206],"source":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter."},{"content":"The position of the stream is not reset.","pos":[207,247]},{"content":"For additional information, see <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.","pos":[248,320],"source":" For additional information, see <xref:System.IO.TextWriter.Encoding%2A>."}]},{"pos":[327,534],"content":"The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id=\"ph2\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph4\">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","pos":[0,207],"source":"The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called."}]},{"pos":[542,783],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[790,885],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[26943,27838],"yaml":true,"extradata":"MT"},{"content":"The stream to write to.","nodes":[{"pos":[0,23],"content":"The stream to write to.","nodes":[{"content":"The stream to write to.","pos":[0,23]}]}],"pos":[28399,28423],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[28494,28525],"yaml":true},{"content":"The buffer size, in bytes.","nodes":[{"pos":[0,26],"content":"The buffer size, in bytes.","nodes":[{"content":"The buffer size, in bytes.","pos":[0,26]}]}],"pos":[28590,28617],"yaml":true},{"content":"<code>stream</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>stream</code> or <code>encoding</code> is `null`."}],"pos":[28775,28831],"yaml":true},{"content":"<code>bufferSize</code> is negative.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative.","source":"<code>bufferSize</code> is negative."}],"pos":[28945,28982],"yaml":true},{"content":"<code>stream</code> is not writable.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is not writable.","source":"<code>stream</code> is not writable."}],"pos":[29076,29113],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the specified encoding and default buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.","nodes":[{"pos":[0,293],"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the specified encoding and default buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class for the specified file by using the specified encoding and default buffer size.","pos":[0,163],"source":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the specified encoding and default buffer size."},{"content":"If the file exists, it can be either overwritten or appended to.","pos":[164,228]},{"content":"If the file does not exist, this constructor creates a new file.","pos":[229,293]}]}],"pos":[30782,31076],"yaml":true},{"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \n  \n `path` can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n `path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,186],"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.","nodes":[{"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.","pos":[0,186],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter.","pos":[0,113],"source":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter."},{"content":"For additional information, see <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.","pos":[114,186],"source":" For additional information, see <xref:System.IO.TextWriter.Encoding%2A>."}]}]},{"pos":[193,282],"content":"<ph id=\"ph1\">`path`</ph> can be a file name, including a file on a Universal Naming Convention (UNC) share.","source":"`path` can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"pos":[289,405],"content":"<ph id=\"ph1\">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access via streams.","source":"`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams."},{"pos":[413,654],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[661,756],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[31087,31855],"yaml":true,"extradata":"MT"},{"content":"The complete file path to write to.","nodes":[{"pos":[0,35],"content":"The complete file path to write to.","nodes":[{"content":"The complete file path to write to.","pos":[0,35]}]}],"pos":[32396,32432],"yaml":true},{"content":"`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","nodes":[{"pos":[0,173],"content":"`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to append data to the file; <ph id=\"ph2\">`false`</ph> to overwrite the file.","pos":[0,65],"source":"`true` to append data to the file; `false` to overwrite the file."},{"content":"If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","pos":[66,173]}]}],"pos":[32495,32671],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[32742,32773],"yaml":true},{"content":"Access is denied.","nodes":[{"pos":[0,17],"content":"Access is denied.","nodes":[{"content":"Access is denied.","pos":[0,17]}]}],"pos":[32943,32961],"yaml":true},{"content":"<code>path</code> is empty.  \n  \n -or-  \n  \n <code>path</code> contains the name of a system device (com1, com2, and so on).","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is empty.","source":"<code>path</code> is empty."},{"pos":[34,38],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[45,124],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains the name of a system device (com1, com2, and so on).","source":"<code>path</code> contains the name of a system device (com1, com2, and so on)."}],"pos":[33055,33186],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[33288,33317],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[33435,33508],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax."}],"pos":[33596,33709],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","nodes":[{"pos":[0,206],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","pos":[0,206],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","pos":[81,206]}]}]}],"pos":[33815,34022],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[34134,34184],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.","nodes":[{"pos":[0,196],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.","source":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open."}],"pos":[35592,35789],"yaml":true},{"content":"Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \n  \n This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter. The position of the stream is not reset. For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","nodes":[{"pos":[0,259],"content":"Unless you set the <ph id=\"ph1\">`leaveOpen`</ph> parameter to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id=\"ph4\">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id=\"ph5\">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id=\"ph6\">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName&gt;</ph> is called.","source":"Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called."},{"pos":[266,617],"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter. The position of the stream is not reset. For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property by using the <ph id=\"ph2\">`encoding`</ph> parameter, and initializes the <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property by using the <ph id=\"ph4\">`stream`</ph> parameter.","pos":[0,224],"source":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter."},{"content":"The position of the stream is not reset.","pos":[225,265]},{"content":"For additional information, see the <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph> property.","pos":[266,351],"source":" For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property."}]},{"pos":[625,866],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]}],"pos":[35800,36674],"yaml":true,"extradata":"MT"},{"content":"The stream to write to.","nodes":[{"pos":[0,23],"content":"The stream to write to.","nodes":[{"content":"The stream to write to.","pos":[0,23]}]}],"pos":[37251,37275],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[37346,37377],"yaml":true},{"content":"The buffer size, in bytes.","nodes":[{"pos":[0,26],"content":"The buffer size, in bytes.","nodes":[{"content":"The buffer size, in bytes.","pos":[0,26]}]}],"pos":[37442,37469],"yaml":true},{"content":"`true` to leave the stream open after the <xref href=\"System.IO.StreamWriter\"></xref> object is disposed; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> to leave the stream open after the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> object is disposed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to leave the stream open after the <xref href=\"System.IO.StreamWriter\"></xref> object is disposed; otherwise, `false`."}],"pos":[37535,37663],"yaml":true},{"content":"<code>stream</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>stream</code> or <code>encoding</code> is `null`."}],"pos":[37821,37877],"yaml":true},{"content":"<code>bufferSize</code> is negative.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative.","source":"<code>bufferSize</code> is negative."}],"pos":[37991,38028],"yaml":true},{"content":"<code>stream</code> is not writable.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is not writable.","source":"<code>stream</code> is not writable."}],"pos":[38122,38159],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file on the specified path, using the specified encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.","nodes":[{"pos":[0,305],"content":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file on the specified path, using the specified encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class for the specified file on the specified path, using the specified encoding and buffer size.","pos":[0,175],"source":"Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file on the specified path, using the specified encoding and buffer size."},{"content":"If the file exists, it can be either overwritten or appended to.","pos":[176,240]},{"content":"If the file does not exist, this constructor creates a new file.","pos":[241,305]}]}],"pos":[39888,40194],"yaml":true},{"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \n  \n `path` can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n `path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,186],"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.","nodes":[{"content":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.","pos":[0,186],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter.","pos":[0,113],"source":"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter."},{"content":"For additional information, see <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.","pos":[114,186],"source":" For additional information, see <xref:System.IO.TextWriter.Encoding%2A>."}]}]},{"pos":[193,282],"content":"<ph id=\"ph1\">`path`</ph> can be a file name, including a file on a Universal Naming Convention (UNC) share.","source":"`path` can be a file name, including a file on a Universal Naming Convention (UNC) share."},{"pos":[289,405],"content":"<ph id=\"ph1\">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access via streams.","source":"`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams."},{"pos":[413,654],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.","pos":[12,239]}]},{"pos":[661,756],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[40205,40973],"yaml":true,"extradata":"MT"},{"content":"The complete file path to write to.","nodes":[{"pos":[0,35],"content":"The complete file path to write to.","nodes":[{"content":"The complete file path to write to.","pos":[0,35]}]}],"pos":[41530,41566],"yaml":true},{"content":"`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","nodes":[{"pos":[0,173],"content":"`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to append data to the file; <ph id=\"ph2\">`false`</ph> to overwrite the file.","pos":[0,65],"source":"`true` to append data to the file; `false` to overwrite the file."},{"content":"If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.","pos":[66,173]}]}],"pos":[41629,41805],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[41876,41907],"yaml":true},{"content":"The buffer size, in bytes.","nodes":[{"pos":[0,26],"content":"The buffer size, in bytes.","nodes":[{"content":"The buffer size, in bytes.","pos":[0,26]}]}],"pos":[41972,41999],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>path</code> contains the name of a system device (com1, com2, and so on).","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,139],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains the name of a system device (com1, com2, and so on).","source":"<code>path</code> contains the name of a system device (com1, com2, and so on)."}],"pos":[42149,42297],"yaml":true},{"content":"<code>path</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>path</code> or <code>encoding</code> is `null`."}],"pos":[42399,42453],"yaml":true},{"content":"<code>bufferSize</code> is negative.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative.","source":"<code>bufferSize</code> is negative."}],"pos":[42567,42604],"yaml":true},{"content":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","source":"<code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax."}],"pos":[42692,42805],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[42917,42967],"yaml":true},{"content":"Access is denied.","nodes":[{"pos":[0,17],"content":"Access is denied.","nodes":[{"content":"Access is denied.","pos":[0,17]}]}],"pos":[43081,43099],"yaml":true},{"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"pos":[0,72],"content":"The specified path is invalid (for example, it is on an unmapped drive).","nodes":[{"content":"The specified path is invalid (for example, it is on an unmapped drive).","pos":[0,72]}]}],"pos":[43217,43290],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","nodes":[{"pos":[0,206],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","pos":[0,206],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.","pos":[81,206]}]}]}],"pos":[43396,43603],"yaml":true},{"content":"Gets or sets a value indicating whether the <xref href=\"System.IO.StreamWriter\"></xref> will flush its buffer to the underlying stream after every call to <xref href=\"System.IO.StreamWriter.Write(System.Char)\"></xref>.","nodes":[{"pos":[0,218],"content":"Gets or sets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> will flush its buffer to the underlying stream after every call to <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter.Write(System.Char)\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a value indicating whether the <xref href=\"System.IO.StreamWriter\"></xref> will flush its buffer to the underlying stream after every call to <xref href=\"System.IO.StreamWriter.Write(System.Char)\"></xref>."}],"pos":[44723,44942],"yaml":true},{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \n  \n When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in. You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.  \n  \n For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback. `Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=fullName>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,631],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.","pos":[0,166],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.","pos":[167,360],"source":" Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[361,485]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[486,631]}]},{"pos":[638,981],"content":"When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in. You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.","nodes":[{"content":"When <ph id=\"ph1\">`AutoFlush`</ph> is set to <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">`StreamWriter`</ph> will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in.","pos":[0,169],"source":"When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in."},{"content":"You can get better performance by setting <ph id=\"ph1\">`AutoFlush`</ph> to <ph id=\"ph2\">`false`</ph>, assuming that you always call <ph id=\"ph3\">`Close`</ph> (or at least <ph id=\"ph4\">`Flush`</ph>) when you're done writing with a <ph id=\"ph5\">`StreamWriter`</ph>.","pos":[170,343],"source":" You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`."}]},{"pos":[988,1340],"content":"For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback. `Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=fullName>.","nodes":[{"content":"For example, set <ph id=\"ph1\">`AutoFlush`</ph> to <ph id=\"ph2\">`true`</ph> when you are writing to a device where the user expects immediate feedback.","pos":[0,114],"source":"For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback."},{"content":"<ph id=\"ph1\">`Console.Out`</ph> is one of these cases: The <ph id=\"ph2\">`StreamWriter`</ph> used internally for writing to <ph id=\"ph3\">`Console`</ph> flushes all its internal state except the encoder state after every call to <ph id=\"ph4\">&lt;xref:System.IO.StreamWriter.Write%2A?displayProperty=fullName&gt;</ph>.","pos":[115,352],"source":"`Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=fullName>."}]},{"pos":[1347,1442],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[44953,46404],"yaml":true,"extradata":"MT"},{"content":"`true` to force <xref href=\"System.IO.StreamWriter\"></xref> to flush its buffer; otherwise, `false`.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to force <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> to flush its buffer; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to force <xref href=\"System.IO.StreamWriter\"></xref> to flush its buffer; otherwise, `false`."}],"pos":[47017,47120],"yaml":true},{"content":"Gets the underlying stream that interfaces with a backing store.","nodes":[{"pos":[0,64],"content":"Gets the underlying stream that interfaces with a backing store.","nodes":[{"content":"Gets the underlying stream that interfaces with a backing store.","pos":[0,64]}]}],"pos":[48636,48701],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[48712,48808],"yaml":true,"extradata":"MT"},{"content":"The stream this `StreamWriter` is writing to.","nodes":[{"pos":[0,45],"content":"The stream this <ph id=\"ph1\">`StreamWriter`</ph> is writing to.","source":"The stream this `StreamWriter` is writing to."}],"pos":[48943,48989],"yaml":true},{"content":"Closes the current `StreamWriter` object and the underlying stream.","nodes":[{"pos":[0,67],"content":"Closes the current <ph id=\"ph1\">`StreamWriter`</ph> object and the underlying stream.","source":"Closes the current `StreamWriter` object and the underlying stream."}],"pos":[50466,50534],"yaml":true},{"content":"This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=fullName>.  \n  \n This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value.  \n  \n You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream. Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions. If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"pos":[0,80],"content":"This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph>.","pos":[0,80],"source":"This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=fullName>."}]},{"pos":[87,230],"content":"This implementation of <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> calls the <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.Dispose%2A&gt;</ph> method passing a <ph id=\"ph3\">`true`</ph> value.","source":"This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value."},{"pos":[237,616],"content":"You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream. Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions. If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.","nodes":[{"content":"You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream. Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions. If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.","pos":[0,379],"nodes":[{"content":"You must call <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> to ensure that all data is correctly written out to the underlying stream.","pos":[0,127],"source":"You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream."},{"content":"Following a call to <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>, any operations on the <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter&gt;</ph> might raise exceptions.","pos":[128,263],"source":" Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions."},{"content":"If there is insufficient space on the disk, calling <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> will raise an exception.","pos":[264,379],"source":" If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception."}]}]},{"pos":[623,1227],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.","pos":[0,166],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.","pos":[167,333],"source":" Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[334,458]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[459,604]}]}],"pos":[50545,51781],"yaml":true,"extradata":"MT"},{"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","nodes":[{"pos":[0,82],"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","nodes":[{"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","pos":[0,82]}]}],"pos":[52507,52590],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.IO.StreamWriter\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,135],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.IO.StreamWriter\"></xref> and optionally releases the managed resources."}],"pos":[53754,53890],"yaml":true},{"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references. This method invokes the `Dispose` method of each referenced object.","nodes":[{"pos":[0,224],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references. This method invokes the `Dispose` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter&gt;</ph> references.","pos":[0,156],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose`</ph> method of each referenced object.","pos":[157,224],"source":" This method invokes the `Dispose` method of each referenced object."}]}],"pos":[53901,54126],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[54281,54384],"yaml":true},{"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","nodes":[{"pos":[0,82],"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","nodes":[{"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","pos":[0,82]}]}],"pos":[54560,54643],"yaml":true},{"content":"Gets the <xref href=\"System.Text.Encoding\"></xref> in which the output is written.","nodes":[{"pos":[0,82],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> in which the output is written.","source":"Gets the <xref href=\"System.Text.Encoding\"></xref> in which the output is written."}],"pos":[56084,56167],"yaml":true},{"content":"This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>. This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,263],"content":"This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>. This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.","nodes":[{"content":"This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>. This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.","pos":[0,263],"nodes":[{"content":"This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph>.","pos":[0,147],"source":"This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>."},{"content":"This allows the XML code to consume an arbitrary <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> and generate the correct XML header.","pos":[148,263],"source":" This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header."}]}]},{"pos":[270,365],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[56178,56548],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Text.Encoding\"></xref> specified in the constructor for the current instance, or <xref href=\"System.Text.UTF8Encoding\"></xref> if an encoding was not specified.","nodes":[{"pos":[0,183],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> specified in the constructor for the current instance, or <ph id=\"ph2\">&lt;xref href=\"System.Text.UTF8Encoding\"&gt;&lt;/xref&gt;</ph> if an encoding was not specified.","source":"The <xref href=\"System.Text.Encoding\"></xref> specified in the constructor for the current instance, or <xref href=\"System.Text.UTF8Encoding\"></xref> if an encoding was not specified."}],"pos":[57211,57395],"yaml":true},{"content":"Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.","nodes":[{"pos":[0,110],"content":"Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.","nodes":[{"content":"Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.","pos":[0,110]}]}],"pos":[58884,58995],"yaml":true},{"content":"This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=fullName>.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,84],"content":"This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Flush%2A?displayProperty=fullName&gt;</ph>.","pos":[0,84],"source":"This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=fullName>."}]},{"pos":[91,691],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">`Flush`</ph> or <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.","pos":[0,135],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.","pos":[136,329],"source":" Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[330,454]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[455,600]}]},{"pos":[698,793],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[59006,59806],"yaml":true,"extradata":"MT"},{"content":"The current writer is closed.","nodes":[{"pos":[0,29],"content":"The current writer is closed.","nodes":[{"content":"The current writer is closed.","pos":[0,29]}]}],"pos":[60041,60071],"yaml":true},{"content":"An I/O error has occurred.","nodes":[{"pos":[0,26],"content":"An I/O error has occurred.","nodes":[{"content":"An I/O error has occurred.","pos":[0,26]}]}],"pos":[60159,60186],"yaml":true},{"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","nodes":[{"pos":[0,82],"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","nodes":[{"content":"The current encoding does not support displaying half of a Unicode surrogate pair.","pos":[0,82]}]}],"pos":[60304,60387],"yaml":true},{"content":"Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.","nodes":[{"pos":[0,118],"content":"Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.","nodes":[{"content":"Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.","pos":[0,118]}]}],"pos":[61844,61963],"yaml":true},{"content":"A task that represents the asynchronous flush operation.","nodes":[{"pos":[0,56],"content":"A task that represents the asynchronous flush operation.","nodes":[{"content":"A task that represents the asynchronous flush operation.","pos":[0,56]}]}],"pos":[62202,62259],"yaml":true},{"content":"The stream has been disposed.","nodes":[{"pos":[0,29],"content":"The stream has been disposed.","nodes":[{"content":"The stream has been disposed.","pos":[0,29]}]}],"pos":[62426,62456],"yaml":true},{"content":"Provides a `StreamWriter` with no backing store that can be written to, but not read from.","nodes":[{"pos":[0,90],"content":"Provides a <ph id=\"ph1\">`StreamWriter`</ph> with no backing store that can be written to, but not read from.","source":"Provides a `StreamWriter` with no backing store that can be written to, but not read from."}],"pos":[63949,64040],"yaml":true},{"content":"Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources.  \n  \n When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,103],"content":"Use <ph id=\"ph1\">`Null`</ph> to redirect output to a <ph id=\"ph2\">`StreamWriter`</ph> that will not consume any operating system resources.","source":"Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources."},{"pos":[110,249],"content":"When the <ph id=\"ph1\">`StreamWriter.Write`</ph> methods are invoked on <ph id=\"ph2\">`Null`</ph>, the call simply returns, and no data is actually written to any backing store.","source":"When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store."},{"pos":[256,351],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[64051,64409],"yaml":true,"extradata":"MT"},{"content":"Writes a character to the stream.","nodes":[{"pos":[0,33],"content":"Writes a character to the stream.","nodes":[{"content":"Writes a character to the stream.","pos":[0,33]}]}],"pos":[66523,66557],"yaml":true},{"content":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \n  \n The specified character is written to the underlying stream unless the end of the stream is reached prematurely. If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,84],"content":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=fullName&gt;</ph>.","pos":[0,84],"source":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>."}]},{"pos":[91,325],"content":"The specified character is written to the underlying stream unless the end of the stream is reached prematurely. If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.","nodes":[{"content":"The specified character is written to the underlying stream unless the end of the stream is reached prematurely.","pos":[0,112]},{"content":"If <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically.","pos":[113,234],"source":" If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically."}]},{"pos":[332,427],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[66568,67002],"yaml":true,"extradata":"MT"},{"content":"The character to write to the stream.","nodes":[{"pos":[0,37],"content":"The character to write to the stream.","nodes":[{"content":"The character to write to the stream.","pos":[0,37]}]}],"pos":[67141,67179],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[67323,67344],"yaml":true},{"content":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed.","nodes":[{"pos":[0,158],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter.AutoFlush\"&gt;&lt;/xref&gt;</ph> is true or the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> buffer is full, and current writer is closed.","source":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed."}],"pos":[67450,67609],"yaml":true},{"content":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream.","nodes":[{"pos":[0,295],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter.AutoFlush\"&gt;&lt;/xref&gt;</ph> is true or the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id=\"ph3\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> is at the end the stream.","source":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream."}],"pos":[67711,68007],"yaml":true},{"content":"Writes a character array to the stream.","nodes":[{"pos":[0,39],"content":"Writes a character array to the stream.","nodes":[{"content":"Writes a character array to the stream.","pos":[0,39]}]}],"pos":[69497,69537],"yaml":true},{"content":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \n  \n The specified characters are written to the underlying stream unless the end of the stream is reached prematurely. If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.  \n  \n This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,84],"content":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=fullName&gt;</ph>.","pos":[0,84],"source":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>."}]},{"pos":[91,327],"content":"The specified characters are written to the underlying stream unless the end of the stream is reached prematurely. If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.","nodes":[{"content":"The specified characters are written to the underlying stream unless the end of the stream is reached prematurely.","pos":[0,114]},{"content":"If <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically.","pos":[115,236],"source":" If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically."}]},{"pos":[334,455],"content":"This method might provide faster performance than <ph id=\"ph1\">`Write`</ph> (<ph id=\"ph2\">`char[],``int,``int`</ph>) because it has fewer arguments to check.","source":"This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check."},{"pos":[462,557],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[69548,70114],"yaml":true,"extradata":"MT"},{"content":"A character array containing the data to write. If <code>buffer</code> is `null`, nothing is written.","nodes":[{"pos":[0,101],"content":"A character array containing the data to write. If <code>buffer</code> is `null`, nothing is written.","nodes":[{"content":"A character array containing the data to write.","pos":[0,47]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, nothing is written.","pos":[48,101],"source":" If <code>buffer</code> is `null`, nothing is written."}]}],"pos":[70259,70361],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[70505,70526],"yaml":true},{"content":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed.","nodes":[{"pos":[0,158],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter.AutoFlush\"&gt;&lt;/xref&gt;</ph> is true or the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> buffer is full, and current writer is closed.","source":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed."}],"pos":[70632,70791],"yaml":true},{"content":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream.","nodes":[{"pos":[0,295],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter.AutoFlush\"&gt;&lt;/xref&gt;</ph> is true or the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id=\"ph3\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> is at the end the stream.","source":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream."}],"pos":[70893,71189],"yaml":true},{"content":"Writes a string to the stream.","nodes":[{"pos":[0,30],"content":"Writes a string to the stream.","nodes":[{"content":"Writes a string to the stream.","pos":[0,30]}]}],"pos":[72679,72710],"yaml":true},{"content":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \n  \n The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.  \n  \n <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`. If `value` is `null`, no entries are written.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,84],"content":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=fullName&gt;</ph>.","pos":[0,84],"source":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>."}]},{"pos":[91,214],"content":"The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.","nodes":[{"content":"The specified <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> is written to the underlying stream unless the end of the stream is reached prematurely.","pos":[0,123],"source":"The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely."}]},{"pos":[221,387],"content":"<xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`. If `value` is `null`, no entries are written.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically if <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>.","pos":[0,120],"source":"<xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`."},{"content":"If <ph id=\"ph1\">`value`</ph> is <ph id=\"ph2\">`null`</ph>, no entries are written.","pos":[121,166],"source":" If `value` is `null`, no entries are written."}]},{"pos":[394,489],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[72721,73219],"yaml":true,"extradata":"MT"},{"content":"The string to write to the stream. If <code>value</code> is null, nothing is written.","nodes":[{"pos":[0,85],"content":"The string to write to the stream. If <code>value</code> is null, nothing is written.","nodes":[{"content":"The string to write to the stream.","pos":[0,34]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null, nothing is written.","pos":[35,85],"source":" If <code>value</code> is null, nothing is written."}]}],"pos":[73362,73448],"yaml":true},{"content":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed.","nodes":[{"pos":[0,158],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter.AutoFlush\"&gt;&lt;/xref&gt;</ph> is true or the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> buffer is full, and current writer is closed.","source":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed."}],"pos":[73610,73769],"yaml":true},{"content":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream.","nodes":[{"pos":[0,295],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter.AutoFlush\"&gt;&lt;/xref&gt;</ph> is true or the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id=\"ph3\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> is at the end the stream.","source":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream."}],"pos":[73871,74167],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[74255,74276],"yaml":true},{"content":"Writes a subarray of characters to the stream.","nodes":[{"pos":[0,46],"content":"Writes a subarray of characters to the stream.","nodes":[{"content":"Writes a subarray of characters to the stream.","pos":[0,46]}]}],"pos":[75886,75933],"yaml":true},{"content":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \n  \n The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1). All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely. <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,84],"content":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.","nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=fullName&gt;</ph>.","pos":[0,84],"source":"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>."}]},{"pos":[91,434],"content":"The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1). All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely. <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.","nodes":[{"content":"The characters are read from <ph id=\"ph1\">`buffer`</ph> beginning at <ph id=\"ph2\">`index`</ph> and continuing through <ph id=\"ph3\">`index`</ph> + (<ph id=\"ph4\">`count`</ph> - 1).","pos":[0,106],"source":"The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1)."},{"content":"All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely.","pos":[107,222]},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically if <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>.","pos":[223,343],"source":" <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`."}]},{"pos":[441,536],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[75944,76487],"yaml":true,"extradata":"MT"},{"content":"A character array that contains the data to write.","nodes":[{"pos":[0,50],"content":"A character array that contains the data to write.","nodes":[{"content":"A character array that contains the data to write.","pos":[0,50]}]}],"pos":[77265,77316],"yaml":true},{"content":"The character position in the buffer at which to start reading data.","nodes":[{"pos":[0,68],"content":"The character position in the buffer at which to start reading data.","nodes":[{"content":"The character position in the buffer at which to start reading data.","pos":[0,68]}]}],"pos":[77376,77445],"yaml":true},{"content":"The maximum number of characters to write.","nodes":[{"pos":[0,42],"content":"The maximum number of characters to write.","nodes":[{"content":"The maximum number of characters to write.","pos":[0,42]}]}],"pos":[77505,77548],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[77706,77737],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."}],"pos":[77831,77907],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[78021,78075],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[78163,78184],"yaml":true},{"content":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed.","nodes":[{"pos":[0,158],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter.AutoFlush\"&gt;&lt;/xref&gt;</ph> is true or the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> buffer is full, and current writer is closed.","source":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed."}],"pos":[78290,78449],"yaml":true},{"content":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream.","nodes":[{"pos":[0,295],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter.AutoFlush\"&gt;&lt;/xref&gt;</ph> is true or the <ph id=\"ph2\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id=\"ph3\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> is at the end the stream.","source":"<xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream."}],"pos":[78551,78847],"yaml":true},{"content":"Writes a character to the stream asynchronously.","nodes":[{"pos":[0,48],"content":"Writes a character to the stream asynchronously.","nodes":[{"content":"Writes a character to the stream asynchronously.","pos":[0,48]}]}],"pos":[80355,80404],"yaml":true},{"content":"The character to write to the stream.","nodes":[{"pos":[0,37],"content":"The character to write to the stream.","nodes":[{"content":"The character to write to the stream.","pos":[0,37]}]}],"pos":[81121,81159],"yaml":true},{"content":"A task that represents the asynchronous write operation.","nodes":[{"pos":[0,56],"content":"A task that represents the asynchronous write operation.","nodes":[{"content":"A task that represents the asynchronous write operation.","pos":[0,56]}]}],"pos":[81230,81287],"yaml":true},{"content":"The stream writer is disposed.","nodes":[{"pos":[0,30],"content":"The stream writer is disposed.","nodes":[{"content":"The stream writer is disposed.","pos":[0,30]}]}],"pos":[81454,81485],"yaml":true},{"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"pos":[0,68],"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"content":"The stream writer is currently in use by a previous write operation.","pos":[0,68]}]}],"pos":[81595,81664],"yaml":true},{"content":"Writes a string to the stream asynchronously.","nodes":[{"pos":[0,45],"content":"Writes a string to the stream asynchronously.","nodes":[{"content":"Writes a string to the stream asynchronously.","pos":[0,45]}]}],"pos":[83259,83305],"yaml":true},{"content":"The string to write to the stream. If <code>value</code> is `null`, nothing is written.","nodes":[{"pos":[0,87],"content":"The string to write to the stream. If <code>value</code> is `null`, nothing is written.","nodes":[{"content":"The string to write to the stream.","pos":[0,34]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, nothing is written.","pos":[35,87],"source":" If <code>value</code> is `null`, nothing is written."}]}],"pos":[83999,84087],"yaml":true},{"content":"A task that represents the asynchronous write operation.","nodes":[{"pos":[0,56],"content":"A task that represents the asynchronous write operation.","nodes":[{"content":"A task that represents the asynchronous write operation.","pos":[0,56]}]}],"pos":[84158,84215],"yaml":true},{"content":"The stream writer is disposed.","nodes":[{"pos":[0,30],"content":"The stream writer is disposed.","nodes":[{"content":"The stream writer is disposed.","pos":[0,30]}]}],"pos":[84382,84413],"yaml":true},{"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"pos":[0,68],"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"content":"The stream writer is currently in use by a previous write operation.","pos":[0,68]}]}],"pos":[84523,84592],"yaml":true},{"content":"Writes a subarray of characters to the stream asynchronously.","nodes":[{"pos":[0,61],"content":"Writes a subarray of characters to the stream asynchronously.","nodes":[{"content":"Writes a subarray of characters to the stream asynchronously.","pos":[0,61]}]}],"pos":[86307,86369],"yaml":true},{"content":"A character array that contains the data to write.","nodes":[{"pos":[0,50],"content":"A character array that contains the data to write.","nodes":[{"content":"A character array that contains the data to write.","pos":[0,50]}]}],"pos":[87132,87183],"yaml":true},{"content":"The character position in the buffer at which to begin reading data.","nodes":[{"pos":[0,68],"content":"The character position in the buffer at which to begin reading data.","nodes":[{"content":"The character position in the buffer at which to begin reading data.","pos":[0,68]}]}],"pos":[87243,87312],"yaml":true},{"content":"The maximum number of characters to write.","nodes":[{"pos":[0,42],"content":"The maximum number of characters to write.","nodes":[{"content":"The maximum number of characters to write.","pos":[0,42]}]}],"pos":[87372,87415],"yaml":true},{"content":"A task that represents the asynchronous write operation.","nodes":[{"pos":[0,56],"content":"A task that represents the asynchronous write operation.","nodes":[{"content":"A task that represents the asynchronous write operation.","pos":[0,56]}]}],"pos":[87486,87543],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[87706,87737],"yaml":true},{"content":"The <code>index</code> plus <code>count</code> is greater than the buffer length.","nodes":[{"pos":[0,81],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> plus <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is greater than the buffer length.","source":"The <code>index</code> plus <code>count</code> is greater than the buffer length."}],"pos":[87831,87913],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[88027,88081],"yaml":true},{"content":"The stream writer is disposed.","nodes":[{"pos":[0,30],"content":"The stream writer is disposed.","nodes":[{"content":"The stream writer is disposed.","pos":[0,30]}]}],"pos":[88187,88218],"yaml":true},{"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"pos":[0,68],"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"content":"The stream writer is currently in use by a previous write operation.","pos":[0,68]}]}],"pos":[88328,88397],"yaml":true},{"content":"Writes a line terminator asynchronously to the stream.","nodes":[{"pos":[0,54],"content":"Writes a line terminator asynchronously to the stream.","nodes":[{"content":"Writes a line terminator asynchronously to the stream.","pos":[0,54]}]}],"pos":[89953,90008],"yaml":true},{"content":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,111],"content":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.","nodes":[{"content":"The line terminator is defined by the <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,111],"source":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property."}]}],"pos":[90019,90131],"yaml":true,"extradata":"MT"},{"content":"A task that represents the asynchronous write operation.","nodes":[{"pos":[0,56],"content":"A task that represents the asynchronous write operation.","nodes":[{"content":"A task that represents the asynchronous write operation.","pos":[0,56]}]}],"pos":[90374,90431],"yaml":true},{"content":"The stream writer is disposed.","nodes":[{"pos":[0,30],"content":"The stream writer is disposed.","nodes":[{"content":"The stream writer is disposed.","pos":[0,30]}]}],"pos":[90602,90633],"yaml":true},{"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"pos":[0,68],"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"content":"The stream writer is currently in use by a previous write operation.","pos":[0,68]}]}],"pos":[90743,90812],"yaml":true},{"content":"Writes a character followed by a line terminator asynchronously to the stream.","nodes":[{"pos":[0,78],"content":"Writes a character followed by a line terminator asynchronously to the stream.","nodes":[{"content":"Writes a character followed by a line terminator asynchronously to the stream.","pos":[0,78]}]}],"pos":[92419,92498],"yaml":true},{"content":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,111],"content":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.","nodes":[{"content":"The line terminator is defined by the <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,111],"source":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property."}]}],"pos":[92509,92621],"yaml":true,"extradata":"MT"},{"content":"The character to write to the stream.","nodes":[{"pos":[0,37],"content":"The character to write to the stream.","nodes":[{"content":"The character to write to the stream.","pos":[0,37]}]}],"pos":[93421,93459],"yaml":true},{"content":"A task that represents the asynchronous write operation.","nodes":[{"pos":[0,56],"content":"A task that represents the asynchronous write operation.","nodes":[{"content":"A task that represents the asynchronous write operation.","pos":[0,56]}]}],"pos":[93530,93587],"yaml":true},{"content":"The stream writer is disposed.","nodes":[{"pos":[0,30],"content":"The stream writer is disposed.","nodes":[{"content":"The stream writer is disposed.","pos":[0,30]}]}],"pos":[93758,93789],"yaml":true},{"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"pos":[0,68],"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"content":"The stream writer is currently in use by a previous write operation.","pos":[0,68]}]}],"pos":[93899,93968],"yaml":true},{"content":"Writes a string followed by a line terminator asynchronously to the stream.","nodes":[{"pos":[0,75],"content":"Writes a string followed by a line terminator asynchronously to the stream.","nodes":[{"content":"Writes a string followed by a line terminator asynchronously to the stream.","pos":[0,75]}]}],"pos":[95587,95663],"yaml":true},{"content":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,111],"content":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.","nodes":[{"content":"The line terminator is defined by the <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,111],"source":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property."}]}],"pos":[95674,95786],"yaml":true,"extradata":"MT"},{"content":"The string to write. If the value is `null`, only a line terminator is written.","nodes":[{"pos":[0,79],"content":"The string to write. If the value is `null`, only a line terminator is written.","nodes":[{"content":"The string to write.","pos":[0,20]},{"content":"If the value is <ph id=\"ph1\">`null`</ph>, only a line terminator is written.","pos":[21,79],"source":" If the value is `null`, only a line terminator is written."}]}],"pos":[96505,96585],"yaml":true},{"content":"A task that represents the asynchronous write operation.","nodes":[{"pos":[0,56],"content":"A task that represents the asynchronous write operation.","nodes":[{"content":"A task that represents the asynchronous write operation.","pos":[0,56]}]}],"pos":[96656,96713],"yaml":true},{"content":"The stream writer is disposed.","nodes":[{"pos":[0,30],"content":"The stream writer is disposed.","nodes":[{"content":"The stream writer is disposed.","pos":[0,30]}]}],"pos":[96884,96915],"yaml":true},{"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"pos":[0,68],"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"content":"The stream writer is currently in use by a previous write operation.","pos":[0,68]}]}],"pos":[97025,97094],"yaml":true},{"content":"Writes a subarray of characters followed by a line terminator asynchronously to the stream.","nodes":[{"pos":[0,91],"content":"Writes a subarray of characters followed by a line terminator asynchronously to the stream.","nodes":[{"content":"Writes a subarray of characters followed by a line terminator asynchronously to the stream.","pos":[0,91]}]}],"pos":[98833,98925],"yaml":true},{"content":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,111],"content":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.","nodes":[{"content":"The line terminator is defined by the <ph id=\"ph1\">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,111],"source":"The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property."}]}],"pos":[98936,99048],"yaml":true,"extradata":"MT"},{"content":"The character array to write data from.","nodes":[{"pos":[0,39],"content":"The character array to write data from.","nodes":[{"content":"The character array to write data from.","pos":[0,39]}]}],"pos":[100033,100073],"yaml":true},{"content":"The character position in the buffer at which to start reading data.","nodes":[{"pos":[0,68],"content":"The character position in the buffer at which to start reading data.","nodes":[{"content":"The character position in the buffer at which to start reading data.","pos":[0,68]}]}],"pos":[100133,100202],"yaml":true},{"content":"The maximum number of characters to write.","nodes":[{"pos":[0,42],"content":"The maximum number of characters to write.","nodes":[{"content":"The maximum number of characters to write.","pos":[0,42]}]}],"pos":[100262,100305],"yaml":true},{"content":"A task that represents the asynchronous write operation.","nodes":[{"pos":[0,56],"content":"A task that represents the asynchronous write operation.","nodes":[{"content":"A task that represents the asynchronous write operation.","pos":[0,56]}]}],"pos":[100376,100433],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[100600,100631],"yaml":true},{"content":"The <code>index</code> plus <code>count</code> is greater than the buffer length.","nodes":[{"pos":[0,81],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> plus <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is greater than the buffer length.","source":"The <code>index</code> plus <code>count</code> is greater than the buffer length."}],"pos":[100725,100807],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[100921,100975],"yaml":true},{"content":"The stream writer is disposed.","nodes":[{"pos":[0,30],"content":"The stream writer is disposed.","nodes":[{"content":"The stream writer is disposed.","pos":[0,30]}]}],"pos":[101081,101112],"yaml":true},{"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"pos":[0,68],"content":"The stream writer is currently in use by a previous write operation.","nodes":[{"content":"The stream writer is currently in use by a previous write operation.","pos":[0,68]}]}],"pos":[101222,101291],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.StreamWriter\n  commentId: T:System.IO.StreamWriter\n  id: StreamWriter\n  children:\n  - System.IO.StreamWriter.#ctor(System.IO.Stream)\n  - System.IO.StreamWriter.#ctor(System.String)\n  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  - System.IO.StreamWriter.#ctor(System.String,System.Boolean)\n  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)\n  - System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)\n  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)\n  - System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)\n  - System.IO.StreamWriter.AutoFlush\n  - System.IO.StreamWriter.BaseStream\n  - System.IO.StreamWriter.Close\n  - System.IO.StreamWriter.Dispose(System.Boolean)\n  - System.IO.StreamWriter.Encoding\n  - System.IO.StreamWriter.Flush\n  - System.IO.StreamWriter.FlushAsync\n  - System.IO.StreamWriter.Null\n  - System.IO.StreamWriter.Write(System.Char)\n  - System.IO.StreamWriter.Write(System.Char[])\n  - System.IO.StreamWriter.Write(System.String)\n  - System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamWriter.WriteAsync(System.Char)\n  - System.IO.StreamWriter.WriteAsync(System.String)\n  - System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamWriter.WriteLineAsync\n  - System.IO.StreamWriter.WriteLineAsync(System.Char)\n  - System.IO.StreamWriter.WriteLineAsync(System.String)\n  - System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: StreamWriter\n  nameWithType: StreamWriter\n  fullName: System.IO.StreamWriter\n  type: Class\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Implements a <xref href=\"System.IO.TextWriter\"></xref> for writing characters to a stream in a particular encoding.\n  remarks: \"> [!NOTE]\\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamwriter.cs#9e38cb1c84769eba). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \\n  \\n <xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.  \\n  \\n <xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise. This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.  \\n  \\n By default, a <xref:System.IO.StreamWriter> is not thread safe. See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example shows how to use a <xref:System.IO.StreamWriter> object to write a file that lists the directories on the C drive, and then uses a <xref:System.IO.StreamReader> object to read and display each directory name. A good practice is to use these objects in a `using` statement so that the unmanaged resources are correctly disposed. The `using` statement automatically calls <xref:System.IDisposable.Dispose%2A> on the object when the code that is using it has completed. The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.  \\n  \\n [!code-csharp[StreamReadWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/streamreadwrite/cs/program.cs#1)]\\n [!code-vb[StreamReadWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/streamreadwrite/vb/module1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class StreamWriter : System.IO.TextWriter\n  inheritance:\n  - System.Object\n  - System.IO.TextWriter\n  implements: []\n  inheritedMembers:\n  - System.IO.TextWriter.CoreNewLine\n  - System.IO.TextWriter.Dispose\n  - System.IO.TextWriter.FormatProvider\n  - System.IO.TextWriter.NewLine\n  - System.IO.TextWriter.Synchronized(System.IO.TextWriter)\n  - System.IO.TextWriter.Write(System.Boolean)\n  - System.IO.TextWriter.Write(System.Decimal)\n  - System.IO.TextWriter.Write(System.Double)\n  - System.IO.TextWriter.Write(System.Int32)\n  - System.IO.TextWriter.Write(System.Int64)\n  - System.IO.TextWriter.Write(System.Object)\n  - System.IO.TextWriter.Write(System.Single)\n  - System.IO.TextWriter.Write(System.String,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object[])\n  - System.IO.TextWriter.Write(System.UInt32)\n  - System.IO.TextWriter.Write(System.UInt64)\n  - System.IO.TextWriter.WriteAsync(System.Char[])\n  - System.IO.TextWriter.WriteLine\n  - System.IO.TextWriter.WriteLine(System.Boolean)\n  - System.IO.TextWriter.WriteLine(System.Char)\n  - System.IO.TextWriter.WriteLine(System.Char[])\n  - System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n  - System.IO.TextWriter.WriteLine(System.Decimal)\n  - System.IO.TextWriter.WriteLine(System.Double)\n  - System.IO.TextWriter.WriteLine(System.Int32)\n  - System.IO.TextWriter.WriteLine(System.Int64)\n  - System.IO.TextWriter.WriteLine(System.Object)\n  - System.IO.TextWriter.WriteLine(System.Single)\n  - System.IO.TextWriter.WriteLine(System.String)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object[])\n  - System.IO.TextWriter.WriteLine(System.UInt32)\n  - System.IO.TextWriter.WriteLine(System.UInt64)\n  - System.IO.TextWriter.WriteLineAsync(System.Char[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream)\n  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: StreamWriter(Stream)\n  nameWithType: StreamWriter.StreamWriter(Stream)\n  fullName: StreamWriter.StreamWriter(Stream)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using UTF-8 encoding and the default buffer size.\n  remarks: \"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>. The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter. The position of the stream is not reset.  \\n  \\n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this constructor.  \\n  \\n [!code-csharp[System.IO.StreamWriter.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program1.cs#1)]\\n [!code-vb[System.IO.StreamWriter.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program1.vb#1)]\"\n  syntax:\n    content: public StreamWriter (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to write to.\n  overload: System.IO.StreamWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> is not writable.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.#ctor(System.String)\n  commentId: M:System.IO.StreamWriter.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: StreamWriter(String)\n  nameWithType: StreamWriter.StreamWriter(String)\n  fullName: StreamWriter.StreamWriter(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the default encoding and buffer size.\n  remarks: \"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.  \\n  \\n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share. If the file exists, it is overwritten; otherwise, a new file is created.  \\n  \\n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this constructor.  \\n  \\n [!code-csharp[System.IO.StreamWriter.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program5.cs#5)]\\n [!code-vb[System.IO.StreamWriter.ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program5.vb#5)]\"\n  syntax:\n    content: public StreamWriter (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to write to. <code>path</code> can be a file name.\n  overload: System.IO.StreamWriter.#ctor*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access is denied.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>path</code> contains the name of a system device (com1, com2, and so on).\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: StreamWriter(Stream, Encoding)\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding)\n  fullName: StreamWriter.StreamWriter(Stream, Encoding)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and the default buffer size.\n  remarks: \"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \\n  \\n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates this constructor.  \\n  \\n [!code-csharp[System.IO.StreamWriter.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program2.cs#2)]\\n [!code-vb[System.IO.StreamWriter.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program2.vb#2)]\"\n  syntax:\n    content: public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to write to.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.StreamWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>encoding</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> is not writable.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean)\n  commentId: M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: StreamWriter(String, Boolean)\n  nameWithType: StreamWriter.StreamWriter(String, Boolean)\n  fullName: StreamWriter.StreamWriter(String, Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the default encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.\n  remarks: \"This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.  \\n  \\n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \\n  \\n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates this constructor.  \\n  \\n [!code-csharp[System.IO.StreamWriter.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program6.cs#6)]\\n [!code-vb[System.IO.StreamWriter.ctor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program6.vb#6)]\"\n  syntax:\n    content: public StreamWriter (string path, bool append);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to write to.\n    - id: append\n      type: System.Boolean\n      description: '`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.'\n  overload: System.IO.StreamWriter.#ctor*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access is denied.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is empty.  \\n  \\n -or-  \\n  \\n <code>path</code> contains the name of a system device (com1, com2, and so on).\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)\n  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: StreamWriter(Stream, Encoding, Int32)\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32)\n  fullName: StreamWriter.StreamWriter(Stream, Encoding, Int32)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and buffer size.\n  remarks: \"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \\n  \\n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates this constructor.  \\n  \\n [!code-csharp[System.IO.StreamWriter.ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program3.cs#3)]\\n [!code-vb[System.IO.StreamWriter.ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program3.vb#3)]\"\n  syntax:\n    content: public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to write to.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: bufferSize\n      type: System.Int32\n      description: The buffer size, in bytes.\n  overload: System.IO.StreamWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>encoding</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>bufferSize</code> is negative.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> is not writable.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)\n  commentId: M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)\n  id: '#ctor(System.String,System.Boolean,System.Text.Encoding)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: StreamWriter(String, Boolean, Encoding)\n  nameWithType: StreamWriter.StreamWriter(String, Boolean, Encoding)\n  fullName: StreamWriter.StreamWriter(String, Boolean, Encoding)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file by using the specified encoding and default buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.\n  remarks: \"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \\n  \\n `path` can be a file name, including a file on a Universal Naming Convention (UNC) share.  \\n  \\n `path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates this constructor.  \\n  \\n [!code-csharp[System.IO.StreamWriter.ctor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program7.cs#7)]\\n [!code-vb[System.IO.StreamWriter.ctor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program7.vb#7)]\"\n  syntax:\n    content: public StreamWriter (string path, bool append, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to write to.\n    - id: append\n      type: System.Boolean\n      description: '`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.'\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.StreamWriter.#ctor*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access is denied.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is empty.  \\n  \\n -or-  \\n  \\n <code>path</code> contains the name of a system device (com1, com2, and so on).\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)\n  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: StreamWriter(Stream, Encoding, Int32, Boolean)\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)\n  fullName: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.\n  remarks: \"Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \\n  \\n This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter. The position of the stream is not reset. For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.\"\n  example:\n  - \"The following example demonstrates this constructor.  \\n  \\n [!code-csharp[System.IO.StreamWriter.ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program4.cs#4)]\\n [!code-vb[System.IO.StreamWriter.ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program4.vb#4)]\"\n  syntax:\n    content: public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize, bool leaveOpen);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to write to.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: bufferSize\n      type: System.Int32\n      description: The buffer size, in bytes.\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`true` to leave the stream open after the <xref href=\"System.IO.StreamWriter\"></xref> object is disposed; otherwise, `false`.'\n  overload: System.IO.StreamWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>encoding</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>bufferSize</code> is negative.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> is not writable.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)\n  commentId: M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)\n  id: '#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: StreamWriter(String, Boolean, Encoding, Int32)\n  nameWithType: StreamWriter.StreamWriter(String, Boolean, Encoding, Int32)\n  fullName: StreamWriter.StreamWriter(String, Boolean, Encoding, Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.StreamWriter\"></xref> class for the specified file on the specified path, using the specified encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.\n  remarks: \"This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \\n  \\n `path` can be a file name, including a file on a Universal Naming Convention (UNC) share.  \\n  \\n `path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates this constructor.  \\n  \\n [!code-csharp[System.IO.StreamWriter.ctor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program8.cs#8)]\\n [!code-vb[System.IO.StreamWriter.ctor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program8.vb#8)]\"\n  syntax:\n    content: public StreamWriter (string path, bool append, System.Text.Encoding encoding, int bufferSize);\n    parameters:\n    - id: path\n      type: System.String\n      description: The complete file path to write to.\n    - id: append\n      type: System.Boolean\n      description: '`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.'\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: bufferSize\n      type: System.Int32\n      description: The buffer size, in bytes.\n  overload: System.IO.StreamWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>path</code> contains the name of a system device (com1, com2, and so on).\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> or <code>encoding</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>bufferSize</code> is negative.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access is denied.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid (for example, it is on an unmapped drive).\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.AutoFlush\n  commentId: P:System.IO.StreamWriter.AutoFlush\n  id: AutoFlush\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: AutoFlush\n  nameWithType: StreamWriter.AutoFlush\n  fullName: StreamWriter.AutoFlush\n  type: Property\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Gets or sets a value indicating whether the <xref href=\"System.IO.StreamWriter\"></xref> will flush its buffer to the underlying stream after every call to <xref href=\"System.IO.StreamWriter.Write(System.Char)\"></xref>.\n  remarks: \"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \\n  \\n When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in. You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.  \\n  \\n For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback. `Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=fullName>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example shows the syntax for using the `AutoFlush` property.  \\n  \\n [!code-cpp[System.IO.StreamWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#5)]\\n [!code-csharp[System.IO.StreamWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#5)]\\n [!code-vb[System.IO.StreamWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#5)]\"\n  syntax:\n    content: public virtual bool AutoFlush { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to force <xref href=\"System.IO.StreamWriter\"></xref> to flush its buffer; otherwise, `false`.'\n  overload: System.IO.StreamWriter.AutoFlush*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.BaseStream\n  commentId: P:System.IO.StreamWriter.BaseStream\n  id: BaseStream\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: StreamWriter.BaseStream\n  fullName: StreamWriter.BaseStream\n  type: Property\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Gets the underlying stream that interfaces with a backing store.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  syntax:\n    content: public virtual System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: The stream this `StreamWriter` is writing to.\n  overload: System.IO.StreamWriter.BaseStream*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Close\n  commentId: M:System.IO.StreamWriter.Close\n  id: Close\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: StreamWriter.Close()\n  fullName: StreamWriter.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Closes the current `StreamWriter` object and the underlying stream.\n  remarks: \"This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=fullName>.  \\n  \\n This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value.  \\n  \\n You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream. Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions. If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.  \\n  \\n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.\"\n  example:\n  - \"The following code example demonstrates the `Close` method.  \\n  \\n [!code-cpp[System.IO.StreamWriter#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#17)]\\n [!code-csharp[System.IO.StreamWriter#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#17)]\\n [!code-vb[System.IO.StreamWriter#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#17)]\"\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.IO.StreamWriter.Close*\n  exceptions:\n  - type: System.Text.EncoderFallbackException\n    commentId: T:System.Text.EncoderFallbackException\n    description: The current encoding does not support displaying half of a Unicode surrogate pair.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Dispose(System.Boolean)\n  commentId: M:System.IO.StreamWriter.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: StreamWriter.Dispose(Boolean)\n  fullName: StreamWriter.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.StreamWriter\"></xref> and optionally releases the managed resources.\n  remarks: When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references. This method invokes the `Dispose` method of each referenced object.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.StreamWriter.Dispose*\n  exceptions:\n  - type: System.Text.EncoderFallbackException\n    commentId: T:System.Text.EncoderFallbackException\n    description: The current encoding does not support displaying half of a Unicode surrogate pair.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Encoding\n  commentId: P:System.IO.StreamWriter.Encoding\n  id: Encoding\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: Encoding\n  nameWithType: StreamWriter.Encoding\n  fullName: StreamWriter.Encoding\n  type: Property\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Gets the <xref href=\"System.Text.Encoding\"></xref> in which the output is written.\n  remarks: \"This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>. This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example retrieves the encoding of the specified <xref:System.IO.StreamWriter> instance.  \\n  \\n [!code-cpp[System.IO.StreamWriter#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#11)]\\n [!code-csharp[System.IO.StreamWriter#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#11)]\\n [!code-vb[System.IO.StreamWriter#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#11)]\"\n  syntax:\n    content: public override System.Text.Encoding Encoding { get; }\n    return:\n      type: System.Text.Encoding\n      description: The <xref href=\"System.Text.Encoding\"></xref> specified in the constructor for the current instance, or <xref href=\"System.Text.UTF8Encoding\"></xref> if an encoding was not specified.\n  overload: System.IO.StreamWriter.Encoding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Flush\n  commentId: M:System.IO.StreamWriter.Flush\n  id: Flush\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: StreamWriter.Flush()\n  fullName: StreamWriter.Flush()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.\n  remarks: \"This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=fullName>.  \\n  \\n Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.IO.StreamWriter.Flush*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current writer is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error has occurred.\n  - type: System.Text.EncoderFallbackException\n    commentId: T:System.Text.EncoderFallbackException\n    description: The current encoding does not support displaying half of a Unicode surrogate pair.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.FlushAsync\n  commentId: M:System.IO.StreamWriter.FlushAsync\n  id: FlushAsync\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: FlushAsync()\n  nameWithType: StreamWriter.FlushAsync()\n  fullName: StreamWriter.FlushAsync()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task FlushAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous flush operation.\n  overload: System.IO.StreamWriter.FlushAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream has been disposed.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Null\n  commentId: F:System.IO.StreamWriter.Null\n  id: \"Null\"\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: StreamWriter.Null\n  fullName: StreamWriter.Null\n  type: Field\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Provides a `StreamWriter` with no backing store that can be written to, but not read from.\n  remarks: \"Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources.  \\n  \\n When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example demonstrates a use of the `Null` field.  \\n  \\n [!code-cpp[System.IO.StreamWriter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#6)]\\n [!code-csharp[System.IO.StreamWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#6)]\\n [!code-vb[System.IO.StreamWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#6)]\"\n  syntax:\n    content: public static readonly System.IO.StreamWriter Null;\n    return:\n      type: System.IO.StreamWriter\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Write(System.Char)\n  commentId: M:System.IO.StreamWriter.Write(System.Char)\n  id: Write(System.Char)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: Write(Char)\n  nameWithType: StreamWriter.Write(Char)\n  fullName: StreamWriter.Write(Char)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a character to the stream.\n  remarks: \"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \\n  \\n The specified character is written to the underlying stream unless the end of the stream is reached prematurely. If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public override void Write (char value);\n    parameters:\n    - id: value\n      type: System.Char\n      description: The character to write to the stream.\n  overload: System.IO.StreamWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Write(System.Char[])\n  commentId: M:System.IO.StreamWriter.Write(System.Char[])\n  id: Write(System.Char[])\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: Write(Char[])\n  nameWithType: StreamWriter.Write(Char[])\n  fullName: StreamWriter.Write(Char[])\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a character array to the stream.\n  remarks: \"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \\n  \\n The specified characters are written to the underlying stream unless the end of the stream is reached prematurely. If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.  \\n  \\n This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public override void Write (char[] buffer);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: A character array containing the data to write. If <code>buffer</code> is `null`, nothing is written.\n  overload: System.IO.StreamWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Write(System.String)\n  commentId: M:System.IO.StreamWriter.Write(System.String)\n  id: Write(System.String)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: StreamWriter.Write(String)\n  fullName: StreamWriter.Write(String)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a string to the stream.\n  remarks: \"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \\n  \\n The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.  \\n  \\n <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`. If `value` is `null`, no entries are written.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public override void Write (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to write to the stream. If <code>value</code> is null, nothing is written.\n  overload: System.IO.StreamWriter.Write*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)\n  id: Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: Write(Char[], Int32, Int32)\n  nameWithType: StreamWriter.Write(Char[], Int32, Int32)\n  fullName: StreamWriter.Write(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a subarray of characters to the stream.\n  remarks: \"This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \\n  \\n The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1). All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely. <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.  \\n  \\n [!code-cpp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CS/source.cs#1)]\\n [!code-vb[Classic StreamWriter.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void Write (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: A character array that contains the data to write.\n    - id: index\n      type: System.Int32\n      description: The character position in the buffer at which to start reading data.\n    - id: count\n      type: System.Int32\n      description: The maximum number of characters to write.\n  overload: System.IO.StreamWriter.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The buffer length minus <code>index</code> is less than <code>count</code>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and current writer is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.IO.StreamWriter.AutoFlush\"></xref> is true or the <xref href=\"System.IO.StreamWriter\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\"System.IO.StreamWriter\"></xref> is at the end the stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.WriteAsync(System.Char)\n  commentId: M:System.IO.StreamWriter.WriteAsync(System.Char)\n  id: WriteAsync(System.Char)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: WriteAsync(Char)\n  nameWithType: StreamWriter.WriteAsync(Char)\n  fullName: StreamWriter.WriteAsync(Char)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a character to the stream asynchronously.\n  remarks: ''\n  example:\n  - \"The following example shows how to write a single character (the letter \\\"a\\\") to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%29> method.  \\n  \\n [!code-csharp[System.IO.StreamWriter#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example20.cs#20)]\\n [!code-vb[System.IO.StreamWriter#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example20.vb#20)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task WriteAsync (char value);\n    parameters:\n    - id: value\n      type: System.Char\n      description: The character to write to the stream.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous write operation.\n  overload: System.IO.StreamWriter.WriteAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream writer is disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream writer is currently in use by a previous write operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.WriteAsync(System.String)\n  commentId: M:System.IO.StreamWriter.WriteAsync(System.String)\n  id: WriteAsync(System.String)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: WriteAsync(String)\n  nameWithType: StreamWriter.WriteAsync(String)\n  fullName: StreamWriter.WriteAsync(String)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a string to the stream asynchronously.\n  remarks: ''\n  example:\n  - \"The following example shows how to write a string to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.String%29> method.  \\n  \\n [!code-csharp[System.IO.StreamWriter#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example21.cs#21)]\\n [!code-vb[System.IO.StreamWriter#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example21.vb#21)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task WriteAsync (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to write to the stream. If <code>value</code> is `null`, nothing is written.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous write operation.\n  overload: System.IO.StreamWriter.WriteAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream writer is disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream writer is currently in use by a previous write operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  id: WriteAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: WriteAsync(Char[], Int32, Int32)\n  nameWithType: StreamWriter.WriteAsync(Char[], Int32, Int32)\n  fullName: StreamWriter.WriteAsync(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a subarray of characters to the stream asynchronously.\n  remarks: ''\n  example:\n  - \"The following example shows how to write multiple characters to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.  \\n  \\n [!code-csharp[System.IO.StreamWriter#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example24.cs#24)]\\n [!code-vb[System.IO.StreamWriter#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example24.vb#24)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: A character array that contains the data to write.\n    - id: index\n      type: System.Int32\n      description: The character position in the buffer at which to begin reading data.\n    - id: count\n      type: System.Int32\n      description: The maximum number of characters to write.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous write operation.\n  overload: System.IO.StreamWriter.WriteAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>index</code> plus <code>count</code> is greater than the buffer length.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream writer is disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream writer is currently in use by a previous write operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.WriteLineAsync\n  commentId: M:System.IO.StreamWriter.WriteLineAsync\n  id: WriteLineAsync\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: WriteLineAsync()\n  nameWithType: StreamWriter.WriteLineAsync()\n  fullName: StreamWriter.WriteLineAsync()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a line terminator asynchronously to the stream.\n  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task WriteLineAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous write operation.\n  overload: System.IO.StreamWriter.WriteLineAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream writer is disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream writer is currently in use by a previous write operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.WriteLineAsync(System.Char)\n  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char)\n  id: WriteLineAsync(System.Char)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: WriteLineAsync(Char)\n  nameWithType: StreamWriter.WriteLineAsync(Char)\n  fullName: StreamWriter.WriteLineAsync(Char)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a character followed by a line terminator asynchronously to the stream.\n  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.\n  example:\n  - \"The following example shows how to write a single character (the letter \\\"a\\\") to a line in a text file, followed by another line that contains a single character (the letter \\\"b\\\"), by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29> method.  \\n  \\n [!code-csharp[System.IO.StreamWriter#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example22.cs#22)]\\n [!code-vb[System.IO.StreamWriter#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example22.vb#22)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task WriteLineAsync (char value);\n    parameters:\n    - id: value\n      type: System.Char\n      description: The character to write to the stream.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous write operation.\n  overload: System.IO.StreamWriter.WriteLineAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream writer is disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream writer is currently in use by a previous write operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.WriteLineAsync(System.String)\n  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.String)\n  id: WriteLineAsync(System.String)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: WriteLineAsync(String)\n  nameWithType: StreamWriter.WriteLineAsync(String)\n  fullName: StreamWriter.WriteLineAsync(String)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a string followed by a line terminator asynchronously to the stream.\n  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.\n  example:\n  - \"The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.  \\n  \\n [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]\\n [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task WriteLineAsync (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to write. If the value is `null`, only a line terminator is written.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous write operation.\n  overload: System.IO.StreamWriter.WriteLineAsync*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream writer is disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream writer is currently in use by a previous write operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  id: WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  name: WriteLineAsync(Char[], Int32, Int32)\n  nameWithType: StreamWriter.WriteLineAsync(Char[], Int32, Int32)\n  fullName: StreamWriter.WriteLineAsync(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a subarray of characters followed by a line terminator asynchronously to the stream.\n  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.\n  example:\n  - \"The following example shows how to write characters to two separate lines in a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method. The first line contains the first 11 characters from the string (the letters \\\"First line\\\" followed by a space). The second line contains the remaining characters from the string (the letters \\\"and second line\\\").  \\n  \\n [!code-csharp[System.IO.StreamWriter#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example25.cs#25)]\\n [!code-vb[System.IO.StreamWriter#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example25.vb#25)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: The character array to write data from.\n    - id: index\n      type: System.Int32\n      description: The character position in the buffer at which to start reading data.\n    - id: count\n      type: System.Int32\n      description: The maximum number of characters to write.\n    return:\n      type: System.Threading.Tasks.Task\n      description: A task that represents the asynchronous write operation.\n  overload: System.IO.StreamWriter.WriteLineAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>index</code> plus <code>count</code> is greater than the buffer length.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream writer is disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream writer is currently in use by a previous write operation.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.IO.DirectoryNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n- uid: System.IO.PathTooLongException\n  parent: System.IO\n  isExternal: false\n  name: PathTooLongException\n  nameWithType: PathTooLongException\n  fullName: System.IO.PathTooLongException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Text.EncoderFallbackException\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallbackException\n  nameWithType: EncoderFallbackException\n  fullName: System.Text.EncoderFallbackException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter(Stream)\n  nameWithType: StreamWriter.StreamWriter(Stream)\n  fullName: StreamWriter.StreamWriter(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.StreamWriter.#ctor(System.String)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter(String)\n  nameWithType: StreamWriter.StreamWriter(String)\n  fullName: StreamWriter.StreamWriter(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter(Stream, Encoding)\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding)\n  fullName: StreamWriter.StreamWriter(Stream, Encoding)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter(String, Boolean)\n  nameWithType: StreamWriter.StreamWriter(String, Boolean)\n  fullName: StreamWriter.StreamWriter(String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter(Stream, Encoding, Int32)\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32)\n  fullName: StreamWriter.StreamWriter(Stream, Encoding, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter(String, Boolean, Encoding)\n  nameWithType: StreamWriter.StreamWriter(String, Boolean, Encoding)\n  fullName: StreamWriter.StreamWriter(String, Boolean, Encoding)\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter(Stream, Encoding, Int32, Boolean)\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)\n  fullName: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)\n- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter(String, Boolean, Encoding, Int32)\n  nameWithType: StreamWriter.StreamWriter(String, Boolean, Encoding, Int32)\n  fullName: StreamWriter.StreamWriter(String, Boolean, Encoding, Int32)\n- uid: System.IO.StreamWriter.AutoFlush\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: AutoFlush\n  nameWithType: StreamWriter.AutoFlush\n  fullName: StreamWriter.AutoFlush\n- uid: System.IO.StreamWriter.BaseStream\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: BaseStream\n  nameWithType: StreamWriter.BaseStream\n  fullName: StreamWriter.BaseStream\n- uid: System.IO.StreamWriter.Close\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Close()\n  nameWithType: StreamWriter.Close()\n  fullName: StreamWriter.Close()\n- uid: System.IO.StreamWriter.Dispose(System.Boolean)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: StreamWriter.Dispose(Boolean)\n  fullName: StreamWriter.Dispose(Boolean)\n- uid: System.IO.StreamWriter.Encoding\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Encoding\n  nameWithType: StreamWriter.Encoding\n  fullName: StreamWriter.Encoding\n- uid: System.IO.StreamWriter.Flush\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Flush()\n  nameWithType: StreamWriter.Flush()\n  fullName: StreamWriter.Flush()\n- uid: System.IO.StreamWriter.FlushAsync\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: StreamWriter.FlushAsync()\n  fullName: StreamWriter.FlushAsync()\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.StreamWriter.Null\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: \"Null\"\n  nameWithType: StreamWriter.Null\n  fullName: StreamWriter.Null\n- uid: System.IO.StreamWriter\n  parent: System.IO\n  isExternal: false\n  name: StreamWriter\n  nameWithType: StreamWriter\n  fullName: System.IO.StreamWriter\n- uid: System.IO.StreamWriter.Write(System.Char)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Write(Char)\n  nameWithType: StreamWriter.Write(Char)\n  fullName: StreamWriter.Write(Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.IO.StreamWriter.Write(System.Char[])\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Write(Char[])\n  nameWithType: StreamWriter.Write(Char[])\n  fullName: StreamWriter.Write(Char[])\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.StreamWriter.Write(System.String)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Write(String)\n  nameWithType: StreamWriter.Write(String)\n  fullName: StreamWriter.Write(String)\n- uid: System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Write(Char[], Int32, Int32)\n  nameWithType: StreamWriter.Write(Char[], Int32, Int32)\n  fullName: StreamWriter.Write(Char[], Int32, Int32)\n- uid: System.IO.StreamWriter.WriteAsync(System.Char)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteAsync(Char)\n  nameWithType: StreamWriter.WriteAsync(Char)\n  fullName: StreamWriter.WriteAsync(Char)\n- uid: System.IO.StreamWriter.WriteAsync(System.String)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteAsync(String)\n  nameWithType: StreamWriter.WriteAsync(String)\n  fullName: StreamWriter.WriteAsync(String)\n- uid: System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteAsync(Char[], Int32, Int32)\n  nameWithType: StreamWriter.WriteAsync(Char[], Int32, Int32)\n  fullName: StreamWriter.WriteAsync(Char[], Int32, Int32)\n- uid: System.IO.StreamWriter.WriteLineAsync\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteLineAsync()\n  nameWithType: StreamWriter.WriteLineAsync()\n  fullName: StreamWriter.WriteLineAsync()\n- uid: System.IO.StreamWriter.WriteLineAsync(System.Char)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteLineAsync(Char)\n  nameWithType: StreamWriter.WriteLineAsync(Char)\n  fullName: StreamWriter.WriteLineAsync(Char)\n- uid: System.IO.StreamWriter.WriteLineAsync(System.String)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteLineAsync(String)\n  nameWithType: StreamWriter.WriteLineAsync(String)\n  fullName: StreamWriter.WriteLineAsync(String)\n- uid: System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteLineAsync(Char[], Int32, Int32)\n  nameWithType: StreamWriter.WriteLineAsync(Char[], Int32, Int32)\n  fullName: StreamWriter.WriteLineAsync(Char[], Int32, Int32)\n- uid: System.IO.StreamWriter.#ctor*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: StreamWriter\n  nameWithType: StreamWriter.StreamWriter\n  fullName: StreamWriter.StreamWriter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.AutoFlush*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: AutoFlush\n  nameWithType: StreamWriter.AutoFlush\n  fullName: StreamWriter.AutoFlush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.BaseStream*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: BaseStream\n  nameWithType: StreamWriter.BaseStream\n  fullName: StreamWriter.BaseStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.Close*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Close\n  nameWithType: StreamWriter.Close\n  fullName: StreamWriter.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.Dispose*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Dispose\n  nameWithType: StreamWriter.Dispose\n  fullName: StreamWriter.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.Encoding*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Encoding\n  nameWithType: StreamWriter.Encoding\n  fullName: StreamWriter.Encoding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.Flush*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Flush\n  nameWithType: StreamWriter.Flush\n  fullName: StreamWriter.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.FlushAsync*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: FlushAsync\n  nameWithType: StreamWriter.FlushAsync\n  fullName: StreamWriter.FlushAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.Write*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: Write\n  nameWithType: StreamWriter.Write\n  fullName: StreamWriter.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.WriteAsync*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteAsync\n  nameWithType: StreamWriter.WriteAsync\n  fullName: StreamWriter.WriteAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.IO.StreamWriter.WriteLineAsync*\n  parent: System.IO.StreamWriter\n  isExternal: false\n  name: WriteLineAsync\n  nameWithType: StreamWriter.WriteLineAsync\n  fullName: StreamWriter.WriteLineAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.TextWriter.CoreNewLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: CoreNewLine\n  nameWithType: TextWriter.CoreNewLine\n  fullName: TextWriter.CoreNewLine\n- uid: System.IO.TextWriter.Dispose\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Dispose()\n  nameWithType: TextWriter.Dispose()\n  fullName: TextWriter.Dispose()\n- uid: System.IO.TextWriter.FormatProvider\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: FormatProvider\n  nameWithType: TextWriter.FormatProvider\n  fullName: TextWriter.FormatProvider\n- uid: System.IO.TextWriter.NewLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: NewLine\n  nameWithType: TextWriter.NewLine\n  fullName: TextWriter.NewLine\n- uid: System.IO.TextWriter.Synchronized(System.IO.TextWriter)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Synchronized(TextWriter)\n  nameWithType: TextWriter.Synchronized(TextWriter)\n  fullName: TextWriter.Synchronized(TextWriter)\n- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(String, Object, Object, Object)\n  nameWithType: TextWriter.Write(String, Object, Object, Object)\n  fullName: TextWriter.Write(String, Object, Object, Object)\n- uid: System.IO.TextWriter.Write(System.String,System.Object[])\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(String, Object[])\n  nameWithType: TextWriter.Write(String, Object[])\n  fullName: TextWriter.Write(String, Object[])\n- uid: System.IO.TextWriter.Write(System.String,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(String, Object)\n  nameWithType: TextWriter.Write(String, Object)\n  fullName: TextWriter.Write(String, Object)\n- uid: System.IO.TextWriter.Write(System.UInt64)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(UInt64)\n  nameWithType: TextWriter.Write(UInt64)\n  fullName: TextWriter.Write(UInt64)\n- uid: System.IO.TextWriter.Write(System.UInt32)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(UInt32)\n  nameWithType: TextWriter.Write(UInt32)\n  fullName: TextWriter.Write(UInt32)\n- uid: System.IO.TextWriter.Write(System.Single)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(Single)\n  nameWithType: TextWriter.Write(Single)\n  fullName: TextWriter.Write(Single)\n- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(String, Object, Object)\n  nameWithType: TextWriter.Write(String, Object, Object)\n  fullName: TextWriter.Write(String, Object, Object)\n- uid: System.IO.TextWriter.Write(System.Int64)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(Int64)\n  nameWithType: TextWriter.Write(Int64)\n  fullName: TextWriter.Write(Int64)\n- uid: System.IO.TextWriter.Write(System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(Int32)\n  nameWithType: TextWriter.Write(Int32)\n  fullName: TextWriter.Write(Int32)\n- uid: System.IO.TextWriter.Write(System.Double)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(Double)\n  nameWithType: TextWriter.Write(Double)\n  fullName: TextWriter.Write(Double)\n- uid: System.IO.TextWriter.Write(System.Decimal)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(Decimal)\n  nameWithType: TextWriter.Write(Decimal)\n  fullName: TextWriter.Write(Decimal)\n- uid: System.IO.TextWriter.Write(System.Object)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(Object)\n  nameWithType: TextWriter.Write(Object)\n  fullName: TextWriter.Write(Object)\n- uid: System.IO.TextWriter.Write(System.Boolean)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Write(Boolean)\n  nameWithType: TextWriter.Write(Boolean)\n  fullName: TextWriter.Write(Boolean)\n- uid: System.IO.TextWriter.WriteAsync(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteAsync(Char[])\n  nameWithType: TextWriter.WriteAsync(Char[])\n  fullName: TextWriter.WriteAsync(Char[])\n- uid: System.IO.TextWriter.WriteLine(System.String)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(String)\n  nameWithType: TextWriter.WriteLine(String)\n  fullName: TextWriter.WriteLine(String)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(String, Object, Object)\n  nameWithType: TextWriter.WriteLine(String, Object, Object)\n  fullName: TextWriter.WriteLine(String, Object, Object)\n- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Char[], Int32, Int32)\n  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)\n  fullName: TextWriter.WriteLine(Char[], Int32, Int32)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(String, Object[])\n  nameWithType: TextWriter.WriteLine(String, Object[])\n  fullName: TextWriter.WriteLine(String, Object[])\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(String, Object)\n  nameWithType: TextWriter.WriteLine(String, Object)\n  fullName: TextWriter.WriteLine(String, Object)\n- uid: System.IO.TextWriter.WriteLine(System.UInt64)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(UInt64)\n  nameWithType: TextWriter.WriteLine(UInt64)\n  fullName: TextWriter.WriteLine(UInt64)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(String, Object, Object, Object)\n  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)\n  fullName: TextWriter.WriteLine(String, Object, Object, Object)\n- uid: System.IO.TextWriter.WriteLine(System.UInt32)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(UInt32)\n  nameWithType: TextWriter.WriteLine(UInt32)\n  fullName: TextWriter.WriteLine(UInt32)\n- uid: System.IO.TextWriter.WriteLine(System.Single)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Single)\n  nameWithType: TextWriter.WriteLine(Single)\n  fullName: TextWriter.WriteLine(Single)\n- uid: System.IO.TextWriter.WriteLine(System.Double)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Double)\n  nameWithType: TextWriter.WriteLine(Double)\n  fullName: TextWriter.WriteLine(Double)\n- uid: System.IO.TextWriter.WriteLine(System.Int64)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Int64)\n  nameWithType: TextWriter.WriteLine(Int64)\n  fullName: TextWriter.WriteLine(Int64)\n- uid: System.IO.TextWriter.WriteLine(System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Int32)\n  nameWithType: TextWriter.WriteLine(Int32)\n  fullName: TextWriter.WriteLine(Int32)\n- uid: System.IO.TextWriter.WriteLine(System.Decimal)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Decimal)\n  nameWithType: TextWriter.WriteLine(Decimal)\n  fullName: TextWriter.WriteLine(Decimal)\n- uid: System.IO.TextWriter.WriteLine(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Char[])\n  nameWithType: TextWriter.WriteLine(Char[])\n  fullName: TextWriter.WriteLine(Char[])\n- uid: System.IO.TextWriter.WriteLine(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Char)\n  nameWithType: TextWriter.WriteLine(Char)\n  fullName: TextWriter.WriteLine(Char)\n- uid: System.IO.TextWriter.WriteLine(System.Boolean)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Boolean)\n  nameWithType: TextWriter.WriteLine(Boolean)\n  fullName: TextWriter.WriteLine(Boolean)\n- uid: System.IO.TextWriter.WriteLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine()\n  nameWithType: TextWriter.WriteLine()\n  fullName: TextWriter.WriteLine()\n- uid: System.IO.TextWriter.WriteLine(System.Object)\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine(Object)\n  nameWithType: TextWriter.WriteLine(Object)\n  fullName: TextWriter.WriteLine(Object)\n- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLineAsync(Char[])\n  nameWithType: TextWriter.WriteLineAsync(Char[])\n  fullName: TextWriter.WriteLineAsync(Char[])\n"}