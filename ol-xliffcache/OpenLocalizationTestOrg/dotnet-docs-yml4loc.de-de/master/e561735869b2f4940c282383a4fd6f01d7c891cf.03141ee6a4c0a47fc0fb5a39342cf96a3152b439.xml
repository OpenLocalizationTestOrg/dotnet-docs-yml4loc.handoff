{"nodes":[{"content":"Represents a key identifier clause that identifies an encrypted key.","nodes":[{"pos":[0,68],"content":"Represents a key identifier clause that identifies an encrypted key.","nodes":[{"content":"Represents a key identifier clause that identifies an encrypted key.","pos":[0,68]}]}],"pos":[1708,1777],"yaml":true},{"content":"Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key. The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.  \n  \n [!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts wrapped keys that are well formed with respect to the wire format. The key wrap algorithm specified on the wire is accepted and used. It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint.","nodes":[{"pos":[0,844],"content":"Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key. The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.","nodes":[{"content":"Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key. The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.","pos":[0,844],"nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.","pos":[0,164],"source":"Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created."},{"content":"When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.","pos":[165,310]},{"content":"Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.","pos":[311,533]},{"content":"These references typically affirm the authenticity of the issued security token.","pos":[534,614]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> class to reference an encrypted key.","pos":[615,723],"source":" Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> method returns the encrypted key.","pos":[724,844],"source":" The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key."}]}]},{"pos":[851,1169],"content":"[!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts wrapped keys that are well formed with respect to the wire format. The key wrap algorithm specified on the wire is accepted and used. It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint.","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> accepts wrapped keys that are well formed with respect to the wire format.","pos":[0,120],"source":"[!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts wrapped keys that are well formed with respect to the wire format."},{"content":"The key wrap algorithm specified on the wire is accepted and used.","pos":[121,187]},{"content":"It is not verified to be compatible with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> specified by the endpoint.","pos":[188,318],"source":" It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint."}]}],"pos":[1788,2962],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.","nodes":[{"pos":[0,216],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key."}],"pos":[5526,5743],"yaml":true},{"content":"Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.","nodes":[{"pos":[0,169],"content":"Use the static constant strings in the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id=\"ph2\">`encryptionMethod`</ph> parameter.","source":"Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter."}],"pos":[5754,5924],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.","nodes":[{"pos":[0,226],"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains a key that is encrypted.","pos":[0,83],"source":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted."},{"content":"Sets the value that is returned from the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"&gt;&lt;/xref&gt;</ph> method.","pos":[84,226],"source":" Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method."}]}],"pos":[6115,6342],"yaml":true},{"content":"The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.","nodes":[{"pos":[0,187],"content":"The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.","nodes":[{"content":"The cryptographic algorithm that is used to encrypt the key.","pos":[0,60]},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"&gt;&lt;/xref&gt;</ph> property.","pos":[61,187],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property."}]}],"pos":[6414,6602],"yaml":true},{"content":"<code>encryptionMethod</code> is `null`.  \n  \n -or-  \n  \n <code>encryptedKey</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;encryptionMethod&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encryptionMethod</code> is `null`."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,94],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encryptedKey</code> is `null`."}],"pos":[6794,6895],"yaml":true},{"content":"<code>encryptedKey</code> is zero length.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedKey&lt;/code&gt;</ph> is zero length.","source":"<code>encryptedKey</code> is zero length."}],"pos":[7009,7051],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.","nodes":[{"pos":[0,258],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key."}],"pos":[8522,8781],"yaml":true},{"content":"Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.","nodes":[{"pos":[0,169],"content":"Use the static constant strings in the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id=\"ph2\">`encryptionMethod`</ph> parameter.","source":"Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter."}],"pos":[8792,8962],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.","nodes":[{"pos":[0,226],"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains a key that is encrypted.","pos":[0,83],"source":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted."},{"content":"Sets the value that is returned from the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"&gt;&lt;/xref&gt;</ph> method.","pos":[84,226],"source":" Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method."}]}],"pos":[9215,9442],"yaml":true},{"content":"The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.","nodes":[{"pos":[0,187],"content":"The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.","nodes":[{"content":"The cryptographic algorithm that is used to encrypt the key.","pos":[0,60]},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"&gt;&lt;/xref&gt;</ph> property.","pos":[61,187],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property."}]}],"pos":[9514,9702],"yaml":true},{"content":"<code>encryptionMethod</code> is `null`.  \n  \n -or-  \n  \n <code>encryptedKey</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;encryptionMethod&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encryptionMethod</code> is `null`."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,94],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encryptedKey</code> is `null`."}],"pos":[10012,10113],"yaml":true},{"content":"<code>encryptedKey</code> is zero length.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedKey&lt;/code&gt;</ph> is zero length.","source":"<code>encryptedKey</code> is zero length."}],"pos":[10227,10269],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.","nodes":[{"pos":[0,279],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name."}],"pos":[11806,12086],"yaml":true},{"content":"Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.","nodes":[{"pos":[0,169],"content":"Use the static constant strings in the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id=\"ph2\">`encryptionMethod`</ph> parameter.","source":"Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter."}],"pos":[12097,12267],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.","nodes":[{"pos":[0,226],"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains a key that is encrypted.","pos":[0,83],"source":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted."},{"content":"Sets the value that is returned from the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"&gt;&lt;/xref&gt;</ph> method.","pos":[84,226],"source":" Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method."}]}],"pos":[12543,12770],"yaml":true},{"content":"The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.","nodes":[{"pos":[0,187],"content":"The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.","nodes":[{"content":"The cryptographic algorithm that is used to encrypt the key.","pos":[0,60]},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"&gt;&lt;/xref&gt;</ph> property.","pos":[61,187],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property."}]}],"pos":[12842,13030],"yaml":true},{"content":"A user-readable name that is associated with the key specified in the <code>encryptedKey</code> parameter. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> property.","nodes":[{"pos":[0,231],"content":"A user-readable name that is associated with the key specified in the <code>encryptedKey</code> parameter. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> property.","nodes":[{"content":"A user-readable name that is associated with the key specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,106],"source":"A user-readable name that is associated with the key specified in the <code>encryptedKey</code> parameter."},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"&gt;&lt;/xref&gt;</ph> property.","pos":[107,231],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> property."}]}],"pos":[13218,13450],"yaml":true},{"content":"<code>encryptionMethod</code> is `null`.  \n  \n -or-  \n  \n <code>encryptedKey</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;encryptionMethod&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encryptionMethod</code> is `null`."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,94],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encryptedKey</code> is `null`."}],"pos":[13642,13743],"yaml":true},{"content":"<code>encryptedKey</code> is zero length.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedKey&lt;/code&gt;</ph> is zero length.","source":"<code>encryptedKey</code> is zero length."}],"pos":[13857,13899],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.","nodes":[{"pos":[0,268],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name."}],"pos":[15562,15831],"yaml":true},{"content":"When the `derivationNonce` and `derivationLength` parameters are specified the implied derived key is used instead of the direct security key of the token.  \n  \n Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.","nodes":[{"pos":[0,155],"content":"When the <ph id=\"ph1\">`derivationNonce`</ph> and <ph id=\"ph2\">`derivationLength`</ph> parameters are specified the implied derived key is used instead of the direct security key of the token.","source":"When the `derivationNonce` and `derivationLength` parameters are specified the implied derived key is used instead of the direct security key of the token."},{"pos":[162,331],"content":"Use the static constant strings in the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id=\"ph2\">`encryptionMethod`</ph> parameter.","source":"Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter."}],"pos":[15842,16178],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.","nodes":[{"pos":[0,226],"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains a key that is encrypted.","pos":[0,83],"source":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted."},{"content":"Sets the value that is returned from the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"&gt;&lt;/xref&gt;</ph> method.","pos":[84,226],"source":" Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method."}]}],"pos":[16500,16727],"yaml":true},{"content":"The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.","nodes":[{"pos":[0,187],"content":"The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.","nodes":[{"content":"The cryptographic algorithm that is used to encrypt the key.","pos":[0,60]},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"&gt;&lt;/xref&gt;</ph> property.","pos":[61,187],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property."}]}],"pos":[16799,16987],"yaml":true},{"content":"A user-readable name that is associated with the key specified in the <code>encryptedKey</code> parameter. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> property.","nodes":[{"pos":[0,231],"content":"A user-readable name that is associated with the key specified in the <code>encryptedKey</code> parameter. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> property.","nodes":[{"content":"A user-readable name that is associated with the key specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">encryptedKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,106],"source":"A user-readable name that is associated with the key specified in the <code>encryptedKey</code> parameter."},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"&gt;&lt;/xref&gt;</ph> property.","pos":[107,231],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> property."}]}],"pos":[17175,17407],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"></xref> method.","nodes":[{"pos":[0,250],"content":"An array of <xref href=\"System.Byte\"></xref> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"></xref> method.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the nonce that was used to create a derived key.","pos":[0,107],"source":"An array of <xref href=\"System.Byte\"></xref> that contains the nonce that was used to create a derived key."},{"content":"Sets the value that is returned by the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"&gt;&lt;/xref&gt;</ph> method.","pos":[108,250],"source":" Sets the value that is returned by the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"></xref> method."}]}],"pos":[17478,17729],"yaml":true},{"content":"The size of the derived key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"></xref> property.","nodes":[{"pos":[0,154],"content":"The size of the derived key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"></xref> property.","nodes":[{"content":"The size of the derived key.","pos":[0,28]},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"&gt;&lt;/xref&gt;</ph> property.","pos":[29,154],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"></xref> property."}]}],"pos":[17800,17955],"yaml":true},{"content":"<code>encryptionMethod</code> is `null`.  \n  \n -or-  \n  \n <code>encryptedKey</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;encryptionMethod&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encryptionMethod</code> is `null`."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,94],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encryptedKey</code> is `null`."}],"pos":[18147,18248],"yaml":true},{"content":"<code>encryptedKey</code> is zero length.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;encryptedKey&lt;/code&gt;</ph> is zero length.","source":"<code>encryptedKey</code> is zero length."}],"pos":[18362,18404],"yaml":true},{"content":"Gets a user-readable name that is associated with the encrypted key.","nodes":[{"pos":[0,68],"content":"Gets a user-readable name that is associated with the encrypted key.","nodes":[{"content":"Gets a user-readable name that is associated with the encrypted key.","pos":[0,68]}]}],"pos":[19501,19570],"yaml":true},{"content":"When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element. For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value. This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element. The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document. The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document.","nodes":[{"pos":[0,668],"content":"When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element. For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value. This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element. The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document. The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A&gt;</ph> property is serialized into XML, it is placed in the &lt;<ph id=\"ph2\">`CarriedKeyName`</ph>&gt; element.","pos":[0,171],"source":"When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element."},{"content":"For encrypted keys, the &lt;<ph id=\"ph1\">`CarriedKeyName`</ph>&gt; element is an optional element that associates a user-readable name with a key value.","pos":[172,300],"source":" For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value."},{"content":"This name can then be used to reference the key using the &lt;<ph id=\"ph1\">`KeyName`</ph>&gt; element within the &lt;<ph id=\"ph2\">`KeyInfo`</ph>&gt; element.","pos":[301,410],"source":" This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element."},{"content":"The same &lt;<ph id=\"ph1\">`CarriedKeyName`</ph>&gt; element value, unlike an ID value, can occur multiple times within a single document.","pos":[411,524],"source":" The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document."},{"content":"The value of the key must be the same in all &lt;<ph id=\"ph1\">`EncryptedKey`</ph>&gt; elements identified with the same &lt;<ph id=\"ph2\">`CarriedKeyName`</ph>&gt; name within an XML document.","pos":[525,668],"source":" The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document."}]}],"pos":[19581,20250],"yaml":true,"extradata":"MT"},{"content":"A user-readable name that is associated with the encrypted key.","nodes":[{"pos":[0,63],"content":"A user-readable name that is associated with the encrypted key.","nodes":[{"content":"A user-readable name that is associated with the encrypted key.","pos":[0,63]}]}],"pos":[20368,20432],"yaml":true},{"content":"Gets a key identifier for the encrypting key.","nodes":[{"pos":[0,45],"content":"Gets a key identifier for the encrypting key.","nodes":[{"content":"Gets a key identifier for the encrypting key.","pos":[0,45]}]}],"pos":[21685,21731],"yaml":true},{"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents the key identifier for the encrypting key.","nodes":[{"pos":[0,131],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;&lt;/xref&gt;</ph> that represents the key identifier for the encrypting key.","source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents the key identifier for the encrypting key."}],"pos":[21937,22069],"yaml":true},{"content":"Gets the cryptographic algorithm that is used to encrypt the key.","nodes":[{"pos":[0,65],"content":"Gets the cryptographic algorithm that is used to encrypt the key.","nodes":[{"content":"Gets the cryptographic algorithm that is used to encrypt the key.","pos":[0,65]}]}],"pos":[23289,23355],"yaml":true},{"content":"Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class.","nodes":[{"pos":[0,226],"content":"Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class.","nodes":[{"content":"Typically, the value of the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A&gt;</ph> property is one of the static constant strings in the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class.","pos":[0,226],"source":"Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class."}]}],"pos":[23366,23593],"yaml":true,"extradata":"MT"},{"content":"The cryptographic algorithm that is used to encrypt the key.","nodes":[{"pos":[0,60],"content":"The cryptographic algorithm that is used to encrypt the key.","nodes":[{"content":"The cryptographic algorithm that is used to encrypt the key.","pos":[0,60]}]}],"pos":[23713,23774],"yaml":true},{"content":"Gets the encrypted key.","nodes":[{"pos":[0,23],"content":"Gets the encrypted key.","nodes":[{"content":"Gets the encrypted key.","pos":[0,23]}]}],"pos":[24985,25009],"yaml":true},{"content":"The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key.","nodes":[{"pos":[0,156],"content":"The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key.","nodes":[{"content":"The array that is returned by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> method is a clone of the encrypted key.","pos":[0,156],"source":"The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key."}]}],"pos":[25020,25177],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.","nodes":[{"pos":[0,77],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the encrypted key.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key."}],"pos":[25310,25388],"yaml":true},{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.","nodes":[{"pos":[0,129],"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.","nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.","pos":[0,129]}]}],"pos":[26802,26932],"yaml":true},{"content":"`true` if <code>clause</code> is of type <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, `false`.","nodes":[{"pos":[0,236],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">clause</ph><ept id=\"p1\">&lt;/code&gt;</ept> is of type <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>clause</code> is of type <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, `false`."}],"pos":[27244,27483],"yaml":true},{"content":"<code>clause</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;clause&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>clause</code> is `null`."}],"pos":[27677,27708],"yaml":true},{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.","nodes":[{"pos":[0,163],"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.","nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.","pos":[0,163]}]}],"pos":[28962,29126],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted.","nodes":[{"pos":[0,83],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains a key that is encrypted.","source":"An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted."}],"pos":[29324,29408],"yaml":true},{"content":"The cryptographic algorithm that is used to encrypt the key.","nodes":[{"pos":[0,60],"content":"The cryptographic algorithm that is used to encrypt the key.","nodes":[{"content":"The cryptographic algorithm that is used to encrypt the key.","pos":[0,60]}]}],"pos":[29480,29541],"yaml":true},{"content":"A user-readable name that is associated with the encrypted key.","nodes":[{"pos":[0,63],"content":"A user-readable name that is associated with the encrypted key.","nodes":[{"content":"A user-readable name that is associated with the encrypted key.","pos":[0,63]}]}],"pos":[29611,29675],"yaml":true},{"content":"`true` if the <code>encryptedKey</code>, <code>encryptionMethod</code> and <code>carriedKeyName</code> parameters have the same values returned by the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method and the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> and the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> properties, respectively; otherwise, `false`.","nodes":[{"pos":[0,501],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">encryptedKey</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">encryptionMethod</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">carriedKeyName</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameters have the same values returned by the <ph id=\"ph5\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"&gt;&lt;/xref&gt;</ph> method and the <ph id=\"ph6\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"&gt;&lt;/xref&gt;</ph> and the <ph id=\"ph7\">&lt;xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"&gt;&lt;/xref&gt;</ph> properties, respectively; otherwise, <ph id=\"ph8\">`false`</ph>.","source":"`true` if the <code>encryptedKey</code>, <code>encryptionMethod</code> and <code>carriedKeyName</code> parameters have the same values returned by the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method and the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> and the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> properties, respectively; otherwise, `false`."}],"pos":[29733,30237],"yaml":true},{"content":"Returns a string that represents the current object.","nodes":[{"pos":[0,52],"content":"Returns a string that represents the current object.","nodes":[{"content":"Returns a string that represents the current object.","pos":[0,52]}]}],"pos":[31397,31450],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.","nodes":[{"pos":[0,200],"content":"The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A&gt;</ph> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.","pos":[0,200],"source":"The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key."}]}],"pos":[31461,31662],"yaml":true,"extradata":"MT"},{"content":"The current object.","nodes":[{"pos":[0,19],"content":"The current object.","nodes":[{"content":"The current object.","pos":[0,19]}]}],"pos":[31797,31817],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  commentId: T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  id: EncryptedKeyIdentifierClause\n  children:\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString\n  langs:\n  - csharp\n  name: EncryptedKeyIdentifierClause\n  nameWithType: EncryptedKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a key identifier clause that identifies an encrypted key.\n  remarks: \"Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key. The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.  \\n  \\n [!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts wrapped keys that are well formed with respect to the wire format. The key wrap algorithm specified on the wire is accepted and used. It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint.\"\n  syntax:\n    content: 'public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)\n  id: '#ctor(System.Byte[],System.String)'\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: EncryptedKeyIdentifierClause(Byte[], String)\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String)\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.\n  remarks: Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.\n  syntax:\n    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);\n    parameters:\n    - id: encryptedKey\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.\n    - id: encryptionMethod\n      type: System.String\n      description: The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>encryptionMethod</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>encryptedKey</code> is `null`.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>encryptedKey</code> is zero length.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier)\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier)\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.\n  remarks: Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.\n  syntax:\n    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier);\n    parameters:\n    - id: encryptedKey\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.\n    - id: encryptionMethod\n      type: System.String\n      description: The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.\n    - id: encryptingKeyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: ''\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>encryptionMethod</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>encryptedKey</code> is `null`.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>encryptedKey</code> is zero length.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)\n  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)'\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String)\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String)\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.\n  remarks: Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.\n  syntax:\n    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName);\n    parameters:\n    - id: encryptedKey\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.\n    - id: encryptionMethod\n      type: System.String\n      description: The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.\n    - id: encryptingKeyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: ''\n    - id: carriedKeyName\n      type: System.String\n      description: A user-readable name that is associated with the key specified in the <code>encryptedKey</code> parameter. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> property.\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>encryptionMethod</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>encryptedKey</code> is `null`.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>encryptedKey</code> is zero length.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)\n  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)'\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String, Byte[], Int32)\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String, Byte[], Int32)\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String, Byte[], Int32)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.\n  remarks: \"When the `derivationNonce` and `derivationLength` parameters are specified the implied derived key is used instead of the direct security key of the token.  \\n  \\n Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.\"\n  syntax:\n    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);\n    parameters:\n    - id: encryptedKey\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted. Sets the value that is returned from the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method.\n    - id: encryptionMethod\n      type: System.String\n      description: The cryptographic algorithm that is used to encrypt the key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> property.\n    - id: encryptingKeyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: ''\n    - id: carriedKeyName\n      type: System.String\n      description: A user-readable name that is associated with the key specified in the <code>encryptedKey</code> parameter. Sets the value of the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> property.\n    - id: derivationNonce\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"></xref> method.\n    - id: derivationLength\n      type: System.Int32\n      description: The size of the derived key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"></xref> property.\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>encryptionMethod</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>encryptedKey</code> is `null`.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>encryptedKey</code> is zero length.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\n  commentId: P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\n  id: CarriedKeyName\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: CarriedKeyName\n  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName\n  fullName: EncryptedKeyIdentifierClause.CarriedKeyName\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a user-readable name that is associated with the encrypted key.\n  remarks: When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element. For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value. This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element. The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document. The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document.\n  syntax:\n    content: public string CarriedKeyName { get; }\n    return:\n      type: System.String\n      description: A user-readable name that is associated with the encrypted key.\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  commentId: P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  id: EncryptingKeyIdentifier\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: EncryptingKeyIdentifier\n  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  fullName: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a key identifier for the encrypting key.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> that represents the key identifier for the encrypting key.\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\n  commentId: P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\n  id: EncryptionMethod\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: EncryptionMethod\n  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod\n  fullName: EncryptedKeyIdentifierClause.EncryptionMethod\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the cryptographic algorithm that is used to encrypt the key.\n  remarks: Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class.\n  syntax:\n    content: public string EncryptionMethod { get; }\n    return:\n      type: System.String\n      description: The cryptographic algorithm that is used to encrypt the key.\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\n  id: GetEncryptedKey\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: GetEncryptedKey()\n  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()\n  fullName: EncryptedKeyIdentifierClause.GetEncryptedKey()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the encrypted key.\n  remarks: The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key.\n  syntax:\n    content: public byte[] GetEncryptedKey ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(SecurityKeyIdentifierClause)\n  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  fullName: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.\n  syntax:\n    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>clause</code> is of type <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\"></xref> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>clause</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)\n  id: Matches(System.Byte[],System.String,System.String)\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(Byte[], String, String)\n  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[], String, String)\n  fullName: EncryptedKeyIdentifierClause.Matches(Byte[], String, String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.\n  syntax:\n    content: public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);\n    parameters:\n    - id: encryptedKey\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains a key that is encrypted.\n    - id: encryptionMethod\n      type: System.String\n      description: The cryptographic algorithm that is used to encrypt the key.\n    - id: carriedKeyName\n      type: System.String\n      description: A user-readable name that is associated with the encrypted key.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>encryptedKey</code>, <code>encryptionMethod</code> and <code>carriedKeyName</code> parameters have the same values returned by the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\"></xref> method and the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\"></xref> and the <xref href=\"System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\"></xref> properties, respectively; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString\n  commentId: M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString\n  id: ToString\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: EncryptedKeyIdentifierClause.ToString()\n  fullName: EncryptedKeyIdentifierClause.ToString()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a string that represents the current object.\n  remarks: The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The current object.\n  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: BinaryKeyIdentifierClause\n  nameWithType: BinaryKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptedKeyIdentifierClause(Byte[], String)\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String)\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier)\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier)\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String)\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String)\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String)\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String, Byte[], Int32)\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String, Byte[], Int32)\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[], String, SecurityKeyIdentifier, String, Byte[], Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: CarriedKeyName\n  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName\n  fullName: EncryptedKeyIdentifierClause.CarriedKeyName\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptingKeyIdentifier\n  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  fullName: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptionMethod\n  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod\n  fullName: EncryptedKeyIdentifierClause.EncryptionMethod\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: GetEncryptedKey()\n  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()\n  fullName: EncryptedKeyIdentifierClause.GetEncryptedKey()\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: Matches(SecurityKeyIdentifierClause)\n  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  fullName: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[], String, String)\n  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[], String, String)\n  fullName: EncryptedKeyIdentifierClause.Matches(Byte[], String, String)\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: ToString()\n  nameWithType: EncryptedKeyIdentifierClause.ToString()\n  fullName: EncryptedKeyIdentifierClause.ToString()\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptedKeyIdentifierClause\n  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause\n  fullName: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: CarriedKeyName\n  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName\n  fullName: EncryptedKeyIdentifierClause.CarriedKeyName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptingKeyIdentifier\n  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  fullName: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: EncryptionMethod\n  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod\n  fullName: EncryptedKeyIdentifierClause.EncryptionMethod\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: GetEncryptedKey\n  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey\n  fullName: EncryptedKeyIdentifierClause.GetEncryptedKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: Matches\n  nameWithType: EncryptedKeyIdentifierClause.Matches\n  fullName: EncryptedKeyIdentifierClause.Matches\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*\n  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  isExternal: false\n  name: ToString\n  nameWithType: EncryptedKeyIdentifierClause.ToString\n  fullName: EncryptedKeyIdentifierClause.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/EncryptedKeyIdentifierClause.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: CanCreateKey\n  nameWithType: SecurityKeyIdentifierClause.CanCreateKey\n  fullName: SecurityKeyIdentifierClause.CanCreateKey\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: ClauseType\n  nameWithType: SecurityKeyIdentifierClause.ClauseType\n  fullName: SecurityKeyIdentifierClause.ClauseType\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: CreateKey()\n  nameWithType: SecurityKeyIdentifierClause.CreateKey()\n  fullName: SecurityKeyIdentifierClause.CreateKey()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: DerivationLength\n  nameWithType: SecurityKeyIdentifierClause.DerivationLength\n  fullName: SecurityKeyIdentifierClause.DerivationLength\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: GetDerivationNonce()\n  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()\n  fullName: SecurityKeyIdentifierClause.GetDerivationNonce()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: Id\n  nameWithType: SecurityKeyIdentifierClause.Id\n  fullName: SecurityKeyIdentifierClause.Id\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer()\n  fullName: BinaryKeyIdentifierClause.GetBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetRawBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()\n  fullName: BinaryKeyIdentifierClause.GetRawBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[])\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[])\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[], Int32)\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n"}