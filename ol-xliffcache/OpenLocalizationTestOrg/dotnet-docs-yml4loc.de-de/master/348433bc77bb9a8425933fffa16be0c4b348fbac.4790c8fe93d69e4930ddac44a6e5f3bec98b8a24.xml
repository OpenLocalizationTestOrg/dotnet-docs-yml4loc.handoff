{"nodes":[{"content":"Converts between a string and the standard infinite <xref href=\"System.TimeSpan\"></xref> value.","nodes":[{"pos":[0,95],"content":"Converts between a string and the standard infinite <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> value.","source":"Converts between a string and the standard infinite <xref href=\"System.TimeSpan\"></xref> value."}],"pos":[874,970],"yaml":true},{"content":"This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.  \n  \n In particular the <xref:System.Configuration.InfiniteTimeSpanConverter> converts the <xref:System.String> value \"infinite\" assigned to a configuration property to the standard infinite <xref:System.TimeSpan> and vice versa. The infinite <xref:System.TimeSpan> value is represented by the <xref:System.TimeSpan.MaxValue> enumeration value.  \n  \n This converter is used with <xref:System.TimeSpan> properties. An infinite value is persisted as the \"infinite\" string.","nodes":[{"pos":[0,160],"content":"This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.","nodes":[{"content":"This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.","pos":[0,160]}]},{"pos":[167,505],"content":"In particular the <xref:System.Configuration.InfiniteTimeSpanConverter> converts the <xref:System.String> value \"infinite\" assigned to a configuration property to the standard infinite <xref:System.TimeSpan> and vice versa. The infinite <xref:System.TimeSpan> value is represented by the <xref:System.TimeSpan.MaxValue> enumeration value.","nodes":[{"content":"In particular the <xref:System.Configuration.InfiniteTimeSpanConverter> converts the <xref:System.String> value \"infinite\" assigned to a configuration property to the standard infinite <xref:System.TimeSpan> and vice versa. The infinite <xref:System.TimeSpan> value is represented by the <xref:System.TimeSpan.MaxValue> enumeration value.","pos":[0,338],"nodes":[{"content":"In particular the <ph id=\"ph1\">&lt;xref:System.Configuration.InfiniteTimeSpanConverter&gt;</ph> converts the <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> value \"infinite\" assigned to a configuration property to the standard infinite <ph id=\"ph3\">&lt;xref:System.TimeSpan&gt;</ph> and vice versa.","pos":[0,223],"source":"In particular the <xref:System.Configuration.InfiniteTimeSpanConverter> converts the <xref:System.String> value \"infinite\" assigned to a configuration property to the standard infinite <xref:System.TimeSpan> and vice versa."},{"content":"The infinite <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> value is represented by the <ph id=\"ph2\">&lt;xref:System.TimeSpan.MaxValue&gt;</ph> enumeration value.","pos":[224,338],"source":" The infinite <xref:System.TimeSpan> value is represented by the <xref:System.TimeSpan.MaxValue> enumeration value."}]}]},{"pos":[512,631],"content":"This converter is used with <xref:System.TimeSpan> properties. An infinite value is persisted as the \"infinite\" string.","nodes":[{"content":"This converter is used with <xref:System.TimeSpan> properties. An infinite value is persisted as the \"infinite\" string.","pos":[0,119],"nodes":[{"content":"This converter is used with <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> properties.","pos":[0,62],"source":"This converter is used with <xref:System.TimeSpan> properties."},{"content":"An infinite value is persisted as the \"infinite\" string.","pos":[63,119]}]}]}],"pos":[981,1623],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.InfiniteTimeSpanConverter\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.InfiniteTimeSpanConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.InfiniteTimeSpanConverter\"></xref> class."}],"pos":[8732,8841],"yaml":true},{"content":"Normally, you use the converter types provided by the system. The only time you need to use the <xref:System.Configuration.InfiniteTimeSpanConverter.%23ctor%2A> constructor is when you create your own conversion type.","nodes":[{"pos":[0,217],"content":"Normally, you use the converter types provided by the system. The only time you need to use the <xref:System.Configuration.InfiniteTimeSpanConverter.%23ctor%2A> constructor is when you create your own conversion type.","nodes":[{"content":"Normally, you use the converter types provided by the system. The only time you need to use the <xref:System.Configuration.InfiniteTimeSpanConverter.%23ctor%2A> constructor is when you create your own conversion type.","pos":[0,217],"nodes":[{"content":"Normally, you use the converter types provided by the system.","pos":[0,61]},{"content":"The only time you need to use the <ph id=\"ph1\">&lt;xref:System.Configuration.InfiniteTimeSpanConverter.%23ctor%2A&gt;</ph> constructor is when you create your own conversion type.","pos":[62,217],"source":" The only time you need to use the <xref:System.Configuration.InfiniteTimeSpanConverter.%23ctor%2A> constructor is when you create your own conversion type."}]}]}],"pos":[8852,9070],"yaml":true,"extradata":"MT"},{"content":"Converts a <xref href=\"System.String\"></xref> to a <xref href=\"System.TimeSpan\"></xref>.","nodes":[{"pos":[0,88],"content":"Converts a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to a <ph id=\"ph2\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph>.","source":"Converts a <xref href=\"System.String\"></xref> to a <xref href=\"System.TimeSpan\"></xref>."}],"pos":[10747,10836],"yaml":true},{"content":"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom%2A> method when reading from a configuration file to convert a <xref:System.String> value to <xref:System.TimeSpan> or the <xref:System.String> \"infinite\" to <xref:System.TimeSpan.MaxValue>.","nodes":[{"pos":[0,275],"content":"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom%2A> method when reading from a configuration file to convert a <xref:System.String> value to <xref:System.TimeSpan> or the <xref:System.String> \"infinite\" to <xref:System.TimeSpan.MaxValue>.","nodes":[{"content":"The system uses the <ph id=\"ph1\">&lt;xref:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom%2A&gt;</ph> method when reading from a configuration file to convert a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> value to <ph id=\"ph3\">&lt;xref:System.TimeSpan&gt;</ph> or the <ph id=\"ph4\">&lt;xref:System.String&gt;</ph> \"infinite\" to <ph id=\"ph5\">&lt;xref:System.TimeSpan.MaxValue&gt;</ph>.","pos":[0,275],"source":"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom%2A> method when reading from a configuration file to convert a <xref:System.String> value to <xref:System.TimeSpan> or the <xref:System.String> \"infinite\" to <xref:System.TimeSpan.MaxValue>."}]}],"pos":[10847,11123],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> object used for type conversions.","source":"The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions."}],"pos":[11389,11493],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object used during conversion.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object used during conversion.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object used during conversion."}],"pos":[11570,11659],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> object to convert.","nodes":[{"pos":[0,57],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> object to convert.","source":"The <xref href=\"System.String\"></xref> object to convert."}],"pos":[11719,11777],"yaml":true},{"content":"The <xref href=\"System.TimeSpan.MaxValue\"></xref>, if the <code>data</code> parameter is the <xref href=\"System.String\"></xref> infinite; otherwise, the <xref href=\"System.TimeSpan\"></xref> representing the <code>data</code> parameter in minutes.","nodes":[{"pos":[0,246],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan.MaxValue\"&gt;&lt;/xref&gt;</ph>, if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the <ph id=\"ph3\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> infinite; otherwise, the <ph id=\"ph4\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> representing the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">data</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter in minutes.","source":"The <xref href=\"System.TimeSpan.MaxValue\"></xref>, if the <code>data</code> parameter is the <xref href=\"System.String\"></xref> infinite; otherwise, the <xref href=\"System.TimeSpan\"></xref> representing the <code>data</code> parameter in minutes."}],"pos":[11834,12081],"yaml":true},{"content":"Converts a <xref href=\"System.TimeSpan\"></xref> to a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,88],"content":"Converts a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> to a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Converts a <xref href=\"System.TimeSpan\"></xref> to a <xref href=\"System.String\"></xref>."}],"pos":[13727,13816],"yaml":true},{"content":"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A> method when writing an attribute to a configuration file to convert a <xref:System.TimeSpan> object to a <xref:System.String> object.  \n  \n The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A> method when writing to a configuration file to convert a <xref:System.TimeSpan> value or <xref:System.TimeSpan.MaxValue> to a <xref:System.String>.","nodes":[{"pos":[0,220],"content":"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A> method when writing an attribute to a configuration file to convert a <xref:System.TimeSpan> object to a <xref:System.String> object.","nodes":[{"content":"The system uses the <ph id=\"ph1\">&lt;xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A&gt;</ph> method when writing an attribute to a configuration file to convert a <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> object to a <ph id=\"ph3\">&lt;xref:System.String&gt;</ph> object.","pos":[0,220],"source":"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A> method when writing an attribute to a configuration file to convert a <xref:System.TimeSpan> object to a <xref:System.String> object."}]},{"pos":[227,461],"content":"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A> method when writing to a configuration file to convert a <xref:System.TimeSpan> value or <xref:System.TimeSpan.MaxValue> to a <xref:System.String>.","nodes":[{"content":"The system uses the <ph id=\"ph1\">&lt;xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A&gt;</ph> method when writing to a configuration file to convert a <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> value or <ph id=\"ph3\">&lt;xref:System.TimeSpan.MaxValue&gt;</ph> to a <ph id=\"ph4\">&lt;xref:System.String&gt;</ph>.","pos":[0,234],"source":"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A> method when writing to a configuration file to convert a <xref:System.TimeSpan> value or <xref:System.TimeSpan.MaxValue> to a <xref:System.String>."}]}],"pos":[13827,14293],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> object used for type conversions.","source":"The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions."}],"pos":[14569,14673],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> used during object conversion.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> used during object conversion.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> used during object conversion."}],"pos":[14750,14839],"yaml":true},{"content":"The value to convert.","nodes":[{"pos":[0,21],"content":"The value to convert.","nodes":[{"content":"The value to convert.","pos":[0,21]}]}],"pos":[14900,14922],"yaml":true},{"content":"The conversion type.","nodes":[{"pos":[0,20],"content":"The conversion type.","nodes":[{"content":"The conversion type.","pos":[0,20]}]}],"pos":[14980,15001],"yaml":true},{"content":"The <xref href=\"System.String\"></xref> \"infinite\", if the <code>value</code> parameter is <xref href=\"System.TimeSpan.MaxValue\"></xref>; otherwise, the <xref href=\"System.String\"></xref> representing the <code>value</code> parameter in minutes.","nodes":[{"pos":[0,244],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> \"infinite\", if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">&lt;xref href=\"System.TimeSpan.MaxValue\"&gt;&lt;/xref&gt;</ph>; otherwise, the <ph id=\"ph4\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representing the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter in minutes.","source":"The <xref href=\"System.String\"></xref> \"infinite\", if the <code>value</code> parameter is <xref href=\"System.TimeSpan.MaxValue\"></xref>; otherwise, the <xref href=\"System.String\"></xref> representing the <code>value</code> parameter in minutes."}],"pos":[15058,15303],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.InfiniteTimeSpanConverter\n  commentId: T:System.Configuration.InfiniteTimeSpanConverter\n  id: InfiniteTimeSpanConverter\n  children:\n  - System.Configuration.InfiniteTimeSpanConverter.#ctor\n  - System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: InfiniteTimeSpanConverter\n  nameWithType: InfiniteTimeSpanConverter\n  fullName: System.Configuration.InfiniteTimeSpanConverter\n  type: Class\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Converts between a string and the standard infinite <xref href=\"System.TimeSpan\"></xref> value.\n  remarks: \"This type, like all the other configuration converter types, converts strings found in the configuration file to and from the related strongly typed properties.  \\n  \\n In particular the <xref:System.Configuration.InfiniteTimeSpanConverter> converts the <xref:System.String> value \\\"infinite\\\" assigned to a configuration property to the standard infinite <xref:System.TimeSpan> and vice versa. The infinite <xref:System.TimeSpan> value is represented by the <xref:System.TimeSpan.MaxValue> enumeration value.  \\n  \\n This converter is used with <xref:System.TimeSpan> properties. An infinite value is persisted as the \\\"infinite\\\" string.\"\n  example:\n  - \"The following code example shows how to define a custom section property that uses the <xref:System.Configuration.InfiniteTimeSpanConverter> class.  \\n  \\n For the complete example code that implements the custom section, refer to the <xref:System.Configuration.ConfigurationConverterBase> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationConvertersCustomSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationConvertersCustomSection/CS/ConfigurationConvertersCustomSection.cs#3)]\\n [!code-vb[System.Configuration.ConfigurationConvertersCustomSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationConvertersCustomSection/VB/ConfigurationConvertersCustomSection.vb#3)]  \\n  \\n The following example code shows how to access the previous custom section property.  \\n  \\n [!code-csharp[System.Configuration.InfiniteTimeSpanConverter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.InfiniteTimeSpanConverter/CS/InfiniteTimeSpanConverter.cs#1)]\\n [!code-vb[System.Configuration.InfiniteTimeSpanConverter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.InfiniteTimeSpanConverter/VB/InfiniteTimeSpanConverter.vb#1)]  \\n  \\n The following is a configuration excerpt as used by the previous example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n  <configSections>  \\n    <section name=\\\"CustomSection\\\"   \\n      type=\\\"Samples.AspNet.CustomSection,   \\n      ConfigurationConverters,   \\n      Version=1.0.0.0, Culture=neutral,   \\n      PublicKeyToken=null\\\"   \\n      allowDefinition=\\\"Everywhere\\\"   \\n      allowExeDefinition=\\\"MachineToApplication\\\"   \\n      restartOnExternalChanges=\\\"true\\\" />  \\n    </configSections>  \\n    <CustomSection fileName=\\\"default.txt\\\" maxIdleTime=\\\"90\\\" timeDelay=\\\"infinite\\\"/>  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public sealed class InfiniteTimeSpanConverter : System.Configuration.ConfigurationConverterBase'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  - System.Configuration.ConfigurationConverterBase\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/InfiniteTimeSpanConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.InfiniteTimeSpanConverter.#ctor\n  commentId: M:System.Configuration.InfiniteTimeSpanConverter.#ctor\n  id: '#ctor'\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  langs:\n  - csharp\n  name: InfiniteTimeSpanConverter()\n  nameWithType: InfiniteTimeSpanConverter.InfiniteTimeSpanConverter()\n  fullName: InfiniteTimeSpanConverter.InfiniteTimeSpanConverter()\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.InfiniteTimeSpanConverter\"></xref> class.\n  remarks: Normally, you use the converter types provided by the system. The only time you need to use the <xref:System.Configuration.InfiniteTimeSpanConverter.%23ctor%2A> constructor is when you create your own conversion type.\n  syntax:\n    content: public InfiniteTimeSpanConverter ();\n    parameters: []\n  overload: System.Configuration.InfiniteTimeSpanConverter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/InfiniteTimeSpanConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: InfiniteTimeSpanConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: InfiniteTimeSpanConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Converts a <xref href=\"System.String\"></xref> to a <xref href=\"System.TimeSpan\"></xref>.\n  remarks: The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom%2A> method when reading from a configuration file to convert a <xref:System.String> value to <xref:System.TimeSpan> or the <xref:System.String> \"infinite\" to <xref:System.TimeSpan.MaxValue>.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);\n    parameters:\n    - id: ctx\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions.\n    - id: ci\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> object used during conversion.\n    - id: data\n      type: System.Object\n      description: The <xref href=\"System.String\"></xref> object to convert.\n    return:\n      type: System.Object\n      description: The <xref href=\"System.TimeSpan.MaxValue\"></xref>, if the <code>data</code> parameter is the <xref href=\"System.String\"></xref> infinite; otherwise, the <xref href=\"System.TimeSpan\"></xref> representing the <code>data</code> parameter in minutes.\n  overload: System.Configuration.InfiniteTimeSpanConverter.ConvertFrom*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/InfiniteTimeSpanConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: InfiniteTimeSpanConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: InfiniteTimeSpanConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Converts a <xref href=\"System.TimeSpan\"></xref> to a <xref href=\"System.String\"></xref>.\n  remarks: \"The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A> method when writing an attribute to a configuration file to convert a <xref:System.TimeSpan> object to a <xref:System.String> object.  \\n  \\n The system uses the <xref:System.Configuration.InfiniteTimeSpanConverter.ConvertTo%2A> method when writing to a configuration file to convert a <xref:System.TimeSpan> value or <xref:System.TimeSpan.MaxValue> to a <xref:System.String>.\"\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);\n    parameters:\n    - id: ctx\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions.\n    - id: ci\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> used during object conversion.\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    - id: type\n      type: System.Type\n      description: The conversion type.\n    return:\n      type: System.Object\n      description: The <xref href=\"System.String\"></xref> \"infinite\", if the <code>value</code> parameter is <xref href=\"System.TimeSpan.MaxValue\"></xref>; otherwise, the <xref href=\"System.String\"></xref> representing the <code>value</code> parameter in minutes.\n  overload: System.Configuration.InfiniteTimeSpanConverter.ConvertTo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/InfiniteTimeSpanConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.ConfigurationConverterBase\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationConverterBase\n  nameWithType: ConfigurationConverterBase\n  fullName: System.Configuration.ConfigurationConverterBase\n- uid: System.Configuration.InfiniteTimeSpanConverter.#ctor\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  isExternal: false\n  name: InfiniteTimeSpanConverter()\n  nameWithType: InfiniteTimeSpanConverter.InfiniteTimeSpanConverter()\n  fullName: InfiniteTimeSpanConverter.InfiniteTimeSpanConverter()\n- uid: System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: InfiniteTimeSpanConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: InfiniteTimeSpanConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: InfiniteTimeSpanConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: InfiniteTimeSpanConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.InfiniteTimeSpanConverter.#ctor*\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  isExternal: false\n  name: InfiniteTimeSpanConverter\n  nameWithType: InfiniteTimeSpanConverter.InfiniteTimeSpanConverter\n  fullName: InfiniteTimeSpanConverter.InfiniteTimeSpanConverter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/InfiniteTimeSpanConverter.xml\n- uid: System.Configuration.InfiniteTimeSpanConverter.ConvertFrom*\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: InfiniteTimeSpanConverter.ConvertFrom\n  fullName: InfiniteTimeSpanConverter.ConvertFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/InfiniteTimeSpanConverter.xml\n- uid: System.Configuration.InfiniteTimeSpanConverter.ConvertTo*\n  parent: System.Configuration.InfiniteTimeSpanConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: InfiniteTimeSpanConverter.ConvertTo\n  fullName: InfiniteTimeSpanConverter.ConvertTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/InfiniteTimeSpanConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}