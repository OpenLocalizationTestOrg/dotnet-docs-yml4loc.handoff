<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab82559c8e4e271426a97c099d5efae95759f99c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.DataGridViewDataErrorEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d62feef8d921217b403137f65ed7e67f8d07ddd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d7deab63da1e6bb73482687e4d5ec5554d55804</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event lets you handle exceptions thrown by code outside your control (for example, by an external data source).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A&gt;</ph> property to determine the state of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> at the time of the exception.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A&gt;</ph> property to retrieve the exception data.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to handle the exception by additional event handlers, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A&gt;</ph> properties normally indicate the cell in which the data error occurred.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the error occurs in an external data source, however, the data source may not provide the column in which the error occurred.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A&gt;</ph> property typically indicates the column of the current cell at the time of the error.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The exception that occurred.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The column index of the cell that raised the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The row index of the cell that raised the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values indicating the context in which the error occurred.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets details about the state of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> when the error occurred.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Members of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts&gt;</ph> enumeration may be combined using the bitwise <ph id="ph2">`OR`</ph> operator to represent the state of a data-bound <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> when a data error occurred.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a user enters an invalid cell value (such as entering a name in a cell that requires a date) and then selects a different cell, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> will try to commit the invalid cell value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the commit fails, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> will raise a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event whose <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A&gt;</ph> property will have a value of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.CurrentCellChange&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values that specifies the context in which the error occurred.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the exception that represents the error.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To handle the exception by more than one <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventHandler&gt;</ph>, throw the exception again at the end of a handler by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> that represents the error.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to throw the exception after the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventHandler"&gt;&lt;/xref&gt;</ph> delegate is finished with it.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to <ph id="ph1">`false`</ph> if the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventHandler&gt;</ph> has dealt with the exception represented by the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A&gt;</ph> property, and you do not want to propagate the exception to another <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventHandler&gt;</ph> that may handle the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For debugging purposes, it can be useful to propagate the exception and inspect the stack trace for information regarding the context of the error.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the exception should be thrown; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When setting this property to <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception"&gt;&lt;/xref&gt;</ph> property value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>