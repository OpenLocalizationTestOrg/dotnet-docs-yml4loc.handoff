{"nodes":[{"content":"Represents an exception whose state is captured at a certain point in code.","nodes":[{"pos":[0,75],"content":"Represents an exception whose state is captured at a certain point in code.","nodes":[{"content":"Represents an exception whose state is captured at a certain point in code.","pos":[0,75]}]}],"pos":[804,880],"yaml":true},{"content":"The <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object stores the stack trace information and Watson information that the exception contains at the point where it is captured. The exception can be thrown at another time and possibly on another thread by calling the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=fullName> method. The exception is thrown as if it had flowed from the point where it was captured to the point where the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method is called.  \n  \n <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> cannot be serialized and is not intended to cross application domain boundaries.","nodes":[{"pos":[0,580],"content":"The <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object stores the stack trace information and Watson information that the exception contains at the point where it is captured. The exception can be thrown at another time and possibly on another thread by calling the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=fullName> method. The exception is thrown as if it had flowed from the point where it was captured to the point where the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method is called.","nodes":[{"content":"The <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object stores the stack trace information and Watson information that the exception contains at the point where it is captured. The exception can be thrown at another time and possibly on another thread by calling the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=fullName> method. The exception is thrown as if it had flowed from the point where it was captured to the point where the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method is called.","pos":[0,580],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> object stores the stack trace information and Watson information that the exception contains at the point where it is captured.","pos":[0,193],"source":"The <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object stores the stack trace information and Watson information that the exception contains at the point where it is captured."},{"content":"The exception can be thrown at another time and possibly on another thread by calling the <ph id=\"ph1\">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=fullName&gt;</ph> method.","pos":[194,387],"source":" The exception can be thrown at another time and possibly on another thread by calling the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=fullName> method."},{"content":"The exception is thrown as if it had flowed from the point where it was captured to the point where the <ph id=\"ph1\">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> method is called.","pos":[388,580],"source":" The exception is thrown as if it had flowed from the point where it was captured to the point where the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method is called."}]}]},{"pos":[587,729],"content":"<xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> cannot be serialized and is not intended to cross application domain boundaries.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> cannot be serialized and is not intended to cross application domain boundaries.","pos":[0,142],"source":"<xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> cannot be serialized and is not intended to cross application domain boundaries."}]}],"pos":[891,1625],"yaml":true,"extradata":"MT"},{"content":"Creates an <xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\"></xref> object that represents the specified exception at the current point in code.","nodes":[{"pos":[0,163],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\"&gt;&lt;/xref&gt;</ph> object that represents the specified exception at the current point in code.","source":"Creates an <xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\"></xref> object that represents the specified exception at the current point in code."}],"pos":[3701,3865],"yaml":true},{"content":"You can use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.  \n  \n If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.  If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.","nodes":[{"pos":[0,303],"content":"You can use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.","pos":[0,303],"source":"You can use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown."}]},{"pos":[310,586],"content":"If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.  If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.","nodes":[{"content":"If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.  If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.","pos":[0,276],"nodes":[{"content":"If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.","pos":[0,152]},{"content":"If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.","pos":[154,276]}]}]}],"pos":[3876,4467],"yaml":true,"extradata":"MT"},{"content":"The exception whose state is captured, and which is represented by the returned object.","nodes":[{"pos":[0,87],"content":"The exception whose state is captured, and which is represented by the returned object.","nodes":[{"content":"The exception whose state is captured, and which is represented by the returned object.","pos":[0,87]}]}],"pos":[4668,4756],"yaml":true},{"content":"An object that represents the specified exception at the current point in code.","nodes":[{"pos":[0,79],"content":"An object that represents the specified exception at the current point in code.","nodes":[{"content":"An object that represents the specified exception at the current point in code.","pos":[0,79]}]}],"pos":[4854,4934],"yaml":true},{"content":"<code>source</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>source</code> is `null`."}],"pos":[5118,5149],"yaml":true},{"content":"Gets the exception that is represented by the current instance.","nodes":[{"pos":[0,63],"content":"Gets the exception that is represented by the current instance.","nodes":[{"content":"Gets the exception that is represented by the current instance.","pos":[0,63]}]}],"pos":[6779,6843],"yaml":true},{"content":"This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <xref:System.AggregateException> object. It is not intended to be used by application code. Use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method to restore the state of the captured exception and throw it.","nodes":[{"pos":[0,340],"content":"This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <xref:System.AggregateException> object. It is not intended to be used by application code. Use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method to restore the state of the captured exception and throw it.","nodes":[{"content":"This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <xref:System.AggregateException> object. It is not intended to be used by application code. Use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method to restore the state of the captured exception and throw it.","pos":[0,340],"nodes":[{"content":"This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph> object.","pos":[0,142],"source":"This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <xref:System.AggregateException> object."},{"content":"It is not intended to be used by application code.","pos":[143,193]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> method to restore the state of the captured exception and throw it.","pos":[194,340],"source":" Use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method to restore the state of the captured exception and throw it."}]}]}],"pos":[6854,7195],"yaml":true,"extradata":"MT"},{"content":"The exception that is represented by the current instance.","nodes":[{"pos":[0,58],"content":"The exception that is represented by the current instance.","nodes":[{"content":"The exception that is represented by the current instance.","pos":[0,58]}]}],"pos":[7320,7379],"yaml":true},{"content":"Throws the exception that is represented by the current <xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\"></xref> object, after restoring the state that was saved when the exception was captured.","nodes":[{"pos":[0,213],"content":"Throws the exception that is represented by the current <ph id=\"ph1\">&lt;xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\"&gt;&lt;/xref&gt;</ph> object, after restoring the state that was saved when the exception was captured.","source":"Throws the exception that is represented by the current <xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\"></xref> object, after restoring the state that was saved when the exception was captured."}],"pos":[9054,9268],"yaml":true},{"content":"When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: \"End of stack trace from the previous location where the exception was thrown\". This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.","nodes":[{"pos":[0,293],"content":"When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: \"End of stack trace from the previous location where the exception was thrown\". This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.","nodes":[{"content":"When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: \"End of stack trace from the previous location where the exception was thrown\". This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.","pos":[0,293],"nodes":[{"content":"When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: \"End of stack trace from the previous location where the exception was thrown\".","pos":[0,194]},{"content":"This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.","pos":[195,293]}]}]}],"pos":[9279,9575],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  commentId: T:System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  id: ExceptionDispatchInfo\n  children:\n  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)\n  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException\n  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\n  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(System.Exception)\n  langs:\n  - csharp\n  name: ExceptionDispatchInfo\n  nameWithType: ExceptionDispatchInfo\n  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.ExceptionServices\n  summary: Represents an exception whose state is captured at a certain point in code.\n  remarks: \"The <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object stores the stack trace information and Watson information that the exception contains at the point where it is captured. The exception can be thrown at another time and possibly on another thread by calling the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=fullName> method. The exception is thrown as if it had flowed from the point where it was captured to the point where the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method is called.  \\n  \\n <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> cannot be serialized and is not intended to cross application domain boundaries.\"\n  syntax:\n    content: public sealed class ExceptionDispatchInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ExceptionServices/ExceptionDispatchInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)\n  commentId: M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)\n  id: Capture(System.Exception)\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  langs:\n  - csharp\n  name: Capture(Exception)\n  nameWithType: ExceptionDispatchInfo.Capture(Exception)\n  fullName: ExceptionDispatchInfo.Capture(Exception)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.ExceptionServices\n  summary: Creates an <xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\"></xref> object that represents the specified exception at the current point in code.\n  remarks: \"You can use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.  \\n  \\n If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.  If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.\"\n  syntax:\n    content: public static System.Runtime.ExceptionServices.ExceptionDispatchInfo Capture (Exception source);\n    parameters:\n    - id: source\n      type: System.Exception\n      description: The exception whose state is captured, and which is represented by the returned object.\n    return:\n      type: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n      description: An object that represents the specified exception at the current point in code.\n  overload: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>source</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ExceptionServices/ExceptionDispatchInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException\n  commentId: P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException\n  id: SourceException\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  langs:\n  - csharp\n  name: SourceException\n  nameWithType: ExceptionDispatchInfo.SourceException\n  fullName: ExceptionDispatchInfo.SourceException\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.ExceptionServices\n  summary: Gets the exception that is represented by the current instance.\n  remarks: This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <xref:System.AggregateException> object. It is not intended to be used by application code. Use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method to restore the state of the captured exception and throw it.\n  syntax:\n    content: public Exception SourceException { get; }\n    return:\n      type: System.Exception\n      description: The exception that is represented by the current instance.\n  overload: System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ExceptionServices/ExceptionDispatchInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\n  commentId: M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\n  id: Throw\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  langs:\n  - csharp\n  name: Throw()\n  nameWithType: ExceptionDispatchInfo.Throw()\n  fullName: ExceptionDispatchInfo.Throw()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.ExceptionServices\n  summary: Throws the exception that is represented by the current <xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\"></xref> object, after restoring the state that was saved when the exception was captured.\n  remarks: 'When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: \"End of stack trace from the previous location where the exception was thrown\". This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.'\n  syntax:\n    content: public void Throw ();\n    parameters: []\n  overload: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ExceptionServices/ExceptionDispatchInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(System.Exception)\n  commentId: M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(System.Exception)\n  id: Throw(System.Exception)\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  langs:\n  - csharp\n  name: Throw(Exception)\n  nameWithType: ExceptionDispatchInfo.Throw(Exception)\n  fullName: ExceptionDispatchInfo.Throw(Exception)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.ExceptionServices\n  syntax:\n    content: public static void Throw (Exception source);\n    parameters:\n    - id: source\n      type: System.Exception\n      description: ''\n  overload: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ExceptionServices/ExceptionDispatchInfo.xml\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  isExternal: false\n  name: Capture(Exception)\n  nameWithType: ExceptionDispatchInfo.Capture(Exception)\n  fullName: ExceptionDispatchInfo.Capture(Exception)\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  parent: System.Runtime.ExceptionServices\n  isExternal: false\n  name: ExceptionDispatchInfo\n  nameWithType: ExceptionDispatchInfo\n  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  isExternal: false\n  name: SourceException\n  nameWithType: ExceptionDispatchInfo.SourceException\n  fullName: ExceptionDispatchInfo.SourceException\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  isExternal: false\n  name: Throw()\n  nameWithType: ExceptionDispatchInfo.Throw()\n  fullName: ExceptionDispatchInfo.Throw()\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(System.Exception)\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  isExternal: false\n  name: Throw(Exception)\n  nameWithType: ExceptionDispatchInfo.Throw(Exception)\n  fullName: ExceptionDispatchInfo.Throw(Exception)\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture*\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  isExternal: false\n  name: Capture\n  nameWithType: ExceptionDispatchInfo.Capture\n  fullName: ExceptionDispatchInfo.Capture\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ExceptionServices/ExceptionDispatchInfo.xml\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException*\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  isExternal: false\n  name: SourceException\n  nameWithType: ExceptionDispatchInfo.SourceException\n  fullName: ExceptionDispatchInfo.SourceException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ExceptionServices/ExceptionDispatchInfo.xml\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw*\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  isExternal: false\n  name: Throw\n  nameWithType: ExceptionDispatchInfo.Throw\n  fullName: ExceptionDispatchInfo.Throw\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ExceptionServices/ExceptionDispatchInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}