{"nodes":[{"content":"Represents the base class from which all implementations of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm inherit.","nodes":[{"pos":[0,136],"content":"Represents the base class from which all implementations of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm inherit.","source":"Represents the base class from which all implementations of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm inherit."}],"pos":[3075,3212],"yaml":true},{"content":"Extending this class proves that you are implementing an `RSA` key. This is required for any developer providing a new `RSA` key implementation.  \n  \n The only purpose of this class is as a hierarchy member for identification of the `RSA` algorithm.  \n  \n The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.","nodes":[{"pos":[0,144],"content":"Extending this class proves that you are implementing an `RSA` key. This is required for any developer providing a new `RSA` key implementation.","nodes":[{"content":"Extending this class proves that you are implementing an <ph id=\"ph1\">`RSA`</ph> key.","pos":[0,67],"source":"Extending this class proves that you are implementing an `RSA` key."},{"content":"This is required for any developer providing a new <ph id=\"ph1\">`RSA`</ph> key implementation.","pos":[68,144],"source":" This is required for any developer providing a new `RSA` key implementation."}]},{"pos":[151,249],"content":"The only purpose of this class is as a hierarchy member for identification of the <ph id=\"ph1\">`RSA`</ph> algorithm.","source":"The only purpose of this class is as a hierarchy member for identification of the `RSA` algorithm."},{"pos":[256,602],"content":"The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.","nodes":[{"content":"The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.","pos":[0,346],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.","pos":[0,206],"source":"The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed."},{"content":"It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.","pos":[208,346]}]}]}],"pos":[3223,3832],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> class."}],"pos":[6402,6497],"yaml":true},{"content":"This is a protected method that can only be called from a class derived from <xref:System.Security.Cryptography.RSA>. You cannot create an instance of an abstract class.","nodes":[{"pos":[0,169],"content":"This is a protected method that can only be called from a class derived from <xref:System.Security.Cryptography.RSA>. You cannot create an instance of an abstract class.","nodes":[{"content":"This is a protected method that can only be called from a class derived from <xref:System.Security.Cryptography.RSA>. You cannot create an instance of an abstract class.","pos":[0,169],"nodes":[{"content":"This is a protected method that can only be called from a class derived from <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>.","pos":[0,117],"source":"This is a protected method that can only be called from a class derived from <xref:System.Security.Cryptography.RSA>."},{"content":"You cannot create an instance of an abstract class.","pos":[118,169]}]}]}],"pos":[6508,6678],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of the default implementation of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm.","nodes":[{"pos":[0,121],"content":"Creates an instance of the default implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"Creates an instance of the default implementation of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm."}],"pos":[8121,8243],"yaml":true},{"content":"A new instance of the default implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.","nodes":[{"pos":[0,102],"content":"A new instance of the default implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"A new instance of the default implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>."}],"pos":[8419,8522],"yaml":true},{"content":"Creates an instance of the specified implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.","nodes":[{"pos":[0,109],"content":"Creates an instance of the specified implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an instance of the specified implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>."}],"pos":[11972,12082],"yaml":true},{"content":"The name of the implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref> to use.","nodes":[{"pos":[0,95],"content":"The name of the implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> to use.","source":"The name of the implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref> to use."}],"pos":[12256,12352],"yaml":true},{"content":"A new instance of the specified implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.","nodes":[{"pos":[0,104],"content":"A new instance of the specified implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"A new instance of the specified implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>."}],"pos":[12428,12533],"yaml":true},{"content":"When overridden in a derived class, decrypts the input data using the specified padding mode.","nodes":[{"pos":[0,93],"content":"When overridden in a derived class, decrypts the input data using the specified padding mode.","nodes":[{"content":"When overridden in a derived class, decrypts the input data using the specified padding mode.","pos":[0,93]}]}],"pos":[14018,14112],"yaml":true},{"content":"The data to decrypt.","nodes":[{"pos":[0,20],"content":"The data to decrypt.","nodes":[{"content":"The data to decrypt.","pos":[0,20]}]}],"pos":[14315,14336],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[14435,14453],"yaml":true},{"content":"The decrypted data.","nodes":[{"pos":[0,19],"content":"The decrypted data.","nodes":[{"content":"The decrypted data.","pos":[0,19]}]}],"pos":[14510,14530],"yaml":true},{"content":"A derived class must override this method.","nodes":[{"pos":[0,42],"content":"A derived class must override this method.","nodes":[{"content":"A derived class must override this method.","pos":[0,42]}]}],"pos":[14704,14747],"yaml":true},{"content":"When overridden in a derived class, decrypts the input data using the private key.","nodes":[{"pos":[0,82],"content":"When overridden in a derived class, decrypts the input data using the private key.","nodes":[{"content":"When overridden in a derived class, decrypts the input data using the private key.","pos":[0,82]}]}],"pos":[16026,16109],"yaml":true},{"content":"In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.","nodes":[{"pos":[0,342],"content":"In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.","nodes":[{"content":"In the <ph id=\"ph1\">[!INCLUDE[net_v452](~/includes/net-v452-md.md)]</ph> and earlier versions of the .NET Framework, this method was <ph id=\"ph2\">`abstract`</ph>.","pos":[0,126],"source":"In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`."},{"content":"However, the only implementation by a derived class, <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName&gt;</ph>, also threw a <ph id=\"ph2\">&lt;xref:System.NotSupportedException&gt;</ph> exception.","pos":[127,342],"source":" However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception."}]}],"pos":[16120,16463],"yaml":true,"extradata":"MT"},{"content":"The cipher text to be decrypted.","nodes":[{"pos":[0,32],"content":"The cipher text to be decrypted.","nodes":[{"content":"The cipher text to be decrypted.","pos":[0,32]}]}],"pos":[16610,16643],"yaml":true},{"content":"The resulting decryption of the <code>rgb</code> parameter in plain text.","nodes":[{"pos":[0,73],"content":"The resulting decryption of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgb</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter in plain text.","source":"The resulting decryption of the <code>rgb</code> parameter in plain text."}],"pos":[16700,16774],"yaml":true},{"content":"This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].","nodes":[{"pos":[0,124],"content":"This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].","nodes":[{"content":"This method call is not supported.","pos":[0,34]},{"content":"This exception is thrown starting with the <ph id=\"ph1\">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>.","pos":[35,124],"source":" This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]."}]}],"pos":[16949,17074],"yaml":true},{"content":"When overridden in a derived class, encrypts the input data using the specified padding mode.","nodes":[{"pos":[0,93],"content":"When overridden in a derived class, encrypts the input data using the specified padding mode.","nodes":[{"content":"When overridden in a derived class, encrypts the input data using the specified padding mode.","pos":[0,93]}]}],"pos":[18489,18583],"yaml":true},{"content":"The data to encrypt.","nodes":[{"pos":[0,20],"content":"The data to encrypt.","nodes":[{"content":"The data to encrypt.","pos":[0,20]}]}],"pos":[18786,18807],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[18906,18924],"yaml":true},{"content":"The encrypted data.","nodes":[{"pos":[0,19],"content":"The encrypted data.","nodes":[{"content":"The encrypted data.","pos":[0,19]}]}],"pos":[18981,19001],"yaml":true},{"content":"A derived class must override this method.","nodes":[{"pos":[0,42],"content":"A derived class must override this method.","nodes":[{"content":"A derived class must override this method.","pos":[0,42]}]}],"pos":[19175,19218],"yaml":true},{"content":"When overridden in a derived class, encrypts the input data using the public key.","nodes":[{"pos":[0,81],"content":"When overridden in a derived class, encrypts the input data using the public key.","nodes":[{"content":"When overridden in a derived class, encrypts the input data using the public key.","pos":[0,81]}]}],"pos":[20497,20579],"yaml":true},{"content":"In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.","nodes":[{"pos":[0,342],"content":"In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.","nodes":[{"content":"In the <ph id=\"ph1\">[!INCLUDE[net_v452](~/includes/net-v452-md.md)]</ph> and earlier versions of the .NET Framework, this method was <ph id=\"ph2\">`abstract`</ph>.","pos":[0,126],"source":"In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`."},{"content":"However, the only implementation by a derived class, <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName&gt;</ph>, also threw a <ph id=\"ph2\">&lt;xref:System.NotSupportedException&gt;</ph> exception.","pos":[127,342],"source":" However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception."}]}],"pos":[20590,20933],"yaml":true,"extradata":"MT"},{"content":"The plain text to be encrypted.","nodes":[{"pos":[0,31],"content":"The plain text to be encrypted.","nodes":[{"content":"The plain text to be encrypted.","pos":[0,31]}]}],"pos":[21080,21112],"yaml":true},{"content":"The resulting encryption of the <code>rgb</code> parameter as cipher text.","nodes":[{"pos":[0,74],"content":"The resulting encryption of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgb</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter as cipher text.","source":"The resulting encryption of the <code>rgb</code> parameter as cipher text."}],"pos":[21169,21244],"yaml":true},{"content":"This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].","nodes":[{"pos":[0,124],"content":"This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].","nodes":[{"content":"This method call is not supported.","pos":[0,34]},{"content":"This exception is thrown starting with the <ph id=\"ph1\">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>.","pos":[35,124],"source":" This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]."}]}],"pos":[21419,21544],"yaml":true},{"content":"When overridden in a derived class, exports the <xref href=\"System.Security.Cryptography.RSAParameters\"></xref>.","nodes":[{"pos":[0,112],"content":"When overridden in a derived class, exports the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSAParameters\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, exports the <xref href=\"System.Security.Cryptography.RSAParameters\"></xref>."}],"pos":[22803,22916],"yaml":true},{"content":"`true` to include private parameters; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> to include private parameters; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include private parameters; otherwise, `false`."}],"pos":[23145,23205],"yaml":true},{"content":"The parameters for <xref href=\"System.Security.Cryptography.DSA\"></xref>.","nodes":[{"pos":[0,73],"content":"The parameters for <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>.","source":"The parameters for <xref href=\"System.Security.Cryptography.DSA\"></xref>."}],"pos":[23291,23365],"yaml":true},{"content":"Initializes an <xref href=\"System.Security.Cryptography.RSA\"></xref> object from the key information from an XML string.","nodes":[{"pos":[0,120],"content":"Initializes an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> object from the key information from an XML string.","source":"Initializes an <xref href=\"System.Security.Cryptography.RSA\"></xref> object from the key information from an XML string."}],"pos":[24864,24985],"yaml":true},{"content":"The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> initializes an RSA object using key information in an XML string that was generated using the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method.  The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method accepts either an XML string containing a public key or an XML string containing a public and private key.  \n  \n Use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method to conveniently initialize <xref:System.Security.Cryptography.RSA> key information.  \n  \n> [!CAUTION]\n>  Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).","nodes":[{"pos":[0,393],"content":"The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> initializes an RSA object using key information in an XML string that was generated using the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method.  The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method accepts either an XML string containing a public key or an XML string containing a public and private key.","nodes":[{"content":"The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> initializes an RSA object using key information in an XML string that was generated using the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method.  The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method accepts either an XML string containing a public key or an XML string containing a public and private key.","pos":[0,393],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> initializes an RSA object using key information in an XML string that was generated using the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method.","pos":[0,217],"source":"The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> initializes an RSA object using key information in an XML string that was generated using the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> method accepts either an XML string containing a public key or an XML string containing a public and private key.","pos":[219,393],"source":"  The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method accepts either an XML string containing a public key or an XML string containing a public and private key."}]}]},{"pos":[400,555],"content":"Use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method to conveniently initialize <xref:System.Security.Cryptography.RSA> key information.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> method to conveniently initialize <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> key information.","pos":[0,155],"source":"Use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method to conveniently initialize <xref:System.Security.Cryptography.RSA> key information."}]},{"pos":[563,1048],"content":"[!CAUTION]\n Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).","leadings":["","> "],"nodes":[{"content":" Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).","pos":[11,483],"nodes":[{"content":"Persisting an XML string containing a private key to an insecure location is a security threat.","pos":[1,96]},{"content":"The security of your application can be compromised if a malicious third party can access your private key.","pos":[98,205]},{"content":"To safely persist a private key, use a secure key container.","pos":[207,267]},{"content":"For more information about persisting private keys in a key container, see <bpt id=\"p1\">[</bpt>How to: Store Asymmetric Keys in a Key Container<ept id=\"p1\">](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)</ept>.","pos":[269,472],"source":"  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)."}]}]}],"pos":[24996,26052],"yaml":true,"extradata":"MT"},{"content":"The XML string containing <xref href=\"System.Security.Cryptography.RSA\"></xref> key information.","nodes":[{"pos":[0,96],"content":"The XML string containing <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> key information.","source":"The XML string containing <xref href=\"System.Security.Cryptography.RSA\"></xref> key information."}],"pos":[26211,26308],"yaml":true},{"content":"The <code>xmlString</code> parameter is `null`.","nodes":[{"pos":[0,47],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlString</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>xmlString</code> parameter is `null`."}],"pos":[26484,26532],"yaml":true},{"content":"The format of the <code>xmlString</code> parameter is not valid.","nodes":[{"pos":[0,64],"content":"The format of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlString</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The format of the <code>xmlString</code> parameter is not valid."}],"pos":[26680,26745],"yaml":true},{"content":"When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.","nodes":[{"pos":[0,138],"content":"When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.","nodes":[{"content":"When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.","pos":[0,138]}]}],"pos":[28268,28407],"yaml":true},{"content":"The data to be hashed.","nodes":[{"pos":[0,22],"content":"The data to be hashed.","nodes":[{"content":"The data to be hashed.","pos":[0,22]}]}],"pos":[28640,28663],"yaml":true},{"content":"The index of the first byte in <code>data</code> that is to be hashed.","nodes":[{"pos":[0,70],"content":"The index of the first byte in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> that is to be hashed.","source":"The index of the first byte in <code>data</code> that is to be hashed."}],"pos":[28724,28795],"yaml":true},{"content":"The number of bytes to hash.","nodes":[{"pos":[0,28],"content":"The number of bytes to hash.","nodes":[{"content":"The number of bytes to hash.","pos":[0,28]}]}],"pos":[28855,28884],"yaml":true},{"content":"The algorithm to use in hash the data.","nodes":[{"pos":[0,38],"content":"The algorithm to use in hash the data.","nodes":[{"content":"The algorithm to use in hash the data.","pos":[0,38]}]}],"pos":[28986,29025],"yaml":true},{"content":"The hashed data.","nodes":[{"pos":[0,16],"content":"The hashed data.","nodes":[{"content":"The hashed data.","pos":[0,16]}]}],"pos":[29082,29099],"yaml":true},{"content":"A derived class must override this method.","nodes":[{"pos":[0,42],"content":"A derived class must override this method.","nodes":[{"content":"A derived class must override this method.","pos":[0,42]}]}],"pos":[29274,29317],"yaml":true},{"content":"When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.","nodes":[{"pos":[0,128],"content":"When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.","nodes":[{"content":"When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.","pos":[0,128]}]}],"pos":[30779,30908],"yaml":true},{"content":"The binary stream to hash.","nodes":[{"pos":[0,26],"content":"The binary stream to hash.","nodes":[{"content":"The binary stream to hash.","pos":[0,26]}]}],"pos":[31131,31158],"yaml":true},{"content":"The hash algorithm.","nodes":[{"pos":[0,19],"content":"The hash algorithm.","nodes":[{"content":"The hash algorithm.","pos":[0,19]}]}],"pos":[31260,31280],"yaml":true},{"content":"The hashed data.","nodes":[{"pos":[0,16],"content":"The hashed data.","nodes":[{"content":"The hashed data.","pos":[0,16]}]}],"pos":[31337,31354],"yaml":true},{"content":"A derived class must override this method.","nodes":[{"pos":[0,42],"content":"A derived class must override this method.","nodes":[{"content":"A derived class must override this method.","pos":[0,42]}]}],"pos":[31529,31572],"yaml":true},{"content":"When overridden in a derived class, imports the specified <xref href=\"System.Security.Cryptography.RSAParameters\"></xref>.","nodes":[{"pos":[0,122],"content":"When overridden in a derived class, imports the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSAParameters\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, imports the specified <xref href=\"System.Security.Cryptography.RSAParameters\"></xref>."}],"pos":[32983,33106],"yaml":true},{"content":"The parameters for <xref href=\"System.Security.Cryptography.RSA\"></xref>.","nodes":[{"pos":[0,73],"content":"The parameters for <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"The parameters for <xref href=\"System.Security.Cryptography.RSA\"></xref>."}],"pos":[33335,33409],"yaml":true},{"content":"Gets the name of the key exchange algorithm available with this implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.","nodes":[{"pos":[0,136],"content":"Gets the name of the key exchange algorithm available with this implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the name of the key exchange algorithm available with this implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>."}],"pos":[34883,35020],"yaml":true},{"content":"Returns \"RSA\".","nodes":[{"pos":[0,14],"content":"Returns \"RSA\".","nodes":[{"content":"Returns \"RSA\".","pos":[0,14]}]}],"pos":[35153,35168],"yaml":true},{"content":"Gets the name of the signature algorithm available with this implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.","nodes":[{"pos":[0,133],"content":"Gets the name of the signature algorithm available with this implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the name of the signature algorithm available with this implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>."}],"pos":[36316,36450],"yaml":true},{"content":"Returns \"RSA\".","nodes":[{"pos":[0,14],"content":"Returns \"RSA\".","nodes":[{"content":"Returns \"RSA\".","pos":[0,14]}]}],"pos":[36581,36596],"yaml":true},{"content":"Computes the hash value of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.","nodes":[{"pos":[0,140],"content":"Computes the hash value of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.","nodes":[{"content":"Computes the hash value of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.","pos":[0,140]}]}],"pos":[38157,38298],"yaml":true},{"content":"The input data for which to compute the hash.","nodes":[{"pos":[0,45],"content":"The input data for which to compute the hash.","nodes":[{"content":"The input data for which to compute the hash.","pos":[0,45]}]}],"pos":[38555,38601],"yaml":true},{"content":"The hash algorithm to use to create the hash value.","nodes":[{"pos":[0,51],"content":"The hash algorithm to use to create the hash value.","nodes":[{"content":"The hash algorithm to use to create the hash value.","pos":[0,51]}]}],"pos":[38703,38755],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[38853,38871],"yaml":true},{"content":"The RSA signature for the specified data.","nodes":[{"pos":[0,41],"content":"The RSA signature for the specified data.","nodes":[{"content":"The RSA signature for the specified data.","pos":[0,41]}]}],"pos":[38928,38970],"yaml":true},{"content":"<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>data</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,77],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[39141,39225],"yaml":true},{"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,154],"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph>","pos":[0,99],"source":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref>"},{"content":"is <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[100,154],"source":" is `null` or <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[39319,39474],"yaml":true},{"content":"Computes the hash value of the specified stream using the specified hash algorithm and padding mode, and signs the resulting hash value.","nodes":[{"pos":[0,136],"content":"Computes the hash value of the specified stream using the specified hash algorithm and padding mode, and signs the resulting hash value.","nodes":[{"content":"Computes the hash value of the specified stream using the specified hash algorithm and padding mode, and signs the resulting hash value.","pos":[0,136]}]}],"pos":[41146,41283],"yaml":true},{"content":"The input stream for which to compute the hash.","nodes":[{"pos":[0,47],"content":"The input stream for which to compute the hash.","nodes":[{"content":"The input stream for which to compute the hash.","pos":[0,47]}]}],"pos":[41561,41609],"yaml":true},{"content":"The hash algorithm to use to create the hash value.","nodes":[{"pos":[0,51],"content":"The hash algorithm to use to create the hash value.","nodes":[{"content":"The hash algorithm to use to create the hash value.","pos":[0,51]}]}],"pos":[41711,41763],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[41861,41879],"yaml":true},{"content":"The RSA signature for the specified data.","nodes":[{"pos":[0,41],"content":"The RSA signature for the specified data.","nodes":[{"content":"The RSA signature for the specified data.","pos":[0,41]}]}],"pos":[41936,41978],"yaml":true},{"content":"<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>data</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,77],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[42149,42233],"yaml":true},{"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,154],"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph>","pos":[0,99],"source":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref>"},{"content":"is <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[100,154],"source":" is `null` or <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[42327,42482],"yaml":true},{"content":"Computes the hash value of a portion of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.","nodes":[{"pos":[0,153],"content":"Computes the hash value of a portion of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.","nodes":[{"content":"Computes the hash value of a portion of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.","pos":[0,153]}]}],"pos":[44265,44419],"yaml":true},{"content":"The input data for which to compute the hash.","nodes":[{"pos":[0,45],"content":"The input data for which to compute the hash.","nodes":[{"content":"The input data for which to compute the hash.","pos":[0,45]}]}],"pos":[44707,44753],"yaml":true},{"content":"The offset into the array at which to begin using data.","nodes":[{"pos":[0,55],"content":"The offset into the array at which to begin using data.","nodes":[{"content":"The offset into the array at which to begin using data.","pos":[0,55]}]}],"pos":[44814,44870],"yaml":true},{"content":"The number of bytes in the array to use as data.","nodes":[{"pos":[0,48],"content":"The number of bytes in the array to use as data.","nodes":[{"content":"The number of bytes in the array to use as data.","pos":[0,48]}]}],"pos":[44930,44979],"yaml":true},{"content":"The hash algorithm to use to create the hash value.","nodes":[{"pos":[0,51],"content":"The hash algorithm to use to create the hash value.","nodes":[{"content":"The hash algorithm to use to create the hash value.","pos":[0,51]}]}],"pos":[45081,45133],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[45231,45249],"yaml":true},{"content":"The RSA signature for the specified data.","nodes":[{"pos":[0,41],"content":"The RSA signature for the specified data.","nodes":[{"content":"The RSA signature for the specified data.","pos":[0,41]}]}],"pos":[45306,45348],"yaml":true},{"content":"<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>data</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,77],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[45519,45603],"yaml":true},{"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,154],"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph>","pos":[0,99],"source":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref>"},{"content":"is <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[100,154],"source":" is `null` or <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[45697,45852],"yaml":true},{"content":"<code>offset</code> is less than zero.  \n  \n -or-  \n  \n <code>count</code> is less than zero.  \n  \n -or-  \n  \n <code>offset</code> + <code>count</code> – 1 results in an index that is beyond the upper bound of <code>data</code>.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than zero.","source":"<code>offset</code> is less than zero."},{"pos":[45,49],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[56,93],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>count</code> is less than zero."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,228],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\"> + &lt;code&gt;count&lt;/code&gt;</ph> – 1 results in an index that is beyond the upper bound of <ph id=\"ph3\">&lt;code&gt;data&lt;/code&gt;</ph>.","source":"<code>offset</code> + <code>count</code> – 1 results in an index that is beyond the upper bound of <code>data</code>."}],"pos":[45966,46205],"yaml":true},{"content":"When overridden in a derived class, computes the signature for the specified hash value by encrypting it with the private key using the specified padding.","nodes":[{"pos":[0,154],"content":"When overridden in a derived class, computes the signature for the specified hash value by encrypting it with the private key using the specified padding.","nodes":[{"content":"When overridden in a derived class, computes the signature for the specified hash value by encrypting it with the private key using the specified padding.","pos":[0,154]}]}],"pos":[47868,48023],"yaml":true},{"content":"The hash value of the data to be signed.","nodes":[{"pos":[0,40],"content":"The hash value of the data to be signed.","nodes":[{"content":"The hash value of the data to be signed.","pos":[0,40]}]}],"pos":[48288,48329],"yaml":true},{"content":"The hash algorithm used to create the hash value of the data.","nodes":[{"pos":[0,61],"content":"The hash algorithm used to create the hash value of the data.","nodes":[{"content":"The hash algorithm used to create the hash value of the data.","pos":[0,61]}]}],"pos":[48431,48493],"yaml":true},{"content":"The padding.","nodes":[{"pos":[0,12],"content":"The padding.","nodes":[{"content":"The padding.","pos":[0,12]}]}],"pos":[48591,48604],"yaml":true},{"content":"The RSA signature for the specified hash value.","nodes":[{"pos":[0,47],"content":"The RSA signature for the specified hash value.","nodes":[{"content":"The RSA signature for the specified hash value.","pos":[0,47]}]}],"pos":[48661,48709],"yaml":true},{"content":"A derived class must override this method.","nodes":[{"pos":[0,42],"content":"A derived class must override this method.","nodes":[{"content":"A derived class must override this method.","pos":[0,42]}]}],"pos":[48884,48927],"yaml":true},{"content":"Creates and returns an XML string containing the key of the current <xref href=\"System.Security.Cryptography.RSA\"></xref> object.","nodes":[{"pos":[0,129],"content":"Creates and returns an XML string containing the key of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates and returns an XML string containing the key of the current <xref href=\"System.Security.Cryptography.RSA\"></xref> object."}],"pos":[50206,50336],"yaml":true},{"content":"The <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method creates an XML string that contains either the public and private key of the current <xref:System.Security.Cryptography.RSA> object or contains only the public key of the current <xref:System.Security.Cryptography.RSA> object.  \n  \n Use the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method whenever you need to conveniently persist RSA key information.  To initialize an <xref:System.Security.Cryptography.RSA> object with the key in an XML string, use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method.  \n  \n> [!CAUTION]\n>  Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).  \n  \n When you pass `true` to the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method, the resulting XML string takes the following form:  \n  \n```  \n<RSAKeyValue>  \n   <Modulus>…</Modulus>  \n   <Exponent>…</Exponent>  \n   <P>…</P>  \n   <Q>…</Q>  \n   <DP>…</DP>  \n   <DQ>…</DQ>  \n   <InverseQ>…</InverseQ>  \n   <D>…</D>  \n</RSAKeyValue>  \n```  \n  \n When you pass `false` to the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method, the resulting XML string takes the following form:  \n  \n```  \n<RSAKeyValue>  \n   <Modulus>…</Modulus>  \n   <Exponent>…</Exponent>  \n</RSAKeyValue>  \n```","nodes":[{"pos":[0,292],"content":"The <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method creates an XML string that contains either the public and private key of the current <xref:System.Security.Cryptography.RSA> object or contains only the public key of the current <xref:System.Security.Cryptography.RSA> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method creates an XML string that contains either the public and private key of the current <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> object or contains only the public key of the current <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> object.","pos":[0,292],"source":"The <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method creates an XML string that contains either the public and private key of the current <xref:System.Security.Cryptography.RSA> object or contains only the public key of the current <xref:System.Security.Cryptography.RSA> object."}]},{"pos":[299,600],"content":"Use the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method whenever you need to conveniently persist RSA key information.  To initialize an <xref:System.Security.Cryptography.RSA> object with the key in an XML string, use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method.","nodes":[{"content":"Use the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method whenever you need to conveniently persist RSA key information.  To initialize an <xref:System.Security.Cryptography.RSA> object with the key in an XML string, use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method.","pos":[0,301],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method whenever you need to conveniently persist RSA key information.","pos":[0,132],"source":"Use the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method whenever you need to conveniently persist RSA key information."},{"content":"To initialize an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> object with the key in an XML string, use the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> method.","pos":[134,301],"source":"  To initialize an <xref:System.Security.Cryptography.RSA> object with the key in an XML string, use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method."}]}]},{"pos":[608,1093],"content":"[!CAUTION]\n Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).","leadings":["","> "],"nodes":[{"content":" Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).","pos":[11,483],"nodes":[{"content":"Persisting an XML string containing a private key to an insecure location is a security threat.","pos":[1,96]},{"content":"The security of your application can be compromised if a malicious third party can access your private key.","pos":[98,205]},{"content":"To safely persist a private key, use a secure key container.","pos":[207,267]},{"content":"For more information about persisting private keys in a key container, see <bpt id=\"p1\">[</bpt>How to: Store Asymmetric Keys in a Key Container<ept id=\"p1\">](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)</ept>.","pos":[269,472],"source":"  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)."}]}]},{"pos":[1100,1241],"content":"When you pass <ph id=\"ph1\">`true`</ph> to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method, the resulting XML string takes the following form:","source":"When you pass `true` to the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method, the resulting XML string takes the following form:"},{"pos":[1452,1594],"content":"When you pass <ph id=\"ph1\">`false`</ph> to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method, the resulting XML string takes the following form:","source":"When you pass `false` to the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method, the resulting XML string takes the following form:"}],"pos":[50347,52075],"yaml":true,"extradata":"MT"},{"content":"`true` to include a public and private RSA key; `false` to include only the public key.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">`true`</ph> to include a public and private RSA key; <ph id=\"ph2\">`false`</ph> to include only the public key.","source":"`true` to include a public and private RSA key; `false` to include only the public key."}],"pos":[52263,52353],"yaml":true},{"content":"An XML string containing the key of the current <xref href=\"System.Security.Cryptography.RSA\"></xref> object.","nodes":[{"pos":[0,109],"content":"An XML string containing the key of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> object.","source":"An XML string containing the key of the current <xref href=\"System.Security.Cryptography.RSA\"></xref> object."}],"pos":[52410,52520],"yaml":true},{"content":"Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and padding, and comparing it to the provided signature.","nodes":[{"pos":[0,205],"content":"Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and padding, and comparing it to the provided signature.","nodes":[{"content":"Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and padding, and comparing it to the provided signature.","pos":[0,205]}]}],"pos":[54406,54612],"yaml":true},{"content":"The signed data.","nodes":[{"pos":[0,16],"content":"The signed data.","nodes":[{"content":"The signed data.","pos":[0,16]}]}],"pos":[54918,54935],"yaml":true},{"content":"The starting index at which to compute the hash.","nodes":[{"pos":[0,48],"content":"The starting index at which to compute the hash.","nodes":[{"content":"The starting index at which to compute the hash.","pos":[0,48]}]}],"pos":[54996,55045],"yaml":true},{"content":"The number of bytes to hash.","nodes":[{"pos":[0,28],"content":"The number of bytes to hash.","nodes":[{"content":"The number of bytes to hash.","pos":[0,28]}]}],"pos":[55105,55134],"yaml":true},{"content":"The signature data to be verified.","nodes":[{"pos":[0,34],"content":"The signature data to be verified.","nodes":[{"content":"The signature data to be verified.","pos":[0,34]}]}],"pos":[55199,55234],"yaml":true},{"content":"The hash algorithm used to create the hash value of the data.","nodes":[{"pos":[0,61],"content":"The hash algorithm used to create the hash value of the data.","nodes":[{"content":"The hash algorithm used to create the hash value of the data.","pos":[0,61]}]}],"pos":[55336,55398],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[55496,55514],"yaml":true},{"content":"`true` if the signature is valid; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the signature is valid; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature is valid; otherwise, `false`."}],"pos":[55572,55628],"yaml":true},{"content":"<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>signature</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>data</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,79],"content":"<ph id=\"ph1\">&lt;code&gt;signature&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>signature</code> is `null`."},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,128],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[55801,55940],"yaml":true},{"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,154],"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph>","pos":[0,99],"source":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref>"},{"content":"is <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[100,154],"source":" is `null` or <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[56034,56189],"yaml":true},{"content":"<code>offset</code> is less than zero.  \n  \n -or-  \n  \n <code>count</code> is less than zero.  \n  \n -or-  \n  \n <code>offset</code> + <code>count</code> – 1 results in an index that is beyond the upper bound of <code>data</code>.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than zero.","source":"<code>offset</code> is less than zero."},{"pos":[45,49],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[56,93],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>count</code> is less than zero."},{"pos":[100,104],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[111,228],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\"> + &lt;code&gt;count&lt;/code&gt;</ph> – 1 results in an index that is beyond the upper bound of <ph id=\"ph3\">&lt;code&gt;data&lt;/code&gt;</ph>.","source":"<code>offset</code> + <code>count</code> – 1 results in an index that is beyond the upper bound of <code>data</code>."}],"pos":[56303,56542],"yaml":true},{"content":"Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and padding, and comparing it to the provided signature.","nodes":[{"pos":[0,186],"content":"Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and padding, and comparing it to the provided signature.","nodes":[{"content":"Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and padding, and comparing it to the provided signature.","pos":[0,186]}]}],"pos":[58283,58470],"yaml":true},{"content":"The signed data.","nodes":[{"pos":[0,16],"content":"The signed data.","nodes":[{"content":"The signed data.","pos":[0,16]}]}],"pos":[58745,58762],"yaml":true},{"content":"The signature data to be verified.","nodes":[{"pos":[0,34],"content":"The signature data to be verified.","nodes":[{"content":"The signature data to be verified.","pos":[0,34]}]}],"pos":[58827,58862],"yaml":true},{"content":"The hash algorithm used to create the hash value of the data.","nodes":[{"pos":[0,61],"content":"The hash algorithm used to create the hash value of the data.","nodes":[{"content":"The hash algorithm used to create the hash value of the data.","pos":[0,61]}]}],"pos":[58964,59026],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[59124,59142],"yaml":true},{"content":"`true` if the signature is valid; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the signature is valid; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature is valid; otherwise, `false`."}],"pos":[59200,59256],"yaml":true},{"content":"<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>signature</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>data</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,79],"content":"<ph id=\"ph1\">&lt;code&gt;signature&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>signature</code> is `null`."},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,128],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[59429,59568],"yaml":true},{"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,154],"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph>","pos":[0,99],"source":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref>"},{"content":"is <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[100,154],"source":" is `null` or <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[59662,59817],"yaml":true},{"content":"Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and padding, and comparing it to the provided signature.","nodes":[{"pos":[0,188],"content":"Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and padding, and comparing it to the provided signature.","nodes":[{"content":"Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and padding, and comparing it to the provided signature.","pos":[0,188]}]}],"pos":[61567,61756],"yaml":true},{"content":"The signed data.","nodes":[{"pos":[0,16],"content":"The signed data.","nodes":[{"content":"The signed data.","pos":[0,16]}]}],"pos":[62044,62061],"yaml":true},{"content":"The signature data to be verified.","nodes":[{"pos":[0,34],"content":"The signature data to be verified.","nodes":[{"content":"The signature data to be verified.","pos":[0,34]}]}],"pos":[62126,62161],"yaml":true},{"content":"The hash algorithm used to create the hash value of the data.","nodes":[{"pos":[0,61],"content":"The hash algorithm used to create the hash value of the data.","nodes":[{"content":"The hash algorithm used to create the hash value of the data.","pos":[0,61]}]}],"pos":[62263,62325],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[62423,62441],"yaml":true},{"content":"`true` if the signature is valid; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the signature is valid; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature is valid; otherwise, `false`."}],"pos":[62499,62555],"yaml":true},{"content":"<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>signature</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>data</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,79],"content":"<ph id=\"ph1\">&lt;code&gt;signature&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>signature</code> is `null`."},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,128],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[62728,62867],"yaml":true},{"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,154],"content":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph>","pos":[0,99],"source":"<code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref>"},{"content":"is <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[100,154],"source":" is `null` or <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[62961,63116],"yaml":true},{"content":"Verifies that a digital signature is valid by determining the hash value in the signature using the specified hash algorithm and padding, and comparing it to the provided hash value.","nodes":[{"pos":[0,182],"content":"Verifies that a digital signature is valid by determining the hash value in the signature using the specified hash algorithm and padding, and comparing it to the provided hash value.","nodes":[{"content":"Verifies that a digital signature is valid by determining the hash value in the signature using the specified hash algorithm and padding, and comparing it to the provided hash value.","pos":[0,182]}]}],"pos":[64857,65040],"yaml":true},{"content":"The hash value of the signed data.","nodes":[{"pos":[0,34],"content":"The hash value of the signed data.","nodes":[{"content":"The hash value of the signed data.","pos":[0,34]}]}],"pos":[65323,65358],"yaml":true},{"content":"The signature data to be verified.","nodes":[{"pos":[0,34],"content":"The signature data to be verified.","nodes":[{"content":"The signature data to be verified.","pos":[0,34]}]}],"pos":[65423,65458],"yaml":true},{"content":"The hash algorithm used to create the hash value.","nodes":[{"pos":[0,49],"content":"The hash algorithm used to create the hash value.","nodes":[{"content":"The hash algorithm used to create the hash value.","pos":[0,49]}]}],"pos":[65560,65610],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[65708,65726],"yaml":true},{"content":"`true` if the signature is valid; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the signature is valid; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature is valid; otherwise, `false`."}],"pos":[65784,65840],"yaml":true},{"content":"A derived class must override this method.","nodes":[{"pos":[0,42],"content":"A derived class must override this method.","nodes":[{"content":"A derived class must override this method.","pos":[0,42]}]}],"pos":[66017,66060],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RSA\n  commentId: T:System.Security.Cryptography.RSA\n  id: RSA\n  children:\n  - System.Security.Cryptography.RSA.#ctor\n  - System.Security.Cryptography.RSA.Create\n  - System.Security.Cryptography.RSA.Create(System.Int32)\n  - System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)\n  - System.Security.Cryptography.RSA.Create(System.String)\n  - System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  - System.Security.Cryptography.RSA.DecryptValue(System.Byte[])\n  - System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  - System.Security.Cryptography.RSA.EncryptValue(System.Byte[])\n  - System.Security.Cryptography.RSA.ExportParameters(System.Boolean)\n  - System.Security.Cryptography.RSA.FromXmlString(System.String)\n  - System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)\n  - System.Security.Cryptography.RSA.KeyExchangeAlgorithm\n  - System.Security.Cryptography.RSA.SignatureAlgorithm\n  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)\n  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  langs:\n  - csharp\n  name: RSA\n  nameWithType: RSA\n  fullName: System.Security.Cryptography.RSA\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Represents the base class from which all implementations of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm inherit.\n  remarks: \"Extending this class proves that you are implementing an `RSA` key. This is required for any developer providing a new `RSA` key implementation.  \\n  \\n The only purpose of this class is as a hierarchy member for identification of the `RSA` algorithm.  \\n  \\n The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class RSA : System.Security.Cryptography.AsymmetricAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricAlgorithm\n  derivedClasses:\n  - System.Security.Cryptography.RSACng\n  - System.Security.Cryptography.RSACryptoServiceProvider\n  - System.Security.Cryptography.RSAOpenSsl\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.#ctor\n  commentId: M:System.Security.Cryptography.RSA.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: RSA()\n  nameWithType: RSA.RSA()\n  fullName: RSA.RSA()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSA\"></xref> class.\n  remarks: This is a protected method that can only be called from a class derived from <xref:System.Security.Cryptography.RSA>. You cannot create an instance of an abstract class.\n  syntax:\n    content: protected RSA ();\n    parameters: []\n  overload: System.Security.Cryptography.RSA.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.Create\n  commentId: M:System.Security.Cryptography.RSA.Create\n  id: Create\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: RSA.Create()\n  fullName: RSA.Create()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of the default implementation of the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.RSA Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.RSA\n      description: A new instance of the default implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.\n  overload: System.Security.Cryptography.RSA.Create*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.Create(System.Int32)\n  commentId: M:System.Security.Cryptography.RSA.Create(System.Int32)\n  id: Create(System.Int32)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: Create(Int32)\n  nameWithType: RSA.Create(Int32)\n  fullName: RSA.Create(Int32)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.RSA Create (int keySizeInBits);\n    parameters:\n    - id: keySizeInBits\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Security.Cryptography.RSA\n      description: ''\n  overload: System.Security.Cryptography.RSA.Create*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)\n  commentId: M:System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)\n  id: Create(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: Create(RSAParameters)\n  nameWithType: RSA.Create(RSAParameters)\n  fullName: RSA.Create(RSAParameters)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.RSA Create (System.Security.Cryptography.RSAParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.RSAParameters\n      description: ''\n    return:\n      type: System.Security.Cryptography.RSA\n      description: ''\n  overload: System.Security.Cryptography.RSA.Create*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.Create(System.String)\n  commentId: M:System.Security.Cryptography.RSA.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: RSA.Create(String)\n  fullName: RSA.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of the specified implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.\n  syntax:\n    content: public static System.Security.Cryptography.RSA Create (string algName);\n    parameters:\n    - id: algName\n      type: System.String\n      description: The name of the implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref> to use.\n    return:\n      type: System.Security.Cryptography.RSA\n      description: A new instance of the specified implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.\n  overload: System.Security.Cryptography.RSA.Create*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  commentId: M:System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: Decrypt(Byte[], RSAEncryptionPadding)\n  nameWithType: RSA.Decrypt(Byte[], RSAEncryptionPadding)\n  fullName: RSA.Decrypt(Byte[], RSAEncryptionPadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, decrypts the input data using the specified padding mode.\n  syntax:\n    content: public virtual byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The data to decrypt.\n    - id: padding\n      type: System.Security.Cryptography.RSAEncryptionPadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The decrypted data.\n  overload: System.Security.Cryptography.RSA.Decrypt*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: A derived class must override this method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])\n  commentId: M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])\n  id: DecryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: DecryptValue(Byte[])\n  nameWithType: RSA.DecryptValue(Byte[])\n  fullName: RSA.DecryptValue(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, decrypts the input data using the private key.\n  remarks: In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.\n  syntax:\n    content: public virtual byte[] DecryptValue (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: The cipher text to be decrypted.\n    return:\n      type: System.Byte[]\n      description: The resulting decryption of the <code>rgb</code> parameter in plain text.\n  overload: System.Security.Cryptography.RSA.DecryptValue*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  commentId: M:System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: Encrypt(Byte[], RSAEncryptionPadding)\n  nameWithType: RSA.Encrypt(Byte[], RSAEncryptionPadding)\n  fullName: RSA.Encrypt(Byte[], RSAEncryptionPadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, encrypts the input data using the specified padding mode.\n  syntax:\n    content: public virtual byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The data to encrypt.\n    - id: padding\n      type: System.Security.Cryptography.RSAEncryptionPadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The encrypted data.\n  overload: System.Security.Cryptography.RSA.Encrypt*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: A derived class must override this method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])\n  commentId: M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])\n  id: EncryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: EncryptValue(Byte[])\n  nameWithType: RSA.EncryptValue(Byte[])\n  fullName: RSA.EncryptValue(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, encrypts the input data using the public key.\n  remarks: In the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.\n  syntax:\n    content: public virtual byte[] EncryptValue (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: The plain text to be encrypted.\n    return:\n      type: System.Byte[]\n      description: The resulting encryption of the <code>rgb</code> parameter as cipher text.\n  overload: System.Security.Cryptography.RSA.EncryptValue*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)\n  commentId: M:System.Security.Cryptography.RSA.ExportParameters(System.Boolean)\n  id: ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: ExportParameters(Boolean)\n  nameWithType: RSA.ExportParameters(Boolean)\n  fullName: RSA.ExportParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, exports the <xref href=\"System.Security.Cryptography.RSAParameters\"></xref>.\n  syntax:\n    content: public abstract System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: '`true` to include private parameters; otherwise, `false`.'\n    return:\n      type: System.Security.Cryptography.RSAParameters\n      description: The parameters for <xref href=\"System.Security.Cryptography.DSA\"></xref>.\n  overload: System.Security.Cryptography.RSA.ExportParameters*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)\n  commentId: M:System.Security.Cryptography.RSA.FromXmlString(System.String)\n  id: FromXmlString(System.String)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: FromXmlString(String)\n  nameWithType: RSA.FromXmlString(String)\n  fullName: RSA.FromXmlString(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes an <xref href=\"System.Security.Cryptography.RSA\"></xref> object from the key information from an XML string.\n  remarks: \"The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> initializes an RSA object using key information in an XML string that was generated using the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method.  The <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method accepts either an XML string containing a public key or an XML string containing a public and private key.  \\n  \\n Use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method to conveniently initialize <xref:System.Security.Cryptography.RSA> key information.  \\n  \\n> [!CAUTION]\\n>  Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).\"\n  syntax:\n    content: public override void FromXmlString (string xmlString);\n    parameters:\n    - id: xmlString\n      type: System.String\n      description: The XML string containing <xref href=\"System.Security.Cryptography.RSA\"></xref> key information.\n  overload: System.Security.Cryptography.RSA.FromXmlString*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>xmlString</code> parameter is `null`.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The format of the <code>xmlString</code> parameter is not valid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  commentId: M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  nameWithType: RSA.HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  fullName: RSA.HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.\n  syntax:\n    content: protected virtual byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The data to be hashed.\n    - id: offset\n      type: System.Int32\n      description: The index of the first byte in <code>data</code> that is to be hashed.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to hash.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The algorithm to use in hash the data.\n    return:\n      type: System.Byte[]\n      description: The hashed data.\n  overload: System.Security.Cryptography.RSA.HashData*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: A derived class must override this method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  commentId: M:System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: HashData(Stream, HashAlgorithmName)\n  nameWithType: RSA.HashData(Stream, HashAlgorithmName)\n  fullName: RSA.HashData(Stream, HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.\n  syntax:\n    content: protected virtual byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: The binary stream to hash.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm.\n    return:\n      type: System.Byte[]\n      description: The hashed data.\n  overload: System.Security.Cryptography.RSA.HashData*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: A derived class must override this method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)\n  commentId: M:System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)\n  id: ImportParameters(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: ImportParameters(RSAParameters)\n  nameWithType: RSA.ImportParameters(RSAParameters)\n  fullName: RSA.ImportParameters(RSAParameters)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, imports the specified <xref href=\"System.Security.Cryptography.RSAParameters\"></xref>.\n  syntax:\n    content: public abstract void ImportParameters (System.Security.Cryptography.RSAParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.RSAParameters\n      description: The parameters for <xref href=\"System.Security.Cryptography.RSA\"></xref>.\n  overload: System.Security.Cryptography.RSA.ImportParameters*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm\n  commentId: P:System.Security.Cryptography.RSA.KeyExchangeAlgorithm\n  id: KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: KeyExchangeAlgorithm\n  nameWithType: RSA.KeyExchangeAlgorithm\n  fullName: RSA.KeyExchangeAlgorithm\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the key exchange algorithm available with this implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.\n  syntax:\n    content: public override string KeyExchangeAlgorithm { get; }\n    return:\n      type: System.String\n      description: Returns \"RSA\".\n  overload: System.Security.Cryptography.RSA.KeyExchangeAlgorithm*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.SignatureAlgorithm\n  commentId: P:System.Security.Cryptography.RSA.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: RSA.SignatureAlgorithm\n  fullName: RSA.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the signature algorithm available with this implementation of <xref href=\"System.Security.Cryptography.RSA\"></xref>.\n  syntax:\n    content: public override string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: Returns \"RSA\".\n  overload: System.Security.Cryptography.RSA.SignatureAlgorithm*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Computes the hash value of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.\n  syntax:\n    content: public byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The input data for which to compute the hash.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm to use to create the hash value.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The RSA signature for the specified data.\n  overload: System.Security.Cryptography.RSA.SignData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Computes the hash value of the specified stream using the specified hash algorithm and padding mode, and signs the resulting hash value.\n  syntax:\n    content: public virtual byte[] SignData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: The input stream for which to compute the hash.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm to use to create the hash value.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The RSA signature for the specified data.\n  overload: System.Security.Cryptography.RSA.SignData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Computes the hash value of a portion of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.\n  syntax:\n    content: public virtual byte[] SignData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The input data for which to compute the hash.\n    - id: offset\n      type: System.Int32\n      description: The offset into the array at which to begin using data.\n    - id: count\n      type: System.Int32\n      description: The number of bytes in the array to use as data.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm to use to create the hash value.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The RSA signature for the specified data.\n  overload: System.Security.Cryptography.RSA.SignData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>offset</code> + <code>count</code> – 1 results in an index that is beyond the upper bound of <code>data</code>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, computes the signature for the specified hash value by encrypting it with the private key using the specified padding.\n  syntax:\n    content: public virtual byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: The hash value of the data to be signed.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm used to create the hash value of the data.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding.\n    return:\n      type: System.Byte[]\n      description: The RSA signature for the specified hash value.\n  overload: System.Security.Cryptography.RSA.SignHash*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: A derived class must override this method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)\n  commentId: M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)\n  id: ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: ToXmlString(Boolean)\n  nameWithType: RSA.ToXmlString(Boolean)\n  fullName: RSA.ToXmlString(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates and returns an XML string containing the key of the current <xref href=\"System.Security.Cryptography.RSA\"></xref> object.\n  remarks: \"The <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method creates an XML string that contains either the public and private key of the current <xref:System.Security.Cryptography.RSA> object or contains only the public key of the current <xref:System.Security.Cryptography.RSA> object.  \\n  \\n Use the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method whenever you need to conveniently persist RSA key information.  To initialize an <xref:System.Security.Cryptography.RSA> object with the key in an XML string, use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method.  \\n  \\n> [!CAUTION]\\n>  Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).  \\n  \\n When you pass `true` to the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method, the resulting XML string takes the following form:  \\n  \\n```  \\n<RSAKeyValue>  \\n   <Modulus>…</Modulus>  \\n   <Exponent>…</Exponent>  \\n   <P>…</P>  \\n   <Q>…</Q>  \\n   <DP>…</DP>  \\n   <DQ>…</DQ>  \\n   <InverseQ>…</InverseQ>  \\n   <D>…</D>  \\n</RSAKeyValue>  \\n```  \\n  \\n When you pass `false` to the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method, the resulting XML string takes the following form:  \\n  \\n```  \\n<RSAKeyValue>  \\n   <Modulus>…</Modulus>  \\n   <Exponent>…</Exponent>  \\n</RSAKeyValue>  \\n```\"\n  syntax:\n    content: public override string ToXmlString (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: '`true` to include a public and private RSA key; `false` to include only the public key.'\n    return:\n      type: System.String\n      description: An XML string containing the key of the current <xref href=\"System.Security.Cryptography.RSA\"></xref> object.\n  overload: System.Security.Cryptography.RSA.ToXmlString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and padding, and comparing it to the provided signature.\n  syntax:\n    content: public virtual bool VerifyData (byte[] data, int offset, int count, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The signed data.\n    - id: offset\n      type: System.Int32\n      description: The starting index at which to compute the hash.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to hash.\n    - id: signature\n      type: System.Byte[]\n      description: The signature data to be verified.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm used to create the hash value of the data.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Boolean\n      description: '`true` if the signature is valid; otherwise, `false`.'\n  overload: System.Security.Cryptography.RSA.VerifyData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>signature</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>offset</code> + <code>count</code> – 1 results in an index that is beyond the upper bound of <code>data</code>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and padding, and comparing it to the provided signature.\n  syntax:\n    content: public bool VerifyData (byte[] data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The signed data.\n    - id: signature\n      type: System.Byte[]\n      description: The signature data to be verified.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm used to create the hash value of the data.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Boolean\n      description: '`true` if the signature is valid; otherwise, `false`.'\n  overload: System.Security.Cryptography.RSA.VerifyData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>signature</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and padding, and comparing it to the provided signature.\n  syntax:\n    content: public bool VerifyData (System.IO.Stream data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: The signed data.\n    - id: signature\n      type: System.Byte[]\n      description: The signature data to be verified.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm used to create the hash value of the data.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Boolean\n      description: '`true` if the signature is valid; otherwise, `false`.'\n  overload: System.Security.Cryptography.RSA.VerifyData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>signature</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>hashAlgorithm</code>.<xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> is `null` or <xref href=\"System.String.Empty\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  langs:\n  - csharp\n  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Verifies that a digital signature is valid by determining the hash value in the signature using the specified hash algorithm and padding, and comparing it to the provided hash value.\n  syntax:\n    content: public virtual bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: The hash value of the signed data.\n    - id: signature\n      type: System.Byte[]\n      description: The signature data to be verified.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm used to create the hash value.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Boolean\n      description: '`true` if the signature is valid; otherwise, `false`.'\n  overload: System.Security.Cryptography.RSA.VerifyHash*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: A derived class must override this method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.Cryptography.RSA.#ctor\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: RSA()\n  nameWithType: RSA.RSA()\n  fullName: RSA.RSA()\n- uid: System.Security.Cryptography.RSA.Create\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create()\n  nameWithType: RSA.Create()\n  fullName: RSA.Create()\n- uid: System.Security.Cryptography.RSA\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSA\n  nameWithType: RSA\n  fullName: System.Security.Cryptography.RSA\n- uid: System.Security.Cryptography.RSA.Create(System.Int32)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create(Int32)\n  nameWithType: RSA.Create(Int32)\n  fullName: RSA.Create(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create(RSAParameters)\n  nameWithType: RSA.Create(RSAParameters)\n  fullName: RSA.Create(RSAParameters)\n- uid: System.Security.Cryptography.RSAParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAParameters\n  nameWithType: RSAParameters\n  fullName: System.Security.Cryptography.RSAParameters\n- uid: System.Security.Cryptography.RSA.Create(System.String)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create(String)\n  nameWithType: RSA.Create(String)\n  fullName: RSA.Create(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Decrypt(Byte[], RSAEncryptionPadding)\n  nameWithType: RSA.Decrypt(Byte[], RSAEncryptionPadding)\n  fullName: RSA.Decrypt(Byte[], RSAEncryptionPadding)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RSAEncryptionPadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAEncryptionPadding\n  nameWithType: RSAEncryptionPadding\n  fullName: System.Security.Cryptography.RSAEncryptionPadding\n- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: DecryptValue(Byte[])\n  nameWithType: RSA.DecryptValue(Byte[])\n  fullName: RSA.DecryptValue(Byte[])\n- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Encrypt(Byte[], RSAEncryptionPadding)\n  nameWithType: RSA.Encrypt(Byte[], RSAEncryptionPadding)\n  fullName: RSA.Encrypt(Byte[], RSAEncryptionPadding)\n- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: EncryptValue(Byte[])\n  nameWithType: RSA.EncryptValue(Byte[])\n  fullName: RSA.EncryptValue(Byte[])\n- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: ExportParameters(Boolean)\n  nameWithType: RSA.ExportParameters(Boolean)\n  fullName: RSA.ExportParameters(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: FromXmlString(String)\n  nameWithType: RSA.FromXmlString(String)\n  fullName: RSA.FromXmlString(String)\n- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  nameWithType: RSA.HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  fullName: RSA.HashData(Byte[], Int32, Int32, HashAlgorithmName)\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: HashData(Stream, HashAlgorithmName)\n  nameWithType: RSA.HashData(Stream, HashAlgorithmName)\n  fullName: RSA.HashData(Stream, HashAlgorithmName)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: ImportParameters(RSAParameters)\n  nameWithType: RSA.ImportParameters(RSAParameters)\n  fullName: RSA.ImportParameters(RSAParameters)\n- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: RSA.KeyExchangeAlgorithm\n  fullName: RSA.KeyExchangeAlgorithm\n- uid: System.Security.Cryptography.RSA.SignatureAlgorithm\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: RSA.SignatureAlgorithm\n  fullName: RSA.SignatureAlgorithm\n- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSASignaturePadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSASignaturePadding\n  nameWithType: RSASignaturePadding\n  fullName: System.Security.Cryptography.RSASignaturePadding\n- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: ToXmlString(Boolean)\n  nameWithType: RSA.ToXmlString(Boolean)\n  fullName: RSA.ToXmlString(Boolean)\n- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.#ctor*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: RSA\n  nameWithType: RSA.RSA\n  fullName: RSA.RSA\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.Create*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create\n  nameWithType: RSA.Create\n  fullName: RSA.Create\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.Decrypt*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Decrypt\n  nameWithType: RSA.Decrypt\n  fullName: RSA.Decrypt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.DecryptValue*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: DecryptValue\n  nameWithType: RSA.DecryptValue\n  fullName: RSA.DecryptValue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.Encrypt*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Encrypt\n  nameWithType: RSA.Encrypt\n  fullName: RSA.Encrypt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.EncryptValue*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: EncryptValue\n  nameWithType: RSA.EncryptValue\n  fullName: RSA.EncryptValue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.ExportParameters*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: ExportParameters\n  nameWithType: RSA.ExportParameters\n  fullName: RSA.ExportParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.FromXmlString*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: FromXmlString\n  nameWithType: RSA.FromXmlString\n  fullName: RSA.FromXmlString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.HashData*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: HashData\n  nameWithType: RSA.HashData\n  fullName: RSA.HashData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.ImportParameters*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: ImportParameters\n  nameWithType: RSA.ImportParameters\n  fullName: RSA.ImportParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: RSA.KeyExchangeAlgorithm\n  fullName: RSA.KeyExchangeAlgorithm\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.SignatureAlgorithm*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: RSA.SignatureAlgorithm\n  fullName: RSA.SignatureAlgorithm\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.SignData*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignData\n  nameWithType: RSA.SignData\n  fullName: RSA.SignData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.SignHash*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignHash\n  nameWithType: RSA.SignHash\n  fullName: RSA.SignHash\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.ToXmlString*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: ToXmlString\n  nameWithType: RSA.ToXmlString\n  fullName: RSA.ToXmlString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.VerifyData*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyData\n  nameWithType: RSA.VerifyData\n  fullName: RSA.VerifyData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Security.Cryptography.RSA.VerifyHash*\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyHash\n  nameWithType: RSA.VerifyHash\n  fullName: RSA.VerifyHash\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSA.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: AsymmetricAlgorithm.Clear()\n  fullName: AsymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: AsymmetricAlgorithm.Dispose()\n  fullName: AsymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AsymmetricAlgorithm.Dispose(Boolean)\n  fullName: AsymmetricAlgorithm.Dispose(Boolean)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: KeySize\n  nameWithType: AsymmetricAlgorithm.KeySize\n  fullName: AsymmetricAlgorithm.KeySize\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: AsymmetricAlgorithm.KeySizeValue\n  fullName: AsymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: AsymmetricAlgorithm.LegalKeySizes\n  fullName: AsymmetricAlgorithm.LegalKeySizes\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue\n  fullName: AsymmetricAlgorithm.LegalKeySizesValue\n"}