{"nodes":[{"content":"Light object that projects its effect along a direction specified by a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>.","nodes":[{"pos":[0,130],"content":"Light object that projects its effect along a direction specified by a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Media3D.Vector3D\"&gt;&lt;/xref&gt;</ph>.","source":"Light object that projects its effect along a direction specified by a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>."}],"pos":[922,1053],"yaml":true},{"content":"<xref:System.Windows.Media.Media3D.DirectionalLight> objects have no position in space.","nodes":[{"pos":[0,87],"content":"<xref:System.Windows.Media.Media3D.DirectionalLight> objects have no position in space.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Media3D.DirectionalLight&gt;</ph> objects have no position in space.","pos":[0,87],"source":"<xref:System.Windows.Media.Media3D.DirectionalLight> objects have no position in space."}]}],"pos":[1064,1152],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of a light that projects its effect in a specified direction.","nodes":[{"pos":[0,81],"content":"Creates an instance of a light that projects its effect in a specified direction.","nodes":[{"content":"Creates an instance of a light that projects its effect in a specified direction.","pos":[0,81]}]}],"pos":[6789,6871],"yaml":true},{"content":"This contructor creates an instance of a white light projected along a Vector3D of value `(0,0,-1)`.  \n  \n DirectionalLights have a direction, but no position in space.","nodes":[{"pos":[0,100],"content":"This contructor creates an instance of a white light projected along a Vector3D of value <ph id=\"ph1\">`(0,0,-1)`</ph>.","source":"This contructor creates an instance of a white light projected along a Vector3D of value `(0,0,-1)`."},{"pos":[107,168],"content":"DirectionalLights have a direction, but no position in space.","nodes":[{"content":"DirectionalLights have a direction, but no position in space.","pos":[0,61]}]}],"pos":[6882,7055],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of a light that projects its effect along a specified Vector3D with a specified color.","nodes":[{"pos":[0,106],"content":"Creates an instance of a light that projects its effect along a specified Vector3D with a specified color.","nodes":[{"content":"Creates an instance of a light that projects its effect along a specified Vector3D with a specified color.","pos":[0,106]}]}],"pos":[8677,8784],"yaml":true},{"content":"DirectionalLights have a direction, but no position in space.","nodes":[{"pos":[0,61],"content":"DirectionalLights have a direction, but no position in space.","nodes":[{"content":"DirectionalLights have a direction, but no position in space.","pos":[0,61]}]}],"pos":[8795,8857],"yaml":true,"extradata":"MT"},{"content":"Diffuse color of the new light.","nodes":[{"pos":[0,31],"content":"Diffuse color of the new light.","nodes":[{"content":"Diffuse color of the new light.","pos":[0,31]}]}],"pos":[9329,9361],"yaml":true},{"content":"Direction of the new light.","nodes":[{"pos":[0,27],"content":"Direction of the new light.","nodes":[{"content":"Direction of the new light.","pos":[0,27]}]}],"pos":[9450,9478],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Media3D.DirectionalLight\"></xref> object, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,325],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Media3D.DirectionalLight\"></xref> object, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Media3D.DirectionalLight\"&gt;&lt;/xref&gt;</ph> object, making deep copies of this object's values.","pos":[0,153],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Media3D.DirectionalLight\"></xref> object, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[154,325]}]}],"pos":[10511,10837],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,343],"content":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}],"pos":[10848,11196],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"pos":[0,238],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true.`</ph>","pos":[42,238],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`"}]}],"pos":[11390,11629],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Media3D.DirectionalLight\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.","nodes":[{"pos":[0,258],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Media3D.DirectionalLight\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Media3D.DirectionalLight\"&gt;&lt;/xref&gt;</ph> object, making deep copies of this object's current values.","pos":[0,161],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Media3D.DirectionalLight\"></xref> object, making deep copies of this object's current values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[162,258]}]}],"pos":[12734,12993],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,355],"content":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.","pos":[0,104],"source":"For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."}]}],"pos":[13004,13364],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.","nodes":[{"pos":[0,238],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true`</ph>.","pos":[42,238],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`."}]}],"pos":[13570,13809],"yaml":true},{"content":"Represents the vector along which the light's effect will be seen on models in a 3-D scene.","nodes":[{"pos":[0,91],"content":"Represents the vector along which the light's effect will be seen on models in a 3-D scene.","nodes":[{"content":"Represents the vector along which the light's effect will be seen on models in a 3-D scene.","pos":[0,91]}]}],"pos":[16076,16168],"yaml":true},{"content":"<a name=\"dependencyPropertyInfo_Direction\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Media3D.DirectionalLight.DirectionProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[54,85],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[106,122],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[123,193],"content":"<xref:System.Windows.Media.Media3D.DirectionalLight.DirectionProperty>","nodes":[]},{"pos":[198,231],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[232,236],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[16179,16427],"yaml":true,"extradata":"MT"},{"content":"Vector3D along which the light projects, and which must have a non-zero magnitude. The default value is <code>(0,0,-1)</code>.","nodes":[{"pos":[0,126],"content":"Vector3D along which the light projects, and which must have a non-zero magnitude. The default value is <code>(0,0,-1)</code>.","nodes":[{"content":"Vector3D along which the light projects, and which must have a non-zero magnitude.","pos":[0,82]},{"content":"The default value is <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">(0,0,-1)</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[83,126],"source":" The default value is <code>(0,0,-1)</code>."}]}],"pos":[16600,16727],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Media3D.DirectionalLight.Direction\"></xref> dependency property.","nodes":[{"pos":[0,112],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Media3D.DirectionalLight.Direction\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Media3D.DirectionalLight.Direction\"></xref> dependency property."}],"pos":[17807,17920],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Media3D.DirectionalLight\n  commentId: T:System.Windows.Media.Media3D.DirectionalLight\n  id: DirectionalLight\n  children:\n  - System.Windows.Media.Media3D.DirectionalLight.#ctor\n  - System.Windows.Media.Media3D.DirectionalLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.DirectionalLight.Clone\n  - System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue\n  - System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore\n  - System.Windows.Media.Media3D.DirectionalLight.Direction\n  - System.Windows.Media.Media3D.DirectionalLight.DirectionProperty\n  langs:\n  - csharp\n  name: DirectionalLight\n  nameWithType: DirectionalLight\n  fullName: System.Windows.Media.Media3D.DirectionalLight\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Light object that projects its effect along a direction specified by a <xref href=\"System.Windows.Media.Media3D.Vector3D\"></xref>.\n  remarks: <xref:System.Windows.Media.Media3D.DirectionalLight> objects have no position in space.\n  syntax:\n    content: 'public sealed class DirectionalLight : System.Windows.Media.Media3D.Light'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Media3D.Model3D\n  - System.Windows.Media.Media3D.Light\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Media3D.Light.Color\n  - System.Windows.Media.Media3D.Light.ColorProperty\n  - System.Windows.Media.Media3D.Model3D.Bounds\n  - System.Windows.Media.Media3D.Model3D.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Media3D.Model3D.ToString\n  - System.Windows.Media.Media3D.Model3D.ToString(System.IFormatProvider)\n  - System.Windows.Media.Media3D.Model3D.Transform\n  - System.Windows.Media.Media3D.Model3D.TransformProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor\n  commentId: M:System.Windows.Media.Media3D.DirectionalLight.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  langs:\n  - csharp\n  name: DirectionalLight()\n  nameWithType: DirectionalLight.DirectionalLight()\n  fullName: DirectionalLight.DirectionalLight()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Creates an instance of a light that projects its effect in a specified direction.\n  remarks: \"This contructor creates an instance of a white light projected along a Vector3D of value `(0,0,-1)`.  \\n  \\n DirectionalLights have a direction, but no position in space.\"\n  example:\n  - \"The following code excerpt creates a <xref:System.Windows.Media.Media3D.DirectionalLight>.  \\n  \\n [!code-xml[Basic3D#Basic3DXAML3DN2](~/samples/snippets/xaml/VS_Snippets_Wpf/Basic3D/XAML/Window1.xaml#basic3dxaml3dn2)]\"\n  syntax:\n    content: public DirectionalLight ();\n    parameters: []\n  overload: System.Windows.Media.Media3D.DirectionalLight.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)\n  commentId: M:System.Windows.Media.Media3D.DirectionalLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)\n  id: '#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)'\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  langs:\n  - csharp\n  name: DirectionalLight(Color, Vector3D)\n  nameWithType: DirectionalLight.DirectionalLight(Color, Vector3D)\n  fullName: DirectionalLight.DirectionalLight(Color, Vector3D)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Creates an instance of a light that projects its effect along a specified Vector3D with a specified color.\n  remarks: DirectionalLights have a direction, but no position in space.\n  example:\n  - \"The following code excerpt creates a <xref:System.Windows.Media.Media3D.DirectionalLight>.  \\n  \\n [!code-xml[Basic3D#Basic3DXAML3DN2](~/samples/snippets/xaml/VS_Snippets_Wpf/Basic3D/XAML/Window1.xaml#basic3dxaml3dn2)]\"\n  syntax:\n    content: public DirectionalLight (System.Windows.Media.Color diffuseColor, System.Windows.Media.Media3D.Vector3D direction);\n    parameters:\n    - id: diffuseColor\n      type: System.Windows.Media.Color\n      description: Diffuse color of the new light.\n    - id: direction\n      type: System.Windows.Media.Media3D.Vector3D\n      description: Direction of the new light.\n  overload: System.Windows.Media.Media3D.DirectionalLight.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Media3D.DirectionalLight.Clone\n  commentId: M:System.Windows.Media.Media3D.DirectionalLight.Clone\n  id: Clone\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: DirectionalLight.Clone()\n  fullName: DirectionalLight.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Media3D.DirectionalLight\"></xref> object, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Media3D.DirectionalLight Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Media3D.DirectionalLight\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`\n  overload: System.Windows.Media.Media3D.DirectionalLight.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue\n  commentId: M:System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: DirectionalLight.CloneCurrentValue()\n  fullName: DirectionalLight.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Media3D.DirectionalLight\"></xref> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Media3D.DirectionalLight CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Media3D.DirectionalLight\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true`.\n  overload: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore\n  commentId: M:System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: DirectionalLight.CreateInstanceCore()\n  fullName: DirectionalLight.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: ''\n  overload: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n- uid: System.Windows.Media.Media3D.DirectionalLight.Direction\n  commentId: P:System.Windows.Media.Media3D.DirectionalLight.Direction\n  id: Direction\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  langs:\n  - csharp\n  name: Direction\n  nameWithType: DirectionalLight.Direction\n  fullName: DirectionalLight.Direction\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Represents the vector along which the light's effect will be seen on models in a 3-D scene.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_Direction\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Media3D.DirectionalLight.DirectionProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Media.Media3D.Vector3D Direction { get; set; }\n    return:\n      type: System.Windows.Media.Media3D.Vector3D\n      description: Vector3D along which the light projects, and which must have a non-zero magnitude. The default value is <code>(0,0,-1)</code>.\n  overload: System.Windows.Media.Media3D.DirectionalLight.Direction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Media3D.DirectionalLight.DirectionProperty\n  commentId: F:System.Windows.Media.Media3D.DirectionalLight.DirectionProperty\n  id: DirectionProperty\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  langs:\n  - csharp\n  name: DirectionProperty\n  nameWithType: DirectionalLight.DirectionProperty\n  fullName: DirectionalLight.DirectionProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  summary: Identifies the <xref href=\"System.Windows.Media.Media3D.DirectionalLight.Direction\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty DirectionProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Windows.Media.Media3D.Light\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Light\n  nameWithType: Light\n  fullName: System.Windows.Media.Media3D.Light\n- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: DirectionalLight()\n  nameWithType: DirectionalLight.DirectionalLight()\n  fullName: DirectionalLight.DirectionalLight()\n- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: DirectionalLight(Color, Vector3D)\n  nameWithType: DirectionalLight.DirectionalLight(Color, Vector3D)\n  fullName: DirectionalLight.DirectionalLight(Color, Vector3D)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Media3D.Vector3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Vector3D\n  nameWithType: Vector3D\n  fullName: System.Windows.Media.Media3D.Vector3D\n- uid: System.Windows.Media.Media3D.DirectionalLight.Clone\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: Clone()\n  nameWithType: DirectionalLight.Clone()\n  fullName: DirectionalLight.Clone()\n- uid: System.Windows.Media.Media3D.DirectionalLight\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: DirectionalLight\n  nameWithType: DirectionalLight\n  fullName: System.Windows.Media.Media3D.DirectionalLight\n- uid: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: DirectionalLight.CloneCurrentValue()\n  fullName: DirectionalLight.CloneCurrentValue()\n- uid: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: DirectionalLight.CreateInstanceCore()\n  fullName: DirectionalLight.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Media3D.DirectionalLight.Direction\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: Direction\n  nameWithType: DirectionalLight.Direction\n  fullName: DirectionalLight.Direction\n- uid: System.Windows.Media.Media3D.DirectionalLight.DirectionProperty\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: DirectionProperty\n  nameWithType: DirectionalLight.DirectionProperty\n  fullName: DirectionalLight.DirectionProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor*\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: DirectionalLight\n  nameWithType: DirectionalLight.DirectionalLight\n  fullName: DirectionalLight.DirectionalLight\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n- uid: System.Windows.Media.Media3D.DirectionalLight.Clone*\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: Clone\n  nameWithType: DirectionalLight.Clone\n  fullName: DirectionalLight.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n- uid: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue*\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: DirectionalLight.CloneCurrentValue\n  fullName: DirectionalLight.CloneCurrentValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n- uid: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore*\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: DirectionalLight.CreateInstanceCore\n  fullName: DirectionalLight.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n- uid: System.Windows.Media.Media3D.DirectionalLight.Direction*\n  parent: System.Windows.Media.Media3D.DirectionalLight\n  isExternal: false\n  name: Direction\n  nameWithType: DirectionalLight.Direction\n  fullName: DirectionalLight.Direction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Media3D/DirectionalLight.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Windows.Media.Media3D.Model3D.ToString\n  parent: System.Windows.Media.Media3D.Model3D\n  isExternal: false\n  name: ToString()\n  nameWithType: Model3D.ToString()\n  fullName: Model3D.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: Animatable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.Media.Media3D.Model3D.Bounds\n  parent: System.Windows.Media.Media3D.Model3D\n  isExternal: false\n  name: Bounds\n  nameWithType: Model3D.Bounds\n  fullName: Model3D.Bounds\n- uid: System.Windows.Media.Media3D.Model3D.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Model3D\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Model3D.ToString(IFormatProvider)\n  fullName: Model3D.ToString(IFormatProvider)\n- uid: System.Windows.Media.Media3D.Model3D.Transform\n  parent: System.Windows.Media.Media3D.Model3D\n  isExternal: false\n  name: Transform\n  nameWithType: Model3D.Transform\n  fullName: Model3D.Transform\n- uid: System.Windows.Media.Media3D.Model3D.TransformProperty\n  parent: System.Windows.Media.Media3D.Model3D\n  isExternal: false\n  name: TransformProperty\n  nameWithType: Model3D.TransformProperty\n  fullName: Model3D.TransformProperty\n- uid: System.Windows.Media.Media3D.Model3D.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Model3D\n  isExternal: false\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Model3D.IFormattable.ToString(String, IFormatProvider)\n  fullName: Model3D.IFormattable.ToString(String, IFormatProvider)\n- uid: System.Windows.Media.Media3D.Light.Color\n  parent: System.Windows.Media.Media3D.Light\n  isExternal: false\n  name: Color\n  nameWithType: Light.Color\n  fullName: Light.Color\n- uid: System.Windows.Media.Media3D.Light.ColorProperty\n  parent: System.Windows.Media.Media3D.Light\n  isExternal: false\n  name: ColorProperty\n  nameWithType: Light.ColorProperty\n  fullName: Light.ColorProperty\n"}