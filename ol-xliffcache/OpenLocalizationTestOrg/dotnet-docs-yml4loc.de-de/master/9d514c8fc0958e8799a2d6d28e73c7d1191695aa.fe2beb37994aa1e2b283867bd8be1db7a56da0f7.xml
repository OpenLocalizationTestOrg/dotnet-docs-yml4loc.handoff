{"nodes":[{"content":"Provides `static` methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application. This class cannot be inherited.","nodes":[{"pos":[0,233],"content":"Provides `static` methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application. This class cannot be inherited.","nodes":[{"content":"Provides <ph id=\"ph1\">`static`</ph> methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application.","pos":[0,201],"source":"Provides `static` methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application."},{"content":"This class cannot be inherited.","pos":[202,233]}]}],"pos":[3250,3484],"yaml":true},{"content":"The <xref:System.Windows.Forms.Application> class has methods to start and stop applications and threads, and to process Windows messages, as follows:  \n  \n-   <xref:System.Windows.Forms.Application.Run%2A> starts an application message loop on the current thread and, optionally, makes a form visible.  \n  \n-   <xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> stops a message loop.  \n  \n-   <xref:System.Windows.Forms.Application.DoEvents%2A> processes messages while your program is in a loop.  \n  \n-   <xref:System.Windows.Forms.Application.AddMessageFilter%2A> adds a message filter to the application message pump to monitor Windows messages.  \n  \n-   <xref:System.Windows.Forms.IMessageFilter> lets you stop an event from being raised or perform special operations before invoking an event handler.  \n  \n This class has <xref:System.Windows.Forms.Application.CurrentCulture%2A> and <xref:System.Windows.Forms.Application.CurrentInputLanguage%2A> properties to get or set culture information for the current thread.  \n  \n You cannot create an instance of this class.","nodes":[{"pos":[0,150],"content":"The <xref:System.Windows.Forms.Application> class has methods to start and stop applications and threads, and to process Windows messages, as follows:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has methods to start and stop applications and threads, and to process Windows messages, as follows:","pos":[0,150],"source":"The <xref:System.Windows.Forms.Application> class has methods to start and stop applications and threads, and to process Windows messages, as follows:"}]},{"pos":[160,302],"content":"<xref:System.Windows.Forms.Application.Run%2A> starts an application message loop on the current thread and, optionally, makes a form visible.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> starts an application message loop on the current thread and, optionally, makes a form visible.","pos":[0,142],"source":"<xref:System.Windows.Forms.Application.Run%2A> starts an application message loop on the current thread and, optionally, makes a form visible."}]},{"pos":[312,438],"content":"<xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> stops a message loop.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> stops a message loop.","pos":[0,126],"source":"<xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> stops a message loop."}]},{"pos":[448,551],"content":"<xref:System.Windows.Forms.Application.DoEvents%2A> processes messages while your program is in a loop.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> processes messages while your program is in a loop.","pos":[0,103],"source":"<xref:System.Windows.Forms.Application.DoEvents%2A> processes messages while your program is in a loop."}]},{"pos":[561,703],"content":"<xref:System.Windows.Forms.Application.AddMessageFilter%2A> adds a message filter to the application message pump to monitor Windows messages.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt;</ph> adds a message filter to the application message pump to monitor Windows messages.","pos":[0,142],"source":"<xref:System.Windows.Forms.Application.AddMessageFilter%2A> adds a message filter to the application message pump to monitor Windows messages."}]},{"pos":[713,860],"content":"<xref:System.Windows.Forms.IMessageFilter> lets you stop an event from being raised or perform special operations before invoking an event handler.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> lets you stop an event from being raised or perform special operations before invoking an event handler.","pos":[0,147],"source":"<xref:System.Windows.Forms.IMessageFilter> lets you stop an event from being raised or perform special operations before invoking an event handler."}]},{"pos":[867,1076],"content":"This class has <xref:System.Windows.Forms.Application.CurrentCulture%2A> and <xref:System.Windows.Forms.Application.CurrentInputLanguage%2A> properties to get or set culture information for the current thread.","nodes":[{"content":"This class has <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt;</ph> properties to get or set culture information for the current thread.","pos":[0,209],"source":"This class has <xref:System.Windows.Forms.Application.CurrentCulture%2A> and <xref:System.Windows.Forms.Application.CurrentInputLanguage%2A> properties to get or set culture information for the current thread."}]},{"pos":[1083,1127],"content":"You cannot create an instance of this class.","nodes":[{"content":"You cannot create an instance of this class.","pos":[0,44]}]}],"pos":[3495,4639],"yaml":true,"extradata":"MT"},{"content":"Adds a message filter to monitor Windows messages as they are routed to their destinations.","nodes":[{"pos":[0,91],"content":"Adds a message filter to monitor Windows messages as they are routed to their destinations.","nodes":[{"content":"Adds a message filter to monitor Windows messages as they are routed to their destinations.","pos":[0,91]}]}],"pos":[7390,7482],"yaml":true},{"content":"Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler. Message filters are unique to a specific thread.  \n  \n To prevent a message from being dispatched, the `value` parameter instance that you pass to this method must override the <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> method with the code to handle the message. The method must return `false`.  \n  \n> [!CAUTION]\n>  Adding message filters to the message pump for an application can degrade performance.","nodes":[{"pos":[0,201],"content":"Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler. Message filters are unique to a specific thread.","nodes":[{"content":"Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler. Message filters are unique to a specific thread.","pos":[0,201],"nodes":[{"content":"Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler.","pos":[0,152]},{"content":"Message filters are unique to a specific thread.","pos":[153,201]}]}]},{"pos":[208,468],"content":"To prevent a message from being dispatched, the `value` parameter instance that you pass to this method must override the <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> method with the code to handle the message. The method must return `false`.","nodes":[{"content":"To prevent a message from being dispatched, the <ph id=\"ph1\">`value`</ph> parameter instance that you pass to this method must override the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A&gt;</ph> method with the code to handle the message.","pos":[0,228],"source":"To prevent a message from being dispatched, the `value` parameter instance that you pass to this method must override the <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> method with the code to handle the message."},{"content":"The method must return <ph id=\"ph1\">`false`</ph>.","pos":[229,260],"source":" The method must return `false`."}]},{"pos":[476,576],"content":"[!CAUTION]\n Adding message filters to the message pump for an application can degrade performance.","leadings":["","> "],"nodes":[{"content":"Adding message filters to the message pump for an application can degrade performance.","pos":[12,98]}]}],"pos":[7493,8077],"yaml":true,"extradata":"MT"},{"content":"The implementation of the <xref href=\"System.Windows.Forms.IMessageFilter\"></xref> interface you want to install.","nodes":[{"pos":[0,113],"content":"The implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.IMessageFilter\"&gt;&lt;/xref&gt;</ph> interface you want to install.","source":"The implementation of the <xref href=\"System.Windows.Forms.IMessageFilter\"></xref> interface you want to install."}],"pos":[9118,9232],"yaml":true},{"content":"Gets a value indicating whether the caller can quit this application.","nodes":[{"pos":[0,69],"content":"Gets a value indicating whether the caller can quit this application.","nodes":[{"content":"Gets a value indicating whether the caller can quit this application.","pos":[0,69]}]}],"pos":[10200,10270],"yaml":true},{"content":"This property returns `false` if it is called from a <xref:System.Windows.Forms.Control> being hosted within a Web browser. Thus, the <xref:System.Windows.Forms.Control> cannot quit the <xref:System.Windows.Forms.Application>.","nodes":[{"pos":[0,226],"content":"This property returns `false` if it is called from a <xref:System.Windows.Forms.Control> being hosted within a Web browser. Thus, the <xref:System.Windows.Forms.Control> cannot quit the <xref:System.Windows.Forms.Application>.","nodes":[{"content":"This property returns <ph id=\"ph1\">`false`</ph> if it is called from a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> being hosted within a Web browser.","pos":[0,123],"source":"This property returns `false` if it is called from a <xref:System.Windows.Forms.Control> being hosted within a Web browser."},{"content":"Thus, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> cannot quit the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application&gt;</ph>.","pos":[124,226],"source":" Thus, the <xref:System.Windows.Forms.Control> cannot quit the <xref:System.Windows.Forms.Application>."}]}],"pos":[10281,10508],"yaml":true,"extradata":"MT"},{"content":"`true` if the caller can quit this application; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the caller can quit this application; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the caller can quit this application; otherwise, `false`."}],"pos":[10627,10697],"yaml":true},{"content":"Occurs when the application is about to shut down.","nodes":[{"pos":[0,50],"content":"Occurs when the application is about to shut down.","nodes":[{"content":"Occurs when the application is about to shut down.","pos":[0,50]}]}],"pos":[11713,11764],"yaml":true},{"content":"You must attach the event handlers to the <xref:System.Windows.Forms.Application.Exit%2A> event to perform unhandled, required tasks before the application stops running. You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.  \n  \n Because this is a static event, you must detach any event handlers attached to this event in the <xref:System.Windows.Forms.Application.ApplicationExit> event handler itself. If you do not detach these handlers, they will remain attached to the event and continue to consume memory.","nodes":[{"pos":[0,281],"content":"You must attach the event handlers to the <xref:System.Windows.Forms.Application.Exit%2A> event to perform unhandled, required tasks before the application stops running. You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.","nodes":[{"content":"You must attach the event handlers to the <xref:System.Windows.Forms.Application.Exit%2A> event to perform unhandled, required tasks before the application stops running. You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.","pos":[0,281],"nodes":[{"content":"You must attach the event handlers to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> event to perform unhandled, required tasks before the application stops running.","pos":[0,170],"source":"You must attach the event handlers to the <xref:System.Windows.Forms.Application.Exit%2A> event to perform unhandled, required tasks before the application stops running."},{"content":"You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.","pos":[171,281]}]}]},{"pos":[288,570],"content":"Because this is a static event, you must detach any event handlers attached to this event in the <xref:System.Windows.Forms.Application.ApplicationExit> event handler itself. If you do not detach these handlers, they will remain attached to the event and continue to consume memory.","nodes":[{"content":"Because this is a static event, you must detach any event handlers attached to this event in the <xref:System.Windows.Forms.Application.ApplicationExit> event handler itself. If you do not detach these handlers, they will remain attached to the event and continue to consume memory.","pos":[0,282],"nodes":[{"content":"Because this is a static event, you must detach any event handlers attached to this event in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event handler itself.","pos":[0,174],"source":"Because this is a static event, you must detach any event handlers attached to this event in the <xref:System.Windows.Forms.Application.ApplicationExit> event handler itself."},{"content":"If you do not detach these handlers, they will remain attached to the event and continue to consume memory.","pos":[175,282]}]}]}],"pos":[11775,12350],"yaml":true,"extradata":"MT"},{"content":"Gets the path for the application data that is shared among all users.","nodes":[{"pos":[0,70],"content":"Gets the path for the application data that is shared among all users.","nodes":[{"content":"Gets the path for the application data that is shared among all users.","pos":[0,70]}]}],"pos":[15105,15176],"yaml":true},{"content":"If a path does not exist, one is created in the following format:  \n  \n *Base Path*\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>  \n  \n <xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it. If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>. If this attribute does not exist, both properties use the version of the executable file instead.  \n  \n The path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"pos":[0,65],"content":"If a path does not exist, one is created in the following format:","nodes":[{"content":"If a path does not exist, one is created in the following format:","pos":[0,65]}]},{"pos":[72,254],"content":"<bpt id=\"p1\">*</bpt>Base Path<ept id=\"p1\">*</ept><ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id=\"ph3\">\\\\</ph><ph id=\"ph4\">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id=\"ph5\">\\\\</ph><ph id=\"ph6\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>","source":"*Base Path*\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>"},{"pos":[261,708],"content":"<xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it. If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>. If this attribute does not exist, both properties use the version of the executable file instead.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> first looks to see if the assembly containing the main executable has the <ph id=\"ph2\">`AssemblyInformationalVersion`</ph> attribute on it.","pos":[0,179],"source":"<xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it."},{"content":"If this attribute exists, it is used for both <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.","pos":[180,349],"source":" If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>."},{"content":"If this attribute does not exist, both properties use the version of the executable file instead.","pos":[350,447]}]},{"pos":[715,1190],"content":"The path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"content":"The path will be different depending on whether the Windows Forms application is deployed using <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.","pos":[0,150],"source":"The path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\\Documents and Settings<ph id=\"ph2\">\\\\</ph><bpt id=\"p1\">*</bpt>username<ept id=\"p1\">*</ept> directory.","pos":[151,316],"source":"[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id=\"p1\">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.","pos":[317,475],"source":" For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)."}]}],"pos":[15187,16395],"yaml":true,"extradata":"MT"},{"content":"The path for the application data that is shared among all users.","nodes":[{"pos":[0,65],"content":"The path for the application data that is shared among all users.","nodes":[{"content":"The path for the application data that is shared among all users.","pos":[0,65]}]}],"pos":[16523,16589],"yaml":true},{"content":"Gets the registry key for the application data that is shared among all users.","nodes":[{"pos":[0,78],"content":"Gets the registry key for the application data that is shared among all users.","nodes":[{"content":"Gets the registry key for the application data that is shared among all users.","pos":[0,78]}]}],"pos":[17652,17731],"yaml":true},{"content":"If the key does not exist, it is created in the following format:  \n  \n LocalMachine\\Software\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>","nodes":[{"pos":[0,65],"content":"If the key does not exist, it is created in the following format:","nodes":[{"content":"If the key does not exist, it is created in the following format:","pos":[0,65]}]},{"pos":[72,264],"content":"LocalMachine\\Software\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>","nodes":[{"content":"LocalMachine\\Software<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id=\"ph3\">\\\\</ph><ph id=\"ph4\">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id=\"ph5\">\\\\</ph><ph id=\"ph6\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>","pos":[0,192],"source":"LocalMachine\\Software\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>"}]}],"pos":[17742,18018],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"Microsoft.Win32.RegistryKey\"></xref> representing the registry key of the application data that is shared among all users.","nodes":[{"pos":[0,136],"content":"A <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.RegistryKey\"&gt;&lt;/xref&gt;</ph> representing the registry key of the application data that is shared among all users.","source":"A <xref href=\"Microsoft.Win32.RegistryKey\"></xref> representing the registry key of the application data that is shared among all users."}],"pos":[18185,18322],"yaml":true},{"content":"Gets the company name associated with the application.","nodes":[{"pos":[0,54],"content":"Gets the company name associated with the application.","nodes":[{"content":"Gets the company name associated with the application.","pos":[0,54]}]}],"pos":[19329,19384],"yaml":true},{"content":"The company name.","nodes":[{"pos":[0,17],"content":"The company name.","nodes":[{"content":"The company name.","pos":[0,17]}]}],"pos":[20177,20195],"yaml":true},{"content":"Gets or sets the culture information for the current thread.","nodes":[{"pos":[0,60],"content":"Gets or sets the culture information for the current thread.","nodes":[{"content":"Gets or sets the culture information for the current thread.","pos":[0,60]}]}],"pos":[21210,21271],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> representing the culture information for the current thread.","nodes":[{"pos":[0,116],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> representing the culture information for the current thread.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> representing the culture information for the current thread."}],"pos":[22135,22252],"yaml":true},{"content":"Gets or sets the current input language for the current thread.","nodes":[{"pos":[0,63],"content":"Gets or sets the current input language for the current thread.","nodes":[{"content":"Gets or sets the current input language for the current thread.","pos":[0,63]}]}],"pos":[23306,23370],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> representing the current input language for the current thread.","nodes":[{"pos":[0,122],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.InputLanguage\"&gt;&lt;/xref&gt;</ph> representing the current input language for the current thread.","source":"An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> representing the current input language for the current thread."}],"pos":[24280,24403],"yaml":true},{"content":"Processes all Windows messages currently in the message queue.","nodes":[{"pos":[0,62],"content":"Processes all Windows messages currently in the message queue.","nodes":[{"content":"Processes all Windows messages currently in the message queue.","pos":[0,62]}]}],"pos":[25395,25458],"yaml":true},{"content":"When you run a Windows Form, it creates the new form, which then waits for events to handle. Each time the form handles an event, it processes all the code associated with that event. All other events wait in the queue. While your code handles the event, your application does not respond. For example, the window does not repaint if another window is dragged on top.  \n  \n If you call <xref:System.Windows.Forms.Application.DoEvents%2A> in your code, your application can handle the other events. For example, if you have a form that adds data to a <xref:System.Windows.Forms.ListBox> and add <xref:System.Windows.Forms.Application.DoEvents%2A> to your code, your form repaints when another window is dragged over it. If you remove <xref:System.Windows.Forms.Application.DoEvents%2A> from your code, your form will not repaint until the click event handler of the button is finished executing. For more information on messaging, see [User Input in Windows Forms](~/docs/framework/winforms/user-input-in-windows-forms.md).  \n  \n Unlike Visual Basic 6.0, the <xref:System.Windows.Forms.Application.DoEvents%2A> method does not call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method.  \n  \n Typically, you use this method in a loop to process messages.  \n  \n> [!CAUTION]\n>  Calling this method causes the current thread to be suspended while all waiting window messages are processed. If a message causes an event to be triggered, then other areas of your application code may execute. This can cause your application to exhibit unexpected behaviors that are difficult to debug. If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread. For more information about asynchronous programming, see [Asynchronous Programming Model (APM)](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).","nodes":[{"pos":[0,367],"content":"When you run a Windows Form, it creates the new form, which then waits for events to handle. Each time the form handles an event, it processes all the code associated with that event. All other events wait in the queue. While your code handles the event, your application does not respond. For example, the window does not repaint if another window is dragged on top.","nodes":[{"content":"When you run a Windows Form, it creates the new form, which then waits for events to handle. Each time the form handles an event, it processes all the code associated with that event. All other events wait in the queue. While your code handles the event, your application does not respond. For example, the window does not repaint if another window is dragged on top.","pos":[0,367],"nodes":[{"content":"When you run a Windows Form, it creates the new form, which then waits for events to handle.","pos":[0,92]},{"content":"Each time the form handles an event, it processes all the code associated with that event.","pos":[93,183]},{"content":"All other events wait in the queue.","pos":[184,219]},{"content":"While your code handles the event, your application does not respond.","pos":[220,289]},{"content":"For example, the window does not repaint if another window is dragged on top.","pos":[290,367]}]}]},{"pos":[374,1022],"content":"If you call <xref:System.Windows.Forms.Application.DoEvents%2A> in your code, your application can handle the other events. For example, if you have a form that adds data to a <xref:System.Windows.Forms.ListBox> and add <xref:System.Windows.Forms.Application.DoEvents%2A> to your code, your form repaints when another window is dragged over it. If you remove <xref:System.Windows.Forms.Application.DoEvents%2A> from your code, your form will not repaint until the click event handler of the button is finished executing. For more information on messaging, see [User Input in Windows Forms](~/docs/framework/winforms/user-input-in-windows-forms.md).","nodes":[{"content":"If you call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> in your code, your application can handle the other events.","pos":[0,123],"source":"If you call <xref:System.Windows.Forms.Application.DoEvents%2A> in your code, your application can handle the other events."},{"content":"For example, if you have a form that adds data to a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> and add <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> to your code, your form repaints when another window is dragged over it.","pos":[124,344],"source":" For example, if you have a form that adds data to a <xref:System.Windows.Forms.ListBox> and add <xref:System.Windows.Forms.Application.DoEvents%2A> to your code, your form repaints when another window is dragged over it."},{"content":"If you remove <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> from your code, your form will not repaint until the click event handler of the button is finished executing.","pos":[345,520],"source":" If you remove <xref:System.Windows.Forms.Application.DoEvents%2A> from your code, your form will not repaint until the click event handler of the button is finished executing."},{"content":"For more information on messaging, see <bpt id=\"p1\">[</bpt>User Input in Windows Forms<ept id=\"p1\">](~/docs/framework/winforms/user-input-in-windows-forms.md)</ept>.","pos":[521,648],"source":" For more information on messaging, see [User Input in Windows Forms](~/docs/framework/winforms/user-input-in-windows-forms.md)."}]},{"pos":[1029,1207],"content":"Unlike Visual Basic 6.0, the <xref:System.Windows.Forms.Application.DoEvents%2A> method does not call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method.","nodes":[{"content":"Unlike Visual Basic 6.0, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method does not call the <ph id=\"ph2\">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,178],"source":"Unlike Visual Basic 6.0, the <xref:System.Windows.Forms.Application.DoEvents%2A> method does not call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method."}]},{"pos":[1214,1275],"content":"Typically, you use this method in a loop to process messages.","nodes":[{"content":"Typically, you use this method in a loop to process messages.","pos":[0,61]}]},{"pos":[1283,1920],"content":"[!CAUTION]\n Calling this method causes the current thread to be suspended while all waiting window messages are processed. If a message causes an event to be triggered, then other areas of your application code may execute. This can cause your application to exhibit unexpected behaviors that are difficult to debug. If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread. For more information about asynchronous programming, see [Asynchronous Programming Model (APM)](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).","leadings":["","> "],"nodes":[{"content":" Calling this method causes the current thread to be suspended while all waiting window messages are processed. If a message causes an event to be triggered, then other areas of your application code may execute. This can cause your application to exhibit unexpected behaviors that are difficult to debug. If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread. For more information about asynchronous programming, see [Asynchronous Programming Model (APM)](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).","pos":[11,635],"nodes":[{"content":"Calling this method causes the current thread to be suspended while all waiting window messages are processed.","pos":[1,111]},{"content":"If a message causes an event to be triggered, then other areas of your application code may execute.","pos":[112,212]},{"content":"This can cause your application to exhibit unexpected behaviors that are difficult to debug.","pos":[213,305]},{"content":"If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread.","pos":[306,438]},{"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming Model (APM)<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)</ept>.","pos":[439,624],"source":" For more information about asynchronous programming, see [Asynchronous Programming Model (APM)](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)."}]}]}],"pos":[25469,27401],"yaml":true,"extradata":"MT"},{"content":"Enables visual styles for the application.","nodes":[{"pos":[0,42],"content":"Enables visual styles for the application.","nodes":[{"content":"Enables visual styles for the application.","pos":[0,42]}]}],"pos":[30483,30526],"yaml":true},{"content":"This method enables visual styles for the application. Visual styles are the colors, fonts, and other visual elements that form an operating system theme. Controls will draw with visual styles if the control and the operating system support it. To have an effect, <xref:System.Windows.Forms.Application.EnableVisualStyles> must be called before creating any controls in the application; typically, <xref:System.Windows.Forms.Application.EnableVisualStyles> is the first line in the `Main` function. A separate manifest is not required to enable visual styles when calling <xref:System.Windows.Forms.Application.EnableVisualStyles>.  \n  \n> [!NOTE]\n>  Prior to the .NET Framework 2.0, the `FlatStyle` property of some controls, such as controls that derive from <xref:System.Windows.Forms.ButtonBase>, had to be set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName> in order for the controls to be drawn with visual styles. In applications written with the .NET Framework 2.0, this is no longer necessary.  \n  \n> [!NOTE]\n>  This method will have no effect for controls hosted in Internet Explorer.","nodes":[{"pos":[0,631],"content":"This method enables visual styles for the application. Visual styles are the colors, fonts, and other visual elements that form an operating system theme. Controls will draw with visual styles if the control and the operating system support it. To have an effect, <xref:System.Windows.Forms.Application.EnableVisualStyles> must be called before creating any controls in the application; typically, <xref:System.Windows.Forms.Application.EnableVisualStyles> is the first line in the `Main` function. A separate manifest is not required to enable visual styles when calling <xref:System.Windows.Forms.Application.EnableVisualStyles>.","nodes":[{"content":"This method enables visual styles for the application.","pos":[0,54]},{"content":"Visual styles are the colors, fonts, and other visual elements that form an operating system theme.","pos":[55,154]},{"content":"Controls will draw with visual styles if the control and the operating system support it.","pos":[155,244]},{"content":"To have an effect, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> must be called before creating any controls in the application; typically, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> is the first line in the <ph id=\"ph3\">`Main`</ph> function.","pos":[245,498],"source":" To have an effect, <xref:System.Windows.Forms.Application.EnableVisualStyles> must be called before creating any controls in the application; typically, <xref:System.Windows.Forms.Application.EnableVisualStyles> is the first line in the `Main` function."},{"content":"A separate manifest is not required to enable visual styles when calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>.","pos":[499,631],"source":" A separate manifest is not required to enable visual styles when calling <xref:System.Windows.Forms.Application.EnableVisualStyles>."}]},{"pos":[639,1019],"content":"[!NOTE]\n Prior to the .NET Framework 2.0, the `FlatStyle` property of some controls, such as controls that derive from <xref:System.Windows.Forms.ButtonBase>, had to be set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName> in order for the controls to be drawn with visual styles. In applications written with the .NET Framework 2.0, this is no longer necessary.","leadings":["","> "],"nodes":[{"content":" Prior to the .NET Framework 2.0, the `FlatStyle` property of some controls, such as controls that derive from <xref:System.Windows.Forms.ButtonBase>, had to be set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName> in order for the controls to be drawn with visual styles. In applications written with the .NET Framework 2.0, this is no longer necessary.","pos":[8,378],"nodes":[{"content":"Prior to the .NET Framework 2.0, the <ph id=\"ph1\">`FlatStyle`</ph> property of some controls, such as controls that derive from <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>, had to be set to <ph id=\"ph3\">&lt;xref:System.Windows.Forms.FlatStyle?displayProperty=fullName&gt;</ph> in order for the controls to be drawn with visual styles.","pos":[1,288],"source":" Prior to the .NET Framework 2.0, the `FlatStyle` property of some controls, such as controls that derive from <xref:System.Windows.Forms.ButtonBase>, had to be set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName> in order for the controls to be drawn with visual styles."},{"content":"In applications written with the .NET Framework 2.0, this is no longer necessary.","pos":[289,370]}]}]},{"pos":[1027,1111],"content":"[!NOTE]\n This method will have no effect for controls hosted in Internet Explorer.","leadings":["","> "],"nodes":[{"content":"This method will have no effect for controls hosted in Internet Explorer.","pos":[9,82]}]}],"pos":[30537,31657],"yaml":true,"extradata":"MT"},{"content":"Occurs when the application is about to enter a modal state.","nodes":[{"pos":[0,60],"content":"Occurs when the application is about to enter a modal state.","nodes":[{"content":"Occurs when the application is about to enter a modal state.","pos":[0,60]}]}],"pos":[33528,33589],"yaml":true},{"content":"> [!CAUTION]\n>  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","nodes":[{"pos":[2,147],"content":"[!CAUTION]\n Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","leadings":["","> "],"nodes":[{"content":"Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","pos":[12,143]}]}],"pos":[33600,33760],"yaml":true,"extradata":"MT"},{"content":"Gets the path for the executable file that started the application, including the executable name.","nodes":[{"pos":[0,98],"content":"Gets the path for the executable file that started the application, including the executable name.","nodes":[{"content":"Gets the path for the executable file that started the application, including the executable name.","pos":[0,98]}]}],"pos":[35980,36079],"yaml":true},{"content":"The path and executable name for the executable file that started the application.  \n  \n This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"pos":[0,82],"content":"The path and executable name for the executable file that started the application.","nodes":[{"content":"The path and executable name for the executable file that started the application.","pos":[0,82]}]},{"pos":[89,565],"content":"This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"content":"This path will be different depending on whether the Windows Forms application is deployed using <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.","pos":[0,151],"source":"This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\\Documents and Settings<ph id=\"ph2\">\\\\</ph><bpt id=\"p1\">*</bpt>username<ept id=\"p1\">*</ept> directory.","pos":[152,317],"source":"[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id=\"p1\">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.","pos":[318,476],"source":" For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)."}]}],"pos":[36204,36777],"yaml":true},{"content":"Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.","nodes":[{"pos":[0,131],"content":"Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.","nodes":[{"content":"Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.","pos":[0,131]}]}],"pos":[37739,37871],"yaml":true},{"content":"The <xref:System.Windows.Forms.Application.Exit%2A> method stops all running message loops on all threads and closes all windows of the application. This method does not necessarily force the application to exit. The <xref:System.Windows.Forms.Application.Exit%2A> method is typically called from within a message loop, and forces <xref:System.Windows.Forms.Application.Run%2A> to return. To exit a message loop for the current thread only, call <xref:System.Windows.Forms.Application.ExitThread%2A>.  \n  \n <xref:System.Windows.Forms.Application.Exit%2A> raises the following events and performs the associated conditional actions:  \n  \n-   A <xref:System.Windows.Forms.Form.FormClosing> event is raised for every form represented by the <xref:System.Windows.Forms.Application.OpenForms%2A> property. This event can be canceled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of their <xref:System.Windows.Forms.FormClosingEventArgs> parameter to `true`.  \n  \n-   If one of more of the handlers cancels the event, then <xref:System.Windows.Forms.Application.Exit%2A> returns without further action. Otherwise, a <xref:System.Windows.Forms.Form.FormClosed> event is raised for every open form, then all running message loops and forms are closed.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Application.Exit%2A> method does not raise the <xref:System.Windows.Forms.Form.Closed> and <xref:System.Windows.Forms.Form.Closing> events, which are obsolete as of [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].","nodes":[{"pos":[0,500],"content":"The <xref:System.Windows.Forms.Application.Exit%2A> method stops all running message loops on all threads and closes all windows of the application. This method does not necessarily force the application to exit. The <xref:System.Windows.Forms.Application.Exit%2A> method is typically called from within a message loop, and forces <xref:System.Windows.Forms.Application.Run%2A> to return. To exit a message loop for the current thread only, call <xref:System.Windows.Forms.Application.ExitThread%2A>.","nodes":[{"content":"The <xref:System.Windows.Forms.Application.Exit%2A> method stops all running message loops on all threads and closes all windows of the application. This method does not necessarily force the application to exit. The <xref:System.Windows.Forms.Application.Exit%2A> method is typically called from within a message loop, and forces <xref:System.Windows.Forms.Application.Run%2A> to return. To exit a message loop for the current thread only, call <xref:System.Windows.Forms.Application.ExitThread%2A>.","pos":[0,500],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method stops all running message loops on all threads and closes all windows of the application.","pos":[0,148],"source":"The <xref:System.Windows.Forms.Application.Exit%2A> method stops all running message loops on all threads and closes all windows of the application."},{"content":"This method does not necessarily force the application to exit.","pos":[149,212]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method is typically called from within a message loop, and forces <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to return.","pos":[213,388],"source":" The <xref:System.Windows.Forms.Application.Exit%2A> method is typically called from within a message loop, and forces <xref:System.Windows.Forms.Application.Run%2A> to return."},{"content":"To exit a message loop for the current thread only, call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>.","pos":[389,500],"source":" To exit a message loop for the current thread only, call <xref:System.Windows.Forms.Application.ExitThread%2A>."}]}]},{"pos":[507,631],"content":"<xref:System.Windows.Forms.Application.Exit%2A> raises the following events and performs the associated conditional actions:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> raises the following events and performs the associated conditional actions:","pos":[0,124],"source":"<xref:System.Windows.Forms.Application.Exit%2A> raises the following events and performs the associated conditional actions:"}]},{"pos":[641,985],"content":"A <xref:System.Windows.Forms.Form.FormClosing> event is raised for every form represented by the <xref:System.Windows.Forms.Application.OpenForms%2A> property. This event can be canceled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of their <xref:System.Windows.Forms.FormClosingEventArgs> parameter to `true`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised for every form represented by the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> property.","pos":[0,159],"source":"A <xref:System.Windows.Forms.Form.FormClosing> event is raised for every form represented by the <xref:System.Windows.Forms.Application.OpenForms%2A> property."},{"content":"This event can be canceled by setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of their <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> parameter to <ph id=\"ph3\">`true`</ph>.","pos":[160,344],"source":" This event can be canceled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of their <xref:System.Windows.Forms.FormClosingEventArgs> parameter to `true`."}]},{"pos":[995,1276],"content":"If one of more of the handlers cancels the event, then <xref:System.Windows.Forms.Application.Exit%2A> returns without further action. Otherwise, a <xref:System.Windows.Forms.Form.FormClosed> event is raised for every open form, then all running message loops and forms are closed.","nodes":[{"content":"If one of more of the handlers cancels the event, then <xref:System.Windows.Forms.Application.Exit%2A> returns without further action. Otherwise, a <xref:System.Windows.Forms.Form.FormClosed> event is raised for every open form, then all running message loops and forms are closed.","pos":[0,281],"nodes":[{"content":"If one of more of the handlers cancels the event, then <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> returns without further action.","pos":[0,134],"source":"If one of more of the handlers cancels the event, then <xref:System.Windows.Forms.Application.Exit%2A> returns without further action."},{"content":"Otherwise, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event is raised for every open form, then all running message loops and forms are closed.","pos":[135,281],"source":" Otherwise, a <xref:System.Windows.Forms.Form.FormClosed> event is raised for every open form, then all running message loops and forms are closed."}]}]},{"pos":[1284,1543],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Application.Exit%2A> method does not raise the <xref:System.Windows.Forms.Form.Closed> and <xref:System.Windows.Forms.Form.Closing> events, which are obsolete as of [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method does not raise the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events, which are obsolete as of <ph id=\"ph4\">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>.","pos":[9,257],"source":" The <xref:System.Windows.Forms.Application.Exit%2A> method does not raise the <xref:System.Windows.Forms.Form.Closed> and <xref:System.Windows.Forms.Form.Closing> events, which are obsolete as of [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]."}]}],"pos":[37882,39437],"yaml":true,"extradata":"MT"},{"content":"Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.","nodes":[{"pos":[0,131],"content":"Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.","nodes":[{"content":"Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.","pos":[0,131]}]}],"pos":[41948,42080],"yaml":true},{"content":"Returns whether any <xref href=\"System.Windows.Forms.Form\"></xref> within the application cancelled the exit.","nodes":[{"pos":[0,109],"content":"Returns whether any <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> within the application cancelled the exit.","source":"Returns whether any <xref href=\"System.Windows.Forms.Form\"></xref> within the application cancelled the exit."}],"pos":[42267,42377],"yaml":true},{"content":"Exits the message loop on the current thread and closes all windows on the thread.","nodes":[{"pos":[0,82],"content":"Exits the message loop on the current thread and closes all windows on the thread.","nodes":[{"content":"Exits the message loop on the current thread and closes all windows on the thread.","pos":[0,82]}]}],"pos":[43382,43465],"yaml":true},{"content":"Use this method to exit the message loop of the current thread. This method causes the call to <xref:System.Windows.Forms.Application.Run%2A> for the current thread to return. To exit the entire application, call <xref:System.Windows.Forms.Application.Exit%2A>.","nodes":[{"pos":[0,261],"content":"Use this method to exit the message loop of the current thread. This method causes the call to <xref:System.Windows.Forms.Application.Run%2A> for the current thread to return. To exit the entire application, call <xref:System.Windows.Forms.Application.Exit%2A>.","nodes":[{"content":"Use this method to exit the message loop of the current thread. This method causes the call to <xref:System.Windows.Forms.Application.Run%2A> for the current thread to return. To exit the entire application, call <xref:System.Windows.Forms.Application.Exit%2A>.","pos":[0,261],"nodes":[{"content":"Use this method to exit the message loop of the current thread.","pos":[0,63]},{"content":"This method causes the call to <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> for the current thread to return.","pos":[64,175],"source":" This method causes the call to <xref:System.Windows.Forms.Application.Run%2A> for the current thread to return."},{"content":"To exit the entire application, call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>.","pos":[176,261],"source":" To exit the entire application, call <xref:System.Windows.Forms.Application.Exit%2A>."}]}]}],"pos":[43476,43738],"yaml":true,"extradata":"MT"},{"content":"Runs any filters against a window message, and returns a copy of the modified message.","nodes":[{"pos":[0,86],"content":"Runs any filters against a window message, and returns a copy of the modified message.","nodes":[{"content":"Runs any filters against a window message, and returns a copy of the modified message.","pos":[0,86]}]}],"pos":[44940,45027],"yaml":true},{"content":"The Windows event message to filter.","nodes":[{"pos":[0,36],"content":"The Windows event message to filter.","nodes":[{"content":"The Windows event message to filter.","pos":[0,36]}]}],"pos":[45221,45258],"yaml":true},{"content":"`True` if the filters were processed; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`True`</ph> if the filters were processed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if the filters were processed; otherwise, `false`."}],"pos":[45316,45376],"yaml":true},{"content":"Occurs when the application finishes processing and is about to enter the idle state.","nodes":[{"pos":[0,85],"content":"Occurs when the application finishes processing and is about to enter the idle state.","nodes":[{"content":"Occurs when the application finishes processing and is about to enter the idle state.","pos":[0,85]}]}],"pos":[46347,46433],"yaml":true},{"content":"If you have tasks that you must perform before the thread becomes idle, attach them to this event.  \n  \n> [!CAUTION]\n>  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","nodes":[{"pos":[0,98],"content":"If you have tasks that you must perform before the thread becomes idle, attach them to this event.","nodes":[{"content":"If you have tasks that you must perform before the thread becomes idle, attach them to this event.","pos":[0,98]}]},{"pos":[106,251],"content":"[!CAUTION]\n Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","leadings":["","> "],"nodes":[{"content":"Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","pos":[12,143]}]}],"pos":[46444,46701],"yaml":true,"extradata":"MT"},{"content":"Occurs when the application is about to leave a modal state.","nodes":[{"pos":[0,60],"content":"Occurs when the application is about to leave a modal state.","nodes":[{"content":"Occurs when the application is about to leave a modal state.","pos":[0,60]}]}],"pos":[48879,48940],"yaml":true},{"content":"> [!CAUTION]\n>  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","nodes":[{"pos":[2,147],"content":"[!CAUTION]\n Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","leadings":["","> "],"nodes":[{"content":"Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","pos":[12,143]}]}],"pos":[48951,49111],"yaml":true,"extradata":"MT"},{"content":"Gets the path for the application data of a local, non-roaming user.","nodes":[{"pos":[0,68],"content":"Gets the path for the application data of a local, non-roaming user.","nodes":[{"content":"Gets the path for the application data of a local, non-roaming user.","pos":[0,68]}]}],"pos":[51367,51436],"yaml":true},{"content":"A local user is one whose user profile is stored on the system on which the user logged on. If a path does not exist, one is created in the following format:  \n  \n *Base Path*\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>   \n  \n A typical base path is C:\\Documents and Settings\\\\*username*\\Local Settings\\Application Data. This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] creates its own application data directory that is isolated from all other applications. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"pos":[0,157],"content":"A local user is one whose user profile is stored on the system on which the user logged on. If a path does not exist, one is created in the following format:","nodes":[{"content":"A local user is one whose user profile is stored on the system on which the user logged on. If a path does not exist, one is created in the following format:","pos":[0,157],"nodes":[{"content":"A local user is one whose user profile is stored on the system on which the user logged on.","pos":[0,91]},{"content":"If a path does not exist, one is created in the following format:","pos":[92,157]}]}]},{"pos":[164,346],"content":"<bpt id=\"p1\">*</bpt>Base Path<ept id=\"p1\">*</ept><ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id=\"ph3\">\\\\</ph><ph id=\"ph4\">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id=\"ph5\">\\\\</ph><ph id=\"ph6\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>","source":"*Base Path*\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>"},{"pos":[354,896],"content":"A typical base path is C:\\Documents and Settings\\\\*username*\\Local Settings\\Application Data. This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] creates its own application data directory that is isolated from all other applications. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"content":"A typical base path is C:\\Documents and Settings<ph id=\"ph1\">\\\\</ph><bpt id=\"p1\">*</bpt>username<ept id=\"p1\">*</ept>\\Local Settings\\Application Data.","pos":[0,93],"source":"A typical base path is C:\\Documents and Settings\\\\*username*\\Local Settings\\Application Data."},{"content":"This path will be different, however, if the Windows Forms application is deployed by using <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.","pos":[94,240],"source":" This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> creates its own application data directory that is isolated from all other applications.","pos":[241,383],"source":"[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] creates its own application data directory that is isolated from all other applications."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id=\"p1\">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.","pos":[384,542],"source":" For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)."}]}],"pos":[51447,52361],"yaml":true,"extradata":"MT"},{"content":"The path for the application data of a local, non-roaming user.","nodes":[{"pos":[0,63],"content":"The path for the application data of a local, non-roaming user.","nodes":[{"content":"The path for the application data of a local, non-roaming user.","pos":[0,63]}]}],"pos":[54065,54129],"yaml":true},{"content":"Gets a value indicating whether a message loop exists on this thread.","nodes":[{"pos":[0,69],"content":"Gets a value indicating whether a message loop exists on this thread.","nodes":[{"content":"Gets a value indicating whether a message loop exists on this thread.","pos":[0,69]}]}],"pos":[55135,55205],"yaml":true},{"content":"When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return `false`. Use <xref:System.Windows.Forms.Application.RegisterMessageLoop%2A> to instruct Windows Forms if the hosting environment still has an active message loop.","nodes":[{"pos":[0,277],"content":"When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return `false`. Use <xref:System.Windows.Forms.Application.RegisterMessageLoop%2A> to instruct Windows Forms if the hosting environment still has an active message loop.","nodes":[{"content":"When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return <ph id=\"ph1\">`false`</ph>.","pos":[0,123],"source":"When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return `false`."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.RegisterMessageLoop%2A&gt;</ph> to instruct Windows Forms if the hosting environment still has an active message loop.","pos":[124,277],"source":" Use <xref:System.Windows.Forms.Application.RegisterMessageLoop%2A> to instruct Windows Forms if the hosting environment still has an active message loop."}]}],"pos":[55216,55494],"yaml":true,"extradata":"MT"},{"content":"`true` if a message loop exists; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if a message loop exists; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a message loop exists; otherwise, `false`."}],"pos":[55615,55670],"yaml":true},{"content":"Initializes OLE on the current thread.","nodes":[{"pos":[0,38],"content":"Initializes OLE on the current thread.","nodes":[{"content":"Initializes OLE on the current thread.","pos":[0,38]}]}],"pos":[56671,56710],"yaml":true},{"content":"Call this method before calling any `Microsoft.Win32` method that requires OLE. <xref:System.Windows.Forms.Application.OleRequired%2A> first checks to see if OLE has been initialized on the current thread. If not, it initializes the thread for OLE.  \n  \n> [!NOTE]\n>  Unless a thread calls OLE methods directly, you do not need to call this method.","nodes":[{"pos":[0,248],"content":"Call this method before calling any `Microsoft.Win32` method that requires OLE. <xref:System.Windows.Forms.Application.OleRequired%2A> first checks to see if OLE has been initialized on the current thread. If not, it initializes the thread for OLE.","nodes":[{"content":"Call this method before calling any <ph id=\"ph1\">`Microsoft.Win32`</ph> method that requires OLE.","pos":[0,79],"source":"Call this method before calling any `Microsoft.Win32` method that requires OLE."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.OleRequired%2A&gt;</ph> first checks to see if OLE has been initialized on the current thread.","pos":[80,205],"source":" <xref:System.Windows.Forms.Application.OleRequired%2A> first checks to see if OLE has been initialized on the current thread."},{"content":"If not, it initializes the thread for OLE.","pos":[206,248]}]},{"pos":[256,347],"content":"[!NOTE]\n Unless a thread calls OLE methods directly, you do not need to call this method.","leadings":["","> "],"nodes":[{"content":"Unless a thread calls OLE methods directly, you do not need to call this method.","pos":[9,89]}]}],"pos":[56721,57074],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Threading.ApartmentState\"></xref> values.","nodes":[{"pos":[0,71],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.ApartmentState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Threading.ApartmentState\"></xref> values."}],"pos":[57253,57325],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Application.ThreadException\"></xref> event.","nodes":[{"pos":[0,87],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Application.ThreadException\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Application.ThreadException\"></xref> event."}],"pos":[58443,58531],"yaml":true},{"content":"Call <xref:System.Windows.Forms.Application.OnThreadException%2A> to raise an exception that will halt processing of the application.  \n  \n The <xref:System.Windows.Forms.Application> class has a <xref:System.Windows.Forms.Application.ThreadException> event. You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions. If you do not attach an event handler, <xref:System.Windows.Forms.Application.OnThreadException%2A> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.  \n  \n <xref:System.Windows.Forms.Application.OnThreadException%2A> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms. Unhandled exceptions on other threads are handled by the <xref:System.AppDomain.UnhandledException> event.","nodes":[{"pos":[0,133],"content":"Call <xref:System.Windows.Forms.Application.OnThreadException%2A> to raise an exception that will halt processing of the application.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> to raise an exception that will halt processing of the application.","pos":[0,133],"source":"Call <xref:System.Windows.Forms.Application.OnThreadException%2A> to raise an exception that will halt processing of the application."}]},{"pos":[140,595],"content":"The <xref:System.Windows.Forms.Application> class has a <xref:System.Windows.Forms.Application.ThreadException> event. You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions. If you do not attach an event handler, <xref:System.Windows.Forms.Application.OnThreadException%2A> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.","nodes":[{"content":"The <xref:System.Windows.Forms.Application> class has a <xref:System.Windows.Forms.Application.ThreadException> event. You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions. If you do not attach an event handler, <xref:System.Windows.Forms.Application.OnThreadException%2A> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.","pos":[0,455],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event.","pos":[0,118],"source":"The <xref:System.Windows.Forms.Application> class has a <xref:System.Windows.Forms.Application.ThreadException> event."},{"content":"You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions.","pos":[119,232]},{"content":"If you do not attach an event handler, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.","pos":[233,455],"source":" If you do not attach an event handler, <xref:System.Windows.Forms.Application.OnThreadException%2A> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error."}]}]},{"pos":[602,883],"content":"<xref:System.Windows.Forms.Application.OnThreadException%2A> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms. Unhandled exceptions on other threads are handled by the <xref:System.AppDomain.UnhandledException> event.","nodes":[{"content":"<xref:System.Windows.Forms.Application.OnThreadException%2A> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms. Unhandled exceptions on other threads are handled by the <xref:System.AppDomain.UnhandledException> event.","pos":[0,281],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms.","pos":[0,174],"source":"<xref:System.Windows.Forms.Application.OnThreadException%2A> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms."},{"content":"Unhandled exceptions on other threads are handled by the <ph id=\"ph1\">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event.","pos":[175,281],"source":" Unhandled exceptions on other threads are handled by the <xref:System.AppDomain.UnhandledException> event."}]}]}],"pos":[58542,59432],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Exception\"></xref> that represents the exception that was thrown.","nodes":[{"pos":[0,87],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that represents the exception that was thrown.","source":"An <xref href=\"System.Exception\"></xref> that represents the exception that was thrown."}],"pos":[59583,59671],"yaml":true},{"content":"Gets a collection of open forms owned by the application.","nodes":[{"pos":[0,57],"content":"Gets a collection of open forms owned by the application.","nodes":[{"content":"Gets a collection of open forms owned by the application.","pos":[0,57]}]}],"pos":[60662,60720],"yaml":true},{"content":"The <xref:System.Windows.Forms.Application.OpenForms%2A> property represents a read-only collection of forms owned by the application. This collection can be searched by index position or by the <xref:System.Windows.Forms.Control.Name%2A> of the <xref:System.Windows.Forms.Form>.","nodes":[{"pos":[0,279],"content":"The <xref:System.Windows.Forms.Application.OpenForms%2A> property represents a read-only collection of forms owned by the application. This collection can be searched by index position or by the <xref:System.Windows.Forms.Control.Name%2A> of the <xref:System.Windows.Forms.Form>.","nodes":[{"content":"The <xref:System.Windows.Forms.Application.OpenForms%2A> property represents a read-only collection of forms owned by the application. This collection can be searched by index position or by the <xref:System.Windows.Forms.Control.Name%2A> of the <xref:System.Windows.Forms.Form>.","pos":[0,279],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> property represents a read-only collection of forms owned by the application.","pos":[0,134],"source":"The <xref:System.Windows.Forms.Application.OpenForms%2A> property represents a read-only collection of forms owned by the application."},{"content":"This collection can be searched by index position or by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph>.","pos":[135,279],"source":" This collection can be searched by index position or by the <xref:System.Windows.Forms.Control.Name%2A> of the <xref:System.Windows.Forms.Form>."}]}]}],"pos":[60731,61011],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.FormCollection\"></xref> containing all the currently open forms owned by this application.","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FormCollection\"&gt;&lt;/xref&gt;</ph> containing all the currently open forms owned by this application.","source":"A <xref href=\"System.Windows.Forms.FormCollection\"></xref> containing all the currently open forms owned by this application."}],"pos":[61182,61308],"yaml":true},{"content":"Gets the product name associated with this application.","nodes":[{"pos":[0,55],"content":"Gets the product name associated with this application.","nodes":[{"content":"Gets the product name associated with this application.","pos":[0,55]}]}],"pos":[62303,62359],"yaml":true},{"content":"`ProductName` is taken from the metadata of the assembly containing the main form of the current application. You can set it by setting <xref:System.Reflection.AssemblyProductAttribute> inside of your assembly manifest. For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md).","nodes":[{"pos":[0,317],"content":"`ProductName` is taken from the metadata of the assembly containing the main form of the current application. You can set it by setting <xref:System.Reflection.AssemblyProductAttribute> inside of your assembly manifest. For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md).","nodes":[{"content":"<ph id=\"ph1\">`ProductName`</ph> is taken from the metadata of the assembly containing the main form of the current application.","pos":[0,109],"source":"`ProductName` is taken from the metadata of the assembly containing the main form of the current application."},{"content":"You can set it by setting <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph> inside of your assembly manifest.","pos":[110,219],"source":" You can set it by setting <xref:System.Reflection.AssemblyProductAttribute> inside of your assembly manifest."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Assembly Manifest<ept id=\"p1\">](~/docs/framework/app-domains/assembly-manifest.md)</ept>.","pos":[220,317],"source":" For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md)."}]}],"pos":[62370,62690],"yaml":true,"extradata":"MT"},{"content":"The product name.","nodes":[{"pos":[0,17],"content":"The product name.","nodes":[{"content":"The product name.","pos":[0,17]}]}],"pos":[63469,63487],"yaml":true},{"content":"Gets the product version associated with this application.","nodes":[{"pos":[0,58],"content":"Gets the product version associated with this application.","nodes":[{"content":"Gets the product version associated with this application.","pos":[0,58]}]}],"pos":[64502,64561],"yaml":true},{"content":"Typically, a version number displays as *major number*.*minor number*.*build number*.*private part number*. You can set it explicitly by setting the assembly version within your assembly manifest. For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md).  \n  \n <xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it. If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>. If this attribute does not exist, both properties use the version of the executable file instead.","nodes":[{"pos":[0,294],"content":"Typically, a version number displays as *major number*.*minor number*.*build number*.*private part number*. You can set it explicitly by setting the assembly version within your assembly manifest. For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md).","nodes":[{"content":"Typically, a version number displays as <bpt id=\"p1\">*</bpt>major number<ept id=\"p1\">*</ept>.<bpt id=\"p2\">*</bpt>minor number<ept id=\"p2\">*</ept>.<bpt id=\"p3\">*</bpt>build number<ept id=\"p3\">*</ept>.<bpt id=\"p4\">*</bpt>private part number<ept id=\"p4\">*</ept>.","pos":[0,107],"source":"Typically, a version number displays as *major number*.*minor number*.*build number*.*private part number*."},{"content":"You can set it explicitly by setting the assembly version within your assembly manifest.","pos":[108,196]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Assembly Manifest<ept id=\"p1\">](~/docs/framework/app-domains/assembly-manifest.md)</ept>.","pos":[197,294],"source":" For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md)."}]},{"pos":[301,748],"content":"<xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it. If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>. If this attribute does not exist, both properties use the version of the executable file instead.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> first looks to see if the assembly containing the main executable has the <ph id=\"ph2\">`AssemblyInformationalVersion`</ph> attribute on it.","pos":[0,179],"source":"<xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it."},{"content":"If this attribute exists, it is used for both <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.","pos":[180,349],"source":" If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>."},{"content":"If this attribute does not exist, both properties use the version of the executable file instead.","pos":[350,447]}]}],"pos":[64572,65325],"yaml":true,"extradata":"MT"},{"content":"The product version.","nodes":[{"pos":[0,20],"content":"The product version.","nodes":[{"content":"The product version.","pos":[0,20]}]}],"pos":[66125,66146],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Application.Idle\"></xref> event in hosted scenarios.","nodes":[{"pos":[0,96],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Application.Idle\"&gt;&lt;/xref&gt;</ph> event in hosted scenarios.","source":"Raises the <xref href=\"System.Windows.Forms.Application.Idle\"></xref> event in hosted scenarios."}],"pos":[67219,67316],"yaml":true},{"content":"This method is used when hosting Windows Forms in another environment, such as an unmanaged application. You should call <xref:System.Windows.Forms.Application.RaiseIdle%2A> when the hosting application enters an idle state. This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.","nodes":[{"pos":[0,368],"content":"This method is used when hosting Windows Forms in another environment, such as an unmanaged application. You should call <xref:System.Windows.Forms.Application.RaiseIdle%2A> when the hosting application enters an idle state. This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.","nodes":[{"content":"This method is used when hosting Windows Forms in another environment, such as an unmanaged application. You should call <xref:System.Windows.Forms.Application.RaiseIdle%2A> when the hosting application enters an idle state. This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.","pos":[0,368],"nodes":[{"content":"This method is used when hosting Windows Forms in another environment, such as an unmanaged application.","pos":[0,104]},{"content":"You should call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.RaiseIdle%2A&gt;</ph> when the hosting application enters an idle state.","pos":[105,224],"source":" You should call <xref:System.Windows.Forms.Application.RaiseIdle%2A> when the hosting application enters an idle state."},{"content":"This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.","pos":[225,368]}]}]}],"pos":[67327,67696],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> objects to pass to the <xref href=\"System.Windows.Forms.Application.Idle\"></xref> event.","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> objects to pass to the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Application.Idle\"&gt;&lt;/xref&gt;</ph> event.","source":"The <xref href=\"System.EventArgs\"></xref> objects to pass to the <xref href=\"System.Windows.Forms.Application.Idle\"></xref> event."}],"pos":[67839,67970],"yaml":true},{"content":"Registers a callback for checking whether the message loop is running in hosted environments.","nodes":[{"pos":[0,93],"content":"Registers a callback for checking whether the message loop is running in hosted environments.","nodes":[{"content":"Registers a callback for checking whether the message loop is running in hosted environments.","pos":[0,93]}]}],"pos":[69289,69383],"yaml":true},{"content":"This method is used when hosting Windows Forms in another environment, such as an unmanaged application. In hosted environments, the <xref:System.Windows.Forms.Application.MessageLoop%2A> property will always return false if Windows Forms is not processing messages. Use this callback to tell Windows Forms if the hosting environment is still processing messages.","nodes":[{"pos":[0,363],"content":"This method is used when hosting Windows Forms in another environment, such as an unmanaged application. In hosted environments, the <xref:System.Windows.Forms.Application.MessageLoop%2A> property will always return false if Windows Forms is not processing messages. Use this callback to tell Windows Forms if the hosting environment is still processing messages.","nodes":[{"content":"This method is used when hosting Windows Forms in another environment, such as an unmanaged application. In hosted environments, the <xref:System.Windows.Forms.Application.MessageLoop%2A> property will always return false if Windows Forms is not processing messages. Use this callback to tell Windows Forms if the hosting environment is still processing messages.","pos":[0,363],"nodes":[{"content":"This method is used when hosting Windows Forms in another environment, such as an unmanaged application.","pos":[0,104]},{"content":"In hosted environments, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.MessageLoop%2A&gt;</ph> property will always return false if Windows Forms is not processing messages.","pos":[105,266],"source":" In hosted environments, the <xref:System.Windows.Forms.Application.MessageLoop%2A> property will always return false if Windows Forms is not processing messages."},{"content":"Use this callback to tell Windows Forms if the hosting environment is still processing messages.","pos":[267,363]}]}]}],"pos":[69394,69758],"yaml":true,"extradata":"MT"},{"content":"The method to call when Windows Forms needs to check if the hosting environment is still sending messages.","nodes":[{"pos":[0,106],"content":"The method to call when Windows Forms needs to check if the hosting environment is still sending messages.","nodes":[{"content":"The method to call when Windows Forms needs to check if the hosting environment is still sending messages.","pos":[0,106]}]}],"pos":[70004,70111],"yaml":true},{"content":"Removes a message filter from the message pump of the application.","nodes":[{"pos":[0,66],"content":"Removes a message filter from the message pump of the application.","nodes":[{"content":"Removes a message filter from the message pump of the application.","pos":[0,66]}]}],"pos":[71338,71405],"yaml":true},{"content":"You can remove a message filter when you no longer want to capture Windows messages before they are dispatched.","nodes":[{"pos":[0,111],"content":"You can remove a message filter when you no longer want to capture Windows messages before they are dispatched.","nodes":[{"content":"You can remove a message filter when you no longer want to capture Windows messages before they are dispatched.","pos":[0,111]}]}],"pos":[71416,71528],"yaml":true,"extradata":"MT"},{"content":"The implementation of the <xref href=\"System.Windows.Forms.IMessageFilter\"></xref> to remove from the application.","nodes":[{"pos":[0,114],"content":"The implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.IMessageFilter\"&gt;&lt;/xref&gt;</ph> to remove from the application.","source":"The implementation of the <xref href=\"System.Windows.Forms.IMessageFilter\"></xref> to remove from the application."}],"pos":[72565,72680],"yaml":true},{"content":"Gets a value specifying whether the current application is drawing controls with visual styles.","nodes":[{"pos":[0,95],"content":"Gets a value specifying whether the current application is drawing controls with visual styles.","nodes":[{"content":"Gets a value specifying whether the current application is drawing controls with visual styles.","pos":[0,95]}]}],"pos":[73729,73825],"yaml":true},{"content":"If you are drawing a custom control, use this property to decide whether to draw the control with or without visual styles, so that its appearance is consistent with other controls in the application.  \n  \n The following table shows the four conditions that must exist for <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A> to return `true`.  \n  \n|Condition|Description|  \n|---------------|-----------------|  \n|The operating system supports visual styles|To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class.|  \n|The user has enabled visual styles in the operating system|To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class.|  \n|Visual styles are enabled in the application|Visual styles can be enabled in an application by calling the <xref:System.Windows.Forms.Application.EnableVisualStyles> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls.|  \n|Visual styles are being used to draw the client area of application windows|To verify this condition separately, use the <xref:System.Windows.Forms.Application.VisualStyleState%2A> property of the <xref:System.Windows.Forms.Application> class and verify that it has the value <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName> or <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName>.|","nodes":[{"pos":[0,200],"content":"If you are drawing a custom control, use this property to decide whether to draw the control with or without visual styles, so that its appearance is consistent with other controls in the application.","nodes":[{"content":"If you are drawing a custom control, use this property to decide whether to draw the control with or without visual styles, so that its appearance is consistent with other controls in the application.","pos":[0,200]}]},{"pos":[207,356],"content":"The following table shows the four conditions that must exist for <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A&gt;</ph> to return <ph id=\"ph2\">`true`</ph>.","source":"The following table shows the four conditions that must exist for <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A> to return `true`."},{"pos":[363,372],"content":"Condition","nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[373,384],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[427,470],"content":"The operating system supports visual styles","nodes":[{"content":"The operating system supports visual styles","pos":[0,43]}]},{"pos":[471,685],"content":"To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class.","nodes":[{"content":"To verify this condition separately, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> class.","pos":[0,214],"source":"To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class."}]},{"pos":[690,748],"content":"The user has enabled visual styles in the operating system","nodes":[{"content":"The user has enabled visual styles in the operating system","pos":[0,58]}]},{"pos":[749,963],"content":"To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class.","nodes":[{"content":"To verify this condition separately, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> class.","pos":[0,214],"source":"To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class."}]},{"pos":[968,1012],"content":"Visual styles are enabled in the application","nodes":[{"content":"Visual styles are enabled in the application","pos":[0,44]}]},{"pos":[1013,1259],"content":"Visual styles can be enabled in an application by calling the <xref:System.Windows.Forms.Application.EnableVisualStyles> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls.","nodes":[{"content":"Visual styles can be enabled in an application by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls.","pos":[0,246],"source":"Visual styles can be enabled in an application by calling the <xref:System.Windows.Forms.Application.EnableVisualStyles> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls."}]},{"pos":[1264,1339],"content":"Visual styles are being used to draw the client area of application windows","nodes":[{"content":"Visual styles are being used to draw the client area of application windows","pos":[0,75]}]},{"pos":[1340,1709],"content":"To verify this condition separately, use the <xref:System.Windows.Forms.Application.VisualStyleState%2A> property of the <xref:System.Windows.Forms.Application> class and verify that it has the value <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName> or <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName>.","nodes":[{"content":"To verify this condition separately, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application&gt;</ph> class and verify that it has the value <ph id=\"ph3\">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName&gt;</ph>.","pos":[0,369],"source":"To verify this condition separately, use the <xref:System.Windows.Forms.Application.VisualStyleState%2A> property of the <xref:System.Windows.Forms.Application> class and verify that it has the value <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName> or <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName>."}]}],"pos":[73836,75558],"yaml":true,"extradata":"MT"},{"content":"`true` if visual styles are enabled for controls in the client area of application windows; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> if visual styles are enabled for controls in the client area of application windows; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if visual styles are enabled for controls in the client area of application windows; otherwise, `false`."}],"pos":[75690,75804],"yaml":true},{"content":"Shuts down the application and starts a new instance immediately.","nodes":[{"pos":[0,65],"content":"Shuts down the application and starts a new instance immediately.","nodes":[{"content":"Shuts down the application and starts a new instance immediately.","pos":[0,65]}]}],"pos":[76792,76858],"yaml":true},{"content":"The most common reason for calling `Restart` is to start a new version of the application that you have downloaded through [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] using the `Update` or `UpdateAsync` method.  \n  \n Applications are restarted in the context in which they were initially run. If your application was started using a URL pointing directly to the application's main executable file, it will be restarted using the same URL. If your application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, it will be restarted using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].  \n  \n If your application was originally supplied command-line options when it first executed, <xref:System.Windows.Forms.Application.Restart%2A> will launch the application again with the same options.","nodes":[{"pos":[0,220],"content":"The most common reason for calling <ph id=\"ph1\">`Restart`</ph> is to start a new version of the application that you have downloaded through <ph id=\"ph2\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> using the <ph id=\"ph3\">`Update`</ph> or <ph id=\"ph4\">`UpdateAsync`</ph> method.","source":"The most common reason for calling `Restart` is to start a new version of the application that you have downloaded through [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] using the `Update` or `UpdateAsync` method."},{"pos":[227,622],"content":"Applications are restarted in the context in which they were initially run. If your application was started using a URL pointing directly to the application's main executable file, it will be restarted using the same URL. If your application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, it will be restarted using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].","nodes":[{"content":"Applications are restarted in the context in which they were initially run.","pos":[0,75]},{"content":"If your application was started using a URL pointing directly to the application's main executable file, it will be restarted using the same URL.","pos":[76,221]},{"content":"If your application is a <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> application, it will be restarted using <ph id=\"ph2\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.","pos":[222,395],"source":" If your application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, it will be restarted using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]."}]},{"pos":[629,825],"content":"If your application was originally supplied command-line options when it first executed, <xref:System.Windows.Forms.Application.Restart%2A> will launch the application again with the same options.","nodes":[{"content":"If your application was originally supplied command-line options when it first executed, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Restart%2A&gt;</ph> will launch the application again with the same options.","pos":[0,196],"source":"If your application was originally supplied command-line options when it first executed, <xref:System.Windows.Forms.Application.Restart%2A> will launch the application again with the same options."}]}],"pos":[76869,77701],"yaml":true,"extradata":"MT"},{"content":"Your code is not a Windows Forms application. You cannot call this method in this context.","nodes":[{"pos":[0,90],"content":"Your code is not a Windows Forms application. You cannot call this method in this context.","nodes":[{"content":"Your code is not a Windows Forms application. You cannot call this method in this context.","pos":[0,90],"nodes":[{"content":"Your code is not a Windows Forms application.","pos":[0,45]},{"content":"You cannot call this method in this context.","pos":[46,90]}]}]}],"pos":[77944,78035],"yaml":true},{"content":"Begins running a standard application message loop on the current thread, without a form.","nodes":[{"pos":[0,89],"content":"Begins running a standard application message loop on the current thread, without a form.","nodes":[{"content":"Begins running a standard application message loop on the current thread, without a form.","pos":[0,89]}]}],"pos":[78891,78981],"yaml":true},{"content":"In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes. Every running Windows-based application requires an active message loop, called the main message loop. When the main message loop is closed, the application exits. In Windows Forms, this loop is closed when the <xref:System.Windows.Forms.Application.Exit%2A> method is called, or when the <xref:System.Windows.Forms.Application.ExitThread%2A> method is called on the thread that is running the main message loop.  \n  \n Most Windows Forms developers will not need to use this version of the method. You should use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29> overload to start an application with a main form, so that the application terminates when the main form is closed. For all other situations, use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29> overload, which supports supplying an <xref:System.Windows.Forms.ApplicationContext> object for better control over the lifetime of the application.","nodes":[{"pos":[0,566],"content":"In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes. Every running Windows-based application requires an active message loop, called the main message loop. When the main message loop is closed, the application exits. In Windows Forms, this loop is closed when the <xref:System.Windows.Forms.Application.Exit%2A> method is called, or when the <xref:System.Windows.Forms.Application.ExitThread%2A> method is called on the thread that is running the main message loop.","nodes":[{"content":"In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes. Every running Windows-based application requires an active message loop, called the main message loop. When the main message loop is closed, the application exits. In Windows Forms, this loop is closed when the <xref:System.Windows.Forms.Application.Exit%2A> method is called, or when the <xref:System.Windows.Forms.Application.ExitThread%2A> method is called on the thread that is running the main message loop.","pos":[0,566],"nodes":[{"content":"In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes.","pos":[0,153]},{"content":"Every running Windows-based application requires an active message loop, called the main message loop.","pos":[154,256]},{"content":"When the main message loop is closed, the application exits.","pos":[257,317]},{"content":"In Windows Forms, this loop is closed when the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method is called, or when the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> method is called on the thread that is running the main message loop.","pos":[318,566],"source":" In Windows Forms, this loop is closed when the <xref:System.Windows.Forms.Application.Exit%2A> method is called, or when the <xref:System.Windows.Forms.Application.ExitThread%2A> method is called on the thread that is running the main message loop."}]}]},{"pos":[573,1133],"content":"Most Windows Forms developers will not need to use this version of the method. You should use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29> overload to start an application with a main form, so that the application terminates when the main form is closed. For all other situations, use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29> overload, which supports supplying an <xref:System.Windows.Forms.ApplicationContext> object for better control over the lifetime of the application.","nodes":[{"content":"Most Windows Forms developers will not need to use this version of the method. You should use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29> overload to start an application with a main form, so that the application terminates when the main form is closed. For all other situations, use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29> overload, which supports supplying an <xref:System.Windows.Forms.ApplicationContext> object for better control over the lifetime of the application.","pos":[0,560],"nodes":[{"content":"Most Windows Forms developers will not need to use this version of the method.","pos":[0,78]},{"content":"You should use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29&gt;</ph> overload to start an application with a main form, so that the application terminates when the main form is closed.","pos":[79,288],"source":" You should use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29> overload to start an application with a main form, so that the application terminates when the main form is closed."},{"content":"For all other situations, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29&gt;</ph> overload, which supports supplying an <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> object for better control over the lifetime of the application.","pos":[289,560],"source":" For all other situations, use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29> overload, which supports supplying an <xref:System.Windows.Forms.ApplicationContext> object for better control over the lifetime of the application."}]}]}],"pos":[78992,80130],"yaml":true,"extradata":"MT"},{"content":"A main message loop is already running on this thread.","nodes":[{"pos":[0,54],"content":"A main message loop is already running on this thread.","nodes":[{"content":"A main message loop is already running on this thread.","pos":[0,54]}]}],"pos":[80373,80428],"yaml":true},{"content":"Begins running a standard application message loop on the current thread, with an <xref href=\"System.Windows.Forms.ApplicationContext\"></xref>.","nodes":[{"pos":[0,143],"content":"Begins running a standard application message loop on the current thread, with an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ApplicationContext\"&gt;&lt;/xref&gt;</ph>.","source":"Begins running a standard application message loop on the current thread, with an <xref href=\"System.Windows.Forms.ApplicationContext\"></xref>."}],"pos":[81483,81627],"yaml":true},{"content":"The message loop runs until <xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> is called or the <xref:System.Windows.Forms.Application.ThreadExit> event is raised on the context object.","nodes":[{"pos":[0,239],"content":"The message loop runs until <xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> is called or the <xref:System.Windows.Forms.Application.ThreadExit> event is raised on the context object.","nodes":[{"content":"The message loop runs until <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> is called or the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event is raised on the context object.","pos":[0,239],"source":"The message loop runs until <xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> is called or the <xref:System.Windows.Forms.Application.ThreadExit> event is raised on the context object."}]}],"pos":[81638,81878],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.ApplicationContext\"></xref> in which the application is run.","nodes":[{"pos":[0,96],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ApplicationContext\"&gt;&lt;/xref&gt;</ph> in which the application is run.","source":"An <xref href=\"System.Windows.Forms.ApplicationContext\"></xref> in which the application is run."}],"pos":[83530,83627],"yaml":true},{"content":"A main message loop is already running on this thread.","nodes":[{"pos":[0,54],"content":"A main message loop is already running on this thread.","nodes":[{"content":"A main message loop is already running on this thread.","pos":[0,54]}]}],"pos":[83801,83856],"yaml":true},{"content":"Begins running a standard application message loop on the current thread, and makes the specified form visible.","nodes":[{"pos":[0,111],"content":"Begins running a standard application message loop on the current thread, and makes the specified form visible.","nodes":[{"content":"Begins running a standard application message loop on the current thread, and makes the specified form visible.","pos":[0,111]}]}],"pos":[84805,84917],"yaml":true},{"content":"Typically, the main function of an application calls this method and passes to it the main window of the application.  \n  \n This method adds an event handler to the `mainForm` parameter for the <xref:System.Windows.Forms.Form.Closed> event. The event handler calls <xref:System.Windows.Forms.Application.ExitThread%2A> to clean up the application.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.Dispose%2A> method of the <xref:System.Windows.Forms.Form> class will be called prior to the return of this method.","nodes":[{"pos":[0,117],"content":"Typically, the main function of an application calls this method and passes to it the main window of the application.","nodes":[{"content":"Typically, the main function of an application calls this method and passes to it the main window of the application.","pos":[0,117]}]},{"pos":[124,347],"content":"This method adds an event handler to the `mainForm` parameter for the <xref:System.Windows.Forms.Form.Closed> event. The event handler calls <xref:System.Windows.Forms.Application.ExitThread%2A> to clean up the application.","nodes":[{"content":"This method adds an event handler to the <ph id=\"ph1\">`mainForm`</ph> parameter for the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event.","pos":[0,116],"source":"This method adds an event handler to the `mainForm` parameter for the <xref:System.Windows.Forms.Form.Closed> event."},{"content":"The event handler calls <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> to clean up the application.","pos":[117,223],"source":" The event handler calls <xref:System.Windows.Forms.Application.ExitThread%2A> to clean up the application."}]},{"pos":[355,520],"content":"[!NOTE]\n The <xref:System.Windows.Forms.Control.Dispose%2A> method of the <xref:System.Windows.Forms.Form> class will be called prior to the return of this method.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class will be called prior to the return of this method.","pos":[9,163],"source":" The <xref:System.Windows.Forms.Control.Dispose%2A> method of the <xref:System.Windows.Forms.Form> class will be called prior to the return of this method."}]}],"pos":[84928,85456],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the form to make visible.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> that represents the form to make visible.","source":"A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the form to make visible."}],"pos":[86953,87044],"yaml":true},{"content":"A main message loop is already running on the current thread.","nodes":[{"pos":[0,61],"content":"A main message loop is already running on the current thread.","nodes":[{"content":"A main message loop is already running on the current thread.","pos":[0,61]}]}],"pos":[87218,87280],"yaml":true},{"content":"Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.","nodes":[{"pos":[0,115],"content":"Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.","nodes":[{"content":"Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.","pos":[0,115]}]}],"pos":[88264,88380],"yaml":true},{"content":"The format string to apply to top-level window captions.","nodes":[{"pos":[0,56],"content":"The format string to apply to top-level window captions.","nodes":[{"content":"The format string to apply to top-level window captions.","pos":[0,56]}]}],"pos":[88521,88578],"yaml":true},{"content":"Sets the application-wide default for the <code>UseCompatibleTextRendering</code> property defined on certain controls.","nodes":[{"pos":[0,119],"content":"Sets the application-wide default for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">UseCompatibleTextRendering</ph><ept id=\"p1\">&lt;/code&gt;</ept> property defined on certain controls.","source":"Sets the application-wide default for the <code>UseCompatibleTextRendering</code> property defined on certain controls."}],"pos":[89794,89914],"yaml":true},{"content":"Certain Windows Forms controls can render their text using either the <xref:System.Windows.Forms.TextRenderer> class, which is based on the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] graphics library, or the <xref:System.Drawing.Graphics> class, which is based on the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] graphics library. This change was made in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] because of performance and localization issues with [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. Use <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> to set the default value of the `UseCompatibleTextRendering` property for controls that support it.  \n  \n The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class. In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.  \n  \n The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts. In earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering. [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application. To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true`. To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> method with a parameter of `true`.  \n  \n You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer. Only call this method in stand-alone Windows Forms applications.","nodes":[{"pos":[0,722],"content":"Certain Windows Forms controls can render their text using either the <xref:System.Windows.Forms.TextRenderer> class, which is based on the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] graphics library, or the <xref:System.Drawing.Graphics> class, which is based on the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] graphics library. This change was made in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] because of performance and localization issues with [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. Use <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> to set the default value of the `UseCompatibleTextRendering` property for controls that support it.","nodes":[{"content":"Certain Windows Forms controls can render their text using either the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class, which is based on the <ph id=\"ph2\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> graphics library, or the <ph id=\"ph3\">&lt;xref:System.Drawing.Graphics&gt;</ph> class, which is based on the <ph id=\"ph4\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> graphics library.","pos":[0,350],"source":"Certain Windows Forms controls can render their text using either the <xref:System.Windows.Forms.TextRenderer> class, which is based on the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] graphics library, or the <xref:System.Drawing.Graphics> class, which is based on the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] graphics library."},{"content":"This change was made in the <ph id=\"ph1\">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> because of performance and localization issues with <ph id=\"ph2\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.","pos":[351,541],"source":" This change was made in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] because of performance and localization issues with [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> to set the default value of the <ph id=\"ph2\">`UseCompatibleTextRendering`</ph> property for controls that support it.","pos":[542,722],"source":" Use <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> to set the default value of the `UseCompatibleTextRendering` property for controls that support it."}]},{"pos":[729,1420],"content":"The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class. In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.","nodes":[{"content":"The <ph id=\"ph1\">`UseCompatibleTextRendering`</ph> property is intended to provide visual compatibility between Windows Forms controls that render text using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class and <ph id=\"ph3\">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> and <ph id=\"ph4\">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> applications that perform custom text rendering using the <ph id=\"ph5\">&lt;xref:System.Drawing.Graphics&gt;</ph> class.","pos":[0,410],"source":"The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class."},{"content":"In most cases, if your application is not being upgraded from <ph id=\"ph1\">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> or <ph id=\"ph2\">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>, it is recommended that you leave <ph id=\"ph3\">`UseCompatibleTextRendering`</ph> set to the default value of <ph id=\"ph4\">`false`</ph>.","pos":[411,691],"source":" In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`."}]},{"pos":[1427,2658],"content":"The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts. In earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering. [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application. To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true`. To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> method with a parameter of `true`.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class was introduced in the <ph id=\"ph3\">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> to improve performance, make text look better, and improve support for international fonts.","pos":[0,272],"source":"The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts."},{"content":"In earlier versions of the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the <ph id=\"ph2\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id=\"ph3\">&lt;xref:System.Drawing.Graphics&gt;</ph> class was used to perform all text rendering.","pos":[273,499],"source":" In earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> calculates character spacing and word wrapping differently from <ph id=\"ph2\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.","pos":[500,672],"source":"[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]."},{"content":"In a Windows Forms application that uses the <ph id=\"ph1\">&lt;xref:System.Drawing.Graphics&gt;</ph> class to render text, this could cause the text for controls that use <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> to appear different from the other text in the application.","pos":[673,919],"source":" In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application."},{"content":"To resolve this incompatibility, you can set the <ph id=\"ph1\">`UseCompatibleTextRendering`</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[920,1017],"source":" To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true`."},{"content":"To set <ph id=\"ph1\">`UseCompatibleTextRendering`</ph> to <ph id=\"ph2\">`true`</ph> for all supported controls in the application, call the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> method with a parameter of <ph id=\"ph4\">`true`</ph>.","pos":[1018,1231],"source":" To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> method with a parameter of `true`."}]},{"pos":[2665,2851],"content":"You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer. Only call this method in stand-alone Windows Forms applications.","nodes":[{"content":"You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer. Only call this method in stand-alone Windows Forms applications.","pos":[0,186],"nodes":[{"content":"You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer.","pos":[0,121]},{"content":"Only call this method in stand-alone Windows Forms applications.","pos":[122,186]}]}]}],"pos":[89925,92785],"yaml":true,"extradata":"MT"},{"content":"The default value to use for new controls. If `true`, new controls that support <code>UseCompatibleTextRendering</code> use the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref href=\"System.Drawing.Graphics\"></xref> class for text rendering; if `false`, new controls use the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref href=\"System.Windows.Forms.TextRenderer\"></xref> class.","nodes":[{"pos":[0,413],"content":"The default value to use for new controls. If `true`, new controls that support <code>UseCompatibleTextRendering</code> use the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref href=\"System.Drawing.Graphics\"></xref> class for text rendering; if `false`, new controls use the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref href=\"System.Windows.Forms.TextRenderer\"></xref> class.","nodes":[{"content":"The default value to use for new controls.","pos":[0,42]},{"content":"If <ph id=\"ph1\">`true`</ph>, new controls that support <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">UseCompatibleTextRendering</ph><ept id=\"p1\">&lt;/code&gt;</ept> use the <ph id=\"ph3\">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id=\"ph4\">&lt;xref href=\"System.Drawing.Graphics\"&gt;&lt;/xref&gt;</ph> class for text rendering; if <ph id=\"ph5\">`false`</ph>, new controls use the <ph id=\"ph6\">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id=\"ph7\">&lt;xref href=\"System.Windows.Forms.TextRenderer\"&gt;&lt;/xref&gt;</ph> class.","pos":[43,413],"source":" If `true`, new controls that support <code>UseCompatibleTextRendering</code> use the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref href=\"System.Drawing.Graphics\"></xref> class for text rendering; if `false`, new controls use the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref href=\"System.Windows.Forms.TextRenderer\"></xref> class."}]}],"pos":[93904,94318],"yaml":true},{"content":"You can only call this method before the first window is created by your Windows Forms application.","nodes":[{"pos":[0,99],"content":"You can only call this method before the first window is created by your Windows Forms application.","nodes":[{"content":"You can only call this method before the first window is created by your Windows Forms application.","pos":[0,99]}]}],"pos":[94522,94622],"yaml":true},{"content":"Suspends or hibernates the system, or requests that the system be suspended or hibernated.","nodes":[{"pos":[0,90],"content":"Suspends or hibernates the system, or requests that the system be suspended or hibernated.","nodes":[{"content":"Suspends or hibernates the system, or requests that the system be suspended or hibernated.","pos":[0,90]}]}],"pos":[95845,95936],"yaml":true},{"content":"If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated. Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.","nodes":[{"pos":[0,347],"content":"If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated. Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.","nodes":[{"content":"If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated. Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.","pos":[0,347],"nodes":[{"content":"If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated.","pos":[0,198]},{"content":"Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.","pos":[199,347]}]}]}],"pos":[95947,96295],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.PowerState\"></xref> indicating the power activity mode to which to transition.","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PowerState\"&gt;&lt;/xref&gt;</ph> indicating the power activity mode to which to transition.","source":"A <xref href=\"System.Windows.Forms.PowerState\"></xref> indicating the power activity mode to which to transition."}],"pos":[96524,96638],"yaml":true},{"content":"`true` to force the suspended mode immediately; `false` to cause Windows to send a suspend request to every application.","nodes":[{"pos":[0,120],"content":"<ph id=\"ph1\">`true`</ph> to force the suspended mode immediately; <ph id=\"ph2\">`false`</ph> to cause Windows to send a suspend request to every application.","source":"`true` to force the suspended mode immediately; `false` to cause Windows to send a suspend request to every application."}],"pos":[96700,96823],"yaml":true},{"content":"`true` to disable restoring the system's power status to active on a wake event, `false` to enable restoring the system's power status to active on a wake event.","nodes":[{"pos":[0,161],"content":"<ph id=\"ph1\">`true`</ph> to disable restoring the system's power status to active on a wake event, <ph id=\"ph2\">`false`</ph> to enable restoring the system's power status to active on a wake event.","source":"`true` to disable restoring the system's power status to active on a wake event, `false` to enable restoring the system's power status to active on a wake event."}],"pos":[96896,97060],"yaml":true},{"content":"`true` if the system is being suspended, otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the system is being suspended, otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the system is being suspended, otherwise, `false`."}],"pos":[97118,97181],"yaml":true},{"content":"Instructs the application how to respond to unhandled exceptions.","nodes":[{"pos":[0,65],"content":"Instructs the application how to respond to unhandled exceptions.","nodes":[{"content":"Instructs the application how to respond to unhandled exceptions.","pos":[0,65]}]}],"pos":[98471,98537],"yaml":true},{"content":"It is often not feasible to catch all of the exceptions thrown by Windows Forms. Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.  \n  \n Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method.  \n  \n To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.","nodes":[{"pos":[0,306],"content":"It is often not feasible to catch all of the exceptions thrown by Windows Forms. Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.","nodes":[{"content":"It is often not feasible to catch all of the exceptions thrown by Windows Forms. Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.","pos":[0,306],"nodes":[{"content":"It is often not feasible to catch all of the exceptions thrown by Windows Forms.","pos":[0,80]},{"content":"Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.","pos":[81,306]}]}]},{"pos":[313,508],"content":"Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> before you instantiate the main form of your application using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> method.","pos":[0,195],"source":"Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method."}]},{"pos":[515,662],"content":"To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.","nodes":[{"content":"To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id=\"ph1\">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.","pos":[0,147],"source":"To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler."}]}],"pos":[98548,99217],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.UnhandledExceptionMode\"></xref> value describing how the application should behave if an exception is thrown without being caught.","nodes":[{"pos":[0,166],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.UnhandledExceptionMode\"&gt;&lt;/xref&gt;</ph> value describing how the application should behave if an exception is thrown without being caught.","source":"An <xref href=\"System.Windows.Forms.UnhandledExceptionMode\"></xref> value describing how the application should behave if an exception is thrown without being caught."}],"pos":[100875,101042],"yaml":true},{"content":"You cannot set the exception mode after the application has created its first window.","nodes":[{"pos":[0,85],"content":"You cannot set the exception mode after the application has created its first window.","nodes":[{"content":"You cannot set the exception mode after the application has created its first window.","pos":[0,85]}]}],"pos":[101238,101324],"yaml":true},{"content":"Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.","nodes":[{"pos":[0,111],"content":"Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.","nodes":[{"content":"Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.","pos":[0,111]}]}],"pos":[102607,102719],"yaml":true},{"content":"It is often not feasible to catch all of the exceptions thrown by Windows Forms. Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.  \n  \n Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method.  \n  \n When `threadScope` is `true`, the thread exception mode is set. The thread exception mode overrides the application exception mode if `mode` is not set to <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic>.  \n  \n When `threadScope` is `false`, the application exception mode is set. The application exception mode is used for all threads that have the <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic> mode. Setting the application exception mode does not affect the setting of the current thread.  \n  \n To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.","nodes":[{"pos":[0,306],"content":"It is often not feasible to catch all of the exceptions thrown by Windows Forms. Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.","nodes":[{"content":"It is often not feasible to catch all of the exceptions thrown by Windows Forms. Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.","pos":[0,306],"nodes":[{"content":"It is often not feasible to catch all of the exceptions thrown by Windows Forms.","pos":[0,80]},{"content":"Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.","pos":[81,306]}]}]},{"pos":[313,508],"content":"Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> before you instantiate the main form of your application using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> method.","pos":[0,195],"source":"Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method."}]},{"pos":[515,731],"content":"When `threadScope` is `true`, the thread exception mode is set. The thread exception mode overrides the application exception mode if `mode` is not set to <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic>.","nodes":[{"content":"When <ph id=\"ph1\">`threadScope`</ph> is <ph id=\"ph2\">`true`</ph>, the thread exception mode is set.","pos":[0,63],"source":"When `threadScope` is `true`, the thread exception mode is set."},{"content":"The thread exception mode overrides the application exception mode if <ph id=\"ph1\">`mode`</ph> is not set to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>.","pos":[64,216],"source":" The thread exception mode overrides the application exception mode if `mode` is not set to <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic>."}]},{"pos":[738,1033],"content":"When `threadScope` is `false`, the application exception mode is set. The application exception mode is used for all threads that have the <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic> mode. Setting the application exception mode does not affect the setting of the current thread.","nodes":[{"content":"When <ph id=\"ph1\">`threadScope`</ph> is <ph id=\"ph2\">`false`</ph>, the application exception mode is set.","pos":[0,69],"source":"When `threadScope` is `false`, the application exception mode is set."},{"content":"The application exception mode is used for all threads that have the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph> mode.","pos":[70,205],"source":" The application exception mode is used for all threads that have the <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic> mode."},{"content":"Setting the application exception mode does not affect the setting of the current thread.","pos":[206,295]}]},{"pos":[1040,1187],"content":"To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.","nodes":[{"content":"To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id=\"ph1\">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.","pos":[0,147],"source":"To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler."}]}],"pos":[102730,103928],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.UnhandledExceptionMode\"></xref> value describing how the application should behave if an exception is thrown without being caught.","nodes":[{"pos":[0,166],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.UnhandledExceptionMode\"&gt;&lt;/xref&gt;</ph> value describing how the application should behave if an exception is thrown without being caught.","source":"An <xref href=\"System.Windows.Forms.UnhandledExceptionMode\"></xref> value describing how the application should behave if an exception is thrown without being caught."}],"pos":[105604,105771],"yaml":true},{"content":"`true` to set the thread exception mode; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> to set the thread exception mode; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to set the thread exception mode; otherwise, `false`."}],"pos":[105839,105902],"yaml":true},{"content":"You cannot set the exception mode after the application has created its first window.","nodes":[{"pos":[0,85],"content":"You cannot set the exception mode after the application has created its first window.","nodes":[{"content":"You cannot set the exception mode after the application has created its first window.","pos":[0,85]}]}],"pos":[106098,106184],"yaml":true},{"content":"Gets the path for the executable file that started the application, not including the executable name.","nodes":[{"pos":[0,102],"content":"Gets the path for the executable file that started the application, not including the executable name.","nodes":[{"content":"Gets the path for the executable file that started the application, not including the executable name.","pos":[0,102]}]}],"pos":[107106,107209],"yaml":true},{"content":"The path for the executable file that started the application.  \n  \n This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"pos":[0,62],"content":"The path for the executable file that started the application.","nodes":[{"content":"The path for the executable file that started the application.","pos":[0,62]}]},{"pos":[69,545],"content":"This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"content":"This path will be different depending on whether the Windows Forms application is deployed using <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.","pos":[0,151],"source":"This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\\Documents and Settings<ph id=\"ph2\">\\\\</ph><bpt id=\"p1\">*</bpt>username<ept id=\"p1\">*</ept> directory.","pos":[152,317],"source":"[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\Documents and Settings\\\\*username* directory."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id=\"p1\">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.","pos":[318,476],"source":" For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)."}]}],"pos":[108002,108555],"yaml":true},{"content":"Occurs when an untrapped thread exception is thrown.","nodes":[{"pos":[0,52],"content":"Occurs when an untrapped thread exception is thrown.","nodes":[{"content":"Occurs when an untrapped thread exception is thrown.","pos":[0,52]}]}],"pos":[109551,109604],"yaml":true},{"content":"This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads. Attach your event handlers to the <xref:System.Windows.Forms.Application.ThreadException> event to deal with these exceptions, which will leave your application in an unknown state. Where possible, exceptions should be handled by a structured exception handling block.  \n  \n You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>. To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.  \n  \n> [!NOTE]\n>  To guarantee that no activations of this event are missed, you must attach a handler before you call <xref:System.Windows.Application.Run%2A?displayProperty=fullName>.  \n  \n> [!CAUTION]\n>  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","nodes":[{"pos":[0,395],"content":"This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads. Attach your event handlers to the <xref:System.Windows.Forms.Application.ThreadException> event to deal with these exceptions, which will leave your application in an unknown state. Where possible, exceptions should be handled by a structured exception handling block.","nodes":[{"content":"This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads. Attach your event handlers to the <xref:System.Windows.Forms.Application.ThreadException> event to deal with these exceptions, which will leave your application in an unknown state. Where possible, exceptions should be handled by a structured exception handling block.","pos":[0,395],"nodes":[{"content":"This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads.","pos":[0,126]},{"content":"Attach your event handlers to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to deal with these exceptions, which will leave your application in an unknown state.","pos":[127,308],"source":" Attach your event handlers to the <xref:System.Windows.Forms.Application.ThreadException> event to deal with these exceptions, which will leave your application in an unknown state."},{"content":"Where possible, exceptions should be handled by a structured exception handling block.","pos":[309,395]}]}]},{"pos":[402,721],"content":"You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>. To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.","nodes":[{"content":"You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>. To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.","pos":[0,319],"nodes":[{"content":"You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>.","pos":[0,171],"source":"You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>."},{"content":"To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id=\"ph1\">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.","pos":[172,319],"source":" To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler."}]}]},{"pos":[729,907],"content":"[!NOTE]\n To guarantee that no activations of this event are missed, you must attach a handler before you call <xref:System.Windows.Application.Run%2A?displayProperty=fullName>.","leadings":["","> "],"nodes":[{"content":"To guarantee that no activations of this event are missed, you must attach a handler before you call <ph id=\"ph1\">&lt;xref:System.Windows.Application.Run%2A?displayProperty=fullName&gt;</ph>.","pos":[9,176],"source":" To guarantee that no activations of this event are missed, you must attach a handler before you call <xref:System.Windows.Application.Run%2A?displayProperty=fullName>."}]},{"pos":[915,1060],"content":"[!CAUTION]\n Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","leadings":["","> "],"nodes":[{"content":"Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","pos":[12,143]}]}],"pos":[109615,110686],"yaml":true,"extradata":"MT"},{"content":"Occurs when a thread is about to shut down. When the main thread for an application is about to be shut down, this event is raised first, followed by an <xref href=\"System.Windows.Forms.Application.ApplicationExit\"></xref> event.","nodes":[{"pos":[0,229],"content":"Occurs when a thread is about to shut down. When the main thread for an application is about to be shut down, this event is raised first, followed by an <xref href=\"System.Windows.Forms.Application.ApplicationExit\"></xref> event.","nodes":[{"content":"Occurs when a thread is about to shut down.","pos":[0,43]},{"content":"When the main thread for an application is about to be shut down, this event is raised first, followed by an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Application.ApplicationExit\"&gt;&lt;/xref&gt;</ph> event.","pos":[44,229],"source":" When the main thread for an application is about to be shut down, this event is raised first, followed by an <xref href=\"System.Windows.Forms.Application.ApplicationExit\"></xref> event."}]}],"pos":[113244,113474],"yaml":true},{"content":"You must attach the event handlers to the <xref:System.Windows.Forms.Application.ThreadExit> event to perform any unhandled, required tasks before the thread stops running. Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.  \n  \n> [!CAUTION]\n>  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","nodes":[{"pos":[0,273],"content":"You must attach the event handlers to the <xref:System.Windows.Forms.Application.ThreadExit> event to perform any unhandled, required tasks before the thread stops running. Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.","nodes":[{"content":"You must attach the event handlers to the <xref:System.Windows.Forms.Application.ThreadExit> event to perform any unhandled, required tasks before the thread stops running. Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.","pos":[0,273],"nodes":[{"content":"You must attach the event handlers to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event to perform any unhandled, required tasks before the thread stops running.","pos":[0,172],"source":"You must attach the event handlers to the <xref:System.Windows.Forms.Application.ThreadExit> event to perform any unhandled, required tasks before the thread stops running."},{"content":"Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.","pos":[173,273]}]}]},{"pos":[281,426],"content":"[!CAUTION]\n Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","leadings":["","> "],"nodes":[{"content":"Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.","pos":[12,143]}]}],"pos":[113485,113917],"yaml":true,"extradata":"MT"},{"content":"Unregisters the message loop callback made with <xref href=\"System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\"></xref>.","nodes":[{"pos":[0,176],"content":"Unregisters the message loop callback made with <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\"&gt;&lt;/xref&gt;</ph>.","source":"Unregisters the message loop callback made with <xref href=\"System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\"></xref>."}],"pos":[116126,116303],"yaml":true},{"content":"Gets the path for the application data of a user.","nodes":[{"pos":[0,49],"content":"Gets the path for the application data of a user.","nodes":[{"content":"Gets the path for the application data of a user.","pos":[0,49]}]}],"pos":[117416,117466],"yaml":true},{"content":"If a path does not exist, one is created in the following format:  \n  \n *Base Path*\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>  \n  \n Data stored in this path is part of user profile that is enabled for roaming. A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on. For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.  \n  \n A typical base path is C:\\Documents and Settings\\\\*username*\\Application Data. This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] creates its own application data directory that is isolated from all other applications. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"pos":[0,65],"content":"If a path does not exist, one is created in the following format:","nodes":[{"content":"If a path does not exist, one is created in the following format:","pos":[0,65]}]},{"pos":[72,254],"content":"<bpt id=\"p1\">*</bpt>Base Path<ept id=\"p1\">*</ept><ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id=\"ph3\">\\\\</ph><ph id=\"ph4\">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id=\"ph5\">\\\\</ph><ph id=\"ph6\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>","source":"*Base Path*\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>"},{"pos":[261,645],"content":"Data stored in this path is part of user profile that is enabled for roaming. A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on. For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.","nodes":[{"content":"Data stored in this path is part of user profile that is enabled for roaming. A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on. For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.","pos":[0,384],"nodes":[{"content":"Data stored in this path is part of user profile that is enabled for roaming.","pos":[0,77]},{"content":"A roaming user works on more than one computer in a network.","pos":[78,138]},{"content":"The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.","pos":[139,260]},{"content":"For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.","pos":[261,384]}]}]},{"pos":[652,1179],"content":"A typical base path is C:\\Documents and Settings\\\\*username*\\Application Data. This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] creates its own application data directory that is isolated from all other applications. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).","nodes":[{"content":"A typical base path is C:\\Documents and Settings<ph id=\"ph1\">\\\\</ph><bpt id=\"p1\">*</bpt>username<ept id=\"p1\">*</ept>\\Application Data.","pos":[0,78],"source":"A typical base path is C:\\Documents and Settings\\\\*username*\\Application Data."},{"content":"This path will be different, however, if the Windows Forms application is deployed by using <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.","pos":[79,225],"source":" This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]."},{"content":"<ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> creates its own application data directory that is isolated from all other applications.","pos":[226,368],"source":"[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] creates its own application data directory that is isolated from all other applications."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id=\"p1\">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.","pos":[369,527],"source":" For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)."}]}],"pos":[117477,118675],"yaml":true,"extradata":"MT"},{"content":"The path for the application data of a user.","nodes":[{"pos":[0,44],"content":"The path for the application data of a user.","nodes":[{"content":"The path for the application data of a user.","pos":[0,44]}]}],"pos":[120276,120321],"yaml":true},{"content":"Gets the registry key for the application data of a user.","nodes":[{"pos":[0,57],"content":"Gets the registry key for the application data of a user.","nodes":[{"content":"Gets the registry key for the application data of a user.","pos":[0,57]}]}],"pos":[121370,121428],"yaml":true},{"content":"If the key does not exist, it is created in the following format:  \n  \n CurrentUser\\Software\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>   \n  \n Data stored in this key is part of user profile that is enabled for roaming. A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on. For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.","nodes":[{"pos":[0,65],"content":"If the key does not exist, it is created in the following format:","nodes":[{"content":"If the key does not exist, it is created in the following format:","pos":[0,65]}]},{"pos":[72,263],"content":"CurrentUser\\Software\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>","nodes":[{"content":"CurrentUser\\Software<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id=\"ph3\">\\\\</ph><ph id=\"ph4\">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id=\"ph5\">\\\\</ph><ph id=\"ph6\">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>","pos":[0,191],"source":"CurrentUser\\Software\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>"}]},{"pos":[271,654],"content":"Data stored in this key is part of user profile that is enabled for roaming. A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on. For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.","nodes":[{"content":"Data stored in this key is part of user profile that is enabled for roaming. A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on. For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.","pos":[0,383],"nodes":[{"content":"Data stored in this key is part of user profile that is enabled for roaming.","pos":[0,76]},{"content":"A roaming user works on more than one computer in a network.","pos":[77,137]},{"content":"The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.","pos":[138,259]},{"content":"For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.","pos":[260,383]}]}]}],"pos":[121439,122107],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"Microsoft.Win32.RegistryKey\"></xref> representing the registry key for the application data specific to the user.","nodes":[{"pos":[0,127],"content":"A <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.RegistryKey\"&gt;&lt;/xref&gt;</ph> representing the registry key for the application data specific to the user.","source":"A <xref href=\"Microsoft.Win32.RegistryKey\"></xref> representing the registry key for the application data specific to the user."}],"pos":[122272,122400],"yaml":true},{"content":"Gets or sets whether the wait cursor is used for all open forms of the application.","nodes":[{"pos":[0,83],"content":"Gets or sets whether the wait cursor is used for all open forms of the application.","nodes":[{"content":"Gets or sets whether the wait cursor is used for all open forms of the application.","pos":[0,83]}]}],"pos":[123395,123479],"yaml":true},{"content":"When this property is set to `true`, the <xref:System.Windows.Forms.Control.UseWaitCursor%2A> property of all open forms in the application will be set to `true`. This call will not return until this property has been set on all forms. Use this property when you have a long-running operation, and want to indicate in all application forms that the operation is still processing.","nodes":[{"pos":[0,379],"content":"When this property is set to `true`, the <xref:System.Windows.Forms.Control.UseWaitCursor%2A> property of all open forms in the application will be set to `true`. This call will not return until this property has been set on all forms. Use this property when you have a long-running operation, and want to indicate in all application forms that the operation is still processing.","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.UseWaitCursor%2A&gt;</ph> property of all open forms in the application will be set to <ph id=\"ph3\">`true`</ph>.","pos":[0,162],"source":"When this property is set to `true`, the <xref:System.Windows.Forms.Control.UseWaitCursor%2A> property of all open forms in the application will be set to `true`."},{"content":"This call will not return until this property has been set on all forms.","pos":[163,235]},{"content":"Use this property when you have a long-running operation, and want to indicate in all application forms that the operation is still processing.","pos":[236,379]}]}],"pos":[123490,123870],"yaml":true,"extradata":"MT"},{"content":"`true` is the wait cursor is used for all open forms; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> is the wait cursor is used for all open forms; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` is the wait cursor is used for all open forms; otherwise, `false`."}],"pos":[123998,124074],"yaml":true},{"content":"Gets a value that specifies how visual styles are applied to application windows.","nodes":[{"pos":[0,81],"content":"Gets a value that specifies how visual styles are applied to application windows.","nodes":[{"content":"Gets a value that specifies how visual styles are applied to application windows.","pos":[0,81]}]}],"pos":[125103,125185],"yaml":true},{"content":"This <xref:System.Windows.Forms.Application.VisualStyleState%2A> property determines whether visual styles are enabled in client areas or nonclient areas of application windows. Generally, this property should be set within the main form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.","nodes":[{"pos":[0,307],"content":"This <xref:System.Windows.Forms.Application.VisualStyleState%2A> property determines whether visual styles are enabled in client areas or nonclient areas of application windows. Generally, this property should be set within the main form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.","nodes":[{"content":"This <xref:System.Windows.Forms.Application.VisualStyleState%2A> property determines whether visual styles are enabled in client areas or nonclient areas of application windows. Generally, this property should be set within the main form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.","pos":[0,307],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property determines whether visual styles are enabled in client areas or nonclient areas of application windows.","pos":[0,177],"source":"This <xref:System.Windows.Forms.Application.VisualStyleState%2A> property determines whether visual styles are enabled in client areas or nonclient areas of application windows."},{"content":"Generally, this property should be set within the main form's constructor or <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.","pos":[178,307],"source":" Generally, this property should be set within the main form's constructor or <xref:System.Windows.Forms.Form.Load> event handler."}]}]}],"pos":[125196,125504],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.VisualStyles.VisualStyleState\"></xref> values.","nodes":[{"pos":[0,108],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.VisualStyles.VisualStyleState\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Windows.Forms.VisualStyles.VisualStyleState\"></xref> values."}],"pos":[126813,126922],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.Application\n  commentId: T:System.Windows.Forms.Application\n  id: Application\n  children:\n  - System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)\n  - System.Windows.Forms.Application.AllowQuit\n  - System.Windows.Forms.Application.ApplicationExit\n  - System.Windows.Forms.Application.CommonAppDataPath\n  - System.Windows.Forms.Application.CommonAppDataRegistry\n  - System.Windows.Forms.Application.CompanyName\n  - System.Windows.Forms.Application.CurrentCulture\n  - System.Windows.Forms.Application.CurrentInputLanguage\n  - System.Windows.Forms.Application.DoEvents\n  - System.Windows.Forms.Application.EnableVisualStyles\n  - System.Windows.Forms.Application.EnterThreadModal\n  - System.Windows.Forms.Application.ExecutablePath\n  - System.Windows.Forms.Application.Exit\n  - System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Application.ExitThread\n  - System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Application.Idle\n  - System.Windows.Forms.Application.LeaveThreadModal\n  - System.Windows.Forms.Application.LocalUserAppDataPath\n  - System.Windows.Forms.Application.MessageLoop\n  - System.Windows.Forms.Application.OleRequired\n  - System.Windows.Forms.Application.OnThreadException(System.Exception)\n  - System.Windows.Forms.Application.OpenForms\n  - System.Windows.Forms.Application.ProductName\n  - System.Windows.Forms.Application.ProductVersion\n  - System.Windows.Forms.Application.RaiseIdle(System.EventArgs)\n  - System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\n  - System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)\n  - System.Windows.Forms.Application.RenderWithVisualStyles\n  - System.Windows.Forms.Application.Restart\n  - System.Windows.Forms.Application.Run\n  - System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)\n  - System.Windows.Forms.Application.Run(System.Windows.Forms.Form)\n  - System.Windows.Forms.Application.SafeTopLevelCaptionFormat\n  - System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)\n  - System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)\n  - System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)\n  - System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)\n  - System.Windows.Forms.Application.StartupPath\n  - System.Windows.Forms.Application.ThreadException\n  - System.Windows.Forms.Application.ThreadExit\n  - System.Windows.Forms.Application.UnregisterMessageLoop\n  - System.Windows.Forms.Application.UserAppDataPath\n  - System.Windows.Forms.Application.UserAppDataRegistry\n  - System.Windows.Forms.Application.UseWaitCursor\n  - System.Windows.Forms.Application.VisualStyleState\n  langs:\n  - csharp\n  name: Application\n  nameWithType: Application\n  fullName: System.Windows.Forms.Application\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Provides `static` methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application. This class cannot be inherited.\n  remarks: \"The <xref:System.Windows.Forms.Application> class has methods to start and stop applications and threads, and to process Windows messages, as follows:  \\n  \\n-   <xref:System.Windows.Forms.Application.Run%2A> starts an application message loop on the current thread and, optionally, makes a form visible.  \\n  \\n-   <xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> stops a message loop.  \\n  \\n-   <xref:System.Windows.Forms.Application.DoEvents%2A> processes messages while your program is in a loop.  \\n  \\n-   <xref:System.Windows.Forms.Application.AddMessageFilter%2A> adds a message filter to the application message pump to monitor Windows messages.  \\n  \\n-   <xref:System.Windows.Forms.IMessageFilter> lets you stop an event from being raised or perform special operations before invoking an event handler.  \\n  \\n This class has <xref:System.Windows.Forms.Application.CurrentCulture%2A> and <xref:System.Windows.Forms.Application.CurrentInputLanguage%2A> properties to get or set culture information for the current thread.  \\n  \\n You cannot create an instance of this class.\"\n  example:\n  - \"The following code example lists numbers in a list box on a form. Each time you click `button1`, the application adds another number to the list.  \\n  \\n The `Main` method calls <xref:System.Windows.Forms.Application.Run%2A> to start the application, which creates the form, `listBox1` and `button1`. When the user clicks `button1`, the `button1_Click` method displays a <xref:System.Windows.Forms.MessageBox>. If the user clicks `No` on the <xref:System.Windows.Forms.MessageBox>, the `button1_Click` method adds a number to the list. If the user clicks `Yes`, the application calls <xref:System.Windows.Forms.Application.Exit%2A> to process all remaining messages in the queue and then to quit.  \\n  \\n> [!NOTE]\\n>  The call to <xref:System.Windows.Forms.Application.Exit%2A> will fail in partial trust.  \\n  \\n [!code-cpp[Classic Application Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application Example/CS/source.cs#1)]\\n [!code-vb[Classic Application Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application Example/VB/source.vb#1)]\"\n  syntax:\n    content: public sealed class Application\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)\n  commentId: M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)\n  id: AddMessageFilter(System.Windows.Forms.IMessageFilter)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: AddMessageFilter(IMessageFilter)\n  nameWithType: Application.AddMessageFilter(IMessageFilter)\n  fullName: Application.AddMessageFilter(IMessageFilter)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Adds a message filter to monitor Windows messages as they are routed to their destinations.\n  remarks: \"Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler. Message filters are unique to a specific thread.  \\n  \\n To prevent a message from being dispatched, the `value` parameter instance that you pass to this method must override the <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> method with the code to handle the message. The method must return `false`.  \\n  \\n> [!CAUTION]\\n>  Adding message filters to the message pump for an application can degrade performance.\"\n  example:\n  - \"The following code example creates a message filter called `TestMessageFilter`. This filter blocks all messages relating to the left mouse button. Before you can use a message filter, you must provide an implementation for the <xref:System.Windows.Forms.IMessageFilter> interface.  \\n  \\n [!code-cpp[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static void AddMessageFilter (System.Windows.Forms.IMessageFilter value);\n    parameters:\n    - id: value\n      type: System.Windows.Forms.IMessageFilter\n      description: The implementation of the <xref href=\"System.Windows.Forms.IMessageFilter\"></xref> interface you want to install.\n  overload: System.Windows.Forms.Application.AddMessageFilter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.AllowQuit\n  commentId: P:System.Windows.Forms.Application.AllowQuit\n  id: AllowQuit\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: AllowQuit\n  nameWithType: Application.AllowQuit\n  fullName: Application.AllowQuit\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the caller can quit this application.\n  remarks: This property returns `false` if it is called from a <xref:System.Windows.Forms.Control> being hosted within a Web browser. Thus, the <xref:System.Windows.Forms.Control> cannot quit the <xref:System.Windows.Forms.Application>.\n  syntax:\n    content: public static bool AllowQuit { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the caller can quit this application; otherwise, `false`.'\n  overload: System.Windows.Forms.Application.AllowQuit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.ApplicationExit\n  commentId: E:System.Windows.Forms.Application.ApplicationExit\n  id: ApplicationExit\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: ApplicationExit\n  nameWithType: Application.ApplicationExit\n  fullName: Application.ApplicationExit\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the application is about to shut down.\n  remarks: \"You must attach the event handlers to the <xref:System.Windows.Forms.Application.Exit%2A> event to perform unhandled, required tasks before the application stops running. You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.  \\n  \\n Because this is a static event, you must detach any event handlers attached to this event in the <xref:System.Windows.Forms.Application.ApplicationExit> event handler itself. If you do not detach these handlers, they will remain attached to the event and continue to consume memory.\"\n  example:\n  - \"The following code example displays two forms and exits the application when both forms are closed. When the application starts and exits, the position of each form is remembered. This example demonstrates using the <xref:System.Windows.Forms.Application.ApplicationExit> event to know when the form positions should be persisted to the file, and when the `FileStream` should be closed.  \\n  \\n The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track of when each form is closed, and exits the current thread when they both are. The class remembers the position of each form when it is closed. When the <xref:System.Windows.Forms.Application.ApplicationExit> event occurs, the class writes the positions of each for the user to the file. The form position data is stored in a file titled `appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>. The `Main` method calls `Application.Run(context)` to start the application given the <xref:System.Windows.Forms.ApplicationContext>.  \\n  \\n This code is an excerpt from the example shown in the <xref:System.Windows.Forms.ApplicationContext> class overview. See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.  \\n  \\n [!code-cpp[Application#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#5)]\\n [!code-csharp[Application#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#5)]\\n [!code-vb[Application#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#5)]\"\n  syntax:\n    content: public static event EventHandler ApplicationExit;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.CommonAppDataPath\n  commentId: P:System.Windows.Forms.Application.CommonAppDataPath\n  id: CommonAppDataPath\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: CommonAppDataPath\n  nameWithType: Application.CommonAppDataPath\n  fullName: Application.CommonAppDataPath\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the path for the application data that is shared among all users.\n  remarks: \"If a path does not exist, one is created in the following format:  \\n  \\n *Base Path*\\\\\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>  \\n  \\n <xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it. If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>. If this attribute does not exist, both properties use the version of the executable file instead.  \\n  \\n The path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\\\Documents and Settings\\\\\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).\"\n  syntax:\n    content: public static string CommonAppDataPath { get; }\n    return:\n      type: System.String\n      description: The path for the application data that is shared among all users.\n  overload: System.Windows.Forms.Application.CommonAppDataPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.CommonAppDataRegistry\n  commentId: P:System.Windows.Forms.Application.CommonAppDataRegistry\n  id: CommonAppDataRegistry\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: CommonAppDataRegistry\n  nameWithType: Application.CommonAppDataRegistry\n  fullName: Application.CommonAppDataRegistry\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the registry key for the application data that is shared among all users.\n  remarks: \"If the key does not exist, it is created in the following format:  \\n  \\n LocalMachine\\\\Software\\\\\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>\"\n  syntax:\n    content: public static Microsoft.Win32.RegistryKey CommonAppDataRegistry { get; }\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: A <xref href=\"Microsoft.Win32.RegistryKey\"></xref> representing the registry key of the application data that is shared among all users.\n  overload: System.Windows.Forms.Application.CommonAppDataRegistry*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.CompanyName\n  commentId: P:System.Windows.Forms.Application.CompanyName\n  id: CompanyName\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: CompanyName\n  nameWithType: Application.CompanyName\n  fullName: Application.CompanyName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the company name associated with the application.\n  remarks: ''\n  example:\n  - \"The following code example gets this property and displays its value in a text box. The example requires that `textBox1` has been placed on a form.  \\n  \\n [!code-cpp[Classic Application.CompanyName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.CompanyName Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.CompanyName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.CompanyName Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.CompanyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.CompanyName Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static string CompanyName { get; }\n    return:\n      type: System.String\n      description: The company name.\n  overload: System.Windows.Forms.Application.CompanyName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.CurrentCulture\n  commentId: P:System.Windows.Forms.Application.CurrentCulture\n  id: CurrentCulture\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: CurrentCulture\n  nameWithType: Application.CurrentCulture\n  fullName: Application.CurrentCulture\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the culture information for the current thread.\n  remarks: ''\n  example:\n  - \"The following code example gets this property and displays its value in a text box. The example requires that `textBox1` has been placed on a form.  \\n  \\n [!code-cpp[Classic Application.CurrentCulture Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.CurrentCulture Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.CurrentCulture Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.CurrentCulture Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.CurrentCulture Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.CurrentCulture Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static System.Globalization.CultureInfo CurrentCulture { get; set; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> representing the culture information for the current thread.\n  overload: System.Windows.Forms.Application.CurrentCulture*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.CurrentInputLanguage\n  commentId: P:System.Windows.Forms.Application.CurrentInputLanguage\n  id: CurrentInputLanguage\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: CurrentInputLanguage\n  nameWithType: Application.CurrentInputLanguage\n  fullName: Application.CurrentInputLanguage\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current input language for the current thread.\n  remarks: ''\n  example:\n  - \"The following code example gets this property and displays its value in a text box. The example requires that `textBox1` has been placed on a form.  \\n  \\n [!code-cpp[Classic Application.CurrentInputLanguage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.CurrentInputLanguage Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.CurrentInputLanguage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.CurrentInputLanguage Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.CurrentInputLanguage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.CurrentInputLanguage Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static System.Windows.Forms.InputLanguage CurrentInputLanguage { get; set; }\n    return:\n      type: System.Windows.Forms.InputLanguage\n      description: An <xref href=\"System.Windows.Forms.InputLanguage\"></xref> representing the current input language for the current thread.\n  overload: System.Windows.Forms.Application.CurrentInputLanguage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.DoEvents\n  commentId: M:System.Windows.Forms.Application.DoEvents\n  id: DoEvents\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: DoEvents()\n  nameWithType: Application.DoEvents()\n  fullName: Application.DoEvents()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes all Windows messages currently in the message queue.\n  remarks: \"When you run a Windows Form, it creates the new form, which then waits for events to handle. Each time the form handles an event, it processes all the code associated with that event. All other events wait in the queue. While your code handles the event, your application does not respond. For example, the window does not repaint if another window is dragged on top.  \\n  \\n If you call <xref:System.Windows.Forms.Application.DoEvents%2A> in your code, your application can handle the other events. For example, if you have a form that adds data to a <xref:System.Windows.Forms.ListBox> and add <xref:System.Windows.Forms.Application.DoEvents%2A> to your code, your form repaints when another window is dragged over it. If you remove <xref:System.Windows.Forms.Application.DoEvents%2A> from your code, your form will not repaint until the click event handler of the button is finished executing. For more information on messaging, see [User Input in Windows Forms](~/docs/framework/winforms/user-input-in-windows-forms.md).  \\n  \\n Unlike Visual Basic 6.0, the <xref:System.Windows.Forms.Application.DoEvents%2A> method does not call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method.  \\n  \\n Typically, you use this method in a loop to process messages.  \\n  \\n> [!CAUTION]\\n>  Calling this method causes the current thread to be suspended while all waiting window messages are processed. If a message causes an event to be triggered, then other areas of your application code may execute. This can cause your application to exhibit unexpected behaviors that are difficult to debug. If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread. For more information about asynchronous programming, see [Asynchronous Programming Model (APM)](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.Application.DoEvents%2A> method. When the example runs, a user can select graphics files from an <xref:System.Windows.Forms.OpenFileDialog>. The selected files are displayed in the form. The <xref:System.Windows.Forms.Application.DoEvents%2A> method forces a repaint of the form for each graphics file opened. To run this example, paste the following code in a form containing a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, and a button named `fileButton`. Call the `InitializePictureBox` and `InitializeOpenFileDialog` methods from the form's constructor or `Load` method.  \\n  \\n> [!NOTE]\\n>  In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], if you add an <xref:System.Windows.Forms.OpenFileDialog> to your form by using a drag operation, you will have to modify the following `InitializeOpenFileDialog` method by removing the line that creates a new instance of <xref:System.Windows.Forms.OpenFileDialog>.  \\n  \\n The example also requires that the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> event of the <xref:System.Windows.Forms.Button> control and the <xref:System.Windows.Forms.FileDialog.FileOk> event of the <xref:System.Windows.Forms.OpenFileDialog> are connected to the event handlers defined in the example. When the example is running, display the dialog box by clicking the button.  \\n  \\n [!code-cpp[System.Windows.Forms.FileDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#1)]\\n [!code-csharp[System.Windows.Forms.FileDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#1)]\\n [!code-vb[System.Windows.Forms.FileDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#1)]\"\n  syntax:\n    content: public static void DoEvents ();\n    parameters: []\n  overload: System.Windows.Forms.Application.DoEvents*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.EnableVisualStyles\n  commentId: M:System.Windows.Forms.Application.EnableVisualStyles\n  id: EnableVisualStyles\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: EnableVisualStyles()\n  nameWithType: Application.EnableVisualStyles()\n  fullName: Application.EnableVisualStyles()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Enables visual styles for the application.\n  remarks: \"This method enables visual styles for the application. Visual styles are the colors, fonts, and other visual elements that form an operating system theme. Controls will draw with visual styles if the control and the operating system support it. To have an effect, <xref:System.Windows.Forms.Application.EnableVisualStyles> must be called before creating any controls in the application; typically, <xref:System.Windows.Forms.Application.EnableVisualStyles> is the first line in the `Main` function. A separate manifest is not required to enable visual styles when calling <xref:System.Windows.Forms.Application.EnableVisualStyles>.  \\n  \\n> [!NOTE]\\n>  Prior to the .NET Framework 2.0, the `FlatStyle` property of some controls, such as controls that derive from <xref:System.Windows.Forms.ButtonBase>, had to be set to <xref:System.Windows.Forms.FlatStyle?displayProperty=fullName> in order for the controls to be drawn with visual styles. In applications written with the .NET Framework 2.0, this is no longer necessary.  \\n  \\n> [!NOTE]\\n>  This method will have no effect for controls hosted in Internet Explorer.\"\n  example:\n  - \"The following code example demonstrates calling <xref:System.Windows.Forms.Application.EnableVisualStyles%2A> in the `Main` function to enable visual styles for the application.  \\n  \\n [!code-cpp[System.Windows.Forms.Application.EnableVisualStyles#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Application.EnableVisualStyles/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.Application.EnableVisualStyles#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Application.EnableVisualStyles/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.Application.EnableVisualStyles#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Application.EnableVisualStyles/VB/form1.vb#1)]\"\n  syntax:\n    content: public static void EnableVisualStyles ();\n    parameters: []\n  overload: System.Windows.Forms.Application.EnableVisualStyles*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.EnterThreadModal\n  commentId: E:System.Windows.Forms.Application.EnterThreadModal\n  id: EnterThreadModal\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: EnterThreadModal\n  nameWithType: Application.EnterThreadModal\n  fullName: Application.EnterThreadModal\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the application is about to enter a modal state.\n  remarks: >-\n    > [!CAUTION]\n\n    >  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Application.EnterThreadModal> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <xref:System.Windows.Forms.Application.EnterThreadModal> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#3)]\\n [!code-vb[System.Windows.Forms.EventExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#3)]\"\n  syntax:\n    content: public static event EventHandler EnterThreadModal;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.ExecutablePath\n  commentId: P:System.Windows.Forms.Application.ExecutablePath\n  id: ExecutablePath\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: ExecutablePath\n  nameWithType: Application.ExecutablePath\n  fullName: Application.ExecutablePath\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the path for the executable file that started the application, including the executable name.\n  syntax:\n    content: public static string ExecutablePath { get; }\n    return:\n      type: System.String\n      description: \"The path and executable name for the executable file that started the application.  \\n  \\n This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\\\Documents and Settings\\\\\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).\"\n  overload: System.Windows.Forms.Application.ExecutablePath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.Exit\n  commentId: M:System.Windows.Forms.Application.Exit\n  id: Exit\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: Exit()\n  nameWithType: Application.Exit()\n  fullName: Application.Exit()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.\n  remarks: \"The <xref:System.Windows.Forms.Application.Exit%2A> method stops all running message loops on all threads and closes all windows of the application. This method does not necessarily force the application to exit. The <xref:System.Windows.Forms.Application.Exit%2A> method is typically called from within a message loop, and forces <xref:System.Windows.Forms.Application.Run%2A> to return. To exit a message loop for the current thread only, call <xref:System.Windows.Forms.Application.ExitThread%2A>.  \\n  \\n <xref:System.Windows.Forms.Application.Exit%2A> raises the following events and performs the associated conditional actions:  \\n  \\n-   A <xref:System.Windows.Forms.Form.FormClosing> event is raised for every form represented by the <xref:System.Windows.Forms.Application.OpenForms%2A> property. This event can be canceled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of their <xref:System.Windows.Forms.FormClosingEventArgs> parameter to `true`.  \\n  \\n-   If one of more of the handlers cancels the event, then <xref:System.Windows.Forms.Application.Exit%2A> returns without further action. Otherwise, a <xref:System.Windows.Forms.Form.FormClosed> event is raised for every open form, then all running message loops and forms are closed.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.Application.Exit%2A> method does not raise the <xref:System.Windows.Forms.Form.Closed> and <xref:System.Windows.Forms.Form.Closing> events, which are obsolete as of [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].\"\n  example:\n  - \"The following code example lists numbers in a list box on a form. Each time you click `button1`, the application adds another number to the list.  \\n  \\n The `Main` method calls <xref:System.Windows.Forms.Application.Run%2A> to start the application, which creates the form, `listBox1`, and `button1`. When the user clicks `button1`, the `button1_Click` method adds numbers one to three to the list box, and displays a <xref:System.Windows.Forms.MessageBox>. If the user clicks **No** on the <xref:System.Windows.Forms.MessageBox>, the `button1_Click` method adds another number to the list. If the user clicks **Yes**, the application calls <xref:System.Windows.Forms.Application.Exit%2A>, to process all remaining messages in the queue and then to quit.  \\n  \\n The example requires that `listBox1` and `button1` have been instantiated and placed on a form.  \\n  \\n [!code-cpp[Classic Application.Exit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.Exit Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.Exit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.Exit Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.Exit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.Exit Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static void Exit ();\n    parameters: []\n  overload: System.Windows.Forms.Application.Exit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)\n  commentId: M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)\n  id: Exit(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: Exit(CancelEventArgs)\n  nameWithType: Application.Exit(CancelEventArgs)\n  fullName: Application.Exit(CancelEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.\n  syntax:\n    content: public static void Exit (System.ComponentModel.CancelEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.CancelEventArgs\n      description: Returns whether any <xref href=\"System.Windows.Forms.Form\"></xref> within the application cancelled the exit.\n  overload: System.Windows.Forms.Application.Exit*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.ExitThread\n  commentId: M:System.Windows.Forms.Application.ExitThread\n  id: ExitThread\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: ExitThread()\n  nameWithType: Application.ExitThread()\n  fullName: Application.ExitThread()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Exits the message loop on the current thread and closes all windows on the thread.\n  remarks: Use this method to exit the message loop of the current thread. This method causes the call to <xref:System.Windows.Forms.Application.Run%2A> for the current thread to return. To exit the entire application, call <xref:System.Windows.Forms.Application.Exit%2A>.\n  syntax:\n    content: public static void ExitThread ();\n    parameters: []\n  overload: System.Windows.Forms.Application.ExitThread*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)\n  id: FilterMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: FilterMessage(Message)\n  nameWithType: Application.FilterMessage(Message)\n  fullName: Application.FilterMessage(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Runs any filters against a window message, and returns a copy of the modified message.\n  syntax:\n    content: public static bool FilterMessage (ref System.Windows.Forms.Message message);\n    parameters:\n    - id: message\n      type: System.Windows.Forms.Message\n      description: The Windows event message to filter.\n    return:\n      type: System.Boolean\n      description: '`True` if the filters were processed; otherwise, `false`.'\n  overload: System.Windows.Forms.Application.FilterMessage*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.Idle\n  commentId: E:System.Windows.Forms.Application.Idle\n  id: Idle\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: Idle\n  nameWithType: Application.Idle\n  fullName: Application.Idle\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the application finishes processing and is about to enter the idle state.\n  remarks: \"If you have tasks that you must perform before the thread becomes idle, attach them to this event.  \\n  \\n> [!CAUTION]\\n>  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Application.Idle> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a Windows Form and make sure that the event handler is associated with the <xref:System.Windows.Forms.Application.Idle> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#2)]\\n [!code-vb[System.Windows.Forms.EventExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#2)]\"\n  syntax:\n    content: public static event EventHandler Idle;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.LeaveThreadModal\n  commentId: E:System.Windows.Forms.Application.LeaveThreadModal\n  id: LeaveThreadModal\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: LeaveThreadModal\n  nameWithType: Application.LeaveThreadModal\n  fullName: Application.LeaveThreadModal\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the application is about to leave a modal state.\n  remarks: >-\n    > [!CAUTION]\n\n    >  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Application.LeaveThreadModal> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <xref:System.Windows.Forms.Application.LeaveThreadModal> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#4)]\\n [!code-vb[System.Windows.Forms.EventExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#4)]\"\n  syntax:\n    content: public static event EventHandler LeaveThreadModal;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.LocalUserAppDataPath\n  commentId: P:System.Windows.Forms.Application.LocalUserAppDataPath\n  id: LocalUserAppDataPath\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: LocalUserAppDataPath\n  nameWithType: Application.LocalUserAppDataPath\n  fullName: Application.LocalUserAppDataPath\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the path for the application data of a local, non-roaming user.\n  remarks: \"A local user is one whose user profile is stored on the system on which the user logged on. If a path does not exist, one is created in the following format:  \\n  \\n *Base Path*\\\\\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>   \\n  \\n A typical base path is C:\\\\Documents and Settings\\\\\\\\*username*\\\\Local Settings\\\\Application Data. This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] creates its own application data directory that is isolated from all other applications. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).\"\n  example:\n  - \"The following code example displays two forms and exits the application when both forms are closed. When the application starts and exits, the position of each form is remembered. Although this example demonstrates using the <xref:System.Windows.Forms.Application.UserAppDataPath%2A> property to store application data for the user, the <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> can be used instead.  \\n  \\n The `MyApplicationContext` class inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are. The class stores the positions of each form for the user. The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>. The `Main` method calls `Application.Run(context)` to start the application given the <xref:System.Windows.Forms.ApplicationContext>.  \\n  \\n This code is an excerpt from the example shown in the <xref:System.Windows.Forms.ApplicationContext> class overview. Some code is not shown for the purpose of brevity. See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.  \\n  \\n [!code-cpp[Application#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#5)]\\n [!code-csharp[Application#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#5)]\\n [!code-vb[Application#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#5)]\"\n  syntax:\n    content: public static string LocalUserAppDataPath { get; }\n    return:\n      type: System.String\n      description: The path for the application data of a local, non-roaming user.\n  overload: System.Windows.Forms.Application.LocalUserAppDataPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.MessageLoop\n  commentId: P:System.Windows.Forms.Application.MessageLoop\n  id: MessageLoop\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: MessageLoop\n  nameWithType: Application.MessageLoop\n  fullName: Application.MessageLoop\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether a message loop exists on this thread.\n  remarks: When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return `false`. Use <xref:System.Windows.Forms.Application.RegisterMessageLoop%2A> to instruct Windows Forms if the hosting environment still has an active message loop.\n  syntax:\n    content: public static bool MessageLoop { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a message loop exists; otherwise, `false`.'\n  overload: System.Windows.Forms.Application.MessageLoop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.OleRequired\n  commentId: M:System.Windows.Forms.Application.OleRequired\n  id: OleRequired\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: OleRequired()\n  nameWithType: Application.OleRequired()\n  fullName: Application.OleRequired()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes OLE on the current thread.\n  remarks: \"Call this method before calling any `Microsoft.Win32` method that requires OLE. <xref:System.Windows.Forms.Application.OleRequired%2A> first checks to see if OLE has been initialized on the current thread. If not, it initializes the thread for OLE.  \\n  \\n> [!NOTE]\\n>  Unless a thread calls OLE methods directly, you do not need to call this method.\"\n  syntax:\n    content: public static System.Threading.ApartmentState OleRequired ();\n    parameters: []\n    return:\n      type: System.Threading.ApartmentState\n      description: One of the <xref href=\"System.Threading.ApartmentState\"></xref> values.\n  overload: System.Windows.Forms.Application.OleRequired*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.OnThreadException(System.Exception)\n  commentId: M:System.Windows.Forms.Application.OnThreadException(System.Exception)\n  id: OnThreadException(System.Exception)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: OnThreadException(Exception)\n  nameWithType: Application.OnThreadException(Exception)\n  fullName: Application.OnThreadException(Exception)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Application.ThreadException\"></xref> event.\n  remarks: \"Call <xref:System.Windows.Forms.Application.OnThreadException%2A> to raise an exception that will halt processing of the application.  \\n  \\n The <xref:System.Windows.Forms.Application> class has a <xref:System.Windows.Forms.Application.ThreadException> event. You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions. If you do not attach an event handler, <xref:System.Windows.Forms.Application.OnThreadException%2A> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.  \\n  \\n <xref:System.Windows.Forms.Application.OnThreadException%2A> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms. Unhandled exceptions on other threads are handled by the <xref:System.AppDomain.UnhandledException> event.\"\n  syntax:\n    content: public static void OnThreadException (Exception t);\n    parameters:\n    - id: t\n      type: System.Exception\n      description: An <xref href=\"System.Exception\"></xref> that represents the exception that was thrown.\n  overload: System.Windows.Forms.Application.OnThreadException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.OpenForms\n  commentId: P:System.Windows.Forms.Application.OpenForms\n  id: OpenForms\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: OpenForms\n  nameWithType: Application.OpenForms\n  fullName: Application.OpenForms\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a collection of open forms owned by the application.\n  remarks: The <xref:System.Windows.Forms.Application.OpenForms%2A> property represents a read-only collection of forms owned by the application. This collection can be searched by index position or by the <xref:System.Windows.Forms.Control.Name%2A> of the <xref:System.Windows.Forms.Form>.\n  syntax:\n    content: public static System.Windows.Forms.FormCollection OpenForms { get; }\n    return:\n      type: System.Windows.Forms.FormCollection\n      description: A <xref href=\"System.Windows.Forms.FormCollection\"></xref> containing all the currently open forms owned by this application.\n  overload: System.Windows.Forms.Application.OpenForms*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.ProductName\n  commentId: P:System.Windows.Forms.Application.ProductName\n  id: ProductName\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: ProductName\n  nameWithType: Application.ProductName\n  fullName: Application.ProductName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the product name associated with this application.\n  remarks: '`ProductName` is taken from the metadata of the assembly containing the main form of the current application. You can set it by setting <xref:System.Reflection.AssemblyProductAttribute> inside of your assembly manifest. For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md).'\n  example:\n  - \"The following code example gets this property and displays its value in a text box. The example requires that `textBox1` has been placed on a form.  \\n  \\n [!code-cpp[Classic Application.ProductName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ProductName Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.ProductName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ProductName Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.ProductName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ProductName Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static string ProductName { get; }\n    return:\n      type: System.String\n      description: The product name.\n  overload: System.Windows.Forms.Application.ProductName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.ProductVersion\n  commentId: P:System.Windows.Forms.Application.ProductVersion\n  id: ProductVersion\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: ProductVersion\n  nameWithType: Application.ProductVersion\n  fullName: Application.ProductVersion\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the product version associated with this application.\n  remarks: \"Typically, a version number displays as *major number*.*minor number*.*build number*.*private part number*. You can set it explicitly by setting the assembly version within your assembly manifest. For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md).  \\n  \\n <xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it. If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>. If this attribute does not exist, both properties use the version of the executable file instead.\"\n  example:\n  - \"The following code example gets this property and displays its value in a text box. The example requires that `textBox1` has been placed on a form.  \\n  \\n [!code-cpp[Classic Application.ProductVersion Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ProductVersion Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.ProductVersion Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ProductVersion Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.ProductVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ProductVersion Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static string ProductVersion { get; }\n    return:\n      type: System.String\n      description: The product version.\n  overload: System.Windows.Forms.Application.ProductVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.RaiseIdle(System.EventArgs)\n  commentId: M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)\n  id: RaiseIdle(System.EventArgs)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: RaiseIdle(EventArgs)\n  nameWithType: Application.RaiseIdle(EventArgs)\n  fullName: Application.RaiseIdle(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Application.Idle\"></xref> event in hosted scenarios.\n  remarks: This method is used when hosting Windows Forms in another environment, such as an unmanaged application. You should call <xref:System.Windows.Forms.Application.RaiseIdle%2A> when the hosting application enters an idle state. This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.\n  syntax:\n    content: public static void RaiseIdle (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> objects to pass to the <xref href=\"System.Windows.Forms.Application.Idle\"></xref> event.\n  overload: System.Windows.Forms.Application.RaiseIdle*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\n  commentId: M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\n  id: RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: RegisterMessageLoop(Application+MessageLoopCallback)\n  nameWithType: Application.RegisterMessageLoop(Application+MessageLoopCallback)\n  fullName: Application.RegisterMessageLoop(Application+MessageLoopCallback)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Registers a callback for checking whether the message loop is running in hosted environments.\n  remarks: This method is used when hosting Windows Forms in another environment, such as an unmanaged application. In hosted environments, the <xref:System.Windows.Forms.Application.MessageLoop%2A> property will always return false if Windows Forms is not processing messages. Use this callback to tell Windows Forms if the hosting environment is still processing messages.\n  syntax:\n    content: public static void RegisterMessageLoop (System.Windows.Forms.Application.MessageLoopCallback callback);\n    parameters:\n    - id: callback\n      type: System.Windows.Forms.Application+MessageLoopCallback\n      description: The method to call when Windows Forms needs to check if the hosting environment is still sending messages.\n  overload: System.Windows.Forms.Application.RegisterMessageLoop*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)\n  commentId: M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)\n  id: RemoveMessageFilter(System.Windows.Forms.IMessageFilter)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: RemoveMessageFilter(IMessageFilter)\n  nameWithType: Application.RemoveMessageFilter(IMessageFilter)\n  fullName: Application.RemoveMessageFilter(IMessageFilter)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Removes a message filter from the message pump of the application.\n  remarks: You can remove a message filter when you no longer want to capture Windows messages before they are dispatched.\n  example:\n  - \"Before you can use a message filter, you must provide an implementation for the <xref:System.Windows.Forms.IMessageFilter> interface. The following class creates a message filter called `TestMessageFilter`. This filter blocks all messages relating to the left mouse button.  \\n  \\n [!code-cpp[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static void RemoveMessageFilter (System.Windows.Forms.IMessageFilter value);\n    parameters:\n    - id: value\n      type: System.Windows.Forms.IMessageFilter\n      description: The implementation of the <xref href=\"System.Windows.Forms.IMessageFilter\"></xref> to remove from the application.\n  overload: System.Windows.Forms.Application.RemoveMessageFilter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.RenderWithVisualStyles\n  commentId: P:System.Windows.Forms.Application.RenderWithVisualStyles\n  id: RenderWithVisualStyles\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: RenderWithVisualStyles\n  nameWithType: Application.RenderWithVisualStyles\n  fullName: Application.RenderWithVisualStyles\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value specifying whether the current application is drawing controls with visual styles.\n  remarks: \"If you are drawing a custom control, use this property to decide whether to draw the control with or without visual styles, so that its appearance is consistent with other controls in the application.  \\n  \\n The following table shows the four conditions that must exist for <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A> to return `true`.  \\n  \\n|Condition|Description|  \\n|---------------|-----------------|  \\n|The operating system supports visual styles|To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class.|  \\n|The user has enabled visual styles in the operating system|To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class.|  \\n|Visual styles are enabled in the application|Visual styles can be enabled in an application by calling the <xref:System.Windows.Forms.Application.EnableVisualStyles> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls.|  \\n|Visual styles are being used to draw the client area of application windows|To verify this condition separately, use the <xref:System.Windows.Forms.Application.VisualStyleState%2A> property of the <xref:System.Windows.Forms.Application> class and verify that it has the value <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName> or <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName>.|\"\n  syntax:\n    content: public static bool RenderWithVisualStyles { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if visual styles are enabled for controls in the client area of application windows; otherwise, `false`.'\n  overload: System.Windows.Forms.Application.RenderWithVisualStyles*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.Restart\n  commentId: M:System.Windows.Forms.Application.Restart\n  id: Restart\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: Restart()\n  nameWithType: Application.Restart()\n  fullName: Application.Restart()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Shuts down the application and starts a new instance immediately.\n  remarks: \"The most common reason for calling `Restart` is to start a new version of the application that you have downloaded through [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] using the `Update` or `UpdateAsync` method.  \\n  \\n Applications are restarted in the context in which they were initially run. If your application was started using a URL pointing directly to the application's main executable file, it will be restarted using the same URL. If your application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, it will be restarted using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].  \\n  \\n If your application was originally supplied command-line options when it first executed, <xref:System.Windows.Forms.Application.Restart%2A> will launch the application again with the same options.\"\n  syntax:\n    content: public static void Restart ();\n    parameters: []\n  overload: System.Windows.Forms.Application.Restart*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Your code is not a Windows Forms application. You cannot call this method in this context.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.Run\n  commentId: M:System.Windows.Forms.Application.Run\n  id: Run\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: Run()\n  nameWithType: Application.Run()\n  fullName: Application.Run()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Begins running a standard application message loop on the current thread, without a form.\n  remarks: \"In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes. Every running Windows-based application requires an active message loop, called the main message loop. When the main message loop is closed, the application exits. In Windows Forms, this loop is closed when the <xref:System.Windows.Forms.Application.Exit%2A> method is called, or when the <xref:System.Windows.Forms.Application.ExitThread%2A> method is called on the thread that is running the main message loop.  \\n  \\n Most Windows Forms developers will not need to use this version of the method. You should use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29> overload to start an application with a main form, so that the application terminates when the main form is closed. For all other situations, use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29> overload, which supports supplying an <xref:System.Windows.Forms.ApplicationContext> object for better control over the lifetime of the application.\"\n  syntax:\n    content: public static void Run ();\n    parameters: []\n  overload: System.Windows.Forms.Application.Run*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A main message loop is already running on this thread.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)\n  commentId: M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)\n  id: Run(System.Windows.Forms.ApplicationContext)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: Run(ApplicationContext)\n  nameWithType: Application.Run(ApplicationContext)\n  fullName: Application.Run(ApplicationContext)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Begins running a standard application message loop on the current thread, with an <xref href=\"System.Windows.Forms.ApplicationContext\"></xref>.\n  remarks: The message loop runs until <xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> is called or the <xref:System.Windows.Forms.Application.ThreadExit> event is raised on the context object.\n  example:\n  - \"The example displays two forms and exits the application when both forms are closed. When the application starts and exits, the position of each form is remembered. This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.  \\n  \\n The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are. The class stores the positions of each form for the user. The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>. The `Main` method calls `Application.Run(context)` to start the application given the <xref:System.Windows.Forms.ApplicationContext>.  \\n  \\n The code for the `AppForm1` and `AppForm2` forms is not shown for the purpose of brevity. See the <xref:System.Windows.Forms.ApplicationContext> class overview for the whole code listing.  \\n  \\n [!code-cpp[Application#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#2)]\\n [!code-csharp[Application#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#2)]\\n [!code-vb[Application#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#2)]\"\n  syntax:\n    content: public static void Run (System.Windows.Forms.ApplicationContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Forms.ApplicationContext\n      description: An <xref href=\"System.Windows.Forms.ApplicationContext\"></xref> in which the application is run.\n  overload: System.Windows.Forms.Application.Run*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A main message loop is already running on this thread.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.Run(System.Windows.Forms.Form)\n  commentId: M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)\n  id: Run(System.Windows.Forms.Form)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: Run(Form)\n  nameWithType: Application.Run(Form)\n  fullName: Application.Run(Form)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Begins running a standard application message loop on the current thread, and makes the specified form visible.\n  remarks: \"Typically, the main function of an application calls this method and passes to it the main window of the application.  \\n  \\n This method adds an event handler to the `mainForm` parameter for the <xref:System.Windows.Forms.Form.Closed> event. The event handler calls <xref:System.Windows.Forms.Application.ExitThread%2A> to clean up the application.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.Control.Dispose%2A> method of the <xref:System.Windows.Forms.Form> class will be called prior to the return of this method.\"\n  example:\n  - \"The following code example lists numbers in a list box on a form. Each time you click `button1`, the application adds another number to the list.  \\n  \\n The `Main` method calls <xref:System.Windows.Forms.Application.Run%2A> to start the application, which creates the form, `listBox1`, and `button1`. When the user clicks `button1`, the `button1_Click` method adds numbers one to three to the list box, and displays a <xref:System.Windows.Forms.MessageBox>. If the user clicks **No** on the <xref:System.Windows.Forms.MessageBox>, the `button1_Click` method adds another number to the list. If the user clicks **Yes**, the application calls <xref:System.Windows.Forms.Application.Exit%2A> to process all remaining messages in the queue and then to quit.  \\n  \\n The example requires that `listBox1` and `button1` have been created and placed on a form.  \\n  \\n [!code-cpp[Classic Application.Exit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.Exit Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.Exit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.Exit Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.Exit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.Exit Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static void Run (System.Windows.Forms.Form mainForm);\n    parameters:\n    - id: mainForm\n      type: System.Windows.Forms.Form\n      description: A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the form to make visible.\n  overload: System.Windows.Forms.Application.Run*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A main message loop is already running on the current thread.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.SafeTopLevelCaptionFormat\n  commentId: P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat\n  id: SafeTopLevelCaptionFormat\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: SafeTopLevelCaptionFormat\n  nameWithType: Application.SafeTopLevelCaptionFormat\n  fullName: Application.SafeTopLevelCaptionFormat\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.\n  syntax:\n    content: public static string SafeTopLevelCaptionFormat { get; set; }\n    return:\n      type: System.String\n      description: The format string to apply to top-level window captions.\n  overload: System.Windows.Forms.Application.SafeTopLevelCaptionFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)\n  commentId: M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)\n  id: SetCompatibleTextRenderingDefault(System.Boolean)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: SetCompatibleTextRenderingDefault(Boolean)\n  nameWithType: Application.SetCompatibleTextRenderingDefault(Boolean)\n  fullName: Application.SetCompatibleTextRenderingDefault(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the application-wide default for the <code>UseCompatibleTextRendering</code> property defined on certain controls.\n  remarks: \"Certain Windows Forms controls can render their text using either the <xref:System.Windows.Forms.TextRenderer> class, which is based on the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] graphics library, or the <xref:System.Drawing.Graphics> class, which is based on the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] graphics library. This change was made in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] because of performance and localization issues with [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. Use <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> to set the default value of the `UseCompatibleTextRendering` property for controls that support it.  \\n  \\n The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class. In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.  \\n  \\n The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts. In earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering. [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application. To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true`. To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> method with a parameter of `true`.  \\n  \\n You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer. Only call this method in stand-alone Windows Forms applications.\"\n  example:\n  - \"> [!IMPORTANT]\\n>  To set the default value for `UseCompatibleTextRendering` in [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)] or later, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=fullName>.  \\n  \\n In [!INCLUDE[csprcslong](~/includes/csprcslong-md.md)] or later, a call to <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> is automatically generated in the Program.cs file. To change the text rendering default, modify the generated code.  \\n  \\n```scr  \\nstatic class Program  \\n{  \\n    /// <summary>  \\n    /// The main entry point for the application.  \\n    /// </summary>  \\n    [STAThread]  \\n    static void Main()  \\n    {  \\n        Application.EnableVisualStyles();  \\n        Application.SetCompatibleTextRenderingDefault(false);  \\n        Application.Run(new Form1());  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public static void SetCompatibleTextRenderingDefault (bool defaultValue);\n    parameters:\n    - id: defaultValue\n      type: System.Boolean\n      description: The default value to use for new controls. If `true`, new controls that support <code>UseCompatibleTextRendering</code> use the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref href=\"System.Drawing.Graphics\"></xref> class for text rendering; if `false`, new controls use the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref href=\"System.Windows.Forms.TextRenderer\"></xref> class.\n  overload: System.Windows.Forms.Application.SetCompatibleTextRenderingDefault*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: You can only call this method before the first window is created by your Windows Forms application.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)\n  commentId: M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)\n  id: SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: SetSuspendState(PowerState, Boolean, Boolean)\n  nameWithType: Application.SetSuspendState(PowerState, Boolean, Boolean)\n  fullName: Application.SetSuspendState(PowerState, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Suspends or hibernates the system, or requests that the system be suspended or hibernated.\n  remarks: If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated. Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.\n  syntax:\n    content: public static bool SetSuspendState (System.Windows.Forms.PowerState state, bool force, bool disableWakeEvent);\n    parameters:\n    - id: state\n      type: System.Windows.Forms.PowerState\n      description: A <xref href=\"System.Windows.Forms.PowerState\"></xref> indicating the power activity mode to which to transition.\n    - id: force\n      type: System.Boolean\n      description: '`true` to force the suspended mode immediately; `false` to cause Windows to send a suspend request to every application.'\n    - id: disableWakeEvent\n      type: System.Boolean\n      description: \"`true` to disable restoring the system's power status to active on a wake event, `false` to enable restoring the system's power status to active on a wake event.\"\n    return:\n      type: System.Boolean\n      description: '`true` if the system is being suspended, otherwise, `false`.'\n  overload: System.Windows.Forms.Application.SetSuspendState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)\n  commentId: M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)\n  id: SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: SetUnhandledExceptionMode(UnhandledExceptionMode)\n  nameWithType: Application.SetUnhandledExceptionMode(UnhandledExceptionMode)\n  fullName: Application.SetUnhandledExceptionMode(UnhandledExceptionMode)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Instructs the application how to respond to unhandled exceptions.\n  remarks: \"It is often not feasible to catch all of the exceptions thrown by Windows Forms. Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.  \\n  \\n Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method.  \\n  \\n To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.\"\n  example:\n  - \"The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads. It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file. It uses the <xref:System.Windows.Forms.Application.ThreadException> event to handle UI thread exceptions, and the <xref:System.AppDomain.UnhandledException> event to handle non-UI thread exceptions. Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.  \\n  \\n This example assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.  \\n  \\n [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static void SetUnhandledExceptionMode (System.Windows.Forms.UnhandledExceptionMode mode);\n    parameters:\n    - id: mode\n      type: System.Windows.Forms.UnhandledExceptionMode\n      description: An <xref href=\"System.Windows.Forms.UnhandledExceptionMode\"></xref> value describing how the application should behave if an exception is thrown without being caught.\n  overload: System.Windows.Forms.Application.SetUnhandledExceptionMode*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: You cannot set the exception mode after the application has created its first window.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)\n  commentId: M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)\n  id: SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: SetUnhandledExceptionMode(UnhandledExceptionMode, Boolean)\n  nameWithType: Application.SetUnhandledExceptionMode(UnhandledExceptionMode, Boolean)\n  fullName: Application.SetUnhandledExceptionMode(UnhandledExceptionMode, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.\n  remarks: \"It is often not feasible to catch all of the exceptions thrown by Windows Forms. Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.  \\n  \\n Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method.  \\n  \\n When `threadScope` is `true`, the thread exception mode is set. The thread exception mode overrides the application exception mode if `mode` is not set to <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic>.  \\n  \\n When `threadScope` is `false`, the application exception mode is set. The application exception mode is used for all threads that have the <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic> mode. Setting the application exception mode does not affect the setting of the current thread.  \\n  \\n To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.\"\n  example:\n  - \"The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads. It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file. It uses the <xref:System.Windows.Forms.Application.ThreadException> event to handle UI thread exceptions, and the <xref:System.AppDomain.UnhandledException> event to handle non-UI thread exceptions. Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.  \\n  \\n This example assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.  \\n  \\n [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static void SetUnhandledExceptionMode (System.Windows.Forms.UnhandledExceptionMode mode, bool threadScope);\n    parameters:\n    - id: mode\n      type: System.Windows.Forms.UnhandledExceptionMode\n      description: An <xref href=\"System.Windows.Forms.UnhandledExceptionMode\"></xref> value describing how the application should behave if an exception is thrown without being caught.\n    - id: threadScope\n      type: System.Boolean\n      description: '`true` to set the thread exception mode; otherwise, `false`.'\n  overload: System.Windows.Forms.Application.SetUnhandledExceptionMode*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: You cannot set the exception mode after the application has created its first window.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.StartupPath\n  commentId: P:System.Windows.Forms.Application.StartupPath\n  id: StartupPath\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: StartupPath\n  nameWithType: Application.StartupPath\n  fullName: Application.StartupPath\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the path for the executable file that started the application, not including the executable name.\n  remarks: ''\n  example:\n  - \"The following code example gets this property and displays its value in a text box. The example requires that `textBox1` has been placed on a form.  \\n  \\n [!code-cpp[Classic Application.StartupPath Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.StartupPath Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.StartupPath Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.StartupPath Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.StartupPath Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.StartupPath Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static string StartupPath { get; }\n    return:\n      type: System.String\n      description: \"The path for the executable file that started the application.  \\n  \\n This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications are stored in a per-user application cache in the C:\\\\Documents and Settings\\\\\\\\*username* directory. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).\"\n  overload: System.Windows.Forms.Application.StartupPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.ThreadException\n  commentId: E:System.Windows.Forms.Application.ThreadException\n  id: ThreadException\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: ThreadException\n  nameWithType: Application.ThreadException\n  fullName: Application.ThreadException\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when an untrapped thread exception is thrown.\n  remarks: \"This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads. Attach your event handlers to the <xref:System.Windows.Forms.Application.ThreadException> event to deal with these exceptions, which will leave your application in an unknown state. Where possible, exceptions should be handled by a structured exception handling block.  \\n  \\n You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>. To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.  \\n  \\n> [!NOTE]\\n>  To guarantee that no activations of this event are missed, you must attach a handler before you call <xref:System.Windows.Application.Run%2A?displayProperty=fullName>.  \\n  \\n> [!CAUTION]\\n>  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.\"\n  example:\n  - \"The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads. It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file. It uses the <xref:System.Windows.Forms.Application.ThreadException> event to handle UI thread exceptions, and the <xref:System.AppDomain.UnhandledException> event to handle non-UI thread exceptions. Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.  \\n  \\n This example assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.  \\n  \\n [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]\\n [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static event System.Threading.ThreadExceptionEventHandler ThreadException;\n    return:\n      type: System.Threading.ThreadExceptionEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.ThreadExit\n  commentId: E:System.Windows.Forms.Application.ThreadExit\n  id: ThreadExit\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: ThreadExit\n  nameWithType: Application.ThreadExit\n  fullName: Application.ThreadExit\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a thread is about to shut down. When the main thread for an application is about to be shut down, this event is raised first, followed by an <xref href=\"System.Windows.Forms.Application.ApplicationExit\"></xref> event.\n  remarks: \"You must attach the event handlers to the <xref:System.Windows.Forms.Application.ThreadExit> event to perform any unhandled, required tasks before the thread stops running. Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.  \\n  \\n> [!CAUTION]\\n>  Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Application.ThreadExit> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <xref:System.Windows.Forms.Application.ThreadExit> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#6)]\\n [!code-vb[System.Windows.Forms.EventExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#6)]\"\n  syntax:\n    content: public static event EventHandler ThreadExit;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.UnregisterMessageLoop\n  commentId: M:System.Windows.Forms.Application.UnregisterMessageLoop\n  id: UnregisterMessageLoop\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: UnregisterMessageLoop()\n  nameWithType: Application.UnregisterMessageLoop()\n  fullName: Application.UnregisterMessageLoop()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Unregisters the message loop callback made with <xref href=\"System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\"></xref>.\n  syntax:\n    content: public static void UnregisterMessageLoop ();\n    parameters: []\n  overload: System.Windows.Forms.Application.UnregisterMessageLoop*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.UserAppDataPath\n  commentId: P:System.Windows.Forms.Application.UserAppDataPath\n  id: UserAppDataPath\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: UserAppDataPath\n  nameWithType: Application.UserAppDataPath\n  fullName: Application.UserAppDataPath\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the path for the application data of a user.\n  remarks: \"If a path does not exist, one is created in the following format:  \\n  \\n *Base Path*\\\\\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>  \\n  \\n Data stored in this path is part of user profile that is enabled for roaming. A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on. For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.  \\n  \\n A typical base path is C:\\\\Documents and Settings\\\\\\\\*username*\\\\Application Data. This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] creates its own application data directory that is isolated from all other applications. For more information, see [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).\"\n  example:\n  - \"The following code example displays two forms and exits the application when both forms are closed. When the application starts and exits, the position of each form is remembered. This example demonstrates using the <xref:System.Windows.Forms.Application.UserAppDataPath%2A> property to store application data for the user.  \\n  \\n The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are. The class stores the positions of each form for the user. The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>. The `Main` method calls `Application.Run(context)` to start the application given the <xref:System.Windows.Forms.ApplicationContext>.  \\n  \\n This code is an excerpt from the example shown in the <xref:System.Windows.Forms.ApplicationContext> class overview. Some code is not shown for the purpose of brevity. See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.  \\n  \\n [!code-cpp[Application#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#5)]\\n [!code-csharp[Application#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#5)]\\n [!code-vb[Application#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#5)]\"\n  syntax:\n    content: public static string UserAppDataPath { get; }\n    return:\n      type: System.String\n      description: The path for the application data of a user.\n  overload: System.Windows.Forms.Application.UserAppDataPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.UserAppDataRegistry\n  commentId: P:System.Windows.Forms.Application.UserAppDataRegistry\n  id: UserAppDataRegistry\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: UserAppDataRegistry\n  nameWithType: Application.UserAppDataRegistry\n  fullName: Application.UserAppDataRegistry\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the registry key for the application data of a user.\n  remarks: \"If the key does not exist, it is created in the following format:  \\n  \\n CurrentUser\\\\Software\\\\\\\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductName%2A>\\\\\\\\<xref:System.Windows.Forms.Application.ProductVersion%2A>   \\n  \\n Data stored in this key is part of user profile that is enabled for roaming. A roaming user works on more than one computer in a network. The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on. For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.\"\n  syntax:\n    content: public static Microsoft.Win32.RegistryKey UserAppDataRegistry { get; }\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: A <xref href=\"Microsoft.Win32.RegistryKey\"></xref> representing the registry key for the application data specific to the user.\n  overload: System.Windows.Forms.Application.UserAppDataRegistry*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Application.UseWaitCursor\n  commentId: P:System.Windows.Forms.Application.UseWaitCursor\n  id: UseWaitCursor\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: UseWaitCursor\n  nameWithType: Application.UseWaitCursor\n  fullName: Application.UseWaitCursor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets whether the wait cursor is used for all open forms of the application.\n  remarks: When this property is set to `true`, the <xref:System.Windows.Forms.Control.UseWaitCursor%2A> property of all open forms in the application will be set to `true`. This call will not return until this property has been set on all forms. Use this property when you have a long-running operation, and want to indicate in all application forms that the operation is still processing.\n  syntax:\n    content: public static bool UseWaitCursor { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` is the wait cursor is used for all open forms; otherwise, `false`.'\n  overload: System.Windows.Forms.Application.UseWaitCursor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Application.VisualStyleState\n  commentId: P:System.Windows.Forms.Application.VisualStyleState\n  id: VisualStyleState\n  parent: System.Windows.Forms.Application\n  langs:\n  - csharp\n  name: VisualStyleState\n  nameWithType: Application.VisualStyleState\n  fullName: Application.VisualStyleState\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value that specifies how visual styles are applied to application windows.\n  remarks: This <xref:System.Windows.Forms.Application.VisualStyleState%2A> property determines whether visual styles are enabled in client areas or nonclient areas of application windows. Generally, this property should be set within the main form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.\n  example:\n  - \"The following code example sets the <xref:System.Windows.Forms.Application.VisualStyleState%2A> property to one of the <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName> values within the <xref:System.Windows.Forms.Control.Click> event handler for a <xref:System.Windows.Forms.Button> control. This code example is part of a larger example provided for the <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=fullName> enumeration.  \\n  \\n [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleState#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleState/cpp/visualstylestate.cpp#10)]\\n [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleState#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleState/CS/visualstylestate.cs#10)]\\n [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleState#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleState/VB/visualstylestate.vb#10)]\"\n  syntax:\n    content: public static System.Windows.Forms.VisualStyles.VisualStyleState VisualStyleState { get; set; }\n    return:\n      type: System.Windows.Forms.VisualStyles.VisualStyleState\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.VisualStyles.VisualStyleState\"></xref> values.\n  overload: System.Windows.Forms.Application.VisualStyleState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: AddMessageFilter(IMessageFilter)\n  nameWithType: Application.AddMessageFilter(IMessageFilter)\n  fullName: Application.AddMessageFilter(IMessageFilter)\n- uid: System.Windows.Forms.IMessageFilter\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IMessageFilter\n  nameWithType: IMessageFilter\n  fullName: System.Windows.Forms.IMessageFilter\n- uid: System.Windows.Forms.Application.AllowQuit\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: AllowQuit\n  nameWithType: Application.AllowQuit\n  fullName: Application.AllowQuit\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.Application.ApplicationExit\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ApplicationExit\n  nameWithType: Application.ApplicationExit\n  fullName: Application.ApplicationExit\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.Application.CommonAppDataPath\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CommonAppDataPath\n  nameWithType: Application.CommonAppDataPath\n  fullName: Application.CommonAppDataPath\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.Application.CommonAppDataRegistry\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CommonAppDataRegistry\n  nameWithType: Application.CommonAppDataRegistry\n  fullName: Application.CommonAppDataRegistry\n- uid: Microsoft.Win32.RegistryKey\n  parent: Microsoft.Win32\n  isExternal: false\n  name: RegistryKey\n  nameWithType: RegistryKey\n  fullName: Microsoft.Win32.RegistryKey\n- uid: System.Windows.Forms.Application.CompanyName\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CompanyName\n  nameWithType: Application.CompanyName\n  fullName: Application.CompanyName\n- uid: System.Windows.Forms.Application.CurrentCulture\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CurrentCulture\n  nameWithType: Application.CurrentCulture\n  fullName: Application.CurrentCulture\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Forms.Application.CurrentInputLanguage\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CurrentInputLanguage\n  nameWithType: Application.CurrentInputLanguage\n  fullName: Application.CurrentInputLanguage\n- uid: System.Windows.Forms.InputLanguage\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InputLanguage\n  nameWithType: InputLanguage\n  fullName: System.Windows.Forms.InputLanguage\n- uid: System.Windows.Forms.Application.DoEvents\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: DoEvents()\n  nameWithType: Application.DoEvents()\n  fullName: Application.DoEvents()\n- uid: System.Windows.Forms.Application.EnableVisualStyles\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: EnableVisualStyles()\n  nameWithType: Application.EnableVisualStyles()\n  fullName: Application.EnableVisualStyles()\n- uid: System.Windows.Forms.Application.EnterThreadModal\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: EnterThreadModal\n  nameWithType: Application.EnterThreadModal\n  fullName: Application.EnterThreadModal\n- uid: System.Windows.Forms.Application.ExecutablePath\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ExecutablePath\n  nameWithType: Application.ExecutablePath\n  fullName: Application.ExecutablePath\n- uid: System.Windows.Forms.Application.Exit\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Exit()\n  nameWithType: Application.Exit()\n  fullName: Application.Exit()\n- uid: System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Exit(CancelEventArgs)\n  nameWithType: Application.Exit(CancelEventArgs)\n  fullName: Application.Exit(CancelEventArgs)\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.Windows.Forms.Application.ExitThread\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ExitThread()\n  nameWithType: Application.ExitThread()\n  fullName: Application.ExitThread()\n- uid: System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: FilterMessage(Message)\n  nameWithType: Application.FilterMessage(Message)\n  fullName: Application.FilterMessage(Message)\n- uid: System.Windows.Forms.Message\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Windows.Forms.Message\n- uid: System.Windows.Forms.Application.Idle\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Idle\n  nameWithType: Application.Idle\n  fullName: Application.Idle\n- uid: System.Windows.Forms.Application.LeaveThreadModal\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: LeaveThreadModal\n  nameWithType: Application.LeaveThreadModal\n  fullName: Application.LeaveThreadModal\n- uid: System.Windows.Forms.Application.LocalUserAppDataPath\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: LocalUserAppDataPath\n  nameWithType: Application.LocalUserAppDataPath\n  fullName: Application.LocalUserAppDataPath\n- uid: System.Windows.Forms.Application.MessageLoop\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: MessageLoop\n  nameWithType: Application.MessageLoop\n  fullName: Application.MessageLoop\n- uid: System.Windows.Forms.Application.OleRequired\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: OleRequired()\n  nameWithType: Application.OleRequired()\n  fullName: Application.OleRequired()\n- uid: System.Threading.ApartmentState\n  parent: System.Threading\n  isExternal: false\n  name: ApartmentState\n  nameWithType: ApartmentState\n  fullName: System.Threading.ApartmentState\n- uid: System.Windows.Forms.Application.OnThreadException(System.Exception)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: OnThreadException(Exception)\n  nameWithType: Application.OnThreadException(Exception)\n  fullName: Application.OnThreadException(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Windows.Forms.Application.OpenForms\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: OpenForms\n  nameWithType: Application.OpenForms\n  fullName: Application.OpenForms\n- uid: System.Windows.Forms.FormCollection\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormCollection\n  nameWithType: FormCollection\n  fullName: System.Windows.Forms.FormCollection\n- uid: System.Windows.Forms.Application.ProductName\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ProductName\n  nameWithType: Application.ProductName\n  fullName: Application.ProductName\n- uid: System.Windows.Forms.Application.ProductVersion\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ProductVersion\n  nameWithType: Application.ProductVersion\n  fullName: Application.ProductVersion\n- uid: System.Windows.Forms.Application.RaiseIdle(System.EventArgs)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: RaiseIdle(EventArgs)\n  nameWithType: Application.RaiseIdle(EventArgs)\n  fullName: Application.RaiseIdle(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: RegisterMessageLoop(Application+MessageLoopCallback)\n  nameWithType: Application.RegisterMessageLoop(Application+MessageLoopCallback)\n  fullName: Application.RegisterMessageLoop(Application+MessageLoopCallback)\n- uid: System.Windows.Forms.Application\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Application\n  nameWithType: Application\n  fullName: System.Windows.Forms.Application+MessageLoopCallback\n- uid: System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: RemoveMessageFilter(IMessageFilter)\n  nameWithType: Application.RemoveMessageFilter(IMessageFilter)\n  fullName: Application.RemoveMessageFilter(IMessageFilter)\n- uid: System.Windows.Forms.Application.RenderWithVisualStyles\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: RenderWithVisualStyles\n  nameWithType: Application.RenderWithVisualStyles\n  fullName: Application.RenderWithVisualStyles\n- uid: System.Windows.Forms.Application.Restart\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Restart()\n  nameWithType: Application.Restart()\n  fullName: Application.Restart()\n- uid: System.Windows.Forms.Application.Run\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Run()\n  nameWithType: Application.Run()\n  fullName: Application.Run()\n- uid: System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Run(ApplicationContext)\n  nameWithType: Application.Run(ApplicationContext)\n  fullName: Application.Run(ApplicationContext)\n- uid: System.Windows.Forms.ApplicationContext\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ApplicationContext\n  nameWithType: ApplicationContext\n  fullName: System.Windows.Forms.ApplicationContext\n- uid: System.Windows.Forms.Application.Run(System.Windows.Forms.Form)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Run(Form)\n  nameWithType: Application.Run(Form)\n  fullName: Application.Run(Form)\n- uid: System.Windows.Forms.Form\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Form\n  nameWithType: Form\n  fullName: System.Windows.Forms.Form\n- uid: System.Windows.Forms.Application.SafeTopLevelCaptionFormat\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SafeTopLevelCaptionFormat\n  nameWithType: Application.SafeTopLevelCaptionFormat\n  fullName: Application.SafeTopLevelCaptionFormat\n- uid: System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SetCompatibleTextRenderingDefault(Boolean)\n  nameWithType: Application.SetCompatibleTextRenderingDefault(Boolean)\n  fullName: Application.SetCompatibleTextRenderingDefault(Boolean)\n- uid: System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SetSuspendState(PowerState, Boolean, Boolean)\n  nameWithType: Application.SetSuspendState(PowerState, Boolean, Boolean)\n  fullName: Application.SetSuspendState(PowerState, Boolean, Boolean)\n- uid: System.Windows.Forms.PowerState\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PowerState\n  nameWithType: PowerState\n  fullName: System.Windows.Forms.PowerState\n- uid: System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SetUnhandledExceptionMode(UnhandledExceptionMode)\n  nameWithType: Application.SetUnhandledExceptionMode(UnhandledExceptionMode)\n  fullName: Application.SetUnhandledExceptionMode(UnhandledExceptionMode)\n- uid: System.Windows.Forms.UnhandledExceptionMode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: UnhandledExceptionMode\n  nameWithType: UnhandledExceptionMode\n  fullName: System.Windows.Forms.UnhandledExceptionMode\n- uid: System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SetUnhandledExceptionMode(UnhandledExceptionMode, Boolean)\n  nameWithType: Application.SetUnhandledExceptionMode(UnhandledExceptionMode, Boolean)\n  fullName: Application.SetUnhandledExceptionMode(UnhandledExceptionMode, Boolean)\n- uid: System.Windows.Forms.Application.StartupPath\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: StartupPath\n  nameWithType: Application.StartupPath\n  fullName: Application.StartupPath\n- uid: System.Windows.Forms.Application.ThreadException\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ThreadException\n  nameWithType: Application.ThreadException\n  fullName: Application.ThreadException\n- uid: System.Threading.ThreadExceptionEventHandler\n  parent: System.Threading\n  isExternal: false\n  name: ThreadExceptionEventHandler\n  nameWithType: ThreadExceptionEventHandler\n  fullName: System.Threading.ThreadExceptionEventHandler\n- uid: System.Windows.Forms.Application.ThreadExit\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ThreadExit\n  nameWithType: Application.ThreadExit\n  fullName: Application.ThreadExit\n- uid: System.Windows.Forms.Application.UnregisterMessageLoop\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: UnregisterMessageLoop()\n  nameWithType: Application.UnregisterMessageLoop()\n  fullName: Application.UnregisterMessageLoop()\n- uid: System.Windows.Forms.Application.UserAppDataPath\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: UserAppDataPath\n  nameWithType: Application.UserAppDataPath\n  fullName: Application.UserAppDataPath\n- uid: System.Windows.Forms.Application.UserAppDataRegistry\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: UserAppDataRegistry\n  nameWithType: Application.UserAppDataRegistry\n  fullName: Application.UserAppDataRegistry\n- uid: System.Windows.Forms.Application.UseWaitCursor\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: UseWaitCursor\n  nameWithType: Application.UseWaitCursor\n  fullName: Application.UseWaitCursor\n- uid: System.Windows.Forms.Application.VisualStyleState\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: VisualStyleState\n  nameWithType: Application.VisualStyleState\n  fullName: Application.VisualStyleState\n- uid: System.Windows.Forms.VisualStyles.VisualStyleState\n  parent: System.Windows.Forms.VisualStyles\n  isExternal: false\n  name: VisualStyleState\n  nameWithType: VisualStyleState\n  fullName: System.Windows.Forms.VisualStyles.VisualStyleState\n- uid: System.Windows.Forms.Application.SetUnhandledExceptionMode*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SetUnhandledExceptionMode\n  nameWithType: Application.SetUnhandledExceptionMode\n  fullName: Application.SetUnhandledExceptionMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.AddMessageFilter*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: AddMessageFilter\n  nameWithType: Application.AddMessageFilter\n  fullName: Application.AddMessageFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.AllowQuit*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: AllowQuit\n  nameWithType: Application.AllowQuit\n  fullName: Application.AllowQuit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.CommonAppDataPath*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CommonAppDataPath\n  nameWithType: Application.CommonAppDataPath\n  fullName: Application.CommonAppDataPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.CommonAppDataRegistry*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CommonAppDataRegistry\n  nameWithType: Application.CommonAppDataRegistry\n  fullName: Application.CommonAppDataRegistry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.CompanyName*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CompanyName\n  nameWithType: Application.CompanyName\n  fullName: Application.CompanyName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.CurrentCulture*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CurrentCulture\n  nameWithType: Application.CurrentCulture\n  fullName: Application.CurrentCulture\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.CurrentInputLanguage*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: CurrentInputLanguage\n  nameWithType: Application.CurrentInputLanguage\n  fullName: Application.CurrentInputLanguage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.DoEvents*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: DoEvents\n  nameWithType: Application.DoEvents\n  fullName: Application.DoEvents\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.EnableVisualStyles*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: EnableVisualStyles\n  nameWithType: Application.EnableVisualStyles\n  fullName: Application.EnableVisualStyles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.ExecutablePath*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ExecutablePath\n  nameWithType: Application.ExecutablePath\n  fullName: Application.ExecutablePath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.Exit*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Exit\n  nameWithType: Application.Exit\n  fullName: Application.Exit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.ExitThread*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ExitThread\n  nameWithType: Application.ExitThread\n  fullName: Application.ExitThread\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.FilterMessage*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: FilterMessage\n  nameWithType: Application.FilterMessage\n  fullName: Application.FilterMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.LocalUserAppDataPath*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: LocalUserAppDataPath\n  nameWithType: Application.LocalUserAppDataPath\n  fullName: Application.LocalUserAppDataPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.MessageLoop*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: MessageLoop\n  nameWithType: Application.MessageLoop\n  fullName: Application.MessageLoop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.OleRequired*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: OleRequired\n  nameWithType: Application.OleRequired\n  fullName: Application.OleRequired\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.OnThreadException*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: OnThreadException\n  nameWithType: Application.OnThreadException\n  fullName: Application.OnThreadException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.OpenForms*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: OpenForms\n  nameWithType: Application.OpenForms\n  fullName: Application.OpenForms\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.ProductName*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ProductName\n  nameWithType: Application.ProductName\n  fullName: Application.ProductName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.ProductVersion*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: ProductVersion\n  nameWithType: Application.ProductVersion\n  fullName: Application.ProductVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.RaiseIdle*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: RaiseIdle\n  nameWithType: Application.RaiseIdle\n  fullName: Application.RaiseIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.RegisterMessageLoop*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: RegisterMessageLoop\n  nameWithType: Application.RegisterMessageLoop\n  fullName: Application.RegisterMessageLoop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.RemoveMessageFilter*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: RemoveMessageFilter\n  nameWithType: Application.RemoveMessageFilter\n  fullName: Application.RemoveMessageFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.RenderWithVisualStyles*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: RenderWithVisualStyles\n  nameWithType: Application.RenderWithVisualStyles\n  fullName: Application.RenderWithVisualStyles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.Restart*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Restart\n  nameWithType: Application.Restart\n  fullName: Application.Restart\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.Run*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: Run\n  nameWithType: Application.Run\n  fullName: Application.Run\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.SafeTopLevelCaptionFormat*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SafeTopLevelCaptionFormat\n  nameWithType: Application.SafeTopLevelCaptionFormat\n  fullName: Application.SafeTopLevelCaptionFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.SetCompatibleTextRenderingDefault*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SetCompatibleTextRenderingDefault\n  nameWithType: Application.SetCompatibleTextRenderingDefault\n  fullName: Application.SetCompatibleTextRenderingDefault\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.SetSuspendState*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: SetSuspendState\n  nameWithType: Application.SetSuspendState\n  fullName: Application.SetSuspendState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.StartupPath*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: StartupPath\n  nameWithType: Application.StartupPath\n  fullName: Application.StartupPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.UnregisterMessageLoop*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: UnregisterMessageLoop\n  nameWithType: Application.UnregisterMessageLoop\n  fullName: Application.UnregisterMessageLoop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.UserAppDataPath*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: UserAppDataPath\n  nameWithType: Application.UserAppDataPath\n  fullName: Application.UserAppDataPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.UserAppDataRegistry*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: UserAppDataRegistry\n  nameWithType: Application.UserAppDataRegistry\n  fullName: Application.UserAppDataRegistry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.UseWaitCursor*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: UseWaitCursor\n  nameWithType: Application.UseWaitCursor\n  fullName: Application.UseWaitCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Windows.Forms.Application.VisualStyleState*\n  parent: System.Windows.Forms.Application\n  isExternal: false\n  name: VisualStyleState\n  nameWithType: Application.VisualStyleState\n  fullName: Application.VisualStyleState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Application.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}