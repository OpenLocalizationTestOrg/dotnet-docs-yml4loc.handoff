{"nodes":[{"content":"Enables the .NET Framework Data Provider for ODBC to help make sure that a user has a security level sufficient to access an ODBC data source. This class cannot be inherited.","nodes":[{"pos":[0,174],"content":"Enables the .NET Framework Data Provider for ODBC to help make sure that a user has a security level sufficient to access an ODBC data source. This class cannot be inherited.","nodes":[{"content":"Enables the .NET Framework Data Provider for ODBC to help make sure that a user has a security level sufficient to access an ODBC data source. This class cannot be inherited.","pos":[0,174],"nodes":[{"content":"Enables the .NET Framework Data Provider for ODBC to help make sure that a user has a security level sufficient to access an ODBC data source.","pos":[0,142]},{"content":"This class cannot be inherited.","pos":[143,174]}]}]}],"pos":[766,941],"yaml":true},{"content":"This class is intended for future use when the .NET Framework Data Provider for ODBC is enabled for partial trust scenarios. The .NET Framework Data Provider for ODBD currently requires FullTrust permission. Currently, using the `OdbcPermission` class has no effect. For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).","nodes":[{"pos":[0,382],"content":"This class is intended for future use when the .NET Framework Data Provider for ODBC is enabled for partial trust scenarios. The .NET Framework Data Provider for ODBD currently requires FullTrust permission. Currently, using the `OdbcPermission` class has no effect. For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).","nodes":[{"content":"This class is intended for future use when the .NET Framework Data Provider for ODBC is enabled for partial trust scenarios.","pos":[0,124]},{"content":"The .NET Framework Data Provider for ODBD currently requires FullTrust permission.","pos":[125,207]},{"content":"Currently, using the <ph id=\"ph1\">`OdbcPermission`</ph> class has no effect.","pos":[208,266],"source":" Currently, using the `OdbcPermission` class has no effect."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Access Security and ADO.NET<ept id=\"p1\">](~/docs/framework/data/adonet/code-access-security.md)</ept>.","pos":[267,382],"source":" For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md)."}]}],"pos":[952,1335],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Odbc.OdbcPermission\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class."}],"pos":[4307,4401],"yaml":true},{"content":"The base constructor initializes all fields to their default values.","nodes":[{"pos":[0,68],"content":"The base constructor initializes all fields to their default values.","nodes":[{"content":"The base constructor initializes all fields to their default values.","pos":[0,68]}]}],"pos":[4412,4481],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class with one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Odbc.OdbcPermission\"&gt;&lt;/xref&gt;</ph> class with one of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class with one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[6049,6231],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[6436,6520],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Odbc.OdbcPermission\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class."}],"pos":[7857,7951],"yaml":true},{"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","nodes":[{"pos":[0,412],"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> enumeration takes precedence over the <ph id=\"ph2\">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> property.","pos":[0,167],"source":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property."},{"content":"Therefore, if you set <ph id=\"ph1\">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> to <ph id=\"ph2\">`false`</ph>, you must also set <ph id=\"ph3\">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> to <ph id=\"ph4\">`None`</ph> to prevent a user from making a connection using a blank password.","pos":[168,412],"source":" Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password."}]}],"pos":[7962,8375],"yaml":true,"extradata":"MT"},{"content":"One of the `System.Security.Permissions.PermissionState` values.","nodes":[{"pos":[0,64],"content":"One of the <ph id=\"ph1\">`System.Security.Permissions.PermissionState`</ph> values.","source":"One of the `System.Security.Permissions.PermissionState` values."}],"pos":[8840,8905],"yaml":true},{"content":"Indicates whether a blank password is allowed.","nodes":[{"pos":[0,46],"content":"Indicates whether a blank password is allowed.","nodes":[{"content":"Indicates whether a blank password is allowed.","pos":[0,46]}]}],"pos":[8980,9027],"yaml":true},{"content":"Adds access for the specified connection string to the existing state of the permission.","nodes":[{"pos":[0,88],"content":"Adds access for the specified connection string to the existing state of the permission.","nodes":[{"content":"Adds access for the specified connection string to the existing state of the permission.","pos":[0,88]}]}],"pos":[10421,10510],"yaml":true},{"content":"This method can be useful when you implement the following:  \n  \n-   a .NET Framework data provider.  \n  \n-   an API that must assert for data access permission.  \n  \n-   an administrative tool or installation program that must modify security policy.","nodes":[{"pos":[0,59],"content":"This method can be useful when you implement the following:","nodes":[{"content":"This method can be useful when you implement the following:","pos":[0,59]}]},{"pos":[69,100],"content":"a .NET Framework data provider.","nodes":[{"content":"a .NET Framework data provider.","pos":[0,31]}]},{"pos":[110,161],"content":"an API that must assert for data access permission.","nodes":[{"content":"an API that must assert for data access permission.","pos":[0,51]}]},{"pos":[171,251],"content":"an administrative tool or installation program that must modify security policy.","nodes":[{"content":"an administrative tool or installation program that must modify security policy.","pos":[0,80]}]}],"pos":[10521,10781],"yaml":true,"extradata":"MT"},{"content":"A permitted connection string.","nodes":[{"pos":[0,30],"content":"A permitted connection string.","nodes":[{"content":"A permitted connection string.","pos":[0,30]}]}],"pos":[11010,11041],"yaml":true},{"content":"String that identifies connection string parameters that are allowed or disallowed.","nodes":[{"pos":[0,83],"content":"String that identifies connection string parameters that are allowed or disallowed.","nodes":[{"content":"String that identifies connection string parameters that are allowed or disallowed.","pos":[0,83]}]}],"pos":[11109,11193],"yaml":true},{"content":"One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> values.","nodes":[{"pos":[0,74],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.KeyRestrictionBehavior\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> values."}],"pos":[11278,11353],"yaml":true},{"content":"Returns the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> as an <xref href=\"System.Security.IPermission\"></xref>.","nodes":[{"pos":[0,120],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Data.Odbc.OdbcPermission\"&gt;&lt;/xref&gt;</ph> as an <ph id=\"ph2\">&lt;xref href=\"System.Security.IPermission\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> as an <xref href=\"System.Security.IPermission\"></xref>."}],"pos":[12396,12517],"yaml":true},{"content":"A copy of the current permission object.","nodes":[{"pos":[0,40],"content":"A copy of the current permission object.","nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]}],"pos":[12683,12724],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Odbc.OdbcPermission\n  commentId: T:System.Data.Odbc.OdbcPermission\n  id: OdbcPermission\n  children:\n  - System.Data.Odbc.OdbcPermission.#ctor\n  - System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  - System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  - System.Data.Odbc.OdbcPermission.Copy\n  langs:\n  - csharp\n  name: OdbcPermission\n  nameWithType: OdbcPermission\n  fullName: System.Data.Odbc.OdbcPermission\n  type: Class\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Odbc\n  summary: Enables the .NET Framework Data Provider for ODBC to help make sure that a user has a security level sufficient to access an ODBC data source. This class cannot be inherited.\n  remarks: This class is intended for future use when the .NET Framework Data Provider for ODBC is enabled for partial trust scenarios. The .NET Framework Data Provider for ODBD currently requires FullTrust permission. Currently, using the `OdbcPermission` class has no effect. For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).\n  syntax:\n    content: 'public sealed class OdbcPermission : System.Data.Common.DBDataPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  - System.Data.Common.DBDataPermission\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.DBDataPermission.AllowBlankPassword\n  - System.Data.Common.DBDataPermission.Clear\n  - System.Data.Common.DBDataPermission.CreateInstance\n  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Data.Common.DBDataPermission.IsUnrestricted\n  - System.Data.Common.DBDataPermission.ToXml\n  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Odbc.OdbcPermission.#ctor\n  commentId: M:System.Data.Odbc.OdbcPermission.#ctor\n  id: '#ctor'\n  parent: System.Data.Odbc.OdbcPermission\n  langs:\n  - csharp\n  name: OdbcPermission()\n  nameWithType: OdbcPermission.OdbcPermission()\n  fullName: OdbcPermission.OdbcPermission()\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class.\n  remarks: The base constructor initializes all fields to their default values.\n  syntax:\n    content: >-\n      [System.Obsolete(\"OdbcPermission() has been deprecated.  Use the OdbcPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202\", true)]\n\n      public OdbcPermission ();\n    parameters: []\n  overload: System.Data.Odbc.OdbcPermission.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Data.Odbc.OdbcPermission\n  langs:\n  - csharp\n  name: OdbcPermission(PermissionState)\n  nameWithType: OdbcPermission.OdbcPermission(PermissionState)\n  fullName: OdbcPermission.OdbcPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class with one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  syntax:\n    content: public OdbcPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Data.Odbc.OdbcPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  commentId: M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'\n  parent: System.Data.Odbc.OdbcPermission\n  langs:\n  - csharp\n  name: OdbcPermission(PermissionState, Boolean)\n  nameWithType: OdbcPermission.OdbcPermission(PermissionState, Boolean)\n  fullName: OdbcPermission.OdbcPermission(PermissionState, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> class.\n  remarks: The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.\n  syntax:\n    content: >-\n      [System.Obsolete(\"OdbcPermission(PermissionState state, Boolean allowBlankPassword) has been deprecated.  Use the OdbcPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202\", true)]\n\n      public OdbcPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the `System.Security.Permissions.PermissionState` values.\n    - id: allowBlankPassword\n      type: System.Boolean\n      description: Indicates whether a blank password is allowed.\n  overload: System.Data.Odbc.OdbcPermission.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  commentId: M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  parent: System.Data.Odbc.OdbcPermission\n  langs:\n  - csharp\n  name: Add(String, String, KeyRestrictionBehavior)\n  nameWithType: OdbcPermission.Add(String, String, KeyRestrictionBehavior)\n  fullName: OdbcPermission.Add(String, String, KeyRestrictionBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Odbc\n  summary: Adds access for the specified connection string to the existing state of the permission.\n  remarks: \"This method can be useful when you implement the following:  \\n  \\n-   a .NET Framework data provider.  \\n  \\n-   an API that must assert for data access permission.  \\n  \\n-   an administrative tool or installation program that must modify security policy.\"\n  syntax:\n    content: public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: A permitted connection string.\n    - id: restrictions\n      type: System.String\n      description: String that identifies connection string parameters that are allowed or disallowed.\n    - id: behavior\n      type: System.Data.KeyRestrictionBehavior\n      description: One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> values.\n  overload: System.Data.Odbc.OdbcPermission.Add*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Odbc.OdbcPermission.Copy\n  commentId: M:System.Data.Odbc.OdbcPermission.Copy\n  id: Copy\n  parent: System.Data.Odbc.OdbcPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: OdbcPermission.Copy()\n  fullName: OdbcPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Odbc\n  summary: Returns the <xref href=\"System.Data.Odbc.OdbcPermission\"></xref> as an <xref href=\"System.Security.IPermission\"></xref>.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Data.Odbc.OdbcPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.DBDataPermission\n  parent: System.Data.Common\n  isExternal: false\n  name: DBDataPermission\n  nameWithType: DBDataPermission\n  fullName: System.Data.Common.DBDataPermission\n- uid: System.Data.Odbc.OdbcPermission.#ctor\n  parent: System.Data.Odbc.OdbcPermission\n  isExternal: false\n  name: OdbcPermission()\n  nameWithType: OdbcPermission.OdbcPermission()\n  fullName: OdbcPermission.OdbcPermission()\n- uid: System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Data.Odbc.OdbcPermission\n  isExternal: false\n  name: OdbcPermission(PermissionState)\n  nameWithType: OdbcPermission.OdbcPermission(PermissionState)\n  fullName: OdbcPermission.OdbcPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  parent: System.Data.Odbc.OdbcPermission\n  isExternal: false\n  name: OdbcPermission(PermissionState, Boolean)\n  nameWithType: OdbcPermission.OdbcPermission(PermissionState, Boolean)\n  fullName: OdbcPermission.OdbcPermission(PermissionState, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  parent: System.Data.Odbc.OdbcPermission\n  isExternal: false\n  name: Add(String, String, KeyRestrictionBehavior)\n  nameWithType: OdbcPermission.Add(String, String, KeyRestrictionBehavior)\n  fullName: OdbcPermission.Add(String, String, KeyRestrictionBehavior)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.KeyRestrictionBehavior\n  parent: System.Data\n  isExternal: false\n  name: KeyRestrictionBehavior\n  nameWithType: KeyRestrictionBehavior\n  fullName: System.Data.KeyRestrictionBehavior\n- uid: System.Data.Odbc.OdbcPermission.Copy\n  parent: System.Data.Odbc.OdbcPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: OdbcPermission.Copy()\n  fullName: OdbcPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Data.Odbc.OdbcPermission.#ctor*\n  parent: System.Data.Odbc.OdbcPermission\n  isExternal: false\n  name: OdbcPermission\n  nameWithType: OdbcPermission.OdbcPermission\n  fullName: OdbcPermission.OdbcPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n- uid: System.Data.Odbc.OdbcPermission.Add*\n  parent: System.Data.Odbc.OdbcPermission\n  isExternal: false\n  name: Add\n  nameWithType: OdbcPermission.Add\n  fullName: OdbcPermission.Add\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n- uid: System.Data.Odbc.OdbcPermission.Copy*\n  parent: System.Data.Odbc.OdbcPermission\n  isExternal: false\n  name: Copy\n  nameWithType: OdbcPermission.Copy\n  fullName: OdbcPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Odbc/OdbcPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: DBDataPermission.FromXml(SecurityElement)\n  fullName: DBDataPermission.FromXml(SecurityElement)\n- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: DBDataPermission.Intersect(IPermission)\n  fullName: DBDataPermission.Intersect(IPermission)\n- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: DBDataPermission.IsSubsetOf(IPermission)\n  fullName: DBDataPermission.IsSubsetOf(IPermission)\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Data.Common.DBDataPermission.ToXml\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: DBDataPermission.ToXml()\n  fullName: DBDataPermission.ToXml()\n- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: DBDataPermission.Union(IPermission)\n  fullName: DBDataPermission.Union(IPermission)\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Data.Common.DBDataPermission.AllowBlankPassword\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: DBDataPermission.AllowBlankPassword\n  fullName: DBDataPermission.AllowBlankPassword\n- uid: System.Data.Common.DBDataPermission.Clear\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Clear()\n  nameWithType: DBDataPermission.Clear()\n  fullName: DBDataPermission.Clear()\n- uid: System.Data.Common.DBDataPermission.CreateInstance\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: DBDataPermission.CreateInstance()\n  fullName: DBDataPermission.CreateInstance()\n- uid: System.Data.Common.DBDataPermission.IsUnrestricted\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: DBDataPermission.IsUnrestricted()\n  fullName: DBDataPermission.IsUnrestricted()\n"}