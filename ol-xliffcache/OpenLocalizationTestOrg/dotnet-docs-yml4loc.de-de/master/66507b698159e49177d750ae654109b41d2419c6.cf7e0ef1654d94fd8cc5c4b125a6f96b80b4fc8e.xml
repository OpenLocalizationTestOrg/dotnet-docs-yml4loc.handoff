{"nodes":[{"content":"Provides properties that control authentication parameters and protection level for the TCP transport.","nodes":[{"pos":[0,102],"content":"Provides properties that control authentication parameters and protection level for the TCP transport.","nodes":[{"content":"Provides properties that control authentication parameters and protection level for the TCP transport.","pos":[0,102]}]}],"pos":[805,908],"yaml":true},{"content":"This class is used by <xref:System.ServiceModel.NetTcpSecurity.Transport%2A> to set the transport-level security settings for a binding.","nodes":[{"pos":[0,136],"content":"This class is used by <xref:System.ServiceModel.NetTcpSecurity.Transport%2A> to set the transport-level security settings for a binding.","nodes":[{"content":"This class is used by <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetTcpSecurity.Transport%2A&gt;</ph> to set the transport-level security settings for a binding.","pos":[0,136],"source":"This class is used by <xref:System.ServiceModel.NetTcpSecurity.Transport%2A> to set the transport-level security settings for a binding."}]}],"pos":[919,1056],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.TcpTransportSecurity\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TcpTransportSecurity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.TcpTransportSecurity\"></xref> class."}],"pos":[2574,2677],"yaml":true},{"content":"Gets or sets the type of client credential used for authentication.","nodes":[{"pos":[0,67],"content":"Gets or sets the type of client credential used for authentication.","nodes":[{"content":"Gets or sets the type of client credential used for authentication.","pos":[0,67]}]}],"pos":[3972,4040],"yaml":true},{"content":"The return value can be one of the following enumeration members:  \n  \n-   <xref:System.ServiceModel.HttpClientCredentialType.Basic>  \n  \n-   <xref:System.ServiceModel.HttpClientCredentialType.Certificate>  \n  \n-   <xref:System.ServiceModel.HttpClientCredentialType.Digest>  \n  \n-   <xref:System.ServiceModel.HttpClientCredentialType.None>  \n  \n-   <xref:System.ServiceModel.HttpClientCredentialType.Ntlm>  \n  \n-   <xref:System.ServiceModel.HttpClientCredentialType.Windows>","nodes":[{"pos":[0,65],"content":"The return value can be one of the following enumeration members:","nodes":[{"content":"The return value can be one of the following enumeration members:","pos":[0,65]}]},{"pos":[75,132],"content":"<xref:System.ServiceModel.HttpClientCredentialType.Basic>","nodes":[]},{"pos":[142,205],"content":"<xref:System.ServiceModel.HttpClientCredentialType.Certificate>","nodes":[]},{"pos":[215,273],"content":"<xref:System.ServiceModel.HttpClientCredentialType.Digest>","nodes":[]},{"pos":[283,339],"content":"<xref:System.ServiceModel.HttpClientCredentialType.None>","nodes":[]},{"pos":[349,405],"content":"<xref:System.ServiceModel.HttpClientCredentialType.Ntlm>","nodes":[]},{"pos":[415,474],"content":"<xref:System.ServiceModel.HttpClientCredentialType.Windows>","nodes":[]}],"pos":[4051,4540],"yaml":true,"extradata":"MT"},{"content":"Returns the <xref href=\"System.ServiceModel.TcpClientCredentialType\"></xref>.","nodes":[{"pos":[0,77],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TcpClientCredentialType\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.ServiceModel.TcpClientCredentialType\"></xref>."}],"pos":[5070,5148],"yaml":true},{"content":"Gets or sets the extended protection policy for the TCP transport.","nodes":[{"pos":[0,66],"content":"Gets or sets the extended protection policy for the TCP transport.","nodes":[{"content":"Gets or sets the extended protection policy for the TCP transport.","pos":[0,66]}]}],"pos":[6408,6475],"yaml":true},{"content":"The extended protection policy for the TCP transport.","nodes":[{"pos":[0,53],"content":"The extended protection policy for the TCP transport.","nodes":[{"content":"The extended protection policy for the TCP transport.","pos":[0,53]}]}],"pos":[6737,6791],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the TCP stream.","nodes":[{"pos":[0,93],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> for the TCP stream.","source":"Gets or sets the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the TCP stream."}],"pos":[7877,7971],"yaml":true},{"content":"Returns the <xref href=\"System.Net.Security.ProtectionLevel\"></xref>.","nodes":[{"pos":[0,69],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.Net.Security.ProtectionLevel\"></xref>."}],"pos":[8146,8216],"yaml":true},{"content":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"></xref> property has changed from its default value and should be serialized. It is used by WCF for XAML integration.","nodes":[{"pos":[0,239],"content":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"></xref> property has changed from its default value and should be serialized. It is used by WCF for XAML integration.","nodes":[{"content":"Returns a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"&gt;&lt;/xref&gt;</ph> property has changed from its default value and should be serialized.","pos":[0,199],"source":"Returns a value that indicates whether the <xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"></xref> property has changed from its default value and should be serialized."},{"content":"It is used by WCF for XAML integration.","pos":[200,239]}]}],"pos":[9565,9805],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"></xref> property value should be serialized; otherwise, `false`.","nodes":[{"pos":[0,157],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"&gt;&lt;/xref&gt;</ph> property value should be serialized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"></xref> property value should be serialized; otherwise, `false`."}],"pos":[9961,10121],"yaml":true},{"content":"Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","nodes":[{"pos":[0,237],"content":"Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","nodes":[{"content":"Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","pos":[0,237],"nodes":[{"content":"Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate.","pos":[0,128]},{"content":"The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","pos":[129,237]}]}]}],"pos":[11221,11461],"yaml":true},{"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","nodes":[{"pos":[0,323],"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","nodes":[{"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","pos":[0,323],"nodes":[{"content":"The default value is Ssl3 &amp;#124; Tls &amp;#124; Tls11 &amp;#124; Tls12.","pos":[0,63],"source":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12."},{"content":"Versions of the framework prior to 4.6 only support Ssl3 and Tls.","pos":[64,129]},{"content":"If these are not included, communication with earlier versions of the framework will not be possible.","pos":[130,231]},{"content":"Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","pos":[232,323]}]}]}],"pos":[11472,11796],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Security.Authentication.SslProtocols\"></xref>.","nodes":[{"pos":[0,73],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Security.Authentication.SslProtocols\"></xref>."}],"pos":[12626,12700],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.TcpTransportSecurity\n  commentId: T:System.ServiceModel.TcpTransportSecurity\n  id: TcpTransportSecurity\n  children:\n  - System.ServiceModel.TcpTransportSecurity.#ctor\n  - System.ServiceModel.TcpTransportSecurity.ClientCredentialType\n  - System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\n  - System.ServiceModel.TcpTransportSecurity.ProtectionLevel\n  - System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy\n  - System.ServiceModel.TcpTransportSecurity.SslProtocols\n  langs:\n  - csharp\n  name: TcpTransportSecurity\n  nameWithType: TcpTransportSecurity\n  fullName: System.ServiceModel.TcpTransportSecurity\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Provides properties that control authentication parameters and protection level for the TCP transport.\n  remarks: This class is used by <xref:System.ServiceModel.NetTcpSecurity.Transport%2A> to set the transport-level security settings for a binding.\n  syntax:\n    content: public sealed class TcpTransportSecurity\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TcpTransportSecurity.#ctor\n  commentId: M:System.ServiceModel.TcpTransportSecurity.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.TcpTransportSecurity\n  langs:\n  - csharp\n  name: TcpTransportSecurity()\n  nameWithType: TcpTransportSecurity.TcpTransportSecurity()\n  fullName: TcpTransportSecurity.TcpTransportSecurity()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.TcpTransportSecurity\"></xref> class.\n  syntax:\n    content: public TcpTransportSecurity ();\n    parameters: []\n  overload: System.ServiceModel.TcpTransportSecurity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TcpTransportSecurity.ClientCredentialType\n  commentId: P:System.ServiceModel.TcpTransportSecurity.ClientCredentialType\n  id: ClientCredentialType\n  parent: System.ServiceModel.TcpTransportSecurity\n  langs:\n  - csharp\n  name: ClientCredentialType\n  nameWithType: TcpTransportSecurity.ClientCredentialType\n  fullName: TcpTransportSecurity.ClientCredentialType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the type of client credential used for authentication.\n  remarks: \"The return value can be one of the following enumeration members:  \\n  \\n-   <xref:System.ServiceModel.HttpClientCredentialType.Basic>  \\n  \\n-   <xref:System.ServiceModel.HttpClientCredentialType.Certificate>  \\n  \\n-   <xref:System.ServiceModel.HttpClientCredentialType.Digest>  \\n  \\n-   <xref:System.ServiceModel.HttpClientCredentialType.None>  \\n  \\n-   <xref:System.ServiceModel.HttpClientCredentialType.Ntlm>  \\n  \\n-   <xref:System.ServiceModel.HttpClientCredentialType.Windows>\"\n  example:\n  - \"The following code shows how to access and set this property.  \\n  \\n [!code-csharp[c_ProgrammingSecurity#13](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#13)]\\n [!code-vb[c_ProgrammingSecurity#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#13)]\"\n  syntax:\n    content: public System.ServiceModel.TcpClientCredentialType ClientCredentialType { get; set; }\n    return:\n      type: System.ServiceModel.TcpClientCredentialType\n      description: Returns the <xref href=\"System.ServiceModel.TcpClientCredentialType\"></xref>.\n  overload: System.ServiceModel.TcpTransportSecurity.ClientCredentialType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\n  commentId: P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\n  id: ExtendedProtectionPolicy\n  parent: System.ServiceModel.TcpTransportSecurity\n  langs:\n  - csharp\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportSecurity.ExtendedProtectionPolicy\n  fullName: TcpTransportSecurity.ExtendedProtectionPolicy\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the extended protection policy for the TCP transport.\n  syntax:\n    content: public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }\n    return:\n      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n      description: The extended protection policy for the TCP transport.\n  overload: System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TcpTransportSecurity.ProtectionLevel\n  commentId: P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel\n  id: ProtectionLevel\n  parent: System.ServiceModel.TcpTransportSecurity\n  langs:\n  - csharp\n  name: ProtectionLevel\n  nameWithType: TcpTransportSecurity.ProtectionLevel\n  fullName: TcpTransportSecurity.ProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> for the TCP stream.\n  syntax:\n    content: public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }\n    return:\n      type: System.Net.Security.ProtectionLevel\n      description: Returns the <xref href=\"System.Net.Security.ProtectionLevel\"></xref>.\n  overload: System.ServiceModel.TcpTransportSecurity.ProtectionLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy\n  commentId: M:System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy\n  id: ShouldSerializeExtendedProtectionPolicy\n  parent: System.ServiceModel.TcpTransportSecurity\n  langs:\n  - csharp\n  name: ShouldSerializeExtendedProtectionPolicy()\n  nameWithType: TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy()\n  fullName: TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns a value that indicates whether the <xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"></xref> property has changed from its default value and should be serialized. It is used by WCF for XAML integration.\n  syntax:\n    content: public bool ShouldSerializeExtendedProtectionPolicy ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\"></xref> property value should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TcpTransportSecurity.SslProtocols\n  commentId: P:System.ServiceModel.TcpTransportSecurity.SslProtocols\n  id: SslProtocols\n  parent: System.ServiceModel.TcpTransportSecurity\n  langs:\n  - csharp\n  name: SslProtocols\n  nameWithType: TcpTransportSecurity.SslProtocols\n  fullName: TcpTransportSecurity.SslProtocols\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: 'Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.'\n  remarks: The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.\n  example:\n  - \"```csharp  \\nNetTcpBinding b = new NetTcpBinding();  \\nb.Security.Mode = SecurityMode.Transport;  \\nb.Security.Transport.ClientCredentialType = TcpClientCredentialType.Certificate;  \\nb.Security.Transport.SslProtocols = SslProtocols.Tls11 | SslProtocols.Tls12;  \\nEndpointAddress a = new EndpointAddress(\\\"net.tcp://contoso.com/TcpAddress\\\");  \\nChannelFactory<ICalculator> cf = new ChannelFactory<ICalculator>(b, a);  \\ncf.Credentials.ClientCertificate.SetCertificate(  \\n    StoreLocation.LocalMachine,  \\n    StoreName.My,  \\n    X509FindType.FindByThumbprint,  \\n    \\\"0000000000000000000000000000000000000000\\\");  \\n```\"\n  syntax:\n    content: public System.Security.Authentication.SslProtocols SslProtocols { get; set; }\n    return:\n      type: System.Security.Authentication.SslProtocols\n      description: Returns <xref href=\"System.Security.Authentication.SslProtocols\"></xref>.\n  overload: System.ServiceModel.TcpTransportSecurity.SslProtocols*\n  exceptions: []\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.TcpTransportSecurity.#ctor\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: TcpTransportSecurity()\n  nameWithType: TcpTransportSecurity.TcpTransportSecurity()\n  fullName: TcpTransportSecurity.TcpTransportSecurity()\n- uid: System.ServiceModel.TcpTransportSecurity.ClientCredentialType\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: TcpTransportSecurity.ClientCredentialType\n  fullName: TcpTransportSecurity.ClientCredentialType\n- uid: System.ServiceModel.TcpClientCredentialType\n  parent: System.ServiceModel\n  isExternal: false\n  name: TcpClientCredentialType\n  nameWithType: TcpClientCredentialType\n  fullName: System.ServiceModel.TcpClientCredentialType\n- uid: System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportSecurity.ExtendedProtectionPolicy\n  fullName: TcpTransportSecurity.ExtendedProtectionPolicy\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ExtendedProtectionPolicy\n  nameWithType: ExtendedProtectionPolicy\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n- uid: System.ServiceModel.TcpTransportSecurity.ProtectionLevel\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: TcpTransportSecurity.ProtectionLevel\n  fullName: TcpTransportSecurity.ProtectionLevel\n- uid: System.Net.Security.ProtectionLevel\n  parent: System.Net.Security\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ProtectionLevel\n  fullName: System.Net.Security.ProtectionLevel\n- uid: System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: ShouldSerializeExtendedProtectionPolicy()\n  nameWithType: TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy()\n  fullName: TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.TcpTransportSecurity.SslProtocols\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: SslProtocols\n  nameWithType: TcpTransportSecurity.SslProtocols\n  fullName: TcpTransportSecurity.SslProtocols\n- uid: System.Security.Authentication.SslProtocols\n  parent: System.Security.Authentication\n  isExternal: false\n  name: SslProtocols\n  nameWithType: SslProtocols\n  fullName: System.Security.Authentication.SslProtocols\n- uid: System.ServiceModel.TcpTransportSecurity.#ctor*\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: TcpTransportSecurity\n  nameWithType: TcpTransportSecurity.TcpTransportSecurity\n  fullName: TcpTransportSecurity.TcpTransportSecurity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n- uid: System.ServiceModel.TcpTransportSecurity.ClientCredentialType*\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: TcpTransportSecurity.ClientCredentialType\n  fullName: TcpTransportSecurity.ClientCredentialType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n- uid: System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy*\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportSecurity.ExtendedProtectionPolicy\n  fullName: TcpTransportSecurity.ExtendedProtectionPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n- uid: System.ServiceModel.TcpTransportSecurity.ProtectionLevel*\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: TcpTransportSecurity.ProtectionLevel\n  fullName: TcpTransportSecurity.ProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n- uid: System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy*\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: ShouldSerializeExtendedProtectionPolicy\n  nameWithType: TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy\n  fullName: TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n- uid: System.ServiceModel.TcpTransportSecurity.SslProtocols*\n  parent: System.ServiceModel.TcpTransportSecurity\n  isExternal: false\n  name: SslProtocols\n  nameWithType: TcpTransportSecurity.SslProtocols\n  fullName: TcpTransportSecurity.SslProtocols\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TcpTransportSecurity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}