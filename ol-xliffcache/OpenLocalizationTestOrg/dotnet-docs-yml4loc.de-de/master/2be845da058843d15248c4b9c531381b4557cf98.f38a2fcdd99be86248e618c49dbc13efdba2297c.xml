{"nodes":[{"content":"Defines the type of <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to create. A peer name is either secured or unsecured. A secured peer name provides a proof of ownership of the name. An unsecured peer name has no identity associated.","nodes":[{"pos":[0,240],"content":"Defines the type of <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to create. A peer name is either secured or unsecured. A secured peer name provides a proof of ownership of the name. An unsecured peer name has no identity associated.","nodes":[{"content":"Defines the type of <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> to create.","pos":[0,82],"source":"Defines the type of <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to create."},{"content":"A peer name is either secured or unsecured.","pos":[83,126]},{"content":"A secured peer name provides a proof of ownership of the name.","pos":[127,189]},{"content":"An unsecured peer name has no identity associated.","pos":[190,240]}]}],"pos":[460,701],"yaml":true},{"content":"A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership. The node does not have a relationship to a public key.  \n  \n The format of a peer name is: *Authority.Classifier*. The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name. The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator. Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.  \n  \n Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731). Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.  \n  \n **Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application. Security of the application is implementation-dependent.","nodes":[{"pos":[0,226],"content":"A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership. The node does not have a relationship to a public key.","nodes":[{"content":"A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership. The node does not have a relationship to a public key.","pos":[0,226],"nodes":[{"content":"A node must have access to the private key associated with the public key, used in creating the secured <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>, in order to prove ownership.","pos":[0,171],"source":"A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership."},{"content":"The node does not have a relationship to a public key.","pos":[172,226]}]}]},{"pos":[233,838],"content":"The format of a peer name is: *Authority.Classifier*. The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name. The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator. Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.","nodes":[{"content":"The format of a peer name is: <bpt id=\"p1\">*</bpt>Authority.Classifier<ept id=\"p1\">*</ept>.","pos":[0,53],"source":"The format of a peer name is: *Authority.Classifier*."},{"content":"The value of <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt;</ph> depends on whether the name is a secured peer name or an unsecured peer name.","pos":[54,195],"source":" The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;</ph> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the <ph id=\"ph2\">`null`</ph> terminator.","pos":[196,372],"source":" The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator."},{"content":"Once the <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;</ph> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.","pos":[373,605],"source":" Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name."}]},{"pos":[845,1076],"content":"Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731). Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.","nodes":[{"content":"Only the owner, or peer host, can register a secure peer name with the <bpt id=\"p1\">[</bpt>PNRP Namespace Provider API<ept id=\"p1\">](http://go.microsoft.com/fwlink?LinkID=92731)</ept>.","pos":[0,146],"source":"Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731)."},{"content":"Any node can claim ownership to any unsecured <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.","pos":[147,231],"source":" Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>."}]},{"pos":[1083,1268],"content":"**Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application. Security of the application is implementation-dependent.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> Using a secured <ph id=\"ph1\">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> does not ensure the overall security of a networking application.","pos":[0,128],"source":"**Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application."},{"content":"Security of the application is implementation-dependent.","pos":[129,185]}]}],"pos":[712,1989],"yaml":true,"extradata":"MT"},{"content":"Create a secured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user.","nodes":[{"pos":[0,104],"content":"Create a secured <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> using the identity of current user.","source":"Create a secured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user."}],"pos":[2944,3049],"yaml":true},{"content":"Create an unsecured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user.","nodes":[{"pos":[0,107],"content":"Create an unsecured <ph id=\"ph1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;&lt;/xref&gt;</ph> using the identity of current user.","source":"Create an unsecured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user."}],"pos":[3990,4098],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.PeerToPeer.PeerNameType\n  commentId: T:System.Net.PeerToPeer.PeerNameType\n  id: PeerNameType\n  children:\n  - System.Net.PeerToPeer.PeerNameType.Secured\n  - System.Net.PeerToPeer.PeerNameType.Unsecured\n  langs:\n  - csharp\n  name: PeerNameType\n  nameWithType: PeerNameType\n  fullName: System.Net.PeerToPeer.PeerNameType\n  type: Enum\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Defines the type of <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to create. A peer name is either secured or unsecured. A secured peer name provides a proof of ownership of the name. An unsecured peer name has no identity associated.\n  remarks: \"A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership. The node does not have a relationship to a public key.  \\n  \\n The format of a peer name is: *Authority.Classifier*. The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name. The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator. Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.  \\n  \\n Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731). Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.  \\n  \\n **Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application. Security of the application is implementation-dependent.\"\n  syntax:\n    content: public enum PeerNameType\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameType.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.PeerToPeer.PeerNameType.Secured\n  commentId: F:System.Net.PeerToPeer.PeerNameType.Secured\n  id: Secured\n  parent: System.Net.PeerToPeer.PeerNameType\n  langs:\n  - csharp\n  name: Secured\n  nameWithType: PeerNameType.Secured\n  fullName: PeerNameType.Secured\n  type: Field\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Create a secured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user.\n  syntax:\n    content: Secured\n    return:\n      type: System.Net.PeerToPeer.PeerNameType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameType.xml\n- uid: System.Net.PeerToPeer.PeerNameType.Unsecured\n  commentId: F:System.Net.PeerToPeer.PeerNameType.Unsecured\n  id: Unsecured\n  parent: System.Net.PeerToPeer.PeerNameType\n  langs:\n  - csharp\n  name: Unsecured\n  nameWithType: PeerNameType.Unsecured\n  fullName: PeerNameType.Unsecured\n  type: Field\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Create an unsecured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user.\n  syntax:\n    content: Unsecured\n    return:\n      type: System.Net.PeerToPeer.PeerNameType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.PeerToPeer/PeerNameType.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Net.PeerToPeer.PeerNameType.Secured\n  parent: System.Net.PeerToPeer.PeerNameType\n  isExternal: false\n  name: Secured\n  nameWithType: PeerNameType.Secured\n  fullName: PeerNameType.Secured\n- uid: System.Net.PeerToPeer.PeerNameType\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: PeerNameType\n  nameWithType: PeerNameType\n  fullName: System.Net.PeerToPeer.PeerNameType\n- uid: System.Net.PeerToPeer.PeerNameType.Unsecured\n  parent: System.Net.PeerToPeer.PeerNameType\n  isExternal: false\n  name: Unsecured\n  nameWithType: PeerNameType.Unsecured\n  fullName: PeerNameType.Unsecured\n"}