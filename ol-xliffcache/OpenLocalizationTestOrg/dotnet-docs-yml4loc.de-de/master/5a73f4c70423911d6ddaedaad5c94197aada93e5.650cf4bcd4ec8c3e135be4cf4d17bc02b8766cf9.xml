{"nodes":[{"content":"Specifies access rights for specific key containers. This class cannot be inherited.","nodes":[{"pos":[0,84],"content":"Specifies access rights for specific key containers. This class cannot be inherited.","nodes":[{"content":"Specifies access rights for specific key containers. This class cannot be inherited.","pos":[0,84],"nodes":[{"content":"Specifies access rights for specific key containers.","pos":[0,52]},{"content":"This class cannot be inherited.","pos":[53,84]}]}]}],"pos":[1685,1770],"yaml":true},{"content":"This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.","nodes":[{"pos":[0,169],"content":"This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.","nodes":[{"content":"This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.","pos":[0,169]}]}],"pos":[1781,1951],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified cryptographic service provider (CSP) parameters and access permissions.","nodes":[{"pos":[0,215],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> class, using the specified cryptographic service provider (CSP) parameters and access permissions.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified cryptographic service provider (CSP) parameters and access permissions."}],"pos":[4191,4407],"yaml":true},{"content":"This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object.","nodes":[{"pos":[0,154],"content":"This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object.","nodes":[{"content":"This constructor allows access rights to be assigned for specific key containers identified in a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object.","pos":[0,154],"source":"This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object."}]}],"pos":[4418,4573],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Cryptography.CspParameters\"></xref> object that contains the cryptographic service provider (CSP) parameters.","nodes":[{"pos":[0,139],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CspParameters\"&gt;&lt;/xref&gt;</ph> object that contains the cryptographic service provider (CSP) parameters.","source":"A <xref href=\"System.Security.Cryptography.CspParameters\"></xref> object that contains the cryptographic service provider (CSP) parameters."}],"pos":[5724,5864],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.","nodes":[{"pos":[0,113],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."}],"pos":[5967,6081],"yaml":true},{"content":"The resulting entry would have unrestricted access.","nodes":[{"pos":[0,51],"content":"The resulting entry would have unrestricted access.","nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"pos":[6270,6322],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified key container name and access permissions.","nodes":[{"pos":[0,186],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> class, using the specified key container name and access permissions.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified key container name and access permissions."}],"pos":[7962,8149],"yaml":true},{"content":"This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk (\"*\") to represent all the key containers.","nodes":[{"pos":[0,159],"content":"This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk (\"*\") to represent all the key containers.","nodes":[{"content":"This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk (\"*\") to represent all the key containers.","pos":[0,159]}]}],"pos":[8160,8320],"yaml":true,"extradata":"MT"},{"content":"The name of the key container.","nodes":[{"pos":[0,30],"content":"The name of the key container.","nodes":[{"content":"The name of the key container.","pos":[0,30]}]}],"pos":[9389,9420],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.","nodes":[{"pos":[0,113],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."}],"pos":[9523,9637],"yaml":true},{"content":"The resulting entry would have unrestricted access.","nodes":[{"pos":[0,51],"content":"The resulting entry would have unrestricted access.","nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"pos":[9826,9878],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class with the specified property values.","nodes":[{"pos":[0,158],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> class with the specified property values.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class with the specified property values."}],"pos":[11770,11929],"yaml":true},{"content":"This constructor allows access rights to be assigned for specific key containers. A `keySpec` or `providerType` value of –1 represents all key specifications or provider types. A `keyStore`, `providerName`, or `keyContainerName` of \"*\" represents all key stores, providers, or key containers. A `providerName` or `keyContainerName` that is `null` represents all providers or key containers.","nodes":[{"pos":[0,390],"content":"This constructor allows access rights to be assigned for specific key containers. A `keySpec` or `providerType` value of –1 represents all key specifications or provider types. A `keyStore`, `providerName`, or `keyContainerName` of \"*\" represents all key stores, providers, or key containers. A `providerName` or `keyContainerName` that is `null` represents all providers or key containers.","nodes":[{"content":"This constructor allows access rights to be assigned for specific key containers.","pos":[0,81]},{"content":"A <ph id=\"ph1\">`keySpec`</ph> or <ph id=\"ph2\">`providerType`</ph> value of –1 represents all key specifications or provider types.","pos":[82,176],"source":" A `keySpec` or `providerType` value of –1 represents all key specifications or provider types."},{"content":"A <ph id=\"ph1\">`keyStore`</ph>, <ph id=\"ph2\">`providerName`</ph>, or <ph id=\"ph3\">`keyContainerName`</ph> of \"*\" represents all key stores, providers, or key containers.","pos":[177,292],"source":" A `keyStore`, `providerName`, or `keyContainerName` of \"*\" represents all key stores, providers, or key containers."},{"content":"A <ph id=\"ph1\">`providerName`</ph> or <ph id=\"ph2\">`keyContainerName`</ph> that is <ph id=\"ph3\">`null`</ph> represents all providers or key containers.","pos":[293,390],"source":" A `providerName` or `keyContainerName` that is `null` represents all providers or key containers."}]}],"pos":[11940,12331],"yaml":true,"extradata":"MT"},{"content":"The name of the key store.","nodes":[{"pos":[0,26],"content":"The name of the key store.","nodes":[{"content":"The name of the key store.","pos":[0,26]}]}],"pos":[13523,13550],"yaml":true},{"content":"The name of the provider.","nodes":[{"pos":[0,25],"content":"The name of the provider.","nodes":[{"content":"The name of the provider.","pos":[0,25]}]}],"pos":[13618,13644],"yaml":true},{"content":"The type code for the provider. See the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\"></xref> property for values.","nodes":[{"pos":[0,156],"content":"The type code for the provider. See the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\"></xref> property for values.","nodes":[{"content":"The type code for the provider.","pos":[0,31]},{"content":"See the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\"&gt;&lt;/xref&gt;</ph> property for values.","pos":[32,156],"source":" See the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\"></xref> property for values."}]}],"pos":[13711,13868],"yaml":true},{"content":"The name of the key container.","nodes":[{"pos":[0,30],"content":"The name of the key container.","nodes":[{"content":"The name of the key container.","pos":[0,30]}]}],"pos":[13940,13971],"yaml":true},{"content":"The key specification. See the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\"></xref> property for values.","nodes":[{"pos":[0,142],"content":"The key specification. See the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\"></xref> property for values.","nodes":[{"content":"The key specification.","pos":[0,22]},{"content":"See the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\"&gt;&lt;/xref&gt;</ph> property for values.","pos":[23,142],"source":" See the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\"></xref> property for values."}]}],"pos":[14033,14176],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.","nodes":[{"pos":[0,113],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."}],"pos":[14279,14393],"yaml":true},{"content":"The resulting entry would have unrestricted access.","nodes":[{"pos":[0,51],"content":"The resulting entry would have unrestricted access.","nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"pos":[14582,14634],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object is equal to the current instance.","nodes":[{"pos":[0,156],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> object is equal to the current instance.","source":"Determines whether the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object is equal to the current instance."}],"pos":[15934,16091],"yaml":true},{"content":"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A> method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal.","nodes":[{"pos":[0,233],"content":"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A> method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A&gt;</ph> method compares the properties of the two <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> objects to determine if they are equal.","pos":[0,233],"source":"The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A> method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal."}]}],"pos":[16102,16336],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object to compare with the currentinstance.","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> object to compare with the currentinstance.","source":"The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object to compare with the currentinstance."}],"pos":[16472,16603],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> is equal to the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,241],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> is equal to the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object; otherwise, `false`."}],"pos":[16661,16905],"yaml":true},{"content":"Gets or sets the key container permissions.","nodes":[{"pos":[0,43],"content":"Gets or sets the key container permissions.","nodes":[{"content":"Gets or sets the key container permissions.","pos":[0,43]}]}],"pos":[18231,18275],"yaml":true},{"content":"> [!CAUTION]\n>  Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.  \n  \n The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","nodes":[{"pos":[2,136],"content":"[!CAUTION]\n Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.","leadings":["","> "],"nodes":[{"content":"Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.","pos":[12,132]}]},{"pos":[143,767],"content":"The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","nodes":[{"content":"The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","pos":[0,624],"nodes":[{"content":"The most powerful of the flags are <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Create&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Import&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Export&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt&gt;</ph>, and <ph id=\"ph7\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags&gt;</ph>.","pos":[0,536],"source":"The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>."},{"content":"For specific threats posed by the use of these flags, see individual flag descriptions.","pos":[537,624]}]}]}],"pos":[18286,19059],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"></xref>.","nodes":[{"pos":[0,214],"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"></xref>.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,113],"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"&gt;&lt;/xref&gt;</ph>.","pos":[114,214],"source":" The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"></xref>."}]}],"pos":[19264,19479],"yaml":true},{"content":"Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"pos":[0,130],"content":"Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"content":"Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,130]}]}],"pos":[20844,20975],"yaml":true},{"content":"Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"pos":[0,184],"content":"Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"content":"Serves as a hash function for the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph>, suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,184],"source":"Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table."}]}],"pos":[20986,21171],"yaml":true,"extradata":"MT"},{"content":"A hash code for the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object.","nodes":[{"pos":[0,118],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"&gt;&lt;/xref&gt;</ph> object.","source":"A hash code for the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object."}],"pos":[21305,21424],"yaml":true},{"content":"Gets or sets the key container name.","nodes":[{"pos":[0,36],"content":"Gets or sets the key container name.","nodes":[{"content":"Gets or sets the key container name.","pos":[0,36]}]}],"pos":[22821,22858],"yaml":true},{"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","nodes":[{"pos":[0,120],"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","nodes":[{"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","pos":[0,120]}]}],"pos":[22869,22990],"yaml":true,"extradata":"MT"},{"content":"The name of the key container.","nodes":[{"pos":[0,30],"content":"The name of the key container.","nodes":[{"content":"The name of the key container.","pos":[0,30]}]}],"pos":[23115,23146],"yaml":true},{"content":"The resulting entry would have unrestricted access.","nodes":[{"pos":[0,51],"content":"The resulting entry would have unrestricted access.","nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"pos":[23346,23398],"yaml":true},{"content":"Gets or sets the key specification.","nodes":[{"pos":[0,35],"content":"Gets or sets the key specification.","nodes":[{"content":"Gets or sets the key specification.","pos":[0,35]}]}],"pos":[24637,24673],"yaml":true},{"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2). The default value is –1, representing all possible values.","nodes":[{"pos":[0,134],"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2). The default value is –1, representing all possible values.","nodes":[{"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2). The default value is –1, representing all possible values.","pos":[0,134],"nodes":[{"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","pos":[0,75]},{"content":"The default value is –1, representing all possible values.","pos":[76,134]}]}]}],"pos":[24684,24819],"yaml":true,"extradata":"MT"},{"content":"One of the AT_ values defined in the Wincrypt.h header file.","nodes":[{"pos":[0,60],"content":"One of the AT_ values defined in the Wincrypt.h header file.","nodes":[{"content":"One of the AT_ values defined in the Wincrypt.h header file.","pos":[0,60]}]}],"pos":[24931,24992],"yaml":true},{"content":"The resulting entry would have unrestricted access.","nodes":[{"pos":[0,51],"content":"The resulting entry would have unrestricted access.","nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"pos":[25183,25235],"yaml":true},{"content":"Gets or sets the name of the key store.","nodes":[{"pos":[0,39],"content":"Gets or sets the name of the key store.","nodes":[{"content":"Gets or sets the name of the key store.","pos":[0,39]}]}],"pos":[26480,26520],"yaml":true},{"content":"Valid values are \"User\", \"Machine\", or \"*\". If `null` is specified, the value is set to \"\\*\".","nodes":[{"pos":[0,93],"content":"Valid values are \"User\", \"Machine\", or \"*\". If `null` is specified, the value is set to \"\\*\".","nodes":[{"content":"Valid values are \"User\", \"Machine\", or \"*\".","pos":[0,43]},{"content":"If <ph id=\"ph1\">`null`</ph> is specified, the value is set to \"<ph id=\"ph2\">\\*</ph>\".","pos":[44,93],"source":" If `null` is specified, the value is set to \"\\*\"."}]}],"pos":[26531,26625],"yaml":true,"extradata":"MT"},{"content":"The name of the key store.","nodes":[{"pos":[0,26],"content":"The name of the key store.","nodes":[{"content":"The name of the key store.","pos":[0,26]}]}],"pos":[26742,26769],"yaml":true},{"content":"The resulting entry would have unrestricted access.","nodes":[{"pos":[0,51],"content":"The resulting entry would have unrestricted access.","nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"pos":[26961,27013],"yaml":true},{"content":"Gets or sets the provider name.","nodes":[{"pos":[0,31],"content":"Gets or sets the provider name.","nodes":[{"content":"Gets or sets the provider name.","pos":[0,31]}]}],"pos":[28282,28314],"yaml":true},{"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.","nodes":[{"pos":[0,151],"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.","nodes":[{"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\".","pos":[0,77]},{"content":"If <ph id=\"ph1\">`null`</ph> is specified, the enhanced cryptographic provider name is used.","pos":[78,151],"source":" If `null` is specified, the enhanced cryptographic provider name is used."}]}],"pos":[28325,28477],"yaml":true,"extradata":"MT"},{"content":"The name of the provider.","nodes":[{"pos":[0,25],"content":"The name of the provider.","nodes":[{"content":"The name of the provider.","pos":[0,25]}]}],"pos":[28598,28624],"yaml":true},{"content":"The resulting entry would have unrestricted access.","nodes":[{"pos":[0,51],"content":"The resulting entry would have unrestricted access.","nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"pos":[28820,28872],"yaml":true},{"content":"Gets or sets the provider type.","nodes":[{"pos":[0,31],"content":"Gets or sets the provider type.","nodes":[{"content":"Gets or sets the provider type.","pos":[0,31]}]}],"pos":[30141,30173],"yaml":true},{"content":"The default value is –1, representing all possible values.  \n  \n The Wincrypt.h header file defines the following values:  \n  \n-   \\#define PROV_RSA_FULL 1  \n  \n-   \\#define PROV_RSA_SIG 2  \n  \n-   \\#define PROV_DSS 3  \n  \n-   \\#define PROV_FORTEZZA 4  \n  \n-   \\#define PROV_MS_EXCHANGE 5  \n  \n-   \\#define PROV_SSL 6  \n  \n-   \\#define PROV_RSA_SCHANNEL 12  \n  \n-   \\#define PROV_DSS_DH 13  \n  \n-   \\#define PROV_EC_ECDSA_SIG 14  \n  \n-   \\#define PROV_EC_ECNRA_SIG 15  \n  \n-   \\#define PROV_EC_ECDSA_FULL 16  \n  \n-   \\#define PROV_EC_ECNRA_FULL 17  \n  \n-   \\#define PROV_DH_SCHANNEL 18  \n  \n-   \\#define PROV_SPYRUS_LYNKS 20  \n  \n-   \\#define PROV_RNG 21  \n  \n-   \\#define PROV_INTEL_SEC 22  \n  \n-   \\#define PROV_REPLACE_OWF 23  \n  \n-   \\#define PROV_RSA_AES 24","nodes":[{"pos":[0,58],"content":"The default value is –1, representing all possible values.","nodes":[{"content":"The default value is –1, representing all possible values.","pos":[0,58]}]},{"pos":[65,121],"content":"The Wincrypt.h header file defines the following values:","nodes":[{"content":"The Wincrypt.h header file defines the following values:","pos":[0,56]}]},{"pos":[131,155],"content":"\\#define PROV_RSA_FULL 1","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RSA_FULL 1","pos":[0,24],"source":"\\#define PROV_RSA_FULL 1"}]},{"pos":[165,188],"content":"\\#define PROV_RSA_SIG 2","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RSA_SIG 2","pos":[0,23],"source":"\\#define PROV_RSA_SIG 2"}]},{"pos":[198,217],"content":"\\#define PROV_DSS 3","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_DSS 3","pos":[0,19],"source":"\\#define PROV_DSS 3"}]},{"pos":[227,251],"content":"\\#define PROV_FORTEZZA 4","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_FORTEZZA 4","pos":[0,24],"source":"\\#define PROV_FORTEZZA 4"}]},{"pos":[261,288],"content":"\\#define PROV_MS_EXCHANGE 5","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_MS_EXCHANGE 5","pos":[0,27],"source":"\\#define PROV_MS_EXCHANGE 5"}]},{"pos":[298,317],"content":"\\#define PROV_SSL 6","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_SSL 6","pos":[0,19],"source":"\\#define PROV_SSL 6"}]},{"pos":[327,356],"content":"\\#define PROV_RSA_SCHANNEL 12","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RSA_SCHANNEL 12","pos":[0,29],"source":"\\#define PROV_RSA_SCHANNEL 12"}]},{"pos":[366,389],"content":"\\#define PROV_DSS_DH 13","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_DSS_DH 13","pos":[0,23],"source":"\\#define PROV_DSS_DH 13"}]},{"pos":[399,428],"content":"\\#define PROV_EC_ECDSA_SIG 14","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_EC_ECDSA_SIG 14","pos":[0,29],"source":"\\#define PROV_EC_ECDSA_SIG 14"}]},{"pos":[438,467],"content":"\\#define PROV_EC_ECNRA_SIG 15","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_EC_ECNRA_SIG 15","pos":[0,29],"source":"\\#define PROV_EC_ECNRA_SIG 15"}]},{"pos":[477,507],"content":"\\#define PROV_EC_ECDSA_FULL 16","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_EC_ECDSA_FULL 16","pos":[0,30],"source":"\\#define PROV_EC_ECDSA_FULL 16"}]},{"pos":[517,547],"content":"\\#define PROV_EC_ECNRA_FULL 17","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_EC_ECNRA_FULL 17","pos":[0,30],"source":"\\#define PROV_EC_ECNRA_FULL 17"}]},{"pos":[557,585],"content":"\\#define PROV_DH_SCHANNEL 18","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_DH_SCHANNEL 18","pos":[0,28],"source":"\\#define PROV_DH_SCHANNEL 18"}]},{"pos":[595,624],"content":"\\#define PROV_SPYRUS_LYNKS 20","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_SPYRUS_LYNKS 20","pos":[0,29],"source":"\\#define PROV_SPYRUS_LYNKS 20"}]},{"pos":[634,654],"content":"\\#define PROV_RNG 21","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RNG 21","pos":[0,20],"source":"\\#define PROV_RNG 21"}]},{"pos":[664,690],"content":"\\#define PROV_INTEL_SEC 22","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_INTEL_SEC 22","pos":[0,26],"source":"\\#define PROV_INTEL_SEC 22"}]},{"pos":[700,728],"content":"\\#define PROV_REPLACE_OWF 23","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_REPLACE_OWF 23","pos":[0,28],"source":"\\#define PROV_REPLACE_OWF 23"}]},{"pos":[738,762],"content":"\\#define PROV_RSA_AES 24","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RSA_AES 24","pos":[0,24],"source":"\\#define PROV_RSA_AES 24"}]}],"pos":[30184,31005],"yaml":true,"extradata":"MT"},{"content":"One of the PROV_ values defined in the Wincrypt.h header file.","nodes":[{"pos":[0,62],"content":"One of the PROV_ values defined in the Wincrypt.h header file.","nodes":[{"content":"One of the PROV_ values defined in the Wincrypt.h header file.","pos":[0,62]}]}],"pos":[31122,31185],"yaml":true},{"content":"The resulting entry would have unrestricted access.","nodes":[{"pos":[0,51],"content":"The resulting entry would have unrestricted access.","nodes":[{"content":"The resulting entry would have unrestricted access.","pos":[0,51]}]}],"pos":[31381,31433],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  commentId: T:System.Security.Permissions.KeyContainerPermissionAccessEntry\n  id: KeyContainerPermissionAccessEntry\n  children:\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry\n  nameWithType: KeyContainerPermissionAccessEntry\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Specifies access rights for specific key containers. This class cannot be inherited.\n  remarks: This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeyContainerPermissionAccessEntry\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified cryptographic service provider (CSP) parameters and access permissions.\n  remarks: This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object.\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.Security.Cryptography.CspParameters%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.  \\n  \\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#3)]\\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#3)]\\n [!code-vb[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#3)]\"\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (System.Security.Cryptography.CspParameters parameters, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.CspParameters\n      description: A <xref href=\"System.Security.Cryptography.CspParameters\"></xref> object that contains the cryptographic service provider (CSP) parameters.\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class, using the specified key container name and access permissions.\n  remarks: This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk (\"*\") to represent all the key containers.\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.String%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.  \\n  \\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#2)]\\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#2)]\\n [!code-vb[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#2)]\"\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (string keyContainerName, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: keyContainerName\n      type: System.String\n      description: The name of the key container.\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> class with the specified property values.\n  remarks: This constructor allows access rights to be assigned for specific key containers. A `keySpec` or `providerType` value of –1 represents all key specifications or provider types. A `keyStore`, `providerName`, or `keyContainerName` of \"*\" represents all key stores, providers, or key containers. A `providerName` or `keyContainerName` that is `null` represents all providers or key containers.\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.  \\n  \\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#4)]\\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#4)]\\n [!code-vb[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#4)]\"\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (string keyStore, string providerName, int providerType, string keyContainerName, int keySpec, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: keyStore\n      type: System.String\n      description: The name of the key store.\n    - id: providerName\n      type: System.String\n      description: The name of the provider.\n    - id: providerType\n      type: System.Int32\n      description: The type code for the provider. See the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\"></xref> property for values.\n    - id: keyContainerName\n      type: System.String\n      description: The name of the key container.\n    - id: keySpec\n      type: System.Int32\n      description: The key specification. See the <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\"></xref> property for values.\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)\n  fullName: KeyContainerPermissionAccessEntry.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Determines whether the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object is equal to the current instance.\n  remarks: The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A> method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object to compare with the currentinstance.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> is equal to the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object; otherwise, `false`.'\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  id: Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: KeyContainerPermissionAccessEntry.Flags\n  fullName: KeyContainerPermissionAccessEntry.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key container permissions.\n  remarks: \"> [!CAUTION]\\n>  Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.  \\n  \\n The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.\"\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"></xref>.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()\n  fullName: KeyContainerPermissionAccessEntry.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.\n  remarks: Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Security.Permissions.KeyContainerPermissionAccessEntry\"></xref> object.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  id: KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerName\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key container name.\n  remarks: Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.\n  syntax:\n    content: public string KeyContainerName { get; set; }\n    return:\n      type: System.String\n      description: The name of the key container.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  id: KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAccessEntry.KeySpec\n  fullName: KeyContainerPermissionAccessEntry.KeySpec\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key specification.\n  remarks: Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2). The default value is –1, representing all possible values.\n  syntax:\n    content: public int KeySpec { get; set; }\n    return:\n      type: System.Int32\n      description: One of the AT_ values defined in the Wincrypt.h header file.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  id: KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAccessEntry.KeyStore\n  fullName: KeyContainerPermissionAccessEntry.KeyStore\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the name of the key store.\n  remarks: Valid values are \"User\", \"Machine\", or \"*\". If `null` is specified, the value is set to \"\\*\".\n  syntax:\n    content: public string KeyStore { get; set; }\n    return:\n      type: System.String\n      description: The name of the key store.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  id: ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderName\n  fullName: KeyContainerPermissionAccessEntry.ProviderName\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the provider name.\n  remarks: An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.\n  syntax:\n    content: public string ProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of the provider.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  id: ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderType\n  fullName: KeyContainerPermissionAccessEntry.ProviderType\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the provider type.\n  remarks: \"The default value is –1, representing all possible values.  \\n  \\n The Wincrypt.h header file defines the following values:  \\n  \\n-   \\\\#define PROV_RSA_FULL 1  \\n  \\n-   \\\\#define PROV_RSA_SIG 2  \\n  \\n-   \\\\#define PROV_DSS 3  \\n  \\n-   \\\\#define PROV_FORTEZZA 4  \\n  \\n-   \\\\#define PROV_MS_EXCHANGE 5  \\n  \\n-   \\\\#define PROV_SSL 6  \\n  \\n-   \\\\#define PROV_RSA_SCHANNEL 12  \\n  \\n-   \\\\#define PROV_DSS_DH 13  \\n  \\n-   \\\\#define PROV_EC_ECDSA_SIG 14  \\n  \\n-   \\\\#define PROV_EC_ECNRA_SIG 15  \\n  \\n-   \\\\#define PROV_EC_ECDSA_FULL 16  \\n  \\n-   \\\\#define PROV_EC_ECNRA_FULL 17  \\n  \\n-   \\\\#define PROV_DH_SCHANNEL 18  \\n  \\n-   \\\\#define PROV_SPYRUS_LYNKS 20  \\n  \\n-   \\\\#define PROV_RNG 21  \\n  \\n-   \\\\#define PROV_INTEL_SEC 22  \\n  \\n-   \\\\#define PROV_REPLACE_OWF 23  \\n  \\n-   \\\\#define PROV_RSA_AES 24\"\n  syntax:\n    content: public int ProviderType { get; set; }\n    return:\n      type: System.Int32\n      description: One of the PROV_ values defined in the Wincrypt.h header file.\n  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The resulting entry would have unrestricted access.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)\n  fullName: KeyContainerPermissionAccessEntry.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAccessEntry.Flags\n  fullName: KeyContainerPermissionAccessEntry.Flags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()\n  fullName: KeyContainerPermissionAccessEntry.GetHashCode()\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerName\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAccessEntry.KeySpec\n  fullName: KeyContainerPermissionAccessEntry.KeySpec\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAccessEntry.KeyStore\n  fullName: KeyContainerPermissionAccessEntry.KeyStore\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderName\n  fullName: KeyContainerPermissionAccessEntry.ProviderName\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderType\n  fullName: KeyContainerPermissionAccessEntry.ProviderType\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Equals\n  nameWithType: KeyContainerPermissionAccessEntry.Equals\n  fullName: KeyContainerPermissionAccessEntry.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAccessEntry.Flags\n  fullName: KeyContainerPermissionAccessEntry.Flags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: GetHashCode\n  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode\n  fullName: KeyContainerPermissionAccessEntry.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName\n  fullName: KeyContainerPermissionAccessEntry.KeyContainerName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAccessEntry.KeySpec\n  fullName: KeyContainerPermissionAccessEntry.KeySpec\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAccessEntry.KeyStore\n  fullName: KeyContainerPermissionAccessEntry.KeyStore\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderName\n  fullName: KeyContainerPermissionAccessEntry.ProviderName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderType\n  fullName: KeyContainerPermissionAccessEntry.ProviderType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}