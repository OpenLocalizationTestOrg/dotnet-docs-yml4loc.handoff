{"nodes":[{"content":"Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.","nodes":[{"pos":[0,241],"content":"Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.","nodes":[{"content":"Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.","pos":[0,241],"nodes":[{"content":"Defines the basic interface that all channel objects must implement.","pos":[0,68]},{"content":"It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.","pos":[69,241]}]}]}],"pos":[439,681],"yaml":true},{"content":"Channels must satisfy the contract of a state machine as defined by the <xref:System.ServiceModel.ICommunicationObject> interface.  \n  \n The <xref:System.ServiceModel.Channels.IChannel> interface adds the  \n  \n <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> method to the <xref:System.ServiceModel.ICommunicationObject> interface. This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live. The term \"property\" in the method name refers to a piece of information that belongs to one of the channels in the stack. The CLR type for that property is determined by `T`. This method of retrieval is also used on channel factories and channel listeners.  \n  \n `IChannel` is inherited by each of the channel interfaces associated with the basic message-exchange patterns:  \n  \n-   <xref:System.ServiceModel.Channels.IInputChannel> for receiving messages.  \n  \n-   <xref:System.ServiceModel.Channels.IOutputChannel> for sending messages.  \n  \n-   <xref:System.ServiceModel.Channels.IRequestChannel> for sending a request.  \n  \n-   <xref:System.ServiceModel.Channels.IReplyChannel> for sending a reply.  \n  \n-   <xref:System.ServiceModel.Channels.IDuplexChannel> for bi-directional messaging.","nodes":[{"pos":[0,130],"content":"Channels must satisfy the contract of a state machine as defined by the <xref:System.ServiceModel.ICommunicationObject> interface.","nodes":[{"content":"Channels must satisfy the contract of a state machine as defined by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface.","pos":[0,130],"source":"Channels must satisfy the contract of a state machine as defined by the <xref:System.ServiceModel.ICommunicationObject> interface."}]},{"pos":[137,204],"content":"The <xref:System.ServiceModel.Channels.IChannel> interface adds the","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph> interface adds the","pos":[0,67],"source":"The <xref:System.ServiceModel.Channels.IChannel> interface adds the"}]},{"pos":[211,738],"content":"<xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> method to the <xref:System.ServiceModel.ICommunicationObject> interface. This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live. The term \"property\" in the method name refers to a piece of information that belongs to one of the channels in the stack. The CLR type for that property is determined by `T`. This method of retrieval is also used on channel factories and channel listeners.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A&gt;</ph> method to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface.","pos":[0,132],"source":"<xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> method to the <xref:System.ServiceModel.ICommunicationObject> interface."},{"content":"This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live.","pos":[133,270]},{"content":"The term \"property\" in the method name refers to a piece of information that belongs to one of the channels in the stack.","pos":[271,392]},{"content":"The CLR type for that property is determined by <ph id=\"ph1\">`T`</ph>.","pos":[393,445],"source":" The CLR type for that property is determined by `T`."},{"content":"This method of retrieval is also used on channel factories and channel listeners.","pos":[446,527]}]},{"pos":[745,855],"content":"<ph id=\"ph1\">`IChannel`</ph> is inherited by each of the channel interfaces associated with the basic message-exchange patterns:","source":"`IChannel` is inherited by each of the channel interfaces associated with the basic message-exchange patterns:"},{"pos":[865,938],"content":"<xref:System.ServiceModel.Channels.IInputChannel> for receiving messages.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for receiving messages.","pos":[0,73],"source":"<xref:System.ServiceModel.Channels.IInputChannel> for receiving messages."}]},{"pos":[948,1020],"content":"<xref:System.ServiceModel.Channels.IOutputChannel> for sending messages.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> for sending messages.","pos":[0,72],"source":"<xref:System.ServiceModel.Channels.IOutputChannel> for sending messages."}]},{"pos":[1030,1104],"content":"<xref:System.ServiceModel.Channels.IRequestChannel> for sending a request.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> for sending a request.","pos":[0,74],"source":"<xref:System.ServiceModel.Channels.IRequestChannel> for sending a request."}]},{"pos":[1114,1184],"content":"<xref:System.ServiceModel.Channels.IReplyChannel> for sending a reply.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> for sending a reply.","pos":[0,70],"source":"<xref:System.ServiceModel.Channels.IReplyChannel> for sending a reply."}]},{"pos":[1194,1274],"content":"<xref:System.ServiceModel.Channels.IDuplexChannel> for bi-directional messaging.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IDuplexChannel&gt;</ph> for bi-directional messaging.","pos":[0,80],"source":"<xref:System.ServiceModel.Channels.IDuplexChannel> for bi-directional messaging."}]}],"pos":[692,1987],"yaml":true,"extradata":"MT"},{"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"pos":[0,94],"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","pos":[0,94]}]}],"pos":[3567,3662],"yaml":true},{"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.","nodes":[{"pos":[0,402],"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.","nodes":[{"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.","pos":[0,145]},{"content":"If a layer supports returning the requested object, it returns it.","pos":[146,212]},{"content":"If not, it delegates the call down to the next layer in the stack.","pos":[213,279]},{"content":"If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id=\"ph1\">`null`</ph>.","pos":[280,402],"source":" If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`."}]}],"pos":[3673,4076],"yaml":true,"extradata":"MT"},{"content":"The typed object for which the method is querying.","nodes":[{"pos":[0,50],"content":"The typed object for which the method is querying.","nodes":[{"content":"The typed object for which the method is querying.","pos":[0,50]}]}],"pos":[4550,4601],"yaml":true},{"content":"The typed object <code>T</code> requested if it is present or `null` if it is not.","nodes":[{"pos":[0,82],"content":"The typed object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> requested if it is present or <ph id=\"ph2\">`null`</ph> if it is not.","source":"The typed object <code>T</code> requested if it is present or `null` if it is not."}],"pos":[4646,4729],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.IChannel\n  commentId: T:System.ServiceModel.Channels.IChannel\n  id: IChannel\n  children:\n  - System.ServiceModel.Channels.IChannel.GetProperty``1\n  langs:\n  - csharp\n  name: IChannel\n  nameWithType: IChannel\n  fullName: System.ServiceModel.Channels.IChannel\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.\n  remarks: \"Channels must satisfy the contract of a state machine as defined by the <xref:System.ServiceModel.ICommunicationObject> interface.  \\n  \\n The <xref:System.ServiceModel.Channels.IChannel> interface adds the  \\n  \\n <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> method to the <xref:System.ServiceModel.ICommunicationObject> interface. This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live. The term \\\"property\\\" in the method name refers to a piece of information that belongs to one of the channels in the stack. The CLR type for that property is determined by `T`. This method of retrieval is also used on channel factories and channel listeners.  \\n  \\n `IChannel` is inherited by each of the channel interfaces associated with the basic message-exchange patterns:  \\n  \\n-   <xref:System.ServiceModel.Channels.IInputChannel> for receiving messages.  \\n  \\n-   <xref:System.ServiceModel.Channels.IOutputChannel> for sending messages.  \\n  \\n-   <xref:System.ServiceModel.Channels.IRequestChannel> for sending a request.  \\n  \\n-   <xref:System.ServiceModel.Channels.IReplyChannel> for sending a reply.  \\n  \\n-   <xref:System.ServiceModel.Channels.IDuplexChannel> for bi-directional messaging.\"\n  syntax:\n    content: 'public interface IChannel : System.ServiceModel.ICommunicationObject'\n  derivedClasses:\n  - System.ServiceModel.IContextChannel\n  - System.ServiceModel.Channels.ChannelBase\n  - System.ServiceModel.Channels.IInputChannel\n  - System.ServiceModel.Channels.IOutputChannel\n  - System.ServiceModel.Channels.IReplyChannel\n  - System.ServiceModel.Channels.IRequestChannel\n  - System.ServiceModel.Security.WSTrustChannel\n  implements:\n  - System.ServiceModel.ICommunicationObject\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannel.GetProperty``1\n  commentId: M:System.ServiceModel.Channels.IChannel.GetProperty``1\n  id: GetProperty``1\n  parent: System.ServiceModel.Channels.IChannel\n  langs:\n  - csharp\n  name: GetProperty<T>()\n  nameWithType: IChannel.GetProperty<T>()\n  fullName: IChannel.GetProperty<T>()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a typed object requested, if present, from the appropriate layer in the channel stack.\n  remarks: Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.\n  example:\n  - \"The following sample shows how this property can be implemented by a channel that delegates the call down the stack using an`InnerChannel` property that retrieves the inner channel for this channel.  \\n  \\n [!code-csharp[S_UEIChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueichannel/cs/generatedclient.cs#0)]\"\n  syntax:\n    content: 'public T GetProperty<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The typed object for which the method is querying.\n    return:\n      type: T\n      description: The typed object <code>T</code> requested if it is present or `null` if it is not.\n  overload: System.ServiceModel.Channels.IChannel.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.IChannel.GetProperty``1\n  parent: System.ServiceModel.Channels.IChannel\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: IChannel.GetProperty<T>()\n  fullName: IChannel.GetProperty<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.IChannel.GetProperty``1*\n  parent: System.ServiceModel.Channels.IChannel\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: IChannel.GetProperty<T>\n  fullName: IChannel.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannel.xml\n- uid: System.ServiceModel.ICommunicationObject\n  parent: System.ServiceModel\n  isExternal: false\n  name: ICommunicationObject\n  nameWithType: ICommunicationObject\n  fullName: System.ServiceModel.ICommunicationObject\n"}