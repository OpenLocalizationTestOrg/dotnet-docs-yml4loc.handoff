{"nodes":[{"content":"Provides supplemental metadata to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,96],"content":"Provides supplemental metadata to the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"Provides supplemental metadata to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}],"pos":[1786,1883],"yaml":true},{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events. There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.  \n  \n There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:  \n  \n-   At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.  \n  \n-   At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called. These overloaded methods require either the target object or its class type.  \n  \n The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction. This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.  \n  \n Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.  \n  \n This class cannot be inherited.","nodes":[{"pos":[0,361],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events. There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events. There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.","pos":[0,361],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.","pos":[0,228],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events."},{"content":"There can be multiple type description provider classes that offer metadata to a single <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[229,361],"source":" There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>."}]}]},{"pos":[368,506],"content":"There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:","nodes":[{"content":"There are two ways to associate a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> with a <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:","pos":[0,138],"source":"There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:"}]},{"pos":[516,652],"content":"At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.","nodes":[{"content":"At design time, when the target class can be assigned the appropriate <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> tag.","pos":[0,136],"source":"At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag."}]},{"pos":[662,906],"content":"At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called. These overloaded methods require either the target object or its class type.","nodes":[{"content":"At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called. These overloaded methods require either the target object or its class type.","pos":[0,244],"nodes":[{"content":"At run time, when one of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class can be called.","pos":[0,167],"source":"At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called."},{"content":"These overloaded methods require either the target object or its class type.","pos":[168,244]}]}]},{"pos":[913,1169],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction. This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction. This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.","pos":[0,256],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class relies on a parent object of the same type, supplied during construction.","pos":[0,136],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction."},{"content":"This allows classes that derive from <ph id=\"ph1\">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> to selectively override methods.","pos":[137,256],"source":" This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods."}]}]},{"pos":[1176,1334],"content":"Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.","nodes":[{"content":"Instances of <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> are only built upon demand, minimizing the impact of custom type information on performance.","pos":[0,158],"source":"Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance."}]},{"pos":[1341,1372],"content":"This class cannot be inherited.","nodes":[{"content":"This class cannot be inherited.","pos":[0,31]}]}],"pos":[1894,3281],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class."}],"pos":[5130,5238],"yaml":true},{"content":"This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.","nodes":[{"pos":[0,214],"content":"This constructor is equivalent to calling the other <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> constructor with a parameter value that is <ph id=\"ph2\">`null`</ph>.","source":"This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`."}],"pos":[5249,5464],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class using a parent type description provider.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptionProvider\"&gt;&lt;/xref&gt;</ph> class using a parent type description provider.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class using a parent type description provider."}],"pos":[7166,7315],"yaml":true},{"content":"If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values. Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.  \n  \n The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.  \n  \n|Method|Default return value|  \n|------------|--------------------------|  \n|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  \n|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.|  \n|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|  \n|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|  \n|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|The `objectType` first parameter.|","nodes":[{"pos":[0,247],"content":"If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values. Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.","nodes":[{"content":"If the <ph id=\"ph1\">`parent`</ph> parameter is <ph id=\"ph2\">`null`</ph>, all <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will return default values.","pos":[0,129],"source":"If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values."},{"content":"Otherwise, all <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will delegate to the methods of <ph id=\"ph2\">`parent`</ph>.","pos":[130,247],"source":" Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`."}]},{"pos":[254,371],"content":"The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.","nodes":[{"content":"The following table shows the default return values for <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods.","pos":[0,117],"source":"The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods."}]},{"pos":[378,384],"content":"Method","nodes":[{"content":"Method","pos":[0,6]}]},{"pos":[385,405],"content":"Default return value","nodes":[{"content":"Default return value","pos":[0,20]}]},{"pos":[454,518],"content":"<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>","nodes":[]},{"pos":[530,600],"content":"<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>","nodes":[]},{"pos":[601,695],"content":"A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.","nodes":[{"content":"A newly created object through a call to the <ph id=\"ph1\">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method.","pos":[0,94],"source":"A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method."}]},{"pos":[700,781],"content":"<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>","nodes":[]},{"pos":[782,862],"content":"A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.","nodes":[{"content":"A default instance of a <ph id=\"ph1\">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.","pos":[0,80],"source":"A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class."}]},{"pos":[867,940],"content":"<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>","nodes":[]},{"pos":[941,1021],"content":"A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.","nodes":[{"content":"A default instance of a <ph id=\"ph1\">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.","pos":[0,80],"source":"A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class."}]},{"pos":[1026,1099],"content":"<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>","nodes":[]},{"pos":[1100,1133],"content":"The <ph id=\"ph1\">`objectType`</ph> first parameter.","source":"The `objectType` first parameter."}],"pos":[7326,8473],"yaml":true,"extradata":"MT"},{"content":"The parent type description provider.","nodes":[{"pos":[0,37],"content":"The parent type description provider.","nodes":[{"content":"The parent type description provider.","pos":[0,37]}]}],"pos":[8696,8734],"yaml":true},{"content":"Creates an object that can substitute for another data type.","nodes":[{"pos":[0,60],"content":"Creates an object that can substitute for another data type.","nodes":[{"content":"Creates an object that can substitute for another data type.","pos":[0,60]}]}],"pos":[10460,10521],"yaml":true},{"content":"The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> method of the <xref:System.ComponentModel.TypeDescriptor> class. If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.  \n  \n The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> method if `provider` is `null`. If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.","nodes":[{"pos":[0,393],"content":"The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> method of the <xref:System.ComponentModel.TypeDescriptor> class. If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IServiceProvider&gt;</ph> specified by the <ph id=\"ph2\">`provider`</ph> parameter is passed in by the <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.","pos":[0,244],"source":"The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> method of the <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"If <ph id=\"ph1\">`provider`</ph> is not <ph id=\"ph2\">`null`</ph>, the service provider can be used by the type description provider to obtain additional context about the creation call.","pos":[245,393],"source":" If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call."}]},{"pos":[400,791],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> method if `provider` is `null`. If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method is <ph id=\"ph2\">`virtual`</ph> and, by default, returns the result of the <ph id=\"ph3\">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=fullName&gt;</ph> method if <ph id=\"ph4\">`provider`</ph> is <ph id=\"ph5\">`null`</ph>.","pos":[0,236],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> method if `provider` is `null`."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, this method will invoke the <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method of the parent provider.","pos":[237,391],"source":" If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider."}]}],"pos":[10532,11328],"yaml":true,"extradata":"MT"},{"content":"An optional service provider.","nodes":[{"pos":[0,29],"content":"An optional service provider.","nodes":[{"content":"An optional service provider.","pos":[0,29]}]}],"pos":[11556,11586],"yaml":true},{"content":"The type of object to create. This parameter is never `null`.","nodes":[{"pos":[0,61],"content":"The type of object to create. This parameter is never `null`.","nodes":[{"content":"The type of object to create.","pos":[0,29]},{"content":"This parameter is never <ph id=\"ph1\">`null`</ph>.","pos":[30,61],"source":" This parameter is never `null`."}]}],"pos":[11650,11712],"yaml":true},{"content":"An optional array of types that represent the parameter types to be passed to the object's constructor. This array can be `null` or of zero length.","nodes":[{"pos":[0,147],"content":"An optional array of types that represent the parameter types to be passed to the object's constructor. This array can be `null` or of zero length.","nodes":[{"content":"An optional array of types that represent the parameter types to be passed to the object's constructor.","pos":[0,103]},{"content":"This array can be <ph id=\"ph1\">`null`</ph> or of zero length.","pos":[104,147],"source":" This array can be `null` or of zero length."}]}],"pos":[11776,11924],"yaml":true},{"content":"An optional array of parameter values to pass to the object's constructor.","nodes":[{"pos":[0,74],"content":"An optional array of parameter values to pass to the object's constructor.","nodes":[{"content":"An optional array of parameter values to pass to the object's constructor.","pos":[0,74]}]}],"pos":[11986,12061],"yaml":true},{"content":"The substitute <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,50],"content":"The substitute <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"The substitute <xref href=\"System.Object\"></xref>."}],"pos":[12118,12169],"yaml":true},{"content":"Gets a per-object cache, accessed as an <xref href=\"System.Collections.IDictionary\"></xref> of key/value pairs.","nodes":[{"pos":[0,111],"content":"Gets a per-object cache, accessed as an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> of key/value pairs.","source":"Gets a per-object cache, accessed as an <xref href=\"System.Collections.IDictionary\"></xref> of key/value pairs."}],"pos":[13610,13722],"yaml":true},{"content":"A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata. Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type. However, some operations use live object instances. These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected. Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object. The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache. The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.  \n  \n The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface. If the object is, it uses the dictionary service to store the object's cache. Otherwise, the object it returns `null`. Other type description providers may provide their own implementation here. For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.","nodes":[{"pos":[0,960],"content":"A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata. Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type. However, some operations use live object instances. These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected. Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object. The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache. The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> may need to perform complex operations on collections of metadata.","pos":[0,112],"source":"A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata."},{"content":"Because types are not unloaded for the life of a domain, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class will automatically cache the results of these operations based on type.","pos":[113,295],"source":" Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type."},{"content":"However, some operations use live object instances.","pos":[296,347]},{"content":"These operations cannot be cached within the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class because caching them would prevent the object from being garbage collected.","pos":[348,518],"source":" These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected."},{"content":"Instead, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class allows for a per-object cache, accessed as an <ph id=\"ph2\">&lt;xref:System.Collections.IDictionary&gt;</ph> of key/value pairs, to exist on an object.","pos":[519,708],"source":" Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method returns an instance of this cache.","pos":[709,819],"source":" The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method will return <ph id=\"ph2\">`null`</ph> if there is no supported cache for an object.","pos":[820,960],"source":" The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object."}]},{"pos":[967,1524],"content":"The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface. If the object is, it uses the dictionary service to store the object's cache. Otherwise, the object it returns `null`. Other type description providers may provide their own implementation here. For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.","nodes":[{"content":"The default <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> used by <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> examines the object to see if it is a sited component that implements the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> interface.","pos":[0,256],"source":"The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface."},{"content":"If the object is, it uses the dictionary service to store the object's cache.","pos":[257,334]},{"content":"Otherwise, the object it returns <ph id=\"ph1\">`null`</ph>.","pos":[335,375],"source":" Otherwise, the object it returns `null`."},{"content":"Other type description providers may provide their own implementation here.","pos":[376,451]},{"content":"For example, dependency objects can just attach a property of type <ph id=\"ph1\">&lt;xref:System.Collections.IDictionary&gt;</ph>.","pos":[452,557],"source":" For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>."}]}],"pos":[13733,15262],"yaml":true,"extradata":"MT"},{"content":"The object for which to get the cache.","nodes":[{"pos":[0,38],"content":"The object for which to get the cache.","nodes":[{"content":"The object for which to get the cache.","pos":[0,38]}]}],"pos":[15439,15478],"yaml":true},{"content":"An <xref href=\"System.Collections.IDictionary\"></xref> if the provided object supports caching; otherwise, `null`.","nodes":[{"pos":[0,114],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> if the provided object supports caching; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"An <xref href=\"System.Collections.IDictionary\"></xref> if the provided object supports caching; otherwise, `null`."}],"pos":[15552,15667],"yaml":true},{"content":"Gets an extended custom type descriptor for the given object.","nodes":[{"pos":[0,61],"content":"Gets an extended custom type descriptor for the given object.","nodes":[{"content":"Gets an extended custom type descriptor for the given object.","pos":[0,61]}]}],"pos":[17204,17266],"yaml":true},{"content":"An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object. For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container. The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties. The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties. The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections. While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.  \n  \n <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.","nodes":[{"pos":[0,1163],"content":"An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object. For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container. The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties. The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties. The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections. While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.","nodes":[{"content":"An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.","pos":[0,173]},{"content":"For example, in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model, objects that implement the <ph id=\"ph2\">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> interface can attach properties to other objects that reside in the same logical container.","pos":[174,430],"source":" For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container."},{"content":"The overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> methods do not return a type descriptor that provides these extra extended properties.","pos":[431,606],"source":" The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method returns the set of these extended properties.","pos":[607,745],"source":" The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will automatically merge the results of these two property collections.","pos":[746,865],"source":" The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections."},{"content":"While the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model supports only extended properties, <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> can be used for extended attributes as well as events, if the type description provider supports it.","pos":[866,1163],"source":" While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it."}]},{"pos":[1170,1544],"content":"<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> is <ph id=\"ph2\">`virtual`</ph> and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.","pos":[0,205],"source":"<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed."},{"content":"If a parent provider was passed, this method will invoke the parent provider's <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method.","pos":[206,374],"source":" If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method."}]}],"pos":[17277,18826],"yaml":true,"extradata":"MT"},{"content":"The object for which to get the extended type descriptor.","nodes":[{"pos":[0,57],"content":"The object for which to get the extended type descriptor.","nodes":[{"content":"The object for which to get the extended type descriptor.","pos":[0,57]}]}],"pos":[19033,19091],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide extended metadata for the object.","nodes":[{"pos":[0,118],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;&lt;/xref&gt;</ph> that can provide extended metadata for the object.","source":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide extended metadata for the object."}],"pos":[19178,19297],"yaml":true},{"content":"Gets the extender providers for the specified object.","nodes":[{"pos":[0,53],"content":"Gets the extender providers for the specified object.","nodes":[{"content":"Gets the extender providers for the specified object.","pos":[0,53]}]}],"pos":[20821,20875],"yaml":true},{"content":"The object to get extender providers for.","nodes":[{"pos":[0,41],"content":"The object to get extender providers for.","nodes":[{"content":"The object to get extender providers for.","pos":[0,41]}]}],"pos":[21078,21120],"yaml":true},{"content":"An array of extender providers for <code>instance</code>.","nodes":[{"pos":[0,57],"content":"An array of extender providers for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instance</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array of extender providers for <code>instance</code>."}],"pos":[21205,21263],"yaml":true},{"content":"<code>instance</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;instance&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>instance</code> is `null`."}],"pos":[21459,21492],"yaml":true},{"content":"Gets the name of the specified component, or `null` if the component has no name.","nodes":[{"pos":[0,81],"content":"Gets the name of the specified component, or <ph id=\"ph1\">`null`</ph> if the component has no name.","source":"Gets the name of the specified component, or `null` if the component has no name."}],"pos":[22914,22996],"yaml":true},{"content":"The specified component.","nodes":[{"pos":[0,24],"content":"The specified component.","nodes":[{"content":"The specified component.","pos":[0,24]}]}],"pos":[23163,23188],"yaml":true},{"content":"The name of the specified component.","nodes":[{"pos":[0,36],"content":"The name of the specified component.","nodes":[{"content":"The name of the specified component.","pos":[0,36]}]}],"pos":[23245,23282],"yaml":true},{"content":"<code>component</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>component</code> is `null`."}],"pos":[23478,23512],"yaml":true},{"content":"Performs normal reflection against the given object.","nodes":[{"pos":[0,52],"content":"Performs normal reflection against the given object.","nodes":[{"content":"Performs normal reflection against the given object.","pos":[0,52]}]}],"pos":[24916,24969],"yaml":true},{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.  \n  \n Use this method overload if you have called a type descriptor member that uses an instance instead of a type.","nodes":[{"pos":[0,390],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","pos":[0,390],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.","pos":[0,198],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."},{"content":"If no custom type descriptor can be located for an object, <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.","pos":[199,390],"source":" If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object."}]}]},{"pos":[397,506],"content":"Use this method overload if you have called a type descriptor member that uses an instance instead of a type.","nodes":[{"content":"Use this method overload if you have called a type descriptor member that uses an instance instead of a type.","pos":[0,109]}]}],"pos":[24980,25491],"yaml":true,"extradata":"MT"},{"content":"An instance of the type (should not be `null`).","nodes":[{"pos":[0,47],"content":"An instance of the type (should not be <ph id=\"ph1\">`null`</ph>).","source":"An instance of the type (should not be `null`)."}],"pos":[25643,25691],"yaml":true},{"content":"The type of reflection for this <code>instance</code>.","nodes":[{"pos":[0,54],"content":"The type of reflection for this <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instance</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of reflection for this <code>instance</code>."}],"pos":[25746,25801],"yaml":true},{"content":"<code>instance</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;instance&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>instance</code> is `null`."}],"pos":[25994,26027],"yaml":true},{"content":"Performs normal reflection against a type.","nodes":[{"pos":[0,42],"content":"Performs normal reflection against a type.","nodes":[{"content":"Performs normal reflection against a type.","pos":[0,42]}]}],"pos":[27419,27462],"yaml":true},{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.  \n  \n Use this method overload if you have called a type descriptor member that uses a type instead of an instance.","nodes":[{"pos":[0,390],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","pos":[0,390],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.","pos":[0,198],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."},{"content":"If no custom type descriptor can be located for an object, <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.","pos":[199,390],"source":" If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object."}]}]},{"pos":[397,506],"content":"Use this method overload if you have called a type descriptor member that uses a type instead of an instance.","nodes":[{"content":"Use this method overload if you have called a type descriptor member that uses a type instead of an instance.","pos":[0,109]}]}],"pos":[27473,27984],"yaml":true,"extradata":"MT"},{"content":"The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>.","nodes":[{"pos":[0,93],"content":"The type of object for which to retrieve the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.IReflect\"&gt;&lt;/xref&gt;</ph>.","source":"The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>."}],"pos":[28136,28230],"yaml":true},{"content":"The type of reflection for this <code>objectType</code>.","nodes":[{"pos":[0,56],"content":"The type of reflection for this <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of reflection for this <code>objectType</code>."}],"pos":[28285,28342],"yaml":true},{"content":"<code>objectType</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;objectType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>objectType</code> is `null`."}],"pos":[28535,28570],"yaml":true},{"content":"Performs normal reflection against the given object with the given type.","nodes":[{"pos":[0,72],"content":"Performs normal reflection against the given object with the given type.","nodes":[{"content":"Performs normal reflection against the given object with the given type.","pos":[0,72]}]}],"pos":[30028,30101],"yaml":true},{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","nodes":[{"pos":[0,390],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.","pos":[0,390],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.","pos":[0,198],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."},{"content":"If no custom type descriptor can be located for an object, <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.","pos":[199,390],"source":" If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object."}]}]}],"pos":[30112,30503],"yaml":true,"extradata":"MT"},{"content":"The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>.","nodes":[{"pos":[0,93],"content":"The type of object for which to retrieve the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.IReflect\"&gt;&lt;/xref&gt;</ph>.","source":"The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>."}],"pos":[30680,30774],"yaml":true},{"content":"An instance of the type. Can be `null`.","nodes":[{"pos":[0,39],"content":"An instance of the type. Can be `null`.","nodes":[{"content":"An instance of the type.","pos":[0,24]},{"content":"Can be <ph id=\"ph1\">`null`</ph>.","pos":[25,39],"source":" Can be `null`."}]}],"pos":[30838,30878],"yaml":true},{"content":"The type of reflection for this <code>objectType</code>.","nodes":[{"pos":[0,56],"content":"The type of reflection for this <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of reflection for this <code>objectType</code>."}],"pos":[30933,30990],"yaml":true},{"content":"Converts a reflection type into a runtime type.","nodes":[{"pos":[0,47],"content":"Converts a reflection type into a runtime type.","nodes":[{"content":"Converts a reflection type into a runtime type.","pos":[0,47]}]}],"pos":[32458,32506],"yaml":true},{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type. Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.","nodes":[{"pos":[0,461],"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type. Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.","nodes":[{"content":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type. Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.","pos":[0,461],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method reverses the<ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method to convert a reflection type back into a runtime type.","pos":[0,229],"source":"The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type."},{"content":"Using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method is preferred over using the <ph id=\"ph2\">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> property, which was used in earlier versions to return the runtime type.","pos":[230,461],"source":" Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type."}]}]}],"pos":[32517,32979],"yaml":true,"extradata":"MT"},{"content":"The type to convert to its runtime equivalent.","nodes":[{"pos":[0,46],"content":"The type to convert to its runtime equivalent.","nodes":[{"content":"The type to convert to its runtime equivalent.","pos":[0,46]}]}],"pos":[33144,33191],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the runtime equivalent of <code>reflectionType</code>.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the runtime equivalent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">reflectionType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Type\"></xref> that represents the runtime equivalent of <code>reflectionType</code>."}],"pos":[33246,33352],"yaml":true},{"content":"<code>reflectionType</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;reflectionType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reflectionType</code> is `null`."}],"pos":[33542,33581],"yaml":true},{"content":"Gets a custom type descriptor for the given object.","nodes":[{"pos":[0,51],"content":"Gets a custom type descriptor for the given object.","nodes":[{"content":"Gets a custom type descriptor for the given object.","pos":[0,51]}]}],"pos":[34985,35037],"yaml":true},{"content":"An instance of the type. Can be `null` if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,130],"content":"An instance of the type. Can be `null` if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"content":"An instance of the type.","pos":[0,24]},{"content":"Can be <ph id=\"ph1\">`null`</ph> if no instance was passed to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","pos":[25,130],"source":" Can be `null` if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}]}],"pos":[35228,35359],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;&lt;/xref&gt;</ph> that can provide metadata for the type.","source":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type."}],"pos":[35446,35554],"yaml":true},{"content":"<code>instance</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;instance&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>instance</code> is `null`."}],"pos":[35747,35780],"yaml":true},{"content":"Gets a custom type descriptor for the given type.","nodes":[{"pos":[0,49],"content":"Gets a custom type descriptor for the given type.","nodes":[{"content":"Gets a custom type descriptor for the given type.","pos":[0,49]}]}],"pos":[37172,37222],"yaml":true},{"content":"The type of object for which to retrieve the type descriptor.","nodes":[{"pos":[0,61],"content":"The type of object for which to retrieve the type descriptor.","nodes":[{"content":"The type of object for which to retrieve the type descriptor.","pos":[0,61]}]}],"pos":[37413,37475],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;&lt;/xref&gt;</ph> that can provide metadata for the type.","source":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type."}],"pos":[37562,37670],"yaml":true},{"content":"Gets a custom type descriptor for the given type and object.","nodes":[{"pos":[0,60],"content":"Gets a custom type descriptor for the given type and object.","nodes":[{"content":"Gets a custom type descriptor for the given type and object.","pos":[0,60]}]}],"pos":[39222,39283],"yaml":true},{"content":"This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.","nodes":[{"pos":[0,278],"content":"This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.","nodes":[{"content":"This method is prototyped as <ph id=\"ph1\">`virtual`</ph> and, by default, returns an empty descriptor if no parent provider was passed.","pos":[0,117],"source":"This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed."},{"content":"If a parent provider was passed, this method will invoke the parent provider's <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.","pos":[118,278],"source":" If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method."}]}],"pos":[39294,39573],"yaml":true,"extradata":"MT"},{"content":"The type of object for which to retrieve the type descriptor.","nodes":[{"pos":[0,61],"content":"The type of object for which to retrieve the type descriptor.","nodes":[{"content":"The type of object for which to retrieve the type descriptor.","pos":[0,61]}]}],"pos":[39789,39851],"yaml":true},{"content":"An instance of the type. Can be `null` if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"pos":[0,130],"content":"An instance of the type. Can be `null` if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.","nodes":[{"content":"An instance of the type.","pos":[0,24]},{"content":"Can be <ph id=\"ph1\">`null`</ph> if no instance was passed to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph>.","pos":[25,130],"source":" Can be `null` if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>."}]}],"pos":[39915,40046],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ICustomTypeDescriptor\"&gt;&lt;/xref&gt;</ph> that can provide metadata for the type.","source":"An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type."}],"pos":[40133,40241],"yaml":true},{"content":"Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.","nodes":[{"pos":[0,139],"content":"Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.","nodes":[{"content":"Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.","pos":[0,139]}]}],"pos":[41715,41855],"yaml":true},{"content":"The type to test for compatibility.","nodes":[{"pos":[0,35],"content":"The type to test for compatibility.","nodes":[{"content":"The type to test for compatibility.","pos":[0,35]}]}],"pos":[42001,42037],"yaml":true},{"content":"`true` if <code>type</code> is compatible with the type description and its chain of type description providers; otherwise, `false`.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is compatible with the type description and its chain of type description providers; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>type</code> is compatible with the type description and its chain of type description providers; otherwise, `false`."}],"pos":[42095,42230],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[42421,42450],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.TypeDescriptionProvider\n  commentId: T:System.ComponentModel.TypeDescriptionProvider\n  id: TypeDescriptionProvider\n  children:\n  - System.ComponentModel.TypeDescriptionProvider.#ctor\n  - System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)\n  - System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  - System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)\n  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)\n  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)\n  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)\n  - System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)\n  langs:\n  - csharp\n  name: TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider\n  fullName: System.ComponentModel.TypeDescriptionProvider\n  type: Class\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Provides supplemental metadata to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n  remarks: \"The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events. There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.  \\n  \\n There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:  \\n  \\n-   At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.  \\n  \\n-   At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called. These overloaded methods require either the target object or its class type.  \\n  \\n The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction. This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.  \\n  \\n Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.  \\n  \\n This class cannot be inherited.\"\n  syntax:\n    content: public abstract class TypeDescriptionProvider\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: TypeDescriptionProvider()\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()\n  fullName: TypeDescriptionProvider.TypeDescriptionProvider()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class.\n  remarks: This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.\n  syntax:\n    content: protected TypeDescriptionProvider ();\n    parameters: []\n  overload: System.ComponentModel.TypeDescriptionProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)\n  id: '#ctor(System.ComponentModel.TypeDescriptionProvider)'\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: TypeDescriptionProvider(TypeDescriptionProvider)\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)\n  fullName: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.TypeDescriptionProvider\"></xref> class using a parent type description provider.\n  remarks: \"If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values. Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.  \\n  \\n The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.  \\n  \\n|Method|Default return value|  \\n|------------|--------------------------|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.|  \\n|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|The `objectType` first parameter.|\"\n  syntax:\n    content: protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);\n    parameters:\n    - id: parent\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The parent type description provider.\n  overload: System.ComponentModel.TypeDescriptionProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: CreateInstance(IServiceProvider, Type, Type[], Object[])\n  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider, Type, Type[], Object[])\n  fullName: TypeDescriptionProvider.CreateInstance(IServiceProvider, Type, Type[], Object[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Creates an object that can substitute for another data type.\n  remarks: \"The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> method of the <xref:System.ComponentModel.TypeDescriptor> class. If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.  \\n  \\n The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> method if `provider` is `null`. If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.\"\n  syntax:\n    content: public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An optional service provider.\n    - id: objectType\n      type: System.Type\n      description: The type of object to create. This parameter is never `null`.\n    - id: argTypes\n      type: System.Type[]\n      description: An optional array of types that represent the parameter types to be passed to the object's constructor. This array can be `null` or of zero length.\n    - id: args\n      type: System.Object[]\n      description: An optional array of parameter values to pass to the object's constructor.\n    return:\n      type: System.Object\n      description: The substitute <xref href=\"System.Object\"></xref>.\n  overload: System.ComponentModel.TypeDescriptionProvider.CreateInstance*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)\n  id: GetCache(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetCache(Object)\n  nameWithType: TypeDescriptionProvider.GetCache(Object)\n  fullName: TypeDescriptionProvider.GetCache(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a per-object cache, accessed as an <xref href=\"System.Collections.IDictionary\"></xref> of key/value pairs.\n  remarks: \"A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata. Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type. However, some operations use live object instances. These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected. Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object. The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache. The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.  \\n  \\n The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface. If the object is, it uses the dictionary service to store the object's cache. Otherwise, the object it returns `null`. Other type description providers may provide their own implementation here. For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.\"\n  syntax:\n    content: public virtual System.Collections.IDictionary GetCache (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object for which to get the cache.\n    return:\n      type: System.Collections.IDictionary\n      description: An <xref href=\"System.Collections.IDictionary\"></xref> if the provided object supports caching; otherwise, `null`.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetCache*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)\n  id: GetExtendedTypeDescriptor(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetExtendedTypeDescriptor(Object)\n  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)\n  fullName: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets an extended custom type descriptor for the given object.\n  remarks: \"An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object. For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container. The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties. The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties. The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections. While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.  \\n  \\n <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.\"\n  syntax:\n    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object for which to get the extended type descriptor.\n    return:\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide extended metadata for the object.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)\n  id: GetExtenderProviders(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetExtenderProviders(Object)\n  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)\n  fullName: TypeDescriptionProvider.GetExtenderProviders(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the extender providers for the specified object.\n  syntax:\n    content: protected virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object to get extender providers for.\n    return:\n      type: System.ComponentModel.IExtenderProvider[]\n      description: An array of extender providers for <code>instance</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instance</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n  id: GetFullComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetFullComponentName(Object)\n  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)\n  fullName: TypeDescriptionProvider.GetFullComponentName(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the name of the specified component, or `null` if the component has no name.\n  syntax:\n    content: public virtual string GetFullComponentName (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The specified component.\n    return:\n      type: System.String\n      description: The name of the specified component.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)\n  id: GetReflectionType(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetReflectionType(Object)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)\n  fullName: TypeDescriptionProvider.GetReflectionType(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Performs normal reflection against the given object.\n  remarks: \"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.  \\n  \\n Use this method overload if you have called a type descriptor member that uses an instance instead of a type.\"\n  syntax:\n    content: public Type GetReflectionType (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: An instance of the type (should not be `null`).\n    return:\n      type: System.Type\n      description: The type of reflection for this <code>instance</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instance</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)\n  id: GetReflectionType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetReflectionType(Type)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)\n  fullName: TypeDescriptionProvider.GetReflectionType(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Performs normal reflection against a type.\n  remarks: \"The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.  \\n  \\n Use this method overload if you have called a type descriptor member that uses a type instead of an instance.\"\n  syntax:\n    content: public Type GetReflectionType (Type objectType);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>.\n    return:\n      type: System.Type\n      description: The type of reflection for this <code>objectType</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>objectType</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)\n  id: GetReflectionType(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetReflectionType(Type, Object)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Type, Object)\n  fullName: TypeDescriptionProvider.GetReflectionType(Type, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Performs normal reflection against the given object with the given type.\n  remarks: The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method. If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.\n  syntax:\n    content: public virtual Type GetReflectionType (Type objectType, object instance);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the <xref href=\"System.Reflection.IReflect\"></xref>.\n    - id: instance\n      type: System.Object\n      description: An instance of the type. Can be `null`.\n    return:\n      type: System.Type\n      description: The type of reflection for this <code>objectType</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)\n  id: GetRuntimeType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetRuntimeType(Type)\n  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)\n  fullName: TypeDescriptionProvider.GetRuntimeType(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Converts a reflection type into a runtime type.\n  remarks: The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type. Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.\n  syntax:\n    content: public virtual Type GetRuntimeType (Type reflectionType);\n    parameters:\n    - id: reflectionType\n      type: System.Type\n      description: The type to convert to its runtime equivalent.\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the runtime equivalent of <code>reflectionType</code>.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reflectionType</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  id: GetTypeDescriptor(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetTypeDescriptor(Object)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)\n  fullName: TypeDescriptionProvider.GetTypeDescriptor(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a custom type descriptor for the given object.\n  syntax:\n    content: public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: An instance of the type. Can be `null` if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n    return:\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instance</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)\n  id: GetTypeDescriptor(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetTypeDescriptor(Type)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)\n  fullName: TypeDescriptionProvider.GetTypeDescriptor(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a custom type descriptor for the given type.\n  syntax:\n    content: public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the type descriptor.\n    return:\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)\n  id: GetTypeDescriptor(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: GetTypeDescriptor(Type, Object)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type, Object)\n  fullName: TypeDescriptionProvider.GetTypeDescriptor(Type, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a custom type descriptor for the given type and object.\n  remarks: This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.\n  syntax:\n    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the type descriptor.\n    - id: instance\n      type: System.Object\n      description: An instance of the type. Can be `null` if no instance was passed to the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref>.\n    return:\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: An <xref href=\"System.ComponentModel.ICustomTypeDescriptor\"></xref> that can provide metadata for the type.\n  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)\n  commentId: M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)\n  id: IsSupportedType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  langs:\n  - csharp\n  name: IsSupportedType(Type)\n  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)\n  fullName: TypeDescriptionProvider.IsSupportedType(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.\n  syntax:\n    content: public virtual bool IsSupportedType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to test for compatibility.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>type</code> is compatible with the type description and its chain of type description providers; otherwise, `false`.'\n  overload: System.ComponentModel.TypeDescriptionProvider.IsSupportedType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: TypeDescriptionProvider()\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()\n  fullName: TypeDescriptionProvider.TypeDescriptionProvider()\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: TypeDescriptionProvider(TypeDescriptionProvider)\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)\n  fullName: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)\n- uid: System.ComponentModel.TypeDescriptionProvider\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider\n  fullName: System.ComponentModel.TypeDescriptionProvider\n- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: CreateInstance(IServiceProvider, Type, Type[], Object[])\n  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider, Type, Type[], Object[])\n  fullName: TypeDescriptionProvider.CreateInstance(IServiceProvider, Type, Type[], Object[])\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetCache(Object)\n  nameWithType: TypeDescriptionProvider.GetCache(Object)\n  fullName: TypeDescriptionProvider.GetCache(Object)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetExtendedTypeDescriptor(Object)\n  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)\n  fullName: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)\n- uid: System.ComponentModel.ICustomTypeDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: ICustomTypeDescriptor\n  nameWithType: ICustomTypeDescriptor\n  fullName: System.ComponentModel.ICustomTypeDescriptor\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetExtenderProviders(Object)\n  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)\n  fullName: TypeDescriptionProvider.GetExtenderProviders(Object)\n- uid: System.ComponentModel.IExtenderProvider\n  name: IExtenderProvider\n  nameWithType: IExtenderProvider\n  fullName: System.ComponentModel.IExtenderProvider\n- uid: System.ComponentModel.IExtenderProvider[]\n  parent: System.ComponentModel\n  isExternal: false\n  name: IExtenderProvider[]\n  nameWithType: IExtenderProvider[]\n  fullName: System.ComponentModel.IExtenderProvider[]\n  spec.csharp:\n  - uid: System.ComponentModel.IExtenderProvider\n    name: IExtenderProvider\n    nameWithType: IExtenderProvider\n    fullName: System.ComponentModel.IExtenderProvider\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetFullComponentName(Object)\n  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)\n  fullName: TypeDescriptionProvider.GetFullComponentName(Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetReflectionType(Object)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)\n  fullName: TypeDescriptionProvider.GetReflectionType(Object)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetReflectionType(Type)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)\n  fullName: TypeDescriptionProvider.GetReflectionType(Type)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetReflectionType(Type, Object)\n  nameWithType: TypeDescriptionProvider.GetReflectionType(Type, Object)\n  fullName: TypeDescriptionProvider.GetReflectionType(Type, Object)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetRuntimeType(Type)\n  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)\n  fullName: TypeDescriptionProvider.GetRuntimeType(Type)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetTypeDescriptor(Object)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)\n  fullName: TypeDescriptionProvider.GetTypeDescriptor(Object)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetTypeDescriptor(Type)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)\n  fullName: TypeDescriptionProvider.GetTypeDescriptor(Type)\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetTypeDescriptor(Type, Object)\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type, Object)\n  fullName: TypeDescriptionProvider.GetTypeDescriptor(Type, Object)\n- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: IsSupportedType(Type)\n  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)\n  fullName: TypeDescriptionProvider.IsSupportedType(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.TypeDescriptionProvider.#ctor*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider\n  fullName: TypeDescriptionProvider.TypeDescriptionProvider\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: CreateInstance\n  nameWithType: TypeDescriptionProvider.CreateInstance\n  fullName: TypeDescriptionProvider.CreateInstance\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.GetCache*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetCache\n  nameWithType: TypeDescriptionProvider.GetCache\n  fullName: TypeDescriptionProvider.GetCache\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetExtendedTypeDescriptor\n  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor\n  fullName: TypeDescriptionProvider.GetExtendedTypeDescriptor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetExtenderProviders\n  nameWithType: TypeDescriptionProvider.GetExtenderProviders\n  fullName: TypeDescriptionProvider.GetExtenderProviders\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetFullComponentName\n  nameWithType: TypeDescriptionProvider.GetFullComponentName\n  fullName: TypeDescriptionProvider.GetFullComponentName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetReflectionType\n  nameWithType: TypeDescriptionProvider.GetReflectionType\n  fullName: TypeDescriptionProvider.GetReflectionType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetRuntimeType\n  nameWithType: TypeDescriptionProvider.GetRuntimeType\n  fullName: TypeDescriptionProvider.GetRuntimeType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: GetTypeDescriptor\n  nameWithType: TypeDescriptionProvider.GetTypeDescriptor\n  fullName: TypeDescriptionProvider.GetTypeDescriptor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType*\n  parent: System.ComponentModel.TypeDescriptionProvider\n  isExternal: false\n  name: IsSupportedType\n  nameWithType: TypeDescriptionProvider.IsSupportedType\n  fullName: TypeDescriptionProvider.IsSupportedType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeDescriptionProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}