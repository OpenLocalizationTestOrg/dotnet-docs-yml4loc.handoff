{"nodes":[{"content":"Specifies the cryptographic service providers available for validating digital signatures.","nodes":[{"pos":[0,90],"content":"Specifies the cryptographic service providers available for validating digital signatures.","nodes":[{"content":"Specifies the cryptographic service providers available for validating digital signatures.","pos":[0,90]}]}],"pos":[1084,1175],"yaml":true},{"content":"A cryptographic service provider contains implementations of cryptographic standards and algorithms. Applications can require the authentication provider name or authentication provider type of a cryptographic service provider to validate the digital signatures.","nodes":[{"pos":[0,262],"content":"A cryptographic service provider contains implementations of cryptographic standards and algorithms. Applications can require the authentication provider name or authentication provider type of a cryptographic service provider to validate the digital signatures.","nodes":[{"content":"A cryptographic service provider contains implementations of cryptographic standards and algorithms. Applications can require the authentication provider name or authentication provider type of a cryptographic service provider to validate the digital signatures.","pos":[0,262],"nodes":[{"content":"A cryptographic service provider contains implementations of cryptographic standards and algorithms.","pos":[0,100]},{"content":"Applications can require the authentication provider name or authentication provider type of a cryptographic service provider to validate the digital signatures.","pos":[101,262]}]}]}],"pos":[1186,1449],"yaml":true,"extradata":"MT"},{"content":"A provider type that, like `RsqSig`, only supports hashes and digital signatures. `Dss` specifies the Digital Signature Algorithm (DSA) signature algorithm.","nodes":[{"pos":[0,156],"content":"A provider type that, like `RsqSig`, only supports hashes and digital signatures. `Dss` specifies the Digital Signature Algorithm (DSA) signature algorithm.","nodes":[{"content":"A provider type that, like <ph id=\"ph1\">`RsqSig`</ph>, only supports hashes and digital signatures.","pos":[0,81],"source":"A provider type that, like `RsqSig`, only supports hashes and digital signatures."},{"content":"<ph id=\"ph1\">`Dss`</ph> specifies the Digital Signature Algorithm (DSA) signature algorithm.","pos":[82,156],"source":"`Dss` specifies the Digital Signature Algorithm (DSA) signature algorithm."}]}],"pos":[2508,2665],"yaml":true},{"content":"A provider type that contains a set of cryptographic protocols and algorithms owned by the National Institute of Standards and Technology.","nodes":[{"pos":[0,138],"content":"A provider type that contains a set of cryptographic protocols and algorithms owned by the National Institute of Standards and Technology.","nodes":[{"content":"A provider type that contains a set of cryptographic protocols and algorithms owned by the National Institute of Standards and Technology.","pos":[0,138]}]}],"pos":[3701,3840],"yaml":true},{"content":"A provider type designed for the cryptographic needs of the Microsoft Exchange mail application and other applications compatible with Microsoft Mail.","nodes":[{"pos":[0,150],"content":"A provider type designed for the cryptographic needs of the Microsoft Exchange mail application and other applications compatible with Microsoft Mail.","nodes":[{"content":"A provider type designed for the cryptographic needs of the Microsoft Exchange mail application and other applications compatible with Microsoft Mail.","pos":[0,150]}]}],"pos":[4935,5086],"yaml":true},{"content":"This provider type is preliminary.","nodes":[{"pos":[0,34],"content":"This provider type is preliminary.","nodes":[{"content":"This provider type is preliminary.","pos":[0,34]}]}],"pos":[5097,5132],"yaml":true,"extradata":"MT"},{"content":"No cryptographic provider type specified.","nodes":[{"pos":[0,41],"content":"No cryptographic provider type specified.","nodes":[{"content":"No cryptographic provider type specified.","pos":[0,41]}]}],"pos":[6158,6200],"yaml":true},{"content":"The full RSA provider type, which supports both digital signatures and data encryption. Considered a general purpose cryptographic services provider. The RSA public-key algorithm is used for all public-key operations.","nodes":[{"pos":[0,217],"content":"The full RSA provider type, which supports both digital signatures and data encryption. Considered a general purpose cryptographic services provider. The RSA public-key algorithm is used for all public-key operations.","nodes":[{"content":"The full RSA provider type, which supports both digital signatures and data encryption. Considered a general purpose cryptographic services provider. The RSA public-key algorithm is used for all public-key operations.","pos":[0,217],"nodes":[{"content":"The full RSA provider type, which supports both digital signatures and data encryption.","pos":[0,87]},{"content":"Considered a general purpose cryptographic services provider.","pos":[88,149]},{"content":"The RSA public-key algorithm is used for all public-key operations.","pos":[150,217]}]}]}],"pos":[7231,7449],"yaml":true},{"content":"RSA Data Security, Inc., is a major developer and publisher of public-key cryptography standards. The \"RSA\" in the name stands for the names of the company's three developers and the owners: Rivest, Shamir, and Adelman.","nodes":[{"pos":[0,219],"content":"RSA Data Security, Inc., is a major developer and publisher of public-key cryptography standards. The \"RSA\" in the name stands for the names of the company's three developers and the owners: Rivest, Shamir, and Adelman.","nodes":[{"content":"RSA Data Security, Inc., is a major developer and publisher of public-key cryptography standards. The \"RSA\" in the name stands for the names of the company's three developers and the owners: Rivest, Shamir, and Adelman.","pos":[0,219],"nodes":[{"content":"RSA Data Security, Inc., is a major developer and publisher of public-key cryptography standards.","pos":[0,97]},{"content":"The \"RSA\" in the name stands for the names of the company's three developers and the owners: Rivest, Shamir, and Adelman.","pos":[98,219]}]}]}],"pos":[7460,7684],"yaml":true,"extradata":"MT"},{"content":"A subset of the `RsaFull` provider type, which supports only those functions and algorithms required for hashes and digital signatures.","nodes":[{"pos":[0,135],"content":"A subset of the <ph id=\"ph1\">`RsaFull`</ph> provider type, which supports only those functions and algorithms required for hashes and digital signatures.","source":"A subset of the `RsaFull` provider type, which supports only those functions and algorithms required for hashes and digital signatures."}],"pos":[8712,8848],"yaml":true},{"content":"A provider type that supports the Secure Sockets Layer (SSL) protocol.","nodes":[{"pos":[0,70],"content":"A provider type that supports the Secure Sockets Layer (SSL) protocol.","nodes":[{"content":"A provider type that supports the Secure Sockets Layer (SSL) protocol.","pos":[0,70]}]}],"pos":[9857,9928],"yaml":true},{"content":"Secure transaction technology provider acquirer.","nodes":[{"pos":[0,48],"content":"Secure transaction technology provider acquirer.","nodes":[{"content":"Secure transaction technology provider acquirer.","pos":[0,48]}]}],"pos":[10952,11001],"yaml":true},{"content":"Secure transaction technology provider brand.","nodes":[{"pos":[0,45],"content":"Secure transaction technology provider brand.","nodes":[{"content":"Secure transaction technology provider brand.","pos":[0,45]}]}],"pos":[12034,12080],"yaml":true},{"content":"Secure transaction technology provider issuer.","nodes":[{"pos":[0,46],"content":"Secure transaction technology provider issuer.","nodes":[{"content":"Secure transaction technology provider issuer.","pos":[0,46]}]}],"pos":[13108,13155],"yaml":true},{"content":"Secure transaction technology provider enterprise.","nodes":[{"pos":[0,50],"content":"Secure transaction technology provider enterprise.","nodes":[{"content":"Secure transaction technology provider enterprise.","pos":[0,50]}]}],"pos":[14182,14233],"yaml":true},{"content":"Secure transaction technology provider root.","nodes":[{"pos":[0,44],"content":"Secure transaction technology provider root.","nodes":[{"content":"Secure transaction technology provider root.","pos":[0,44]}]}],"pos":[15266,15311],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.CryptographicProviderType\n  commentId: T:System.Messaging.CryptographicProviderType\n  id: CryptographicProviderType\n  children:\n  - System.Messaging.CryptographicProviderType.Dss\n  - System.Messaging.CryptographicProviderType.Fortezza\n  - System.Messaging.CryptographicProviderType.MicrosoftExchange\n  - System.Messaging.CryptographicProviderType.None\n  - System.Messaging.CryptographicProviderType.RsaFull\n  - System.Messaging.CryptographicProviderType.RsqSig\n  - System.Messaging.CryptographicProviderType.Ssl\n  - System.Messaging.CryptographicProviderType.SttAcq\n  - System.Messaging.CryptographicProviderType.SttBrnd\n  - System.Messaging.CryptographicProviderType.SttIss\n  - System.Messaging.CryptographicProviderType.SttMer\n  - System.Messaging.CryptographicProviderType.SttRoot\n  langs:\n  - csharp\n  name: CryptographicProviderType\n  nameWithType: CryptographicProviderType\n  fullName: System.Messaging.CryptographicProviderType\n  type: Enum\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Specifies the cryptographic service providers available for validating digital signatures.\n  remarks: A cryptographic service provider contains implementations of cryptographic standards and algorithms. Applications can require the authentication provider name or authentication provider type of a cryptographic service provider to validate the digital signatures.\n  syntax:\n    content: public enum CryptographicProviderType\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.CryptographicProviderType.Dss\n  commentId: F:System.Messaging.CryptographicProviderType.Dss\n  id: Dss\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: Dss\n  nameWithType: CryptographicProviderType.Dss\n  fullName: CryptographicProviderType.Dss\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A provider type that, like `RsqSig`, only supports hashes and digital signatures. `Dss` specifies the Digital Signature Algorithm (DSA) signature algorithm.\n  syntax:\n    content: Dss\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.Fortezza\n  commentId: F:System.Messaging.CryptographicProviderType.Fortezza\n  id: Fortezza\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: Fortezza\n  nameWithType: CryptographicProviderType.Fortezza\n  fullName: CryptographicProviderType.Fortezza\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A provider type that contains a set of cryptographic protocols and algorithms owned by the National Institute of Standards and Technology.\n  syntax:\n    content: Fortezza\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.MicrosoftExchange\n  commentId: F:System.Messaging.CryptographicProviderType.MicrosoftExchange\n  id: MicrosoftExchange\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: MicrosoftExchange\n  nameWithType: CryptographicProviderType.MicrosoftExchange\n  fullName: CryptographicProviderType.MicrosoftExchange\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A provider type designed for the cryptographic needs of the Microsoft Exchange mail application and other applications compatible with Microsoft Mail.\n  remarks: This provider type is preliminary.\n  syntax:\n    content: MicrosoftExchange\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.None\n  commentId: F:System.Messaging.CryptographicProviderType.None\n  id: None\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: None\n  nameWithType: CryptographicProviderType.None\n  fullName: CryptographicProviderType.None\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: No cryptographic provider type specified.\n  syntax:\n    content: None\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.RsaFull\n  commentId: F:System.Messaging.CryptographicProviderType.RsaFull\n  id: RsaFull\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: RsaFull\n  nameWithType: CryptographicProviderType.RsaFull\n  fullName: CryptographicProviderType.RsaFull\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: The full RSA provider type, which supports both digital signatures and data encryption. Considered a general purpose cryptographic services provider. The RSA public-key algorithm is used for all public-key operations.\n  remarks: \"RSA Data Security, Inc., is a major developer and publisher of public-key cryptography standards. The \\\"RSA\\\" in the name stands for the names of the company's three developers and the owners: Rivest, Shamir, and Adelman.\"\n  syntax:\n    content: RsaFull\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.RsqSig\n  commentId: F:System.Messaging.CryptographicProviderType.RsqSig\n  id: RsqSig\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: RsqSig\n  nameWithType: CryptographicProviderType.RsqSig\n  fullName: CryptographicProviderType.RsqSig\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A subset of the `RsaFull` provider type, which supports only those functions and algorithms required for hashes and digital signatures.\n  syntax:\n    content: RsqSig\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.Ssl\n  commentId: F:System.Messaging.CryptographicProviderType.Ssl\n  id: Ssl\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: Ssl\n  nameWithType: CryptographicProviderType.Ssl\n  fullName: CryptographicProviderType.Ssl\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: A provider type that supports the Secure Sockets Layer (SSL) protocol.\n  syntax:\n    content: Ssl\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.SttAcq\n  commentId: F:System.Messaging.CryptographicProviderType.SttAcq\n  id: SttAcq\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: SttAcq\n  nameWithType: CryptographicProviderType.SttAcq\n  fullName: CryptographicProviderType.SttAcq\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Secure transaction technology provider acquirer.\n  syntax:\n    content: SttAcq\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.SttBrnd\n  commentId: F:System.Messaging.CryptographicProviderType.SttBrnd\n  id: SttBrnd\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: SttBrnd\n  nameWithType: CryptographicProviderType.SttBrnd\n  fullName: CryptographicProviderType.SttBrnd\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Secure transaction technology provider brand.\n  syntax:\n    content: SttBrnd\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.SttIss\n  commentId: F:System.Messaging.CryptographicProviderType.SttIss\n  id: SttIss\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: SttIss\n  nameWithType: CryptographicProviderType.SttIss\n  fullName: CryptographicProviderType.SttIss\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Secure transaction technology provider issuer.\n  syntax:\n    content: SttIss\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.SttMer\n  commentId: F:System.Messaging.CryptographicProviderType.SttMer\n  id: SttMer\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: SttMer\n  nameWithType: CryptographicProviderType.SttMer\n  fullName: CryptographicProviderType.SttMer\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Secure transaction technology provider enterprise.\n  syntax:\n    content: SttMer\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\n- uid: System.Messaging.CryptographicProviderType.SttRoot\n  commentId: F:System.Messaging.CryptographicProviderType.SttRoot\n  id: SttRoot\n  parent: System.Messaging.CryptographicProviderType\n  langs:\n  - csharp\n  name: SttRoot\n  nameWithType: CryptographicProviderType.SttRoot\n  fullName: CryptographicProviderType.SttRoot\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Secure transaction technology provider root.\n  syntax:\n    content: SttRoot\n    return:\n      type: System.Messaging.CryptographicProviderType\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/CryptographicProviderType.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Messaging.CryptographicProviderType.Dss\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: Dss\n  nameWithType: CryptographicProviderType.Dss\n  fullName: CryptographicProviderType.Dss\n- uid: System.Messaging.CryptographicProviderType\n  parent: System.Messaging\n  isExternal: false\n  name: CryptographicProviderType\n  nameWithType: CryptographicProviderType\n  fullName: System.Messaging.CryptographicProviderType\n- uid: System.Messaging.CryptographicProviderType.Fortezza\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: Fortezza\n  nameWithType: CryptographicProviderType.Fortezza\n  fullName: CryptographicProviderType.Fortezza\n- uid: System.Messaging.CryptographicProviderType.MicrosoftExchange\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: MicrosoftExchange\n  nameWithType: CryptographicProviderType.MicrosoftExchange\n  fullName: CryptographicProviderType.MicrosoftExchange\n- uid: System.Messaging.CryptographicProviderType.None\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: None\n  nameWithType: CryptographicProviderType.None\n  fullName: CryptographicProviderType.None\n- uid: System.Messaging.CryptographicProviderType.RsaFull\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: RsaFull\n  nameWithType: CryptographicProviderType.RsaFull\n  fullName: CryptographicProviderType.RsaFull\n- uid: System.Messaging.CryptographicProviderType.RsqSig\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: RsqSig\n  nameWithType: CryptographicProviderType.RsqSig\n  fullName: CryptographicProviderType.RsqSig\n- uid: System.Messaging.CryptographicProviderType.Ssl\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: Ssl\n  nameWithType: CryptographicProviderType.Ssl\n  fullName: CryptographicProviderType.Ssl\n- uid: System.Messaging.CryptographicProviderType.SttAcq\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: SttAcq\n  nameWithType: CryptographicProviderType.SttAcq\n  fullName: CryptographicProviderType.SttAcq\n- uid: System.Messaging.CryptographicProviderType.SttBrnd\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: SttBrnd\n  nameWithType: CryptographicProviderType.SttBrnd\n  fullName: CryptographicProviderType.SttBrnd\n- uid: System.Messaging.CryptographicProviderType.SttIss\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: SttIss\n  nameWithType: CryptographicProviderType.SttIss\n  fullName: CryptographicProviderType.SttIss\n- uid: System.Messaging.CryptographicProviderType.SttMer\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: SttMer\n  nameWithType: CryptographicProviderType.SttMer\n  fullName: CryptographicProviderType.SttMer\n- uid: System.Messaging.CryptographicProviderType.SttRoot\n  parent: System.Messaging.CryptographicProviderType\n  isExternal: false\n  name: SttRoot\n  nameWithType: CryptographicProviderType.SttRoot\n  fullName: CryptographicProviderType.SttRoot\n"}