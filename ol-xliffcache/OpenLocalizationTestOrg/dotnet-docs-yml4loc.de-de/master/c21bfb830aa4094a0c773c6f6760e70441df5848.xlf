<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c21bfb830aa4094a0c773c6f6760e70441df5848</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.DataGridViewCheckBoxCell.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c9b9f9b070469f7de8cf6173b3e1784b2eedc41</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fea98ba487ed681809508974640685f42ac96ec1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Displays a check box user interface (UI) to use in a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph> class is a specialized type of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> used to display binary or ternary information presented through a check box UI.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default binary mode, the cells can hold values of <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In ternary mode, the cells take on one of the <ph id="ph1">&lt;xref:System.Windows.Forms.CheckState&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A&gt;</ph> property determines whether binary or ternary mode is in effect.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn&gt;</ph> is the column type specialized to hold cells of this type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A?displayProperty=fullName&gt;</ph> is initialized to a new <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To pattern the cells within a column after an existing <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>, set the column's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A&gt;</ph> property to the cell to use as a pattern.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cell-related properties of the column are wrappers for the similarly-named properties of the template cell.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the property values of the template cell will affect only cells based on the template that are added after the change.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the cell-related property values of the column, however, will update the template cell and all other cells in the column, and refresh the column display if necessary.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the current cell is a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A?displayProperty=fullName&gt;</ph> property is always <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, check box cell values are intended either for storage, like any other data, or for performing bulk operations.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to respond immediately when users click a check box cell, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=fullName&gt;</ph> event, but this event occurs before the cell value is updated.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need the new value at the time of the click, one option is to calculate what the expected value will be based on the current value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another approach is to commit the change immediately, and handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=fullName&gt;</ph> event to respond to it.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To commit the change when the cell is clicked, you must handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=fullName&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell"&gt;&lt;/xref&gt;</ph> class to its default state.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A&gt;</ph> property value to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell"&gt;&lt;/xref&gt;</ph> class, enabling binary or ternary state.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The standard operation of a check box allows for two states: checked and unchecked.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`threeState`</ph> parameter is set to <ph id="ph2">`true`</ph>, an additional, indeterminate state is allowed, which is visually denoted by a grey partial check.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to enable ternary state; <ph id="ph2">`false`</ph> to enable binary state.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Creates an exact copy of this cell.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.Clone%2A&gt;</ph> method whenever you derive from <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph> and add new properties to the derived class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the cloned <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Indicates whether the row containing the cell will be unshared when the cell content is clicked.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ContentClickUnsharesRow%2A&gt;</ph> is called just before <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentClick%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentClick%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should return <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains data about the mouse click.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell is in edit mode; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Indicates whether the row containing the cell will be unshared when the cell content is double-clicked.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ContentDoubleClickUnsharesRow%2A&gt;</ph> is called just before <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentDoubleClick%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentDoubleClick%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should return <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains data about the double-click.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell is in edit mode; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates a new accessible object for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not explicitly call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.CreateAccessibilityInstance%2A&gt;</ph> method, it will be called when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A&gt;</ph> property is referenced.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get or set <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A&gt;</ph>, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell.DataGridViewCheckBoxCellAccessibleObject"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets the formatted value of the control hosted by the cell when it is in edit mode.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the cell's value.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType"&gt;&lt;/xref&gt;</ph> property value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The assigned value is <ph id="ph1">`null`</ph> or is not of the type indicated by the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The assigned value is not of type <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> nor of type <ph id="ph2">&lt;xref href="System.Windows.Forms.CheckState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType"&gt;&lt;/xref&gt;</ph> property value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag indicating that the value has been changed for this cell.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a cell's value changes, it is marked as modified until that value is saved or the cell is reinitialized with data from its data source.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell's value has changed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the type of the cell's hosted editing control.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overridden property always returns <ph id="ph1">`null`</ph> because check boxes only allow selection and deselection, not editing.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the underlying editing control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the underlying value corresponding to a cell value of <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A&gt;</ph> properties determine the associated values of these states as they occur in the underlying data source.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue%2A&gt;</ph> property of the owning column also sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A&gt;</ph> property of every cell in the column and refreshes the column display.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To override the specified value for individual cells, set the cell values after you set the column value.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> corresponding to a cell value of <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the flat style appearance of the check box user interface (UI).</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle.Popup&gt;</ph> flat style is not supported by this cell type.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FlatStyle%2A&gt;</ph> property of the owning column also sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FlatStyle%2A&gt;</ph> property of every cell in the column and refreshes the column display.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>To override the specified value for individual cells, set the cell values after you set the column value.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.FlatStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.FlatStyle.Standard"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.FlatStyle"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets the type of the cell display value.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A&gt;</ph> property value is <ph id="ph2">`false`</ph>, the value of this property is the <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> type; otherwise, it is the <ph id="ph4">&lt;xref:System.Windows.Forms.CheckState&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the display type of the cell.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Returns the bounding rectangle that encloses the cell's content area, which is calculated using the specified <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> and cell style.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The graphics context for the cell.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> to be applied to the cell.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that bounds the cell's contents.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets the formatted value of the cell while it is in edit mode.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`context`</ph> includes the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent&gt;</ph> value, this method returns an <ph id="ph3">&lt;xref:System.Object&gt;</ph> that you can cast to a <ph id="ph4">&lt;xref:System.String&gt;</ph> representation of the value.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this method returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> or a <ph id="ph2">&lt;xref:System.Windows.Forms.CheckState&gt;</ph> value, depending on the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values that describes the context in which any formatting error occurs.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the formatted value of the editing cell.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType"&gt;&lt;/xref&gt;</ph> property value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns the bounding rectangle that encloses the cell's error icon, if one is displayed.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The graphics context for the cell.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> to be applied to the cell.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that bounds the cell's error icon, if one is displayed; otherwise, <ph id="ph2">&lt;xref href="System.Drawing.Rectangle.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets the formatted value of the cell's data.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control calls this method to convert a cell value into an equivalent display value of the type indicated by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control passes the cell value to this method in the <ph id="ph1">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method first attempts to convert <ph id="ph1">`value`</ph> to a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.CheckState&gt;</ph> value using the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A&gt;</ph> properties if they have been set.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the conversion is unsuccessful, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no handler for this event or the handler sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the conversion is successful or there is a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event and it does not set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph3">`true`</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event handler can modify both <ph id="ph2">`value`</ph> and <ph id="ph3">`cellStyle`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the handler does not set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>, however, this method formats <ph id="ph3">`value`</ph> using the formatting properties of the <ph id="ph4">`cellStyle`</ph> object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can result in an additional <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If formatting is successful and the <ph id="ph1">`context`</ph> parameter value includes the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent&gt;</ph> value, this method returns the <ph id="ph3">&lt;xref:System.String&gt;</ph> version of the formatted value for copying to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this method returns the formatted value for display in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The value to be formatted.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The index of the cell's parent row.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> in effect for the cell.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> associated with the value type that provides custom conversion to the formatted value type, or <ph id="ph2">`null`</ph> if no such custom conversion is needed.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> associated with the formatted value type that provides custom conversion from the value type, or <ph id="ph2">`null`</ph> if no such custom conversion is needed.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values describing the context in which the formatted value is needed.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The value of the cell's data after formatting has been applied or <ph id="ph1">`null`</ph> if the cell is not part of a <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Calculates the preferred size, in pixels, of the cell.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to draw the cell.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that represents the style of the cell.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The zero-based row index of the cell.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The cell's maximum allowable size.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> that represents the preferred size, in pixels, of the cell.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets the underlying value corresponding to an indeterminate or <ph id="ph1">`null`</ph> cell value.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A&gt;</ph> properties determine the associated values of these states as they occur in the underlying data source.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue%2A&gt;</ph> property of the owning column also sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A&gt;</ph> property of every cell in the column and refreshes the column display.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>To override the specified value for individual cells, set the cell values after you set the column value.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> corresponding to an indeterminate or <ph id="ph2">`null`</ph> cell value.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Indicates whether the row containing the cell is unshared when a key is pressed while the cell has focus.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.KeyDownUnsharesRow%2A&gt;</ph> is called just before <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyDown%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyDown%2A&gt;</ph> with the same <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> argument has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should return <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains data about the key press.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the SPACE key is pressed and the CTRL, ALT, and SHIFT keys are all not pressed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Indicates whether the row containing the cell is unshared when a key is released while the cell has focus.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.KeyUpUnsharesRow%2A&gt;</ph> is called just before <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyUp%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyUp%2A&gt;</ph> with the same <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> argument has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should return <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains data about the key press.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the SPACE key is released; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Indicates whether the row containing the cell will be unshared when the mouse button is pressed while the pointer is over the cell.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pressing the mouse button always unshares a row containing a cell of this type.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.MouseDownUnsharesRow%2A&gt;</ph> is called just before <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseDown%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseDown%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should return <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains data about the mouse click.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Always <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Indicates whether the row containing the cell will be unshared when the mouse pointer moves over the cell.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.MouseUpUnsharesRow%2A&gt;</ph> is called just before <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should return <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell was the last cell receiving a mouse click; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Indicates whether the row containing the cell will be unshared when the mouse pointer leaves the cell.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.MouseLeaveUnsharesRow%2A&gt;</ph> is called just before <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseLeave%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseLeave%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should return <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the button is not in the normal state; <ph id="ph2">`false`</ph> if the button is in the pressed state.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Indicates whether the row containing the cell will be unshared when the mouse button is released while the pointer is over the cell.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this cell type, releasing the mouse while the pointer is over the cell always unshares the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.MouseUpUnsharesRow%2A&gt;</ph> is called just before <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseUp%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must return <ph id="ph1">`true`</ph> if the call to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseUp%2A&gt;</ph> has the effect of unsharing the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should return <ph id="ph1">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains data about the mouse click.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Always <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Called when the cell's contents are clicked.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Called when the cell's contents are double-clicked.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Called when a character key is pressed while the focus is on a cell.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>When activated by the space key, this method causes the cell's user interface (UI) to be updated.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The row index of the current cell, or -1 if the cell is not owned by a row.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Called when a character key is released while the focus is on a cell.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>When activated by the SPACEBAR key (equivalent to the <ph id="ph1">&lt;xref:System.Windows.Forms.Keys?displayProperty=fullName&gt;</ph> value), this method updates the cell's user interface (UI) and raises the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.OnCellClick%2A&gt;</ph> event on the owning <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The row index of the current cell, or -1 if the cell is not owned by a row.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Called when the focus moves from a cell.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the button is in a pushed state, this method updates the cell's user interface (UI).</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLeave%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The row index of the current cell, or -1 if the cell is not owned by a row.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cell was left as a result of user mouse click rather than a programmatic cell change; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Called when the mouse button is held down while the pointer is on a cell.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes the cell's user interface (UI) to be updated.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Called when the mouse pointer moves from a cell.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell's current <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonState&gt;</ph> is normal, this method causes the cell's user interface (UI) to be updated.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The row index of the current cell or -1 if the cell is not owned by a row.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Called when the mouse pointer moves within a cell.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes the cell's user interface (UI) to be updated.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Called when the mouse button is released while the pointer is on a cell.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method updates the cell's user interface (UI).</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called in the same circumstances in which a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event is raised, but it does not actually raise the event.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Paints the current <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCheckBoxCell"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to paint the cell.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the area of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> that needs to be repainted.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that contains the bounds of the cell that is being painted.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The row index of the cell that is being painted.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElementStates"&gt;&lt;/xref&gt;</ph> values that specifies the state of the cell.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The data of the cell that is being painted.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The formatted data of the cell that is being painted.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>An error message that is associated with the cell.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that contains formatting and style information about the cell.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that contains border styles for the cell that is being painted.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewPaintParts"&gt;&lt;/xref&gt;</ph> values that specifies which parts of the cell need to be painted.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Converts a value formatted for display to an actual cell value.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user edits a cell value and commits the change, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control calls this method to convert the displayed value from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control then sets the underlying cell value or data source value to the converted value.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the display value of the cell to an actual cell value using the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A&gt;</ph> properties if they have been set.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The display value of the cell.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> in effect for the cell.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> for the display value type, or <ph id="ph2">`null`</ph> to use the default converter.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> for the cell value type, or <ph id="ph2">`null`</ph> to use the default converter.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The cell value.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;cellStyle&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.FormattedValueType"&gt;&lt;/xref&gt;</ph> property value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;formattedValue&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The type of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">formattedValue</ph><ept id="p1">&lt;/code&gt;</ept> does not match the type indicated by the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.FormattedValueType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>This method is not meaningful for this type.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>No preparation is necessary for this cell type.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>This parameter is ignored.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether ternary mode has been enabled for the hosted check box control.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The third state in ternary mode typically represents an uninitialized or indeterminate value.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A&gt;</ph> property of the owning column also sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A&gt;</ph> property of every cell in the column and refreshes the column display.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>To override the specified value for individual cells, set the cell values after you set the column value.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the column <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A&gt;</ph> property, the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A&gt;</ph> property does not automatically update the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph> property of the associated cell style when you change its value.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you change the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A&gt;</ph> property value to <ph id="ph2">`true`</ph>, be sure to set the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph> property of the object returned by the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A&gt;</ph> property to <ph id="ph5">&lt;xref:System.Windows.Forms.CheckState.Indeterminate&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you change the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A&gt;</ph> property value to <ph id="ph2">`false`</ph>, be sure to set the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if ternary mode is enabled; <ph id="ph2">`false`</ph> if binary mode is enabled.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the cell.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string representation of the cell includes the row index and column index of the cell.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the current cell.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Gets or sets the underlying value corresponding to a cell value of <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A&gt;</ph> properties determine the associated values of these states as they occur in the underlying data source.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue%2A&gt;</ph> property of the owning column also sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A&gt;</ph> property of every cell in the column and refreshes the column display.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>To override the specified value for individual cells, set the cell values after you set the column value.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> corresponding to a cell value of <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Gets the data type of the values in the cell.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ValueType%2A&gt;</ph> property of the cell has not been set, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.ValueType%2A&gt;</ph> property for the owning <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxColumn&gt;</ph> is used, if the column exists.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no owning column exists, then this property is set to the default type appropriate for its mode: <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> for binary mode and <ph id="ph2">&lt;xref:System.Windows.Forms.CheckState&gt;</ph> for ternary mode.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> is the actual data object contained in the cell, whereas the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A&gt;</ph> property is the formatted representation of this object.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.ValueType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType%2A&gt;</ph> properties correspond to the data types of these values, respectively.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the underlying value of the cell.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>