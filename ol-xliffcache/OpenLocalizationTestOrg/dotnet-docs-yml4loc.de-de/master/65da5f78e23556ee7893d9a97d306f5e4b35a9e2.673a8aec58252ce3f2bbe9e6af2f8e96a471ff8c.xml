{"nodes":[{"content":"Represents a network endpoint as a host name or a string representation of an IP address and a port number.","nodes":[{"pos":[0,107],"content":"Represents a network endpoint as a host name or a string representation of an IP address and a port number.","nodes":[{"content":"Represents a network endpoint as a host name or a string representation of an IP address and a port number.","pos":[0,107]}]}],"pos":[737,845],"yaml":true},{"content":"The <xref:System.Net.DnsEndPoint> class contains a host name or an IP address and remote port information needed by an application to connect to a service on a host. By combining the host name or IP address and port number of a service, the <xref:System.Net.DnsEndPoint> class forms a connection point to a service.","nodes":[{"pos":[0,315],"content":"The <xref:System.Net.DnsEndPoint> class contains a host name or an IP address and remote port information needed by an application to connect to a service on a host. By combining the host name or IP address and port number of a service, the <xref:System.Net.DnsEndPoint> class forms a connection point to a service.","nodes":[{"content":"The <xref:System.Net.DnsEndPoint> class contains a host name or an IP address and remote port information needed by an application to connect to a service on a host. By combining the host name or IP address and port number of a service, the <xref:System.Net.DnsEndPoint> class forms a connection point to a service.","pos":[0,315],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> class contains a host name or an IP address and remote port information needed by an application to connect to a service on a host.","pos":[0,165],"source":"The <xref:System.Net.DnsEndPoint> class contains a host name or an IP address and remote port information needed by an application to connect to a service on a host."},{"content":"By combining the host name or IP address and port number of a service, the <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> class forms a connection point to a service.","pos":[166,315],"source":" By combining the host name or IP address and port number of a service, the <xref:System.Net.DnsEndPoint> class forms a connection point to a service."}]}]}],"pos":[856,1172],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.DnsEndPoint\"></xref> class with the host name or string representation of an IP address and a port number.","nodes":[{"pos":[0,163],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph> class with the host name or string representation of an IP address and a port number.","source":"Initializes a new instance of the <xref href=\"System.Net.DnsEndPoint\"></xref> class with the host name or string representation of an IP address and a port number."}],"pos":[2943,3107],"yaml":true},{"content":"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address and a port. This constructor sets the <xref:System.Net.DnsEndPoint.AddressFamily%2A> property to <xref:System.Net.Sockets.AddressFamily.Unknown>.  \n  \n When using this constructor with a host name rather than a string representation of an IP address, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use. The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).","nodes":[{"pos":[0,364],"content":"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address and a port. This constructor sets the <xref:System.Net.DnsEndPoint.AddressFamily%2A> property to <xref:System.Net.Sockets.AddressFamily.Unknown>.","nodes":[{"content":"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address and a port. This constructor sets the <xref:System.Net.DnsEndPoint.AddressFamily%2A> property to <xref:System.Net.Sockets.AddressFamily.Unknown>.","pos":[0,364],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> constructor can be used to initialize a <ph id=\"ph2\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> class using either a host name or a string that represents an IP address and a port.","pos":[0,230],"source":"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address and a port."},{"content":"This constructor sets the <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.AddressFamily%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.Net.Sockets.AddressFamily.Unknown&gt;</ph>.","pos":[231,364],"source":" This constructor sets the <xref:System.Net.DnsEndPoint.AddressFamily%2A> property to <xref:System.Net.Sockets.AddressFamily.Unknown>."}]}]},{"pos":[371,943],"content":"When using this constructor with a host name rather than a string representation of an IP address, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use. The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).","nodes":[{"content":"When using this constructor with a host name rather than a string representation of an IP address, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use. The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).","pos":[0,572],"nodes":[{"content":"When using this constructor with a host name rather than a string representation of an IP address, the address family of the <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> will remain <ph id=\"ph2\">&lt;xref:System.Net.Sockets.AddressFamily.Unknown&gt;</ph> even after use.","pos":[0,230],"source":"When using this constructor with a host name rather than a string representation of an IP address, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.AddressFamily%2A&gt;</ph> property of any <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph> that is created by calls to the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A&gt;</ph> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).","pos":[231,572],"source":" The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved)."}]}]}],"pos":[3118,4066],"yaml":true,"extradata":"MT"},{"content":"The host name or a string representation of the IP address.","nodes":[{"pos":[0,59],"content":"The host name or a string representation of the IP address.","nodes":[{"content":"The host name or a string representation of the IP address.","pos":[0,59]}]}],"pos":[4209,4269],"yaml":true},{"content":"The port number associated with the address, or 0 to specify any available port. <code>port</code> is in host order.","nodes":[{"pos":[0,116],"content":"The port number associated with the address, or 0 to specify any available port. <code>port</code> is in host order.","nodes":[{"content":"The port number associated with the address, or 0 to specify any available port.","pos":[0,80]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">port</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in host order.","pos":[81,116],"source":"<code>port</code> is in host order."}]}],"pos":[4328,4445],"yaml":true},{"content":"The <code>host</code> parameter contains an empty string.","nodes":[{"pos":[0,57],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains an empty string.","source":"The <code>host</code> parameter contains an empty string."}],"pos":[4595,4653],"yaml":true},{"content":"The <code>host</code> parameter is a `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a <ph id=\"ph2\">`null`</ph>.","source":"The <code>host</code> parameter is a `null`."}],"pos":[4755,4800],"yaml":true},{"content":"<code>port</code> is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref>.  \n  \n -or-  \n  \n <code>port</code> is greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MinPort\"&gt;&lt;/xref&gt;</ph>.","source":"<code>port</code> is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref>."},{"pos":[89,93],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[100,185],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MaxPort\"&gt;&lt;/xref&gt;</ph>.","source":"<code>port</code> is greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>."}],"pos":[4914,5110],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.DnsEndPoint\"></xref> class with the host name or string representation of an IP address, a port number, and an address family.","nodes":[{"pos":[0,183],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph> class with the host name or string representation of an IP address, a port number, and an address family.","source":"Initializes a new instance of the <xref href=\"System.Net.DnsEndPoint\"></xref> class with the host name or string representation of an IP address, a port number, and an address family."}],"pos":[6591,6775],"yaml":true},{"content":"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%2CSystem.Net.Sockets.AddressFamily%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address, a port, and an address family.  \n  \n When using the constructor with a host name rather than a string representation of an IP address, the address family restricts DNS resolution to prefer addresses of the specified address family value. When using the constructor with the address family specified as <xref:System.Net.Sockets.AddressFamily.Unknown>, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use. The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).","nodes":[{"pos":[0,285],"content":"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%2CSystem.Net.Sockets.AddressFamily%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address, a port, and an address family.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%2CSystem.Net.Sockets.AddressFamily%29&gt;</ph> constructor can be used to initialize a <ph id=\"ph2\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> class using either a host name or a string that represents an IP address, a port, and an address family.","pos":[0,285],"source":"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%2CSystem.Net.Sockets.AddressFamily%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address, a port, and an address family."}]},{"pos":[292,1079],"content":"When using the constructor with a host name rather than a string representation of an IP address, the address family restricts DNS resolution to prefer addresses of the specified address family value. When using the constructor with the address family specified as <xref:System.Net.Sockets.AddressFamily.Unknown>, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use. The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).","nodes":[{"content":"When using the constructor with a host name rather than a string representation of an IP address, the address family restricts DNS resolution to prefer addresses of the specified address family value. When using the constructor with the address family specified as <xref:System.Net.Sockets.AddressFamily.Unknown>, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use. The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).","pos":[0,787],"nodes":[{"content":"When using the constructor with a host name rather than a string representation of an IP address, the address family restricts DNS resolution to prefer addresses of the specified address family value.","pos":[0,200]},{"content":"When using the constructor with the address family specified as <ph id=\"ph1\">&lt;xref:System.Net.Sockets.AddressFamily.Unknown&gt;</ph>, the address family of the <ph id=\"ph2\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> will remain <ph id=\"ph3\">&lt;xref:System.Net.Sockets.AddressFamily.Unknown&gt;</ph> even after use.","pos":[201,445],"source":" When using the constructor with the address family specified as <xref:System.Net.Sockets.AddressFamily.Unknown>, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.AddressFamily%2A&gt;</ph> property of any <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph> that is created by calls to the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A&gt;</ph> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).","pos":[446,787],"source":" The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved)."}]}]}],"pos":[6786,7870],"yaml":true,"extradata":"MT"},{"content":"The host name or a string representation of the IP address.","nodes":[{"pos":[0,59],"content":"The host name or a string representation of the IP address.","nodes":[{"content":"The host name or a string representation of the IP address.","pos":[0,59]}]}],"pos":[8061,8121],"yaml":true},{"content":"The port number associated with the address, or 0 to specify any available port. <code>port</code> is in host order.","nodes":[{"pos":[0,116],"content":"The port number associated with the address, or 0 to specify any available port. <code>port</code> is in host order.","nodes":[{"content":"The port number associated with the address, or 0 to specify any available port.","pos":[0,80]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">port</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in host order.","pos":[81,116],"source":"<code>port</code> is in host order."}]}],"pos":[8180,8297],"yaml":true},{"content":"One of the <xref href=\"System.Net.Sockets.AddressFamily\"></xref> values.","nodes":[{"pos":[0,72],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.AddressFamily\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Net.Sockets.AddressFamily\"></xref> values."}],"pos":[8385,8458],"yaml":true},{"content":"The <code>host</code> parameter contains an empty string.  \n  \n -or-  \n  \n <code>addressFamily</code> is <xref href=\"System.Net.Sockets.AddressFamily.Unknown\"></xref>.","nodes":[{"pos":[0,57],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains an empty string.","source":"The <code>host</code> parameter contains an empty string."},{"pos":[64,68],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[75,167],"content":"<ph id=\"ph1\">&lt;code&gt;addressFamily&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.AddressFamily.Unknown\"&gt;&lt;/xref&gt;</ph>.","source":"<code>addressFamily</code> is <xref href=\"System.Net.Sockets.AddressFamily.Unknown\"></xref>."}],"pos":[8608,8784],"yaml":true},{"content":"The <code>host</code> parameter is a `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">host</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a <ph id=\"ph2\">`null`</ph>.","source":"The <code>host</code> parameter is a `null`."}],"pos":[8886,8931],"yaml":true},{"content":"<code>port</code> is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref>.  \n  \n -or-  \n  \n <code>port</code> is greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MinPort\"&gt;&lt;/xref&gt;</ph>.","source":"<code>port</code> is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref>."},{"pos":[89,93],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[100,185],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MaxPort\"&gt;&lt;/xref&gt;</ph>.","source":"<code>port</code> is greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>."}],"pos":[9045,9241],"yaml":true},{"content":"Gets the Internet Protocol (IP) address family.","nodes":[{"pos":[0,47],"content":"Gets the Internet Protocol (IP) address family.","nodes":[{"content":"Gets the Internet Protocol (IP) address family.","pos":[0,47]}]}],"pos":[10474,10522],"yaml":true},{"content":"The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property indicates the address family for an instance of the <xref:System.Net.DnsEndPoint> class.","nodes":[{"pos":[0,148],"content":"The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property indicates the address family for an instance of the <xref:System.Net.DnsEndPoint> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.AddressFamily%2A&gt;</ph> property indicates the address family for an instance of the <ph id=\"ph2\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> class.","pos":[0,148],"source":"The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property indicates the address family for an instance of the <xref:System.Net.DnsEndPoint> class."}]}],"pos":[10533,10682],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.Sockets.AddressFamily\"></xref> values.","nodes":[{"pos":[0,72],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.AddressFamily\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Net.Sockets.AddressFamily\"></xref> values."}],"pos":[10853,10926],"yaml":true},{"content":"Compares two <xref href=\"System.Net.DnsEndPoint\"></xref> objects.","nodes":[{"pos":[0,65],"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph> objects.","source":"Compares two <xref href=\"System.Net.DnsEndPoint\"></xref> objects."}],"pos":[12251,12317],"yaml":true},{"content":"The <xref:System.Net.DnsEndPoint.Equals%2A> method compares the current <xref:System.Net.DnsEndPoint> instance with the `comparand` parameter and returns `true` if the two instances contain the same endpoint.","nodes":[{"pos":[0,208],"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.Equals%2A&gt;</ph> method compares the current <ph id=\"ph2\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> instance with the <ph id=\"ph3\">`comparand`</ph> parameter and returns <ph id=\"ph4\">`true`</ph> if the two instances contain the same endpoint.","source":"The <xref:System.Net.DnsEndPoint.Equals%2A> method compares the current <xref:System.Net.DnsEndPoint> instance with the `comparand` parameter and returns `true` if the two instances contain the same endpoint."}],"pos":[12328,12537],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.DnsEndPoint\"></xref> instance to compare to the current instance.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph> instance to compare to the current instance.","source":"A <xref href=\"System.Net.DnsEndPoint\"></xref> instance to compare to the current instance."}],"pos":[12689,12780],"yaml":true},{"content":"`true` if the two <xref href=\"System.Net.DnsEndPoint\"></xref> instances are equal; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph> instances are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Net.DnsEndPoint\"></xref> instances are equal; otherwise, `false`."}],"pos":[12838,12943],"yaml":true},{"content":"Returns a hash value for a <xref href=\"System.Net.DnsEndPoint\"></xref>.","nodes":[{"pos":[0,71],"content":"Returns a hash value for a <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a hash value for a <xref href=\"System.Net.DnsEndPoint\"></xref>."}],"pos":[14228,14300],"yaml":true},{"content":"The <xref:System.Net.DnsEndPoint.GetHashCode%2A> method returns a hash code of the <xref:System.Net.DnsEndPoint>. This value can be used as a key in hash tables.","nodes":[{"pos":[0,161],"content":"The <xref:System.Net.DnsEndPoint.GetHashCode%2A> method returns a hash code of the <xref:System.Net.DnsEndPoint>. This value can be used as a key in hash tables.","nodes":[{"content":"The <xref:System.Net.DnsEndPoint.GetHashCode%2A> method returns a hash code of the <xref:System.Net.DnsEndPoint>. This value can be used as a key in hash tables.","pos":[0,161],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.GetHashCode%2A&gt;</ph> method returns a hash code of the <ph id=\"ph2\">&lt;xref:System.Net.DnsEndPoint&gt;</ph>.","pos":[0,113],"source":"The <xref:System.Net.DnsEndPoint.GetHashCode%2A> method returns a hash code of the <xref:System.Net.DnsEndPoint>."},{"content":"This value can be used as a key in hash tables.","pos":[114,161]}]}]}],"pos":[14311,14473],"yaml":true,"extradata":"MT"},{"content":"An integer hash value for the <xref href=\"System.Net.DnsEndPoint\"></xref>.","nodes":[{"pos":[0,74],"content":"An integer hash value for the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph>.","source":"An integer hash value for the <xref href=\"System.Net.DnsEndPoint\"></xref>."}],"pos":[14607,14682],"yaml":true},{"content":"Gets the host name or string representation of the Internet Protocol (IP) address of the host.","nodes":[{"pos":[0,94],"content":"Gets the host name or string representation of the Internet Protocol (IP) address of the host.","nodes":[{"content":"Gets the host name or string representation of the Internet Protocol (IP) address of the host.","pos":[0,94]}]}],"pos":[15926,16021],"yaml":true},{"content":"The <xref:System.Net.DnsEndPoint.Host%2A> property indicates the host name or string representation of the IP address for an instance of the <xref:System.Net.DnsEndPoint> class.","nodes":[{"pos":[0,177],"content":"The <xref:System.Net.DnsEndPoint.Host%2A> property indicates the host name or string representation of the IP address for an instance of the <xref:System.Net.DnsEndPoint> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.Host%2A&gt;</ph> property indicates the host name or string representation of the IP address for an instance of the <ph id=\"ph2\">&lt;xref:System.Net.DnsEndPoint&gt;</ph> class.","pos":[0,177],"source":"The <xref:System.Net.DnsEndPoint.Host%2A> property indicates the host name or string representation of the IP address for an instance of the <xref:System.Net.DnsEndPoint> class."}]}],"pos":[16032,16210],"yaml":true,"extradata":"MT"},{"content":"A host name or string representation of an IP address.","nodes":[{"pos":[0,54],"content":"A host name or string representation of an IP address.","nodes":[{"content":"A host name or string representation of an IP address.","pos":[0,54]}]}],"pos":[16318,16373],"yaml":true},{"content":"Gets the port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>.","nodes":[{"pos":[0,72],"content":"Gets the port number of the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>."}],"pos":[17610,17683],"yaml":true},{"content":"An integer value in the range 0 to 0xffff indicating the port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>.","nodes":[{"pos":[0,120],"content":"An integer value in the range 0 to 0xffff indicating the port number of the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph>.","source":"An integer value in the range 0 to 0xffff indicating the port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>."}],"pos":[17787,17908],"yaml":true},{"content":"Returns the host name or string representation of the IP address and port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>.","nodes":[{"pos":[0,132],"content":"Returns the host name or string representation of the IP address and port number of the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the host name or string representation of the IP address and port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>."}],"pos":[19173,19306],"yaml":true},{"content":"The <xref:System.Net.DnsEndPoint.ToString%2A> method returns a string that contains the address family, the host name or IP address string, and the port number.","nodes":[{"pos":[0,160],"content":"The <xref:System.Net.DnsEndPoint.ToString%2A> method returns a string that contains the address family, the host name or IP address string, and the port number.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsEndPoint.ToString%2A&gt;</ph> method returns a string that contains the address family, the host name or IP address string, and the port number.","pos":[0,160],"source":"The <xref:System.Net.DnsEndPoint.ToString%2A> method returns a string that contains the address family, the host name or IP address string, and the port number."}]}],"pos":[19317,19478],"yaml":true,"extradata":"MT"},{"content":"A string containing the address family, host name or IP address string, and the port number of the specified <xref href=\"System.Net.DnsEndPoint\"></xref>.","nodes":[{"pos":[0,153],"content":"A string containing the address family, host name or IP address string, and the port number of the specified <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsEndPoint\"&gt;&lt;/xref&gt;</ph>.","source":"A string containing the address family, host name or IP address string, and the port number of the specified <xref href=\"System.Net.DnsEndPoint\"></xref>."}],"pos":[19613,19767],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.DnsEndPoint\n  commentId: T:System.Net.DnsEndPoint\n  id: DnsEndPoint\n  children:\n  - System.Net.DnsEndPoint.#ctor(System.String,System.Int32)\n  - System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)\n  - System.Net.DnsEndPoint.AddressFamily\n  - System.Net.DnsEndPoint.Equals(System.Object)\n  - System.Net.DnsEndPoint.GetHashCode\n  - System.Net.DnsEndPoint.Host\n  - System.Net.DnsEndPoint.Port\n  - System.Net.DnsEndPoint.ToString\n  langs:\n  - csharp\n  name: DnsEndPoint\n  nameWithType: DnsEndPoint\n  fullName: System.Net.DnsEndPoint\n  type: Class\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Represents a network endpoint as a host name or a string representation of an IP address and a port number.\n  remarks: The <xref:System.Net.DnsEndPoint> class contains a host name or an IP address and remote port information needed by an application to connect to a service on a host. By combining the host name or IP address and port number of a service, the <xref:System.Net.DnsEndPoint> class forms a connection point to a service.\n  syntax:\n    content: 'public class DnsEndPoint : System.Net.EndPoint'\n  inheritance:\n  - System.Object\n  - System.Net.EndPoint\n  implements: []\n  inheritedMembers:\n  - System.Net.EndPoint.Create(System.Net.SocketAddress)\n  - System.Net.EndPoint.Serialize\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsEndPoint.#ctor(System.String,System.Int32)\n  commentId: M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)\n  id: '#ctor(System.String,System.Int32)'\n  parent: System.Net.DnsEndPoint\n  langs:\n  - csharp\n  name: DnsEndPoint(String, Int32)\n  nameWithType: DnsEndPoint.DnsEndPoint(String, Int32)\n  fullName: DnsEndPoint.DnsEndPoint(String, Int32)\n  type: Constructor\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Initializes a new instance of the <xref href=\"System.Net.DnsEndPoint\"></xref> class with the host name or string representation of an IP address and a port number.\n  remarks: \"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address and a port. This constructor sets the <xref:System.Net.DnsEndPoint.AddressFamily%2A> property to <xref:System.Net.Sockets.AddressFamily.Unknown>.  \\n  \\n When using this constructor with a host name rather than a string representation of an IP address, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use. The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).\"\n  syntax:\n    content: public DnsEndPoint (string host, int port);\n    parameters:\n    - id: host\n      type: System.String\n      description: The host name or a string representation of the IP address.\n    - id: port\n      type: System.Int32\n      description: The port number associated with the address, or 0 to specify any available port. <code>port</code> is in host order.\n  overload: System.Net.DnsEndPoint.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>host</code> parameter contains an empty string.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>host</code> parameter is a `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>port</code> is less than <xref href=\\\"System.Net.IPEndPoint.MinPort\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>port</code> is greater than <xref href=\\\"System.Net.IPEndPoint.MaxPort\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)\n  commentId: M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)\n  id: '#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)'\n  parent: System.Net.DnsEndPoint\n  langs:\n  - csharp\n  name: DnsEndPoint(String, Int32, AddressFamily)\n  nameWithType: DnsEndPoint.DnsEndPoint(String, Int32, AddressFamily)\n  fullName: DnsEndPoint.DnsEndPoint(String, Int32, AddressFamily)\n  type: Constructor\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Initializes a new instance of the <xref href=\"System.Net.DnsEndPoint\"></xref> class with the host name or string representation of an IP address, a port number, and an address family.\n  remarks: \"The <xref:System.Net.DnsEndPoint.%23ctor%28System.String%2CSystem.Int32%2CSystem.Net.Sockets.AddressFamily%29> constructor can be used to initialize a <xref:System.Net.DnsEndPoint> class using either a host name or a string that represents an IP address, a port, and an address family.  \\n  \\n When using the constructor with a host name rather than a string representation of an IP address, the address family restricts DNS resolution to prefer addresses of the specified address family value. When using the constructor with the address family specified as <xref:System.Net.Sockets.AddressFamily.Unknown>, the address family of the <xref:System.Net.DnsEndPoint> will remain <xref:System.Net.Sockets.AddressFamily.Unknown> even after use. The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property of any <xref:System.Net.Sockets.Socket> that is created by calls to the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will be the address family of the first address to which a connection can be successfully established (not necessarily the first address to be resolved).\"\n  syntax:\n    content: public DnsEndPoint (string host, int port, System.Net.Sockets.AddressFamily addressFamily);\n    parameters:\n    - id: host\n      type: System.String\n      description: The host name or a string representation of the IP address.\n    - id: port\n      type: System.Int32\n      description: The port number associated with the address, or 0 to specify any available port. <code>port</code> is in host order.\n    - id: addressFamily\n      type: System.Net.Sockets.AddressFamily\n      description: One of the <xref href=\"System.Net.Sockets.AddressFamily\"></xref> values.\n  overload: System.Net.DnsEndPoint.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>host</code> parameter contains an empty string.  \\n  \\n -or-  \\n  \\n <code>addressFamily</code> is <xref href=\\\"System.Net.Sockets.AddressFamily.Unknown\\\"></xref>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>host</code> parameter is a `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>port</code> is less than <xref href=\\\"System.Net.IPEndPoint.MinPort\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>port</code> is greater than <xref href=\\\"System.Net.IPEndPoint.MaxPort\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsEndPoint.AddressFamily\n  commentId: P:System.Net.DnsEndPoint.AddressFamily\n  id: AddressFamily\n  parent: System.Net.DnsEndPoint\n  langs:\n  - csharp\n  name: AddressFamily\n  nameWithType: DnsEndPoint.AddressFamily\n  fullName: DnsEndPoint.AddressFamily\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Gets the Internet Protocol (IP) address family.\n  remarks: The <xref:System.Net.DnsEndPoint.AddressFamily%2A> property indicates the address family for an instance of the <xref:System.Net.DnsEndPoint> class.\n  syntax:\n    content: public override System.Net.Sockets.AddressFamily AddressFamily { get; }\n    return:\n      type: System.Net.Sockets.AddressFamily\n      description: One of the <xref href=\"System.Net.Sockets.AddressFamily\"></xref> values.\n  overload: System.Net.DnsEndPoint.AddressFamily*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsEndPoint.Equals(System.Object)\n  commentId: M:System.Net.DnsEndPoint.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.DnsEndPoint\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DnsEndPoint.Equals(Object)\n  fullName: DnsEndPoint.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Compares two <xref href=\"System.Net.DnsEndPoint\"></xref> objects.\n  remarks: The <xref:System.Net.DnsEndPoint.Equals%2A> method compares the current <xref:System.Net.DnsEndPoint> instance with the `comparand` parameter and returns `true` if the two instances contain the same endpoint.\n  syntax:\n    content: public override bool Equals (object comparand);\n    parameters:\n    - id: comparand\n      type: System.Object\n      description: A <xref href=\"System.Net.DnsEndPoint\"></xref> instance to compare to the current instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Net.DnsEndPoint\"></xref> instances are equal; otherwise, `false`.'\n  overload: System.Net.DnsEndPoint.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsEndPoint.GetHashCode\n  commentId: M:System.Net.DnsEndPoint.GetHashCode\n  id: GetHashCode\n  parent: System.Net.DnsEndPoint\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DnsEndPoint.GetHashCode()\n  fullName: DnsEndPoint.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Returns a hash value for a <xref href=\"System.Net.DnsEndPoint\"></xref>.\n  remarks: The <xref:System.Net.DnsEndPoint.GetHashCode%2A> method returns a hash code of the <xref:System.Net.DnsEndPoint>. This value can be used as a key in hash tables.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer hash value for the <xref href=\"System.Net.DnsEndPoint\"></xref>.\n  overload: System.Net.DnsEndPoint.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsEndPoint.Host\n  commentId: P:System.Net.DnsEndPoint.Host\n  id: Host\n  parent: System.Net.DnsEndPoint\n  langs:\n  - csharp\n  name: Host\n  nameWithType: DnsEndPoint.Host\n  fullName: DnsEndPoint.Host\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Gets the host name or string representation of the Internet Protocol (IP) address of the host.\n  remarks: The <xref:System.Net.DnsEndPoint.Host%2A> property indicates the host name or string representation of the IP address for an instance of the <xref:System.Net.DnsEndPoint> class.\n  syntax:\n    content: public string Host { get; }\n    return:\n      type: System.String\n      description: A host name or string representation of an IP address.\n  overload: System.Net.DnsEndPoint.Host*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsEndPoint.Port\n  commentId: P:System.Net.DnsEndPoint.Port\n  id: Port\n  parent: System.Net.DnsEndPoint\n  langs:\n  - csharp\n  name: Port\n  nameWithType: DnsEndPoint.Port\n  fullName: DnsEndPoint.Port\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Gets the port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>.\n  syntax:\n    content: public int Port { get; }\n    return:\n      type: System.Int32\n      description: An integer value in the range 0 to 0xffff indicating the port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>.\n  overload: System.Net.DnsEndPoint.Port*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsEndPoint.ToString\n  commentId: M:System.Net.DnsEndPoint.ToString\n  id: ToString\n  parent: System.Net.DnsEndPoint\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DnsEndPoint.ToString()\n  fullName: DnsEndPoint.ToString()\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Returns the host name or string representation of the IP address and port number of the <xref href=\"System.Net.DnsEndPoint\"></xref>.\n  remarks: The <xref:System.Net.DnsEndPoint.ToString%2A> method returns a string that contains the address family, the host name or IP address string, and the port number.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the address family, host name or IP address string, and the port number of the specified <xref href=\"System.Net.DnsEndPoint\"></xref>.\n  overload: System.Net.DnsEndPoint.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.EndPoint\n  parent: System.Net\n  isExternal: false\n  name: EndPoint\n  nameWithType: EndPoint\n  fullName: System.Net.EndPoint\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Net.DnsEndPoint.#ctor(System.String,System.Int32)\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: DnsEndPoint(String, Int32)\n  nameWithType: DnsEndPoint.DnsEndPoint(String, Int32)\n  fullName: DnsEndPoint.DnsEndPoint(String, Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: DnsEndPoint(String, Int32, AddressFamily)\n  nameWithType: DnsEndPoint.DnsEndPoint(String, Int32, AddressFamily)\n  fullName: DnsEndPoint.DnsEndPoint(String, Int32, AddressFamily)\n- uid: System.Net.Sockets.AddressFamily\n  parent: System.Net.Sockets\n  isExternal: false\n  name: AddressFamily\n  nameWithType: AddressFamily\n  fullName: System.Net.Sockets.AddressFamily\n- uid: System.Net.DnsEndPoint.AddressFamily\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: AddressFamily\n  nameWithType: DnsEndPoint.AddressFamily\n  fullName: DnsEndPoint.AddressFamily\n- uid: System.Net.DnsEndPoint.Equals(System.Object)\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DnsEndPoint.Equals(Object)\n  fullName: DnsEndPoint.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.DnsEndPoint.GetHashCode\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DnsEndPoint.GetHashCode()\n  fullName: DnsEndPoint.GetHashCode()\n- uid: System.Net.DnsEndPoint.Host\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: Host\n  nameWithType: DnsEndPoint.Host\n  fullName: DnsEndPoint.Host\n- uid: System.Net.DnsEndPoint.Port\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: Port\n  nameWithType: DnsEndPoint.Port\n  fullName: DnsEndPoint.Port\n- uid: System.Net.DnsEndPoint.ToString\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: ToString()\n  nameWithType: DnsEndPoint.ToString()\n  fullName: DnsEndPoint.ToString()\n- uid: System.Net.DnsEndPoint.#ctor*\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: DnsEndPoint\n  nameWithType: DnsEndPoint.DnsEndPoint\n  fullName: DnsEndPoint.DnsEndPoint\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n- uid: System.Net.DnsEndPoint.AddressFamily*\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: AddressFamily\n  nameWithType: DnsEndPoint.AddressFamily\n  fullName: DnsEndPoint.AddressFamily\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n- uid: System.Net.DnsEndPoint.Equals*\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: Equals\n  nameWithType: DnsEndPoint.Equals\n  fullName: DnsEndPoint.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n- uid: System.Net.DnsEndPoint.GetHashCode*\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DnsEndPoint.GetHashCode\n  fullName: DnsEndPoint.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n- uid: System.Net.DnsEndPoint.Host*\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: Host\n  nameWithType: DnsEndPoint.Host\n  fullName: DnsEndPoint.Host\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n- uid: System.Net.DnsEndPoint.Port*\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: Port\n  nameWithType: DnsEndPoint.Port\n  fullName: DnsEndPoint.Port\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n- uid: System.Net.DnsEndPoint.ToString*\n  parent: System.Net.DnsEndPoint\n  isExternal: false\n  name: ToString\n  nameWithType: DnsEndPoint.ToString\n  fullName: DnsEndPoint.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsEndPoint.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Net.EndPoint.Create(System.Net.SocketAddress)\n  parent: System.Net.EndPoint\n  isExternal: false\n  name: Create(SocketAddress)\n  nameWithType: EndPoint.Create(SocketAddress)\n  fullName: EndPoint.Create(SocketAddress)\n- uid: System.Net.EndPoint.Serialize\n  parent: System.Net.EndPoint\n  isExternal: false\n  name: Serialize()\n  nameWithType: EndPoint.Serialize()\n  fullName: EndPoint.Serialize()\n"}