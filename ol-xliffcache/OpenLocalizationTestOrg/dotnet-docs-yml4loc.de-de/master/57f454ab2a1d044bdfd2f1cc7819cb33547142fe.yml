### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.CounterSampleCalculator
  commentId: T:System.Diagnostics.CounterSampleCalculator
  id: CounterSampleCalculator
  children:
  - System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  langs:
  - csharp
  name: CounterSampleCalculator
  nameWithType: CounterSampleCalculator
  fullName: System.Diagnostics.CounterSampleCalculator
  type: Class
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Provides a set of utility functions for interpreting performance counter data.
  syntax:
    content: public static class CounterSampleCalculator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSampleCalculator.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)
  commentId: M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)
  id: ComputeCounterValue(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSampleCalculator
  langs:
  - csharp
  name: ComputeCounterValue(CounterSample)
  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample)
  fullName: CounterSampleCalculator.ComputeCounterValue(CounterSample)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Computes the calculated value of a single raw counter sample.
  remarks: "The <xref:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue%28System.Diagnostics.CounterSample%29> method overload returns meaningful results only for performance counters of the following <xref:System.Diagnostics.PerformanceCounterType>:  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.RawFraction>  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItems32>  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32>  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItems64>  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64>  \n  \n For other counter types, this overload always returns a value of 0 (zero)."
  syntax:
    content: public static float ComputeCounterValue (System.Diagnostics.CounterSample newSample);
    parameters:
    - id: newSample
      type: System.Diagnostics.CounterSample
      description: A <xref href="System.Diagnostics.CounterSample"></xref> that indicates the most recent sample the system has taken.
    return:
      type: System.Single
      description: A floating-point representation of the performance counter's calculated value.
  overload: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSampleCalculator.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  commentId: M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  id: ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSampleCalculator
  langs:
  - csharp
  name: ComputeCounterValue(CounterSample, CounterSample)
  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample, CounterSample)
  fullName: CounterSampleCalculator.ComputeCounterValue(CounterSample, CounterSample)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Computes the calculated value of two raw counter samples.
  remarks: ''
  example:
  - "The following example demonstrates the use of the <xref:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29> method overload to calculate the value of two raw counter samples.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: >-
      [System.MonoTODO("What's the algorithm?")]

      public static float ComputeCounterValue (System.Diagnostics.CounterSample oldSample, System.Diagnostics.CounterSample newSample);
    parameters:
    - id: oldSample
      type: System.Diagnostics.CounterSample
      description: A <xref href="System.Diagnostics.CounterSample"></xref> that indicates a previous sample the system has taken.
    - id: newSample
      type: System.Diagnostics.CounterSample
      description: A <xref href="System.Diagnostics.CounterSample"></xref> that indicates the most recent sample the system has taken.
    return:
      type: System.Single
      description: A floating-point representation of the performance counter's calculated value.
  overload: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>oldSample</code> uses a counter type that is different from <code>newSample</code>.
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: <code>newSample</code> counter type has a Performance Data Helper (PDH) error. For more information, see "Checking PDH Interface Return Values" in the Win32 and COM Development section of this documentation.
  attributes:
  - type: System.MonoTODO
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSampleCalculator.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSampleCalculator
  isExternal: false
  name: ComputeCounterValue(CounterSample)
  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample)
  fullName: CounterSampleCalculator.ComputeCounterValue(CounterSample)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Diagnostics.CounterSample
  parent: System.Diagnostics
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSampleCalculator
  isExternal: false
  name: ComputeCounterValue(CounterSample, CounterSample)
  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample, CounterSample)
  fullName: CounterSampleCalculator.ComputeCounterValue(CounterSample, CounterSample)
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*
  parent: System.Diagnostics.CounterSampleCalculator
  isExternal: false
  name: ComputeCounterValue
  nameWithType: CounterSampleCalculator.ComputeCounterValue
  fullName: CounterSampleCalculator.ComputeCounterValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSampleCalculator.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
