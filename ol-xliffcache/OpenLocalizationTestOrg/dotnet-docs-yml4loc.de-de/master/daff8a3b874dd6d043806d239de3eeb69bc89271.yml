### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ServiceContainer
  commentId: T:System.ComponentModel.Design.ServiceContainer
  id: ServiceContainer
  children:
  - System.ComponentModel.Design.ServiceContainer.#ctor
  - System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.DefaultServices
  - System.ComponentModel.Design.ServiceContainer.Dispose
  - System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
  type: Class
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Provides a simple implementation of the <xref href="System.ComponentModel.Design.IServiceContainer"></xref> interface. This class cannot be inherited.
  remarks: "The <xref:System.ComponentModel.Design.ServiceContainer> object can be used to store and provide services. <xref:System.ComponentModel.Design.ServiceContainer> implements the <xref:System.ComponentModel.Design.IServiceContainer> interface.  \n  \n The <xref:System.ComponentModel.Design.ServiceContainer> object can be created using a constructor that adds a parent <xref:System.ComponentModel.Design.IServiceContainer> through which services can be optionally added to or removed from all parent <xref:System.ComponentModel.Design.IServiceContainer> objects, including the immediate parent <xref:System.ComponentModel.Design.IServiceContainer>. To add or remove a service from all <xref:System.ComponentModel.Design.IServiceContainer> implementations that are linked to this <xref:System.ComponentModel.Design.IServiceContainer> through parenting, call the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> or <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> method overload that accepts a Boolean value indicating whether to promote the service request.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.SharedState>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)."
  example:
  - "The following example program demonstrates service chaining and the resultant service availability of a chain of linked <xref:System.ComponentModel.Design.ServiceContainer> objects. The program provides a user interface that allows you to see the availability of services within a chain of linked services, and uses the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>, <xref:System.ComponentModel.Design.ServiceContainer.GetService%2A>, and <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> methods as well as linked service containers.  \n  \n [!code-cpp[ServiceArchitectureExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceArchitectureExample/CPP/serviceform.cpp#1)]\n [!code-csharp[ServiceArchitectureExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceArchitectureExample/CS/serviceform.cs#1)]\n [!code-vb[ServiceArchitectureExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceArchitectureExample/VB/serviceform.vb#1)]"
  syntax:
    content: 'public class ServiceContainer : IDisposable, IServiceProvider, System.ComponentModel.Design.IServiceContainer'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.IServiceContainer
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.#ctor
  commentId: M:System.ComponentModel.Design.ServiceContainer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
  fullName: ServiceContainer.ServiceContainer()
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Initializes a new instance of the <xref href="System.ComponentModel.Design.ServiceContainer"></xref> class.
  syntax:
    content: public ServiceContainer ();
    parameters: []
  overload: System.ComponentModel.Design.ServiceContainer.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  commentId: M:System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: ServiceContainer(IServiceProvider)
  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)
  fullName: ServiceContainer.ServiceContainer(IServiceProvider)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Initializes a new instance of the <xref href="System.ComponentModel.Design.ServiceContainer"></xref> class using the specified parent service provider.
  remarks: The service container uses this service object provider to retrieve services, if they are not available locally in the container.
  syntax:
    content: public ServiceContainer (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: A parent service provider.
  overload: System.ComponentModel.Design.ServiceContainer.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  commentId: M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type, ServiceCreatorCallback)
  nameWithType: ServiceContainer.AddService(Type, ServiceCreatorCallback)
  fullName: ServiceContainer.AddService(Type, ServiceCreatorCallback)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Adds the specified service to the service container.
  remarks: ''
  example:
  - "The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cpp[ServiceContainerExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#3)]\n [!code-csharp[ServiceContainerExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#3)]\n [!code-vb[ServiceContainerExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#3)]"
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: The type of service to add.
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>serviceType</code> or <code>callback</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A service of type <code>serviceType</code> already exists in the container.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  commentId: M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type, Object)
  nameWithType: ServiceContainer.AddService(Type, Object)
  fullName: ServiceContainer.AddService(Type, Object)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Adds the specified service to the service container.
  remarks: ''
  example:
  - "The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cpp[ServiceContainerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#2)]\n [!code-csharp[ServiceContainerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#2)]\n [!code-vb[ServiceContainerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#2)]"
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance);
    parameters:
    - id: serviceType
      type: System.Type
      description: The type of service to add.
    - id: serviceInstance
      type: System.Object
      description: An instance of the service to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>serviceType</code> or <code>serviceInstance</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A service of type <code>serviceType</code> already exists in the container.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  commentId: M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type, ServiceCreatorCallback, Boolean)
  nameWithType: ServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)
  fullName: ServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Adds the specified service to the service container.
  syntax:
    content: public virtual void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: The type of service to add.
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.
    - id: promote
      type: System.Boolean
      description: '`true` if this service should be added to any parent service containers; otherwise, `false`.'
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>serviceType</code> or <code>callback</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A service of type <code>serviceType</code> already exists in the container.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  commentId: M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  id: AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type, Object, Boolean)
  nameWithType: ServiceContainer.AddService(Type, Object, Boolean)
  fullName: ServiceContainer.AddService(Type, Object, Boolean)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Adds the specified service to the service container.
  syntax:
    content: public virtual void AddService (Type serviceType, object serviceInstance, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: The type of service to add.
    - id: serviceInstance
      type: System.Object
      description: An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.
    - id: promote
      type: System.Boolean
      description: '`true` if this service should be added to any parent service containers; otherwise, `false`.'
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>serviceType</code> or <code>serviceInstance</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A service of type <code>serviceType</code> already exists in the container.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices
  commentId: P:System.ComponentModel.Design.ServiceContainer.DefaultServices
  id: DefaultServices
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: ServiceContainer.DefaultServices
  type: Property
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Gets the default services implemented directly by <xref href="System.ComponentModel.Design.ServiceContainer"></xref>.
  remarks: This property returns the default services that are implemented directly on this <xref:System.ComponentModel.Design.IServiceContainer>. the default implementation of this property is to return the <xref:System.ComponentModel.Design.IServiceContainer> and <xref:System.ComponentModel.Design.ServiceContainer> types. You may override this property and return your own types, modifying the default behavior of <xref:System.ComponentModel.Component.GetService%2A>.
  syntax:
    content: protected virtual Type[] DefaultServices { get; }
    return:
      type: System.Type[]
      description: The default services.
  overload: System.ComponentModel.Design.ServiceContainer.DefaultServices*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.Dispose
  commentId: M:System.ComponentModel.Design.ServiceContainer.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: Dispose()
  nameWithType: ServiceContainer.Dispose()
  fullName: ServiceContainer.Dispose()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Disposes this service container.
  remarks: "<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.  \n  \n Call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ServiceContainer>. The <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ServiceContainer> in an unusable state. After calling <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ServiceContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ServiceContainer> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ServiceContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ServiceContainer> object's `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.ServiceContainer.Dispose*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  commentId: M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ServiceContainer.Dispose(Boolean)
  fullName: ServiceContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Disposes this service container.
  remarks: "<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> walks all instantiated services within the container and disposes any that implement <xref:System.IDisposable>, and clears the service list.  \n  \n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ServiceContainer> references. This method invokes the `Dispose()` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` if the <xref href="System.ComponentModel.Design.ServiceContainer"></xref> is in the process of being disposed of; otherwise, `false`.'
  overload: System.ComponentModel.Design.ServiceContainer.Dispose*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  commentId: M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: ServiceContainer.GetService(Type)
  fullName: ServiceContainer.GetService(Type)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Gets the requested service.
  syntax:
    content: public virtual object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: The type of service to retrieve.
    return:
      type: System.Object
      description: An instance of the service if it could be found, or `null` if it could not be found.
  overload: System.ComponentModel.Design.ServiceContainer.GetService*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  commentId: M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  id: RemoveService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: RemoveService(Type)
  nameWithType: ServiceContainer.RemoveService(Type)
  fullName: ServiceContainer.RemoveService(Type)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Removes the specified service type from the service container.
  remarks: ''
  example:
  - "The following example illustrates how to remove a service from a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cpp[ServiceContainerExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#4)]\n [!code-csharp[ServiceContainerExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#4)]\n [!code-vb[ServiceContainerExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#4)]"
  syntax:
    content: public void RemoveService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: The type of service to remove.
  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>serviceType</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  commentId: M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  id: RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: RemoveService(Type, Boolean)
  nameWithType: ServiceContainer.RemoveService(Type, Boolean)
  fullName: ServiceContainer.RemoveService(Type, Boolean)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Removes the specified service type from the service container.
  syntax:
    content: public virtual void RemoveService (Type serviceType, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: The type of service to remove.
    - id: promote
      type: System.Boolean
      description: '`true` if this service should be removed from any parent service containers; otherwise, `false`.'
  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>serviceType</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ComponentModel.Design.ServiceContainer.#ctor
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
  fullName: ServiceContainer.ServiceContainer()
- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer(IServiceProvider)
  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)
  fullName: ServiceContainer.ServiceContainer(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: false
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type, ServiceCreatorCallback)
  nameWithType: ServiceContainer.AddService(Type, ServiceCreatorCallback)
  fullName: ServiceContainer.AddService(Type, ServiceCreatorCallback)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.ServiceCreatorCallback
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceCreatorCallback
  nameWithType: ServiceCreatorCallback
  fullName: System.ComponentModel.Design.ServiceCreatorCallback
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type, Object)
  nameWithType: ServiceContainer.AddService(Type, Object)
  fullName: ServiceContainer.AddService(Type, Object)
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type, ServiceCreatorCallback, Boolean)
  nameWithType: ServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)
  fullName: ServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type, Object, Boolean)
  nameWithType: ServiceContainer.AddService(Type, Object, Boolean)
  fullName: ServiceContainer.AddService(Type, Object, Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: ServiceContainer.DefaultServices
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.ServiceContainer.Dispose
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose()
  nameWithType: ServiceContainer.Dispose()
  fullName: ServiceContainer.Dispose()
- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ServiceContainer.Dispose(Boolean)
  fullName: ServiceContainer.Dispose(Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: GetService(Type)
  nameWithType: ServiceContainer.GetService(Type)
  fullName: ServiceContainer.GetService(Type)
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService(Type)
  nameWithType: ServiceContainer.RemoveService(Type)
  fullName: ServiceContainer.RemoveService(Type)
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService(Type, Boolean)
  nameWithType: ServiceContainer.RemoveService(Type, Boolean)
  fullName: ServiceContainer.RemoveService(Type, Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.#ctor*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer.ServiceContainer
  fullName: ServiceContainer.ServiceContainer
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
- uid: System.ComponentModel.Design.ServiceContainer.AddService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService
  nameWithType: ServiceContainer.AddService
  fullName: ServiceContainer.AddService
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: ServiceContainer.DefaultServices
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
- uid: System.ComponentModel.Design.ServiceContainer.Dispose*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose
  nameWithType: ServiceContainer.Dispose
  fullName: ServiceContainer.Dispose
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
- uid: System.ComponentModel.Design.ServiceContainer.GetService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: GetService
  nameWithType: ServiceContainer.GetService
  fullName: ServiceContainer.GetService
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService
  nameWithType: ServiceContainer.RemoveService
  fullName: ServiceContainer.RemoveService
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ServiceContainer.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ComponentModel.Design.IServiceContainer
  parent: System.ComponentModel.Design
  isExternal: false
  name: IServiceContainer
  nameWithType: IServiceContainer
  fullName: System.ComponentModel.Design.IServiceContainer
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
