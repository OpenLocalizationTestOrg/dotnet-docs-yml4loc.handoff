{"nodes":[{"content":"Represents an elliptic curve.","nodes":[{"pos":[0,29],"content":"Represents an elliptic curve.","nodes":[{"content":"Represents an elliptic curve.","pos":[0,29]}]}],"pos":[1437,1467],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.ECCurve.CurveType> field to determine whether the curve is a named curve or an explicit curve (either a prime or a characteristic 2 curve).","nodes":[{"pos":[0,182],"content":"Use the <xref:System.Security.Cryptography.ECCurve.CurveType> field to determine whether the curve is a named curve or an explicit curve (either a prime or a characteristic 2 curve).","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECCurve.CurveType&gt;</ph> field to determine whether the curve is a named curve or an explicit curve (either a prime or a characteristic 2 curve).","pos":[0,182],"source":"Use the <xref:System.Security.Cryptography.ECCurve.CurveType> field to determine whether the curve is a named curve or an explicit curve (either a prime or a characteristic 2 curve)."}]}],"pos":[1478,1661],"yaml":true,"extradata":"MT"},{"content":"The first coefficient for an explicit curve. <code>A</code> for short Weierstrass, Montgomery, and Twisted Edwards curves.","nodes":[{"pos":[0,122],"content":"The first coefficient for an explicit curve. <code>A</code> for short Weierstrass, Montgomery, and Twisted Edwards curves.","nodes":[{"content":"The first coefficient for an explicit curve.","pos":[0,44]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">A</ph><ept id=\"p1\">&lt;/code&gt;</ept> for short Weierstrass, Montgomery, and Twisted Edwards curves.","pos":[45,122],"source":"<code>A</code> for short Weierstrass, Montgomery, and Twisted Edwards curves."}]}],"pos":[2658,2781],"yaml":true},{"content":"The second coefficient for an explicit curve. <code>B</code> for short Weierstrass and <code>d</code> for Twisted Edwards curves.","nodes":[{"pos":[0,129],"content":"The second coefficient for an explicit curve. <code>B</code> for short Weierstrass and <code>d</code> for Twisted Edwards curves.","nodes":[{"content":"The second coefficient for an explicit curve.","pos":[0,45]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">B</ph><ept id=\"p1\">&lt;/code&gt;</ept> for short Weierstrass and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d</ph><ept id=\"p2\">&lt;/code&gt;</ept> for Twisted Edwards curves.","pos":[46,129],"source":"<code>B</code> for short Weierstrass and <code>d</code> for Twisted Edwards curves."}]}],"pos":[3779,3909],"yaml":true},{"content":"The cofactor of the curve.","nodes":[{"pos":[0,26],"content":"The cofactor of the curve.","nodes":[{"content":"The cofactor of the curve.","pos":[0,26]}]}],"pos":[4949,4976],"yaml":true},{"content":"Creates a named curve using the specified friendly name of the identifier.","nodes":[{"pos":[0,74],"content":"Creates a named curve using the specified friendly name of the identifier.","nodes":[{"content":"Creates a named curve using the specified friendly name of the identifier.","pos":[0,74]}]}],"pos":[6177,6252],"yaml":true},{"content":"The friendly name of the identifier.","nodes":[{"pos":[0,36],"content":"The friendly name of the identifier.","nodes":[{"content":"The friendly name of the identifier.","pos":[0,36]}]}],"pos":[6462,6499],"yaml":true},{"content":"An object representing the named curve.","nodes":[{"pos":[0,39],"content":"An object representing the named curve.","nodes":[{"content":"An object representing the named curve.","pos":[0,39]}]}],"pos":[6579,6619],"yaml":true},{"content":"<code>oidFriendlyName</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;oidFriendlyName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>oidFriendlyName</code> is `null`."}],"pos":[6808,6848],"yaml":true},{"content":"Creates a named curve using the specified <xref href=\"System.Security.Cryptography.Oid\"></xref> object.","nodes":[{"pos":[0,103],"content":"Creates a named curve using the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Oid\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates a named curve using the specified <xref href=\"System.Security.Cryptography.Oid\"></xref> object."}],"pos":[7919,8023],"yaml":true},{"content":"The object identifier to use.","nodes":[{"pos":[0,29],"content":"The object identifier to use.","nodes":[{"content":"The object identifier to use.","pos":[0,29]}]}],"pos":[8255,8285],"yaml":true},{"content":"An object representing the named curve.","nodes":[{"pos":[0,39],"content":"An object representing the named curve.","nodes":[{"content":"An object representing the named curve.","pos":[0,39]}]}],"pos":[8365,8405],"yaml":true},{"content":"Creates a named curve using the specified dotted-decimal representation of the identifier.","nodes":[{"pos":[0,90],"content":"Creates a named curve using the specified dotted-decimal representation of the identifier.","nodes":[{"content":"Creates a named curve using the specified dotted-decimal representation of the identifier.","pos":[0,90]}]}],"pos":[9521,9612],"yaml":true},{"content":"The dotted number of the identifier.","nodes":[{"pos":[0,36],"content":"The dotted number of the identifier.","nodes":[{"content":"The dotted number of the identifier.","pos":[0,36]}]}],"pos":[9801,9838],"yaml":true},{"content":"An object representing the named curve.","nodes":[{"pos":[0,39],"content":"An object representing the named curve.","nodes":[{"content":"An object representing the named curve.","pos":[0,39]}]}],"pos":[9918,9958],"yaml":true},{"content":"<code>oidValue</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;oidValue&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>oidValue</code> is `null`."}],"pos":[10140,10173],"yaml":true},{"content":"Identifies the composition of the <xref href=\"System.Security.Cryptography.ECCurve\"></xref> object.","nodes":[{"pos":[0,99],"content":"Identifies the composition of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ECCurve\"&gt;&lt;/xref&gt;</ph> object.","source":"Identifies the composition of the <xref href=\"System.Security.Cryptography.ECCurve\"></xref> object."}],"pos":[11102,11202],"yaml":true},{"content":"The generator, or base point, for operations on the curve.","nodes":[{"pos":[0,58],"content":"The generator, or base point, for operations on the curve.","nodes":[{"content":"The generator, or base point, for operations on the curve.","pos":[0,58]}]}],"pos":[12285,12344],"yaml":true},{"content":"The name of the hash algorithm which was used to generate the curve coefficients (<xref href=\"System.Security.Cryptography.ECCurve.A\"></xref> and <xref href=\"System.Security.Cryptography.ECCurve.B\"></xref>) from the <xref href=\"System.Security.Cryptography.ECCurve.Seed\"></xref> under the ANSI X9.62 generation algorithm. Applies only to explicit curves.","nodes":[{"pos":[0,354],"content":"The name of the hash algorithm which was used to generate the curve coefficients (<xref href=\"System.Security.Cryptography.ECCurve.A\"></xref> and <xref href=\"System.Security.Cryptography.ECCurve.B\"></xref>) from the <xref href=\"System.Security.Cryptography.ECCurve.Seed\"></xref> under the ANSI X9.62 generation algorithm. Applies only to explicit curves.","nodes":[{"content":"The name of the hash algorithm which was used to generate the curve coefficients (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ECCurve.A\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.ECCurve.B\"&gt;&lt;/xref&gt;</ph>) from the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.ECCurve.Seed\"&gt;&lt;/xref&gt;</ph> under the ANSI X9.62 generation algorithm.","pos":[0,321],"source":"The name of the hash algorithm which was used to generate the curve coefficients (<xref href=\"System.Security.Cryptography.ECCurve.A\"></xref> and <xref href=\"System.Security.Cryptography.ECCurve.B\"></xref>) from the <xref href=\"System.Security.Cryptography.ECCurve.Seed\"></xref> under the ANSI X9.62 generation algorithm."},{"content":"Applies only to explicit curves.","pos":[322,354]}]}],"pos":[13413,13768],"yaml":true},{"content":"Gets a value that indicates whether the curve type indicates an explicit characteristic 2 curve.","nodes":[{"pos":[0,96],"content":"Gets a value that indicates whether the curve type indicates an explicit characteristic 2 curve.","nodes":[{"content":"Gets a value that indicates whether the curve type indicates an explicit characteristic 2 curve.","pos":[0,96]}]}],"pos":[14968,15065],"yaml":true},{"content":"`true` if the curve is an explicit characteristic 2 curve; `false` if the curve is a named characteristic 2, prime, or implicit curve.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">`true`</ph> if the curve is an explicit characteristic 2 curve; <ph id=\"ph2\">`false`</ph> if the curve is a named characteristic 2, prime, or implicit curve.","source":"`true` if the curve is an explicit characteristic 2 curve; `false` if the curve is a named characteristic 2, prime, or implicit curve."}],"pos":[15185,15322],"yaml":true},{"content":"Gets a value that indicates whether the curve type indicates an explicit curve (either prime or characteristic 2).","nodes":[{"pos":[0,114],"content":"Gets a value that indicates whether the curve type indicates an explicit curve (either prime or characteristic 2).","nodes":[{"content":"Gets a value that indicates whether the curve type indicates an explicit curve (either prime or characteristic 2).","pos":[0,114]}]}],"pos":[16345,16460],"yaml":true},{"content":"`true` if the curve is an explicit curve (either prime or characteristic 2); `false` if the curve is a named or implicit curve.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the curve is an explicit curve (either prime or characteristic 2); <ph id=\"ph2\">`false`</ph> if the curve is a named or implicit curve.","source":"`true` if the curve is an explicit curve (either prime or characteristic 2); `false` if the curve is a named or implicit curve."}],"pos":[16573,16703],"yaml":true},{"content":"Gets a value that indicates whether the curve type indicates a named curve.","nodes":[{"pos":[0,75],"content":"Gets a value that indicates whether the curve type indicates a named curve.","nodes":[{"content":"Gets a value that indicates whether the curve type indicates a named curve.","pos":[0,75]}]}],"pos":[17701,17777],"yaml":true},{"content":"`true` if the curve is a named curve; `false` if the curve is an implict or an  explicit curve (either prime or characteristic 2).","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">`true`</ph> if the curve is a named curve; <ph id=\"ph2\">`false`</ph> if the curve is an implict or an  explicit curve (either prime or characteristic 2).","source":"`true` if the curve is a named curve; `false` if the curve is an implict or an  explicit curve (either prime or characteristic 2)."}],"pos":[17887,18020],"yaml":true},{"content":"Gets a value that indicates whether the curve type indicates an explicit prime curve.","nodes":[{"pos":[0,85],"content":"Gets a value that indicates whether the curve type indicates an explicit prime curve.","nodes":[{"content":"Gets a value that indicates whether the curve type indicates an explicit prime curve.","pos":[0,85]}]}],"pos":[19015,19101],"yaml":true},{"content":"`true` if the curve is an explicit prime curve; `false` if the curve is a named prime, characteristic 2 or implicit curves.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">`true`</ph> if the curve is an explicit prime curve; <ph id=\"ph2\">`false`</ph> if the curve is a named prime, characteristic 2 or implicit curves.","source":"`true` if the curve is an explicit prime curve; `false` if the curve is a named prime, characteristic 2 or implicit curves."}],"pos":[19211,19337],"yaml":true},{"content":"Gets the identifier of a named curve.","nodes":[{"pos":[0,37],"content":"Gets the identifier of a named curve.","nodes":[{"content":"Gets the identifier of a named curve.","pos":[0,37]}]}],"pos":[20308,20346],"yaml":true},{"content":"You cannot set a value for the <xref:System.Security.Cryptography.ECCurve.Oid%2A> property directly. Instead, to create a named curve, use the <xref:System.Security.Cryptography.ECCurve.CreateFromFriendlyName%2A>, the <xref:System.Security.Cryptography.ECCurve.CreateFromOid%2A> , or the <xref:System.Security.Cryptography.ECCurve.CreateFromValue%2A> methods.  \n  \n On some systems, the <xref:System.Security.Cryptography.Oid.Value%2A?displayProperty=fullName> property is the primary referenced identifier, while on others it's the <xref:System.Security.Cryptography.Oid.FriendlyName%2A?displayProperty=fullName> property.  Manually creating an <xref:System.Security.Cryptography.Oid> object with mismatched values may produce undesirable results.","nodes":[{"pos":[0,359],"content":"You cannot set a value for the <xref:System.Security.Cryptography.ECCurve.Oid%2A> property directly. Instead, to create a named curve, use the <xref:System.Security.Cryptography.ECCurve.CreateFromFriendlyName%2A>, the <xref:System.Security.Cryptography.ECCurve.CreateFromOid%2A> , or the <xref:System.Security.Cryptography.ECCurve.CreateFromValue%2A> methods.","nodes":[{"content":"You cannot set a value for the <xref:System.Security.Cryptography.ECCurve.Oid%2A> property directly. Instead, to create a named curve, use the <xref:System.Security.Cryptography.ECCurve.CreateFromFriendlyName%2A>, the <xref:System.Security.Cryptography.ECCurve.CreateFromOid%2A> , or the <xref:System.Security.Cryptography.ECCurve.CreateFromValue%2A> methods.","pos":[0,359],"nodes":[{"content":"You cannot set a value for the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECCurve.Oid%2A&gt;</ph> property directly.","pos":[0,100],"source":"You cannot set a value for the <xref:System.Security.Cryptography.ECCurve.Oid%2A> property directly."},{"content":"Instead, to create a named curve, use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECCurve.CreateFromFriendlyName%2A&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.ECCurve.CreateFromOid%2A&gt;</ph> , or the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.ECCurve.CreateFromValue%2A&gt;</ph> methods.","pos":[101,359],"source":" Instead, to create a named curve, use the <xref:System.Security.Cryptography.ECCurve.CreateFromFriendlyName%2A>, the <xref:System.Security.Cryptography.ECCurve.CreateFromOid%2A> , or the <xref:System.Security.Cryptography.ECCurve.CreateFromValue%2A> methods."}]}]},{"pos":[366,748],"content":"On some systems, the <xref:System.Security.Cryptography.Oid.Value%2A?displayProperty=fullName> property is the primary referenced identifier, while on others it's the <xref:System.Security.Cryptography.Oid.FriendlyName%2A?displayProperty=fullName> property.  Manually creating an <xref:System.Security.Cryptography.Oid> object with mismatched values may produce undesirable results.","nodes":[{"content":"On some systems, the <xref:System.Security.Cryptography.Oid.Value%2A?displayProperty=fullName> property is the primary referenced identifier, while on others it's the <xref:System.Security.Cryptography.Oid.FriendlyName%2A?displayProperty=fullName> property.  Manually creating an <xref:System.Security.Cryptography.Oid> object with mismatched values may produce undesirable results.","pos":[0,382],"nodes":[{"content":"On some systems, the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Oid.Value%2A?displayProperty=fullName&gt;</ph> property is the primary referenced identifier, while on others it's the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Oid.FriendlyName%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,257],"source":"On some systems, the <xref:System.Security.Cryptography.Oid.Value%2A?displayProperty=fullName> property is the primary referenced identifier, while on others it's the <xref:System.Security.Cryptography.Oid.FriendlyName%2A?displayProperty=fullName> property."},{"content":"Manually creating an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Oid&gt;</ph> object with mismatched values may produce undesirable results.","pos":[259,382],"source":"  Manually creating an <xref:System.Security.Cryptography.Oid> object with mismatched values may produce undesirable results."}]}]}],"pos":[20357,21110],"yaml":true,"extradata":"MT"},{"content":"The identifier of a named curve.","nodes":[{"pos":[0,32],"content":"The identifier of a named curve.","nodes":[{"content":"The identifier of a named curve.","pos":[0,32]}]}],"pos":[21262,21295],"yaml":true},{"content":"The order of the curve. Applies only to explicit curves.","nodes":[{"pos":[0,56],"content":"The order of the curve. Applies only to explicit curves.","nodes":[{"content":"The order of the curve. Applies only to explicit curves.","pos":[0,56],"nodes":[{"content":"The order of the curve.","pos":[0,23]},{"content":"Applies only to explicit curves.","pos":[24,56]}]}]}],"pos":[22271,22328],"yaml":true},{"content":"The <xref:System.Security.Cryptography.ECCurve.Order> field represents the order of the group generated by G = (x,y).","nodes":[{"pos":[0,117],"content":"The <xref:System.Security.Cryptography.ECCurve.Order> field represents the order of the group generated by G = (x,y).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECCurve.Order&gt;</ph> field represents the order of the group generated by G = (x,y).","pos":[0,117],"source":"The <xref:System.Security.Cryptography.ECCurve.Order> field represents the order of the group generated by G = (x,y)."}]}],"pos":[22339,22457],"yaml":true,"extradata":"MT"},{"content":"The curve polynomial. Applies only to characteristic 2 curves.","nodes":[{"pos":[0,62],"content":"The curve polynomial. Applies only to characteristic 2 curves.","nodes":[{"content":"The curve polynomial. Applies only to characteristic 2 curves.","pos":[0,62],"nodes":[{"content":"The curve polynomial.","pos":[0,21]},{"content":"Applies only to characteristic 2 curves.","pos":[22,62]}]}]}],"pos":[23513,23576],"yaml":true},{"content":"The prime specifying the base field. Applies only to prime curves.","nodes":[{"pos":[0,66],"content":"The prime specifying the base field. Applies only to prime curves.","nodes":[{"content":"The prime specifying the base field. Applies only to prime curves.","pos":[0,66],"nodes":[{"content":"The prime specifying the base field.","pos":[0,36]},{"content":"Applies only to prime curves.","pos":[37,66]}]}]}],"pos":[24607,24674],"yaml":true},{"content":"The seed value for coefficient generation under the ANSI X9.62 generation algorithm. Applies only to explicit curves.","nodes":[{"pos":[0,117],"content":"The seed value for coefficient generation under the ANSI X9.62 generation algorithm. Applies only to explicit curves.","nodes":[{"content":"The seed value for coefficient generation under the ANSI X9.62 generation algorithm. Applies only to explicit curves.","pos":[0,117],"nodes":[{"content":"The seed value for coefficient generation under the ANSI X9.62 generation algorithm.","pos":[0,84]},{"content":"Applies only to explicit curves.","pos":[85,117]}]}]}],"pos":[25694,25812],"yaml":true},{"content":"Validates the integrity of the current curve. Throws a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> exception if the structure is not valid.","nodes":[{"pos":[0,168],"content":"Validates the integrity of the current curve. Throws a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> exception if the structure is not valid.","nodes":[{"content":"Validates the integrity of the current curve.","pos":[0,45]},{"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CryptographicException\"&gt;&lt;/xref&gt;</ph> exception if the structure is not valid.","pos":[46,168],"source":" Throws a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> exception if the structure is not valid."}]}],"pos":[26862,27031],"yaml":true},{"content":"The curve parameters are not valid for the current curve type.","nodes":[{"pos":[0,62],"content":"The curve parameters are not valid for the current curve type.","nodes":[{"content":"The curve parameters are not valid for the current curve type.","pos":[0,62]}]}],"pos":[27319,27382],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ECCurve\n  commentId: T:System.Security.Cryptography.ECCurve\n  id: ECCurve\n  children:\n  - System.Security.Cryptography.ECCurve.A\n  - System.Security.Cryptography.ECCurve.B\n  - System.Security.Cryptography.ECCurve.Cofactor\n  - System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)\n  - System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)\n  - System.Security.Cryptography.ECCurve.CreateFromValue(System.String)\n  - System.Security.Cryptography.ECCurve.CurveType\n  - System.Security.Cryptography.ECCurve.G\n  - System.Security.Cryptography.ECCurve.Hash\n  - System.Security.Cryptography.ECCurve.IsCharacteristic2\n  - System.Security.Cryptography.ECCurve.IsExplicit\n  - System.Security.Cryptography.ECCurve.IsNamed\n  - System.Security.Cryptography.ECCurve.IsPrime\n  - System.Security.Cryptography.ECCurve.Oid\n  - System.Security.Cryptography.ECCurve.Order\n  - System.Security.Cryptography.ECCurve.Polynomial\n  - System.Security.Cryptography.ECCurve.Prime\n  - System.Security.Cryptography.ECCurve.Seed\n  - System.Security.Cryptography.ECCurve.Validate\n  langs:\n  - csharp\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n  type: Struct\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Represents an elliptic curve.\n  remarks: Use the <xref:System.Security.Cryptography.ECCurve.CurveType> field to determine whether the curve is a named curve or an explicit curve (either a prime or a characteristic 2 curve).\n  syntax:\n    content: public struct ECCurve\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.A\n  commentId: F:System.Security.Cryptography.ECCurve.A\n  id: A\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: A\n  nameWithType: ECCurve.A\n  fullName: ECCurve.A\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The first coefficient for an explicit curve. <code>A</code> for short Weierstrass, Montgomery, and Twisted Edwards curves.\n  syntax:\n    content: public byte[] A;\n    return:\n      type: System.Byte[]\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.B\n  commentId: F:System.Security.Cryptography.ECCurve.B\n  id: B\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: B\n  nameWithType: ECCurve.B\n  fullName: ECCurve.B\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The second coefficient for an explicit curve. <code>B</code> for short Weierstrass and <code>d</code> for Twisted Edwards curves.\n  syntax:\n    content: public byte[] B;\n    return:\n      type: System.Byte[]\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.Cofactor\n  commentId: F:System.Security.Cryptography.ECCurve.Cofactor\n  id: Cofactor\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Cofactor\n  nameWithType: ECCurve.Cofactor\n  fullName: ECCurve.Cofactor\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The cofactor of the curve.\n  syntax:\n    content: public byte[] Cofactor;\n    return:\n      type: System.Byte[]\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)\n  commentId: M:System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)\n  id: CreateFromFriendlyName(System.String)\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: CreateFromFriendlyName(String)\n  nameWithType: ECCurve.CreateFromFriendlyName(String)\n  fullName: ECCurve.CreateFromFriendlyName(String)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates a named curve using the specified friendly name of the identifier.\n  syntax:\n    content: public static System.Security.Cryptography.ECCurve CreateFromFriendlyName (string oidFriendlyName);\n    parameters:\n    - id: oidFriendlyName\n      type: System.String\n      description: The friendly name of the identifier.\n    return:\n      type: System.Security.Cryptography.ECCurve\n      description: An object representing the named curve.\n  overload: System.Security.Cryptography.ECCurve.CreateFromFriendlyName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>oidFriendlyName</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)\n  commentId: M:System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)\n  id: CreateFromOid(System.Security.Cryptography.Oid)\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: CreateFromOid(Oid)\n  nameWithType: ECCurve.CreateFromOid(Oid)\n  fullName: ECCurve.CreateFromOid(Oid)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates a named curve using the specified <xref href=\"System.Security.Cryptography.Oid\"></xref> object.\n  syntax:\n    content: public static System.Security.Cryptography.ECCurve CreateFromOid (System.Security.Cryptography.Oid curveOid);\n    parameters:\n    - id: curveOid\n      type: System.Security.Cryptography.Oid\n      description: The object identifier to use.\n    return:\n      type: System.Security.Cryptography.ECCurve\n      description: An object representing the named curve.\n  overload: System.Security.Cryptography.ECCurve.CreateFromOid*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.CreateFromValue(System.String)\n  commentId: M:System.Security.Cryptography.ECCurve.CreateFromValue(System.String)\n  id: CreateFromValue(System.String)\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: CreateFromValue(String)\n  nameWithType: ECCurve.CreateFromValue(String)\n  fullName: ECCurve.CreateFromValue(String)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates a named curve using the specified dotted-decimal representation of the identifier.\n  syntax:\n    content: public static System.Security.Cryptography.ECCurve CreateFromValue (string oidValue);\n    parameters:\n    - id: oidValue\n      type: System.String\n      description: The dotted number of the identifier.\n    return:\n      type: System.Security.Cryptography.ECCurve\n      description: An object representing the named curve.\n  overload: System.Security.Cryptography.ECCurve.CreateFromValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>oidValue</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.CurveType\n  commentId: F:System.Security.Cryptography.ECCurve.CurveType\n  id: CurveType\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: CurveType\n  nameWithType: ECCurve.CurveType\n  fullName: ECCurve.CurveType\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Identifies the composition of the <xref href=\"System.Security.Cryptography.ECCurve\"></xref> object.\n  syntax:\n    content: public System.Security.Cryptography.ECCurve.ECCurveType CurveType;\n    return:\n      type: System.Security.Cryptography.ECCurve+ECCurveType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.G\n  commentId: F:System.Security.Cryptography.ECCurve.G\n  id: G\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: G\n  nameWithType: ECCurve.G\n  fullName: ECCurve.G\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The generator, or base point, for operations on the curve.\n  syntax:\n    content: public System.Security.Cryptography.ECPoint G;\n    return:\n      type: System.Security.Cryptography.ECPoint\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.Hash\n  commentId: F:System.Security.Cryptography.ECCurve.Hash\n  id: Hash\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Hash\n  nameWithType: ECCurve.Hash\n  fullName: ECCurve.Hash\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The name of the hash algorithm which was used to generate the curve coefficients (<xref href=\"System.Security.Cryptography.ECCurve.A\"></xref> and <xref href=\"System.Security.Cryptography.ECCurve.B\"></xref>) from the <xref href=\"System.Security.Cryptography.ECCurve.Seed\"></xref> under the ANSI X9.62 generation algorithm. Applies only to explicit curves.\n  syntax:\n    content: public Nullable<System.Security.Cryptography.HashAlgorithmName> Hash;\n    return:\n      type: System.Nullable{System.Security.Cryptography.HashAlgorithmName}\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.IsCharacteristic2\n  commentId: P:System.Security.Cryptography.ECCurve.IsCharacteristic2\n  id: IsCharacteristic2\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: IsCharacteristic2\n  nameWithType: ECCurve.IsCharacteristic2\n  fullName: ECCurve.IsCharacteristic2\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a value that indicates whether the curve type indicates an explicit characteristic 2 curve.\n  syntax:\n    content: public bool IsCharacteristic2 { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the curve is an explicit characteristic 2 curve; `false` if the curve is a named characteristic 2, prime, or implicit curve.'\n  overload: System.Security.Cryptography.ECCurve.IsCharacteristic2*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.IsExplicit\n  commentId: P:System.Security.Cryptography.ECCurve.IsExplicit\n  id: IsExplicit\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: IsExplicit\n  nameWithType: ECCurve.IsExplicit\n  fullName: ECCurve.IsExplicit\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a value that indicates whether the curve type indicates an explicit curve (either prime or characteristic 2).\n  syntax:\n    content: public bool IsExplicit { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the curve is an explicit curve (either prime or characteristic 2); `false` if the curve is a named or implicit curve.'\n  overload: System.Security.Cryptography.ECCurve.IsExplicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.IsNamed\n  commentId: P:System.Security.Cryptography.ECCurve.IsNamed\n  id: IsNamed\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: IsNamed\n  nameWithType: ECCurve.IsNamed\n  fullName: ECCurve.IsNamed\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a value that indicates whether the curve type indicates a named curve.\n  syntax:\n    content: public bool IsNamed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the curve is a named curve; `false` if the curve is an implict or an  explicit curve (either prime or characteristic 2).'\n  overload: System.Security.Cryptography.ECCurve.IsNamed*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.IsPrime\n  commentId: P:System.Security.Cryptography.ECCurve.IsPrime\n  id: IsPrime\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: IsPrime\n  nameWithType: ECCurve.IsPrime\n  fullName: ECCurve.IsPrime\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a value that indicates whether the curve type indicates an explicit prime curve.\n  syntax:\n    content: public bool IsPrime { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the curve is an explicit prime curve; `false` if the curve is a named prime, characteristic 2 or implicit curves.'\n  overload: System.Security.Cryptography.ECCurve.IsPrime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.Oid\n  commentId: P:System.Security.Cryptography.ECCurve.Oid\n  id: Oid\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Oid\n  nameWithType: ECCurve.Oid\n  fullName: ECCurve.Oid\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets the identifier of a named curve.\n  remarks: \"You cannot set a value for the <xref:System.Security.Cryptography.ECCurve.Oid%2A> property directly. Instead, to create a named curve, use the <xref:System.Security.Cryptography.ECCurve.CreateFromFriendlyName%2A>, the <xref:System.Security.Cryptography.ECCurve.CreateFromOid%2A> , or the <xref:System.Security.Cryptography.ECCurve.CreateFromValue%2A> methods.  \\n  \\n On some systems, the <xref:System.Security.Cryptography.Oid.Value%2A?displayProperty=fullName> property is the primary referenced identifier, while on others it's the <xref:System.Security.Cryptography.Oid.FriendlyName%2A?displayProperty=fullName> property.  Manually creating an <xref:System.Security.Cryptography.Oid> object with mismatched values may produce undesirable results.\"\n  syntax:\n    content: public System.Security.Cryptography.Oid Oid { get; }\n    return:\n      type: System.Security.Cryptography.Oid\n      description: The identifier of a named curve.\n  overload: System.Security.Cryptography.ECCurve.Oid*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.Order\n  commentId: F:System.Security.Cryptography.ECCurve.Order\n  id: Order\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Order\n  nameWithType: ECCurve.Order\n  fullName: ECCurve.Order\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The order of the curve. Applies only to explicit curves.\n  remarks: The <xref:System.Security.Cryptography.ECCurve.Order> field represents the order of the group generated by G = (x,y).\n  syntax:\n    content: public byte[] Order;\n    return:\n      type: System.Byte[]\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.Polynomial\n  commentId: F:System.Security.Cryptography.ECCurve.Polynomial\n  id: Polynomial\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Polynomial\n  nameWithType: ECCurve.Polynomial\n  fullName: ECCurve.Polynomial\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The curve polynomial. Applies only to characteristic 2 curves.\n  syntax:\n    content: public byte[] Polynomial;\n    return:\n      type: System.Byte[]\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.Prime\n  commentId: F:System.Security.Cryptography.ECCurve.Prime\n  id: Prime\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Prime\n  nameWithType: ECCurve.Prime\n  fullName: ECCurve.Prime\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The prime specifying the base field. Applies only to prime curves.\n  syntax:\n    content: public byte[] Prime;\n    return:\n      type: System.Byte[]\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.Seed\n  commentId: F:System.Security.Cryptography.ECCurve.Seed\n  id: Seed\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Seed\n  nameWithType: ECCurve.Seed\n  fullName: ECCurve.Seed\n  type: Field\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: The seed value for coefficient generation under the ANSI X9.62 generation algorithm. Applies only to explicit curves.\n  syntax:\n    content: public byte[] Seed;\n    return:\n      type: System.Byte[]\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECCurve.Validate\n  commentId: M:System.Security.Cryptography.ECCurve.Validate\n  id: Validate\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Validate()\n  nameWithType: ECCurve.Validate()\n  fullName: ECCurve.Validate()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Validates the integrity of the current curve. Throws a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> exception if the structure is not valid.\n  syntax:\n    content: public void Validate ();\n    parameters: []\n  overload: System.Security.Cryptography.ECCurve.Validate*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The curve parameters are not valid for the current curve type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.ECCurve.A\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: A\n  nameWithType: ECCurve.A\n  fullName: ECCurve.A\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.ECCurve.B\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: B\n  nameWithType: ECCurve.B\n  fullName: ECCurve.B\n- uid: System.Security.Cryptography.ECCurve.Cofactor\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Cofactor\n  nameWithType: ECCurve.Cofactor\n  fullName: ECCurve.Cofactor\n- uid: System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromFriendlyName(String)\n  nameWithType: ECCurve.CreateFromFriendlyName(String)\n  fullName: ECCurve.CreateFromFriendlyName(String)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromOid(Oid)\n  nameWithType: ECCurve.CreateFromOid(Oid)\n  fullName: ECCurve.CreateFromOid(Oid)\n- uid: System.Security.Cryptography.Oid\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Oid\n  nameWithType: Oid\n  fullName: System.Security.Cryptography.Oid\n- uid: System.Security.Cryptography.ECCurve.CreateFromValue(System.String)\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromValue(String)\n  nameWithType: ECCurve.CreateFromValue(String)\n  fullName: ECCurve.CreateFromValue(String)\n- uid: System.Security.Cryptography.ECCurve.CurveType\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CurveType\n  nameWithType: ECCurve.CurveType\n  fullName: ECCurve.CurveType\n- uid: System.Security.Cryptography.ECCurve.G\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: G\n  nameWithType: ECCurve.G\n  fullName: ECCurve.G\n- uid: System.Security.Cryptography.ECPoint\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECPoint\n  nameWithType: ECPoint\n  fullName: System.Security.Cryptography.ECPoint\n- uid: System.Security.Cryptography.ECCurve.Hash\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Hash\n  nameWithType: ECCurve.Hash\n  fullName: ECCurve.Hash\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.Security.Cryptography.HashAlgorithmName\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Nullable{System.Security.Cryptography.HashAlgorithmName}\n  parent: System\n  isExternal: false\n  name: Nullable<HashAlgorithmName>\n  nameWithType: Nullable<HashAlgorithmName>\n  fullName: System.Nullable<System.Security.Cryptography.HashAlgorithmName>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Cryptography.HashAlgorithmName\n    name: HashAlgorithmName\n    nameWithType: HashAlgorithmName\n    fullName: System.Security.Cryptography.HashAlgorithmName\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.Cryptography.ECCurve.IsCharacteristic2\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsCharacteristic2\n  nameWithType: ECCurve.IsCharacteristic2\n  fullName: ECCurve.IsCharacteristic2\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECCurve.IsExplicit\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsExplicit\n  nameWithType: ECCurve.IsExplicit\n  fullName: ECCurve.IsExplicit\n- uid: System.Security.Cryptography.ECCurve.IsNamed\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsNamed\n  nameWithType: ECCurve.IsNamed\n  fullName: ECCurve.IsNamed\n- uid: System.Security.Cryptography.ECCurve.IsPrime\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsPrime\n  nameWithType: ECCurve.IsPrime\n  fullName: ECCurve.IsPrime\n- uid: System.Security.Cryptography.ECCurve.Oid\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Oid\n  nameWithType: ECCurve.Oid\n  fullName: ECCurve.Oid\n- uid: System.Security.Cryptography.ECCurve.Order\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Order\n  nameWithType: ECCurve.Order\n  fullName: ECCurve.Order\n- uid: System.Security.Cryptography.ECCurve.Polynomial\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Polynomial\n  nameWithType: ECCurve.Polynomial\n  fullName: ECCurve.Polynomial\n- uid: System.Security.Cryptography.ECCurve.Prime\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Prime\n  nameWithType: ECCurve.Prime\n  fullName: ECCurve.Prime\n- uid: System.Security.Cryptography.ECCurve.Seed\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Seed\n  nameWithType: ECCurve.Seed\n  fullName: ECCurve.Seed\n- uid: System.Security.Cryptography.ECCurve.Validate\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Validate()\n  nameWithType: ECCurve.Validate()\n  fullName: ECCurve.Validate()\n- uid: System.Security.Cryptography.ECCurve.CreateFromFriendlyName*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromFriendlyName\n  nameWithType: ECCurve.CreateFromFriendlyName\n  fullName: ECCurve.CreateFromFriendlyName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n- uid: System.Security.Cryptography.ECCurve.CreateFromOid*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromOid\n  nameWithType: ECCurve.CreateFromOid\n  fullName: ECCurve.CreateFromOid\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n- uid: System.Security.Cryptography.ECCurve.CreateFromValue*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromValue\n  nameWithType: ECCurve.CreateFromValue\n  fullName: ECCurve.CreateFromValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n- uid: System.Security.Cryptography.ECCurve.IsCharacteristic2*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsCharacteristic2\n  nameWithType: ECCurve.IsCharacteristic2\n  fullName: ECCurve.IsCharacteristic2\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n- uid: System.Security.Cryptography.ECCurve.IsExplicit*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsExplicit\n  nameWithType: ECCurve.IsExplicit\n  fullName: ECCurve.IsExplicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n- uid: System.Security.Cryptography.ECCurve.IsNamed*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsNamed\n  nameWithType: ECCurve.IsNamed\n  fullName: ECCurve.IsNamed\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n- uid: System.Security.Cryptography.ECCurve.IsPrime*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsPrime\n  nameWithType: ECCurve.IsPrime\n  fullName: ECCurve.IsPrime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n- uid: System.Security.Cryptography.ECCurve.Oid*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Oid\n  nameWithType: ECCurve.Oid\n  fullName: ECCurve.Oid\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n- uid: System.Security.Cryptography.ECCurve.Validate*\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Validate\n  nameWithType: ECCurve.Validate\n  fullName: ECCurve.Validate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECCurve.xml\n"}