### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.TransmitFileOptions
  commentId: T:System.Net.Sockets.TransmitFileOptions
  id: TransmitFileOptions
  children:
  - System.Net.Sockets.TransmitFileOptions.Disconnect
  - System.Net.Sockets.TransmitFileOptions.ReuseSocket
  - System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread
  - System.Net.Sockets.TransmitFileOptions.UseKernelApc
  - System.Net.Sockets.TransmitFileOptions.UseSystemThread
  - System.Net.Sockets.TransmitFileOptions.WriteBehind
  langs:
  - csharp
  name: TransmitFileOptions
  nameWithType: TransmitFileOptions
  fullName: System.Net.Sockets.TransmitFileOptions
  type: Enum
  assemblies:
  - System
  - netstandard
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: The <xref href="System.Net.Sockets.TransmitFileOptions"></xref> enumeration defines values used in file transfer requests.
  remarks: '**Note** The flags Disconnect and ReuseSocket return the socket to a disconnected, reusable state after the file has been transmitted. These flags should not be used on a socket where quality of service (QOS) has been requested, because the service provider might immediately delete any quality of service associated with the socket before the file transfer has completed. The best approach for a QOS-enabled socket is to call <xref:System.Net.Sockets.Socket.Close%2A> when the file transfer has completed, rather than relying on these flags.'
  example:
  - "The following example demonstrates the use of <xref:System.Net.Sockets.TransmitFileOptions.ReuseSocket> in a call to <xref:System.Net.Sockets.Socket.SendFile%2A>. The file \"test.txt\" is located in the root directory of the local machine. In this example, a prebuffer and postbuffer of data are created and sent to the remote host with the file. To use the system's default thread, UseDefaultWorkerThread is specified.  \n  \n [!code-cpp[NCLSocketEnhancements#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#4)]\n [!code-csharp[NCLSocketEnhancements#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#4)]"
  syntax:
    content: >-
      [System.Flags]

      public enum TransmitFileOptions
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.FlagsAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.TransmitFileOptions.Disconnect
  commentId: F:System.Net.Sockets.TransmitFileOptions.Disconnect
  id: Disconnect
  parent: System.Net.Sockets.TransmitFileOptions
  langs:
  - csharp
  name: Disconnect
  nameWithType: TransmitFileOptions.Disconnect
  fullName: TransmitFileOptions.Disconnect
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Start a transport-level disconnect after all the file data has been queued for transmission. When used with <xref href="System.Net.Sockets.TransmitFileOptions.ReuseSocket"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.
  syntax:
    content: Disconnect
    return:
      type: System.Net.Sockets.TransmitFileOptions
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml
- uid: System.Net.Sockets.TransmitFileOptions.ReuseSocket
  commentId: F:System.Net.Sockets.TransmitFileOptions.ReuseSocket
  id: ReuseSocket
  parent: System.Net.Sockets.TransmitFileOptions
  langs:
  - csharp
  name: ReuseSocket
  nameWithType: TransmitFileOptions.ReuseSocket
  fullName: TransmitFileOptions.ReuseSocket
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: The socket handle may be reused when the request completes. This flag is valid only if <xref href="System.Net.Sockets.TransmitFileOptions.Disconnect"></xref> is also specified. When used with <xref href="System.Net.Sockets.TransmitFileOptions.Disconnect"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.
  syntax:
    content: ReuseSocket
    return:
      type: System.Net.Sockets.TransmitFileOptions
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml
- uid: System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread
  commentId: F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread
  id: UseDefaultWorkerThread
  parent: System.Net.Sockets.TransmitFileOptions
  langs:
  - csharp
  name: UseDefaultWorkerThread
  nameWithType: TransmitFileOptions.UseDefaultWorkerThread
  fullName: TransmitFileOptions.UseDefaultWorkerThread
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Use the default thread to process long file transfer requests.
  syntax:
    content: UseDefaultWorkerThread
    return:
      type: System.Net.Sockets.TransmitFileOptions
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml
- uid: System.Net.Sockets.TransmitFileOptions.UseKernelApc
  commentId: F:System.Net.Sockets.TransmitFileOptions.UseKernelApc
  id: UseKernelApc
  parent: System.Net.Sockets.TransmitFileOptions
  langs:
  - csharp
  name: UseKernelApc
  nameWithType: TransmitFileOptions.UseKernelApc
  fullName: TransmitFileOptions.UseKernelApc
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.
  syntax:
    content: UseKernelApc
    return:
      type: System.Net.Sockets.TransmitFileOptions
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml
- uid: System.Net.Sockets.TransmitFileOptions.UseSystemThread
  commentId: F:System.Net.Sockets.TransmitFileOptions.UseSystemThread
  id: UseSystemThread
  parent: System.Net.Sockets.TransmitFileOptions
  langs:
  - csharp
  name: UseSystemThread
  nameWithType: TransmitFileOptions.UseSystemThread
  fullName: TransmitFileOptions.UseSystemThread
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Use system threads to process long file transfer requests.
  syntax:
    content: UseSystemThread
    return:
      type: System.Net.Sockets.TransmitFileOptions
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml
- uid: System.Net.Sockets.TransmitFileOptions.WriteBehind
  commentId: F:System.Net.Sockets.TransmitFileOptions.WriteBehind
  id: WriteBehind
  parent: System.Net.Sockets.TransmitFileOptions
  langs:
  - csharp
  name: WriteBehind
  nameWithType: TransmitFileOptions.WriteBehind
  fullName: TransmitFileOptions.WriteBehind
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Complete the file transfer request immediately, without pending. If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end. Do not use this flag with the <xref href="System.Net.Sockets.TransmitFileOptions.Disconnect"></xref> and <xref href="System.Net.Sockets.TransmitFileOptions.ReuseSocket"></xref> flags.
  syntax:
    content: WriteBehind
    return:
      type: System.Net.Sockets.TransmitFileOptions
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Net.Sockets.TransmitFileOptions.Disconnect
  parent: System.Net.Sockets.TransmitFileOptions
  isExternal: false
  name: Disconnect
  nameWithType: TransmitFileOptions.Disconnect
  fullName: TransmitFileOptions.Disconnect
- uid: System.Net.Sockets.TransmitFileOptions
  parent: System.Net.Sockets
  isExternal: false
  name: TransmitFileOptions
  nameWithType: TransmitFileOptions
  fullName: System.Net.Sockets.TransmitFileOptions
- uid: System.Net.Sockets.TransmitFileOptions.ReuseSocket
  parent: System.Net.Sockets.TransmitFileOptions
  isExternal: false
  name: ReuseSocket
  nameWithType: TransmitFileOptions.ReuseSocket
  fullName: TransmitFileOptions.ReuseSocket
- uid: System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread
  parent: System.Net.Sockets.TransmitFileOptions
  isExternal: false
  name: UseDefaultWorkerThread
  nameWithType: TransmitFileOptions.UseDefaultWorkerThread
  fullName: TransmitFileOptions.UseDefaultWorkerThread
- uid: System.Net.Sockets.TransmitFileOptions.UseKernelApc
  parent: System.Net.Sockets.TransmitFileOptions
  isExternal: false
  name: UseKernelApc
  nameWithType: TransmitFileOptions.UseKernelApc
  fullName: TransmitFileOptions.UseKernelApc
- uid: System.Net.Sockets.TransmitFileOptions.UseSystemThread
  parent: System.Net.Sockets.TransmitFileOptions
  isExternal: false
  name: UseSystemThread
  nameWithType: TransmitFileOptions.UseSystemThread
  fullName: TransmitFileOptions.UseSystemThread
- uid: System.Net.Sockets.TransmitFileOptions.WriteBehind
  parent: System.Net.Sockets.TransmitFileOptions
  isExternal: false
  name: WriteBehind
  nameWithType: TransmitFileOptions.WriteBehind
  fullName: TransmitFileOptions.WriteBehind
