{"nodes":[{"content":"Reads a forward-only stream of rows from a data source.","nodes":[{"pos":[0,55],"content":"Reads a forward-only stream of rows from a data source.","nodes":[{"content":"Reads a forward-only stream of rows from a data source.","pos":[0,55]}]}],"pos":[3914,3970],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Common.DbDataReader\"></xref> class.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Common.DbDataReader\"></xref> class."}],"pos":[6507,6601],"yaml":true},{"content":"Closes the <xref href=\"System.Data.Common.DbDataReader\"></xref> object.","nodes":[{"pos":[0,71],"content":"Closes the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> object.","source":"Closes the <xref href=\"System.Data.Common.DbDataReader\"></xref> object."}],"pos":[7916,7988],"yaml":true},{"content":"Gets a value indicating the depth of nesting for the current row.","nodes":[{"pos":[0,65],"content":"Gets a value indicating the depth of nesting for the current row.","nodes":[{"content":"Gets a value indicating the depth of nesting for the current row.","pos":[0,65]}]}],"pos":[9238,9304],"yaml":true},{"content":"The outermost table has a depth of zero.","nodes":[{"pos":[0,40],"content":"The outermost table has a depth of zero.","nodes":[{"content":"The outermost table has a depth of zero.","pos":[0,40]}]}],"pos":[9315,9356],"yaml":true,"extradata":"MT"},{"content":"The depth of nesting for the current row.","nodes":[{"pos":[0,41],"content":"The depth of nesting for the current row.","nodes":[{"content":"The depth of nesting for the current row.","pos":[0,41]}]}],"pos":[9470,9512],"yaml":true},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Data.Common.DbDataReader\"></xref> class.","nodes":[{"pos":[0,118],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Data.Common.DbDataReader\"></xref> class."}],"pos":[10770,10889],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>. The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method.","nodes":[{"pos":[0,393],"content":"Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>. The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph>.","pos":[0,86],"source":"Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> in an unusable state.","pos":[87,179],"source":" The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> was occupying.","pos":[180,393],"source":" After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying."}]},{"pos":[400,605],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[613,891],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method.","pos":[8,276],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph>.","pos":[1,108],"source":" Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[109,268],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method."}]}]}],"pos":[10900,11799],"yaml":true,"extradata":"MT"},{"content":"Releases the managed resources used by the <xref href=\"System.Data.Common.DbDataReader\"></xref> and optionally releases the unmanaged resources.","nodes":[{"pos":[0,144],"content":"Releases the managed resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> and optionally releases the unmanaged resources.","source":"Releases the managed resources used by the <xref href=\"System.Data.Common.DbDataReader\"></xref> and optionally releases the unmanaged resources."}],"pos":[13211,13356],"yaml":true},{"content":"This method calls <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.","nodes":[{"pos":[0,70],"content":"This method calls <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.","nodes":[{"content":"This method calls <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph>.","pos":[0,70],"source":"This method calls <xref:System.Data.SqlClient.SqlDataReader.Close%2A>."}]}],"pos":[13367,13438],"yaml":true,"extradata":"MT"},{"content":"`true` to release managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> to release managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[13592,13690],"yaml":true},{"content":"Gets the number of columns in the current row.","nodes":[{"pos":[0,46],"content":"Gets the number of columns in the current row.","nodes":[{"content":"Gets the number of columns in the current row.","pos":[0,46]}]}],"pos":[14964,15011],"yaml":true},{"content":"Includes hidden fields. Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.","nodes":[{"pos":[0,113],"content":"Includes hidden fields. Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.","nodes":[{"content":"Includes hidden fields. Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.","pos":[0,113],"nodes":[{"content":"Includes hidden fields.","pos":[0,23]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A&gt;</ph> to exclude hidden fields.","pos":[24,113],"source":" Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields."}]}]}],"pos":[15022,15136],"yaml":true,"extradata":"MT"},{"content":"The number of columns in the current row.","nodes":[{"pos":[0,41],"content":"The number of columns in the current row.","nodes":[{"content":"The number of columns in the current row.","pos":[0,41]}]}],"pos":[15255,15297],"yaml":true},{"content":"There is no current connection to an instance of SQL Server.","nodes":[{"pos":[0,60],"content":"There is no current connection to an instance of SQL Server.","nodes":[{"content":"There is no current connection to an instance of SQL Server.","pos":[0,60]}]}],"pos":[15469,15530],"yaml":true},{"content":"Gets the value of the specified column as a Boolean.","nodes":[{"pos":[0,52],"content":"Gets the value of the specified column as a Boolean.","nodes":[{"content":"Gets the value of the specified column as a Boolean.","pos":[0,52]}]}],"pos":[16795,16848],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[16996,17027],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[17085,17120],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[17290,17323],"yaml":true},{"content":"Gets the value of the specified column as a byte.","nodes":[{"pos":[0,49],"content":"Gets the value of the specified column as a byte.","nodes":[{"content":"Gets the value of the specified column as a byte.","pos":[0,49]}]}],"pos":[18570,18620],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[18765,18796],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[18851,18886],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[19053,19086],"yaml":true},{"content":"Reads a stream of bytes from the specified column, starting at location indicated by <code>dataOffset</code>, into the buffer, starting at the location indicated by <code>bufferOffset</code>.","nodes":[{"pos":[0,191],"content":"Reads a stream of bytes from the specified column, starting at location indicated by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dataOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept>, into the buffer, starting at the location indicated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">bufferOffset</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Reads a stream of bytes from the specified column, starting at location indicated by <code>dataOffset</code>, into the buffer, starting at the location indicated by <code>bufferOffset</code>."}],"pos":[20585,20777],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[20985,21016],"yaml":true},{"content":"The index within the row from which to begin the read operation.","nodes":[{"pos":[0,64],"content":"The index within the row from which to begin the read operation.","nodes":[{"content":"The index within the row from which to begin the read operation.","pos":[0,64]}]}],"pos":[21081,21146],"yaml":true},{"content":"The buffer into which to copy the data.","nodes":[{"pos":[0,39],"content":"The buffer into which to copy the data.","nodes":[{"content":"The buffer into which to copy the data.","pos":[0,39]}]}],"pos":[21208,21248],"yaml":true},{"content":"The index with the buffer to which the data will be copied.","nodes":[{"pos":[0,59],"content":"The index with the buffer to which the data will be copied.","nodes":[{"content":"The index with the buffer to which the data will be copied.","pos":[0,59]}]}],"pos":[21315,21375],"yaml":true},{"content":"The maximum number of characters to read.","nodes":[{"pos":[0,41],"content":"The maximum number of characters to read.","nodes":[{"content":"The maximum number of characters to read.","pos":[0,41]}]}],"pos":[21436,21478],"yaml":true},{"content":"The actual number of bytes read.","nodes":[{"pos":[0,32],"content":"The actual number of bytes read.","nodes":[{"content":"The actual number of bytes read.","pos":[0,32]}]}],"pos":[21534,21567],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[21735,21768],"yaml":true},{"content":"Gets the value of the specified column as a single character.","nodes":[{"pos":[0,61],"content":"Gets the value of the specified column as a single character.","nodes":[{"content":"Gets the value of the specified column as a single character.","pos":[0,61]}]}],"pos":[23015,23077],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[23222,23253],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[23308,23343],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[23510,23543],"yaml":true},{"content":"Reads a stream of characters from the specified column, starting at location indicated by <code>dataOffset</code>, into the buffer, starting at the location indicated by <code>bufferOffset</code>.","nodes":[{"pos":[0,196],"content":"Reads a stream of characters from the specified column, starting at location indicated by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dataOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept>, into the buffer, starting at the location indicated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">bufferOffset</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Reads a stream of characters from the specified column, starting at location indicated by <code>dataOffset</code>, into the buffer, starting at the location indicated by <code>bufferOffset</code>."}],"pos":[25042,25239],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[25447,25478],"yaml":true},{"content":"The index within the row from which to begin the read operation.","nodes":[{"pos":[0,64],"content":"The index within the row from which to begin the read operation.","nodes":[{"content":"The index within the row from which to begin the read operation.","pos":[0,64]}]}],"pos":[25543,25608],"yaml":true},{"content":"The buffer into which to copy the data.","nodes":[{"pos":[0,39],"content":"The buffer into which to copy the data.","nodes":[{"content":"The buffer into which to copy the data.","pos":[0,39]}]}],"pos":[25670,25710],"yaml":true},{"content":"The index with the buffer to which the data will be copied.","nodes":[{"pos":[0,59],"content":"The index with the buffer to which the data will be copied.","nodes":[{"content":"The index with the buffer to which the data will be copied.","pos":[0,59]}]}],"pos":[25777,25837],"yaml":true},{"content":"The maximum number of characters to read.","nodes":[{"pos":[0,41],"content":"The maximum number of characters to read.","nodes":[{"content":"The maximum number of characters to read.","pos":[0,41]}]}],"pos":[25898,25940],"yaml":true},{"content":"The actual number of characters read.","nodes":[{"pos":[0,37],"content":"The actual number of characters read.","nodes":[{"content":"The actual number of characters read.","pos":[0,37]}]}],"pos":[25996,26034],"yaml":true},{"content":"Returns a <xref href=\"System.Data.Common.DbDataReader\"></xref> object for the requested column ordinal.","nodes":[{"pos":[0,103],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> object for the requested column ordinal.","source":"Returns a <xref href=\"System.Data.Common.DbDataReader\"></xref> object for the requested column ordinal."}],"pos":[27352,27456],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[27619,27650],"yaml":true},{"content":"A <xref href=\"System.Data.Common.DbDataReader\"></xref> object.","nodes":[{"pos":[0,62],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Data.Common.DbDataReader\"></xref> object."}],"pos":[27725,27788],"yaml":true},{"content":"Gets name of the data type of the specified column.","nodes":[{"pos":[0,51],"content":"Gets name of the data type of the specified column.","nodes":[{"content":"Gets name of the data type of the specified column.","pos":[0,51]}]}],"pos":[29170,29222],"yaml":true},{"content":"```  \nprivate static void GetDataTypes(String connectiongString) {       \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";  \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();               \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            for (Int32 i = 0; i < reader.FieldCount; i++) {  \n               Console.WriteLine(\"ColumnName:{0,-15}DataType:{1,-15}\",reader.GetName(i),reader.GetDataTypeName(i));  \n            }  \n         }  \n      }  \n   }  \n}  \n```","nodes":[],"pos":[29233,29909],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[30064,30095],"yaml":true},{"content":"A string representing the name of the data type.","nodes":[{"pos":[0,48],"content":"A string representing the name of the data type.","nodes":[{"content":"A string representing the name of the data type.","pos":[0,48]}]}],"pos":[30152,30201],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[30376,30409],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,88],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the value of the specified column as a <xref href=\"System.DateTime\"></xref> object."}],"pos":[31680,31769],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[31922,31953],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[32012,32047],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[32218,32251],"yaml":true},{"content":"Returns a <xref href=\"System.Data.Common.DbDataReader\"></xref> object for the requested column ordinal that can be overridden with a provider-specific implementation.","nodes":[{"pos":[0,166],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> object for the requested column ordinal that can be overridden with a provider-specific implementation.","source":"Returns a <xref href=\"System.Data.Common.DbDataReader\"></xref> object for the requested column ordinal that can be overridden with a provider-specific implementation."}],"pos":[33546,33713],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[33895,33926],"yaml":true},{"content":"A <xref href=\"System.Data.Common.DbDataReader\"></xref> object.","nodes":[{"pos":[0,62],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Data.Common.DbDataReader\"></xref> object."}],"pos":[34001,34064],"yaml":true},{"content":"Gets the value of the specified column as a <xref href=\"System.Decimal\"></xref> object.","nodes":[{"pos":[0,87],"content":"Gets the value of the specified column as a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the value of the specified column as a <xref href=\"System.Decimal\"></xref> object."}],"pos":[35407,35495],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[35646,35677],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[35735,35770],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[35940,35973],"yaml":true},{"content":"Gets the value of the specified column as a double-precision floating point number.","nodes":[{"pos":[0,83],"content":"Gets the value of the specified column as a double-precision floating point number.","nodes":[{"content":"Gets the value of the specified column as a double-precision floating point number.","pos":[0,83]}]}],"pos":[37232,37316],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[37465,37496],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[37553,37588],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[37757,37790],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the rows in the data reader.","nodes":[{"pos":[0,127],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the rows in the data reader.","source":"Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the rows in the data reader."}],"pos":[39016,39144],"yaml":true},{"content":"Although you can use this method to retrieve an explicit constructor, in languages that support an explicit **foreach** construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.  \n  \n If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects.","nodes":[{"pos":[0,239],"content":"Although you can use this method to retrieve an explicit constructor, in languages that support an explicit <bpt id=\"p1\">**</bpt>foreach<ept id=\"p1\">**</ept> construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.","source":"Although you can use this method to retrieve an explicit constructor, in languages that support an explicit **foreach** construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader."},{"pos":[246,428],"content":"If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects.","nodes":[{"content":"If you implement this method, it should return a new instance of <ph id=\"ph1\">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> or ensure that your enumerator returns <ph id=\"ph2\">&lt;xref:System.Data.IDataRecord&gt;</ph> objects.","pos":[0,182],"source":"If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects."}]}],"pos":[39155,39588],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the rows in the data reader.","nodes":[{"pos":[0,119],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the rows in the data reader.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the rows in the data reader."}],"pos":[39769,39889],"yaml":true},{"content":"Gets the data type of the specified column.","nodes":[{"pos":[0,43],"content":"Gets the data type of the specified column.","nodes":[{"content":"Gets the data type of the specified column.","pos":[0,43]}]}],"pos":[41259,41303],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[41453,41484],"yaml":true},{"content":"The data type of the specified column.","nodes":[{"pos":[0,38],"content":"The data type of the specified column.","nodes":[{"content":"The data type of the specified column.","pos":[0,38]}]}],"pos":[41539,41578],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[41750,41783],"yaml":true},{"content":"Synchronously gets the value of the specified column as a type.","nodes":[{"pos":[0,63],"content":"Synchronously gets the value of the specified column as a type.","nodes":[{"content":"Synchronously gets the value of the specified column as a type.","pos":[0,63]}]}],"pos":[43084,43148],"yaml":true},{"content":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,117],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[43159,43277],"yaml":true,"extradata":"MT"},{"content":"The column to be retrieved.","nodes":[{"pos":[0,27],"content":"The column to be retrieved.","nodes":[{"content":"The column to be retrieved.","pos":[0,27]}]}],"pos":[43427,43455],"yaml":true},{"content":"Synchronously gets the value of the specified column as a type.","nodes":[{"pos":[0,63],"content":"Synchronously gets the value of the specified column as a type.","nodes":[{"content":"Synchronously gets the value of the specified column as a type.","pos":[0,63]}]}],"pos":[43506,43570],"yaml":true},{"content":"The column to be retrieved.","nodes":[{"pos":[0,27],"content":"The column to be retrieved.","nodes":[{"content":"The column to be retrieved.","pos":[0,27]}]}],"pos":[43615,43643],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed during the data retrieval."},{"pos":[171,330],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[337,395],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[402,564],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[43829,44408],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[44516,44561],"yaml":true},{"content":"<code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast.","nodes":[{"pos":[0,122],"content":"<ph id=\"ph1\">&lt;code&gt;T&lt;/code&gt;</ph> doesn’t match the type returned by <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> or cannot be cast.","source":"<code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast."}],"pos":[44661,44784],"yaml":true},{"content":"Asynchronously gets the value of the specified column as a type.","nodes":[{"pos":[0,64],"content":"Asynchronously gets the value of the specified column as a type.","nodes":[{"content":"Asynchronously gets the value of the specified column as a type.","pos":[0,64]}]}],"pos":[46115,46180],"yaml":true},{"content":"`T` can be one of the following types:  \n  \n|||||  \n|-|-|-|-|  \n|Boolean|Byte|Char|DateTime|  \n|DateTimeOffset|Decimal|Double|Float|  \n|Guid|Int16|Int32|Int64|  \n|String||||  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">`T`</ph> can be one of the following types:","source":"`T` can be one of the following types:"},{"pos":[65,72],"content":"Boolean","nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73,77],"content":"Byte","nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[78,82],"content":"Char","nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[83,91],"content":"DateTime","nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[96,110],"content":"DateTimeOffset","nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[111,118],"content":"Decimal","nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[119,125],"content":"Double","nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[126,131],"content":"Float","nodes":[{"content":"Float","pos":[0,5]}]},{"pos":[136,140],"content":"Guid","nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[141,146],"content":"Int16","nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[147,152],"content":"Int32","nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[153,158],"content":"Int64","nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[163,169],"content":"String","nodes":[{"content":"String","pos":[0,6]}]},{"pos":[180,297],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[46191,46500],"yaml":true,"extradata":"MT"},{"content":"The type of the value to be returned.","nodes":[{"pos":[0,37],"content":"The type of the value to be returned.","nodes":[{"content":"The type of the value to be returned.","pos":[0,37]}]}],"pos":[46676,46714],"yaml":true},{"content":"The type of the value to be returned.","nodes":[{"pos":[0,37],"content":"The type of the value to be returned.","nodes":[{"content":"The type of the value to be returned.","pos":[0,37]}]}],"pos":[46765,46803],"yaml":true},{"content":"The type of the value to be returned.","nodes":[{"pos":[0,37],"content":"The type of the value to be returned.","nodes":[{"content":"The type of the value to be returned.","pos":[0,37]}]}],"pos":[46877,46915],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval."},{"pos":[167,322],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[329,387],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[394,556],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[47106,47677],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[47785,47830],"yaml":true},{"content":"<code>T</code> doesn’t match the type returned by the data source  or cannot be cast.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;T&lt;/code&gt;</ph> doesn’t match the type returned by the data source  or cannot be cast.","source":"<code>T</code> doesn’t match the type returned by the data source  or cannot be cast."}],"pos":[47930,48016],"yaml":true},{"content":"Asynchronously gets the value of the specified column as a type.","nodes":[{"pos":[0,64],"content":"Asynchronously gets the value of the specified column as a type.","nodes":[{"content":"Asynchronously gets the value of the specified column as a type.","pos":[0,64]}]}],"pos":[49509,49574],"yaml":true},{"content":"`T` can be one of the following types:  \n  \n|||||  \n|-|-|-|-|  \n|Boolean|Byte|Char|DateTime|  \n|DateTimeOffset|Decimal|Double|Float|  \n|Guid|Int16|Int32|Int64|  \n|String||||  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">`T`</ph> can be one of the following types:","source":"`T` can be one of the following types:"},{"pos":[65,72],"content":"Boolean","nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73,77],"content":"Byte","nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[78,82],"content":"Char","nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[83,91],"content":"DateTime","nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[96,110],"content":"DateTimeOffset","nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[111,118],"content":"Decimal","nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[119,125],"content":"Double","nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[126,131],"content":"Float","nodes":[{"content":"Float","pos":[0,5]}]},{"pos":[136,140],"content":"Guid","nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[141,146],"content":"Int16","nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[147,152],"content":"Int32","nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[153,158],"content":"Int64","nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[163,169],"content":"String","nodes":[{"content":"String","pos":[0,6]}]},{"pos":[180,297],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[49585,49894],"yaml":true,"extradata":"MT"},{"content":"The type of the value to be returned.","nodes":[{"pos":[0,37],"content":"The type of the value to be returned.","nodes":[{"content":"The type of the value to be returned.","pos":[0,37]}]}],"pos":[50132,50170],"yaml":true},{"content":"The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\"></xref>. The returned task must be marked as cancelled.","nodes":[{"pos":[0,346],"content":"The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\"></xref>. The returned task must be marked as cancelled.","nodes":[{"content":"The cancellation instruction, which propagates a notification that operations should be canceled.","pos":[0,97]},{"content":"This does not guarantee the cancellation.","pos":[98,139]},{"content":"A setting of <ph id=\"ph1\">`CancellationToken.None`</ph> makes this method equivalent to <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\"&gt;&lt;/xref&gt;</ph>.","pos":[140,299],"source":" A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\"></xref>."},{"content":"The returned task must be marked as cancelled.","pos":[300,346]}]}],"pos":[50264,50611],"yaml":true},{"content":"The type of the value to be returned.","nodes":[{"pos":[0,37],"content":"The type of the value to be returned.","nodes":[{"content":"The type of the value to be returned.","pos":[0,37]}]}],"pos":[50662,50700],"yaml":true},{"content":"The type of the value to be returned.","nodes":[{"pos":[0,37],"content":"The type of the value to be returned.","nodes":[{"content":"The type of the value to be returned.","pos":[0,37]}]}],"pos":[50774,50812],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval."},{"pos":[167,322],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[329,387],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[394,556],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[51003,51574],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[51682,51727],"yaml":true},{"content":"<code>T</code> doesn’t match the type returned by the data source or cannot be cast.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;T&lt;/code&gt;</ph> doesn’t match the type returned by the data source or cannot be cast.","source":"<code>T</code> doesn’t match the type returned by the data source or cannot be cast."}],"pos":[51827,51912],"yaml":true},{"content":"Gets the value of the specified column as a single-precision floating point number.","nodes":[{"pos":[0,83],"content":"Gets the value of the specified column as a single-precision floating point number.","nodes":[{"content":"Gets the value of the specified column as a single-precision floating point number.","pos":[0,83]}]}],"pos":[53165,53249],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[53396,53427],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[53484,53519],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[53687,53720],"yaml":true},{"content":"Gets the value of the specified column as a globally-unique identifier (GUID).","nodes":[{"pos":[0,78],"content":"Gets the value of the specified column as a globally-unique identifier (GUID).","nodes":[{"content":"Gets the value of the specified column as a globally-unique identifier (GUID).","pos":[0,78]}]}],"pos":[54967,55046],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[55191,55222],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[55277,55312],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[55479,55512],"yaml":true},{"content":"Gets the value of the specified column as a 16-bit signed integer.","nodes":[{"pos":[0,66],"content":"Gets the value of the specified column as a 16-bit signed integer.","nodes":[{"content":"Gets the value of the specified column as a 16-bit signed integer.","pos":[0,66]}]}],"pos":[56765,56832],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[56979,57010],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[57066,57101],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[57269,57302],"yaml":true},{"content":"Gets the value of the specified column as a 32-bit signed integer.","nodes":[{"pos":[0,66],"content":"Gets the value of the specified column as a 32-bit signed integer.","nodes":[{"content":"Gets the value of the specified column as a 32-bit signed integer.","pos":[0,66]}]}],"pos":[58555,58622],"yaml":true},{"content":"```  \nprivate static void GetCredits(String connectiongString) {  \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";   \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();   \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            while (reader.Read()) {  \n               // Credits column is the integer column, and you can use the GetInt32 method                        \n               // to return a a 32-bit signed integer.                       \n               Console.WriteLine(\"Course:{0,-15} Credits:{1}\",reader[1],reader.GetInt32(2));   \n            }  \n         }  \n      }  \n   }  \n}  \n```","nodes":[],"pos":[58633,59441],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[59586,59617],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[59673,59708],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[59876,59909],"yaml":true},{"content":"Gets the value of the specified column as a 64-bit signed integer.","nodes":[{"pos":[0,66],"content":"Gets the value of the specified column as a 64-bit signed integer.","nodes":[{"content":"Gets the value of the specified column as a 64-bit signed integer.","pos":[0,66]}]}],"pos":[61162,61229],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[61375,61406],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[61462,61497],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[61665,61698],"yaml":true},{"content":"Gets the name of the column, given the zero-based column ordinal.","nodes":[{"pos":[0,65],"content":"Gets the name of the column, given the zero-based column ordinal.","nodes":[{"content":"Gets the name of the column, given the zero-based column ordinal.","pos":[0,65]}]}],"pos":[62945,63011],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[63158,63189],"yaml":true},{"content":"The name of the specified column.","nodes":[{"pos":[0,33],"content":"The name of the specified column.","nodes":[{"content":"The name of the specified column.","pos":[0,33]}]}],"pos":[63246,63280],"yaml":true},{"content":"Gets the column ordinal given the name of the column.","nodes":[{"pos":[0,53],"content":"Gets the column ordinal given the name of the column.","nodes":[{"content":"Gets the column ordinal given the name of the column.","pos":[0,53]}]}],"pos":[64621,64675],"yaml":true},{"content":"The name of the column.","nodes":[{"pos":[0,23],"content":"The name of the column.","nodes":[{"content":"The name of the column.","pos":[0,23]}]}],"pos":[64820,64844],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[64900,64931],"yaml":true},{"content":"The name specified is not a valid column name.","nodes":[{"pos":[0,46],"content":"The name specified is not a valid column name.","nodes":[{"content":"The name specified is not a valid column name.","pos":[0,46]}]}],"pos":[65109,65156],"yaml":true},{"content":"Returns the provider-specific field type of the specified column.","nodes":[{"pos":[0,65],"content":"Returns the provider-specific field type of the specified column.","nodes":[{"content":"Returns the provider-specific field type of the specified column.","pos":[0,65]}]}],"pos":[66529,66595],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[66760,66791],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> object that describes the data type of the specified column.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object that describes the data type of the specified column.","source":"The <xref href=\"System.Type\"></xref> object that describes the data type of the specified column."}],"pos":[66846,66944],"yaml":true},{"content":"Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,92],"content":"Gets the value of the specified column as an instance of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>."}],"pos":[68401,68494],"yaml":true},{"content":"To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.","nodes":[{"pos":[0,130],"content":"To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.","nodes":[{"content":"To determine the specific type of the object returned, use <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A&gt;</ph>.","pos":[0,130],"source":"To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>."}]}],"pos":[68505,68636],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[68799,68830],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[68887,68922],"yaml":true},{"content":"Gets all provider-specific attribute columns in the collection for the current row.","nodes":[{"pos":[0,83],"content":"Gets all provider-specific attribute columns in the collection for the current row.","nodes":[{"content":"Gets all provider-specific attribute columns in the collection for the current row.","pos":[0,83]}]}],"pos":[70399,70483],"yaml":true},{"content":"An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns.","nodes":[{"pos":[0,88],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> into which to copy the attribute columns.","source":"An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns."}],"pos":[70650,70739],"yaml":true},{"content":"The number of instances of <xref href=\"System.Object\"></xref> in the array.","nodes":[{"pos":[0,75],"content":"The number of instances of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> in the array.","source":"The number of instances of <xref href=\"System.Object\"></xref> in the array."}],"pos":[70795,70871],"yaml":true},{"content":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.Common.DbDataReader\"></xref>.","nodes":[{"pos":[0,148],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that describes the column metadata of the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.Common.DbDataReader\"></xref>."}],"pos":[72208,72357],"yaml":true},{"content":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that describes the column metadata.","source":"A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata."}],"pos":[72520,72601],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed."}],"pos":[72785,72857],"yaml":true},{"content":"Retrieves data as a <xref href=\"System.IO.Stream\"></xref>.","nodes":[{"pos":[0,58],"content":"Retrieves data as a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves data as a <xref href=\"System.IO.Stream\"></xref>."}],"pos":[74052,74111],"yaml":true},{"content":"<xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays.  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,127],"content":"<xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader.GetStream%2A&gt;</ph> only supports the retrieval of values that can be converted to byte arrays.","pos":[0,127],"source":"<xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays."}]},{"pos":[134,251],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[74122,74378],"yaml":true,"extradata":"MT"},{"content":"Retrieves data as a <xref href=\"System.IO.Stream\"></xref>.","nodes":[{"pos":[0,58],"content":"Retrieves data as a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves data as a <xref href=\"System.IO.Stream\"></xref>."}],"pos":[74536,74595],"yaml":true},{"content":"The returned object.","nodes":[{"pos":[0,20],"content":"The returned object.","nodes":[{"content":"The returned object.","pos":[0,20]}]}],"pos":[74655,74676],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval."},{"pos":[167,322],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[329,387],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[394,556],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[74855,75426],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[75534,75579],"yaml":true},{"content":"The returned type was not one of the types below:  \n  \n-   binary  \n  \n-   image  \n  \n-   varbinary  \n  \n-   udt","nodes":[{"pos":[0,49],"content":"The returned type was not one of the types below:","nodes":[{"content":"The returned type was not one of the types below:","pos":[0,49]}]},{"pos":[59,65],"content":"binary","nodes":[{"content":"binary","pos":[0,6]}]},{"pos":[75,80],"content":"image","nodes":[{"content":"image","pos":[0,5]}]},{"pos":[90,99],"content":"varbinary","nodes":[{"content":"varbinary","pos":[0,9]}]},{"pos":[109,112],"content":"udt","nodes":[{"content":"udt","pos":[0,3]}]}],"pos":[75679,75802],"yaml":true},{"content":"Gets the value of the specified column as an instance of <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,92],"content":"Gets the value of the specified column as an instance of <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as an instance of <xref href=\"System.String\"></xref>."}],"pos":[77061,77154],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[77303,77334],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[77391,77426],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[77595,77628],"yaml":true},{"content":"Retrieves data as a <xref href=\"System.IO.TextReader\"></xref>.","nodes":[{"pos":[0,62],"content":"Retrieves data as a <ph id=\"ph1\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves data as a <xref href=\"System.IO.TextReader\"></xref>."}],"pos":[78911,78974],"yaml":true},{"content":"<xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings).  \n  \n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,146],"content":"<xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader.GetTextReader%2A&gt;</ph> only supports the retrieval of values that can be converted to character arrays (strings).","pos":[0,146],"source":"<xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings)."}]},{"pos":[153,270],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[78985,79260],"yaml":true,"extradata":"MT"},{"content":"Retrieves data as a <xref href=\"System.IO.TextReader\"></xref>.","nodes":[{"pos":[0,62],"content":"Retrieves data as a <ph id=\"ph1\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves data as a <xref href=\"System.IO.TextReader\"></xref>."}],"pos":[79426,79489],"yaml":true},{"content":"The returned object.","nodes":[{"pos":[0,20],"content":"The returned object.","nodes":[{"content":"The returned object.","pos":[0,20]}]}],"pos":[79553,79574],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Tried to read a previously-read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval."},{"pos":[167,322],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[329,387],"content":"Tried to read a previously-read column in sequential mode.","nodes":[{"content":"Tried to read a previously-read column in sequential mode.","pos":[0,58]}]},{"pos":[394,556],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[79757,80328],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[80436,80481],"yaml":true},{"content":"The returned type was not one of the types below:  \n  \n-   char  \n  \n-   nchar  \n  \n-   ntext  \n  \n-   nvarchar  \n  \n-   text  \n  \n-   varchar","nodes":[{"pos":[0,49],"content":"The returned type was not one of the types below:","nodes":[{"content":"The returned type was not one of the types below:","pos":[0,49]}]},{"pos":[59,63],"content":"char","nodes":[{"content":"char","pos":[0,4]}]},{"pos":[73,78],"content":"nchar","nodes":[{"content":"nchar","pos":[0,5]}]},{"pos":[88,93],"content":"ntext","nodes":[{"content":"ntext","pos":[0,5]}]},{"pos":[103,111],"content":"nvarchar","nodes":[{"content":"nvarchar","pos":[0,8]}]},{"pos":[121,125],"content":"text","nodes":[{"content":"text","pos":[0,4]}]},{"pos":[135,142],"content":"varchar","nodes":[{"content":"varchar","pos":[0,7]}]}],"pos":[80581,80738],"yaml":true},{"content":"Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,92],"content":"Gets the value of the specified column as an instance of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>."}],"pos":[81991,82084],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[82232,82263],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[82320,82355],"yaml":true},{"content":"Populates an array of objects with the column values of the current row.","nodes":[{"pos":[0,72],"content":"Populates an array of objects with the column values of the current row.","nodes":[{"content":"Populates an array of objects with the column values of the current row.","pos":[0,72]}]}],"pos":[83703,83776],"yaml":true},{"content":"An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns.","nodes":[{"pos":[0,88],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> into which to copy the attribute columns.","source":"An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns."}],"pos":[83928,84017],"yaml":true},{"content":"The number of instances of <xref href=\"System.Object\"></xref> in the array.","nodes":[{"pos":[0,75],"content":"The number of instances of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> in the array.","source":"The number of instances of <xref href=\"System.Object\"></xref> in the array."}],"pos":[84073,84149],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Data.Common.DbDataReader\"></xref> contains one or more rows.","nodes":[{"pos":[0,120],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> contains one or more rows.","source":"Gets a value that indicates whether this <xref href=\"System.Data.Common.DbDataReader\"></xref> contains one or more rows."}],"pos":[85407,85528],"yaml":true},{"content":"`true` if the <xref href=\"System.Data.Common.DbDataReader\"></xref> contains one or more rows; otherwise `false`.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> contains one or more rows; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Data.Common.DbDataReader\"></xref> contains one or more rows; otherwise `false`."}],"pos":[85647,85762],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed.","nodes":[{"pos":[0,99],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> is closed.","source":"Gets a value indicating whether the <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed."}],"pos":[87024,87124],"yaml":true},{"content":"`true` if the <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed; otherwise `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> is closed; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed; otherwise `false`."}],"pos":[87244,87343],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed."}],"pos":[87521,87593],"yaml":true},{"content":"Gets a value that indicates whether the column contains nonexistent or missing values.","nodes":[{"pos":[0,86],"content":"Gets a value that indicates whether the column contains nonexistent or missing values.","nodes":[{"content":"Gets a value that indicates whether the column contains nonexistent or missing values.","pos":[0,86]}]}],"pos":[88846,88933],"yaml":true},{"content":"Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid raising an error.","nodes":[{"pos":[0,239],"content":"Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid raising an error.","nodes":[{"content":"Call this method to check for null column values before calling the typed get methods (for example, <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader.GetByte%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataReader.GetChar%2A&gt;</ph>, and so on) to avoid raising an error.","pos":[0,239],"source":"Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid raising an error."}]}],"pos":[88944,89184],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[89330,89361],"yaml":true},{"content":"`true` if the specified column is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if the specified column is equivalent to <ph id=\"ph2\">&lt;xref href=\"System.DBNull\"&gt;&lt;/xref&gt;</ph>; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified column is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise `false`."}],"pos":[89419,89524],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values. Optionally, sends a notification that operations should be cancelled.","nodes":[{"pos":[0,267],"content":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values. Optionally, sends a notification that operations should be cancelled.","nodes":[{"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"&gt;&lt;/xref&gt;</ph>, which gets a value that indicates whether the column contains non-existent or missing values.","pos":[0,197],"source":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values."},{"content":"Optionally, sends a notification that operations should be cancelled.","pos":[198,267]}]}],"pos":[91040,91308],"yaml":true},{"content":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,117],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[91319,91437],"yaml":true,"extradata":"MT"},{"content":"The zero-based column to be retrieved.","nodes":[{"pos":[0,38],"content":"The zero-based column to be retrieved.","nodes":[{"content":"The zero-based column to be retrieved.","pos":[0,38]}]}],"pos":[91670,91709],"yaml":true},{"content":"The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\"></xref>. The returned task must be marked as cancelled.","nodes":[{"pos":[0,338],"content":"The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\"></xref>. The returned task must be marked as cancelled.","nodes":[{"content":"The cancellation instruction, which propagates a notification that operations should be canceled.","pos":[0,97]},{"content":"This does not guarantee the cancellation.","pos":[98,139]},{"content":"A setting of <ph id=\"ph1\">`CancellationToken.None`</ph> makes this method equivalent to <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\"&gt;&lt;/xref&gt;</ph>.","pos":[140,291],"source":" A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\"></xref>."},{"content":"The returned task must be marked as cancelled.","pos":[292,338]}]}],"pos":[91803,92142],"yaml":true},{"content":"`true` if the specified column value is equivalent to `DBNull` otherwise `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if the specified column value is equivalent to <ph id=\"ph2\">`DBNull`</ph> otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified column value is equivalent to `DBNull` otherwise `false`."}],"pos":[92229,92313],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Trying to read a previously read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval."},{"pos":[167,322],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[329,388],"content":"Trying to read a previously read column in sequential mode.","nodes":[{"content":"Trying to read a previously read column in sequential mode.","pos":[0,59]}]},{"pos":[395,557],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[92496,93068],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[93176,93221],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values.","nodes":[{"pos":[0,197],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"&gt;&lt;/xref&gt;</ph>, which gets a value that indicates whether the column contains non-existent or missing values.","source":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values."}],"pos":[94504,94702],"yaml":true},{"content":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,117],"content":"For more information, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","source":"For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}],"pos":[94713,94831],"yaml":true,"extradata":"MT"},{"content":"The zero-based column to be retrieved.","nodes":[{"pos":[0,38],"content":"The zero-based column to be retrieved.","nodes":[{"content":"The zero-based column to be retrieved.","pos":[0,38]}]}],"pos":[95002,95041],"yaml":true},{"content":"`true` if the specified column value is equivalent to `DBNull` otherwise `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if the specified column value is equivalent to <ph id=\"ph2\">`DBNull`</ph> otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified column value is equivalent to `DBNull` otherwise `false`."}],"pos":[95128,95212],"yaml":true},{"content":"The connection drops or is closed during the data retrieval.  \n  \n The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval.  \n  \n There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false).  \n  \n Trying to read a previously read column in sequential mode.  \n  \n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"pos":[0,60],"content":"The connection drops or is closed during the data retrieval.","nodes":[{"content":"The connection drops or is closed during the data retrieval.","pos":[0,60]}]},{"pos":[67,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> is closed during the data retrieval.","source":"The <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed during the data retrieval."},{"pos":[167,322],"content":"There is no data ready to be read (for example, the first <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph> hasn't been called, or returned false).","source":"There is no data ready to be read (for example, the first <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> hasn't been called, or returned false)."},{"pos":[329,388],"content":"Trying to read a previously read column in sequential mode.","nodes":[{"content":"Trying to read a previously read column in sequential mode.","pos":[0,59]}]},{"pos":[395,557],"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","nodes":[{"content":"There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[0,162],"nodes":[{"content":"There was an asynchronous operation in progress.","pos":[0,48]},{"content":"This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.","pos":[49,162]}]}]}],"pos":[95395,95967],"yaml":true},{"content":"Trying to read a column that does not exist.","nodes":[{"pos":[0,44],"content":"Trying to read a column that does not exist.","nodes":[{"content":"Trying to read a column that does not exist.","pos":[0,44]}]}],"pos":[96075,96120],"yaml":true},{"content":"Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,92],"content":"Gets the value of the specified column as an instance of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>."}],"pos":[97351,97444],"yaml":true},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[97595,97626],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[97683,97718],"yaml":true},{"content":"The index passed was outside the range of 0 through <xref href=\"System.Data.IDataRecord.FieldCount\"></xref>.","nodes":[{"pos":[0,108],"content":"The index passed was outside the range of 0 through <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataRecord.FieldCount\"&gt;&lt;/xref&gt;</ph>.","source":"The index passed was outside the range of 0 through <xref href=\"System.Data.IDataRecord.FieldCount\"></xref>."}],"pos":[97890,97999],"yaml":true},{"content":"Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,92],"content":"Gets the value of the specified column as an instance of <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>."}],"pos":[99236,99329],"yaml":true},{"content":"The name of the column.","nodes":[{"pos":[0,23],"content":"The name of the column.","nodes":[{"content":"The name of the column.","pos":[0,23]}]}],"pos":[99478,99502],"yaml":true},{"content":"The value of the specified column.","nodes":[{"pos":[0,34],"content":"The value of the specified column.","nodes":[{"content":"The value of the specified column.","pos":[0,34]}]}],"pos":[99559,99594],"yaml":true},{"content":"No column with the specified name was found.","nodes":[{"pos":[0,44],"content":"No column with the specified name was found.","nodes":[{"content":"No column with the specified name was found.","pos":[0,44]}]}],"pos":[99766,99811],"yaml":true},{"content":"Advances the reader to the next result when reading the results of a batch of statements.","nodes":[{"pos":[0,89],"content":"Advances the reader to the next result when reading the results of a batch of statements.","nodes":[{"content":"Advances the reader to the next result when reading the results of a batch of statements.","pos":[0,89]}]}],"pos":[101019,101109],"yaml":true},{"content":"This method allows you to process multiple result sets returned when a batch is submitted to the data provider.","nodes":[{"pos":[0,111],"content":"This method allows you to process multiple result sets returned when a batch is submitted to the data provider.","nodes":[{"content":"This method allows you to process multiple result sets returned when a batch is submitted to the data provider.","pos":[0,111]}]}],"pos":[101120,101232],"yaml":true,"extradata":"MT"},{"content":"`true` if there are more result sets; otherwise `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if there are more result sets; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are more result sets; otherwise `false`."}],"pos":[101368,101427],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref>, which advances the reader to the next result when reading the results of a batch of statements.  \n  \n Invokes <xref href=\"System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\"></xref> with CancellationToken.None.","nodes":[{"pos":[0,187],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.NextResult\"&gt;&lt;/xref&gt;</ph>, which advances the reader to the next result when reading the results of a batch of statements.","source":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref>, which advances the reader to the next result when reading the results of a batch of statements."},{"pos":[194,335],"content":"Invokes <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> with CancellationToken.None.","source":"Invokes <xref href=\"System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\"></xref> with CancellationToken.None."}],"pos":[102738,103082],"yaml":true},{"content":"For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,142],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[103093,103236],"yaml":true,"extradata":"MT"},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[103426,103474],"yaml":true},{"content":"An error occurred while executing the command text.","nodes":[{"pos":[0,51],"content":"An error occurred while executing the command text.","nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]}],"pos":[103655,103707],"yaml":true},{"content":"This is the asynchronous version of <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref>. Providers should override with an appropriate implementation. The <code>cancellationToken</code> may optionally be ignored.  \n  \n The default implementation invokes the synchronous <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled <code>cancellationToken</code>. Exceptions thrown by <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref> will be communicated via the returned Task Exception property.  \n  \n Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.","nodes":[{"pos":[0,224],"content":"This is the asynchronous version of <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref>. Providers should override with an appropriate implementation. The <code>cancellationToken</code> may optionally be ignored.","nodes":[{"content":"This is the asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.NextResult\"&gt;&lt;/xref&gt;</ph>.","pos":[0,100],"source":"This is the asynchronous version of <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref>."},{"content":"Providers should override with an appropriate implementation.","pos":[101,162]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">cancellationToken</ph><ept id=\"p1\">&lt;/code&gt;</ept> may optionally be ignored.","pos":[163,224],"source":" The <code>cancellationToken</code> may optionally be ignored."}]},{"pos":[231,678],"content":"The default implementation invokes the synchronous <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled <code>cancellationToken</code>. Exceptions thrown by <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref> will be communicated via the returned Task Exception property.","nodes":[{"content":"The default implementation invokes the synchronous <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.NextResult\"&gt;&lt;/xref&gt;</ph> method and returns a completed task, blocking the calling thread.","pos":[0,180],"source":"The default implementation invokes the synchronous <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref> method and returns a completed task, blocking the calling thread."},{"content":"The default implementation will return a cancelled task if passed an already cancelled <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">cancellationToken</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[181,299],"source":" The default implementation will return a cancelled task if passed an already cancelled <code>cancellationToken</code>."},{"content":"Exceptions thrown by <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.NextResult\"&gt;&lt;/xref&gt;</ph> will be communicated via the returned Task Exception property.","pos":[300,447],"source":" Exceptions thrown by <xref href=\"System.Data.Common.DbDataReader.NextResult\"></xref> will be communicated via the returned Task Exception property."}]},{"pos":[685,808],"content":"Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.","nodes":[{"content":"Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.","pos":[0,123]}]}],"pos":[105104,105925],"yaml":true},{"content":"For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,142],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[105936,106079],"yaml":true,"extradata":"MT"},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[106333,106363],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[106450,106498],"yaml":true},{"content":"An error occurred while executing the command text.","nodes":[{"pos":[0,51],"content":"An error occurred while executing the command text.","nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]}],"pos":[106679,106731],"yaml":true},{"content":"Advances the reader to the next record in a result set.","nodes":[{"pos":[0,55],"content":"Advances the reader to the next record in a result set.","nodes":[{"content":"Advances the reader to the next record in a result set.","pos":[0,55]}]}],"pos":[107903,107959],"yaml":true},{"content":"The default position of a data reader is before the first record. Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data.","nodes":[{"pos":[0,162],"content":"The default position of a data reader is before the first record. Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data.","nodes":[{"content":"The default position of a data reader is before the first record. Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data.","pos":[0,162],"nodes":[{"content":"The default position of a data reader is before the first record.","pos":[0,65]},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader.Read%2A&gt;</ph> to begin accessing data.","pos":[66,162],"source":" Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data."}]}]}],"pos":[107970,108133],"yaml":true,"extradata":"MT"},{"content":"`true` if there are more rows; otherwise `false`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">`true`</ph> if there are more rows; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are more rows; otherwise `false`."}],"pos":[108263,108315],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.Read\"></xref>, which advances the reader to the next record in a result set. This method invokes <xref href=\"System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> with CancellationToken.None.","nodes":[{"pos":[0,295],"content":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.Read\"></xref>, which advances the reader to the next record in a result set. This method invokes <xref href=\"System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> with CancellationToken.None.","nodes":[{"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph>, which advances the reader to the next record in a result set.","pos":[0,147],"source":"An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.Read\"></xref>, which advances the reader to the next record in a result set."},{"content":"This method invokes <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> with CancellationToken.None.","pos":[148,295],"source":" This method invokes <xref href=\"System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> with CancellationToken.None."}]}],"pos":[109584,109880],"yaml":true},{"content":"For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,142],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[109891,110034],"yaml":true,"extradata":"MT"},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[110218,110266],"yaml":true},{"content":"An error occurred while executing the command text.","nodes":[{"pos":[0,51],"content":"An error occurred while executing the command text.","nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]}],"pos":[110441,110493],"yaml":true},{"content":"This is the asynchronous version of <xref href=\"System.Data.Common.DbDataReader.Read\"></xref>.  Providers should override with an appropriate implementation. The cancellationToken may optionally be ignored.  \n  \n The default implementation invokes the synchronous <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellationToken.  Exceptions thrown by Read will be communicated via the returned Task Exception property.  \n  \n Do not invoke other methods and properties of the `DbDataReader` object until the returned Task is complete.","nodes":[{"pos":[0,206],"content":"This is the asynchronous version of <xref href=\"System.Data.Common.DbDataReader.Read\"></xref>.  Providers should override with an appropriate implementation. The cancellationToken may optionally be ignored.","nodes":[{"content":"This is the asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph>.","pos":[0,94],"source":"This is the asynchronous version of <xref href=\"System.Data.Common.DbDataReader.Read\"></xref>."},{"content":"Providers should override with an appropriate implementation.","pos":[96,157]},{"content":"The cancellationToken may optionally be ignored.","pos":[158,206]}]},{"pos":[213,583],"content":"The default implementation invokes the synchronous <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellationToken.  Exceptions thrown by Read will be communicated via the returned Task Exception property.","nodes":[{"content":"The default implementation invokes the synchronous <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader.Read\"&gt;&lt;/xref&gt;</ph> method and returns a completed task, blocking the calling thread.","pos":[0,174],"source":"The default implementation invokes the synchronous <xref href=\"System.Data.Common.DbDataReader.Read\"></xref> method and returns a completed task, blocking the calling thread."},{"content":"The default implementation will return a cancelled task if passed an already cancelled cancellationToken.","pos":[175,280]},{"content":"Exceptions thrown by Read will be communicated via the returned Task Exception property.","pos":[282,370]}]},{"pos":[590,698],"content":"Do not invoke other methods and properties of the <ph id=\"ph1\">`DbDataReader`</ph> object until the returned Task is complete.","source":"Do not invoke other methods and properties of the `DbDataReader` object until the returned Task is complete."}],"pos":[111854,112563],"yaml":true},{"content":"For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,142],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[112574,112717],"yaml":true,"extradata":"MT"},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[112965,112995],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[113082,113130],"yaml":true},{"content":"An error occurred while executing the command text.","nodes":[{"pos":[0,51],"content":"An error occurred while executing the command text.","nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]}],"pos":[113305,113357],"yaml":true},{"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","nodes":[{"pos":[0,88],"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","nodes":[{"content":"Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.","pos":[0,88]}]}],"pos":[114591,114680],"yaml":true},{"content":"The `RecordsAffected` property is not set until all rows are read and you close the `DataReader`.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">`RecordsAffected`</ph> property is not set until all rows are read and you close the <ph id=\"ph2\">`DataReader`</ph>.","source":"The `RecordsAffected` property is not set until all rows are read and you close the `DataReader`."}],"pos":[114691,114789],"yaml":true,"extradata":"MT"},{"content":"The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.","nodes":[{"pos":[0,127],"content":"The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.","nodes":[{"content":"The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.","pos":[0,127],"nodes":[{"content":"The number of rows changed, inserted, or deleted.","pos":[0,49]},{"content":"-1 for SELECT statements; 0 if no rows were affected or the statement failed.","pos":[50,127]}]}]}],"pos":[114913,115041],"yaml":true},{"content":"Gets the number of fields in the <xref href=\"System.Data.Common.DbDataReader\"></xref> that are not hidden.","nodes":[{"pos":[0,106],"content":"Gets the number of fields in the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> that are not hidden.","source":"Gets the number of fields in the <xref href=\"System.Data.Common.DbDataReader\"></xref> that are not hidden."}],"pos":[116365,116472],"yaml":true},{"content":"This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.","nodes":[{"pos":[0,275],"content":"This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.","nodes":[{"content":"This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.","pos":[0,275],"nodes":[{"content":"This value is used to determine how many fields in the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> are visible.","pos":[0,106],"source":"This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible."},{"content":"For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.","pos":[107,210]},{"content":"The hidden fields are always appended behind the visible fields.","pos":[211,275]}]}]}],"pos":[116483,116759],"yaml":true,"extradata":"MT"},{"content":"The number of fields that are not hidden.","nodes":[{"pos":[0,41],"content":"The number of fields that are not hidden.","nodes":[{"content":"The number of fields that are not hidden.","pos":[0,41]}]}],"pos":[116884,116926],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Data.IDataRecord.GetData(System.Int32)\"></xref>.","nodes":[{"pos":[0,105],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataRecord.GetData(System.Int32)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Data.IDataRecord.GetData(System.Int32)\"></xref>."}],"pos":[120160,120266],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.","nodes":[{"pos":[0,192],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.","pos":[0,192],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Data.IDataRecord&gt;</ph> interface.","pos":[60,192],"source":" It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface."}]}]}],"pos":[120277,120470],"yaml":true,"extradata":"MT"},{"content":"The zero-based column ordinal.","nodes":[{"pos":[0,30],"content":"The zero-based column ordinal.","nodes":[{"content":"The zero-based column ordinal.","pos":[0,30]}]}],"pos":[120630,120661],"yaml":true},{"content":"An instance of <xref href=\"System.Data.IDataReader\"></xref> to be used when the field points to more remote structured data.","nodes":[{"pos":[0,124],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> to be used when the field points to more remote structured data.","source":"An instance of <xref href=\"System.Data.IDataReader\"></xref> to be used when the field points to more remote structured data."}],"pos":[120728,120853],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.DbDataReader\n  commentId: T:System.Data.Common.DbDataReader\n  id: DbDataReader\n  children:\n  - System.Data.Common.DbDataReader.#ctor\n  - System.Data.Common.DbDataReader.Close\n  - System.Data.Common.DbDataReader.Depth\n  - System.Data.Common.DbDataReader.Dispose\n  - System.Data.Common.DbDataReader.Dispose(System.Boolean)\n  - System.Data.Common.DbDataReader.FieldCount\n  - System.Data.Common.DbDataReader.GetBoolean(System.Int32)\n  - System.Data.Common.DbDataReader.GetByte(System.Int32)\n  - System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  - System.Data.Common.DbDataReader.GetChar(System.Int32)\n  - System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  - System.Data.Common.DbDataReader.GetData(System.Int32)\n  - System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)\n  - System.Data.Common.DbDataReader.GetDateTime(System.Int32)\n  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)\n  - System.Data.Common.DbDataReader.GetDecimal(System.Int32)\n  - System.Data.Common.DbDataReader.GetDouble(System.Int32)\n  - System.Data.Common.DbDataReader.GetEnumerator\n  - System.Data.Common.DbDataReader.GetFieldType(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\n  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.GetFloat(System.Int32)\n  - System.Data.Common.DbDataReader.GetGuid(System.Int32)\n  - System.Data.Common.DbDataReader.GetInt16(System.Int32)\n  - System.Data.Common.DbDataReader.GetInt32(System.Int32)\n  - System.Data.Common.DbDataReader.GetInt64(System.Int32)\n  - System.Data.Common.DbDataReader.GetName(System.Int32)\n  - System.Data.Common.DbDataReader.GetOrdinal(System.String)\n  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)\n  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)\n  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])\n  - System.Data.Common.DbDataReader.GetSchemaTable\n  - System.Data.Common.DbDataReader.GetStream(System.Int32)\n  - System.Data.Common.DbDataReader.GetString(System.Int32)\n  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)\n  - System.Data.Common.DbDataReader.GetValue(System.Int32)\n  - System.Data.Common.DbDataReader.GetValues(System.Object[])\n  - System.Data.Common.DbDataReader.HasRows\n  - System.Data.Common.DbDataReader.IsClosed\n  - System.Data.Common.DbDataReader.IsDBNull(System.Int32)\n  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\n  - System.Data.Common.DbDataReader.Item(System.Int32)\n  - System.Data.Common.DbDataReader.Item(System.String)\n  - System.Data.Common.DbDataReader.NextResult\n  - System.Data.Common.DbDataReader.NextResultAsync\n  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.Read\n  - System.Data.Common.DbDataReader.ReadAsync\n  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbDataReader.RecordsAffected\n  - System.Data.Common.DbDataReader.VisibleFieldCount\n  - System.Data.Common.DbDataReader.System#Data#IDataReader#Close\n  - System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable\n  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  langs:\n  - csharp\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n  type: Class\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Reads a forward-only stream of rows from a data source.\n  syntax:\n    content: 'public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Data.DataTableReader\n  - System.Data.EntityClient.EntityDataReader\n  - System.Data.Odbc.OdbcDataReader\n  - System.Data.OleDb.OleDbDataReader\n  - System.Data.OracleClient.OracleDataReader\n  - System.Data.SqlClient.SqlDataReader\n  implements:\n  - System.Collections.IEnumerable\n  - System.Data.IDataReader\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)\n  - System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.#ctor\n  commentId: M:System.Data.Common.DbDataReader.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: DbDataReader()\n  nameWithType: DbDataReader.DbDataReader()\n  fullName: DbDataReader.DbDataReader()\n  type: Constructor\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Initializes a new instance of the <xref href=\"System.Data.Common.DbDataReader\"></xref> class.\n  syntax:\n    content: protected DbDataReader ();\n    parameters: []\n  overload: System.Data.Common.DbDataReader.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.Close\n  commentId: M:System.Data.Common.DbDataReader.Close\n  id: Close\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: DbDataReader.Close()\n  fullName: DbDataReader.Close()\n  type: Method\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: Closes the <xref href=\"System.Data.Common.DbDataReader\"></xref> object.\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  overload: System.Data.Common.DbDataReader.Close*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.Depth\n  commentId: P:System.Data.Common.DbDataReader.Depth\n  id: Depth\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: Depth\n  nameWithType: DbDataReader.Depth\n  fullName: DbDataReader.Depth\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets a value indicating the depth of nesting for the current row.\n  remarks: The outermost table has a depth of zero.\n  syntax:\n    content: public abstract int Depth { get; }\n    return:\n      type: System.Int32\n      description: The depth of nesting for the current row.\n  overload: System.Data.Common.DbDataReader.Depth*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.Dispose\n  commentId: M:System.Data.Common.DbDataReader.Dispose\n  id: Dispose\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DbDataReader.Dispose()\n  fullName: DbDataReader.Dispose()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Data.Common.DbDataReader\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>. The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Data.Common.DbDataReader.Dispose*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)\n  commentId: M:System.Data.Common.DbDataReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DbDataReader.Dispose(Boolean)\n  fullName: DbDataReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Releases the managed resources used by the <xref href=\"System.Data.Common.DbDataReader\"></xref> and optionally releases the unmanaged resources.\n  remarks: This method calls <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Data.Common.DbDataReader.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.FieldCount\n  commentId: P:System.Data.Common.DbDataReader.FieldCount\n  id: FieldCount\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: FieldCount\n  nameWithType: DbDataReader.FieldCount\n  fullName: DbDataReader.FieldCount\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the number of columns in the current row.\n  remarks: Includes hidden fields. Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.\n  syntax:\n    content: public abstract int FieldCount { get; }\n    return:\n      type: System.Int32\n      description: The number of columns in the current row.\n  overload: System.Data.Common.DbDataReader.FieldCount*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: There is no current connection to an instance of SQL Server.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)\n  id: GetBoolean(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetBoolean(Int32)\n  nameWithType: DbDataReader.GetBoolean(Int32)\n  fullName: DbDataReader.GetBoolean(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a Boolean.\n  syntax:\n    content: public abstract bool GetBoolean (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Boolean\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetBoolean*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetByte(System.Int32)\n  id: GetByte(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetByte(Int32)\n  nameWithType: DbDataReader.GetByte(Int32)\n  fullName: DbDataReader.GetByte(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a byte.\n  syntax:\n    content: public abstract byte GetByte (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Byte\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetByte*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  nameWithType: DbDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  fullName: DbDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Reads a stream of bytes from the specified column, starting at location indicated by <code>dataOffset</code>, into the buffer, starting at the location indicated by <code>bufferOffset</code>.\n  syntax:\n    content: public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    - id: dataOffset\n      type: System.Int64\n      description: The index within the row from which to begin the read operation.\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer into which to copy the data.\n    - id: bufferOffset\n      type: System.Int32\n      description: The index with the buffer to which the data will be copied.\n    - id: length\n      type: System.Int32\n      description: The maximum number of characters to read.\n    return:\n      type: System.Int64\n      description: The actual number of bytes read.\n  overload: System.Data.Common.DbDataReader.GetBytes*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetChar(System.Int32)\n  id: GetChar(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetChar(Int32)\n  nameWithType: DbDataReader.GetChar(Int32)\n  fullName: DbDataReader.GetChar(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a single character.\n  syntax:\n    content: public abstract char GetChar (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Char\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetChar*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetChars(Int32, Int64, Char[], Int32, Int32)\n  nameWithType: DbDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)\n  fullName: DbDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Reads a stream of characters from the specified column, starting at location indicated by <code>dataOffset</code>, into the buffer, starting at the location indicated by <code>bufferOffset</code>.\n  syntax:\n    content: public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    - id: dataOffset\n      type: System.Int64\n      description: The index within the row from which to begin the read operation.\n    - id: buffer\n      type: System.Char[]\n      description: The buffer into which to copy the data.\n    - id: bufferOffset\n      type: System.Int32\n      description: The index with the buffer to which the data will be copied.\n    - id: length\n      type: System.Int32\n      description: The maximum number of characters to read.\n    return:\n      type: System.Int64\n      description: The actual number of characters read.\n  overload: System.Data.Common.DbDataReader.GetChars*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetData(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetData(System.Int32)\n  id: GetData(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetData(Int32)\n  nameWithType: DbDataReader.GetData(Int32)\n  fullName: DbDataReader.GetData(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Returns a <xref href=\"System.Data.Common.DbDataReader\"></xref> object for the requested column ordinal.\n  syntax:\n    content: public System.Data.Common.DbDataReader GetData (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.Common.DbDataReader\n      description: A <xref href=\"System.Data.Common.DbDataReader\"></xref> object.\n  overload: System.Data.Common.DbDataReader.GetData*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)\n  id: GetDataTypeName(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetDataTypeName(Int32)\n  nameWithType: DbDataReader.GetDataTypeName(Int32)\n  fullName: DbDataReader.GetDataTypeName(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets name of the data type of the specified column.\n  remarks: \"```  \\nprivate static void GetDataTypes(String connectiongString) {       \\n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \\n      String queryString = \\\"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\\\";  \\n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \\n         conn.Open();               \\n         using (DbDataReader reader = command.ExecuteReader()) {  \\n            for (Int32 i = 0; i < reader.FieldCount; i++) {  \\n               Console.WriteLine(\\\"ColumnName:{0,-15}DataType:{1,-15}\\\",reader.GetName(i),reader.GetDataTypeName(i));  \\n            }  \\n         }  \\n      }  \\n   }  \\n}  \\n```\"\n  syntax:\n    content: public abstract string GetDataTypeName (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: A string representing the name of the data type.\n  overload: System.Data.Common.DbDataReader.GetDataTypeName*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)\n  id: GetDateTime(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetDateTime(Int32)\n  nameWithType: DbDataReader.GetDateTime(Int32)\n  fullName: DbDataReader.GetDateTime(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a <xref href=\"System.DateTime\"></xref> object.\n  syntax:\n    content: public abstract DateTime GetDateTime (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.DateTime\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetDateTime*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)\n  id: GetDbDataReader(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetDbDataReader(Int32)\n  nameWithType: DbDataReader.GetDbDataReader(Int32)\n  fullName: DbDataReader.GetDbDataReader(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Returns a <xref href=\"System.Data.Common.DbDataReader\"></xref> object for the requested column ordinal that can be overridden with a provider-specific implementation.\n  syntax:\n    content: protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.Common.DbDataReader\n      description: A <xref href=\"System.Data.Common.DbDataReader\"></xref> object.\n  overload: System.Data.Common.DbDataReader.GetDbDataReader*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)\n  id: GetDecimal(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetDecimal(Int32)\n  nameWithType: DbDataReader.GetDecimal(Int32)\n  fullName: DbDataReader.GetDecimal(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a <xref href=\"System.Decimal\"></xref> object.\n  syntax:\n    content: public abstract decimal GetDecimal (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Decimal\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetDecimal*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetDouble(System.Int32)\n  id: GetDouble(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetDouble(Int32)\n  nameWithType: DbDataReader.GetDouble(Int32)\n  fullName: DbDataReader.GetDouble(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a double-precision floating point number.\n  syntax:\n    content: public abstract double GetDouble (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Double\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetDouble*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetEnumerator\n  commentId: M:System.Data.Common.DbDataReader.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: DbDataReader.GetEnumerator()\n  fullName: DbDataReader.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the rows in the data reader.\n  remarks: \"Although you can use this method to retrieve an explicit constructor, in languages that support an explicit **foreach** construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.  \\n  \\n If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects.\"\n  syntax:\n    content: public abstract System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the rows in the data reader.\n  overload: System.Data.Common.DbDataReader.GetEnumerator*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)\n  id: GetFieldType(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetFieldType(Int32)\n  nameWithType: DbDataReader.GetFieldType(Int32)\n  fullName: DbDataReader.GetFieldType(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the data type of the specified column.\n  syntax:\n    content: public abstract Type GetFieldType (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Type\n      description: The data type of the specified column.\n  overload: System.Data.Common.DbDataReader.GetFieldType*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)\n  id: GetFieldValue``1(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetFieldValue<T>(Int32)\n  nameWithType: DbDataReader.GetFieldValue<T>(Int32)\n  fullName: DbDataReader.GetFieldValue<T>(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Synchronously gets the value of the specified column as a type.\n  remarks: For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  syntax:\n    content: public virtual T GetFieldValue<T> (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The column to be retrieved.\n    typeParameters:\n    - id: T\n      description: Synchronously gets the value of the specified column as a type.\n    return:\n      type: T\n      description: The column to be retrieved.\n  overload: System.Data.Common.DbDataReader.GetFieldValue``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.SqlClient.SqlDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: <code>T</code> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\n  id: GetFieldValueAsync``1(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetFieldValueAsync<T>(Int32)\n  nameWithType: DbDataReader.GetFieldValueAsync<T>(Int32)\n  fullName: DbDataReader.GetFieldValueAsync<T>(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Asynchronously gets the value of the specified column as a type.\n  remarks: \"`T` can be one of the following types:  \\n  \\n|||||  \\n|-|-|-|-|  \\n|Boolean|Byte|Char|DateTime|  \\n|DateTimeOffset|Decimal|Double|Float|  \\n|Guid|Int16|Int32|Int64|  \\n|String||||  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The type of the value to be returned.\n    typeParameters:\n    - id: T\n      description: The type of the value to be returned.\n    return:\n      type: System.Threading.Tasks.Task{T}\n      description: The type of the value to be returned.\n  overload: System.Data.Common.DbDataReader.GetFieldValueAsync``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.Common.DbDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: <code>T</code> doesn’t match the type returned by the data source  or cannot be cast.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  id: GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetFieldValueAsync<T>(Int32, CancellationToken)\n  nameWithType: DbDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)\n  fullName: DbDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Asynchronously gets the value of the specified column as a type.\n  remarks: \"`T` can be one of the following types:  \\n  \\n|||||  \\n|-|-|-|-|  \\n|Boolean|Byte|Char|DateTime|  \\n|DateTimeOffset|Decimal|Double|Float|  \\n|Guid|Int16|Int32|Int64|  \\n|String||||  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The type of the value to be returned.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\"></xref>. The returned task must be marked as cancelled.\n    typeParameters:\n    - id: T\n      description: The type of the value to be returned.\n    return:\n      type: System.Threading.Tasks.Task{T}\n      description: The type of the value to be returned.\n  overload: System.Data.Common.DbDataReader.GetFieldValueAsync``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.Common.DbDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: <code>T</code> doesn’t match the type returned by the data source or cannot be cast.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetFloat(System.Int32)\n  id: GetFloat(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetFloat(Int32)\n  nameWithType: DbDataReader.GetFloat(Int32)\n  fullName: DbDataReader.GetFloat(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a single-precision floating point number.\n  syntax:\n    content: public abstract float GetFloat (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Single\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetFloat*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetGuid(System.Int32)\n  id: GetGuid(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetGuid(Int32)\n  nameWithType: DbDataReader.GetGuid(Int32)\n  fullName: DbDataReader.GetGuid(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a globally-unique identifier (GUID).\n  syntax:\n    content: public abstract Guid GetGuid (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Guid\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetGuid*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetInt16(System.Int32)\n  id: GetInt16(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetInt16(Int32)\n  nameWithType: DbDataReader.GetInt16(Int32)\n  fullName: DbDataReader.GetInt16(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a 16-bit signed integer.\n  syntax:\n    content: public abstract short GetInt16 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int16\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetInt16*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetInt32(System.Int32)\n  id: GetInt32(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetInt32(Int32)\n  nameWithType: DbDataReader.GetInt32(Int32)\n  fullName: DbDataReader.GetInt32(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a 32-bit signed integer.\n  remarks: \"```  \\nprivate static void GetCredits(String connectiongString) {  \\n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \\n      String queryString = \\\"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\\\";   \\n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \\n         conn.Open();   \\n         using (DbDataReader reader = command.ExecuteReader()) {  \\n            while (reader.Read()) {  \\n               // Credits column is the integer column, and you can use the GetInt32 method                        \\n               // to return a a 32-bit signed integer.                       \\n               Console.WriteLine(\\\"Course:{0,-15} Credits:{1}\\\",reader[1],reader.GetInt32(2));   \\n            }  \\n         }  \\n      }  \\n   }  \\n}  \\n```\"\n  syntax:\n    content: public abstract int GetInt32 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int32\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetInt32*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetInt64(System.Int32)\n  id: GetInt64(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetInt64(Int32)\n  nameWithType: DbDataReader.GetInt64(Int32)\n  fullName: DbDataReader.GetInt64(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as a 64-bit signed integer.\n  syntax:\n    content: public abstract long GetInt64 (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Int64\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetInt64*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetName(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetName(System.Int32)\n  id: GetName(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetName(Int32)\n  nameWithType: DbDataReader.GetName(Int32)\n  fullName: DbDataReader.GetName(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the name of the column, given the zero-based column ordinal.\n  syntax:\n    content: public abstract string GetName (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: The name of the specified column.\n  overload: System.Data.Common.DbDataReader.GetName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)\n  commentId: M:System.Data.Common.DbDataReader.GetOrdinal(System.String)\n  id: GetOrdinal(System.String)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetOrdinal(String)\n  nameWithType: DbDataReader.GetOrdinal(String)\n  fullName: DbDataReader.GetOrdinal(String)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the column ordinal given the name of the column.\n  syntax:\n    content: public abstract int GetOrdinal (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the column.\n    return:\n      type: System.Int32\n      description: The zero-based column ordinal.\n  overload: System.Data.Common.DbDataReader.GetOrdinal*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The name specified is not a valid column name.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)\n  id: GetProviderSpecificFieldType(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetProviderSpecificFieldType(Int32)\n  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)\n  fullName: DbDataReader.GetProviderSpecificFieldType(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Returns the provider-specific field type of the specified column.\n  syntax:\n    content: public virtual Type GetProviderSpecificFieldType (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> object that describes the data type of the specified column.\n  overload: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)\n  id: GetProviderSpecificValue(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetProviderSpecificValue(Int32)\n  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)\n  fullName: DbDataReader.GetProviderSpecificValue(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>.\n  remarks: To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.\n  syntax:\n    content: public virtual object GetProviderSpecificValue (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Object\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetProviderSpecificValue*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])\n  commentId: M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])\n  id: GetProviderSpecificValues(System.Object[])\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetProviderSpecificValues(Object[])\n  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])\n  fullName: DbDataReader.GetProviderSpecificValues(Object[])\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets all provider-specific attribute columns in the collection for the current row.\n  syntax:\n    content: public virtual int GetProviderSpecificValues (object[] values);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns.\n    return:\n      type: System.Int32\n      description: The number of instances of <xref href=\"System.Object\"></xref> in the array.\n  overload: System.Data.Common.DbDataReader.GetProviderSpecificValues*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetSchemaTable\n  commentId: M:System.Data.Common.DbDataReader.GetSchemaTable\n  id: GetSchemaTable\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetSchemaTable()\n  nameWithType: DbDataReader.GetSchemaTable()\n  fullName: DbDataReader.GetSchemaTable()\n  type: Method\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: Returns a <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata of the <xref href=\"System.Data.Common.DbDataReader\"></xref>.\n  syntax:\n    content: public virtual System.Data.DataTable GetSchemaTable ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that describes the column metadata.\n  overload: System.Data.Common.DbDataReader.GetSchemaTable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetStream(System.Int32)\n  id: GetStream(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetStream(Int32)\n  nameWithType: DbDataReader.GetStream(Int32)\n  fullName: DbDataReader.GetStream(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Retrieves data as a <xref href=\"System.IO.Stream\"></xref>.\n  remarks: \"<xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays.  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public virtual System.IO.Stream GetStream (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: Retrieves data as a <xref href=\"System.IO.Stream\"></xref>.\n    return:\n      type: System.IO.Stream\n      description: The returned object.\n  overload: System.Data.Common.DbDataReader.GetStream*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.Common.DbDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"The returned type was not one of the types below:  \\n  \\n-   binary  \\n  \\n-   image  \\n  \\n-   varbinary  \\n  \\n-   udt\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetString(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetString(System.Int32)\n  id: GetString(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetString(Int32)\n  nameWithType: DbDataReader.GetString(Int32)\n  fullName: DbDataReader.GetString(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as an instance of <xref href=\"System.String\"></xref>.\n  syntax:\n    content: public abstract string GetString (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.String\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetString*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The specified cast is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)\n  id: GetTextReader(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetTextReader(Int32)\n  nameWithType: DbDataReader.GetTextReader(Int32)\n  fullName: DbDataReader.GetTextReader(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Retrieves data as a <xref href=\"System.IO.TextReader\"></xref>.\n  remarks: \"<xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings).  \\n  \\n For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  syntax:\n    content: public virtual System.IO.TextReader GetTextReader (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: Retrieves data as a <xref href=\"System.IO.TextReader\"></xref>.\n    return:\n      type: System.IO.TextReader\n      description: The returned object.\n  overload: System.Data.Common.DbDataReader.GetTextReader*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.Common.DbDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Tried to read a previously-read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"The returned type was not one of the types below:  \\n  \\n-   char  \\n  \\n-   nchar  \\n  \\n-   ntext  \\n  \\n-   nvarchar  \\n  \\n-   text  \\n  \\n-   varchar\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.GetValue(System.Int32)\n  id: GetValue(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetValue(Int32)\n  nameWithType: DbDataReader.GetValue(Int32)\n  fullName: DbDataReader.GetValue(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>.\n  syntax:\n    content: public abstract object GetValue (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Object\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.GetValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])\n  commentId: M:System.Data.Common.DbDataReader.GetValues(System.Object[])\n  id: GetValues(System.Object[])\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: GetValues(Object[])\n  nameWithType: DbDataReader.GetValues(Object[])\n  fullName: DbDataReader.GetValues(Object[])\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Populates an array of objects with the column values of the current row.\n  syntax:\n    content: public abstract int GetValues (object[] values);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: An array of <xref href=\"System.Object\"></xref> into which to copy the attribute columns.\n    return:\n      type: System.Int32\n      description: The number of instances of <xref href=\"System.Object\"></xref> in the array.\n  overload: System.Data.Common.DbDataReader.GetValues*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.HasRows\n  commentId: P:System.Data.Common.DbDataReader.HasRows\n  id: HasRows\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: HasRows\n  nameWithType: DbDataReader.HasRows\n  fullName: DbDataReader.HasRows\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets a value that indicates whether this <xref href=\"System.Data.Common.DbDataReader\"></xref> contains one or more rows.\n  syntax:\n    content: public abstract bool HasRows { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Data.Common.DbDataReader\"></xref> contains one or more rows; otherwise `false`.'\n  overload: System.Data.Common.DbDataReader.HasRows*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.IsClosed\n  commentId: P:System.Data.Common.DbDataReader.IsClosed\n  id: IsClosed\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: DbDataReader.IsClosed\n  fullName: DbDataReader.IsClosed\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets a value indicating whether the <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed.\n  syntax:\n    content: public abstract bool IsClosed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Data.Common.DbDataReader\"></xref> is closed; otherwise `false`.'\n  overload: System.Data.Common.DbDataReader.IsClosed*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)\n  id: IsDBNull(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: IsDBNull(Int32)\n  nameWithType: DbDataReader.IsDBNull(Int32)\n  fullName: DbDataReader.IsDBNull(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets a value that indicates whether the column contains nonexistent or missing values.\n  remarks: Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid raising an error.\n  syntax:\n    content: public abstract bool IsDBNull (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified column is equivalent to <xref href=\"System.DBNull\"></xref>; otherwise `false`.'\n  overload: System.Data.Common.DbDataReader.IsDBNull*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: IsDBNullAsync(Int32, CancellationToken)\n  nameWithType: DbDataReader.IsDBNullAsync(Int32, CancellationToken)\n  fullName: DbDataReader.IsDBNullAsync(Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values. Optionally, sends a notification that operations should be cancelled.\n  remarks: For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column to be retrieved.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of `CancellationToken.None` makes this method equivalent to <xref href=\"System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\"></xref>. The returned task must be marked as cancelled.\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: '`true` if the specified column value is equivalent to `DBNull` otherwise `false`.'\n  overload: System.Data.Common.DbDataReader.IsDBNullAsync*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.Common.DbDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Trying to read a previously read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\n  id: IsDBNullAsync(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: IsDBNullAsync(Int32)\n  nameWithType: DbDataReader.IsDBNullAsync(Int32)\n  fullName: DbDataReader.IsDBNullAsync(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.IsDBNull(System.Int32)\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values.\n  remarks: For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column to be retrieved.\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: '`true` if the specified column value is equivalent to `DBNull` otherwise `false`.'\n  overload: System.Data.Common.DbDataReader.IsDBNullAsync*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The connection drops or is closed during the data retrieval.  \\n  \\n The <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref> is closed during the data retrieval.  \\n  \\n There is no data ready to be read (for example, the first <xref href=\\\"System.Data.Common.DbDataReader.Read\\\"></xref> hasn't been called, or returned false).  \\n  \\n Trying to read a previously read column in sequential mode.  \\n  \\n There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.\"\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: Trying to read a column that does not exist.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.Item(System.Int32)\n  commentId: P:System.Data.Common.DbDataReader.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DbDataReader.Item(Int32)\n  fullName: DbDataReader.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>.\n  syntax:\n    content: public abstract object this[int ordinal] { get; }\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Object\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: The index passed was outside the range of 0 through <xref href=\"System.Data.IDataRecord.FieldCount\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.Item(System.String)\n  commentId: P:System.Data.Common.DbDataReader.Item(System.String)\n  id: Item(System.String)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: DbDataReader.Item(String)\n  fullName: DbDataReader.Item(String)\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the value of the specified column as an instance of <xref href=\"System.Object\"></xref>.\n  syntax:\n    content: public abstract object this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the column.\n    return:\n      type: System.Object\n      description: The value of the specified column.\n  overload: System.Data.Common.DbDataReader.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: No column with the specified name was found.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.NextResult\n  commentId: M:System.Data.Common.DbDataReader.NextResult\n  id: NextResult\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: NextResult()\n  nameWithType: DbDataReader.NextResult()\n  fullName: DbDataReader.NextResult()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Advances the reader to the next result when reading the results of a batch of statements.\n  remarks: This method allows you to process multiple result sets returned when a batch is submitted to the data provider.\n  syntax:\n    content: public abstract bool NextResult ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if there are more result sets; otherwise `false`.'\n  overload: System.Data.Common.DbDataReader.NextResult*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.NextResultAsync\n  commentId: M:System.Data.Common.DbDataReader.NextResultAsync\n  id: NextResultAsync\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: NextResultAsync()\n  nameWithType: DbDataReader.NextResultAsync()\n  fullName: DbDataReader.NextResultAsync()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.Common.DbDataReader.NextResult\\\"></xref>, which advances the reader to the next result when reading the results of a batch of statements.  \\n  \\n Invokes <xref href=\\\"System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\\\"></xref> with CancellationToken.None.\"\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<bool> NextResultAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbDataReader.NextResultAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\n  id: NextResultAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: NextResultAsync(CancellationToken)\n  nameWithType: DbDataReader.NextResultAsync(CancellationToken)\n  fullName: DbDataReader.NextResultAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: \"This is the asynchronous version of <xref href=\\\"System.Data.Common.DbDataReader.NextResult\\\"></xref>. Providers should override with an appropriate implementation. The <code>cancellationToken</code> may optionally be ignored.  \\n  \\n The default implementation invokes the synchronous <xref href=\\\"System.Data.Common.DbDataReader.NextResult\\\"></xref> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled <code>cancellationToken</code>. Exceptions thrown by <xref href=\\\"System.Data.Common.DbDataReader.NextResult\\\"></xref> will be communicated via the returned Task Exception property.  \\n  \\n Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.\"\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbDataReader.NextResultAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.Read\n  commentId: M:System.Data.Common.DbDataReader.Read\n  id: Read\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: DbDataReader.Read()\n  fullName: DbDataReader.Read()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Advances the reader to the next record in a result set.\n  remarks: The default position of a data reader is before the first record. Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data.\n  syntax:\n    content: public abstract bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if there are more rows; otherwise `false`.'\n  overload: System.Data.Common.DbDataReader.Read*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.ReadAsync\n  commentId: M:System.Data.Common.DbDataReader.ReadAsync\n  id: ReadAsync\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: ReadAsync()\n  nameWithType: DbDataReader.ReadAsync()\n  fullName: DbDataReader.ReadAsync()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: An asynchronous version of <xref href=\"System.Data.Common.DbDataReader.Read\"></xref>, which advances the reader to the next record in a result set. This method invokes <xref href=\"System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> with CancellationToken.None.\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<bool> ReadAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbDataReader.ReadAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\n  id: ReadAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: ReadAsync(CancellationToken)\n  nameWithType: DbDataReader.ReadAsync(CancellationToken)\n  fullName: DbDataReader.ReadAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: \"This is the asynchronous version of <xref href=\\\"System.Data.Common.DbDataReader.Read\\\"></xref>.  Providers should override with an appropriate implementation. The cancellationToken may optionally be ignored.  \\n  \\n The default implementation invokes the synchronous <xref href=\\\"System.Data.Common.DbDataReader.Read\\\"></xref> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellationToken.  Exceptions thrown by Read will be communicated via the returned Task Exception property.  \\n  \\n Do not invoke other methods and properties of the `DbDataReader` object until the returned Task is complete.\"\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbDataReader.ReadAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.RecordsAffected\n  commentId: P:System.Data.Common.DbDataReader.RecordsAffected\n  id: RecordsAffected\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: RecordsAffected\n  nameWithType: DbDataReader.RecordsAffected\n  fullName: DbDataReader.RecordsAffected\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.\n  remarks: The `RecordsAffected` property is not set until all rows are read and you close the `DataReader`.\n  syntax:\n    content: public abstract int RecordsAffected { get; }\n    return:\n      type: System.Int32\n      description: The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.\n  overload: System.Data.Common.DbDataReader.RecordsAffected*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.VisibleFieldCount\n  commentId: P:System.Data.Common.DbDataReader.VisibleFieldCount\n  id: VisibleFieldCount\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: VisibleFieldCount\n  nameWithType: DbDataReader.VisibleFieldCount\n  fullName: DbDataReader.VisibleFieldCount\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: Gets the number of fields in the <xref href=\"System.Data.Common.DbDataReader\"></xref> that are not hidden.\n  remarks: This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible. For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields. The hidden fields are always appended behind the visible fields.\n  syntax:\n    content: public virtual int VisibleFieldCount { get; }\n    return:\n      type: System.Int32\n      description: The number of fields that are not hidden.\n  overload: System.Data.Common.DbDataReader.VisibleFieldCount*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DbDataReader.System#Data#IDataReader#Close\n  commentId: M:System.Data.Common.DbDataReader.System#Data#IDataReader#Close\n  id: System#Data#IDataReader#Close\n  isEii: true\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: IDataReader.Close()\n  nameWithType: DbDataReader.IDataReader.Close()\n  fullName: DbDataReader.IDataReader.Close()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: void IDataReader.Close ();\n    parameters: []\n  overload: System.Data.Common.DbDataReader.System#Data#IDataReader#Close*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable\n  commentId: M:System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable\n  id: System#Data#IDataReader#GetSchemaTable\n  isEii: true\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: IDataReader.GetSchemaTable()\n  nameWithType: DbDataReader.IDataReader.GetSchemaTable()\n  fullName: DbDataReader.IDataReader.GetSchemaTable()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  syntax:\n    content: System.Data.DataTable IDataReader.GetSchemaTable ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: ''\n  overload: System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  commentId: M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  id: System#Data#IDataRecord#GetData(System.Int32)\n  isEii: true\n  parent: System.Data.Common.DbDataReader\n  langs:\n  - csharp\n  name: IDataRecord.GetData(Int32)\n  nameWithType: DbDataReader.IDataRecord.GetData(Int32)\n  fullName: DbDataReader.IDataRecord.GetData(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data.Common\n  summary: For a description of this member, see <xref href=\"System.Data.IDataRecord.GetData(System.Int32)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.\n  syntax:\n    content: System.Data.IDataReader IDataRecord.GetData (int ordinal);\n    parameters:\n    - id: ordinal\n      type: System.Int32\n      description: The zero-based column ordinal.\n    return:\n      type: System.Data.IDataReader\n      description: An instance of <xref href=\"System.Data.IDataReader\"></xref> to be used when the field points to more remote structured data.\n  overload: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.Data.Common.DbException\n  parent: System.Data.Common\n  isExternal: false\n  name: DbException\n  nameWithType: DbException\n  fullName: System.Data.Common.DbException\n- uid: System.Data.Common.DbDataReader.#ctor\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: DbDataReader()\n  nameWithType: DbDataReader.DbDataReader()\n  fullName: DbDataReader.DbDataReader()\n- uid: System.Data.Common.DbDataReader.Close\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Close()\n  nameWithType: DbDataReader.Close()\n  fullName: DbDataReader.Close()\n- uid: System.Data.Common.DbDataReader.Depth\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: DbDataReader.Depth\n  fullName: DbDataReader.Depth\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Common.DbDataReader.Dispose\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Dispose()\n  nameWithType: DbDataReader.Dispose()\n  fullName: DbDataReader.Dispose()\n- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DbDataReader.Dispose(Boolean)\n  fullName: DbDataReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.DbDataReader.FieldCount\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: FieldCount\n  nameWithType: DbDataReader.FieldCount\n  fullName: DbDataReader.FieldCount\n- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetBoolean(Int32)\n  nameWithType: DbDataReader.GetBoolean(Int32)\n  fullName: DbDataReader.GetBoolean(Int32)\n- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetByte(Int32)\n  nameWithType: DbDataReader.GetByte(Int32)\n  fullName: DbDataReader.GetByte(Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  nameWithType: DbDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n  fullName: DbDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetChar(Int32)\n  nameWithType: DbDataReader.GetChar(Int32)\n  fullName: DbDataReader.GetChar(Int32)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetChars(Int32, Int64, Char[], Int32, Int32)\n  nameWithType: DbDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)\n  fullName: DbDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Common.DbDataReader.GetData(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetData(Int32)\n  nameWithType: DbDataReader.GetData(Int32)\n  fullName: DbDataReader.GetData(Int32)\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDataTypeName(Int32)\n  nameWithType: DbDataReader.GetDataTypeName(Int32)\n  fullName: DbDataReader.GetDataTypeName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDateTime(Int32)\n  nameWithType: DbDataReader.GetDateTime(Int32)\n  fullName: DbDataReader.GetDateTime(Int32)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDbDataReader(Int32)\n  nameWithType: DbDataReader.GetDbDataReader(Int32)\n  fullName: DbDataReader.GetDbDataReader(Int32)\n- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDecimal(Int32)\n  nameWithType: DbDataReader.GetDecimal(Int32)\n  fullName: DbDataReader.GetDecimal(Int32)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDouble(Int32)\n  nameWithType: DbDataReader.GetDouble(Int32)\n  fullName: DbDataReader.GetDouble(Int32)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Data.Common.DbDataReader.GetEnumerator\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: DbDataReader.GetEnumerator()\n  fullName: DbDataReader.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFieldType(Int32)\n  nameWithType: DbDataReader.GetFieldType(Int32)\n  fullName: DbDataReader.GetFieldType(Int32)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFieldValue<T>(Int32)\n  nameWithType: DbDataReader.GetFieldValue<T>(Int32)\n  fullName: DbDataReader.GetFieldValue<T>(Int32)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFieldValueAsync<T>(Int32)\n  nameWithType: DbDataReader.GetFieldValueAsync<T>(Int32)\n  fullName: DbDataReader.GetFieldValueAsync<T>(Int32)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{T}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<T>\n  nameWithType: Task<T>\n  fullName: System.Threading.Tasks.Task<T>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFieldValueAsync<T>(Int32, CancellationToken)\n  nameWithType: DbDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)\n  fullName: DbDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFloat(Int32)\n  nameWithType: DbDataReader.GetFloat(Int32)\n  fullName: DbDataReader.GetFloat(Int32)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetGuid(Int32)\n  nameWithType: DbDataReader.GetGuid(Int32)\n  fullName: DbDataReader.GetGuid(Int32)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetInt16(Int32)\n  nameWithType: DbDataReader.GetInt16(Int32)\n  fullName: DbDataReader.GetInt16(Int32)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetInt32(Int32)\n  nameWithType: DbDataReader.GetInt32(Int32)\n  fullName: DbDataReader.GetInt32(Int32)\n- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetInt64(Int32)\n  nameWithType: DbDataReader.GetInt64(Int32)\n  fullName: DbDataReader.GetInt64(Int32)\n- uid: System.Data.Common.DbDataReader.GetName(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetName(Int32)\n  nameWithType: DbDataReader.GetName(Int32)\n  fullName: DbDataReader.GetName(Int32)\n- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetOrdinal(String)\n  nameWithType: DbDataReader.GetOrdinal(String)\n  fullName: DbDataReader.GetOrdinal(String)\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetProviderSpecificFieldType(Int32)\n  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)\n  fullName: DbDataReader.GetProviderSpecificFieldType(Int32)\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetProviderSpecificValue(Int32)\n  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)\n  fullName: DbDataReader.GetProviderSpecificValue(Int32)\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetProviderSpecificValues(Object[])\n  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])\n  fullName: DbDataReader.GetProviderSpecificValues(Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Common.DbDataReader.GetSchemaTable\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetSchemaTable()\n  nameWithType: DbDataReader.GetSchemaTable()\n  fullName: DbDataReader.GetSchemaTable()\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetStream(Int32)\n  nameWithType: DbDataReader.GetStream(Int32)\n  fullName: DbDataReader.GetStream(Int32)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Data.Common.DbDataReader.GetString(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetString(Int32)\n  nameWithType: DbDataReader.GetString(Int32)\n  fullName: DbDataReader.GetString(Int32)\n- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetTextReader(Int32)\n  nameWithType: DbDataReader.GetTextReader(Int32)\n  fullName: DbDataReader.GetTextReader(Int32)\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  nameWithType: TextReader\n  fullName: System.IO.TextReader\n- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetValue(Int32)\n  nameWithType: DbDataReader.GetValue(Int32)\n  fullName: DbDataReader.GetValue(Int32)\n- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetValues(Object[])\n  nameWithType: DbDataReader.GetValues(Object[])\n  fullName: DbDataReader.GetValues(Object[])\n- uid: System.Data.Common.DbDataReader.HasRows\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: HasRows\n  nameWithType: DbDataReader.HasRows\n  fullName: DbDataReader.HasRows\n- uid: System.Data.Common.DbDataReader.IsClosed\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: DbDataReader.IsClosed\n  fullName: DbDataReader.IsClosed\n- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IsDBNull(Int32)\n  nameWithType: DbDataReader.IsDBNull(Int32)\n  fullName: DbDataReader.IsDBNull(Int32)\n- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IsDBNullAsync(Int32, CancellationToken)\n  nameWithType: DbDataReader.IsDBNullAsync(Int32, CancellationToken)\n  fullName: DbDataReader.IsDBNullAsync(Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Boolean}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Boolean>\n  nameWithType: Task<Boolean>\n  fullName: System.Threading.Tasks.Task<System.Boolean>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IsDBNullAsync(Int32)\n  nameWithType: DbDataReader.IsDBNullAsync(Int32)\n  fullName: DbDataReader.IsDBNullAsync(Int32)\n- uid: System.Data.Common.DbDataReader.Item(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DbDataReader.Item(Int32)\n  fullName: DbDataReader.Item(Int32)\n- uid: System.Data.Common.DbDataReader.Item(System.String)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Item(String)\n  nameWithType: DbDataReader.Item(String)\n  fullName: DbDataReader.Item(String)\n- uid: System.Data.Common.DbDataReader.NextResult\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: NextResult()\n  nameWithType: DbDataReader.NextResult()\n  fullName: DbDataReader.NextResult()\n- uid: System.Data.Common.DbDataReader.NextResultAsync\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: NextResultAsync()\n  nameWithType: DbDataReader.NextResultAsync()\n  fullName: DbDataReader.NextResultAsync()\n- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: NextResultAsync(CancellationToken)\n  nameWithType: DbDataReader.NextResultAsync(CancellationToken)\n  fullName: DbDataReader.NextResultAsync(CancellationToken)\n- uid: System.Data.Common.DbDataReader.Read\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Read()\n  nameWithType: DbDataReader.Read()\n  fullName: DbDataReader.Read()\n- uid: System.Data.Common.DbDataReader.ReadAsync\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: ReadAsync()\n  nameWithType: DbDataReader.ReadAsync()\n  fullName: DbDataReader.ReadAsync()\n- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: ReadAsync(CancellationToken)\n  nameWithType: DbDataReader.ReadAsync(CancellationToken)\n  fullName: DbDataReader.ReadAsync(CancellationToken)\n- uid: System.Data.Common.DbDataReader.RecordsAffected\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: DbDataReader.RecordsAffected\n  fullName: DbDataReader.RecordsAffected\n- uid: System.Data.Common.DbDataReader.VisibleFieldCount\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: VisibleFieldCount\n  nameWithType: DbDataReader.VisibleFieldCount\n  fullName: DbDataReader.VisibleFieldCount\n- uid: System.Data.Common.DbDataReader.System#Data#IDataReader#Close\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IDataReader.Close()\n  nameWithType: DbDataReader.IDataReader.Close()\n  fullName: DbDataReader.IDataReader.Close()\n- uid: System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IDataReader.GetSchemaTable()\n  nameWithType: DbDataReader.IDataReader.GetSchemaTable()\n  fullName: DbDataReader.IDataReader.GetSchemaTable()\n- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IDataRecord.GetData(Int32)\n  nameWithType: DbDataReader.IDataRecord.GetData(Int32)\n  fullName: DbDataReader.IDataRecord.GetData(Int32)\n- uid: System.Data.IDataReader\n  parent: System.Data\n  isExternal: false\n  name: IDataReader\n  nameWithType: IDataReader\n  fullName: System.Data.IDataReader\n- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFieldValueAsync<T>\n  nameWithType: DbDataReader.GetFieldValueAsync<T>\n  fullName: DbDataReader.GetFieldValueAsync<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.NextResultAsync*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: NextResultAsync\n  nameWithType: DbDataReader.NextResultAsync\n  fullName: DbDataReader.NextResultAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.ReadAsync*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: ReadAsync\n  nameWithType: DbDataReader.ReadAsync\n  fullName: DbDataReader.ReadAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.#ctor*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader.DbDataReader\n  fullName: DbDataReader.DbDataReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.Close*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Close\n  nameWithType: DbDataReader.Close\n  fullName: DbDataReader.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.Depth*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Depth\n  nameWithType: DbDataReader.Depth\n  fullName: DbDataReader.Depth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.Dispose*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Dispose\n  nameWithType: DbDataReader.Dispose\n  fullName: DbDataReader.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.FieldCount*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: FieldCount\n  nameWithType: DbDataReader.FieldCount\n  fullName: DbDataReader.FieldCount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetBoolean*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetBoolean\n  nameWithType: DbDataReader.GetBoolean\n  fullName: DbDataReader.GetBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetByte*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetByte\n  nameWithType: DbDataReader.GetByte\n  fullName: DbDataReader.GetByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetBytes*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetBytes\n  nameWithType: DbDataReader.GetBytes\n  fullName: DbDataReader.GetBytes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetChar*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetChar\n  nameWithType: DbDataReader.GetChar\n  fullName: DbDataReader.GetChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetChars*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetChars\n  nameWithType: DbDataReader.GetChars\n  fullName: DbDataReader.GetChars\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetData*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetData\n  nameWithType: DbDataReader.GetData\n  fullName: DbDataReader.GetData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetDataTypeName*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDataTypeName\n  nameWithType: DbDataReader.GetDataTypeName\n  fullName: DbDataReader.GetDataTypeName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetDateTime*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDateTime\n  nameWithType: DbDataReader.GetDateTime\n  fullName: DbDataReader.GetDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetDbDataReader*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDbDataReader\n  nameWithType: DbDataReader.GetDbDataReader\n  fullName: DbDataReader.GetDbDataReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetDecimal*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDecimal\n  nameWithType: DbDataReader.GetDecimal\n  fullName: DbDataReader.GetDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetDouble*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetDouble\n  nameWithType: DbDataReader.GetDouble\n  fullName: DbDataReader.GetDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetEnumerator*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: DbDataReader.GetEnumerator\n  fullName: DbDataReader.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetFieldType*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFieldType\n  nameWithType: DbDataReader.GetFieldType\n  fullName: DbDataReader.GetFieldType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetFieldValue``1*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFieldValue<T>\n  nameWithType: DbDataReader.GetFieldValue<T>\n  fullName: DbDataReader.GetFieldValue<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetFloat*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetFloat\n  nameWithType: DbDataReader.GetFloat\n  fullName: DbDataReader.GetFloat\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetGuid*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetGuid\n  nameWithType: DbDataReader.GetGuid\n  fullName: DbDataReader.GetGuid\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetInt16*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetInt16\n  nameWithType: DbDataReader.GetInt16\n  fullName: DbDataReader.GetInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetInt32*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetInt32\n  nameWithType: DbDataReader.GetInt32\n  fullName: DbDataReader.GetInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetInt64*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetInt64\n  nameWithType: DbDataReader.GetInt64\n  fullName: DbDataReader.GetInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetName*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetName\n  nameWithType: DbDataReader.GetName\n  fullName: DbDataReader.GetName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetOrdinal*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetOrdinal\n  nameWithType: DbDataReader.GetOrdinal\n  fullName: DbDataReader.GetOrdinal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetProviderSpecificFieldType\n  nameWithType: DbDataReader.GetProviderSpecificFieldType\n  fullName: DbDataReader.GetProviderSpecificFieldType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetProviderSpecificValue\n  nameWithType: DbDataReader.GetProviderSpecificValue\n  fullName: DbDataReader.GetProviderSpecificValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetProviderSpecificValues\n  nameWithType: DbDataReader.GetProviderSpecificValues\n  fullName: DbDataReader.GetProviderSpecificValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetSchemaTable*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetSchemaTable\n  nameWithType: DbDataReader.GetSchemaTable\n  fullName: DbDataReader.GetSchemaTable\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetStream*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetStream\n  nameWithType: DbDataReader.GetStream\n  fullName: DbDataReader.GetStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetString*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetString\n  nameWithType: DbDataReader.GetString\n  fullName: DbDataReader.GetString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetTextReader*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetTextReader\n  nameWithType: DbDataReader.GetTextReader\n  fullName: DbDataReader.GetTextReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetValue*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetValue\n  nameWithType: DbDataReader.GetValue\n  fullName: DbDataReader.GetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.GetValues*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: GetValues\n  nameWithType: DbDataReader.GetValues\n  fullName: DbDataReader.GetValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.HasRows*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: HasRows\n  nameWithType: DbDataReader.HasRows\n  fullName: DbDataReader.HasRows\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.IsClosed*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IsClosed\n  nameWithType: DbDataReader.IsClosed\n  fullName: DbDataReader.IsClosed\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.IsDBNull*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IsDBNull\n  nameWithType: DbDataReader.IsDBNull\n  fullName: DbDataReader.IsDBNull\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.IsDBNullAsync*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: IsDBNullAsync\n  nameWithType: DbDataReader.IsDBNullAsync\n  fullName: DbDataReader.IsDBNullAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.Item*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Item\n  nameWithType: DbDataReader.Item\n  fullName: DbDataReader.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.NextResult*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: NextResult\n  nameWithType: DbDataReader.NextResult\n  fullName: DbDataReader.NextResult\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.Read*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: Read\n  nameWithType: DbDataReader.Read\n  fullName: DbDataReader.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.RecordsAffected*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: RecordsAffected\n  nameWithType: DbDataReader.RecordsAffected\n  fullName: DbDataReader.RecordsAffected\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.VisibleFieldCount*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: VisibleFieldCount\n  nameWithType: DbDataReader.VisibleFieldCount\n  fullName: DbDataReader.VisibleFieldCount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.System#Data#IDataReader#Close*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: System.Data.IDataReader.Close\n  nameWithType: DbDataReader.System.Data.IDataReader.Close\n  fullName: DbDataReader.System.Data.IDataReader.Close\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: System.Data.IDataReader.GetSchemaTable\n  nameWithType: DbDataReader.System.Data.IDataReader.GetSchemaTable\n  fullName: DbDataReader.System.Data.IDataReader.GetSchemaTable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*\n  parent: System.Data.Common.DbDataReader\n  isExternal: false\n  name: System.Data.IDataRecord.GetData\n  nameWithType: DbDataReader.System.Data.IDataRecord.GetData\n  fullName: DbDataReader.System.Data.IDataRecord.GetData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbDataReader.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)\n  parent: System.Data.Common.DbDataReaderExtensions\n  isExternal: false\n  name: CanGetColumnSchema(DbDataReader)\n  nameWithType: DbDataReaderExtensions.CanGetColumnSchema(DbDataReader)\n  fullName: DbDataReaderExtensions.CanGetColumnSchema(DbDataReader)\n- uid: System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)\n  parent: System.Data.Common.DbDataReaderExtensions\n  isExternal: false\n  name: GetColumnSchema(DbDataReader)\n  nameWithType: DbDataReaderExtensions.GetColumnSchema(DbDataReader)\n  fullName: DbDataReaderExtensions.GetColumnSchema(DbDataReader)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}