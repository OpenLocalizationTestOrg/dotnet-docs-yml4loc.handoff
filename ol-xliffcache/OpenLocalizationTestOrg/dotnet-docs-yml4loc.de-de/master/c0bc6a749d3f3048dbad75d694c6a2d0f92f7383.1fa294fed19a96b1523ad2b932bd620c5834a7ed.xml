{"nodes":[{"content":"Contains information about a speech synthesis voice installed in Windows.","nodes":[{"pos":[0,73],"content":"Contains information about a speech synthesis voice installed in Windows.","nodes":[{"content":"Contains information about a speech synthesis voice installed in Windows.","pos":[0,73]}]}],"pos":[612,686],"yaml":true},{"content":"Use this class to get information about an installed voice, including its culture, name, gender, age, and whether it is enabled.  \n  \n To perform text-to-speech using the language specified in the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis engine that supports that language-country code must be installed. The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:  \n  \n-   en-US. English (United States)  \n  \n-   zh-CN. Chinese (China)  \n  \n-   zh-TW. Chinese (Taiwan)  \n  \n Two-letter language codes such as \"en\" are also permitted.","nodes":[{"pos":[0,128],"content":"Use this class to get information about an installed voice, including its culture, name, gender, age, and whether it is enabled.","nodes":[{"content":"Use this class to get information about an installed voice, including its culture, name, gender, age, and whether it is enabled.","pos":[0,128]}]},{"pos":[135,463],"content":"To perform text-to-speech using the language specified in the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis engine that supports that language-country code must be installed. The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:","nodes":[{"content":"To perform text-to-speech using the language specified in the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis engine that supports that language-country code must be installed. The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:","pos":[0,328],"nodes":[{"content":"To perform text-to-speech using the language specified in the <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.PromptBuilder.Culture%2A&gt;</ph> property, a speech synthesis engine that supports that language-country code must be installed.","pos":[0,213],"source":"To perform text-to-speech using the language specified in the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis engine that supports that language-country code must be installed."},{"content":"The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:","pos":[214,328]}]}]},{"pos":[473,503],"content":"en-US. English (United States)","nodes":[{"content":"en-US. English (United States)","pos":[0,30],"nodes":[{"content":"en-US.","pos":[0,6]},{"content":"English (United States)","pos":[7,30]}]}]},{"pos":[513,535],"content":"zh-CN. Chinese (China)","nodes":[{"content":"zh-CN. Chinese (China)","pos":[0,22],"nodes":[{"content":"zh-CN.","pos":[0,6]},{"content":"Chinese (China)","pos":[7,22]}]}]},{"pos":[545,568],"content":"zh-TW. Chinese (Taiwan)","nodes":[{"content":"zh-TW. Chinese (Taiwan)","pos":[0,23],"nodes":[{"content":"zh-TW.","pos":[0,6]},{"content":"Chinese (Taiwan)","pos":[7,23]}]}]},{"pos":[575,633],"content":"Two-letter language codes such as \"en\" are also permitted.","nodes":[{"content":"Two-letter language codes such as \"en\" are also permitted.","pos":[0,58]}]}],"pos":[697,1345],"yaml":true,"extradata":"MT"},{"content":"Gets or sets whether a voice can be used to generate speech.","nodes":[{"pos":[0,60],"content":"Gets or sets whether a voice can be used to generate speech.","nodes":[{"content":"Gets or sets whether a voice can be used to generate speech.","pos":[0,60]}]}],"pos":[5018,5079],"yaml":true},{"content":"The value of the <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `true` by default. When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria. For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `false`. An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `false`. Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.","nodes":[{"pos":[0,735],"content":"The value of the <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `true` by default. When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria. For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `false`. An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `false`. Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph> by default.","pos":[0,104],"source":"The value of the <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `true` by default."},{"content":"When an application calls <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A&gt;</ph>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.","pos":[105,303],"source":" When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria."},{"content":"For any voice that fails verification, <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A&gt;</ph> sets its <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A&gt;</ph> property to <ph id=\"ph3\">`false`</ph>.","pos":[304,500],"source":" For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `false`."},{"content":"An application cannot select a voice whose <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>.","pos":[501,621],"source":" An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `false`."},{"content":"Typically, applications will not set a voice’s <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A&gt;</ph> property.","pos":[622,735],"source":" Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property."}]}],"pos":[5090,5826],"yaml":true,"extradata":"MT"},{"content":"Returns a `bool` that represents the enabled state of the voice.","nodes":[{"pos":[0,64],"content":"Returns a <ph id=\"ph1\">`bool`</ph> that represents the enabled state of the voice.","source":"Returns a `bool` that represents the enabled state of the voice."}],"pos":[5941,6006],"yaml":true},{"content":"Determines if a given object is an instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> and equal to the current instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref>.","nodes":[{"pos":[0,204],"content":"Determines if a given object is an instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.InstalledVoice\"&gt;&lt;/xref&gt;</ph> and equal to the current instance of <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.InstalledVoice\"&gt;&lt;/xref&gt;</ph>.","source":"Determines if a given object is an instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> and equal to the current instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref>."}],"pos":[7048,7253],"yaml":true},{"content":"The method returns false if the <xref:System.Object> provided by the `obj` argument cannot be cast to <xref:System.Speech.Synthesis.InstalledVoice>.","nodes":[{"pos":[0,148],"content":"The method returns false if the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> provided by the <ph id=\"ph2\">`obj`</ph> argument cannot be cast to <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.InstalledVoice&gt;</ph>.","source":"The method returns false if the <xref:System.Object> provided by the `obj` argument cannot be cast to <xref:System.Speech.Synthesis.InstalledVoice>."}],"pos":[7264,7413],"yaml":true,"extradata":"MT"},{"content":"An object that can be cast to an instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref>.","nodes":[{"pos":[0,105],"content":"An object that can be cast to an instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.InstalledVoice\"&gt;&lt;/xref&gt;</ph>.","source":"An object that can be cast to an instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref>."}],"pos":[7553,7659],"yaml":true},{"content":"Returns `true` if the current instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> and that obtained from the <code>obj</code> argument are equal, otherwise returns `false`.","nodes":[{"pos":[0,192],"content":"Returns <ph id=\"ph1\">`true`</ph> if the current instance of <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.InstalledVoice\"&gt;&lt;/xref&gt;</ph> and that obtained from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument are equal, otherwise returns <ph id=\"ph4\">`false`</ph>.","source":"Returns `true` if the current instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> and that obtained from the <code>obj</code> argument are equal, otherwise returns `false`."}],"pos":[7717,7910],"yaml":true},{"content":"Provides a hash code for an <code>InstalledVoice</code> object.","nodes":[{"pos":[0,63],"content":"Provides a hash code for an <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">InstalledVoice</ph><ept id=\"p1\">&lt;/code&gt;</ept> object.","source":"Provides a hash code for an <code>InstalledVoice</code> object."}],"pos":[8918,8982],"yaml":true},{"content":"A hash code for the current <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> object.","nodes":[{"pos":[0,95],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.InstalledVoice\"&gt;&lt;/xref&gt;</ph> object.","source":"A hash code for the current <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> object."}],"pos":[9116,9212],"yaml":true},{"content":"Gets information about a voice, such as culture, name, gender, and age.","nodes":[{"pos":[0,71],"content":"Gets information about a voice, such as culture, name, gender, and age.","nodes":[{"content":"Gets information about a voice, such as culture, name, gender, and age.","pos":[0,71]}]}],"pos":[10209,10281],"yaml":true},{"content":"The information about an installed voice.","nodes":[{"pos":[0,41],"content":"The information about an installed voice.","nodes":[{"content":"The information about an installed voice.","pos":[0,41]}]}],"pos":[10441,10483],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Synthesis.InstalledVoice\n  commentId: T:System.Speech.Synthesis.InstalledVoice\n  id: InstalledVoice\n  children:\n  - System.Speech.Synthesis.InstalledVoice.Enabled\n  - System.Speech.Synthesis.InstalledVoice.Equals(System.Object)\n  - System.Speech.Synthesis.InstalledVoice.GetHashCode\n  - System.Speech.Synthesis.InstalledVoice.VoiceInfo\n  langs:\n  - csharp\n  name: InstalledVoice\n  nameWithType: InstalledVoice\n  fullName: System.Speech.Synthesis.InstalledVoice\n  type: Class\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Contains information about a speech synthesis voice installed in Windows.\n  remarks: \"Use this class to get information about an installed voice, including its culture, name, gender, age, and whether it is enabled.  \\n  \\n To perform text-to-speech using the language specified in the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis engine that supports that language-country code must be installed. The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:  \\n  \\n-   en-US. English (United States)  \\n  \\n-   zh-CN. Chinese (China)  \\n  \\n-   zh-TW. Chinese (Taiwan)  \\n  \\n Two-letter language codes such as \\\"en\\\" are also permitted.\"\n  example:\n  - \"The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.  \\n  \\n```csharp  \\nusing System;  \\nusing System.Speech.Synthesis;  \\nusing System.Speech.AudioFormat;  \\n  \\nnamespace SampleSynthesis  \\n{  \\n  class Program  \\n  {  \\n    static void Main(string[] args)  \\n    {  \\n  \\n      // Initialize a new instance of the SpeechSynthesizer.  \\n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \\n      {  \\n  \\n        // Output information about all of the installed voices.   \\n        Console.WriteLine(\\\"Installed voices -\\\");  \\n        foreach (InstalledVoice voice in synth.GetInstalledVoices())  \\n        {  \\n          VoiceInfo info = voice.VoiceInfo;  \\n          string AudioFormats = \\\"\\\";  \\n          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  \\n          {  \\n            AudioFormats += String.Format(\\\"{0}\\\\n\\\",  \\n            fmt.EncodingFormat.ToString());  \\n          }  \\n  \\n          Console.WriteLine(\\\" Name:          \\\" + info.Name);  \\n          Console.WriteLine(\\\" Culture:       \\\" + info.Culture);  \\n          Console.WriteLine(\\\" Age:           \\\" + info.Age);  \\n          Console.WriteLine(\\\" Gender:        \\\" + info.Gender);  \\n          Console.WriteLine(\\\" Description:   \\\" + info.Description);  \\n          Console.WriteLine(\\\" ID:            \\\" + info.Id);  \\n          Console.WriteLine(\\\" Enabled:       \\\" + voice.Enabled);  \\n          if (info.SupportedAudioFormats.Count != 0)  \\n          {  \\n            Console.WriteLine( \\\" Audio formats: \\\" + AudioFormats);  \\n          }  \\n          else  \\n          {  \\n            Console.WriteLine(\\\" No supported audio formats found\\\");  \\n          }  \\n  \\n          string AdditionalInfo = \\\"\\\";  \\n          foreach (string key in info.AdditionalInfo.Keys)  \\n          {  \\n            AdditionalInfo += String.Format(\\\"  {0}: {1}\\\\n\\\", key, info.AdditionalInfo[key]);  \\n          }  \\n  \\n          Console.WriteLine(\\\" Additional Info - \\\" + AdditionalInfo);  \\n          Console.WriteLine();  \\n        }  \\n      }  \\n      Console.WriteLine(\\\"Press any key to exit...\\\");  \\n      Console.ReadKey();  \\n    }  \\n  }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public class InstalledVoice\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.InstalledVoice.Enabled\n  commentId: P:System.Speech.Synthesis.InstalledVoice.Enabled\n  id: Enabled\n  parent: System.Speech.Synthesis.InstalledVoice\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: InstalledVoice.Enabled\n  fullName: InstalledVoice.Enabled\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Gets or sets whether a voice can be used to generate speech.\n  remarks: The value of the <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `true` by default. When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria. For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `false`. An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `false`. Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns a `bool` that represents the enabled state of the voice.\n  overload: System.Speech.Synthesis.InstalledVoice.Enabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.InstalledVoice.Equals(System.Object)\n  commentId: M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Speech.Synthesis.InstalledVoice\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: InstalledVoice.Equals(Object)\n  fullName: InstalledVoice.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Determines if a given object is an instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> and equal to the current instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref>.\n  remarks: The method returns false if the <xref:System.Object> provided by the `obj` argument cannot be cast to <xref:System.Speech.Synthesis.InstalledVoice>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object that can be cast to an instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref>.\n    return:\n      type: System.Boolean\n      description: Returns `true` if the current instance of <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> and that obtained from the <code>obj</code> argument are equal, otherwise returns `false`.\n  overload: System.Speech.Synthesis.InstalledVoice.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode\n  commentId: M:System.Speech.Synthesis.InstalledVoice.GetHashCode\n  id: GetHashCode\n  parent: System.Speech.Synthesis.InstalledVoice\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: InstalledVoice.GetHashCode()\n  fullName: InstalledVoice.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Provides a hash code for an <code>InstalledVoice</code> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Speech.Synthesis.InstalledVoice\"></xref> object.\n  overload: System.Speech.Synthesis.InstalledVoice.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo\n  commentId: P:System.Speech.Synthesis.InstalledVoice.VoiceInfo\n  id: VoiceInfo\n  parent: System.Speech.Synthesis.InstalledVoice\n  langs:\n  - csharp\n  name: VoiceInfo\n  nameWithType: InstalledVoice.VoiceInfo\n  fullName: InstalledVoice.VoiceInfo\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Gets information about a voice, such as culture, name, gender, and age.\n  syntax:\n    content: public System.Speech.Synthesis.VoiceInfo VoiceInfo { get; }\n    return:\n      type: System.Speech.Synthesis.VoiceInfo\n      description: The information about an installed voice.\n  overload: System.Speech.Synthesis.InstalledVoice.VoiceInfo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Speech.Synthesis.InstalledVoice.Enabled\n  parent: System.Speech.Synthesis.InstalledVoice\n  isExternal: false\n  name: Enabled\n  nameWithType: InstalledVoice.Enabled\n  fullName: InstalledVoice.Enabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Speech.Synthesis.InstalledVoice.Equals(System.Object)\n  parent: System.Speech.Synthesis.InstalledVoice\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: InstalledVoice.Equals(Object)\n  fullName: InstalledVoice.Equals(Object)\n- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode\n  parent: System.Speech.Synthesis.InstalledVoice\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: InstalledVoice.GetHashCode()\n  fullName: InstalledVoice.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo\n  parent: System.Speech.Synthesis.InstalledVoice\n  isExternal: false\n  name: VoiceInfo\n  nameWithType: InstalledVoice.VoiceInfo\n  fullName: InstalledVoice.VoiceInfo\n- uid: System.Speech.Synthesis.VoiceInfo\n  parent: System.Speech.Synthesis\n  isExternal: false\n  name: VoiceInfo\n  nameWithType: VoiceInfo\n  fullName: System.Speech.Synthesis.VoiceInfo\n- uid: System.Speech.Synthesis.InstalledVoice.Enabled*\n  parent: System.Speech.Synthesis.InstalledVoice\n  isExternal: false\n  name: Enabled\n  nameWithType: InstalledVoice.Enabled\n  fullName: InstalledVoice.Enabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n- uid: System.Speech.Synthesis.InstalledVoice.Equals*\n  parent: System.Speech.Synthesis.InstalledVoice\n  isExternal: false\n  name: Equals\n  nameWithType: InstalledVoice.Equals\n  fullName: InstalledVoice.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode*\n  parent: System.Speech.Synthesis.InstalledVoice\n  isExternal: false\n  name: GetHashCode\n  nameWithType: InstalledVoice.GetHashCode\n  fullName: InstalledVoice.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo*\n  parent: System.Speech.Synthesis.InstalledVoice\n  isExternal: false\n  name: VoiceInfo\n  nameWithType: InstalledVoice.VoiceInfo\n  fullName: InstalledVoice.VoiceInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis/InstalledVoice.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}