### YamlMime:ManagedReference
items:
- uid: System.Management.ManagementEventWatcher
  commentId: T:System.Management.ManagementEventWatcher
  id: ManagementEventWatcher
  children:
  - System.Management.ManagementEventWatcher.#ctor
  - System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  - System.Management.ManagementEventWatcher.#ctor(System.String)
  - System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  - System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  - System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  - System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  - System.Management.ManagementEventWatcher.EventArrived
  - System.Management.ManagementEventWatcher.Finalize
  - System.Management.ManagementEventWatcher.Options
  - System.Management.ManagementEventWatcher.Query
  - System.Management.ManagementEventWatcher.Scope
  - System.Management.ManagementEventWatcher.Start
  - System.Management.ManagementEventWatcher.Stop
  - System.Management.ManagementEventWatcher.Stopped
  - System.Management.ManagementEventWatcher.WaitForNextEvent
  langs:
  - csharp
  name: ManagementEventWatcher
  nameWithType: ManagementEventWatcher
  fullName: System.Management.ManagementEventWatcher
  type: Class
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Subscribes to temporary event notifications based on a specified *event query*.
  remarks: ''
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]\n [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]"
  syntax:
    content: 'public class ManagementEventWatcher : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.#ctor
  commentId: M:System.Management.ManagementEventWatcher.#ctor
  id: '#ctor'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher()
  nameWithType: ManagementEventWatcher.ManagementEventWatcher()
  fullName: ManagementEventWatcher.ManagementEventWatcher()
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementEventWatcher"></xref> class. For further initialization, set the properties on the object. This is the default constructor.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher()/cs/ManagementEventWatcher().cs#1)]\n [!code-vb[wminet_ManagementEventWatcher()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher()/vb/ManagementEventWatcher().vb#1)]"
  syntax:
    content: public ManagementEventWatcher ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  commentId: M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  id: '#ctor(System.Management.EventQuery)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  fullName: ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementEventWatcher"></xref> class when given a WMI *event query*.
  remarks: "The namespace in which the watcher will be listening for events is the default namespace that is currently set.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher(E)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(E)/cs/ManagementEventWatcher(E).cs#1)]\n [!code-vb[wminet_ManagementEventWatcher(E)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(E)/vb/ManagementEventWatcher(E).vb#1)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.EventQuery query);
    parameters:
    - id: query
      type: System.Management.EventQuery
      description: An <xref href="System.Management.EventQuery"></xref> representing a WMI event query, which determines the events for which the watcher will listen.
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.#ctor(System.String)
  commentId: M:System.Management.ManagementEventWatcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String)
  fullName: ManagementEventWatcher.ManagementEventWatcher(String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementEventWatcher"></xref> class when given a WMI *event query* in the form of a string.
  remarks: "The namespace in which the watcher will be listening for events is the default namespace that is currently set.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher(S)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(S)/cs/ManagementEventWatcher(S).cs#1)]\n [!code-vb[wminet_ManagementEventWatcher(S)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(S)/vb/ManagementEventWatcher(S).vb#1)]"
  syntax:
    content: public ManagementEventWatcher (string query);
    parameters:
    - id: query
      type: System.String
      description: A WMI event query, which defines the events for which the watcher will listen.
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  commentId: M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  id: '#ctor(System.Management.ManagementScope,System.Management.EventQuery)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(ManagementScope, EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope, EventQuery)
  fullName: ManagementEventWatcher.ManagementEventWatcher(ManagementScope, EventQuery)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementEventWatcher"></xref> class that listens for events conforming to the given WMI *event query*.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher(M_E)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(M_E)/cs/ManagementEventWatcher(M_E).cs#1)]\n [!code-vb[wminet_ManagementEventWatcher(M_E)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(M_E)/vb/ManagementEventWatcher(M_E).vb#1)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);
    parameters:
    - id: scope
      type: System.Management.ManagementScope
      description: A <xref href="System.Management.ManagementScope"></xref> representing the scope (namespace) in which the watcher will listen for events.
    - id: query
      type: System.Management.EventQuery
      description: An <xref href="System.Management.EventQuery"></xref> representing a WMI event query, which determines the events for which the watcher will listen.
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  commentId: M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String, String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String, String)
  fullName: ManagementEventWatcher.ManagementEventWatcher(String, String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementEventWatcher"></xref> class that listens for events conforming to the given WMI *event query*. For this variant, the query and the scope are specified as strings.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher(S_S)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(S_S)/cs/ManagementEventWatcher(S_S).cs#1)]\n [!code-vb[wminet_ManagementEventWatcher(S_S)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(S_S)/vb/ManagementEventWatcher(S_S).vb#1)]"
  syntax:
    content: public ManagementEventWatcher (string scope, string query);
    parameters:
    - id: scope
      type: System.String
      description: The management scope (namespace) in which the watcher will listen for events.
    - id: query
      type: System.String
      description: The query that defines the events for which the watcher will listen.
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  commentId: M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  id: '#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(ManagementScope, EventQuery, EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope, EventQuery, EventWatcherOptions)
  fullName: ManagementEventWatcher.ManagementEventWatcher(ManagementScope, EventQuery, EventWatcherOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementEventWatcher"></xref> class that listens for events conforming to the given WMI event query, according to the specified options. For this variant, the query and the scope are specified objects. The options object can specify options such as time-out and context information.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher(M_E_E)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(M_E_E)/cs/ManagementEventWatcher(M_E_E).cs#1)]\n [!code-vb[wminet_ManagementEventWatcher(M_E_E)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(M_E_E)/vb/ManagementEventWatcher(M_E_E).vb#1)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);
    parameters:
    - id: scope
      type: System.Management.ManagementScope
      description: A <xref href="System.Management.ManagementScope"></xref> representing the scope (namespace) in which the watcher will listen for events.
    - id: query
      type: System.Management.EventQuery
      description: An <xref href="System.Management.EventQuery"></xref> representing a WMI event query, which determines the events for which the watcher will listen.
    - id: options
      type: System.Management.EventWatcherOptions
      description: An <xref href="System.Management.EventWatcherOptions"></xref> representing additional options used to watch for events.
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  commentId: M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  id: '#ctor(System.String,System.String,System.Management.EventWatcherOptions)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String, String, EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String, String, EventWatcherOptions)
  fullName: ManagementEventWatcher.ManagementEventWatcher(String, String, EventWatcherOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Initializes a new instance of the <xref href="System.Management.ManagementEventWatcher"></xref> class that listens for events conforming to the given WMI *event query*, according to the specified options. For this variant, the query and the scope are specified as strings. The options object can specify options such as a time-out and context information.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher(S_S_E)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(S_S_E)/cs/ManagementEventWatcher(S_S_E).cs#1)]\n [!code-vb[wminet_ManagementEventWatcher(S_S_E)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher(S_S_E)/vb/ManagementEventWatcher(S_S_E).vb#1)]"
  syntax:
    content: public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);
    parameters:
    - id: scope
      type: System.String
      description: The management scope (namespace) in which the watcher will listen for events.
    - id: query
      type: System.String
      description: The query that defines the events for which the watcher will listen.
    - id: options
      type: System.Management.EventWatcherOptions
      description: An <xref href="System.Management.EventWatcherOptions"></xref> representing additional options used to watch for events.
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.EventArrived
  commentId: E:System.Management.ManagementEventWatcher.EventArrived
  id: EventArrived
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: EventArrived
  nameWithType: ManagementEventWatcher.EventArrived
  fullName: ManagementEventWatcher.EventArrived
  type: Event
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Occurs when a new event arrives.
  remarks: "## Event Data  \n The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event. The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.  \n  \n|Property|Description|  \n|--------------|-----------------|  \n|<xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)|Gets the operation context echoed back from the operation that triggered the event.|  \n|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|Gets the WMI event that was delivered.|  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public event System.Management.EventArrivedEventHandler EventArrived;
    return:
      type: System.Management.EventArrivedEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.Finalize
  commentId: M:System.Management.ManagementEventWatcher.Finalize
  id: Finalize
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Finalize()
  nameWithType: ManagementEventWatcher.Finalize()
  fullName: ManagementEventWatcher.Finalize()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Ensures that outstanding calls are cleared. This is the destructor for the object. In C#, finalizers are expressed using destructor syntax.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: ~ManagementEventWatcher ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Finalize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.Options
  commentId: P:System.Management.ManagementEventWatcher.Options
  id: Options
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Options
  nameWithType: ManagementEventWatcher.Options
  fullName: ManagementEventWatcher.Options
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Gets or sets the options used to watch for events.
  remarks: "## Property Value  \n The options used to watch for events.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]\n [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]"
  syntax:
    content: public System.Management.EventWatcherOptions Options { get; set; }
    return:
      type: System.Management.EventWatcherOptions
      description: Returns an <xref href="System.Management.EventWatcherOptions"></xref> that contains the event options used to watch for events.
  overload: System.Management.ManagementEventWatcher.Options*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.Query
  commentId: P:System.Management.ManagementEventWatcher.Query
  id: Query
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Query
  nameWithType: ManagementEventWatcher.Query
  fullName: ManagementEventWatcher.Query
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Gets or sets the criteria to apply to events.
  remarks: "## Property Value  \n The criteria to apply to the events, which is equal to the *event query*.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]\n [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]"
  syntax:
    content: public System.Management.EventQuery Query { get; set; }
    return:
      type: System.Management.EventQuery
      description: Returns an <xref href="System.Management.EventQuery"></xref> that contains the query to apply to events.
  overload: System.Management.ManagementEventWatcher.Query*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.Scope
  commentId: P:System.Management.ManagementEventWatcher.Scope
  id: Scope
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
  fullName: ManagementEventWatcher.Scope
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Gets or sets the scope in which to watch for events (namespace or scope).
  remarks: "## Property Value  \n The scope in which to watch for events (namespace or scope).  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]\n [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]"
  syntax:
    content: public System.Management.ManagementScope Scope { get; set; }
    return:
      type: System.Management.ManagementScope
      description: Returns a <xref href="System.Management.ManagementScope"></xref> that contains the scope the in which to watch for events.
  overload: System.Management.ManagementEventWatcher.Scope*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.Start
  commentId: M:System.Management.ManagementEventWatcher.Start
  id: Start
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Start()
  nameWithType: ManagementEventWatcher.Start()
  fullName: ManagementEventWatcher.Start()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Subscribes to events with the given query and delivers them, asynchronously, through the <xref href="System.Management.ManagementEventWatcher.EventArrived"></xref> event.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Start*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.Stop
  commentId: M:System.Management.ManagementEventWatcher.Stop
  id: Stop
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Stop()
  nameWithType: ManagementEventWatcher.Stop()
  fullName: ManagementEventWatcher.Stop()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Cancels the subscription whether it is synchronous or asynchronous.
  remarks: "## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]\n [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Stop*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.Stopped
  commentId: E:System.Management.ManagementEventWatcher.Stopped
  id: Stopped
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Stopped
  nameWithType: ManagementEventWatcher.Stopped
  fullName: ManagementEventWatcher.Stopped
  type: Event
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Occurs when a subscription is canceled.
  remarks: "## Event Data  \n The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event. The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.  \n  \n|Property|Description|  \n|--------------|-----------------|  \n|<xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)|Gets the operation context echoed back from the operation that triggered the event.|  \n|<xref:System.Management.StoppedEventArgs.Status%2A>|Gets the completion status of the operation.|  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  syntax:
    content: public event System.Management.StoppedEventHandler Stopped;
    return:
      type: System.Management.StoppedEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent
  commentId: M:System.Management.ManagementEventWatcher.WaitForNextEvent
  id: WaitForNextEvent
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: WaitForNextEvent()
  nameWithType: ManagementEventWatcher.WaitForNextEvent()
  fullName: ManagementEventWatcher.WaitForNextEvent()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: Waits for the next event that matches the specified query to arrive, and then returns it.
  remarks: "If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.  \n  \n## .NET Framework Security  \n Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]\n [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]"
  syntax:
    content: public System.Management.ManagementBaseObject WaitForNextEvent ();
    parameters: []
    return:
      type: System.Management.ManagementBaseObject
      description: A <xref href="System.Management.ManagementBaseObject"></xref> representing the newly arrived event.
  overload: System.Management.ManagementEventWatcher.WaitForNextEvent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
  ms.technology:
  - dotnet-standard
  manager: jillfra
references:
- uid: System.ComponentModel.Component
  parent: System.ComponentModel
  isExternal: false
  name: Component
  nameWithType: Component
  fullName: System.ComponentModel.Component
- uid: System.Management.ManagementEventWatcher.#ctor
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher()
  nameWithType: ManagementEventWatcher.ManagementEventWatcher()
  fullName: ManagementEventWatcher.ManagementEventWatcher()
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  fullName: ManagementEventWatcher.ManagementEventWatcher(EventQuery)
- uid: System.Management.EventQuery
  parent: System.Management
  isExternal: false
  name: EventQuery
  nameWithType: EventQuery
  fullName: System.Management.EventQuery
- uid: System.Management.ManagementEventWatcher.#ctor(System.String)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String)
  fullName: ManagementEventWatcher.ManagementEventWatcher(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(ManagementScope, EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope, EventQuery)
  fullName: ManagementEventWatcher.ManagementEventWatcher(ManagementScope, EventQuery)
- uid: System.Management.ManagementScope
  parent: System.Management
  isExternal: false
  name: ManagementScope
  nameWithType: ManagementScope
  fullName: System.Management.ManagementScope
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String, String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String, String)
  fullName: ManagementEventWatcher.ManagementEventWatcher(String, String)
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(ManagementScope, EventQuery, EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope, EventQuery, EventWatcherOptions)
  fullName: ManagementEventWatcher.ManagementEventWatcher(ManagementScope, EventQuery, EventWatcherOptions)
- uid: System.Management.EventWatcherOptions
  parent: System.Management
  isExternal: false
  name: EventWatcherOptions
  nameWithType: EventWatcherOptions
  fullName: System.Management.EventWatcherOptions
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String, String, EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String, String, EventWatcherOptions)
  fullName: ManagementEventWatcher.ManagementEventWatcher(String, String, EventWatcherOptions)
- uid: System.Management.ManagementEventWatcher.EventArrived
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: EventArrived
  nameWithType: ManagementEventWatcher.EventArrived
  fullName: ManagementEventWatcher.EventArrived
- uid: System.Management.EventArrivedEventHandler
  parent: System.Management
  isExternal: false
  name: EventArrivedEventHandler
  nameWithType: EventArrivedEventHandler
  fullName: System.Management.EventArrivedEventHandler
- uid: System.Management.ManagementEventWatcher.Finalize
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Finalize()
  nameWithType: ManagementEventWatcher.Finalize()
  fullName: ManagementEventWatcher.Finalize()
- uid: System.Management.ManagementEventWatcher.Options
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Options
  nameWithType: ManagementEventWatcher.Options
  fullName: ManagementEventWatcher.Options
- uid: System.Management.ManagementEventWatcher.Query
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Query
  nameWithType: ManagementEventWatcher.Query
  fullName: ManagementEventWatcher.Query
- uid: System.Management.ManagementEventWatcher.Scope
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
  fullName: ManagementEventWatcher.Scope
- uid: System.Management.ManagementEventWatcher.Start
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Start()
  nameWithType: ManagementEventWatcher.Start()
  fullName: ManagementEventWatcher.Start()
- uid: System.Management.ManagementEventWatcher.Stop
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stop()
  nameWithType: ManagementEventWatcher.Stop()
  fullName: ManagementEventWatcher.Stop()
- uid: System.Management.ManagementEventWatcher.Stopped
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stopped
  nameWithType: ManagementEventWatcher.Stopped
  fullName: ManagementEventWatcher.Stopped
- uid: System.Management.StoppedEventHandler
  parent: System.Management
  isExternal: false
  name: StoppedEventHandler
  nameWithType: StoppedEventHandler
  fullName: System.Management.StoppedEventHandler
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: WaitForNextEvent()
  nameWithType: ManagementEventWatcher.WaitForNextEvent()
  fullName: ManagementEventWatcher.WaitForNextEvent()
- uid: System.Management.ManagementBaseObject
  parent: System.Management
  isExternal: false
  name: ManagementBaseObject
  nameWithType: ManagementBaseObject
  fullName: System.Management.ManagementBaseObject
- uid: System.Management.ManagementEventWatcher.#ctor*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher
  nameWithType: ManagementEventWatcher.ManagementEventWatcher
  fullName: ManagementEventWatcher.ManagementEventWatcher
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
- uid: System.Management.ManagementEventWatcher.Finalize*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Finalize
  nameWithType: ManagementEventWatcher.Finalize
  fullName: ManagementEventWatcher.Finalize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
- uid: System.Management.ManagementEventWatcher.Options*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Options
  nameWithType: ManagementEventWatcher.Options
  fullName: ManagementEventWatcher.Options
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
- uid: System.Management.ManagementEventWatcher.Query*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Query
  nameWithType: ManagementEventWatcher.Query
  fullName: ManagementEventWatcher.Query
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
- uid: System.Management.ManagementEventWatcher.Scope*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
  fullName: ManagementEventWatcher.Scope
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
- uid: System.Management.ManagementEventWatcher.Start*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Start
  nameWithType: ManagementEventWatcher.Start
  fullName: ManagementEventWatcher.Start
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
- uid: System.Management.ManagementEventWatcher.Stop*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stop
  nameWithType: ManagementEventWatcher.Stop
  fullName: ManagementEventWatcher.Stop
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: WaitForNextEvent
  nameWithType: ManagementEventWatcher.WaitForNextEvent
  fullName: ManagementEventWatcher.WaitForNextEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management/ManagementEventWatcher.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString()
  nameWithType: Component.ToString()
  fullName: Component.ToString()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: Component.Container
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: Component.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: Component.Disposed
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: Component.Events
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: Component.GetService(Type)
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: Component.Site
