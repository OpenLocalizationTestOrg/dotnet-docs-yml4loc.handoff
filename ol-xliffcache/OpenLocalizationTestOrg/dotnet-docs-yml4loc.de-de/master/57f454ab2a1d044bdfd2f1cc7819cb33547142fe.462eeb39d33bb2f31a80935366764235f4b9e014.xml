{"nodes":[{"content":"Provides a set of utility functions for interpreting performance counter data.","nodes":[{"pos":[0,78],"content":"Provides a set of utility functions for interpreting performance counter data.","nodes":[{"content":"Provides a set of utility functions for interpreting performance counter data.","pos":[0,78]}]}],"pos":[650,729],"yaml":true},{"content":"Computes the calculated value of a single raw counter sample.","nodes":[{"pos":[0,61],"content":"Computes the calculated value of a single raw counter sample.","nodes":[{"content":"Computes the calculated value of a single raw counter sample.","pos":[0,61]}]}],"pos":[2339,2401],"yaml":true},{"content":"The <xref:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue%28System.Diagnostics.CounterSample%29> method overload returns meaningful results only for performance counters of the following <xref:System.Diagnostics.PerformanceCounterType>:  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.RawFraction>  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItems32>  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32>  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItems64>  \n  \n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64>  \n  \n For other counter types, this overload always returns a value of 0 (zero).","nodes":[{"pos":[0,251],"content":"The <xref:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue%28System.Diagnostics.CounterSample%29> method overload returns meaningful results only for performance counters of the following <xref:System.Diagnostics.PerformanceCounterType>:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue%28System.Diagnostics.CounterSample%29&gt;</ph> method overload returns meaningful results only for performance counters of the following <ph id=\"ph2\">&lt;xref:System.Diagnostics.PerformanceCounterType&gt;</ph>:","pos":[0,251],"source":"The <xref:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue%28System.Diagnostics.CounterSample%29> method overload returns meaningful results only for performance counters of the following <xref:System.Diagnostics.PerformanceCounterType>:"}]},{"pos":[261,321],"content":"<xref:System.Diagnostics.PerformanceCounterType.RawFraction>","nodes":[]},{"pos":[331,395],"content":"<xref:System.Diagnostics.PerformanceCounterType.NumberOfItems32>","nodes":[]},{"pos":[405,472],"content":"<xref:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32>","nodes":[]},{"pos":[482,546],"content":"<xref:System.Diagnostics.PerformanceCounterType.NumberOfItems64>","nodes":[]},{"pos":[556,623],"content":"<xref:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64>","nodes":[]},{"pos":[630,704],"content":"For other counter types, this overload always returns a value of 0 (zero).","nodes":[{"content":"For other counter types, this overload always returns a value of 0 (zero).","pos":[0,74]}]}],"pos":[2412,3131],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> that indicates the most recent sample the system has taken.","source":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken."}],"pos":[3340,3456],"yaml":true},{"content":"A floating-point representation of the performance counter's calculated value.","nodes":[{"pos":[0,78],"content":"A floating-point representation of the performance counter's calculated value.","nodes":[{"content":"A floating-point representation of the performance counter's calculated value.","pos":[0,78]}]}],"pos":[3513,3592],"yaml":true},{"content":"Computes the calculated value of two raw counter samples.","nodes":[{"pos":[0,57],"content":"Computes the calculated value of two raw counter samples.","nodes":[{"content":"Computes the calculated value of two raw counter samples.","pos":[0,57]}]}],"pos":[5028,5086],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates a previous sample the system has taken.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> that indicates a previous sample the system has taken.","source":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates a previous sample the system has taken."}],"pos":[6190,6301],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.CounterSample\"&gt;&lt;/xref&gt;</ph> that indicates the most recent sample the system has taken.","source":"A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken."}],"pos":[6385,6501],"yaml":true},{"content":"A floating-point representation of the performance counter's calculated value.","nodes":[{"pos":[0,78],"content":"A floating-point representation of the performance counter's calculated value.","nodes":[{"content":"A floating-point representation of the performance counter's calculated value.","pos":[0,78]}]}],"pos":[6558,6637],"yaml":true},{"content":"<code>oldSample</code> uses a counter type that is different from <code>newSample</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;oldSample&lt;/code&gt;</ph> uses a counter type that is different from <ph id=\"ph2\">&lt;code&gt;newSample&lt;/code&gt;</ph>.","source":"<code>oldSample</code> uses a counter type that is different from <code>newSample</code>."}],"pos":[6837,6927],"yaml":true},{"content":"<code>newSample</code> counter type has a Performance Data Helper (PDH) error. For more information, see \"Checking PDH Interface Return Values\" in the Win32 and COM Development section of this documentation.","nodes":[{"pos":[0,207],"content":"<code>newSample</code> counter type has a Performance Data Helper (PDH) error. For more information, see \"Checking PDH Interface Return Values\" in the Win32 and COM Development section of this documentation.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;newSample&lt;/code&gt;</ph> counter type has a Performance Data Helper (PDH) error.","pos":[0,78],"source":"<code>newSample</code> counter type has a Performance Data Helper (PDH) error."},{"content":"For more information, see \"Checking PDH Interface Return Values\" in the Win32 and COM Development section of this documentation.","pos":[79,207]}]}],"pos":[7045,7253],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.CounterSampleCalculator\n  commentId: T:System.Diagnostics.CounterSampleCalculator\n  id: CounterSampleCalculator\n  children:\n  - System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)\n  - System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  langs:\n  - csharp\n  name: CounterSampleCalculator\n  nameWithType: CounterSampleCalculator\n  fullName: System.Diagnostics.CounterSampleCalculator\n  type: Class\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Provides a set of utility functions for interpreting performance counter data.\n  syntax:\n    content: public static class CounterSampleCalculator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSampleCalculator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)\n  commentId: M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)\n  id: ComputeCounterValue(System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSampleCalculator\n  langs:\n  - csharp\n  name: ComputeCounterValue(CounterSample)\n  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample)\n  fullName: CounterSampleCalculator.ComputeCounterValue(CounterSample)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Computes the calculated value of a single raw counter sample.\n  remarks: \"The <xref:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue%28System.Diagnostics.CounterSample%29> method overload returns meaningful results only for performance counters of the following <xref:System.Diagnostics.PerformanceCounterType>:  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType.RawFraction>  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItems32>  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32>  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItems64>  \\n  \\n-   <xref:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64>  \\n  \\n For other counter types, this overload always returns a value of 0 (zero).\"\n  syntax:\n    content: public static float ComputeCounterValue (System.Diagnostics.CounterSample newSample);\n    parameters:\n    - id: newSample\n      type: System.Diagnostics.CounterSample\n      description: A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken.\n    return:\n      type: System.Single\n      description: A floating-point representation of the performance counter's calculated value.\n  overload: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSampleCalculator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  commentId: M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  id: ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSampleCalculator\n  langs:\n  - csharp\n  name: ComputeCounterValue(CounterSample, CounterSample)\n  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample, CounterSample)\n  fullName: CounterSampleCalculator.ComputeCounterValue(CounterSample, CounterSample)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Computes the calculated value of two raw counter samples.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29> method overload to calculate the value of two raw counter samples.  \\n  \\n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO(\"What's the algorithm?\")]\n\n      public static float ComputeCounterValue (System.Diagnostics.CounterSample oldSample, System.Diagnostics.CounterSample newSample);\n    parameters:\n    - id: oldSample\n      type: System.Diagnostics.CounterSample\n      description: A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates a previous sample the system has taken.\n    - id: newSample\n      type: System.Diagnostics.CounterSample\n      description: A <xref href=\"System.Diagnostics.CounterSample\"></xref> that indicates the most recent sample the system has taken.\n    return:\n      type: System.Single\n      description: A floating-point representation of the performance counter's calculated value.\n  overload: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>oldSample</code> uses a counter type that is different from <code>newSample</code>.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: <code>newSample</code> counter type has a Performance Data Helper (PDH) error. For more information, see \"Checking PDH Interface Return Values\" in the Win32 and COM Development section of this documentation.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSampleCalculator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ComponentModel.Win32Exception\n  parent: System.ComponentModel\n  isExternal: false\n  name: Win32Exception\n  nameWithType: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSampleCalculator\n  isExternal: false\n  name: ComputeCounterValue(CounterSample)\n  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample)\n  fullName: CounterSampleCalculator.ComputeCounterValue(CounterSample)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Diagnostics.CounterSample\n  parent: System.Diagnostics\n  isExternal: false\n  name: CounterSample\n  nameWithType: CounterSample\n  fullName: System.Diagnostics.CounterSample\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)\n  parent: System.Diagnostics.CounterSampleCalculator\n  isExternal: false\n  name: ComputeCounterValue(CounterSample, CounterSample)\n  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample, CounterSample)\n  fullName: CounterSampleCalculator.ComputeCounterValue(CounterSample, CounterSample)\n- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*\n  parent: System.Diagnostics.CounterSampleCalculator\n  isExternal: false\n  name: ComputeCounterValue\n  nameWithType: CounterSampleCalculator.ComputeCounterValue\n  fullName: CounterSampleCalculator.ComputeCounterValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSampleCalculator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}