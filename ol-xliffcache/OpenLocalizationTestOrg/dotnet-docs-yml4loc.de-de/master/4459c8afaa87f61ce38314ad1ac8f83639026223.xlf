<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4459c8afaa87f61ce38314ad1ac8f83639026223</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Configuration.SettingsBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">805fc95cf1e753c5e216a8616b7de8590d98f794</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ac62e3a7890adb715966aabf521c38cd36360d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class used to support user property settings.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET Web Forms and Windows Forms both use the same configuration settings infrastructure to support user settings.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>User settings within ASP.NET are often referred to as ASP.NET Profile.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The settings infrastructure includes the <ph id="ph1">&lt;xref:System.Configuration.SettingsBase&gt;</ph> base class, the <ph id="ph2">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Configuration.SettingsPropertyValue&gt;</ph> class, the <ph id="ph4">&lt;xref:System.Configuration.SettingsContext&gt;</ph> class, the <ph id="ph5">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> class, and the <ph id="ph6">&lt;xref:System.Configuration.SettingAttribute&gt;</ph></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Settings base classes provide only a common infrastructure for defining and persisting settings properties.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on how these base classes are derived and their run-time environment, the settings API can provide different levels of functionality.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, ASP.NET Profile uses the settings base classes to provide per-user settings that are saved and loaded according to request semantics.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Configuration.SettingsBase"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the associated settings context.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Configuration.SettingsContext&gt;</ph> is used by the application to provide contextual information that the provider can use to persist settings.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each settings class derived from <ph id="ph1">&lt;xref:System.Configuration.SettingsBase&gt;</ph> has a context associated with it.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The context is passed to the settings provider to identity additional information about the settings information.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Context therefore acts as a hint to help the settings provider determine how to persist the associated settings values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsContext"&gt;&lt;/xref&gt;</ph> associated with the settings instance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes internal properties used by <ph id="ph1">&lt;xref href="System.Configuration.SettingsBase"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The settings context related to the settings properties.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The settings properties that will be accessible from the <ph id="ph1">&lt;xref href="System.Configuration.SettingsBase"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The initialized providers that should be used when loading and saving property values.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the object is synchronized (thread safe).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if access to the <ph id="ph2">&lt;xref href="System.Configuration.SettingsBase"&gt;&lt;/xref&gt;</ph> is synchronized; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the specified settings property.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.Item%2A&gt;</ph> property, also known as the indexer, is routinely used in the settings class derived from <ph id="ph2">&lt;xref:System.Configuration.SettingsBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.Item%2A&gt;</ph> property binds the public property of the class to the corresponding settings property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first time a property is accessed, the <ph id="ph1">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance will find all other properties that share the same provider as the requested property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance will then call the provider, passing it the set of <ph id="ph2">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> objects that represent the data the provider should retrieve.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the indexer will get and set property data in a thread-safe manner if <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.IsSynchronized%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance by default is not thread safe.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can call <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.Synchronized%2A&gt;</ph>, passing in a <ph id="ph2">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance to make the <ph id="ph3">&lt;xref:System.Configuration.SettingsBase&gt;</ph> indexer operate in a thread-safe manner.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the name of the property to access.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If found, the value of the named settings property.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>There are no properties associated with the current object, or the specified property could not be found.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An attempt was made to set a read-only property.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The value supplied is of a type incompatible with the settings property, during a set operation.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the collection of settings properties.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`get`</ph> accessor of the <ph id="ph2">&lt;xref:System.Configuration.SettingsBase.Properties%2A&gt;</ph> property returns the collection of <ph id="ph3">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> instances associated with the properties managed by the <ph id="ph4">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsBase&gt;</ph> class natively recognizes certain characteristics of a setting, such as its name, property type, settings provider, default value, and read-only status and a serialization preference.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>These characteristics are mirrored as properties in the <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other attributes of the <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> class are just passed through to its associated settings provider as a <ph id="ph2">&lt;xref:System.Configuration.SettingsAttributeDictionary&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsPropertyCollection"&gt;&lt;/xref&gt;</ph> collection containing all the <ph id="ph2">&lt;xref href="System.Configuration.SettingsProperty"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets a collection of settings property values.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.Configuration.SettingsPropertyValue"&gt;&lt;/xref&gt;</ph> objects representing the actual data values for the properties managed by the <ph id="ph2">&lt;xref href="System.Configuration.SettingsBase"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets a collection of settings providers.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsProviderCollection"&gt;&lt;/xref&gt;</ph> containing <ph id="ph2">&lt;xref href="System.Configuration.SettingsProvider"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Stores the current values of the settings properties.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance groups properties based on the provider that is associated with each property.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each provider is then called in sequence and is passed the set of properties that the provider should save.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Provides a <ph id="ph1">&lt;xref href="System.Configuration.SettingsBase"&gt;&lt;/xref&gt;</ph> class that is synchronized (thread safe).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The indexer will get and set property data in a thread-safe manner if the <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.IsSynchronized%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance by default is not thread-safe.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can call <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.Synchronized%2A&gt;</ph> passing in a <ph id="ph2">&lt;xref:System.Configuration.SettingsBase&gt;</ph> instance to make the <ph id="ph3">&lt;xref:System.Configuration.SettingsBase&gt;</ph> indexer operate in a thread-safe manner.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The class used to support user property settings.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.SettingsBase"&gt;&lt;/xref&gt;</ph> class that is synchronized.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>