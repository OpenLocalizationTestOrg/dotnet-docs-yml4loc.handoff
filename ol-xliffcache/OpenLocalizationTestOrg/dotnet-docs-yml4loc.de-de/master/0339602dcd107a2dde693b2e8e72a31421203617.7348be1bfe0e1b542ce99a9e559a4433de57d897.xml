{"nodes":[{"content":"Identifies the activation context for the current application. This class cannot be inherited.","nodes":[{"pos":[0,94],"content":"Identifies the activation context for the current application. This class cannot be inherited.","nodes":[{"content":"Identifies the activation context for the current application. This class cannot be inherited.","pos":[0,94],"nodes":[{"content":"Identifies the activation context for the current application.","pos":[0,62]},{"content":"This class cannot be inherited.","pos":[63,94]}]}]}],"pos":[959,1054],"yaml":true},{"content":"The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest. The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model. For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[0,385],"content":"The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest. The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model. For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.","nodes":[{"content":"The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest. The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model. For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.","pos":[0,385],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ActivationContext&gt;</ph> class contains an <ph id=\"ph2\">&lt;xref:System.ApplicationIdentity&gt;</ph> and provides internal-only access to the application manifest.","pos":[0,150],"source":"The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest."},{"content":"The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model.","pos":[151,291]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> class.","pos":[292,385],"source":" For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class."}]}]},{"pos":[393,919],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[1065,1992],"yaml":true,"extradata":"MT"},{"content":"Gets the ClickOnce application manifest for the current application.","nodes":[{"pos":[0,68],"content":"Gets the ClickOnce application manifest for the current application.","nodes":[{"content":"Gets the ClickOnce application manifest for the current application.","pos":[0,68]}]}],"pos":[4294,4363],"yaml":true},{"content":"If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder. If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store. For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).","nodes":[{"pos":[0,586],"content":"If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder. If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store. For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).","nodes":[{"content":"If the activation context is <ph id=\"ph1\">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.","pos":[0,217],"source":"If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder."},{"content":"If the activation context is <ph id=\"ph1\">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.","pos":[218,428],"source":" If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store."},{"content":"For more information about deployment manifests, see <bpt id=\"p1\">[</bpt>ClickOnce Deployment Manifest<ept id=\"p1\">](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)</ept>.","pos":[429,586],"source":" For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)."}]}],"pos":[4374,4961],"yaml":true,"extradata":"MT"},{"content":"A byte array that contains the ClickOnce application manifest for the application that is associated with this <xref href=\"System.ActivationContext\"></xref>.","nodes":[{"pos":[0,157],"content":"A byte array that contains the ClickOnce application manifest for the application that is associated with this <ph id=\"ph1\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph>.","source":"A byte array that contains the ClickOnce application manifest for the application that is associated with this <xref href=\"System.ActivationContext\"></xref>."}],"pos":[5089,5247],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ActivationContext\"></xref> class using the specified application identity.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph> class using the specified application identity.","source":"Initializes a new instance of the <xref href=\"System.ActivationContext\"></xref> class using the specified application identity."}],"pos":[6463,6591],"yaml":true},{"content":"The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context. The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder. This method provides backward compatibility for later releases in which public constructors provide full activation contexts.","nodes":[{"pos":[0,472],"content":"The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context. The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder. This method provides backward compatibility for later releases in which public constructors provide full activation contexts.","nodes":[{"content":"The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context. The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder. This method provides backward compatibility for later releases in which public constructors provide full activation contexts.","pos":[0,472],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ActivationContext.CreatePartialActivationContext%2A&gt;</ph> method calls an internal constructor to create a new activation context.","pos":[0,142],"source":"The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context."},{"content":"The implementation of the <ph id=\"ph1\">&lt;xref:System.ActivationContext&gt;</ph> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.","pos":[143,346],"source":" The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder."},{"content":"This method provides backward compatibility for later releases in which public constructors provide full activation contexts.","pos":[347,472]}]}]}],"pos":[6602,7075],"yaml":true,"extradata":"MT"},{"content":"An object that identifies an application.","nodes":[{"pos":[0,41],"content":"An object that identifies an application.","nodes":[{"content":"An object that identifies an application.","pos":[0,41]}]}],"pos":[7286,7328],"yaml":true},{"content":"An object with the specified application identity.","nodes":[{"pos":[0,50],"content":"An object with the specified application identity.","nodes":[{"content":"An object with the specified application identity.","pos":[0,50]}]}],"pos":[7396,7447],"yaml":true},{"content":"<code>identity</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>identity</code> is `null`."}],"pos":[7632,7665],"yaml":true},{"content":"No deployment or application identity is specified in <code>identity</code>.","nodes":[{"pos":[0,76],"content":"No deployment or application identity is specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"No deployment or application identity is specified in <code>identity</code>."}],"pos":[7759,7836],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ActivationContext\"></xref> class using the specified application identity and array of manifest paths.","nodes":[{"pos":[0,155],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph> class using the specified application identity and array of manifest paths.","source":"Initializes a new instance of the <xref href=\"System.ActivationContext\"></xref> class using the specified application identity and array of manifest paths."}],"pos":[9174,9330],"yaml":true},{"content":"The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context. The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder. This method provides backward compatibility for later releases in which public constructors provide full activation contexts.","nodes":[{"pos":[0,472],"content":"The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context. The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder. This method provides backward compatibility for later releases in which public constructors provide full activation contexts.","nodes":[{"content":"The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context. The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder. This method provides backward compatibility for later releases in which public constructors provide full activation contexts.","pos":[0,472],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ActivationContext.CreatePartialActivationContext%2A&gt;</ph> method calls an internal constructor to create a new activation context.","pos":[0,142],"source":"The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context."},{"content":"The implementation of the <ph id=\"ph1\">&lt;xref:System.ActivationContext&gt;</ph> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.","pos":[143,346],"source":" The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder."},{"content":"This method provides backward compatibility for later releases in which public constructors provide full activation contexts.","pos":[347,472]}]}]}],"pos":[9341,9814],"yaml":true,"extradata":"MT"},{"content":"An object that identifies an application.","nodes":[{"pos":[0,41],"content":"An object that identifies an application.","nodes":[{"content":"An object that identifies an application.","pos":[0,41]}]}],"pos":[10049,10091],"yaml":true},{"content":"A string array of manifest paths for the application.","nodes":[{"pos":[0,53],"content":"A string array of manifest paths for the application.","nodes":[{"content":"A string array of manifest paths for the application.","pos":[0,53]}]}],"pos":[10162,10216],"yaml":true},{"content":"An object with the specified application identity and array of manifest paths.","nodes":[{"pos":[0,78],"content":"An object with the specified application identity and array of manifest paths.","nodes":[{"content":"An object with the specified application identity and array of manifest paths.","pos":[0,78]}]}],"pos":[10284,10363],"yaml":true},{"content":"<code>identity</code> is `null`.  \n  \n -or-  \n  \n <code>manifestPaths</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>identity</code> is `null`."},{"pos":[39,43],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[50,87],"content":"<ph id=\"ph1\">&lt;code&gt;manifestPaths&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>manifestPaths</code> is `null`."}],"pos":[10548,10642],"yaml":true},{"content":"No deployment or application identity is specified in <code>identity</code>.  \n  \n -or-  \n  \n <code>identity</code> does not match the identity in the manifests.  \n  \n -or-  \n  \n <code>identity</code> does not have the same number of components as the manifest paths.","nodes":[{"pos":[0,76],"content":"No deployment or application identity is specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"No deployment or application identity is specified in <code>identity</code>."},{"pos":[83,87],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[94,161],"content":"<ph id=\"ph1\">&lt;code&gt;identity&lt;/code&gt;</ph> does not match the identity in the manifests.","source":"<code>identity</code> does not match the identity in the manifests."},{"pos":[168,172],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[179,267],"content":"<ph id=\"ph1\">&lt;code&gt;identity&lt;/code&gt;</ph> does not have the same number of components as the manifest paths.","source":"<code>identity</code> does not have the same number of components as the manifest paths."}],"pos":[10736,11014],"yaml":true},{"content":"Gets the ClickOnce deployment manifest for the current application.","nodes":[{"pos":[0,67],"content":"Gets the ClickOnce deployment manifest for the current application.","nodes":[{"content":"Gets the ClickOnce deployment manifest for the current application.","pos":[0,67]}]}],"pos":[12087,12155],"yaml":true},{"content":"If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder. If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store. For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).","nodes":[{"pos":[0,586],"content":"If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder. If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store. For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).","nodes":[{"content":"If the activation context is <ph id=\"ph1\">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.","pos":[0,217],"source":"If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder."},{"content":"If the activation context is <ph id=\"ph1\">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.","pos":[218,428],"source":" If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store."},{"content":"For more information about deployment manifests, see <bpt id=\"p1\">[</bpt>ClickOnce Deployment Manifest<ept id=\"p1\">](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)</ept>.","pos":[429,586],"source":" For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)."}]}],"pos":[12166,12753],"yaml":true,"extradata":"MT"},{"content":"A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <xref href=\"System.ActivationContext\"></xref>.","nodes":[{"pos":[0,156],"content":"A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <ph id=\"ph1\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph>.","source":"A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <xref href=\"System.ActivationContext\"></xref>."}],"pos":[12880,13037],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.ActivationContext\"></xref>.","nodes":[{"pos":[0,81],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.ActivationContext\"></xref>."}],"pos":[13973,14055],"yaml":true},{"content":"Call <xref:System.ActivationContext.Dispose%2A> when you are finished using the <xref:System.ActivationContext>. The <xref:System.ActivationContext.Dispose%2A> method leaves the <xref:System.ActivationContext> in an unusable state. After calling <xref:System.ActivationContext.Dispose%2A>, you must release all references to the <xref:System.ActivationContext> so the garbage collector can reclaim the memory that the <xref:System.ActivationContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.ActivationContext.Dispose%2A> before you release your last reference to the <xref:System.ActivationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ActivationContext> object's `Finalize` method.","nodes":[{"pos":[0,670],"content":"Call <xref:System.ActivationContext.Dispose%2A> when you are finished using the <xref:System.ActivationContext>. The <xref:System.ActivationContext.Dispose%2A> method leaves the <xref:System.ActivationContext> in an unusable state. After calling <xref:System.ActivationContext.Dispose%2A>, you must release all references to the <xref:System.ActivationContext> so the garbage collector can reclaim the memory that the <xref:System.ActivationContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ActivationContext&gt;</ph>.","pos":[0,112],"source":"Call <xref:System.ActivationContext.Dispose%2A> when you are finished using the <xref:System.ActivationContext>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ActivationContext&gt;</ph> in an unusable state.","pos":[113,231],"source":" The <xref:System.ActivationContext.Dispose%2A> method leaves the <xref:System.ActivationContext> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ActivationContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.ActivationContext&gt;</ph> was occupying.","pos":[232,464],"source":" After calling <xref:System.ActivationContext.Dispose%2A>, you must release all references to the <xref:System.ActivationContext> so the garbage collector can reclaim the memory that the <xref:System.ActivationContext> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[465,670],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[678,975],"content":"[!NOTE]\n Always call <xref:System.ActivationContext.Dispose%2A> before you release your last reference to the <xref:System.ActivationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ActivationContext> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.ActivationContext.Dispose%2A> before you release your last reference to the <xref:System.ActivationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ActivationContext> object's `Finalize` method.","pos":[8,295],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ActivationContext&gt;</ph>.","pos":[1,134],"source":" Always call <xref:System.ActivationContext.Dispose%2A> before you release your last reference to the <xref:System.ActivationContext>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.ActivationContext&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[135,287],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ActivationContext> object's `Finalize` method."}]}]}],"pos":[14066,15047],"yaml":true,"extradata":"MT"},{"content":"Enables an <xref href=\"System.ActivationContext\"></xref> object to attempt to free resources and perform other cleanup operations before the <xref href=\"System.ActivationContext\"></xref> is reclaimed by garbage collection.","nodes":[{"pos":[0,222],"content":"Enables an <ph id=\"ph1\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph> object to attempt to free resources and perform other cleanup operations before the <ph id=\"ph2\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.","source":"Enables an <xref href=\"System.ActivationContext\"></xref> object to attempt to free resources and perform other cleanup operations before the <xref href=\"System.ActivationContext\"></xref> is reclaimed by garbage collection."}],"pos":[16163,16386],"yaml":true},{"content":"Gets the form, or store context, for the current application.","nodes":[{"pos":[0,61],"content":"Gets the form, or store context, for the current application.","nodes":[{"content":"Gets the form, or store context, for the current application.","pos":[0,61]}]}],"pos":[17474,17536],"yaml":true},{"content":"A manifest-based application might not be installed in the ClickOnce store. An application that is not in the store, such as a manifest-activated application executing in [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], is classified as <xref:System.ActivationContext.ContextForm.Loose>. An application that is contained in the store is classified as <xref:System.ActivationContext.ContextForm.StoreBounded>.","nodes":[{"pos":[0,404],"content":"A manifest-based application might not be installed in the ClickOnce store. An application that is not in the store, such as a manifest-activated application executing in [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], is classified as <xref:System.ActivationContext.ContextForm.Loose>. An application that is contained in the store is classified as <xref:System.ActivationContext.ContextForm.StoreBounded>.","nodes":[{"content":"A manifest-based application might not be installed in the ClickOnce store.","pos":[0,75]},{"content":"An application that is not in the store, such as a manifest-activated application executing in <ph id=\"ph1\">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, is classified as <ph id=\"ph2\">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>.","pos":[76,283],"source":" An application that is not in the store, such as a manifest-activated application executing in [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], is classified as <xref:System.ActivationContext.ContextForm.Loose>."},{"content":"An application that is contained in the store is classified as <ph id=\"ph1\">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>.","pos":[284,404],"source":" An application that is contained in the store is classified as <xref:System.ActivationContext.ContextForm.StoreBounded>."}]}],"pos":[17547,17952],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values.","nodes":[{"pos":[0,30],"content":"One of the enumeration values.","nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]}],"pos":[18106,18137],"yaml":true},{"content":"Gets the application identity for the current application.","nodes":[{"pos":[0,58],"content":"Gets the application identity for the current application.","nodes":[{"content":"Gets the application identity for the current application.","pos":[0,58]}]}],"pos":[19180,19239],"yaml":true},{"content":"An <xref:System.ApplicationIdentity> uniquely identifies an application by its full name and location.","nodes":[{"pos":[0,102],"content":"An <xref:System.ApplicationIdentity> uniquely identifies an application by its full name and location.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.ApplicationIdentity&gt;</ph> uniquely identifies an application by its full name and location.","pos":[0,102],"source":"An <xref:System.ApplicationIdentity> uniquely identifies an application by its full name and location."}]}],"pos":[19250,19353],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ApplicationIdentity\"></xref> object that identifies the current application.","nodes":[{"pos":[0,98],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ApplicationIdentity\"&gt;&lt;/xref&gt;</ph> object that identifies the current application.","source":"An <xref href=\"System.ApplicationIdentity\"></xref> object that identifies the current application."}],"pos":[20064,20163],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object.","nodes":[{"pos":[0,132],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> with the data needed to serialize the target object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object."}],"pos":[21816,21949],"yaml":true},{"content":"The object to populate with data.","nodes":[{"pos":[0,33],"content":"The object to populate with data.","nodes":[{"content":"The object to populate with data.","pos":[0,33]}]}],"pos":[22224,22258],"yaml":true},{"content":"The structure for this serialization.","nodes":[{"pos":[0,37],"content":"The structure for this serialization.","nodes":[{"content":"The structure for this serialization.","pos":[0,37]}]}],"pos":[22353,22391],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ActivationContext\n  commentId: T:System.ActivationContext\n  id: ActivationContext\n  children:\n  - System.ActivationContext.ApplicationManifestBytes\n  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)\n  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])\n  - System.ActivationContext.DeploymentManifestBytes\n  - System.ActivationContext.Dispose\n  - System.ActivationContext.Finalize\n  - System.ActivationContext.Form\n  - System.ActivationContext.Identity\n  - System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Identifies the activation context for the current application. This class cannot be inherited.\n  remarks: \"The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest. The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model. For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.\"\n  example:\n  - \"The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. For correct results, execute this code example as a manifest-based application.  \\n  \\n [!code-csharp[System.ActivationContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#1)]\\n [!code-vb[System.ActivationContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.ApplicationManifestBytes\n  commentId: P:System.ActivationContext.ApplicationManifestBytes\n  id: ApplicationManifestBytes\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: ApplicationManifestBytes\n  nameWithType: ActivationContext.ApplicationManifestBytes\n  fullName: ActivationContext.ApplicationManifestBytes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets the ClickOnce application manifest for the current application.\n  remarks: If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder. If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store. For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).\n  syntax:\n    content: public byte[] ApplicationManifestBytes { get; }\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the ClickOnce application manifest for the application that is associated with this <xref href=\"System.ActivationContext\"></xref>.\n  overload: System.ActivationContext.ApplicationManifestBytes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)\n  commentId: M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)\n  id: CreatePartialActivationContext(System.ApplicationIdentity)\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: CreatePartialActivationContext(ApplicationIdentity)\n  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)\n  fullName: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.ActivationContext\"></xref> class using the specified application identity.\n  remarks: The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context. The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder. This method provides backward compatibility for later releases in which public constructors provide full activation contexts.\n  syntax:\n    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);\n    parameters:\n    - id: identity\n      type: System.ApplicationIdentity\n      description: An object that identifies an application.\n    return:\n      type: System.ActivationContext\n      description: An object with the specified application identity.\n  overload: System.ActivationContext.CreatePartialActivationContext*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>identity</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No deployment or application identity is specified in <code>identity</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])\n  commentId: M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])\n  id: CreatePartialActivationContext(System.ApplicationIdentity,System.String[])\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: CreatePartialActivationContext(ApplicationIdentity, String[])\n  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity, String[])\n  fullName: ActivationContext.CreatePartialActivationContext(ApplicationIdentity, String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.ActivationContext\"></xref> class using the specified application identity and array of manifest paths.\n  remarks: The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context. The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder. This method provides backward compatibility for later releases in which public constructors provide full activation contexts.\n  syntax:\n    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);\n    parameters:\n    - id: identity\n      type: System.ApplicationIdentity\n      description: An object that identifies an application.\n    - id: manifestPaths\n      type: System.String[]\n      description: A string array of manifest paths for the application.\n    return:\n      type: System.ActivationContext\n      description: An object with the specified application identity and array of manifest paths.\n  overload: System.ActivationContext.CreatePartialActivationContext*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>identity</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>manifestPaths</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"No deployment or application identity is specified in <code>identity</code>.  \\n  \\n -or-  \\n  \\n <code>identity</code> does not match the identity in the manifests.  \\n  \\n -or-  \\n  \\n <code>identity</code> does not have the same number of components as the manifest paths.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.DeploymentManifestBytes\n  commentId: P:System.ActivationContext.DeploymentManifestBytes\n  id: DeploymentManifestBytes\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: DeploymentManifestBytes\n  nameWithType: ActivationContext.DeploymentManifestBytes\n  fullName: ActivationContext.DeploymentManifestBytes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets the ClickOnce deployment manifest for the current application.\n  remarks: If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder. If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store. For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).\n  syntax:\n    content: public byte[] DeploymentManifestBytes { get; }\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <xref href=\"System.ActivationContext\"></xref>.\n  overload: System.ActivationContext.DeploymentManifestBytes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.Dispose\n  commentId: M:System.ActivationContext.Dispose\n  id: Dispose\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ActivationContext.Dispose()\n  fullName: ActivationContext.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Releases all resources used by the <xref href=\"System.ActivationContext\"></xref>.\n  remarks: \"Call <xref:System.ActivationContext.Dispose%2A> when you are finished using the <xref:System.ActivationContext>. The <xref:System.ActivationContext.Dispose%2A> method leaves the <xref:System.ActivationContext> in an unusable state. After calling <xref:System.ActivationContext.Dispose%2A>, you must release all references to the <xref:System.ActivationContext> so the garbage collector can reclaim the memory that the <xref:System.ActivationContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.ActivationContext.Dispose%2A> before you release your last reference to the <xref:System.ActivationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ActivationContext> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ActivationContext.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.Finalize\n  commentId: M:System.ActivationContext.Finalize\n  id: Finalize\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: ActivationContext.Finalize()\n  fullName: ActivationContext.Finalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Enables an <xref href=\"System.ActivationContext\"></xref> object to attempt to free resources and perform other cleanup operations before the <xref href=\"System.ActivationContext\"></xref> is reclaimed by garbage collection.\n  syntax:\n    content: ~ActivationContext ();\n    parameters: []\n  overload: System.ActivationContext.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.Form\n  commentId: P:System.ActivationContext.Form\n  id: Form\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: Form\n  nameWithType: ActivationContext.Form\n  fullName: ActivationContext.Form\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets the form, or store context, for the current application.\n  remarks: A manifest-based application might not be installed in the ClickOnce store. An application that is not in the store, such as a manifest-activated application executing in [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], is classified as <xref:System.ActivationContext.ContextForm.Loose>. An application that is contained in the store is classified as <xref:System.ActivationContext.ContextForm.StoreBounded>.\n  syntax:\n    content: public ActivationContext.ContextForm Form { get; }\n    return:\n      type: System.ActivationContext+ContextForm\n      description: One of the enumeration values.\n  overload: System.ActivationContext.Form*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.Identity\n  commentId: P:System.ActivationContext.Identity\n  id: Identity\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: ActivationContext.Identity\n  fullName: ActivationContext.Identity\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Gets the application identity for the current application.\n  remarks: An <xref:System.ApplicationIdentity> uniquely identifies an application by its full name and location.\n  example:\n  - \"The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. This code example is part of a larger example provided for the <xref:System.ActivationContext> class.  \\n  \\n [!code-csharp[System.ActivationContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#2)]\\n [!code-vb[System.ActivationContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#2)]\"\n  syntax:\n    content: public ApplicationIdentity Identity { get; }\n    return:\n      type: System.ApplicationIdentity\n      description: An <xref href=\"System.ApplicationIdentity\"></xref> object that identifies the current application.\n  overload: System.ActivationContext.Identity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.ActivationContext\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: ActivationContext.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: ActivationContext.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The structure for this serialization.\n  overload: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ActivationContext.ApplicationManifestBytes\n  parent: System.ActivationContext\n  isExternal: false\n  name: ApplicationManifestBytes\n  nameWithType: ActivationContext.ApplicationManifestBytes\n  fullName: ActivationContext.ApplicationManifestBytes\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)\n  parent: System.ActivationContext\n  isExternal: false\n  name: CreatePartialActivationContext(ApplicationIdentity)\n  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)\n  fullName: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.ApplicationIdentity\n  parent: System\n  isExternal: false\n  name: ApplicationIdentity\n  nameWithType: ApplicationIdentity\n  fullName: System.ApplicationIdentity\n- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])\n  parent: System.ActivationContext\n  isExternal: false\n  name: CreatePartialActivationContext(ApplicationIdentity, String[])\n  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity, String[])\n  fullName: ActivationContext.CreatePartialActivationContext(ApplicationIdentity, String[])\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ActivationContext.DeploymentManifestBytes\n  parent: System.ActivationContext\n  isExternal: false\n  name: DeploymentManifestBytes\n  nameWithType: ActivationContext.DeploymentManifestBytes\n  fullName: ActivationContext.DeploymentManifestBytes\n- uid: System.ActivationContext.Dispose\n  parent: System.ActivationContext\n  isExternal: false\n  name: Dispose()\n  nameWithType: ActivationContext.Dispose()\n  fullName: ActivationContext.Dispose()\n- uid: System.ActivationContext.Finalize\n  parent: System.ActivationContext\n  isExternal: false\n  name: Finalize()\n  nameWithType: ActivationContext.Finalize()\n  fullName: ActivationContext.Finalize()\n- uid: System.ActivationContext.Form\n  parent: System.ActivationContext\n  isExternal: false\n  name: Form\n  nameWithType: ActivationContext.Form\n  fullName: ActivationContext.Form\n- uid: System.ActivationContext.Identity\n  parent: System.ActivationContext\n  isExternal: false\n  name: Identity\n  nameWithType: ActivationContext.Identity\n  fullName: ActivationContext.Identity\n- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.ActivationContext\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: ActivationContext.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: ActivationContext.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.ActivationContext.ApplicationManifestBytes*\n  parent: System.ActivationContext\n  isExternal: false\n  name: ApplicationManifestBytes\n  nameWithType: ActivationContext.ApplicationManifestBytes\n  fullName: ActivationContext.ApplicationManifestBytes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n- uid: System.ActivationContext.CreatePartialActivationContext*\n  parent: System.ActivationContext\n  isExternal: false\n  name: CreatePartialActivationContext\n  nameWithType: ActivationContext.CreatePartialActivationContext\n  fullName: ActivationContext.CreatePartialActivationContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n- uid: System.ActivationContext.DeploymentManifestBytes*\n  parent: System.ActivationContext\n  isExternal: false\n  name: DeploymentManifestBytes\n  nameWithType: ActivationContext.DeploymentManifestBytes\n  fullName: ActivationContext.DeploymentManifestBytes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n- uid: System.ActivationContext.Dispose*\n  parent: System.ActivationContext\n  isExternal: false\n  name: Dispose\n  nameWithType: ActivationContext.Dispose\n  fullName: ActivationContext.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n- uid: System.ActivationContext.Finalize*\n  parent: System.ActivationContext\n  isExternal: false\n  name: Finalize\n  nameWithType: ActivationContext.Finalize\n  fullName: ActivationContext.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n- uid: System.ActivationContext.Form*\n  parent: System.ActivationContext\n  isExternal: false\n  name: Form\n  nameWithType: ActivationContext.Form\n  fullName: ActivationContext.Form\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n- uid: System.ActivationContext.Identity*\n  parent: System.ActivationContext\n  isExternal: false\n  name: Identity\n  nameWithType: ActivationContext.Identity\n  fullName: ActivationContext.Identity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.ActivationContext\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ActivationContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}