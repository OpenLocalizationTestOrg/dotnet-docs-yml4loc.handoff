{"nodes":[{"content":"Represents a visitor or rewriter for expression trees.","nodes":[{"pos":[0,54],"content":"Represents a visitor or rewriter for expression trees.","nodes":[{"content":"Represents a visitor or rewriter for expression trees.","pos":[0,54]}]}],"pos":[4577,4632],"yaml":true},{"content":"This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining or copying an expression tree.","nodes":[{"pos":[0,155],"content":"This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining or copying an expression tree.","nodes":[{"content":"This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining or copying an expression tree.","pos":[0,155]}]}],"pos":[4643,4799],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Linq.Expressions.ExpressionVisitor\"></xref>.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.ExpressionVisitor\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of <xref href=\"System.Linq.Expressions.ExpressionVisitor\"></xref>."}],"pos":[6798,6892],"yaml":true},{"content":"Dispatches the list of expressions to one of the more specialized visit methods in this class.","nodes":[{"pos":[0,94],"content":"Dispatches the list of expressions to one of the more specialized visit methods in this class.","nodes":[{"content":"Dispatches the list of expressions to one of the more specialized visit methods in this class.","pos":[0,94]}]}],"pos":[8873,8968],"yaml":true},{"content":"The expressions to visit.","nodes":[{"pos":[0,25],"content":"The expressions to visit.","nodes":[{"content":"The expressions to visit.","pos":[0,25]}]}],"pos":[9334,9360],"yaml":true},{"content":"The modified expression list, if any one of the elements were modified; otherwise, returns the original expression list.","nodes":[{"pos":[0,120],"content":"The modified expression list, if any one of the elements were modified; otherwise, returns the original expression list.","nodes":[{"content":"The modified expression list, if any one of the elements were modified; otherwise, returns the original expression list.","pos":[0,120]}]}],"pos":[9489,9610],"yaml":true},{"content":"Dispatches the expression to one of the more specialized visit methods in this class.","nodes":[{"pos":[0,85],"content":"Dispatches the expression to one of the more specialized visit methods in this class.","nodes":[{"content":"Dispatches the expression to one of the more specialized visit methods in this class.","pos":[0,85]}]}],"pos":[11282,11368],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[11587,11612],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[11690,11800],"yaml":true},{"content":"Visits all nodes in the collection using a specified element visitor.","nodes":[{"pos":[0,69],"content":"Visits all nodes in the collection using a specified element visitor.","nodes":[{"content":"Visits all nodes in the collection using a specified element visitor.","pos":[0,69]}]}],"pos":[13701,13771],"yaml":true},{"content":"The nodes to visit.","nodes":[{"pos":[0,19],"content":"The nodes to visit.","nodes":[{"content":"The nodes to visit.","pos":[0,19]}]}],"pos":[14073,14093],"yaml":true},{"content":"A delegate that visits a single element, optionally replacing it with a new element.","nodes":[{"pos":[0,84],"content":"A delegate that visits a single element, optionally replacing it with a new element.","nodes":[{"content":"A delegate that visits a single element, optionally replacing it with a new element.","pos":[0,84]}]}],"pos":[14166,14251],"yaml":true},{"content":"The type of the nodes.","nodes":[{"pos":[0,22],"content":"The type of the nodes.","nodes":[{"content":"The type of the nodes.","pos":[0,22]}]}],"pos":[14302,14325],"yaml":true},{"content":"The modified node list, if any of the elements were modified; otherwise, returns the original node list.","nodes":[{"pos":[0,104],"content":"The modified node list, if any of the elements were modified; otherwise, returns the original node list.","nodes":[{"content":"The modified node list, if any of the elements were modified; otherwise, returns the original node list.","pos":[0,104]}]}],"pos":[14420,14525],"yaml":true},{"content":"Visits all expressions in the collection, casting the results back to the original expression type.","nodes":[{"pos":[0,99],"content":"Visits all expressions in the collection, casting the results back to the original expression type.","nodes":[{"content":"Visits all expressions in the collection, casting the results back to the original expression type.","pos":[0,99]}]}],"pos":[16459,16559],"yaml":true},{"content":"The expressions to visit.","nodes":[{"pos":[0,25],"content":"The expressions to visit.","nodes":[{"content":"The expressions to visit.","pos":[0,25]}]}],"pos":[16904,16930],"yaml":true},{"content":"The name of the calling method; used to report to report a better error message.","nodes":[{"pos":[0,80],"content":"The name of the calling method; used to report to report a better error message.","nodes":[{"content":"The name of the calling method; used to report to report a better error message.","pos":[0,80]}]}],"pos":[16996,17077],"yaml":true},{"content":"The type of the expressions.","nodes":[{"pos":[0,28],"content":"The type of the expressions.","nodes":[{"content":"The type of the expressions.","pos":[0,28]}]}],"pos":[17128,17157],"yaml":true},{"content":"The modified expression collection, if any expression was modified; otherwise, returns the original expression collection.","nodes":[{"pos":[0,122],"content":"The modified expression collection, if any expression was modified; otherwise, returns the original expression collection.","nodes":[{"content":"The modified expression collection, if any expression was modified; otherwise, returns the original expression collection.","pos":[0,122]}]}],"pos":[17252,17375],"yaml":true},{"content":"The visit method for one of the expressions returned a different type.","nodes":[{"pos":[0,70],"content":"The visit method for one of the expressions returned a different type.","nodes":[{"content":"The visit method for one of the expressions returned a different type.","pos":[0,70]}]}],"pos":[17573,17644],"yaml":true},{"content":"Visits an expression, casting the result back to the original expression type.","nodes":[{"pos":[0,78],"content":"Visits an expression, casting the result back to the original expression type.","nodes":[{"content":"Visits an expression, casting the result back to the original expression type.","pos":[0,78]}]}],"pos":[19262,19341],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[19532,19557],"yaml":true},{"content":"The name of the calling method; used to report to report a better error message.","nodes":[{"pos":[0,80],"content":"The name of the calling method; used to report to report a better error message.","nodes":[{"content":"The name of the calling method; used to report to report a better error message.","pos":[0,80]}]}],"pos":[19623,19704],"yaml":true},{"content":"The type of the expression.","nodes":[{"pos":[0,27],"content":"The type of the expression.","nodes":[{"content":"The type of the expression.","pos":[0,27]}]}],"pos":[19755,19783],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[19828,19938],"yaml":true},{"content":"The visit method for this node returned a different type.","nodes":[{"pos":[0,57],"content":"The visit method for this node returned a different type.","nodes":[{"content":"The visit method for this node returned a different type.","pos":[0,57]}]}],"pos":[20136,20194],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.BinaryExpression\"></xref>.","nodes":[{"pos":[0,89],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.BinaryExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.BinaryExpression\"></xref>."}],"pos":[21860,21950],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[22190,22215],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[22293,22403],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.BlockExpression\"></xref>.","nodes":[{"pos":[0,88],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.BlockExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.BlockExpression\"></xref>."}],"pos":[24163,24252],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[24489,24514],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[24592,24702],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.CatchBlock\"></xref>.","nodes":[{"pos":[0,83],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.CatchBlock\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.CatchBlock\"></xref>."}],"pos":[26461,26545],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[26777,26802],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[26880,26990],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.ConditionalExpression\"></xref>.","nodes":[{"pos":[0,94],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.ConditionalExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.ConditionalExpression\"></xref>."}],"pos":[28826,28921],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[29176,29201],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[29279,29389],"yaml":true},{"content":"Visits the <xref href=\"System.Linq.Expressions.ConstantExpression\"></xref>.","nodes":[{"pos":[0,75],"content":"Visits the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.ConstantExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the <xref href=\"System.Linq.Expressions.ConstantExpression\"></xref>."}],"pos":[31190,31266],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[31512,31537],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[31615,31725],"yaml":true},{"content":"Visits the <xref href=\"System.Linq.Expressions.DebugInfoExpression\"></xref>.","nodes":[{"pos":[0,76],"content":"Visits the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.DebugInfoExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the <xref href=\"System.Linq.Expressions.DebugInfoExpression\"></xref>."}],"pos":[33513,33590],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[33839,33864],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[33942,34052],"yaml":true},{"content":"Visits the <xref href=\"System.Linq.Expressions.DefaultExpression\"></xref>.","nodes":[{"pos":[0,74],"content":"Visits the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.DefaultExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the <xref href=\"System.Linq.Expressions.DefaultExpression\"></xref>."}],"pos":[35839,35914],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[36157,36182],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[36260,36370],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.DynamicExpression\"></xref>.","nodes":[{"pos":[0,90],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.DynamicExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.DynamicExpression\"></xref>."}],"pos":[38155,38246],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[38489,38514],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[38592,38702],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.ElementInit\"></xref>.","nodes":[{"pos":[0,84],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.ElementInit\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.ElementInit\"></xref>."}],"pos":[40171,40256],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[40492,40517],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[40596,40706],"yaml":true},{"content":"Visits the children of the extension expression.","nodes":[{"pos":[0,48],"content":"Visits the children of the extension expression.","nodes":[{"content":"Visits the children of the extension expression.","pos":[0,48]}]}],"pos":[42465,42514],"yaml":true},{"content":"This can be overridden to visit or rewrite specific extension nodes.  \n  \n If it is not overridden, this method will call <xref:System.Linq.Expressions.Expression.VisitChildren%2A>, which gives the node a chance to walk its children. By default, <xref:System.Linq.Expressions.Expression.VisitChildren%2A> will try to reduce the node.","nodes":[{"pos":[0,68],"content":"This can be overridden to visit or rewrite specific extension nodes.","nodes":[{"content":"This can be overridden to visit or rewrite specific extension nodes.","pos":[0,68]}]},{"pos":[75,333],"content":"If it is not overridden, this method will call <xref:System.Linq.Expressions.Expression.VisitChildren%2A>, which gives the node a chance to walk its children. By default, <xref:System.Linq.Expressions.Expression.VisitChildren%2A> will try to reduce the node.","nodes":[{"content":"If it is not overridden, this method will call <xref:System.Linq.Expressions.Expression.VisitChildren%2A>, which gives the node a chance to walk its children. By default, <xref:System.Linq.Expressions.Expression.VisitChildren%2A> will try to reduce the node.","pos":[0,258],"nodes":[{"content":"If it is not overridden, this method will call <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.Expression.VisitChildren%2A&gt;</ph>, which gives the node a chance to walk its children.","pos":[0,158],"source":"If it is not overridden, this method will call <xref:System.Linq.Expressions.Expression.VisitChildren%2A>, which gives the node a chance to walk its children."},{"content":"By default, <ph id=\"ph1\">&lt;xref:System.Linq.Expressions.Expression.VisitChildren%2A&gt;</ph> will try to reduce the node.","pos":[159,258],"source":" By default, <xref:System.Linq.Expressions.Expression.VisitChildren%2A> will try to reduce the node."}]}]}],"pos":[42525,42863],"yaml":true,"extradata":"MT"},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[43094,43119],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[43197,43307],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.GotoExpression\"></xref>.","nodes":[{"pos":[0,87],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.GotoExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.GotoExpression\"></xref>."}],"pos":[45058,45146],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[45380,45405],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[45483,45593],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.IndexExpression\"></xref>.","nodes":[{"pos":[0,88],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.IndexExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.IndexExpression\"></xref>."}],"pos":[47351,47440],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[47677,47702],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[47780,47890],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.InvocationExpression\"></xref>.","nodes":[{"pos":[0,93],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.InvocationExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.InvocationExpression\"></xref>."}],"pos":[49709,49803],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[50055,50080],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[50158,50268],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.LabelExpression\"></xref>.","nodes":[{"pos":[0,88],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.LabelExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.LabelExpression\"></xref>."}],"pos":[52032,52121],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[52358,52383],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[52461,52571],"yaml":true},{"content":"Visits the <xref href=\"System.Linq.Expressions.LabelTarget\"></xref>.","nodes":[{"pos":[0,68],"content":"Visits the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.LabelTarget\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the <xref href=\"System.Linq.Expressions.LabelTarget\"></xref>."}],"pos":[54342,54411],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[54647,54672],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[54751,54861],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.Expression`1\"></xref>.","nodes":[{"pos":[0,85],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.Expression`1\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.Expression`1\"></xref>."}],"pos":[56644,56730],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[56967,56992],"yaml":true},{"content":"The type of the delegate.","nodes":[{"pos":[0,25],"content":"The type of the delegate.","nodes":[{"content":"The type of the delegate.","pos":[0,25]}]}],"pos":[57043,57069],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[57147,57257],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.ListInitExpression\"></xref>.","nodes":[{"pos":[0,91],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.ListInitExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.ListInitExpression\"></xref>."}],"pos":[59056,59148],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[59394,59419],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[59497,59607],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.LoopExpression\"></xref>.","nodes":[{"pos":[0,87],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.LoopExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.LoopExpression\"></xref>."}],"pos":[61357,61445],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[61679,61704],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[61782,61892],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberExpression\"></xref>.","nodes":[{"pos":[0,89],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.MemberExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberExpression\"></xref>."}],"pos":[63662,63752],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[63992,64017],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[64095,64205],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberAssignment\"></xref>.","nodes":[{"pos":[0,89],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.MemberAssignment\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberAssignment\"></xref>."}],"pos":[66015,66105],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[66361,66386],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[66470,66580],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberBinding\"></xref>.","nodes":[{"pos":[0,86],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.MemberBinding\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberBinding\"></xref>."}],"pos":[68386,68473],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[68717,68742],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[68823,68933],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberInitExpression\"></xref>.","nodes":[{"pos":[0,93],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.MemberInitExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberInitExpression\"></xref>."}],"pos":[70760,70854],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[71106,71131],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[71209,71319],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberListBinding\"></xref>.","nodes":[{"pos":[0,90],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.MemberListBinding\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberListBinding\"></xref>."}],"pos":[73167,73258],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[73518,73543],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[73628,73738],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberMemberBinding\"></xref>.","nodes":[{"pos":[0,92],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.MemberMemberBinding\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.MemberMemberBinding\"></xref>."}],"pos":[75617,75710],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[75978,76003],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[76090,76200],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.MethodCallExpression\"></xref>.","nodes":[{"pos":[0,93],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.MethodCallExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.MethodCallExpression\"></xref>."}],"pos":[78033,78127],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[78379,78404],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[78482,78592],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.NewExpression\"></xref>.","nodes":[{"pos":[0,86],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.NewExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.NewExpression\"></xref>."}],"pos":[80310,80397],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[80628,80653],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[80731,80841],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.NewArrayExpression\"></xref>.","nodes":[{"pos":[0,91],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.NewArrayExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.NewArrayExpression\"></xref>."}],"pos":[82634,82726],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[82972,82997],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[83075,83185],"yaml":true},{"content":"Visits the <xref href=\"System.Linq.Expressions.ParameterExpression\"></xref>.","nodes":[{"pos":[0,76],"content":"Visits the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.ParameterExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the <xref href=\"System.Linq.Expressions.ParameterExpression\"></xref>."}],"pos":[84995,85072],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[85321,85346],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[85424,85534],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"></xref>.","nodes":[{"pos":[0,99],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"></xref>."}],"pos":[87407,87507],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[87777,87802],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[87880,87990],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.SwitchExpression\"></xref>.","nodes":[{"pos":[0,89],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.SwitchExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.SwitchExpression\"></xref>."}],"pos":[89772,89862],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[90102,90127],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[90205,90315],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.SwitchCase\"></xref>.","nodes":[{"pos":[0,83],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.SwitchCase\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.SwitchCase\"></xref>."}],"pos":[92053,92137],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[92369,92394],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[92472,92582],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.TryExpression\"></xref>.","nodes":[{"pos":[0,86],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.TryExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.TryExpression\"></xref>."}],"pos":[94322,94409],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[94640,94665],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[94743,94853],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.TypeBinaryExpression\"></xref>.","nodes":[{"pos":[0,93],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.TypeBinaryExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.TypeBinaryExpression\"></xref>."}],"pos":[96670,96764],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[97016,97041],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[97119,97229],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.UnaryExpression\"></xref>.","nodes":[{"pos":[0,88],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.UnaryExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.UnaryExpression\"></xref>."}],"pos":[98993,99082],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[99319,99344],"yaml":true},{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"pos":[0,109],"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","nodes":[{"content":"The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.","pos":[0,109]}]}],"pos":[99422,99532],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.ExpressionVisitor\n  commentId: T:System.Linq.Expressions.ExpressionVisitor\n  id: ExpressionVisitor\n  children:\n  - System.Linq.Expressions.ExpressionVisitor.#ctor\n  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})\n  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)\n  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  - System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  - System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  - System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  - System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  - System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  langs:\n  - csharp\n  name: ExpressionVisitor\n  nameWithType: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n  type: Class\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Represents a visitor or rewriter for expression trees.\n  remarks: This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining or copying an expression tree.\n  syntax:\n    content: public abstract class ExpressionVisitor\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Linq.Expressions.DynamicExpressionVisitor\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.#ctor\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.#ctor\n  id: '#ctor'\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: ExpressionVisitor()\n  nameWithType: ExpressionVisitor.ExpressionVisitor()\n  fullName: ExpressionVisitor.ExpressionVisitor()\n  type: Constructor\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Initializes a new instance of <xref href=\"System.Linq.Expressions.ExpressionVisitor\"></xref>.\n  syntax:\n    content: protected ExpressionVisitor ();\n    parameters: []\n  overload: System.Linq.Expressions.ExpressionVisitor.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  id: Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(ReadOnlyCollection<Expression>)\n  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n  fullName: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Dispatches the list of expressions to one of the more specialized visit methods in this class.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> Visit (System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> nodes);\n    parameters:\n    - id: nodes\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n      description: The expressions to visit.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n      description: The modified expression list, if any one of the elements were modified; otherwise, returns the original expression list.\n  overload: System.Linq.Expressions.ExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  id: Visit(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(Expression)\n  nameWithType: ExpressionVisitor.Visit(Expression)\n  fullName: ExpressionVisitor.Visit(Expression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Dispatches the expression to one of the more specialized visit methods in this class.\n  syntax:\n    content: public virtual System.Linq.Expressions.Expression Visit (System.Linq.Expressions.Expression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.Expression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.Visit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})\n  id: Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n  fullName: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits all nodes in the collection using a specified element visitor.\n  syntax:\n    content: public static System.Collections.ObjectModel.ReadOnlyCollection<T> Visit<T> (System.Collections.ObjectModel.ReadOnlyCollection<T> nodes, Func<T,T> elementVisitor);\n    parameters:\n    - id: nodes\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: The nodes to visit.\n    - id: elementVisitor\n      type: System.Func{T,T}\n      description: A delegate that visits a single element, optionally replacing it with a new element.\n    typeParameters:\n    - id: T\n      description: The type of the nodes.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: The modified node list, if any of the elements were modified; otherwise, returns the original node list.\n  overload: System.Linq.Expressions.ExpressionVisitor.Visit``1*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)\n  id: VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n  fullName: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits all expressions in the collection, casting the results back to the original expression type.\n  syntax:\n    content: 'public System.Collections.ObjectModel.ReadOnlyCollection<T> VisitAndConvert<T> (System.Collections.ObjectModel.ReadOnlyCollection<T> nodes, string callerName) where T : System.Linq.Expressions.Expression;'\n    parameters:\n    - id: nodes\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: The expressions to visit.\n    - id: callerName\n      type: System.String\n      description: The name of the calling method; used to report to report a better error message.\n    typeParameters:\n    - id: T\n      description: The type of the expressions.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: The modified expression collection, if any expression was modified; otherwise, returns the original expression collection.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The visit method for one of the expressions returned a different type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  id: VisitAndConvert``1(``0,System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitAndConvert<T>(T, String)\n  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)\n  fullName: ExpressionVisitor.VisitAndConvert<T>(T, String)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits an expression, casting the result back to the original expression type.\n  syntax:\n    content: 'public T VisitAndConvert<T> (T node, string callerName) where T : System.Linq.Expressions.Expression;'\n    parameters:\n    - id: node\n      type: T\n      description: The expression to visit.\n    - id: callerName\n      type: System.String\n      description: The name of the calling method; used to report to report a better error message.\n    typeParameters:\n    - id: T\n      description: The type of the expression.\n    return:\n      type: T\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The visit method for this node returned a different type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  id: VisitBinary(System.Linq.Expressions.BinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitBinary(BinaryExpression)\n  nameWithType: ExpressionVisitor.VisitBinary(BinaryExpression)\n  fullName: ExpressionVisitor.VisitBinary(BinaryExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.BinaryExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitBinary (System.Linq.Expressions.BinaryExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.BinaryExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitBinary*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  id: VisitBlock(System.Linq.Expressions.BlockExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitBlock(BlockExpression)\n  nameWithType: ExpressionVisitor.VisitBlock(BlockExpression)\n  fullName: ExpressionVisitor.VisitBlock(BlockExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.BlockExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitBlock (System.Linq.Expressions.BlockExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.BlockExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitBlock*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  id: VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitCatchBlock(CatchBlock)\n  nameWithType: ExpressionVisitor.VisitCatchBlock(CatchBlock)\n  fullName: ExpressionVisitor.VisitCatchBlock(CatchBlock)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.CatchBlock\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.CatchBlock VisitCatchBlock (System.Linq.Expressions.CatchBlock node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.CatchBlock\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.CatchBlock\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  id: VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitConditional(ConditionalExpression)\n  nameWithType: ExpressionVisitor.VisitConditional(ConditionalExpression)\n  fullName: ExpressionVisitor.VisitConditional(ConditionalExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.ConditionalExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitConditional (System.Linq.Expressions.ConditionalExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ConditionalExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitConditional*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  id: VisitConstant(System.Linq.Expressions.ConstantExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitConstant(ConstantExpression)\n  nameWithType: ExpressionVisitor.VisitConstant(ConstantExpression)\n  fullName: ExpressionVisitor.VisitConstant(ConstantExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the <xref href=\"System.Linq.Expressions.ConstantExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitConstant (System.Linq.Expressions.ConstantExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ConstantExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitConstant*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  id: VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitDebugInfo(DebugInfoExpression)\n  nameWithType: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n  fullName: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the <xref href=\"System.Linq.Expressions.DebugInfoExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitDebugInfo (System.Linq.Expressions.DebugInfoExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.DebugInfoExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  id: VisitDefault(System.Linq.Expressions.DefaultExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitDefault(DefaultExpression)\n  nameWithType: ExpressionVisitor.VisitDefault(DefaultExpression)\n  fullName: ExpressionVisitor.VisitDefault(DefaultExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the <xref href=\"System.Linq.Expressions.DefaultExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitDefault (System.Linq.Expressions.DefaultExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.DefaultExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitDefault*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  id: VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitDynamic(DynamicExpression)\n  nameWithType: ExpressionVisitor.VisitDynamic(DynamicExpression)\n  fullName: ExpressionVisitor.VisitDynamic(DynamicExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.DynamicExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitDynamic (System.Linq.Expressions.DynamicExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.DynamicExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitDynamic*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  id: VisitElementInit(System.Linq.Expressions.ElementInit)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitElementInit(ElementInit)\n  nameWithType: ExpressionVisitor.VisitElementInit(ElementInit)\n  fullName: ExpressionVisitor.VisitElementInit(ElementInit)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.ElementInit\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.ElementInit VisitElementInit (System.Linq.Expressions.ElementInit node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ElementInit\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.ElementInit\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitElementInit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  id: VisitExtension(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitExtension(Expression)\n  nameWithType: ExpressionVisitor.VisitExtension(Expression)\n  fullName: ExpressionVisitor.VisitExtension(Expression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the extension expression.\n  remarks: \"This can be overridden to visit or rewrite specific extension nodes.  \\n  \\n If it is not overridden, this method will call <xref:System.Linq.Expressions.Expression.VisitChildren%2A>, which gives the node a chance to walk its children. By default, <xref:System.Linq.Expressions.Expression.VisitChildren%2A> will try to reduce the node.\"\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.Expression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitExtension*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  id: VisitGoto(System.Linq.Expressions.GotoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitGoto(GotoExpression)\n  nameWithType: ExpressionVisitor.VisitGoto(GotoExpression)\n  fullName: ExpressionVisitor.VisitGoto(GotoExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.GotoExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitGoto (System.Linq.Expressions.GotoExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.GotoExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitGoto*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  id: VisitIndex(System.Linq.Expressions.IndexExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitIndex(IndexExpression)\n  nameWithType: ExpressionVisitor.VisitIndex(IndexExpression)\n  fullName: ExpressionVisitor.VisitIndex(IndexExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.IndexExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitIndex (System.Linq.Expressions.IndexExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.IndexExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitIndex*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  id: VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitInvocation(InvocationExpression)\n  nameWithType: ExpressionVisitor.VisitInvocation(InvocationExpression)\n  fullName: ExpressionVisitor.VisitInvocation(InvocationExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.InvocationExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitInvocation (System.Linq.Expressions.InvocationExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.InvocationExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitInvocation*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  id: VisitLabel(System.Linq.Expressions.LabelExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLabel(LabelExpression)\n  nameWithType: ExpressionVisitor.VisitLabel(LabelExpression)\n  fullName: ExpressionVisitor.VisitLabel(LabelExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.LabelExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitLabel (System.Linq.Expressions.LabelExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.LabelExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitLabel*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  id: VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLabelTarget(LabelTarget)\n  nameWithType: ExpressionVisitor.VisitLabelTarget(LabelTarget)\n  fullName: ExpressionVisitor.VisitLabelTarget(LabelTarget)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the <xref href=\"System.Linq.Expressions.LabelTarget\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.LabelTarget VisitLabelTarget (System.Linq.Expressions.LabelTarget node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.LabelTarget\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.LabelTarget\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  id: VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLambda<T>(Expression<T>)\n  nameWithType: ExpressionVisitor.VisitLambda<T>(Expression<T>)\n  fullName: ExpressionVisitor.VisitLambda<T>(Expression<T>)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.Expression`1\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitLambda<T> (System.Linq.Expressions.Expression<T> node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.Expression{T}\n      description: The expression to visit.\n    typeParameters:\n    - id: T\n      description: The type of the delegate.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  id: VisitListInit(System.Linq.Expressions.ListInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitListInit(ListInitExpression)\n  nameWithType: ExpressionVisitor.VisitListInit(ListInitExpression)\n  fullName: ExpressionVisitor.VisitListInit(ListInitExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.ListInitExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitListInit (System.Linq.Expressions.ListInitExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ListInitExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitListInit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  id: VisitLoop(System.Linq.Expressions.LoopExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLoop(LoopExpression)\n  nameWithType: ExpressionVisitor.VisitLoop(LoopExpression)\n  fullName: ExpressionVisitor.VisitLoop(LoopExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.LoopExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitLoop (System.Linq.Expressions.LoopExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.LoopExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitLoop*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  id: VisitMember(System.Linq.Expressions.MemberExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMember(MemberExpression)\n  nameWithType: ExpressionVisitor.VisitMember(MemberExpression)\n  fullName: ExpressionVisitor.VisitMember(MemberExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.MemberExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitMember*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  id: VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberAssignment(MemberAssignment)\n  nameWithType: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n  fullName: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.MemberAssignment\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.MemberAssignment VisitMemberAssignment (System.Linq.Expressions.MemberAssignment node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberAssignment\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.MemberAssignment\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  id: VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberBinding(MemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberBinding(MemberBinding)\n  fullName: ExpressionVisitor.VisitMemberBinding(MemberBinding)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.MemberBinding\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.MemberBinding VisitMemberBinding (System.Linq.Expressions.MemberBinding node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberBinding\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.MemberBinding\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  id: VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberInit(MemberInitExpression)\n  nameWithType: ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n  fullName: ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.MemberInitExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitMemberInit (System.Linq.Expressions.MemberInitExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberInitExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  id: VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberListBinding(MemberListBinding)\n  nameWithType: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n  fullName: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.MemberListBinding\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.MemberListBinding VisitMemberListBinding (System.Linq.Expressions.MemberListBinding node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberListBinding\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.MemberListBinding\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  id: VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberMemberBinding(MemberMemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n  fullName: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.MemberMemberBinding\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.MemberMemberBinding VisitMemberMemberBinding (System.Linq.Expressions.MemberMemberBinding node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberMemberBinding\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.MemberMemberBinding\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMethodCall(MethodCallExpression)\n  nameWithType: ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n  fullName: ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.MethodCallExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MethodCallExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  id: VisitNew(System.Linq.Expressions.NewExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitNew(NewExpression)\n  nameWithType: ExpressionVisitor.VisitNew(NewExpression)\n  fullName: ExpressionVisitor.VisitNew(NewExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.NewExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitNew (System.Linq.Expressions.NewExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.NewExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitNew*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  id: VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitNewArray(NewArrayExpression)\n  nameWithType: ExpressionVisitor.VisitNewArray(NewArrayExpression)\n  fullName: ExpressionVisitor.VisitNewArray(NewArrayExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.NewArrayExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitNewArray (System.Linq.Expressions.NewArrayExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.NewArrayExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitNewArray*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  id: VisitParameter(System.Linq.Expressions.ParameterExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitParameter(ParameterExpression)\n  nameWithType: ExpressionVisitor.VisitParameter(ParameterExpression)\n  fullName: ExpressionVisitor.VisitParameter(ParameterExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the <xref href=\"System.Linq.Expressions.ParameterExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitParameter (System.Linq.Expressions.ParameterExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ParameterExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitParameter*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  id: VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitRuntimeVariables(RuntimeVariablesExpression)\n  nameWithType: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n  fullName: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.RuntimeVariablesExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitRuntimeVariables (System.Linq.Expressions.RuntimeVariablesExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.RuntimeVariablesExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  id: VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitSwitch(SwitchExpression)\n  nameWithType: ExpressionVisitor.VisitSwitch(SwitchExpression)\n  fullName: ExpressionVisitor.VisitSwitch(SwitchExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.SwitchExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitSwitch (System.Linq.Expressions.SwitchExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.SwitchExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitSwitch*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  id: VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitSwitchCase(SwitchCase)\n  nameWithType: ExpressionVisitor.VisitSwitchCase(SwitchCase)\n  fullName: ExpressionVisitor.VisitSwitchCase(SwitchCase)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.SwitchCase\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.SwitchCase VisitSwitchCase (System.Linq.Expressions.SwitchCase node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.SwitchCase\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.SwitchCase\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  id: VisitTry(System.Linq.Expressions.TryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitTry(TryExpression)\n  nameWithType: ExpressionVisitor.VisitTry(TryExpression)\n  fullName: ExpressionVisitor.VisitTry(TryExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.TryExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitTry (System.Linq.Expressions.TryExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.TryExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitTry*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  id: VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitTypeBinary(TypeBinaryExpression)\n  nameWithType: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n  fullName: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.TypeBinaryExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitTypeBinary (System.Linq.Expressions.TypeBinaryExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.TypeBinaryExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  id: VisitUnary(System.Linq.Expressions.UnaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitUnary(UnaryExpression)\n  nameWithType: ExpressionVisitor.VisitUnary(UnaryExpression)\n  fullName: ExpressionVisitor.VisitUnary(UnaryExpression)\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.UnaryExpression\"></xref>.\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitUnary (System.Linq.Expressions.UnaryExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.UnaryExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitUnary*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Linq.Expressions.ExpressionVisitor.#ctor\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: ExpressionVisitor()\n  nameWithType: ExpressionVisitor.ExpressionVisitor()\n  fullName: ExpressionVisitor.ExpressionVisitor()\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit(ReadOnlyCollection<Expression>)\n  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n  fullName: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Linq.Expressions.Expression\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<Expression>\n  nameWithType: ReadOnlyCollection<Expression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit(Expression)\n  nameWithType: ExpressionVisitor.Visit(Expression)\n  fullName: ExpressionVisitor.Visit(Expression)\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n  fullName: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Func{T,T}\n  parent: System\n  isExternal: false\n  name: Func<T,T>\n  nameWithType: Func<T,T>\n  fullName: System.Func<T,T>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n  fullName: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitAndConvert<T>(T, String)\n  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)\n  fullName: ExpressionVisitor.VisitAndConvert<T>(T, String)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitBinary(BinaryExpression)\n  nameWithType: ExpressionVisitor.VisitBinary(BinaryExpression)\n  fullName: ExpressionVisitor.VisitBinary(BinaryExpression)\n- uid: System.Linq.Expressions.BinaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: BinaryExpression\n  nameWithType: BinaryExpression\n  fullName: System.Linq.Expressions.BinaryExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitBlock(BlockExpression)\n  nameWithType: ExpressionVisitor.VisitBlock(BlockExpression)\n  fullName: ExpressionVisitor.VisitBlock(BlockExpression)\n- uid: System.Linq.Expressions.BlockExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: BlockExpression\n  nameWithType: BlockExpression\n  fullName: System.Linq.Expressions.BlockExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitCatchBlock(CatchBlock)\n  nameWithType: ExpressionVisitor.VisitCatchBlock(CatchBlock)\n  fullName: ExpressionVisitor.VisitCatchBlock(CatchBlock)\n- uid: System.Linq.Expressions.CatchBlock\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: CatchBlock\n  nameWithType: CatchBlock\n  fullName: System.Linq.Expressions.CatchBlock\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitConditional(ConditionalExpression)\n  nameWithType: ExpressionVisitor.VisitConditional(ConditionalExpression)\n  fullName: ExpressionVisitor.VisitConditional(ConditionalExpression)\n- uid: System.Linq.Expressions.ConditionalExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ConditionalExpression\n  nameWithType: ConditionalExpression\n  fullName: System.Linq.Expressions.ConditionalExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitConstant(ConstantExpression)\n  nameWithType: ExpressionVisitor.VisitConstant(ConstantExpression)\n  fullName: ExpressionVisitor.VisitConstant(ConstantExpression)\n- uid: System.Linq.Expressions.ConstantExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ConstantExpression\n  nameWithType: ConstantExpression\n  fullName: System.Linq.Expressions.ConstantExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDebugInfo(DebugInfoExpression)\n  nameWithType: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n  fullName: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n- uid: System.Linq.Expressions.DebugInfoExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DebugInfoExpression\n  nameWithType: DebugInfoExpression\n  fullName: System.Linq.Expressions.DebugInfoExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDefault(DefaultExpression)\n  nameWithType: ExpressionVisitor.VisitDefault(DefaultExpression)\n  fullName: ExpressionVisitor.VisitDefault(DefaultExpression)\n- uid: System.Linq.Expressions.DefaultExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DefaultExpression\n  nameWithType: DefaultExpression\n  fullName: System.Linq.Expressions.DefaultExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDynamic(DynamicExpression)\n  nameWithType: ExpressionVisitor.VisitDynamic(DynamicExpression)\n  fullName: ExpressionVisitor.VisitDynamic(DynamicExpression)\n- uid: System.Linq.Expressions.DynamicExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DynamicExpression\n  nameWithType: DynamicExpression\n  fullName: System.Linq.Expressions.DynamicExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitElementInit(ElementInit)\n  nameWithType: ExpressionVisitor.VisitElementInit(ElementInit)\n  fullName: ExpressionVisitor.VisitElementInit(ElementInit)\n- uid: System.Linq.Expressions.ElementInit\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ElementInit\n  nameWithType: ElementInit\n  fullName: System.Linq.Expressions.ElementInit\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitExtension(Expression)\n  nameWithType: ExpressionVisitor.VisitExtension(Expression)\n  fullName: ExpressionVisitor.VisitExtension(Expression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitGoto(GotoExpression)\n  nameWithType: ExpressionVisitor.VisitGoto(GotoExpression)\n  fullName: ExpressionVisitor.VisitGoto(GotoExpression)\n- uid: System.Linq.Expressions.GotoExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: GotoExpression\n  nameWithType: GotoExpression\n  fullName: System.Linq.Expressions.GotoExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitIndex(IndexExpression)\n  nameWithType: ExpressionVisitor.VisitIndex(IndexExpression)\n  fullName: ExpressionVisitor.VisitIndex(IndexExpression)\n- uid: System.Linq.Expressions.IndexExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: IndexExpression\n  nameWithType: IndexExpression\n  fullName: System.Linq.Expressions.IndexExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitInvocation(InvocationExpression)\n  nameWithType: ExpressionVisitor.VisitInvocation(InvocationExpression)\n  fullName: ExpressionVisitor.VisitInvocation(InvocationExpression)\n- uid: System.Linq.Expressions.InvocationExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: InvocationExpression\n  nameWithType: InvocationExpression\n  fullName: System.Linq.Expressions.InvocationExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLabel(LabelExpression)\n  nameWithType: ExpressionVisitor.VisitLabel(LabelExpression)\n  fullName: ExpressionVisitor.VisitLabel(LabelExpression)\n- uid: System.Linq.Expressions.LabelExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelExpression\n  nameWithType: LabelExpression\n  fullName: System.Linq.Expressions.LabelExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLabelTarget(LabelTarget)\n  nameWithType: ExpressionVisitor.VisitLabelTarget(LabelTarget)\n  fullName: ExpressionVisitor.VisitLabelTarget(LabelTarget)\n- uid: System.Linq.Expressions.LabelTarget\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelTarget\n  nameWithType: LabelTarget\n  fullName: System.Linq.Expressions.LabelTarget\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLambda<T>(Expression<T>)\n  nameWithType: ExpressionVisitor.VisitLambda<T>(Expression<T>)\n  fullName: ExpressionVisitor.VisitLambda<T>(Expression<T>)\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Linq.Expressions.Expression{T}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<T>\n  nameWithType: Expression<T>\n  fullName: System.Linq.Expressions.Expression<T>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitListInit(ListInitExpression)\n  nameWithType: ExpressionVisitor.VisitListInit(ListInitExpression)\n  fullName: ExpressionVisitor.VisitListInit(ListInitExpression)\n- uid: System.Linq.Expressions.ListInitExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ListInitExpression\n  nameWithType: ListInitExpression\n  fullName: System.Linq.Expressions.ListInitExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLoop(LoopExpression)\n  nameWithType: ExpressionVisitor.VisitLoop(LoopExpression)\n  fullName: ExpressionVisitor.VisitLoop(LoopExpression)\n- uid: System.Linq.Expressions.LoopExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LoopExpression\n  nameWithType: LoopExpression\n  fullName: System.Linq.Expressions.LoopExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMember(MemberExpression)\n  nameWithType: ExpressionVisitor.VisitMember(MemberExpression)\n  fullName: ExpressionVisitor.VisitMember(MemberExpression)\n- uid: System.Linq.Expressions.MemberExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberExpression\n  nameWithType: MemberExpression\n  fullName: System.Linq.Expressions.MemberExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberAssignment(MemberAssignment)\n  nameWithType: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n  fullName: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n- uid: System.Linq.Expressions.MemberAssignment\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberAssignment\n  nameWithType: MemberAssignment\n  fullName: System.Linq.Expressions.MemberAssignment\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberBinding(MemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberBinding(MemberBinding)\n  fullName: ExpressionVisitor.VisitMemberBinding(MemberBinding)\n- uid: System.Linq.Expressions.MemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberBinding\n  nameWithType: MemberBinding\n  fullName: System.Linq.Expressions.MemberBinding\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberInit(MemberInitExpression)\n  nameWithType: ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n  fullName: ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n- uid: System.Linq.Expressions.MemberInitExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberInitExpression\n  nameWithType: MemberInitExpression\n  fullName: System.Linq.Expressions.MemberInitExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberListBinding(MemberListBinding)\n  nameWithType: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n  fullName: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n- uid: System.Linq.Expressions.MemberListBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberListBinding\n  nameWithType: MemberListBinding\n  fullName: System.Linq.Expressions.MemberListBinding\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberMemberBinding(MemberMemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n  fullName: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n- uid: System.Linq.Expressions.MemberMemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberMemberBinding\n  nameWithType: MemberMemberBinding\n  fullName: System.Linq.Expressions.MemberMemberBinding\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMethodCall(MethodCallExpression)\n  nameWithType: ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n  fullName: ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n- uid: System.Linq.Expressions.MethodCallExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MethodCallExpression\n  nameWithType: MethodCallExpression\n  fullName: System.Linq.Expressions.MethodCallExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitNew(NewExpression)\n  nameWithType: ExpressionVisitor.VisitNew(NewExpression)\n  fullName: ExpressionVisitor.VisitNew(NewExpression)\n- uid: System.Linq.Expressions.NewExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: NewExpression\n  nameWithType: NewExpression\n  fullName: System.Linq.Expressions.NewExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitNewArray(NewArrayExpression)\n  nameWithType: ExpressionVisitor.VisitNewArray(NewArrayExpression)\n  fullName: ExpressionVisitor.VisitNewArray(NewArrayExpression)\n- uid: System.Linq.Expressions.NewArrayExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: NewArrayExpression\n  nameWithType: NewArrayExpression\n  fullName: System.Linq.Expressions.NewArrayExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitParameter(ParameterExpression)\n  nameWithType: ExpressionVisitor.VisitParameter(ParameterExpression)\n  fullName: ExpressionVisitor.VisitParameter(ParameterExpression)\n- uid: System.Linq.Expressions.ParameterExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ParameterExpression\n  nameWithType: ParameterExpression\n  fullName: System.Linq.Expressions.ParameterExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitRuntimeVariables(RuntimeVariablesExpression)\n  nameWithType: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n  fullName: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n- uid: System.Linq.Expressions.RuntimeVariablesExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: RuntimeVariablesExpression\n  nameWithType: RuntimeVariablesExpression\n  fullName: System.Linq.Expressions.RuntimeVariablesExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitSwitch(SwitchExpression)\n  nameWithType: ExpressionVisitor.VisitSwitch(SwitchExpression)\n  fullName: ExpressionVisitor.VisitSwitch(SwitchExpression)\n- uid: System.Linq.Expressions.SwitchExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SwitchExpression\n  nameWithType: SwitchExpression\n  fullName: System.Linq.Expressions.SwitchExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitSwitchCase(SwitchCase)\n  nameWithType: ExpressionVisitor.VisitSwitchCase(SwitchCase)\n  fullName: ExpressionVisitor.VisitSwitchCase(SwitchCase)\n- uid: System.Linq.Expressions.SwitchCase\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SwitchCase\n  nameWithType: SwitchCase\n  fullName: System.Linq.Expressions.SwitchCase\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitTry(TryExpression)\n  nameWithType: ExpressionVisitor.VisitTry(TryExpression)\n  fullName: ExpressionVisitor.VisitTry(TryExpression)\n- uid: System.Linq.Expressions.TryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: TryExpression\n  nameWithType: TryExpression\n  fullName: System.Linq.Expressions.TryExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitTypeBinary(TypeBinaryExpression)\n  nameWithType: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n  fullName: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n- uid: System.Linq.Expressions.TypeBinaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: TypeBinaryExpression\n  nameWithType: TypeBinaryExpression\n  fullName: System.Linq.Expressions.TypeBinaryExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitUnary(UnaryExpression)\n  nameWithType: ExpressionVisitor.VisitUnary(UnaryExpression)\n  fullName: ExpressionVisitor.VisitUnary(UnaryExpression)\n- uid: System.Linq.Expressions.UnaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: UnaryExpression\n  nameWithType: UnaryExpression\n  fullName: System.Linq.Expressions.UnaryExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.#ctor*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: ExpressionVisitor\n  nameWithType: ExpressionVisitor.ExpressionVisitor\n  fullName: ExpressionVisitor.ExpressionVisitor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit\n  nameWithType: ExpressionVisitor.Visit\n  fullName: ExpressionVisitor.Visit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit<T>\n  nameWithType: ExpressionVisitor.Visit<T>\n  fullName: ExpressionVisitor.Visit<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitAndConvert<T>\n  nameWithType: ExpressionVisitor.VisitAndConvert<T>\n  fullName: ExpressionVisitor.VisitAndConvert<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitBinary\n  nameWithType: ExpressionVisitor.VisitBinary\n  fullName: ExpressionVisitor.VisitBinary\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitBlock\n  nameWithType: ExpressionVisitor.VisitBlock\n  fullName: ExpressionVisitor.VisitBlock\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitCatchBlock\n  nameWithType: ExpressionVisitor.VisitCatchBlock\n  fullName: ExpressionVisitor.VisitCatchBlock\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitConditional\n  nameWithType: ExpressionVisitor.VisitConditional\n  fullName: ExpressionVisitor.VisitConditional\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitConstant\n  nameWithType: ExpressionVisitor.VisitConstant\n  fullName: ExpressionVisitor.VisitConstant\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDebugInfo\n  nameWithType: ExpressionVisitor.VisitDebugInfo\n  fullName: ExpressionVisitor.VisitDebugInfo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDefault\n  nameWithType: ExpressionVisitor.VisitDefault\n  fullName: ExpressionVisitor.VisitDefault\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDynamic\n  nameWithType: ExpressionVisitor.VisitDynamic\n  fullName: ExpressionVisitor.VisitDynamic\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitElementInit\n  nameWithType: ExpressionVisitor.VisitElementInit\n  fullName: ExpressionVisitor.VisitElementInit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitExtension\n  nameWithType: ExpressionVisitor.VisitExtension\n  fullName: ExpressionVisitor.VisitExtension\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitGoto\n  nameWithType: ExpressionVisitor.VisitGoto\n  fullName: ExpressionVisitor.VisitGoto\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitIndex\n  nameWithType: ExpressionVisitor.VisitIndex\n  fullName: ExpressionVisitor.VisitIndex\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitInvocation\n  nameWithType: ExpressionVisitor.VisitInvocation\n  fullName: ExpressionVisitor.VisitInvocation\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLabel\n  nameWithType: ExpressionVisitor.VisitLabel\n  fullName: ExpressionVisitor.VisitLabel\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLabelTarget\n  nameWithType: ExpressionVisitor.VisitLabelTarget\n  fullName: ExpressionVisitor.VisitLabelTarget\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLambda<T>\n  nameWithType: ExpressionVisitor.VisitLambda<T>\n  fullName: ExpressionVisitor.VisitLambda<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitListInit\n  nameWithType: ExpressionVisitor.VisitListInit\n  fullName: ExpressionVisitor.VisitListInit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLoop\n  nameWithType: ExpressionVisitor.VisitLoop\n  fullName: ExpressionVisitor.VisitLoop\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMember\n  nameWithType: ExpressionVisitor.VisitMember\n  fullName: ExpressionVisitor.VisitMember\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberAssignment\n  nameWithType: ExpressionVisitor.VisitMemberAssignment\n  fullName: ExpressionVisitor.VisitMemberAssignment\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberBinding\n  nameWithType: ExpressionVisitor.VisitMemberBinding\n  fullName: ExpressionVisitor.VisitMemberBinding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberInit\n  nameWithType: ExpressionVisitor.VisitMemberInit\n  fullName: ExpressionVisitor.VisitMemberInit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberListBinding\n  nameWithType: ExpressionVisitor.VisitMemberListBinding\n  fullName: ExpressionVisitor.VisitMemberListBinding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberMemberBinding\n  nameWithType: ExpressionVisitor.VisitMemberMemberBinding\n  fullName: ExpressionVisitor.VisitMemberMemberBinding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMethodCall\n  nameWithType: ExpressionVisitor.VisitMethodCall\n  fullName: ExpressionVisitor.VisitMethodCall\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitNew\n  nameWithType: ExpressionVisitor.VisitNew\n  fullName: ExpressionVisitor.VisitNew\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitNewArray\n  nameWithType: ExpressionVisitor.VisitNewArray\n  fullName: ExpressionVisitor.VisitNewArray\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitParameter\n  nameWithType: ExpressionVisitor.VisitParameter\n  fullName: ExpressionVisitor.VisitParameter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitRuntimeVariables\n  nameWithType: ExpressionVisitor.VisitRuntimeVariables\n  fullName: ExpressionVisitor.VisitRuntimeVariables\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitSwitch\n  nameWithType: ExpressionVisitor.VisitSwitch\n  fullName: ExpressionVisitor.VisitSwitch\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitSwitchCase\n  nameWithType: ExpressionVisitor.VisitSwitchCase\n  fullName: ExpressionVisitor.VisitSwitchCase\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitTry\n  nameWithType: ExpressionVisitor.VisitTry\n  fullName: ExpressionVisitor.VisitTry\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitTypeBinary\n  nameWithType: ExpressionVisitor.VisitTypeBinary\n  fullName: ExpressionVisitor.VisitTypeBinary\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitUnary\n  nameWithType: ExpressionVisitor.VisitUnary\n  fullName: ExpressionVisitor.VisitUnary\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/ExpressionVisitor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}