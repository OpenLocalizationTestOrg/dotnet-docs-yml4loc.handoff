{"nodes":[{"content":"Defines the interface of an STL/CLR <code>deque</code> object.","nodes":[{"pos":[0,62],"content":"Defines the interface of an STL/CLR <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">deque</ph><ept id=\"p1\">&lt;/code&gt;</ept> object.","source":"Defines the interface of an STL/CLR <code>deque</code> object."}],"pos":[3121,3184],"yaml":true},{"content":"[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  \n  \n For more information, see [deque (STL/CLR)](http://msdn.microsoft.com/library/dd669da3-3c0e-45e9-8596-f6b483720941).","nodes":[{"pos":[62,178],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/dd669da3-3c0e-45e9-8596-f6b483720941)</ept>.","source":"For more information, see [deque (STL/CLR)](http://msdn.microsoft.com/library/dd669da3-3c0e-45e9-8596-f6b483720941)."}],"pos":[3195,3378],"yaml":true,"extradata":"MT"},{"content":"The type that is contained.","nodes":[{"pos":[0,27],"content":"The type that is contained.","nodes":[{"content":"The type that is contained.","pos":[0,27]}]}],"pos":[3601,3629],"yaml":true},{"content":"Replaces all elements of the container with the elements in the given <xref href=\"System.Collections.IEnumerable\"></xref> object.","nodes":[{"pos":[0,129],"content":"Replaces all elements of the container with the elements in the given <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerable\"&gt;&lt;/xref&gt;</ph> object.","source":"Replaces all elements of the container with the elements in the given <xref href=\"System.Collections.IEnumerable\"></xref> object."}],"pos":[5057,5187],"yaml":true},{"content":"For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980)</ept>.","source":"For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980)."}],"pos":[5198,5323],"yaml":true,"extradata":"MT"},{"content":"The enumeration to insert into the container.","nodes":[{"pos":[0,45],"content":"The enumeration to insert into the container.","nodes":[{"content":"The enumeration to insert into the container.","pos":[0,45]}]}],"pos":[5501,5547],"yaml":true},{"content":"Replaces all elements of the container with the elements specified by the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> objects.","nodes":[{"pos":[0,159],"content":"Replaces all elements of the container with the elements specified by the given <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"&gt;&lt;/xref&gt;</ph> objects.","source":"Replaces all elements of the container with the elements specified by the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> objects."}],"pos":[6927,7087],"yaml":true},{"content":"For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980)</ept>.","source":"For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980)."}],"pos":[7098,7223],"yaml":true,"extradata":"MT"},{"content":"The starting position of the range to insert into the container.","nodes":[{"pos":[0,64],"content":"The starting position of the range to insert into the container.","nodes":[{"content":"The starting position of the range to insert into the container.","pos":[0,64]}]}],"pos":[7508,7573],"yaml":true},{"content":"The first position beyond the end of the range to insert into the container.","nodes":[{"pos":[0,76],"content":"The first position beyond the end of the range to insert into the container.","nodes":[{"content":"The first position beyond the end of the range to insert into the container.","pos":[0,76]}]}],"pos":[7670,7747],"yaml":true},{"content":"Replaces all elements of the container with the given number of specified elements.","nodes":[{"pos":[0,83],"content":"Replaces all elements of the container with the given number of specified elements.","nodes":[{"content":"Replaces all elements of the container with the given number of specified elements.","pos":[0,83]}]}],"pos":[8764,8848],"yaml":true},{"content":"For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980)</ept>.","source":"For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980)."}],"pos":[8859,8984],"yaml":true,"extradata":"MT"},{"content":"The number of elements to insert into the container.","nodes":[{"pos":[0,52],"content":"The number of elements to insert into the container.","nodes":[{"content":"The number of elements to insert into the container.","pos":[0,52]}]}],"pos":[9130,9183],"yaml":true},{"content":"The value of the element to insert into the container.","nodes":[{"pos":[0,54],"content":"The value of the element to insert into the container.","nodes":[{"content":"The value of the element to insert into the container.","pos":[0,54]}]}],"pos":[9236,9291],"yaml":true},{"content":"Accesses an element at a specified position in the container.","nodes":[{"pos":[0,61],"content":"Accesses an element at a specified position in the container.","nodes":[{"content":"Accesses an element at a specified position in the container.","pos":[0,61]}]}],"pos":[10251,10313],"yaml":true},{"content":"For more information, see [deque::at (STL/CLR)](http://msdn.microsoft.com/library/9af83d8a-c519-4b2a-a25f-d3dc8bbb87fb).","nodes":[{"pos":[0,120],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::at (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/9af83d8a-c519-4b2a-a25f-d3dc8bbb87fb)</ept>.","source":"For more information, see [deque::at (STL/CLR)](http://msdn.microsoft.com/library/9af83d8a-c519-4b2a-a25f-d3dc8bbb87fb)."}],"pos":[10324,10445],"yaml":true,"extradata":"MT"},{"content":"Position of element to access.","nodes":[{"pos":[0,30],"content":"Position of element to access.","nodes":[{"content":"Position of element to access.","pos":[0,30]}]}],"pos":[10572,10603],"yaml":true},{"content":"The element of the controlled sequence at position <code>pos</code>.","nodes":[{"pos":[0,68],"content":"The element of the controlled sequence at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pos</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The element of the controlled sequence at position <code>pos</code>."}],"pos":[10654,10723],"yaml":true},{"content":"Accesses the last element of the container.","nodes":[{"pos":[0,43],"content":"Accesses the last element of the container.","nodes":[{"content":"Accesses the last element of the container.","pos":[0,43]}]}],"pos":[11634,11678],"yaml":true},{"content":"For more information, see [deque::back (STL/CLR)](http://msdn.microsoft.com/library/5608cdda-212d-42f6-866b-b04aec04ef8e).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/5608cdda-212d-42f6-866b-b04aec04ef8e)</ept>.","source":"For more information, see [deque::back (STL/CLR)](http://msdn.microsoft.com/library/5608cdda-212d-42f6-866b-b04aec04ef8e)."}],"pos":[11689,11812],"yaml":true,"extradata":"MT"},{"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,69],"content":"The last element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The last element of the controlled sequence, which must be non-empty.","pos":[0,69]}]}],"pos":[11928,11998],"yaml":true},{"content":"Accesses the last element of a non-empty <code>deque</code> collection.","nodes":[{"pos":[0,71],"content":"Accesses the last element of a non-empty <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">deque</ph><ept id=\"p1\">&lt;/code&gt;</ept> collection.","source":"Accesses the last element of a non-empty <code>deque</code> collection."}],"pos":[12937,13009],"yaml":true},{"content":"For more information, see [deque::back_item (STL/CLR)](http://msdn.microsoft.com/library/b112636a-2f18-4eb0-abd6-076acdabeff7).","nodes":[{"pos":[0,127],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::back_item (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/b112636a-2f18-4eb0-abd6-076acdabeff7)</ept>.","source":"For more information, see [deque::back_item (STL/CLR)](http://msdn.microsoft.com/library/b112636a-2f18-4eb0-abd6-076acdabeff7)."}],"pos":[13020,13148],"yaml":true,"extradata":"MT"},{"content":"The last element of the controlled sequence.","nodes":[{"pos":[0,44],"content":"The last element of the controlled sequence.","nodes":[{"content":"The last element of the controlled sequence.","pos":[0,44]}]}],"pos":[13259,13304],"yaml":true},{"content":"Designates the beginning of the controlled sequence.","nodes":[{"pos":[0,52],"content":"Designates the beginning of the controlled sequence.","nodes":[{"content":"Designates the beginning of the controlled sequence.","pos":[0,52]}]}],"pos":[14546,14599],"yaml":true},{"content":"For more information, see [deque::begin (STL/CLR)](http://msdn.microsoft.com/library/e99d20d2-bb33-415f-9bd6-fe331d8c2ba2).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::begin (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/e99d20d2-bb33-415f-9bd6-fe331d8c2ba2)</ept>.","source":"For more information, see [deque::begin (STL/CLR)](http://msdn.microsoft.com/library/e99d20d2-bb33-415f-9bd6-fe331d8c2ba2)."}],"pos":[14610,14734],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[15141,15154],"yaml":true},{"content":"Gets the bias of the beginning of the current sequence. The bias is the offset of the current element zero.","nodes":[{"pos":[0,107],"content":"Gets the bias of the beginning of the current sequence. The bias is the offset of the current element zero.","nodes":[{"content":"Gets the bias of the beginning of the current sequence. The bias is the offset of the current element zero.","pos":[0,107],"nodes":[{"content":"Gets the bias of the beginning of the current sequence.","pos":[0,55]},{"content":"The bias is the offset of the current element zero.","pos":[56,107]}]}]}],"pos":[16104,16212],"yaml":true},{"content":"The bias of the beginning of the current sequence.","nodes":[{"pos":[0,50],"content":"The bias of the beginning of the current sequence.","nodes":[{"content":"The bias of the beginning of the current sequence.","pos":[0,50]}]}],"pos":[16336,16387],"yaml":true},{"content":"Removes all elements in the container.","nodes":[{"pos":[0,38],"content":"Removes all elements in the container.","nodes":[{"content":"Removes all elements in the container.","pos":[0,38]}]}],"pos":[17312,17351],"yaml":true},{"content":"For more information, see [deque::clear (STL/CLR)](http://msdn.microsoft.com/library/1d9a3d11-b3fa-43a7-a508-7a05cbcd91bf).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::clear (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/1d9a3d11-b3fa-43a7-a508-7a05cbcd91bf)</ept>.","source":"For more information, see [deque::clear (STL/CLR)](http://msdn.microsoft.com/library/1d9a3d11-b3fa-43a7-a508-7a05cbcd91bf)."}],"pos":[17362,17486],"yaml":true,"extradata":"MT"},{"content":"Tests whether the container holds no elements.","nodes":[{"pos":[0,46],"content":"Tests whether the container holds no elements.","nodes":[{"content":"Tests whether the container holds no elements.","pos":[0,46]}]}],"pos":[18470,18517],"yaml":true},{"content":"For more information, see [deque::empty (STL/CLR)](http://msdn.microsoft.com/library/6ff3dd07-ebdf-47f9-b0d2-8a3229390d3b).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::empty (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/6ff3dd07-ebdf-47f9-b0d2-8a3229390d3b)</ept>.","source":"For more information, see [deque::empty (STL/CLR)](http://msdn.microsoft.com/library/6ff3dd07-ebdf-47f9-b0d2-8a3229390d3b)."}],"pos":[18528,18652],"yaml":true,"extradata":"MT"},{"content":"`true` if the container is empty; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the container is empty; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the container is empty; otherwise, `false`."}],"pos":[18774,18830],"yaml":true},{"content":"Designates the end of the controlled sequence.","nodes":[{"pos":[0,46],"content":"Designates the end of the controlled sequence.","nodes":[{"content":"Designates the end of the controlled sequence.","pos":[0,46]}]}],"pos":[20056,20103],"yaml":true},{"content":"For more information, see [deque::end (STL/CLR)](http://msdn.microsoft.com/library/3de3e816-3334-4b39-97ad-6f8771e9b4e9).","nodes":[{"pos":[0,121],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::end (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/3de3e816-3334-4b39-97ad-6f8771e9b4e9)</ept>.","source":"For more information, see [deque::end (STL/CLR)](http://msdn.microsoft.com/library/3de3e816-3334-4b39-97ad-6f8771e9b4e9)."}],"pos":[20114,20236],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[20641,20654],"yaml":true},{"content":"Gets the bias of the end of the current sequence. The bias is the offset of the current element zero.","nodes":[{"pos":[0,101],"content":"Gets the bias of the end of the current sequence. The bias is the offset of the current element zero.","nodes":[{"content":"Gets the bias of the end of the current sequence. The bias is the offset of the current element zero.","pos":[0,101],"nodes":[{"content":"Gets the bias of the end of the current sequence.","pos":[0,49]},{"content":"The bias is the offset of the current element zero.","pos":[50,101]}]}]}],"pos":[21590,21692],"yaml":true},{"content":"The bias of the end of the current sequence.","nodes":[{"pos":[0,44],"content":"The bias of the end of the current sequence.","nodes":[{"content":"The bias of the end of the current sequence.","pos":[0,44]}]}],"pos":[21814,21859],"yaml":true},{"content":"Accesses the first element of the container.","nodes":[{"pos":[0,44],"content":"Accesses the first element of the container.","nodes":[{"content":"Accesses the first element of the container.","pos":[0,44]}]}],"pos":[27537,27582],"yaml":true},{"content":"For more information, see [deque::front (STL/CLR)](http://msdn.microsoft.com/library/eb8cb5f2-346d-4d7a-bb7b-cf67fe4318e8).","nodes":[{"pos":[0,123],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::front (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/eb8cb5f2-346d-4d7a-bb7b-cf67fe4318e8)</ept>.","source":"For more information, see [deque::front (STL/CLR)](http://msdn.microsoft.com/library/eb8cb5f2-346d-4d7a-bb7b-cf67fe4318e8)."}],"pos":[27593,27717],"yaml":true,"extradata":"MT"},{"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,70],"content":"The first element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The first element of the controlled sequence, which must be non-empty.","pos":[0,70]}]}],"pos":[27834,27905],"yaml":true},{"content":"Accesses the first element of a non-empty <code>deque</code> collection.","nodes":[{"pos":[0,72],"content":"Accesses the first element of a non-empty <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">deque</ph><ept id=\"p1\">&lt;/code&gt;</ept> collection.","source":"Accesses the first element of a non-empty <code>deque</code> collection."}],"pos":[28851,28924],"yaml":true},{"content":"For more information, see [deque::front_item (STL/CLR)](http://msdn.microsoft.com/library/6243e52d-47fb-45d8-ade8-70debd97887d).","nodes":[{"pos":[0,128],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::front_item (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/6243e52d-47fb-45d8-ade8-70debd97887d)</ept>.","source":"For more information, see [deque::front_item (STL/CLR)](http://msdn.microsoft.com/library/6243e52d-47fb-45d8-ade8-70debd97887d)."}],"pos":[28935,29064],"yaml":true,"extradata":"MT"},{"content":"The first element of the controlled sequence.","nodes":[{"pos":[0,45],"content":"The first element of the controlled sequence.","nodes":[{"content":"The first element of the controlled sequence.","pos":[0,45]}]}],"pos":[29176,29222],"yaml":true},{"content":"Gets or sets the element at the indicated position in the container.","nodes":[{"pos":[0,68],"content":"Gets or sets the element at the indicated position in the container.","nodes":[{"content":"Gets or sets the element at the indicated position in the container.","pos":[0,68]}]}],"pos":[38051,38120],"yaml":true},{"content":"For more information, see [deque::operator(STL/CLR)](http://msdn.microsoft.com/library/d7653bb5-db48-4637-a25c-e7303e5d28da).","nodes":[{"pos":[0,125],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::operator(STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/d7653bb5-db48-4637-a25c-e7303e5d28da)</ept>.","source":"For more information, see [deque::operator(STL/CLR)](http://msdn.microsoft.com/library/d7653bb5-db48-4637-a25c-e7303e5d28da)."}],"pos":[38131,38257],"yaml":true,"extradata":"MT"},{"content":"The position of the element to get or set.","nodes":[{"pos":[0,42],"content":"The position of the element to get or set.","nodes":[{"content":"The position of the element to get or set.","pos":[0,42]}]}],"pos":[38398,38441],"yaml":true},{"content":"The element at the indicated position.","nodes":[{"pos":[0,38],"content":"The element at the indicated position.","nodes":[{"content":"The element at the indicated position.","pos":[0,38]}]}],"pos":[38491,38530],"yaml":true},{"content":"Removes the last element of a non-empty container.","nodes":[{"pos":[0,50],"content":"Removes the last element of a non-empty container.","nodes":[{"content":"Removes the last element of a non-empty container.","pos":[0,50]}]}],"pos":[39467,39518],"yaml":true},{"content":"For more information, see [deque::pop_back (STL/CLR)](http://msdn.microsoft.com/library/528d2c89-104c-45f7-8f05-41fe217ee37c).","nodes":[{"pos":[0,126],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::pop_back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/528d2c89-104c-45f7-8f05-41fe217ee37c)</ept>.","source":"For more information, see [deque::pop_back (STL/CLR)](http://msdn.microsoft.com/library/528d2c89-104c-45f7-8f05-41fe217ee37c)."}],"pos":[39529,39656],"yaml":true,"extradata":"MT"},{"content":"Removes the first element of a non-empty container.","nodes":[{"pos":[0,51],"content":"Removes the first element of a non-empty container.","nodes":[{"content":"Removes the first element of a non-empty container.","pos":[0,51]}]}],"pos":[40670,40722],"yaml":true},{"content":"For more information, see [deque::pop_front (STL/CLR)](http://msdn.microsoft.com/library/5042df47-b226-4b16-982e-6a4543b8e00b).","nodes":[{"pos":[0,127],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::pop_front (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/5042df47-b226-4b16-982e-6a4543b8e00b)</ept>.","source":"For more information, see [deque::pop_front (STL/CLR)](http://msdn.microsoft.com/library/5042df47-b226-4b16-982e-6a4543b8e00b)."}],"pos":[40733,40861],"yaml":true,"extradata":"MT"},{"content":"Adds an element to the end of a container.","nodes":[{"pos":[0,42],"content":"Adds an element to the end of a container.","nodes":[{"content":"Adds an element to the end of a container.","pos":[0,42]}]}],"pos":[41907,41950],"yaml":true},{"content":"For more information, see [deque::push_back (STL/CLR)](http://msdn.microsoft.com/library/dafd5a4d-1fc7-434c-b129-a523099f8701).","nodes":[{"pos":[0,127],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::push_back (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/dafd5a4d-1fc7-434c-b129-a523099f8701)</ept>.","source":"For more information, see [deque::push_back (STL/CLR)](http://msdn.microsoft.com/library/dafd5a4d-1fc7-434c-b129-a523099f8701)."}],"pos":[41961,42089],"yaml":true,"extradata":"MT"},{"content":"The element to append to the end of the container.","nodes":[{"pos":[0,50],"content":"The element to append to the end of the container.","nodes":[{"content":"The element to append to the end of the container.","pos":[0,50]}]}],"pos":[42218,42269],"yaml":true},{"content":"Adds an element to the beginning of a container.","nodes":[{"pos":[0,48],"content":"Adds an element to the beginning of a container.","nodes":[{"content":"Adds an element to the beginning of a container.","pos":[0,48]}]}],"pos":[43253,43302],"yaml":true},{"content":"For more information, see [deque::push_front (STL/CLR)](http://msdn.microsoft.com/library/a452c94e-abad-4e28-af41-c73ec805ec6f).","nodes":[{"pos":[0,128],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::push_front (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/a452c94e-abad-4e28-af41-c73ec805ec6f)</ept>.","source":"For more information, see [deque::push_front (STL/CLR)](http://msdn.microsoft.com/library/a452c94e-abad-4e28-af41-c73ec805ec6f)."}],"pos":[43313,43442],"yaml":true,"extradata":"MT"},{"content":"The element to add to the beginning of the container.","nodes":[{"pos":[0,53],"content":"The element to add to the beginning of the container.","nodes":[{"content":"The element to add to the beginning of the container.","pos":[0,53]}]}],"pos":[43572,43626],"yaml":true},{"content":"Designates the beginning of the reversed controlled sequence.","nodes":[{"pos":[0,61],"content":"Designates the beginning of the reversed controlled sequence.","nodes":[{"content":"Designates the beginning of the reversed controlled sequence.","pos":[0,61]}]}],"pos":[44863,44925],"yaml":true},{"content":"For more information, see [deque::rbegin (STL/CLR)](http://msdn.microsoft.com/library/5d399c1d-bd7e-4b2e-bde0-11a000e29679).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::rbegin (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/5d399c1d-bd7e-4b2e-bde0-11a000e29679)</ept>.","source":"For more information, see [deque::rbegin (STL/CLR)](http://msdn.microsoft.com/library/5d399c1d-bd7e-4b2e-bde0-11a000e29679)."}],"pos":[44936,45061],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[45465,45478],"yaml":true},{"content":"Designates the end of the reversed controlled sequence.","nodes":[{"pos":[0,55],"content":"Designates the end of the reversed controlled sequence.","nodes":[{"content":"Designates the end of the reversed controlled sequence.","pos":[0,55]}]}],"pos":[46699,46755],"yaml":true},{"content":"For more information, see [deque::rend (STL/CLR)](http://msdn.microsoft.com/library/c2977998-3cf1-4c6f-9710-6cf6a3aae5e5).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::rend (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c2977998-3cf1-4c6f-9710-6cf6a3aae5e5)</ept>.","source":"For more information, see [deque::rend (STL/CLR)](http://msdn.microsoft.com/library/c2977998-3cf1-4c6f-9710-6cf6a3aae5e5)."}],"pos":[46766,46889],"yaml":true,"extradata":"MT"},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[47291,47304],"yaml":true},{"content":"Changes the number of elements.","nodes":[{"pos":[0,31],"content":"Changes the number of elements.","nodes":[{"content":"Changes the number of elements.","pos":[0,31]}]}],"pos":[48286,48318],"yaml":true},{"content":"For more information, see [deque::resize (STL/CLR)](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::resize (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484)</ept>.","source":"For more information, see [deque::resize (STL/CLR)](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484)."}],"pos":[48329,48454],"yaml":true,"extradata":"MT"},{"content":"The new size of the controlled sequence.","nodes":[{"pos":[0,40],"content":"The new size of the controlled sequence.","nodes":[{"content":"The new size of the controlled sequence.","pos":[0,40]}]}],"pos":[48591,48632],"yaml":true},{"content":"Changes the number of elements.","nodes":[{"pos":[0,31],"content":"Changes the number of elements.","nodes":[{"content":"Changes the number of elements.","pos":[0,31]}]}],"pos":[49649,49681],"yaml":true},{"content":"For more information, see [deque::resize (STL/CLR)](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484).","nodes":[{"pos":[0,124],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::resize (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484)</ept>.","source":"For more information, see [deque::resize (STL/CLR)](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484)."}],"pos":[49692,49817],"yaml":true,"extradata":"MT"},{"content":"The new size of the controlled sequence.","nodes":[{"pos":[0,40],"content":"The new size of the controlled sequence.","nodes":[{"content":"The new size of the controlled sequence.","pos":[0,40]}]}],"pos":[49967,50008],"yaml":true},{"content":"The value of the padding element.","nodes":[{"pos":[0,33],"content":"The value of the padding element.","nodes":[{"content":"The value of the padding element.","pos":[0,33]}]}],"pos":[50061,50095],"yaml":true},{"content":"Counts the number of elements.","nodes":[{"pos":[0,30],"content":"Counts the number of elements.","nodes":[{"content":"Counts the number of elements.","pos":[0,30]}]}],"pos":[51010,51041],"yaml":true},{"content":"For more information, see [deque::size (STL/CLR)](http://msdn.microsoft.com/library/81db82c1-7fe7-4eb4-8785-6d36197e4681).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::size (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/81db82c1-7fe7-4eb4-8785-6d36197e4681)</ept>.","source":"For more information, see [deque::size (STL/CLR)](http://msdn.microsoft.com/library/81db82c1-7fe7-4eb4-8785-6d36197e4681)."}],"pos":[51052,51175],"yaml":true,"extradata":"MT"},{"content":"The length of the controlled sequence.","nodes":[{"pos":[0,38],"content":"The length of the controlled sequence.","nodes":[{"content":"The length of the controlled sequence.","pos":[0,38]}]}],"pos":[51293,51332],"yaml":true},{"content":"Swaps the contents of two containers.","nodes":[{"pos":[0,37],"content":"Swaps the contents of two containers.","nodes":[{"content":"Swaps the contents of two containers.","pos":[0,37]}]}],"pos":[52398,52436],"yaml":true},{"content":"For more information, see [deque::swap (STL/CLR)](http://msdn.microsoft.com/library/511e1aa8-3069-43f3-aa77-150f1de1e195).","nodes":[{"pos":[0,122],"content":"For more information, see <bpt id=\"p1\">[</bpt>deque::swap (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/511e1aa8-3069-43f3-aa77-150f1de1e195)</ept>.","source":"For more information, see [deque::swap (STL/CLR)](http://msdn.microsoft.com/library/511e1aa8-3069-43f3-aa77-150f1de1e195)."}],"pos":[52447,52570],"yaml":true,"extradata":"MT"},{"content":"Container to swap contents with.","nodes":[{"pos":[0,32],"content":"Container to swap contents with.","nodes":[{"content":"Container to swap contents with.","pos":[0,32]}]}],"pos":[52752,52785],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IDeque`1\n  commentId: T:Microsoft.VisualC.StlClr.IDeque`1\n  id: IDeque`1\n  children:\n  - Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)\n  - Microsoft.VisualC.StlClr.IDeque`1.back\n  - Microsoft.VisualC.StlClr.IDeque`1.back_item\n  - Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IDeque`1.begin_bias\n  - Microsoft.VisualC.StlClr.IDeque`1.clear\n  - Microsoft.VisualC.StlClr.IDeque`1.empty\n  - Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IDeque`1.end_bias\n  - Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.IDeque`1.front\n  - Microsoft.VisualC.StlClr.IDeque`1.front_item\n  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.IDeque`1.pop_back\n  - Microsoft.VisualC.StlClr.IDeque`1.pop_front\n  - Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  - Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)\n  - Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.size\n  - Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})\n  langs:\n  - csharp\n  name: IDeque<TValue>\n  nameWithType: IDeque<TValue>\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>\n  type: Interface\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Defines the interface of an STL/CLR <code>deque</code> object.\n  remarks: \"[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  \\n  \\n For more information, see [deque (STL/CLR)](http://msdn.microsoft.com/library/dd669da3-3c0e-45e9-8596-f6b483720941).\"\n  syntax:\n    content: 'public interface IDeque<TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>, System.Collections.ICollection'\n    typeParameters:\n    - id: TValue\n      description: The type that is contained.\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{TValue}\n  - System.Collections.ICollection\n  - System.ICloneable\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)\n  id: assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: assign(IEnumerable)\n  nameWithType: IDeque<TValue>.assign(IEnumerable)\n  fullName: IDeque<TValue>.assign(IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces all elements of the container with the elements in the given <xref href=\"System.Collections.IEnumerable\"></xref> object.\n  remarks: For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).\n  syntax:\n    content: public void assign (System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: The enumeration to insert into the container.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IDeque<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IDeque<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces all elements of the container with the elements specified by the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> objects.\n  remarks: For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The starting position of the range to insert into the container.\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The first position beyond the end of the range to insert into the container.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)\n  id: assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: assign(Int32, TValue)\n  nameWithType: IDeque<TValue>.assign(Int32, TValue)\n  fullName: IDeque<TValue>.assign(Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces all elements of the container with the given number of specified elements.\n  remarks: For more information, see [deque::assign (STL/CLR)](http://msdn.microsoft.com/library/03fafdbb-6b10-4464-b3dc-0cc5cb8ac980).\n  syntax:\n    content: public void assign (int _Count, TValue _Val);\n    parameters:\n    - id: _Count\n      type: System.Int32\n      description: The number of elements to insert into the container.\n    - id: _Val\n      type: TValue\n      description: The value of the element to insert into the container.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)\n  id: at(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: at(Int32)\n  nameWithType: IDeque<TValue>.at(Int32)\n  fullName: IDeque<TValue>.at(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses an element at a specified position in the container.\n  remarks: For more information, see [deque::at (STL/CLR)](http://msdn.microsoft.com/library/9af83d8a-c519-4b2a-a25f-d3dc8bbb87fb).\n  syntax:\n    content: public TValue at (int _Pos);\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: Position of element to access.\n    return:\n      type: TValue@\n      description: The element of the controlled sequence at position <code>pos</code>.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.at*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.back\n  id: back\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: back()\n  nameWithType: IDeque<TValue>.back()\n  fullName: IDeque<TValue>.back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the last element of the container.\n  remarks: For more information, see [deque::back (STL/CLR)](http://msdn.microsoft.com/library/5608cdda-212d-42f6-866b-b04aec04ef8e).\n  syntax:\n    content: public TValue back ();\n    parameters: []\n    return:\n      type: TValue@\n      description: The last element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back_item\n  commentId: P:Microsoft.VisualC.StlClr.IDeque`1.back_item\n  id: back_item\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: back_item\n  nameWithType: IDeque<TValue>.back_item\n  fullName: IDeque<TValue>.back_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the last element of a non-empty <code>deque</code> collection.\n  remarks: For more information, see [deque::back_item (STL/CLR)](http://msdn.microsoft.com/library/b112636a-2f18-4eb0-abd6-076acdabeff7).\n  syntax:\n    content: public TValue back_item { get; set; }\n    return:\n      type: TValue\n      description: The last element of the controlled sequence.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.back_item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: begin(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  fullName: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the beginning of the controlled sequence.\n  remarks: For more information, see [deque::begin (STL/CLR)](http://msdn.microsoft.com/library/e99d20d2-bb33-415f-9bd6-fe331d8c2ba2).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.begin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin_bias\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias\n  id: begin_bias\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: begin_bias()\n  nameWithType: IDeque<TValue>.begin_bias()\n  fullName: IDeque<TValue>.begin_bias()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Gets the bias of the beginning of the current sequence. The bias is the offset of the current element zero.\n  syntax:\n    content: public int begin_bias ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The bias of the beginning of the current sequence.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.begin_bias*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.clear\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.clear\n  id: clear\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: clear()\n  nameWithType: IDeque<TValue>.clear()\n  fullName: IDeque<TValue>.clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes all elements in the container.\n  remarks: For more information, see [deque::clear (STL/CLR)](http://msdn.microsoft.com/library/1d9a3d11-b3fa-43a7-a508-7a05cbcd91bf).\n  syntax:\n    content: public void clear ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IDeque`1.clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.empty\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IDeque<TValue>.empty()\n  fullName: IDeque<TValue>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Tests whether the container holds no elements.\n  remarks: For more information, see [deque::empty (STL/CLR)](http://msdn.microsoft.com/library/6ff3dd07-ebdf-47f9-b0d2-8a3229390d3b).\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the container is empty; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.IDeque`1.empty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  id: end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: end(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  fullName: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the end of the controlled sequence.\n  remarks: For more information, see [deque::end (STL/CLR)](http://msdn.microsoft.com/library/3de3e816-3334-4b39-97ad-6f8771e9b4e9).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.end*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end_bias\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.end_bias\n  id: end_bias\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: end_bias()\n  nameWithType: IDeque<TValue>.end_bias()\n  fullName: IDeque<TValue>.end_bias()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Gets the bias of the end of the current sequence. The bias is the offset of the current element zero.\n  syntax:\n    content: public int end_bias ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The bias of the end of the current sequence.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.end_bias*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  fullName: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IDeque`1.erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  fullName: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Last_iter);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    - id: _First_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _Last_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IDeque`1.erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.front\n  id: front\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: front()\n  nameWithType: IDeque<TValue>.front()\n  fullName: IDeque<TValue>.front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the first element of the container.\n  remarks: For more information, see [deque::front (STL/CLR)](http://msdn.microsoft.com/library/eb8cb5f2-346d-4d7a-bb7b-cf67fe4318e8).\n  syntax:\n    content: public TValue front ();\n    parameters: []\n    return:\n      type: TValue@\n      description: The first element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.front*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front_item\n  commentId: P:Microsoft.VisualC.StlClr.IDeque`1.front_item\n  id: front_item\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: front_item\n  nameWithType: IDeque<TValue>.front_item\n  fullName: IDeque<TValue>.front_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the first element of a non-empty <code>deque</code> collection.\n  remarks: For more information, see [deque::front_item (STL/CLR)](http://msdn.microsoft.com/library/6243e52d-47fb-45d8-ade8-70debd97887d).\n  syntax:\n    content: public TValue front_item { get; set; }\n    return:\n      type: TValue\n      description: The first element of the controlled sequence.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.front_item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator, IEnumerable)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)\n  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where_iter, System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Where_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: ''\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator, Int32, TValue)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)\n  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, int _Count, TValue _Val);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _Count\n      type: System.Int32\n      description: ''\n    - id: _Val\n      type: TValue\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: ''\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: ''\n    - id: _Val\n      type: TValue\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: ''\n  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)\n  commentId: P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: IDeque<TValue>.Item(Int32)\n  fullName: IDeque<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Gets or sets the element at the indicated position in the container.\n  remarks: For more information, see [deque::operator(STL/CLR)](http://msdn.microsoft.com/library/d7653bb5-db48-4637-a25c-e7303e5d28da).\n  syntax:\n    content: public TValue this[int _Pos] { get; set; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: The position of the element to get or set.\n    return:\n      type: TValue\n      description: The element at the indicated position.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_back\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.pop_back\n  id: pop_back\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: pop_back()\n  nameWithType: IDeque<TValue>.pop_back()\n  fullName: IDeque<TValue>.pop_back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes the last element of a non-empty container.\n  remarks: For more information, see [deque::pop_back (STL/CLR)](http://msdn.microsoft.com/library/528d2c89-104c-45f7-8f05-41fe217ee37c).\n  syntax:\n    content: public void pop_back ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IDeque`1.pop_back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_front\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.pop_front\n  id: pop_front\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: pop_front()\n  nameWithType: IDeque<TValue>.pop_front()\n  fullName: IDeque<TValue>.pop_front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes the first element of a non-empty container.\n  remarks: For more information, see [deque::pop_front (STL/CLR)](http://msdn.microsoft.com/library/5042df47-b226-4b16-982e-6a4543b8e00b).\n  syntax:\n    content: public void pop_front ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IDeque`1.pop_front*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)\n  id: push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: push_back(TValue)\n  nameWithType: IDeque<TValue>.push_back(TValue)\n  fullName: IDeque<TValue>.push_back(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Adds an element to the end of a container.\n  remarks: For more information, see [deque::push_back (STL/CLR)](http://msdn.microsoft.com/library/dafd5a4d-1fc7-434c-b129-a523099f8701).\n  syntax:\n    content: public void push_back (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: The element to append to the end of the container.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.push_back*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)\n  id: push_front(`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: push_front(TValue)\n  nameWithType: IDeque<TValue>.push_front(TValue)\n  fullName: IDeque<TValue>.push_front(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Adds an element to the beginning of a container.\n  remarks: For more information, see [deque::push_front (STL/CLR)](http://msdn.microsoft.com/library/a452c94e-abad-4e28-af41-c73ec805ec6f).\n  syntax:\n    content: public void push_front (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: The element to add to the beginning of the container.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.push_front*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: rbegin(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  fullName: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the beginning of the reversed controlled sequence.\n  remarks: For more information, see [deque::rbegin (STL/CLR)](http://msdn.microsoft.com/library/5d399c1d-bd7e-4b2e-bde0-11a000e29679).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.rbegin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: rend(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  fullName: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Designates the end of the reversed controlled sequence.\n  remarks: For more information, see [deque::rend (STL/CLR)](http://msdn.microsoft.com/library/c2977998-3cf1-4c6f-9710-6cf6a3aae5e5).\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.rend*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)\n  id: resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: resize(Int32)\n  nameWithType: IDeque<TValue>.resize(Int32)\n  fullName: IDeque<TValue>.resize(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Changes the number of elements.\n  remarks: For more information, see [deque::resize (STL/CLR)](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484).\n  syntax:\n    content: public void resize (int _Newsize);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: The new size of the controlled sequence.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.resize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)\n  id: resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: resize(Int32, TValue)\n  nameWithType: IDeque<TValue>.resize(Int32, TValue)\n  fullName: IDeque<TValue>.resize(Int32, TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Changes the number of elements.\n  remarks: For more information, see [deque::resize (STL/CLR)](http://msdn.microsoft.com/library/c83f3c57-38b3-4706-a124-59bafbf88484).\n  syntax:\n    content: public void resize (int _Newsize, TValue _Val);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: The new size of the controlled sequence.\n    - id: _Val\n      type: TValue\n      description: The value of the padding element.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.resize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.size\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IDeque<TValue>.size()\n  fullName: IDeque<TValue>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Counts the number of elements.\n  remarks: For more information, see [deque::size (STL/CLR)](http://msdn.microsoft.com/library/81db82c1-7fe7-4eb4-8785-6d36197e4681).\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The length of the controlled sequence.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.size*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})\n  commentId: M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})\n  id: swap(Microsoft.VisualC.StlClr.IDeque{`0})\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: swap(IDeque<TValue>)\n  nameWithType: IDeque<TValue>.swap(IDeque<TValue>)\n  fullName: IDeque<TValue>.swap(IDeque<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Swaps the contents of two containers.\n  remarks: For more information, see [deque::swap (STL/CLR)](http://msdn.microsoft.com/library/511e1aa8-3069-43f3-aa77-150f1de1e195).\n  syntax:\n    content: public void swap (Microsoft.VisualC.StlClr.IDeque<TValue> A_0);\n    parameters:\n    - id: A_0\n      type: Microsoft.VisualC.StlClr.IDeque`1\n      description: Container to swap contents with.\n  overload: Microsoft.VisualC.StlClr.IDeque`1.swap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: assign(IEnumerable)\n  nameWithType: IDeque<TValue>.assign(IEnumerable)\n  fullName: IDeque<TValue>.assign(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IDeque<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IDeque<TValue>.assign(IInputIterator<TValue>, IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: assign(Int32, TValue)\n  nameWithType: IDeque<TValue>.assign(Int32, TValue)\n  fullName: IDeque<TValue>.assign(Int32, TValue)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: at(Int32)\n  nameWithType: IDeque<TValue>.at(Int32)\n  fullName: IDeque<TValue>.at(Int32)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: back()\n  nameWithType: IDeque<TValue>.back()\n  fullName: IDeque<TValue>.back()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back_item\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: back_item\n  nameWithType: IDeque<TValue>.back_item\n  fullName: IDeque<TValue>.back_item\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: begin(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  fullName: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin_bias\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: begin_bias()\n  nameWithType: IDeque<TValue>.begin_bias()\n  fullName: IDeque<TValue>.begin_bias()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.clear\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: clear()\n  nameWithType: IDeque<TValue>.clear()\n  fullName: IDeque<TValue>.clear()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.empty\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: empty()\n  nameWithType: IDeque<TValue>.empty()\n  fullName: IDeque<TValue>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: end(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  fullName: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end_bias\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: end_bias()\n  nameWithType: IDeque<TValue>.end_bias()\n  fullName: IDeque<TValue>.end_bias()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n  fullName: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n  fullName: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: front()\n  nameWithType: IDeque<TValue>.front()\n  fullName: IDeque<TValue>.front()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front_item\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: front_item\n  nameWithType: IDeque<TValue>.front_item\n  fullName: IDeque<TValue>.front_item\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator, IEnumerable)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)\n  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, IEnumerable)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, IInputIterator<TValue>, IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator, Int32, TValue)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)\n  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator, Int32, TValue)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n  fullName: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>, ContainerRandomAccessIterator, TValue)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: IDeque<TValue>.Item(Int32)\n  fullName: IDeque<TValue>.Item(Int32)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_back\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: pop_back()\n  nameWithType: IDeque<TValue>.pop_back()\n  fullName: IDeque<TValue>.pop_back()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_front\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: pop_front()\n  nameWithType: IDeque<TValue>.pop_front()\n  fullName: IDeque<TValue>.pop_front()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: push_back(TValue)\n  nameWithType: IDeque<TValue>.push_back(TValue)\n  fullName: IDeque<TValue>.push_back(TValue)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: push_front(TValue)\n  nameWithType: IDeque<TValue>.push_front(TValue)\n  fullName: IDeque<TValue>.push_front(TValue)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: rbegin(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  fullName: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseRandomAccessIterator<TValue>\n  nameWithType: ReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: rend(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  fullName: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: resize(Int32)\n  nameWithType: IDeque<TValue>.resize(Int32)\n  fullName: IDeque<TValue>.resize(Int32)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: resize(Int32, TValue)\n  nameWithType: IDeque<TValue>.resize(Int32, TValue)\n  fullName: IDeque<TValue>.resize(Int32, TValue)\n- uid: Microsoft.VisualC.StlClr.IDeque`1.size\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: size()\n  nameWithType: IDeque<TValue>.size()\n  fullName: IDeque<TValue>.size()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: swap(IDeque<TValue>)\n  nameWithType: IDeque<TValue>.swap(IDeque<TValue>)\n  fullName: IDeque<TValue>.swap(IDeque<TValue>)\n- uid: Microsoft.VisualC.StlClr.IDeque`1\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IDeque<TValue>\n  nameWithType: IDeque<TValue>\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: assign\n  nameWithType: IDeque<TValue>.assign\n  fullName: IDeque<TValue>.assign\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: erase\n  nameWithType: IDeque<TValue>.erase\n  fullName: IDeque<TValue>.erase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert\n  nameWithType: IDeque<TValue>.insert\n  fullName: IDeque<TValue>.insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: resize\n  nameWithType: IDeque<TValue>.resize\n  fullName: IDeque<TValue>.resize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.at*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: at\n  nameWithType: IDeque<TValue>.at\n  fullName: IDeque<TValue>.at\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: back\n  nameWithType: IDeque<TValue>.back\n  fullName: IDeque<TValue>.back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back_item*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: back_item\n  nameWithType: IDeque<TValue>.back_item\n  fullName: IDeque<TValue>.back_item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: begin\n  nameWithType: IDeque<TValue>.begin\n  fullName: IDeque<TValue>.begin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin_bias*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: begin_bias\n  nameWithType: IDeque<TValue>.begin_bias\n  fullName: IDeque<TValue>.begin_bias\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.clear*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: clear\n  nameWithType: IDeque<TValue>.clear\n  fullName: IDeque<TValue>.clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.empty*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: empty\n  nameWithType: IDeque<TValue>.empty\n  fullName: IDeque<TValue>.empty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: end\n  nameWithType: IDeque<TValue>.end\n  fullName: IDeque<TValue>.end\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end_bias*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: end_bias\n  nameWithType: IDeque<TValue>.end_bias\n  fullName: IDeque<TValue>.end_bias\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: front\n  nameWithType: IDeque<TValue>.front\n  fullName: IDeque<TValue>.front\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front_item*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: front_item\n  nameWithType: IDeque<TValue>.front_item\n  fullName: IDeque<TValue>.front_item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.Item*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: Item\n  nameWithType: IDeque<TValue>.Item\n  fullName: IDeque<TValue>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_back*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: pop_back\n  nameWithType: IDeque<TValue>.pop_back\n  fullName: IDeque<TValue>.pop_back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_front*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: pop_front\n  nameWithType: IDeque<TValue>.pop_front\n  fullName: IDeque<TValue>.pop_front\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_back*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: push_back\n  nameWithType: IDeque<TValue>.push_back\n  fullName: IDeque<TValue>.push_back\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_front*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: push_front\n  nameWithType: IDeque<TValue>.push_front\n  fullName: IDeque<TValue>.push_front\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rbegin*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: rbegin\n  nameWithType: IDeque<TValue>.rbegin\n  fullName: IDeque<TValue>.rbegin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rend*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: rend\n  nameWithType: IDeque<TValue>.rend\n  fullName: IDeque<TValue>.rend\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.size*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: size\n  nameWithType: IDeque<TValue>.size\n  fullName: IDeque<TValue>.size\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: Microsoft.VisualC.StlClr.IDeque`1.swap*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: swap\n  nameWithType: IDeque<TValue>.swap\n  fullName: IDeque<TValue>.swap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IDeque`1.xml\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessContainer<TValue>\n  nameWithType: IRandomAccessContainer<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}