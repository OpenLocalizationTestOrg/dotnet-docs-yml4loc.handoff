{"nodes":[{"content":"Specifies the values available to indicate the support for reliable sessions that a contract requires or supports.","nodes":[{"pos":[0,114],"content":"Specifies the values available to indicate the support for reliable sessions that a contract requires or supports.","nodes":[{"content":"Specifies the values available to indicate the support for reliable sessions that a contract requires or supports.","pos":[0,114]}]}],"pos":[495,610],"yaml":true},{"content":"Use the <xref:System.ServiceModel.SessionMode> enumeration with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property to require, allow, or prohibit bindings to use sessions between endpoints that connect to or support the service contract. A session is a way of correlating a set of messages exchanged between two or more endpoints. For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).  \n  \n If your service supports sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property to specify the relationship between instances of your service contract implementation and the channel session.  \n  \n For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to Allowed and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName>, a client can use a binding that supports reliable sessions to make repeated calls to the same service object.  \n  \n Because a session is a channel-level concept that the application model uses, there is an interaction between the <xref:System.ServiceModel.SessionMode> enumeration in a contract and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property, which controls the association between channels and specific service objects.  \n  \n The following table shows the result of an incoming channel either supporting reliable sessions or not supporting reliable sessions given a service's combination of the values of the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property.  \n  \n|InstanceContextMode Value|Required|Allowed|NotAllowed|  \n|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|  \n|PerCall|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|  \n|PerSession|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|  \n|Single|-   Behavior with sessionful channel: One session and one <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for all calls.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.|","nodes":[{"pos":[0,483],"content":"Use the <xref:System.ServiceModel.SessionMode> enumeration with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property to require, allow, or prohibit bindings to use sessions between endpoints that connect to or support the service contract. A session is a way of correlating a set of messages exchanged between two or more endpoints. For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.SessionMode&gt;</ph> enumeration with the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName&gt;</ph> property to require, allow, or prohibit bindings to use sessions between endpoints that connect to or support the service contract.","pos":[0,291],"source":"Use the <xref:System.ServiceModel.SessionMode> enumeration with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property to require, allow, or prohibit bindings to use sessions between endpoints that connect to or support the service contract."},{"content":"A session is a way of correlating a set of messages exchanged between two or more endpoints.","pos":[292,384]},{"content":"For more information about sessions, see <bpt id=\"p1\">[</bpt>Using Sessions<ept id=\"p1\">](~/docs/framework/wcf/using-sessions.md)</ept>.","pos":[385,483],"source":" For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md)."}]},{"pos":[490,765],"content":"If your service supports sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property to specify the relationship between instances of your service contract implementation and the channel session.","nodes":[{"content":"If your service supports sessions, you can then use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName&gt;</ph> property to specify the relationship between instances of your service contract implementation and the channel session.","pos":[0,275],"source":"If your service supports sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property to specify the relationship between instances of your service contract implementation and the channel session."}]},{"pos":[772,1195],"content":"For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to Allowed and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName>, a client can use a binding that supports reliable sessions to make repeated calls to the same service object.","nodes":[{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property is set to Allowed and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName&gt;</ph> property is set to <ph id=\"ph3\">&lt;xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName&gt;</ph>, a client can use a binding that supports reliable sessions to make repeated calls to the same service object.","pos":[0,423],"source":"For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to Allowed and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName>, a client can use a binding that supports reliable sessions to make repeated calls to the same service object."}]},{"pos":[1202,1576],"content":"Because a session is a channel-level concept that the application model uses, there is an interaction between the <xref:System.ServiceModel.SessionMode> enumeration in a contract and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property, which controls the association between channels and specific service objects.","nodes":[{"content":"Because a session is a channel-level concept that the application model uses, there is an interaction between the <ph id=\"ph1\">&lt;xref:System.ServiceModel.SessionMode&gt;</ph> enumeration in a contract and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName&gt;</ph> property, which controls the association between channels and specific service objects.","pos":[0,374],"source":"Because a session is a channel-level concept that the application model uses, there is an interaction between the <xref:System.ServiceModel.SessionMode> enumeration in a contract and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property, which controls the association between channels and specific service objects."}]},{"pos":[1583,1984],"content":"The following table shows the result of an incoming channel either supporting reliable sessions or not supporting reliable sessions given a service's combination of the values of the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property.","nodes":[{"content":"The following table shows the result of an incoming channel either supporting reliable sessions or not supporting reliable sessions given a service's combination of the values of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,401],"source":"The following table shows the result of an incoming channel either supporting reliable sessions or not supporting reliable sessions given a service's combination of the values of the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property."}]},{"pos":[1991,2016],"content":"InstanceContextMode Value","nodes":[{"content":"InstanceContextMode Value","pos":[0,25]}]},{"pos":[2017,2025],"content":"Required","nodes":[{"content":"Required","pos":[0,8]}]},{"pos":[2026,2033],"content":"Allowed","nodes":[{"content":"Allowed","pos":[0,7]}]},{"pos":[2034,2044],"content":"NotAllowed","nodes":[{"content":"NotAllowed","pos":[0,10]}]},{"pos":[2542,2549],"content":"PerCall","nodes":[{"content":"PerCall","pos":[0,7]}]},{"pos":[2550,2752],"content":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An exception is thrown.","nodes":[{"content":"-   Behavior with sessionful channel: A session and <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each call.","pos":[0,134],"source":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call."},{"content":"-   Behavior with sessionless channel: An exception is thrown.","pos":[140,202]}]},{"pos":[2753,3017],"content":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.","nodes":[{"content":"-   Behavior with sessionful channel: A session and <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each call.","pos":[0,134],"source":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call."},{"content":"-   Behavior with sessionless channel: An <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each call.","pos":[140,264],"source":"-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call."}]},{"pos":[3018,3209],"content":"-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.","nodes":[{"content":"-   Behavior with sessionful channel: An exception is thrown.","pos":[0,61]},{"content":"-   Behavior with sessionless channel: An <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each call.","pos":[67,191],"source":"-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call."}]},{"pos":[3214,3224],"content":"PerSession","nodes":[{"content":"PerSession","pos":[0,10]}]},{"pos":[3225,3430],"content":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An exception is thrown.","nodes":[{"content":"-   Behavior with sessionful channel: A session and <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each channel.","pos":[0,137],"source":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel."},{"content":"-   Behavior with sessionless channel: An exception is thrown.","pos":[143,205]}]},{"pos":[3431,3698],"content":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.","nodes":[{"content":"-   Behavior with sessionful channel: A session and <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each channel.","pos":[0,137],"source":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel."},{"content":"-   Behavior with sessionless channel: An <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each call.","pos":[143,267],"source":"-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call."}]},{"pos":[3699,3890],"content":"-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.","nodes":[{"content":"-   Behavior with sessionful channel: An exception is thrown.","pos":[0,61]},{"content":"-   Behavior with sessionless channel: An <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each call.","pos":[67,191],"source":"-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call."}]},{"pos":[3895,3901],"content":"Single","nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[3902,4110],"content":"-   Behavior with sessionful channel: One session and one <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for all calls.<br />-   Behavior with sessionless channel: An exception is thrown.","nodes":[{"content":"-   Behavior with sessionful channel: One session and one <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for all calls.","pos":[0,140],"source":"-   Behavior with sessionful channel: One session and one <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for all calls."},{"content":"-   Behavior with sessionless channel: An exception is thrown.","pos":[146,208]}]},{"pos":[4111,4473],"content":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.","nodes":[{"content":"-   Behavior with sessionful channel: A session and <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each created singleton or for the user-specified singleton.","pos":[0,183],"source":"-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton."},{"content":"-   Behavior with sessionless channel: An <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each created singleton or for the user-specified singleton.","pos":[189,362],"source":"-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton."}]},{"pos":[4474,4714],"content":"-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.","nodes":[{"content":"-   Behavior with sessionful channel: An exception is thrown.","pos":[0,61]},{"content":"-   Behavior with sessionless channel: An <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> for each created singleton or for the user-specified singleton.","pos":[67,240],"source":"-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton."}]}],"pos":[621,5353],"yaml":true,"extradata":"MT"},{"content":"Specifies that the contract supports sessions if the incoming binding supports them.","nodes":[{"pos":[0,84],"content":"Specifies that the contract supports sessions if the incoming binding supports them.","nodes":[{"content":"Specifies that the contract supports sessions if the incoming binding supports them.","pos":[0,84]}]}],"pos":[6989,7074],"yaml":true},{"content":"Specifies that the contract never supports bindings that initiate sessions.","nodes":[{"pos":[0,75],"content":"Specifies that the contract never supports bindings that initiate sessions.","nodes":[{"content":"Specifies that the contract never supports bindings that initiate sessions.","pos":[0,75]}]}],"pos":[8135,8211],"yaml":true},{"content":"Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session.","nodes":[{"pos":[0,134],"content":"Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session.","nodes":[{"content":"Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session.","pos":[0,134],"nodes":[{"content":"Specifies that the contract requires a sessionful binding.","pos":[0,58]},{"content":"An exception is thrown if the binding is not configured to support session.","pos":[59,134]}]}]}],"pos":[9263,9398],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.SessionMode\n  commentId: T:System.ServiceModel.SessionMode\n  id: SessionMode\n  children:\n  - System.ServiceModel.SessionMode.Allowed\n  - System.ServiceModel.SessionMode.NotAllowed\n  - System.ServiceModel.SessionMode.Required\n  langs:\n  - csharp\n  name: SessionMode\n  nameWithType: SessionMode\n  fullName: System.ServiceModel.SessionMode\n  type: Enum\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies the values available to indicate the support for reliable sessions that a contract requires or supports.\n  remarks: \"Use the <xref:System.ServiceModel.SessionMode> enumeration with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property to require, allow, or prohibit bindings to use sessions between endpoints that connect to or support the service contract. A session is a way of correlating a set of messages exchanged between two or more endpoints. For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).  \\n  \\n If your service supports sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property to specify the relationship between instances of your service contract implementation and the channel session.  \\n  \\n For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to Allowed and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName>, a client can use a binding that supports reliable sessions to make repeated calls to the same service object.  \\n  \\n Because a session is a channel-level concept that the application model uses, there is an interaction between the <xref:System.ServiceModel.SessionMode> enumeration in a contract and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property, which controls the association between channels and specific service objects.  \\n  \\n The following table shows the result of an incoming channel either supporting reliable sessions or not supporting reliable sessions given a service's combination of the values of the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property.  \\n  \\n|InstanceContextMode Value|Required|Allowed|NotAllowed|  \\n|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|  \\n|PerCall|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|  \\n|PerSession|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|  \\n|Single|-   Behavior with sessionful channel: One session and one <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for all calls.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.|\"\n  example:\n  - \"The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A>property of the <xref:System.ServiceModel.ServiceContractAttribute> to specify that the `IMyService` service contract requires bindings that support session state.  \\n  \\n [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]\\n [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]\"\n  syntax:\n    content: public enum SessionMode\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/SessionMode.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.SessionMode.Allowed\n  commentId: F:System.ServiceModel.SessionMode.Allowed\n  id: Allowed\n  parent: System.ServiceModel.SessionMode\n  langs:\n  - csharp\n  name: Allowed\n  nameWithType: SessionMode.Allowed\n  fullName: SessionMode.Allowed\n  type: Field\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies that the contract supports sessions if the incoming binding supports them.\n  syntax:\n    content: Allowed\n    return:\n      type: System.ServiceModel.SessionMode\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/SessionMode.xml\n- uid: System.ServiceModel.SessionMode.NotAllowed\n  commentId: F:System.ServiceModel.SessionMode.NotAllowed\n  id: NotAllowed\n  parent: System.ServiceModel.SessionMode\n  langs:\n  - csharp\n  name: NotAllowed\n  nameWithType: SessionMode.NotAllowed\n  fullName: SessionMode.NotAllowed\n  type: Field\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies that the contract never supports bindings that initiate sessions.\n  syntax:\n    content: NotAllowed\n    return:\n      type: System.ServiceModel.SessionMode\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/SessionMode.xml\n- uid: System.ServiceModel.SessionMode.Required\n  commentId: F:System.ServiceModel.SessionMode.Required\n  id: Required\n  parent: System.ServiceModel.SessionMode\n  langs:\n  - csharp\n  name: Required\n  nameWithType: SessionMode.Required\n  fullName: SessionMode.Required\n  type: Field\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session.\n  syntax:\n    content: Required\n    return:\n      type: System.ServiceModel.SessionMode\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/SessionMode.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.ServiceModel.SessionMode.Allowed\n  parent: System.ServiceModel.SessionMode\n  isExternal: false\n  name: Allowed\n  nameWithType: SessionMode.Allowed\n  fullName: SessionMode.Allowed\n- uid: System.ServiceModel.SessionMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: SessionMode\n  nameWithType: SessionMode\n  fullName: System.ServiceModel.SessionMode\n- uid: System.ServiceModel.SessionMode.NotAllowed\n  parent: System.ServiceModel.SessionMode\n  isExternal: false\n  name: NotAllowed\n  nameWithType: SessionMode.NotAllowed\n  fullName: SessionMode.NotAllowed\n- uid: System.ServiceModel.SessionMode.Required\n  parent: System.ServiceModel.SessionMode\n  isExternal: false\n  name: Required\n  nameWithType: SessionMode.Required\n  fullName: SessionMode.Required\n"}