{"nodes":[{"content":"The abstract base class for an issuer name registry. An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer. The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.","nodes":[{"pos":[0,338],"content":"The abstract base class for an issuer name registry. An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer. The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.","nodes":[{"content":"The abstract base class for an issuer name registry. An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer. The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.","pos":[0,338],"nodes":[{"content":"The abstract base class for an issuer name registry.","pos":[0,52]},{"content":"An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.","pos":[53,231]},{"content":"The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.","pos":[232,338]}]}]}],"pos":[893,1232],"yaml":true},{"content":"The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer. This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim. The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token. Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted. The name returned by the issuer name registry should be unique within the context of an RP application.  \n  \n In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=fullName> property. In a configuration file, the issuer name registry can be specified by specifying the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [\\&lt;securityTokenHandlerConfiguration\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.  \n  \n Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class. When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that elementâ€™s `type` attribute. Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.  \n  \n To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. This method returns the issuer name for the specified security token. You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.","nodes":[{"pos":[0,709],"content":"The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer. This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim. The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token. Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted. The name returned by the issuer name registry should be unique within the context of an RP application.","nodes":[{"content":"The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer. This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim. The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token. Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted. The name returned by the issuer name registry should be unique within the context of an RP application.","pos":[0,709],"nodes":[{"content":"The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.","pos":[0,167]},{"content":"This name is then used to set the <ph id=\"ph1\">&lt;xref:System.Security.Claims.Claim.Issuer%2A&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.Security.Claims.Claim.OriginalIssuer%2A&gt;</ph> property of a claim.","pos":[168,329],"source":" This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim."},{"content":"The methods exposed by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry&gt;</ph> class are called from the pipeline by the security token handler that is processing the token.","pos":[330,505],"source":" The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token."},{"content":"Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.","pos":[506,605]},{"content":"The name returned by the issuer name registry should be unique within the context of an RP application.","pos":[606,709]}]}]},{"pos":[716,1307],"content":"In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=fullName> property. In a configuration file, the issuer name registry can be specified by specifying the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [\\&lt;securityTokenHandlerConfiguration\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.","nodes":[{"content":"In code, you can specify the issuer name registry to use by setting the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,197],"source":"In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=fullName> property."},{"content":"In a configuration file, the issuer name registry can be specified by specifying the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;issuerNameRegistry<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> element under the <bpt id=\"p2\">[</bpt><ph id=\"ph3\">\\&amp;</ph>lt;securityTokenHandlerConfiguration<ph id=\"ph4\">\\&amp;</ph>gt;<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)</ept> element.","pos":[198,591],"source":" In a configuration file, the issuer name registry can be specified by specifying the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [\\&lt;securityTokenHandlerConfiguration\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element."}]},{"pos":[1314,2137],"content":"Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class. When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that elementâ€™s `type` attribute. Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.","nodes":[{"content":"Windows Identity Foundation (WIF) provides an implementation of the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry&gt;</ph> class out of the box: the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry&gt;</ph> class.","pos":[0,226],"source":"Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class."},{"content":"When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;trustedIssuers<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md)</ept> element, which is a child element of the <ph id=\"ph3\">`&lt;issuerNameRegistry&gt;`</ph> element when the <ph id=\"ph4\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry&gt;</ph>.class is referenced in that elementâ€™s <ph id=\"ph5\">`type`</ph> attribute.","pos":[227,688],"source":" When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that elementâ€™s `type` attribute."},{"content":"Under the <ph id=\"ph1\">`&lt;trustedIssuers&gt;`</ph> element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.","pos":[689,823],"source":" Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature."}]},{"pos":[2144,3094],"content":"To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. This method returns the issuer name for the specified security token. You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.","nodes":[{"content":"To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. This method returns the issuer name for the specified security token. You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.","pos":[0,950],"nodes":[{"content":"To create a custom issuer name registry, you must override the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName&gt;</ph> method.","pos":[0,210],"source":"To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method."},{"content":"This method returns the issuer name for the specified security token.","pos":[211,280]},{"content":"You can optionally override the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName&gt;</ph> method to provide a hinting mechanism when retrieving issuer names and the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A&gt;</ph> method if you want to provide an issuer name for Windows tokens that is different from <ph id=\"ph3\">&lt;xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer&gt;</ph>.","pos":[281,768],"source":" You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>."},{"content":"Override the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A&gt;</ph> method to enable your issuer name registry to be initialized from a configuration file.","pos":[769,950],"source":" Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file."}]}]}],"pos":[1243,4352],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref> class."}],"pos":[6922,7031],"yaml":true},{"content":"When overridden in a derived class, returns the name of the issuer of the specified security token.","nodes":[{"pos":[0,99],"content":"When overridden in a derived class, returns the name of the issuer of the specified security token.","nodes":[{"content":"When overridden in a derived class, returns the name of the issuer of the specified security token.","pos":[0,99]}]}],"pos":[8392,8492],"yaml":true},{"content":"Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.  \n  \n Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","nodes":[{"pos":[0,147],"content":"Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.","nodes":[{"content":"Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.","pos":[0,147]}]},{"pos":[154,345],"content":"Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","nodes":[{"content":"Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","pos":[0,191],"nodes":[{"content":"Called from the processing pipeline by the security token handler that is processing the token.","pos":[0,95]},{"content":"The method should return a unique name for the issuer within the context of the RP application.","pos":[96,191]}]}]}],"pos":[8503,8853],"yaml":true,"extradata":"MT"},{"content":"The security token for which to return the issuer name.","nodes":[{"pos":[0,55],"content":"The security token for which to return the issuer name.","nodes":[{"content":"The security token for which to return the issuer name.","pos":[0,55]}]}],"pos":[9696,9752],"yaml":true},{"content":"The issuer name.","nodes":[{"pos":[0,16],"content":"The issuer name.","nodes":[{"content":"The issuer name.","pos":[0,16]}]}],"pos":[9809,9826],"yaml":true},{"content":"When overridden in a derived class, returns the name of the issuer of the specified security token. The specified issuer name may be considered in determining the issuer name to return.","nodes":[{"pos":[0,185],"content":"When overridden in a derived class, returns the name of the issuer of the specified security token. The specified issuer name may be considered in determining the issuer name to return.","nodes":[{"content":"When overridden in a derived class, returns the name of the issuer of the specified security token. The specified issuer name may be considered in determining the issuer name to return.","pos":[0,185],"nodes":[{"content":"When overridden in a derived class, returns the name of the issuer of the specified security token.","pos":[0,99]},{"content":"The specified issuer name may be considered in determining the issuer name to return.","pos":[100,185]}]}]}],"pos":[11186,11372],"yaml":true},{"content":"The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method.  \n  \n Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","nodes":[{"pos":[0,239],"content":"The default implementation ignores the <ph id=\"ph1\">`requestedIssuerName`</ph> parameter and simply calls the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName&gt;</ph> method.","source":"The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method."},{"pos":[246,437],"content":"Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","nodes":[{"content":"Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","pos":[0,191],"nodes":[{"content":"Called from the processing pipeline by the security token handler that is processing the token.","pos":[0,95]},{"content":"The method should return a unique name for the issuer within the context of the RP application.","pos":[96,191]}]}]}],"pos":[11383,11825],"yaml":true,"extradata":"MT"},{"content":"The security token for which to return the issuer name.","nodes":[{"pos":[0,55],"content":"The security token for which to return the issuer name.","nodes":[{"content":"The security token for which to return the issuer name.","pos":[0,55]}]}],"pos":[12084,12140],"yaml":true},{"content":"An issuer name to consider in the request.","nodes":[{"pos":[0,42],"content":"An issuer name to consider in the request.","nodes":[{"content":"An issuer name to consider in the request.","pos":[0,42]}]}],"pos":[12215,12258],"yaml":true},{"content":"The issuer name.","nodes":[{"pos":[0,16],"content":"The issuer name.","nodes":[{"content":"The issuer name.","pos":[0,16]}]}],"pos":[12315,12332],"yaml":true},{"content":"Returns the default issuer name to be used for Windows claims.","nodes":[{"pos":[0,62],"content":"Returns the default issuer name to be used for Windows claims.","nodes":[{"content":"Returns the default issuer name to be used for Windows claims.","pos":[0,62]}]}],"pos":[13500,13563],"yaml":true},{"content":"The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.  \n  \n Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","nodes":[{"pos":[0,94],"content":"The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.","nodes":[{"content":"The default implementation returns <ph id=\"ph1\">&lt;xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer&gt;</ph>.","pos":[0,94],"source":"The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>."}]},{"pos":[101,292],"content":"Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","nodes":[{"content":"Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.","pos":[0,191],"nodes":[{"content":"Called from the processing pipeline by the security token handler that is processing the token.","pos":[0,95]},{"content":"The method should return a unique name for the issuer within the context of the RP application.","pos":[96,191]}]}]}],"pos":[13574,13871],"yaml":true,"extradata":"MT"},{"content":"The default issuer name for Windows claims.","nodes":[{"pos":[0,43],"content":"The default issuer name for Windows claims.","nodes":[{"content":"The default issuer name for Windows claims.","pos":[0,43]}]}],"pos":[14017,14061],"yaml":true},{"content":"When overridden in a derived class, loads custom configuration from XML.","nodes":[{"pos":[0,72],"content":"When overridden in a derived class, loads custom configuration from XML.","nodes":[{"content":"When overridden in a derived class, loads custom configuration from XML.","pos":[0,72]}]}],"pos":[15359,15432],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  \n  \n The default implementation throws a <xref:System.NotImplementedException>. Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.","nodes":[{"pos":[0,531],"content":"The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.","pos":[0,138],"source":"The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure."},{"content":"When this method is called, the <ph id=\"ph1\">`nodelist`</ph> will contain the top-level child elements of the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;issuerNameRegistry<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> element from the configuration file.","pos":[139,393],"source":" When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file."},{"content":"Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.","pos":[394,531]}]},{"pos":[538,736],"content":"The default implementation throws a <xref:System.NotImplementedException>. Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.","nodes":[{"content":"The default implementation throws a <xref:System.NotImplementedException>. Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.","pos":[0,198],"nodes":[{"content":"The default implementation throws a <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph>.","pos":[0,74],"source":"The default implementation throws a <xref:System.NotImplementedException>."},{"content":"Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.","pos":[75,198]}]}]}],"pos":[15443,16186],"yaml":true,"extradata":"MT"},{"content":"The configuration XML elements. Each node in the list is of type <xref href=\"System.Xml.XmlElement\"></xref>.","nodes":[{"pos":[0,108],"content":"The configuration XML elements. Each node in the list is of type <xref href=\"System.Xml.XmlElement\"></xref>.","nodes":[{"content":"The configuration XML elements.","pos":[0,31]},{"content":"Each node in the list is of type <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph>.","pos":[32,108],"source":" Each node in the list is of type <xref href=\"System.Xml.XmlElement\"></xref>."}]}],"pos":[16377,16486],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry\n  commentId: T:System.IdentityModel.Tokens.IssuerNameRegistry\n  id: IssuerNameRegistry\n  children:\n  - System.IdentityModel.Tokens.IssuerNameRegistry.#ctor\n  - System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName\n  - System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  langs:\n  - csharp\n  name: IssuerNameRegistry\n  nameWithType: IssuerNameRegistry\n  fullName: System.IdentityModel.Tokens.IssuerNameRegistry\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: The abstract base class for an issuer name registry. An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer. The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.\n  remarks: \"The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer. This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim. The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token. Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted. The name returned by the issuer name registry should be unique within the context of an RP application.  \\n  \\n In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=fullName> property. In a configuration file, the issuer name registry can be specified by specifying the [\\\\&lt;issuerNameRegistry\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [\\\\&lt;securityTokenHandlerConfiguration\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.  \\n  \\n Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class. When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [\\\\&lt;trustedIssuers\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that elementâ€™s `type` attribute. Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.  \\n  \\n To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. This method returns the issuer name for the specified security token. You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.\"\n  example:\n  - \"The following code shows an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class that only accepts issuers that use certificates with subject \\\"CN=localhost\\\".  \\n  \\n> [!WARNING]\\n>  The following code is for illustrative purposes only. Validating certificates based on subject name is not a good practice. This code should not be used as is in production.  \\n  \\n [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  \\n  \\n The following shows the XML necessary to configure an application with the trusted issuer name registry.  \\n  \\n```xml  \\n<system.identityModel>  \\n  <identityConfiguration>  \\n    <issuerNameRegistry type=\\\"System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp\\\" />  \\n  </identityConfiguration>  \\n</system.identityModel>  \\n```\"\n  syntax:\n    content: 'public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  implements:\n  - System.IdentityModel.Configuration.ICustomIdentityConfiguration\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor\n  commentId: M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  langs:\n  - csharp\n  name: IssuerNameRegistry()\n  nameWithType: IssuerNameRegistry.IssuerNameRegistry()\n  fullName: IssuerNameRegistry.IssuerNameRegistry()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref> class.\n  syntax:\n    content: protected IssuerNameRegistry ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  id: GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  langs:\n  - csharp\n  name: GetIssuerName(SecurityToken)\n  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken)\n  fullName: IssuerNameRegistry.GetIssuerName(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, returns the name of the issuer of the specified security token.\n  remarks: \"Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.  \\n  \\n Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.\"\n  example:\n  - \"The following code shows the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> method for an issuer name registry. The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.  \\n  \\n> [!WARNING]\\n>  The following code is for illustrative purposes only. Validating certificates based on subject name is not a good practice. This code should not be used as is in production.  \\n  \\n [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]\"\n  syntax:\n    content: public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);\n    parameters:\n    - id: securityToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token for which to return the issuer name.\n    return:\n      type: System.String\n      description: The issuer name.\n  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)\n  commentId: M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)\n  id: GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  langs:\n  - csharp\n  name: GetIssuerName(SecurityToken, String)\n  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken, String)\n  fullName: IssuerNameRegistry.GetIssuerName(SecurityToken, String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, returns the name of the issuer of the specified security token. The specified issuer name may be considered in determining the issuer name to return.\n  remarks: \"The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method.  \\n  \\n Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.\"\n  syntax:\n    content: public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);\n    parameters:\n    - id: securityToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token for which to return the issuer name.\n    - id: requestedIssuerName\n      type: System.String\n      description: An issuer name to consider in the request.\n    return:\n      type: System.String\n      description: The issuer name.\n  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName\n  commentId: M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName\n  id: GetWindowsIssuerName\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  langs:\n  - csharp\n  name: GetWindowsIssuerName()\n  nameWithType: IssuerNameRegistry.GetWindowsIssuerName()\n  fullName: IssuerNameRegistry.GetWindowsIssuerName()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns the default issuer name to be used for Windows claims.\n  remarks: \"The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.  \\n  \\n Called from the processing pipeline by the security token handler that is processing the token. The method should return a unique name for the issuer within the context of the RP application.\"\n  syntax:\n    content: public virtual string GetWindowsIssuerName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The default issuer name for Windows claims.\n  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  commentId: M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)\n  fullName: IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, loads custom configuration from XML.\n  remarks: \"The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\\\&lt;issuerNameRegistry\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  \\n  \\n The default implementation throws a <xref:System.NotImplementedException>. Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.\"\n  syntax:\n    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);\n    parameters:\n    - id: nodelist\n      type: System.Xml.XmlNodeList\n      description: The configuration XML elements. Each node in the list is of type <xref href=\"System.Xml.XmlElement\"></xref>.\n  overload: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: IssuerNameRegistry()\n  nameWithType: IssuerNameRegistry.IssuerNameRegistry()\n  fullName: IssuerNameRegistry.IssuerNameRegistry()\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: GetIssuerName(SecurityToken)\n  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken)\n  fullName: IssuerNameRegistry.GetIssuerName(SecurityToken)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: GetIssuerName(SecurityToken, String)\n  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken, String)\n  fullName: IssuerNameRegistry.GetIssuerName(SecurityToken, String)\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: GetWindowsIssuerName()\n  nameWithType: IssuerNameRegistry.GetWindowsIssuerName()\n  fullName: IssuerNameRegistry.GetWindowsIssuerName()\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)\n  fullName: IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: GetIssuerName\n  nameWithType: IssuerNameRegistry.GetIssuerName\n  fullName: IssuerNameRegistry.GetIssuerName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor*\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: IssuerNameRegistry\n  nameWithType: IssuerNameRegistry.IssuerNameRegistry\n  fullName: IssuerNameRegistry.IssuerNameRegistry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName*\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: GetWindowsIssuerName\n  nameWithType: IssuerNameRegistry.GetWindowsIssuerName\n  fullName: IssuerNameRegistry.GetWindowsIssuerName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration*\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: IssuerNameRegistry.LoadCustomConfiguration\n  fullName: IssuerNameRegistry.LoadCustomConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerNameRegistry.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Configuration.ICustomIdentityConfiguration\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: ICustomIdentityConfiguration\n  nameWithType: ICustomIdentityConfiguration\n  fullName: System.IdentityModel.Configuration.ICustomIdentityConfiguration\n"}