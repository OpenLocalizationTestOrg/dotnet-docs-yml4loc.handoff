{"nodes":[{"content":"Grants permission to manipulate files located in the code assemblies to code assemblies that match the membership condition. This class cannot be inherited.","nodes":[{"pos":[0,156],"content":"Grants permission to manipulate files located in the code assemblies to code assemblies that match the membership condition. This class cannot be inherited.","nodes":[{"content":"Grants permission to manipulate files located in the code assemblies to code assemblies that match the membership condition. This class cannot be inherited.","pos":[0,156],"nodes":[{"content":"Grants permission to manipulate files located in the code assemblies to code assemblies that match the membership condition.","pos":[0,124]},{"content":"This class cannot be inherited.","pos":[125,156]}]}]}],"pos":[1297,1454],"yaml":true},{"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.  \n  \n <xref:System.Security.Policy.FileCodeGroup> has the same child matching semantics as <xref:System.Security.Policy.UnionCodeGroup>. However, <xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> only returns a static permission set. The type of file access granted is passed as a parameter to the constructor.  \n  \n This code group only matches assemblies run over a file protocol, that is, assemblies that have URLs that point to a file or UNC path.","nodes":[{"pos":[0,515],"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.","nodes":[{"content":"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.","pos":[0,515],"nodes":[{"content":"Code groups are the building blocks of code access security policy.","pos":[0,67]},{"content":"Each policy level consists of a root code group that can have child code groups.","pos":[68,148]},{"content":"Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree.","pos":[149,271]},{"content":"Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly.","pos":[272,405]},{"content":"Only code groups whose membership conditions match a given assembly and their child code groups apply policy.","pos":[406,515]}]}]},{"pos":[522,1047],"content":"<xref:System.Security.Policy.FileCodeGroup> has the same child matching semantics as <xref:System.Security.Policy.UnionCodeGroup>. However, <xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> only returns a static permission set. The type of file access granted is passed as a parameter to the constructor.","nodes":[{"content":"<xref:System.Security.Policy.FileCodeGroup> has the same child matching semantics as <xref:System.Security.Policy.UnionCodeGroup>. However, <xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> only returns a static permission set. The type of file access granted is passed as a parameter to the constructor.","pos":[0,525],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> has the same child matching semantics as <ph id=\"ph2\">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph>.","pos":[0,130],"source":"<xref:System.Security.Policy.FileCodeGroup> has the same child matching semantics as <xref:System.Security.Policy.UnionCodeGroup>."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> returns a permission set containing a dynamically-calculated <ph id=\"ph2\">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> that grants file access to the directory from which the code is run; <ph id=\"ph3\">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph> only returns a static permission set.","pos":[131,448],"source":" However, <xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> only returns a static permission set."},{"content":"The type of file access granted is passed as a parameter to the constructor.","pos":[449,525]}]}]},{"pos":[1054,1188],"content":"This code group only matches assemblies run over a file protocol, that is, assemblies that have URLs that point to a file or UNC path.","nodes":[{"content":"This code group only matches assemblies run over a file protocol, that is, assemblies that have URLs that point to a file or UNC path.","pos":[0,134]}]}],"pos":[1465,2660],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Policy.FileCodeGroup\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.FileCodeGroup\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Policy.FileCodeGroup\"></xref> class."}],"pos":[6184,6283],"yaml":true},{"content":"This constructor creates a basic code group. Child code groups can be added with the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.  \n  \n <xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run. The type of access granted is determined by the `access` parameter.","nodes":[{"pos":[0,144],"content":"This constructor creates a basic code group. Child code groups can be added with the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.","nodes":[{"content":"This constructor creates a basic code group. Child code groups can be added with the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.","pos":[0,144],"nodes":[{"content":"This constructor creates a basic code group.","pos":[0,44]},{"content":"Child code groups can be added with the <ph id=\"ph1\">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph> method.","pos":[45,144],"source":" Child code groups can be added with the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method."}]}]},{"pos":[151,444],"content":"<xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run. The type of access granted is determined by the `access` parameter.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> returns a permission set containing a dynamically-calculated <ph id=\"ph2\">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> that grants file access to the directory from which the code is run.","pos":[0,225],"source":"<xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run."},{"content":"The type of access granted is determined by the <ph id=\"ph1\">`access`</ph> parameter.","pos":[226,293],"source":" The type of access granted is determined by the `access` parameter."}]}],"pos":[6294,6743],"yaml":true,"extradata":"MT"},{"content":"A membership condition that tests evidence to determine whether this code group applies policy.","nodes":[{"pos":[0,95],"content":"A membership condition that tests evidence to determine whether this code group applies policy.","nodes":[{"content":"A membership condition that tests evidence to determine whether this code group applies policy.","pos":[0,95]}]}],"pos":[7778,7874],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values. This value is used to construct the <xref href=\"System.Security.Permissions.FileIOPermission\"></xref> that is granted.","nodes":[{"pos":[0,209],"content":"One of the <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values. This value is used to construct the <xref href=\"System.Security.Permissions.FileIOPermission\"></xref> that is granted.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,90],"source":"One of the <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values."},{"content":"This value is used to construct the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermission\"&gt;&lt;/xref&gt;</ph> that is granted.","pos":[91,209],"source":" This value is used to construct the <xref href=\"System.Security.Permissions.FileIOPermission\"></xref> that is granted."}]}],"pos":[7973,8183],"yaml":true},{"content":"The <code>membershipCondition</code> parameter is `null`.","nodes":[{"pos":[0,57],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">membershipCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>membershipCondition</code> parameter is `null`."}],"pos":[8355,8413],"yaml":true},{"content":"The type of the <code>membershipCondition</code> parameter is not valid.  \n  \n -or-  \n  \n The type of the <code>access</code> parameter is not valid.","nodes":[{"pos":[0,72],"content":"The type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">membershipCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The type of the <code>membershipCondition</code> parameter is not valid."},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,149],"content":"The type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">access</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The type of the <code>access</code> parameter is not valid."}],"pos":[8507,8663],"yaml":true},{"content":"Gets a string representation of the attributes of the policy statement for the code group.","nodes":[{"pos":[0,90],"content":"Gets a string representation of the attributes of the policy statement for the code group.","nodes":[{"content":"Gets a string representation of the attributes of the policy statement for the code group.","pos":[0,90]}]}],"pos":[9805,9896],"yaml":true},{"content":"<xref:System.Security.Policy.FileCodeGroup> does not use <xref:System.Security.Policy.FileCodeGroup.AttributeString%2A>, so this property is always `null`.","nodes":[{"pos":[0,155],"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> does not use <ph id=\"ph2\">&lt;xref:System.Security.Policy.FileCodeGroup.AttributeString%2A&gt;</ph>, so this property is always <ph id=\"ph3\">`null`</ph>.","source":"<xref:System.Security.Policy.FileCodeGroup> does not use <xref:System.Security.Policy.FileCodeGroup.AttributeString%2A>, so this property is always `null`."}],"pos":[9907,10063],"yaml":true,"extradata":"MT"},{"content":"Always `null`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`null`</ph>.","source":"Always `null`."}],"pos":[10981,10996],"yaml":true},{"content":"Makes a deep copy of the current code group.","nodes":[{"pos":[0,44],"content":"Makes a deep copy of the current code group.","nodes":[{"content":"Makes a deep copy of the current code group.","pos":[0,44]}]}],"pos":[12159,12204],"yaml":true},{"content":"This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.","nodes":[{"pos":[0,117],"content":"This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.","nodes":[{"content":"This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.","pos":[0,117]}]}],"pos":[12215,12333],"yaml":true,"extradata":"MT"},{"content":"An equivalent copy of the current code group, including its membership conditions and child code groups.","nodes":[{"pos":[0,104],"content":"An equivalent copy of the current code group, including its membership conditions and child code groups.","nodes":[{"content":"An equivalent copy of the current code group, including its membership conditions and child code groups.","pos":[0,104]}]}],"pos":[13289,13394],"yaml":true},{"content":"Determines whether the specified code group is equivalent to the current code group.","nodes":[{"pos":[0,84],"content":"Determines whether the specified code group is equivalent to the current code group.","nodes":[{"content":"Determines whether the specified code group is equivalent to the current code group.","pos":[0,84]}]}],"pos":[16318,16403],"yaml":true},{"content":"The code group to compare with the current code group.","nodes":[{"pos":[0,54],"content":"The code group to compare with the current code group.","nodes":[{"content":"The code group to compare with the current code group.","pos":[0,54]}]}],"pos":[17339,17394],"yaml":true},{"content":"`true` if the specified code group is equivalent to the current code group; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the specified code group is equivalent to the current code group; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified code group is equivalent to the current code group; otherwise, `false`."}],"pos":[17452,17550],"yaml":true},{"content":"Gets the hash code of the current code group.","nodes":[{"pos":[0,45],"content":"Gets the hash code of the current code group.","nodes":[{"content":"Gets the hash code of the current code group.","pos":[0,45]}]}],"pos":[18746,18792],"yaml":true},{"content":"The hash code of the current code group.","nodes":[{"pos":[0,40],"content":"The hash code of the current code group.","nodes":[{"content":"The hash code of the current code group.","pos":[0,40]}]}],"pos":[19736,19777],"yaml":true},{"content":"Gets the merge logic.","nodes":[{"pos":[0,21],"content":"Gets the merge logic.","nodes":[{"content":"Gets the merge logic.","pos":[0,21]}]}],"pos":[20968,20990],"yaml":true},{"content":"The string \"Union\".","nodes":[{"pos":[0,19],"content":"The string \"Union\".","nodes":[{"content":"The string \"Union\".","pos":[0,19]}]}],"pos":[21920,21940],"yaml":true},{"content":"Gets the name of the named permission set for the code group.","nodes":[{"pos":[0,61],"content":"Gets the name of the named permission set for the code group.","nodes":[{"content":"Gets the name of the named permission set for the code group.","pos":[0,61]}]}],"pos":[24849,24911],"yaml":true},{"content":"The concatenatation of the string \"Same directory FileIO - \" and the access type.","nodes":[{"pos":[0,81],"content":"The concatenatation of the string \"Same directory FileIO - \" and the access type.","nodes":[{"content":"The concatenatation of the string \"Same directory FileIO - \" and the access type.","pos":[0,81]}]}],"pos":[25875,25957],"yaml":true},{"content":"Resolves policy for the code group and its descendants for a set of evidence.","nodes":[{"pos":[0,77],"content":"Resolves policy for the code group and its descendants for a set of evidence.","nodes":[{"content":"Resolves policy for the code group and its descendants for a set of evidence.","pos":[0,77]}]}],"pos":[27263,27341],"yaml":true},{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.  \n  \n The .NET Framework security system uses <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.  \n  \n <xref:System.Security.Policy.FileCodeGroup> uses union semantics and forms a permission set based on the <xref:System.Security.Policy.Url> specified by `evidence`.","nodes":[{"pos":[0,279],"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","pos":[0,279],"nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.","pos":[0,156]},{"content":"If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.","pos":[157,279]}]}]},{"pos":[286,531],"content":"The .NET Framework security system uses <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.","nodes":[{"content":"The .NET Framework security system uses <ph id=\"ph1\">&lt;xref:System.Security.Policy.FileCodeGroup.Resolve%2A&gt;</ph> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.","pos":[0,245],"source":"The .NET Framework security system uses <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly."}]},{"pos":[538,701],"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> uses union semantics and forms a permission set based on the <ph id=\"ph2\">&lt;xref:System.Security.Policy.Url&gt;</ph> specified by <ph id=\"ph3\">`evidence`</ph>.","source":"<xref:System.Security.Policy.FileCodeGroup> uses union semantics and forms a permission set based on the <xref:System.Security.Policy.Url> specified by `evidence`."}],"pos":[27352,28060],"yaml":true,"extradata":"MT"},{"content":"The evidence for the assembly.","nodes":[{"pos":[0,30],"content":"The evidence for the assembly.","nodes":[{"content":"The evidence for the assembly.","pos":[0,30]}]}],"pos":[29070,29101],"yaml":true},{"content":"A policy statement consisting of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence).","nodes":[{"pos":[0,209],"content":"A policy statement consisting of the permissions granted by the code group with optional attributes, or <ph id=\"ph1\">`null`</ph> if the code group does not apply (the membership condition does not match the specified evidence).","source":"A policy statement consisting of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence)."}],"pos":[29183,29393],"yaml":true},{"content":"The <code>evidence</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">evidence</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>evidence</code> parameter is `null`."}],"pos":[29567,29614],"yaml":true},{"content":"The current policy is `null`.  \n  \n -or-  \n  \n More than one code group (including the parent code group and all child code groups) is marked <xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"></xref>.","nodes":[{"pos":[0,29],"content":"The current policy is <ph id=\"ph1\">`null`</ph>.","source":"The current policy is `null`."},{"pos":[36,40],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[47,221],"content":"More than one code group (including the parent code group and all child code groups) is marked <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"&gt;&lt;/xref&gt;</ph>.","source":"More than one code group (including the parent code group and all child code groups) is marked <xref href=\"System.Security.Policy.PolicyStatementAttribute.Exclusive\"></xref>."}],"pos":[29736,29966],"yaml":true},{"content":"Resolves matching code groups.","nodes":[{"pos":[0,30],"content":"Resolves matching code groups.","nodes":[{"content":"Resolves matching code groups.","pos":[0,30]}]}],"pos":[31295,31326],"yaml":true},{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.  \n  \n <xref:System.Security.Policy.FileCodeGroup> uses union semantics and forms a permission set based on the <xref:System.Security.Policy.Url> specified by `evidence`.","nodes":[{"pos":[0,417],"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.","nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.","pos":[0,417],"nodes":[{"content":"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.","pos":[0,156]},{"content":"If there is a match, this method returns a root code group.","pos":[157,216]},{"content":"The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.","pos":[217,417]}]}]},{"pos":[424,587],"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.FileCodeGroup&gt;</ph> uses union semantics and forms a permission set based on the <ph id=\"ph2\">&lt;xref:System.Security.Policy.Url&gt;</ph> specified by <ph id=\"ph3\">`evidence`</ph>.","source":"<xref:System.Security.Policy.FileCodeGroup> uses union semantics and forms a permission set based on the <xref:System.Security.Policy.Url> specified by `evidence`."}],"pos":[31337,31929],"yaml":true,"extradata":"MT"},{"content":"The evidence for the assembly.","nodes":[{"pos":[0,30],"content":"The evidence for the assembly.","nodes":[{"content":"The evidence for the assembly.","pos":[0,30]}]}],"pos":[32958,32989],"yaml":true},{"content":"A <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of matching code groups.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.CodeGroup\"&gt;&lt;/xref&gt;</ph> that is the root of the tree of matching code groups.","source":"A <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of matching code groups."}],"pos":[33065,33175],"yaml":true},{"content":"The <code>evidence</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">evidence</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>evidence</code> parameter is `null`."}],"pos":[33367,33414],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.FileCodeGroup\n  commentId: T:System.Security.Policy.FileCodeGroup\n  id: FileCodeGroup\n  children:\n  - System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)\n  - System.Security.Policy.FileCodeGroup.AttributeString\n  - System.Security.Policy.FileCodeGroup.Copy\n  - System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.FileCodeGroup.Equals(System.Object)\n  - System.Security.Policy.FileCodeGroup.GetHashCode\n  - System.Security.Policy.FileCodeGroup.MergeLogic\n  - System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.FileCodeGroup.PermissionSetName\n  - System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)\n  - System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  langs:\n  - csharp\n  name: FileCodeGroup\n  nameWithType: FileCodeGroup\n  fullName: System.Security.Policy.FileCodeGroup\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Grants permission to manipulate files located in the code assemblies to code assemblies that match the membership condition. This class cannot be inherited.\n  remarks: \"Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.  \\n  \\n <xref:System.Security.Policy.FileCodeGroup> has the same child matching semantics as <xref:System.Security.Policy.UnionCodeGroup>. However, <xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> only returns a static permission set. The type of file access granted is passed as a parameter to the constructor.  \\n  \\n This code group only matches assemblies run over a file protocol, that is, assemblies that have URLs that point to a file or UNC path.\"\n  example:\n  - \"The following example shows the use of members of the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#1)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#1)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class FileCodeGroup : System.Security.Policy.CodeGroup\n  inheritance:\n  - System.Object\n  - System.Security.Policy.CodeGroup\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.Children\n  - System.Security.Policy.CodeGroup.Description\n  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.MembershipCondition\n  - System.Security.Policy.CodeGroup.Name\n  - System.Security.Policy.CodeGroup.PolicyStatement\n  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.ToXml\n  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)\n  commentId: M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)\n  id: '#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)'\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: FileCodeGroup(IMembershipCondition, FileIOPermissionAccess)\n  nameWithType: FileCodeGroup.FileCodeGroup(IMembershipCondition, FileIOPermissionAccess)\n  fullName: FileCodeGroup.FileCodeGroup(IMembershipCondition, FileIOPermissionAccess)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Initializes a new instance of the <xref href=\"System.Security.Policy.FileCodeGroup\"></xref> class.\n  remarks: \"This constructor creates a basic code group. Child code groups can be added with the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.  \\n  \\n <xref:System.Security.Policy.FileCodeGroup> returns a permission set containing a dynamically-calculated <xref:System.Security.Permissions.FileIOPermission> that grants file access to the directory from which the code is run. The type of access granted is determined by the `access` parameter.\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.%23ctor%2A> constructor. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#2)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#2)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#2)]\"\n  syntax:\n    content: public FileCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Permissions.FileIOPermissionAccess access);\n    parameters:\n    - id: membershipCondition\n      type: System.Security.Policy.IMembershipCondition\n      description: A membership condition that tests evidence to determine whether this code group applies policy.\n    - id: access\n      type: System.Security.Permissions.FileIOPermissionAccess\n      description: One of the <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values. This value is used to construct the <xref href=\"System.Security.Permissions.FileIOPermission\"></xref> that is granted.\n  overload: System.Security.Policy.FileCodeGroup.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>membershipCondition</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The type of the <code>membershipCondition</code> parameter is not valid.  \\n  \\n -or-  \\n  \\n The type of the <code>access</code> parameter is not valid.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.AttributeString\n  commentId: P:System.Security.Policy.FileCodeGroup.AttributeString\n  id: AttributeString\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: AttributeString\n  nameWithType: FileCodeGroup.AttributeString\n  fullName: FileCodeGroup.AttributeString\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets a string representation of the attributes of the policy statement for the code group.\n  remarks: <xref:System.Security.Policy.FileCodeGroup> does not use <xref:System.Security.Policy.FileCodeGroup.AttributeString%2A>, so this property is always `null`.\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.AttributeString%2A> property to get the attributes for the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#5)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#5)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#5)]\"\n  syntax:\n    content: public override string AttributeString { get; }\n    return:\n      type: System.String\n      description: Always `null`.\n  overload: System.Security.Policy.FileCodeGroup.AttributeString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.Copy\n  commentId: M:System.Security.Policy.FileCodeGroup.Copy\n  id: Copy\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: FileCodeGroup.Copy()\n  fullName: FileCodeGroup.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Makes a deep copy of the current code group.\n  remarks: This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.Copy%2A> method to make a deep copy of the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#18)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#18)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#18)]\"\n  syntax:\n    content: public override System.Security.Policy.CodeGroup Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: An equivalent copy of the current code group, including its membership conditions and child code groups.\n  overload: System.Security.Policy.FileCodeGroup.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  commentId: M:System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: CreateXml(SecurityElement, PolicyLevel)\n  nameWithType: FileCodeGroup.CreateXml(SecurityElement, PolicyLevel)\n  fullName: FileCodeGroup.CreateXml(SecurityElement, PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  syntax:\n    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: element\n      type: System.Security.SecurityElement\n      description: ''\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: ''\n  overload: System.Security.Policy.FileCodeGroup.CreateXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.Equals(System.Object)\n  commentId: M:System.Security.Policy.FileCodeGroup.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FileCodeGroup.Equals(Object)\n  fullName: FileCodeGroup.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Determines whether the specified code group is equivalent to the current code group.\n  remarks: ''\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.Equals%2A> method to determine if two code groups are equal. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#20)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#20)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#20)]\"\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The code group to compare with the current code group.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified code group is equivalent to the current code group; otherwise, `false`.'\n  overload: System.Security.Policy.FileCodeGroup.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.GetHashCode\n  commentId: M:System.Security.Policy.FileCodeGroup.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FileCodeGroup.GetHashCode()\n  fullName: FileCodeGroup.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the hash code of the current code group.\n  remarks: ''\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.GetHashCode%2A> method to get the hash code of the current code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#14)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#14)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#14)]\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code of the current code group.\n  overload: System.Security.Policy.FileCodeGroup.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.MergeLogic\n  commentId: P:System.Security.Policy.FileCodeGroup.MergeLogic\n  id: MergeLogic\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: MergeLogic\n  nameWithType: FileCodeGroup.MergeLogic\n  fullName: FileCodeGroup.MergeLogic\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the merge logic.\n  remarks: ''\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.MergeLogic%2A> property to get the merge logic for this code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#15)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#15)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#15)]\"\n  syntax:\n    content: public override string MergeLogic { get; }\n    return:\n      type: System.String\n      description: The string \"Union\".\n  overload: System.Security.Policy.FileCodeGroup.MergeLogic*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  commentId: M:System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: ParseXml(SecurityElement, PolicyLevel)\n  nameWithType: FileCodeGroup.ParseXml(SecurityElement, PolicyLevel)\n  fullName: FileCodeGroup.ParseXml(SecurityElement, PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  syntax:\n    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: ''\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: ''\n  overload: System.Security.Policy.FileCodeGroup.ParseXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.PermissionSetName\n  commentId: P:System.Security.Policy.FileCodeGroup.PermissionSetName\n  id: PermissionSetName\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: PermissionSetName\n  nameWithType: FileCodeGroup.PermissionSetName\n  fullName: FileCodeGroup.PermissionSetName\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the name of the named permission set for the code group.\n  remarks: ''\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.PermissionSetName%2A> property to get the name of the named permission set for the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#13)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#13)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#13)]\"\n  syntax:\n    content: public override string PermissionSetName { get; }\n    return:\n      type: System.String\n      description: The concatenatation of the string \"Same directory FileIO - \" and the access type.\n  overload: System.Security.Policy.FileCodeGroup.PermissionSetName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)\n  id: Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: Resolve(Evidence)\n  nameWithType: FileCodeGroup.Resolve(Evidence)\n  fullName: FileCodeGroup.Resolve(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resolves policy for the code group and its descendants for a set of evidence.\n  remarks: \"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.  \\n  \\n The .NET Framework security system uses <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.  \\n  \\n <xref:System.Security.Policy.FileCodeGroup> uses union semantics and forms a permission set based on the <xref:System.Security.Policy.Url> specified by `evidence`.\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> method to resolve policy for the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#19)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#19)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#19)]\"\n  syntax:\n    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence for the assembly.\n    return:\n      type: System.Security.Policy.PolicyStatement\n      description: A policy statement consisting of the permissions granted by the code group with optional attributes, or `null` if the code group does not apply (the membership condition does not match the specified evidence).\n  overload: System.Security.Policy.FileCodeGroup.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>evidence</code> parameter is `null`.\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: \"The current policy is `null`.  \\n  \\n -or-  \\n  \\n More than one code group (including the parent code group and all child code groups) is marked <xref href=\\\"System.Security.Policy.PolicyStatementAttribute.Exclusive\\\"></xref>.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  commentId: M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FileCodeGroup\n  langs:\n  - csharp\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: FileCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: FileCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resolves matching code groups.\n  remarks: \"Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.  \\n  \\n <xref:System.Security.Policy.FileCodeGroup> uses union semantics and forms a permission set based on the <xref:System.Security.Policy.Url> specified by `evidence`.\"\n  example:\n  - \"The following code shows the use of the <xref:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups%2A> method to resolve matching code groups. This code example is part of a larger example provided for the <xref:System.Security.Policy.FileCodeGroup> class.  \\n  \\n [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#9)]\\n [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#9)]\\n [!code-vb[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#9)]\"\n  syntax:\n    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: The evidence for the assembly.\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: A <xref href=\"System.Security.Policy.CodeGroup\"></xref> that is the root of the tree of matching code groups.\n  overload: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>evidence</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Policy.CodeGroup\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeGroup\n  nameWithType: CodeGroup\n  fullName: System.Security.Policy.CodeGroup\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Policy.PolicyException\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyException\n  nameWithType: PolicyException\n  fullName: System.Security.Policy.PolicyException\n- uid: System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: FileCodeGroup(IMembershipCondition, FileIOPermissionAccess)\n  nameWithType: FileCodeGroup.FileCodeGroup(IMembershipCondition, FileIOPermissionAccess)\n  fullName: FileCodeGroup.FileCodeGroup(IMembershipCondition, FileIOPermissionAccess)\n- uid: System.Security.Policy.IMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: IMembershipCondition\n  nameWithType: IMembershipCondition\n  fullName: System.Security.Policy.IMembershipCondition\n- uid: System.Security.Permissions.FileIOPermissionAccess\n  parent: System.Security.Permissions\n  isExternal: false\n  name: FileIOPermissionAccess\n  nameWithType: FileIOPermissionAccess\n  fullName: System.Security.Permissions.FileIOPermissionAccess\n- uid: System.Security.Policy.FileCodeGroup.AttributeString\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: AttributeString\n  nameWithType: FileCodeGroup.AttributeString\n  fullName: FileCodeGroup.AttributeString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.FileCodeGroup.Copy\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: Copy()\n  nameWithType: FileCodeGroup.Copy()\n  fullName: FileCodeGroup.Copy()\n- uid: System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: CreateXml(SecurityElement, PolicyLevel)\n  nameWithType: FileCodeGroup.CreateXml(SecurityElement, PolicyLevel)\n  fullName: FileCodeGroup.CreateXml(SecurityElement, PolicyLevel)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.FileCodeGroup.Equals(System.Object)\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FileCodeGroup.Equals(Object)\n  fullName: FileCodeGroup.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.FileCodeGroup.GetHashCode\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FileCodeGroup.GetHashCode()\n  fullName: FileCodeGroup.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.FileCodeGroup.MergeLogic\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: MergeLogic\n  nameWithType: FileCodeGroup.MergeLogic\n  fullName: FileCodeGroup.MergeLogic\n- uid: System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: ParseXml(SecurityElement, PolicyLevel)\n  nameWithType: FileCodeGroup.ParseXml(SecurityElement, PolicyLevel)\n  fullName: FileCodeGroup.ParseXml(SecurityElement, PolicyLevel)\n- uid: System.Security.Policy.FileCodeGroup.PermissionSetName\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: PermissionSetName\n  nameWithType: FileCodeGroup.PermissionSetName\n  fullName: FileCodeGroup.PermissionSetName\n- uid: System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: Resolve(Evidence)\n  nameWithType: FileCodeGroup.Resolve(Evidence)\n  fullName: FileCodeGroup.Resolve(Evidence)\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: FileCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: FileCodeGroup.ResolveMatchingCodeGroups(Evidence)\n- uid: System.Security.Policy.FileCodeGroup.#ctor*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: FileCodeGroup\n  nameWithType: FileCodeGroup.FileCodeGroup\n  fullName: FileCodeGroup.FileCodeGroup\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.AttributeString*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: AttributeString\n  nameWithType: FileCodeGroup.AttributeString\n  fullName: FileCodeGroup.AttributeString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.Copy*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: Copy\n  nameWithType: FileCodeGroup.Copy\n  fullName: FileCodeGroup.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.CreateXml*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: CreateXml\n  nameWithType: FileCodeGroup.CreateXml\n  fullName: FileCodeGroup.CreateXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.Equals*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: Equals\n  nameWithType: FileCodeGroup.Equals\n  fullName: FileCodeGroup.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.GetHashCode*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: GetHashCode\n  nameWithType: FileCodeGroup.GetHashCode\n  fullName: FileCodeGroup.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.MergeLogic*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: MergeLogic\n  nameWithType: FileCodeGroup.MergeLogic\n  fullName: FileCodeGroup.MergeLogic\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.ParseXml*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: ParseXml\n  nameWithType: FileCodeGroup.ParseXml\n  fullName: FileCodeGroup.ParseXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.PermissionSetName*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: PermissionSetName\n  nameWithType: FileCodeGroup.PermissionSetName\n  fullName: FileCodeGroup.PermissionSetName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.Resolve*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: Resolve\n  nameWithType: FileCodeGroup.Resolve\n  fullName: FileCodeGroup.Resolve\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups*\n  parent: System.Security.Policy.FileCodeGroup\n  isExternal: false\n  name: ResolveMatchingCodeGroups\n  nameWithType: FileCodeGroup.ResolveMatchingCodeGroups\n  fullName: FileCodeGroup.ResolveMatchingCodeGroups\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/FileCodeGroup.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: AddChild(CodeGroup)\n  nameWithType: CodeGroup.AddChild(CodeGroup)\n  fullName: CodeGroup.AddChild(CodeGroup)\n- uid: System.Security.Policy.CodeGroup.Children\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Children\n  nameWithType: CodeGroup.Children\n  fullName: CodeGroup.Children\n- uid: System.Security.Policy.CodeGroup.Description\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Description\n  nameWithType: CodeGroup.Description\n  fullName: CodeGroup.Description\n- uid: System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Equals(CodeGroup, Boolean)\n  nameWithType: CodeGroup.Equals(CodeGroup, Boolean)\n  fullName: CodeGroup.Equals(CodeGroup, Boolean)\n- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: CodeGroup.FromXml(SecurityElement)\n  fullName: CodeGroup.FromXml(SecurityElement)\n- uid: System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: FromXml(SecurityElement, PolicyLevel)\n  nameWithType: CodeGroup.FromXml(SecurityElement, PolicyLevel)\n  fullName: CodeGroup.FromXml(SecurityElement, PolicyLevel)\n- uid: System.Security.Policy.CodeGroup.MembershipCondition\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: MembershipCondition\n  nameWithType: CodeGroup.MembershipCondition\n  fullName: CodeGroup.MembershipCondition\n- uid: System.Security.Policy.CodeGroup.Name\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: Name\n  nameWithType: CodeGroup.Name\n  fullName: CodeGroup.Name\n- uid: System.Security.Policy.CodeGroup.PolicyStatement\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: CodeGroup.PolicyStatement\n  fullName: CodeGroup.PolicyStatement\n- uid: System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: RemoveChild(CodeGroup)\n  nameWithType: CodeGroup.RemoveChild(CodeGroup)\n  fullName: CodeGroup.RemoveChild(CodeGroup)\n- uid: System.Security.Policy.CodeGroup.ToXml\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: ToXml()\n  nameWithType: CodeGroup.ToXml()\n  fullName: CodeGroup.ToXml()\n- uid: System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: ToXml(PolicyLevel)\n  nameWithType: CodeGroup.ToXml(PolicyLevel)\n  fullName: CodeGroup.ToXml(PolicyLevel)\n"}