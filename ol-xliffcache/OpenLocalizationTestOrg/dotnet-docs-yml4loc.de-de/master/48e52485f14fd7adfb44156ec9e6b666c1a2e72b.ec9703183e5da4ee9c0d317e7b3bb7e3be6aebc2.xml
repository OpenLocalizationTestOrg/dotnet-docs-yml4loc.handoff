{"nodes":[{"content":"Provides a way to convert an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageContext\"></xref> to a format that can be serialized as XAML.","nodes":[{"pos":[0,144],"content":"Provides a way to convert an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageContext\"&gt;&lt;/xref&gt;</ph> to a format that can be serialized as XAML.","source":"Provides a way to convert an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageContext\"></xref> to a format that can be serialized as XAML."}],"pos":[1285,1430],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.XPathMessageContext> cannot be serialized as XAML. To solve this problem, use the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter> to convert an instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> class to an instance of the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>.","nodes":[{"pos":[0,393],"content":"The <xref:System.ServiceModel.Dispatcher.XPathMessageContext> cannot be serialized as XAML. To solve this problem, use the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter> to convert an instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> class to an instance of the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>.","nodes":[{"content":"The <xref:System.ServiceModel.Dispatcher.XPathMessageContext> cannot be serialized as XAML. To solve this problem, use the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter> to convert an instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> class to an instance of the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>.","pos":[0,393],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageContext&gt;</ph> cannot be serialized as XAML.","pos":[0,91],"source":"The <xref:System.ServiceModel.Dispatcher.XPathMessageContext> cannot be serialized as XAML."},{"content":"To solve this problem, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter&gt;</ph> to convert an instance of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageContext&gt;</ph> class to an instance of the <ph id=\"ph3\">&lt;xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension&gt;</ph>.","pos":[92,393],"source":" To solve this problem, use the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter> to convert an instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> class to an instance of the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>."}]}]}],"pos":[1441,1835],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\"></xref> class.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\"></xref> class."}],"pos":[6743,6874],"yaml":true},{"content":"Tests whether a context can be converted from one type to the type of this converter.","nodes":[{"pos":[0,85],"content":"Tests whether a context can be converted from one type to the type of this converter.","nodes":[{"content":"Tests whether a context can be converted from one type to the type of this converter.","pos":[0,85]}]}],"pos":[8463,8549],"yaml":true},{"content":"A type that provides the format context.","nodes":[{"pos":[0,40],"content":"A type that provides the format context.","nodes":[{"content":"A type that provides the format context.","pos":[0,40]}]}],"pos":[8791,8832],"yaml":true},{"content":"The type to convert from.","nodes":[{"pos":[0,25],"content":"The type to convert from.","nodes":[{"content":"The type to convert from.","pos":[0,25]}]}],"pos":[8896,8922],"yaml":true},{"content":"`true` if the type can be converted; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the type can be converted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the type can be converted; otherwise, `false`."}],"pos":[8980,9039],"yaml":true},{"content":"Tests whether a type can be converted into a target type.","nodes":[{"pos":[0,57],"content":"Tests whether a type can be converted into a target type.","nodes":[{"content":"Tests whether a type can be converted into a target type.","pos":[0,57]}]}],"pos":[10539,10597],"yaml":true},{"content":"A type that provides the format context.","nodes":[{"pos":[0,40],"content":"A type that provides the format context.","nodes":[{"content":"A type that provides the format context.","pos":[0,40]}]}],"pos":[10842,10883],"yaml":true},{"content":"A type that provides the format context.","nodes":[{"pos":[0,40],"content":"A type that provides the format context.","nodes":[{"content":"A type that provides the format context.","pos":[0,40]}]}],"pos":[10952,10993],"yaml":true},{"content":"`true` if the conversion can be performed; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the conversion can be performed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the conversion can be performed; otherwise, `false`."}],"pos":[11051,11116],"yaml":true},{"content":"Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.","nodes":[{"pos":[0,140],"content":"Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.","nodes":[{"content":"Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.","pos":[0,140]}]}],"pos":[12758,12899],"yaml":true},{"content":"A type that provides the format context.","nodes":[{"pos":[0,40],"content":"A type that provides the format context.","nodes":[{"content":"A type that provides the format context.","pos":[0,40]}]}],"pos":[13179,13220],"yaml":true},{"content":"The information about a specific culture, such as calendars, and number formats.","nodes":[{"pos":[0,80],"content":"The information about a specific culture, such as calendars, and number formats.","nodes":[{"content":"The information about a specific culture, such as calendars, and number formats.","pos":[0,80]}]}],"pos":[13302,13383],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[13444,13467],"yaml":true},{"content":"The result of the conversion process.","nodes":[{"pos":[0,37],"content":"The result of the conversion process.","nodes":[{"content":"The result of the conversion process.","pos":[0,37]}]}],"pos":[13524,13562],"yaml":true},{"content":"Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.","nodes":[{"pos":[0,140],"content":"Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.","nodes":[{"content":"Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.","pos":[0,140]}]}],"pos":[15245,15386],"yaml":true},{"content":"A type that provides the format context.","nodes":[{"pos":[0,40],"content":"A type that provides the format context.","nodes":[{"content":"A type that provides the format context.","pos":[0,40]}]}],"pos":[15686,15727],"yaml":true},{"content":"The information about a specific culture, such as calendars, and number formats.","nodes":[{"pos":[0,80],"content":"The information about a specific culture, such as calendars, and number formats.","nodes":[{"content":"The information about a specific culture, such as calendars, and number formats.","pos":[0,80]}]}],"pos":[15809,15890],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[15951,15974],"yaml":true},{"content":"The type to convert the <code>value</code> argument to.","nodes":[{"pos":[0,55],"content":"The type to convert the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument to.","source":"The type to convert the <code>value</code> argument to."}],"pos":[16043,16099],"yaml":true},{"content":"The converted context.","nodes":[{"pos":[0,22],"content":"The converted context.","nodes":[{"content":"The converted context.","pos":[0,22]}]}],"pos":[16156,16179],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  commentId: T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  id: XPathMessageContextTypeConverter\n  children:\n  - System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor\n  - System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: XPathMessageContextTypeConverter\n  nameWithType: XPathMessageContextTypeConverter\n  fullName: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Provides a way to convert an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageContext\"></xref> to a format that can be serialized as XAML.\n  remarks: The <xref:System.ServiceModel.Dispatcher.XPathMessageContext> cannot be serialized as XAML. To solve this problem, use the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter> to convert an instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> class to an instance of the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>.\n  syntax:\n    content: 'public class XPathMessageContextTypeConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor\n  commentId: M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  langs:\n  - csharp\n  name: XPathMessageContextTypeConverter()\n  nameWithType: XPathMessageContextTypeConverter.XPathMessageContextTypeConverter()\n  fullName: XPathMessageContextTypeConverter.XPathMessageContextTypeConverter()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\"></xref> class.\n  syntax:\n    content: public XPathMessageContextTypeConverter ();\n    parameters: []\n  overload: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: XPathMessageContextTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: XPathMessageContextTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Tests whether a context can be converted from one type to the type of this converter.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A type that provides the format context.\n    - id: sourceType\n      type: System.Type\n      description: The type to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if the type can be converted; otherwise, `false`.'\n  overload: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: XPathMessageContextTypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: XPathMessageContextTypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Tests whether a type can be converted into a target type.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A type that provides the format context.\n    - id: destinationType\n      type: System.Type\n      description: A type that provides the format context.\n    return:\n      type: System.Boolean\n      description: '`true` if the conversion can be performed; otherwise, `false`.'\n  overload: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: XPathMessageContextTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: XPathMessageContextTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A type that provides the format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The information about a specific culture, such as calendars, and number formats.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The result of the conversion process.\n  overload: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: XPathMessageContextTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: XPathMessageContextTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.XamlIntegration\n  summary: Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A type that provides the format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The information about a specific culture, such as calendars, and number formats.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the <code>value</code> argument to.\n    return:\n      type: System.Object\n      description: The converted context.\n  overload: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: XPathMessageContextTypeConverter()\n  nameWithType: XPathMessageContextTypeConverter.XPathMessageContextTypeConverter()\n  fullName: XPathMessageContextTypeConverter.XPathMessageContextTypeConverter()\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: XPathMessageContextTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: XPathMessageContextTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: XPathMessageContextTypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: XPathMessageContextTypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: XPathMessageContextTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: XPathMessageContextTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: XPathMessageContextTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: XPathMessageContextTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor*\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: XPathMessageContextTypeConverter\n  nameWithType: XPathMessageContextTypeConverter.XPathMessageContextTypeConverter\n  fullName: XPathMessageContextTypeConverter.XPathMessageContextTypeConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom*\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: XPathMessageContextTypeConverter.CanConvertFrom\n  fullName: XPathMessageContextTypeConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo*\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: XPathMessageContextTypeConverter.CanConvertTo\n  fullName: XPathMessageContextTypeConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom*\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: XPathMessageContextTypeConverter.ConvertFrom\n  fullName: XPathMessageContextTypeConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n- uid: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo*\n  parent: System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: XPathMessageContextTypeConverter.ConvertTo\n  fullName: XPathMessageContextTypeConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.XamlIntegration/XPathMessageContextTypeConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}