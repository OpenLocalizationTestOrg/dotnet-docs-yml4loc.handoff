### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.SecureEnvironment
  commentId: T:System.Security.RightsManagement.SecureEnvironment
  id: SecureEnvironment
  children:
  - System.Security.RightsManagement.SecureEnvironment.ApplicationManifest
  - System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)
  - System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)
  - System.Security.RightsManagement.SecureEnvironment.Dispose
  - System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)
  - System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers
  - System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)
  - System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)
  - System.Security.RightsManagement.SecureEnvironment.User
  langs:
  - csharp
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
  type: Class
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Represents a secure client session for user activation, license binding, and other rights management operations.
  remarks: As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.SecureEnvironment> is only usable in full trust applications.
  example:
  - "The following example shows use of the <xref:System.Security.RightsManagement.SecureEnvironment> class  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class SecureEnvironment : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest
  commentId: P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest
  id: ApplicationManifest
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: ApplicationManifest
  nameWithType: SecureEnvironment.ApplicationManifest
  fullName: SecureEnvironment.ApplicationManifest
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets the <xref href="System.Security.RightsManagement.SecureEnvironment.ApplicationManifest"></xref> specified when the <xref href="System.Security.RightsManagement.SecureEnvironment"></xref> was created.
  remarks: ''
  example:
  - "The following example shows use of the <xref:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest%2A> method.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]"
  syntax:
    content: public string ApplicationManifest { get; }
    return:
      type: System.String
      description: The application manifest specified to the <xref href="System.Security.RightsManagement.SecureEnvironment.Create*"></xref> method when the <xref href="System.Security.RightsManagement.SecureEnvironment"></xref> is created.
  overload: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)
  commentId: M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)
  id: Create(System.String,System.Security.RightsManagement.ContentUser)
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: Create(String, ContentUser)
  nameWithType: SecureEnvironment.Create(String, ContentUser)
  fullName: SecureEnvironment.Create(String, ContentUser)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Creates a secure client session for a specified user with a given rights manifest.
  remarks: This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for use with users that are already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Use the alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method for users that are not yet activated.
  example:
  - "The following example shows how to use this method to create a secure environment.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]"
  syntax:
    content: public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.ContentUser user);
    parameters:
    - id: applicationManifest
      type: System.String
      description: The application rights manifest.
    - id: user
      type: System.Security.RightsManagement.ContentUser
      description: The user or user-group for granting access to rights managed content.
    return:
      type: System.Security.RightsManagement.SecureEnvironment
      description: A secure client session for activation, license binding, and other rights management operations.
  overload: System.Security.RightsManagement.SecureEnvironment.Create*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)
  commentId: M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)
  id: Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: Create(String, AuthenticationType, UserActivationMode)
  nameWithType: SecureEnvironment.Create(String, AuthenticationType, UserActivationMode)
  fullName: SecureEnvironment.Create(String, AuthenticationType, UserActivationMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Creates a secure client session given an application rights manifest, <xref href="System.Security.RightsManagement.AuthenticationType"></xref>, and <xref href="System.Security.RightsManagement.UserActivationMode"></xref>.
  remarks: "This <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method is intended for new users that are not yet activated.  \n  \n Activating a new user includes a roundtrip server transaction to obtain the User Certificate and Client License Certificate.  \n  \n The alternate <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> method can be used if a user is already activated, such as provided in the list returned from <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>."
  example:
  - "The following example shows how to use this method to create a secure environment.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]"
  syntax:
    content: public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.AuthenticationType authentication, System.Security.RightsManagement.UserActivationMode userActivationMode);
    parameters:
    - id: applicationManifest
      type: System.String
      description: The application rights manifest.
    - id: authentication
      type: System.Security.RightsManagement.AuthenticationType
      description: The method of authentication.
    - id: userActivationMode
      type: System.Security.RightsManagement.UserActivationMode
      description: The type of the user rights account certificate.
    return:
      type: System.Security.RightsManagement.SecureEnvironment
      description: A secure client session for activation, license binding, and other rights management operations.
  overload: System.Security.RightsManagement.SecureEnvironment.Create*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.Dispose
  commentId: M:System.Security.RightsManagement.SecureEnvironment.Dispose
  id: Dispose
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecureEnvironment.Dispose()
  fullName: SecureEnvironment.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Releases all resources used by the <xref href="System.Security.RightsManagement.SecureEnvironment"></xref>.
  remarks: "The application should call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> when finished with the <xref:System.Security.RightsManagement.SecureEnvironment>.  After <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> are reclaimed by the garbage collector.  For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> before the last reference to the <xref:System.Security.RightsManagement.SecureEnvironment> is released.  If <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> is not called, resources allocated to the <xref:System.Security.RightsManagement.SecureEnvironment> will not be freed until the garbage collector calls the instance's <xref:System.Object.Finalize%2A> method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.RightsManagement.SecureEnvironment.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)
  commentId: M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SecureEnvironment.Dispose(Boolean)
  fullName: SecureEnvironment.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Releases the unmanaged resources used by the <xref href="System.Security.RightsManagement.SecureEnvironment"></xref> and optionally releases the managed resources.
  remarks: "This method is called by the public <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> method and the <xref:System.Object.Finalize%2A> method. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> invokes the protected <xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.SecureEnvironment> references. This method invokes the `Dispose()` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.Security.RightsManagement.SecureEnvironment.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers
  commentId: M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers
  id: GetActivatedUsers
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: GetActivatedUsers()
  nameWithType: SecureEnvironment.GetActivatedUsers()
  fullName: SecureEnvironment.GetActivatedUsers()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Returns a list of the activated users.
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentUser> GetActivatedUsers ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentUser}
      description: A list of the currently activated users.
  overload: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)
  commentId: M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)
  id: IsUserActivated(System.Security.RightsManagement.ContentUser)
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: IsUserActivated(ContentUser)
  nameWithType: SecureEnvironment.IsUserActivated(ContentUser)
  fullName: SecureEnvironment.IsUserActivated(ContentUser)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Indicates whether a given user has been activated for accessing rights managed content.
  remarks: ''
  example:
  - "The following example shows use of the <xref:System.Security.RightsManagement.SecureEnvironment.IsUserActivated%2A> method to determine if given user has been authorized to access rights managed content.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]"
  syntax:
    content: public static bool IsUserActivated (System.Security.RightsManagement.ContentUser user);
    parameters:
    - id: user
      type: System.Security.RightsManagement.ContentUser
      description: The user or user-group for granting access to rights managed content.
    return:
      type: System.Boolean
      description: '`true` if the given <code>user</code> has been activated for accessing rights managed content; otherwise, `false`.'
  overload: System.Security.RightsManagement.SecureEnvironment.IsUserActivated*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)
  commentId: M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)
  id: RemoveActivatedUser(System.Security.RightsManagement.ContentUser)
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: RemoveActivatedUser(ContentUser)
  nameWithType: SecureEnvironment.RemoveActivatedUser(ContentUser)
  fullName: SecureEnvironment.RemoveActivatedUser(ContentUser)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Removes the license activation for a specified user.
  remarks: The user authentication must be performed either with Windows authentication or Passport authentication.
  syntax:
    content: public static void RemoveActivatedUser (System.Security.RightsManagement.ContentUser user);
    parameters:
    - id: user
      type: System.Security.RightsManagement.ContentUser
      description: The user to remove the license activation for.
  overload: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>user</code> parameter is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The given <code>user</code> is not authenticated with either Windows authentication or Passport authentication.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.SecureEnvironment.User
  commentId: P:System.Security.RightsManagement.SecureEnvironment.User
  id: User
  parent: System.Security.RightsManagement.SecureEnvironment
  langs:
  - csharp
  name: User
  nameWithType: SecureEnvironment.User
  fullName: SecureEnvironment.User
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets the user or user-group specified when the <xref href="System.Security.RightsManagement.SecureEnvironment"></xref> was created.
  remarks: ''
  example:
  - "The following example shows use of the <xref:System.Security.RightsManagement.SecureEnvironment.User%2A> property  \n  \n [!code-csharp[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewsecenv)]\n [!code-vb[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewsecenv)]"
  syntax:
    content: public System.Security.RightsManagement.ContentUser User { get; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: The user or user-group specified to the <xref href="System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)"></xref> method when the <xref href="System.Security.RightsManagement.SecureEnvironment"></xref> was created.
  overload: System.Security.RightsManagement.SecureEnvironment.User*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: ApplicationManifest
  nameWithType: SecureEnvironment.ApplicationManifest
  fullName: SecureEnvironment.ApplicationManifest
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: Create(String, ContentUser)
  nameWithType: SecureEnvironment.Create(String, ContentUser)
  fullName: SecureEnvironment.Create(String, ContentUser)
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: Create(String, AuthenticationType, UserActivationMode)
  nameWithType: SecureEnvironment.Create(String, AuthenticationType, UserActivationMode)
  fullName: SecureEnvironment.Create(String, AuthenticationType, UserActivationMode)
- uid: System.Security.RightsManagement.AuthenticationType
  parent: System.Security.RightsManagement
  isExternal: false
  name: AuthenticationType
  nameWithType: AuthenticationType
  fullName: System.Security.RightsManagement.AuthenticationType
- uid: System.Security.RightsManagement.UserActivationMode
  parent: System.Security.RightsManagement
  isExternal: false
  name: UserActivationMode
  nameWithType: UserActivationMode
  fullName: System.Security.RightsManagement.UserActivationMode
- uid: System.Security.RightsManagement.SecureEnvironment.Dispose
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: Dispose()
  nameWithType: SecureEnvironment.Dispose()
  fullName: SecureEnvironment.Dispose()
- uid: System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SecureEnvironment.Dispose(Boolean)
  fullName: SecureEnvironment.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: GetActivatedUsers()
  nameWithType: SecureEnvironment.GetActivatedUsers()
  fullName: SecureEnvironment.GetActivatedUsers()
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentUser}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<ContentUser>
  nameWithType: ReadOnlyCollection<ContentUser>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentUser>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.RightsManagement.ContentUser
    name: ContentUser
    nameWithType: ContentUser
    fullName: System.Security.RightsManagement.ContentUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: IsUserActivated(ContentUser)
  nameWithType: SecureEnvironment.IsUserActivated(ContentUser)
  fullName: SecureEnvironment.IsUserActivated(ContentUser)
- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: RemoveActivatedUser(ContentUser)
  nameWithType: SecureEnvironment.RemoveActivatedUser(ContentUser)
  fullName: SecureEnvironment.RemoveActivatedUser(ContentUser)
- uid: System.Security.RightsManagement.SecureEnvironment.User
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: User
  nameWithType: SecureEnvironment.User
  fullName: SecureEnvironment.User
- uid: System.Security.RightsManagement.SecureEnvironment.Create*
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: Create
  nameWithType: SecureEnvironment.Create
  fullName: SecureEnvironment.Create
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
- uid: System.Security.RightsManagement.SecureEnvironment.ApplicationManifest*
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: ApplicationManifest
  nameWithType: SecureEnvironment.ApplicationManifest
  fullName: SecureEnvironment.ApplicationManifest
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
- uid: System.Security.RightsManagement.SecureEnvironment.Dispose*
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: Dispose
  nameWithType: SecureEnvironment.Dispose
  fullName: SecureEnvironment.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
- uid: System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers*
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: GetActivatedUsers
  nameWithType: SecureEnvironment.GetActivatedUsers
  fullName: SecureEnvironment.GetActivatedUsers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
- uid: System.Security.RightsManagement.SecureEnvironment.IsUserActivated*
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: IsUserActivated
  nameWithType: SecureEnvironment.IsUserActivated
  fullName: SecureEnvironment.IsUserActivated
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
- uid: System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser*
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: RemoveActivatedUser
  nameWithType: SecureEnvironment.RemoveActivatedUser
  fullName: SecureEnvironment.RemoveActivatedUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
- uid: System.Security.RightsManagement.SecureEnvironment.User*
  parent: System.Security.RightsManagement.SecureEnvironment
  isExternal: false
  name: User
  nameWithType: SecureEnvironment.User
  fullName: SecureEnvironment.User
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/SecureEnvironment.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
