<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b348758105c7bc3013ad240061e6551e1b5ed02</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Rect.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08020c2f1187a190245893052ec80e60fc4ad659</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fe7734efe38a2bf2d82df4c77af2225357283a5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes the width, height, and location of a rectangle.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The x-coordinate location of the left side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The y-coordinate location of the top side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>width<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A non-negative value that represents the <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the rectangle.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>height<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A non-negative value that represents the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the rectangle.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> structure that is of the specified size and is located at (0,0).</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> structure that specifies the width and height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> structure that is exactly large enough to contain the two specified points.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The first point that the new rectangle must contain.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The second point that the new rectangle must contain.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> structure that has the specified top-left corner location and the specified width and height.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A point that specifies the location of the top-left corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> structure that specifies the width and height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The first point the rectangle must contain.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The amount to offset the specified point.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The resulting rectangle will be exactly large enough to contain both points.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> structure that has the specified x-coordinate, y-coordinate, width, and height.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>RectExamples_snip#CreateRectExample6_csharp<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the top-left corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the top-left corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The width of the rectangle.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;width&lt;/code&gt;</ph> is a negative value.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;height&lt;/code&gt;</ph> is a negative value.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets the y-axis value of the bottom of the rectangle.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The y-axis value of the bottom of the rectangle is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The y-axis value of the bottom of the rectangle.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the rectangle is empty, the value is <ph id="ph1">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph> .</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets the position of the bottom-left corner of the rectangle</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the bottom-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The position of the bottom-left corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets the position of the bottom-right corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the bottom-right corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The position of the bottom-right corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Indicates whether the rectangle contains the specified point.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The point to check.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the rectangle contains the specified point; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Indicates whether the rectangle contains the specified rectangle.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The rectangle to check.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">rect</ph><ept id="p1">&lt;/code&gt;</ept> is entirely contained by the rectangle; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the point to check.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the point to check.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">x</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">y</ph><ept id="p2">&lt;/code&gt;</ept>) is contained by the rectangle; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a special value that represents a rectangle with no position or area.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid mathematical computations involving empty rectangles.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because both <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> are infinite values, processor operations are severely impaired by these operations.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comparisons involving these values will not affect application performance.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The empty rectangle, which has <ph id="ph1">&lt;xref href="System.Windows.Rect.X"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Windows.Rect.Y"&gt;&lt;/xref&gt;</ph> property values of <ph id="ph3">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, and has <ph id="ph4">&lt;xref href="System.Windows.Rect.Width"&gt;&lt;/xref&gt;</ph> and <ph id="ph5">&lt;xref href="System.Windows.Rect.Height"&gt;&lt;/xref&gt;</ph> property values of <ph id="ph6">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified rectangles are equal.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation tests for object equality.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The first rectangle to compare.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The second rectangle to compare.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the rectangles have the same <ph id="ph2">&lt;xref href="System.Windows.Rect.Location"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Rect.Size"&gt;&lt;/xref&gt;</ph> values; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified object is equal to the current rectangle.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation tests for object equality.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The object to compare to the current rectangle.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">o</ph><ept id="p1">&lt;/code&gt;</ept> is a <ph id="ph3">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> and has the same <ph id="ph4">&lt;xref href="System.Windows.Rect.Location"&gt;&lt;/xref&gt;</ph> and <ph id="ph5">&lt;xref href="System.Windows.Rect.Size"&gt;&lt;/xref&gt;</ph> values as the current rectangle; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified rectangle is equal to the current rectangle.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation tests for object equality.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The rectangle to compare to the current rectangle.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified rectangle has the same <ph id="ph2">&lt;xref href="System.Windows.Rect.Location"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Rect.Size"&gt;&lt;/xref&gt;</ph> values as the current rectangle; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creates a hash code for the rectangle.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a hash code by using the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> property values.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A hash code for the current <ph id="ph1">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> cannot not be changed.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A positive number that represents the height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default is 0.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Rect.Height"&gt;&lt;/xref&gt;</ph> is set to a negative value.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Rect.Height"&gt;&lt;/xref&gt;</ph> is set on an <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Expands the rectangle by using the specified <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph>, in all directions.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Specifies the amount to expand the rectangle.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Size.Width"&gt;&lt;/xref&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;xref href="System.Windows.Rect.Left"&gt;&lt;/xref&gt;</ph> and <ph id="ph4">&lt;xref href="System.Windows.Rect.Right"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Size.Height"&gt;&lt;/xref&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;xref href="System.Windows.Rect.Top"&gt;&lt;/xref&gt;</ph> and <ph id="ph4">&lt;xref href="System.Windows.Rect.Bottom"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This method is called on the <ph id="ph1">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified width or height shrink the rectangle by more than its current <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—the rectangle becomes the <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The amount by which to expand or shrink the left and right sides of the rectangle.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The amount by which to expand or shrink the top and bottom sides of the rectangle.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This method is called on the <ph id="ph1">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns the rectangle that results from expanding the specified rectangle by the specified <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph>, in all directions.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> structure to modify.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Specifies the amount to expand the rectangle.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Size.Width"&gt;&lt;/xref&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;xref href="System.Windows.Rect.Left"&gt;&lt;/xref&gt;</ph> and <ph id="ph4">&lt;xref href="System.Windows.Rect.Right"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Size.Height"&gt;&lt;/xref&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;xref href="System.Windows.Rect.Top"&gt;&lt;/xref&gt;</ph> and <ph id="ph4">&lt;xref href="System.Windows.Rect.Bottom"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The resulting rectangle.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rect&lt;/code&gt;</ph> is an <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified width or height modifiers shrink the rectangle by more than its current <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—this method returns <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Rect"&gt;&lt;/xref&gt;</ph> structure to modify.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The amount by which to expand or shrink the left and right sides of the rectangle.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The amount by which to expand or shrink the top and bottom sides of the rectangle.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The resulting rectangle.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rect&lt;/code&gt;</ph> is an <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no intersection exists, the current rectangle becomes <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The rectangle to intersect with the current rectangle.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Returns the intersection of the specified rectangles.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to find the intersection of two rectangles.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>RectExamples_snip#IntersectExample2_csharp<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The first rectangle to compare.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The second rectangle to compare.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The intersection of the two rectangles, or <ph id="ph1">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> if no intersection exists.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified rectangle intersects with the current rectangle.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The rectangle to check.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified rectangle intersects with the current rectangle; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the rectangle is the <ph id="ph1">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the rectangle is the <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets the x-axis value of the left side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The x-axis value of the left side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets or sets the position of the top-left corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the top-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The position of the top-left corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The default is (0, 0).</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Rect.Location"&gt;&lt;/xref&gt;</ph> is set on an <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Moves the rectangle by the specified vector.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method on an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>) is not allowed.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that calling the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you attempt to change <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, calling <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to change the value of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A vector that specifies the horizontal and vertical amounts to move the rectangle.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This method is called on the <ph id="ph1">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Moves the rectangle by the specified horizontal and vertical amounts.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method on an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>) is not allowed.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that calling the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you attempt to change <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, calling <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to change the value of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The amount to move the rectangle horizontally.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The amount to move the rectangle vertically.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method is called on the <ph id="ph1">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Returns a rectangle that is offset from the specified rectangle by using the specified vector.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method with an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>) is not allowed.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The original rectangle.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A vector that specifies the horizontal and vertical offsets for the new rectangle.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The resulting rectangle.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rect&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method with an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=fullName&gt;</ph>) is not allowed.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The rectangle to move.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The horizontal offset for the new rectangle.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The vertical offset for the new rectangle.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The resulting rectangle.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rect&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Compares two rectangles for exact equality.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation tests for object equality.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The first rectangle to compare.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The second rectangle to compare.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the rectangles have the same <ph id="ph2">&lt;xref href="System.Windows.Rect.Location"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Rect.Size"&gt;&lt;/xref&gt;</ph> values; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Compares two rectangles for inequality.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation tests for object inequality.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> are considered equal.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The first rectangle to compare.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The second rectangle to compare.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the rectangles do not have the same <ph id="ph2">&lt;xref href="System.Windows.Rect.Location"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Rect.Size"&gt;&lt;/xref&gt;</ph> values; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Creates a new rectangle from the specified string representation.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The string representation of the rectangle, in the form "x, y, width, height".</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The resulting rectangle.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Gets the x-axis value of the right side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The x-axis value of the right side of the rectangle is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The x-axis value of the right side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Multiplies the size of the current rectangle by the specified x and y values.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The scale factor in the x-direction.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The scale factor in the y-direction.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Gets or sets the width and height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> structure that specifies the width and height of the rectangle.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Rect.Size"&gt;&lt;/xref&gt;</ph> is set on an <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Gets the y-axis position of the top of the rectangle.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The y-axis position of the top of the rectangle.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Gets the position of the top-left corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the top-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The position of the top-left corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Gets the position of the top-right corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the top-right corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The position of the top-right corner of the rectangle.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the rectangle.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A string representation of the current rectangle.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The string has the following form: "<ph id="ph1">&lt;xref href="System.Windows.Rect.X"&gt;&lt;/xref&gt;</ph>,<ph id="ph2">&lt;xref href="System.Windows.Rect.Y"&gt;&lt;/xref&gt;</ph>,<ph id="ph3">&lt;xref href="System.Windows.Rect.Width"&gt;&lt;/xref&gt;</ph>,<ph id="ph4">&lt;xref href="System.Windows.Rect.Height"&gt;&lt;/xref&gt;</ph>".</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the rectangle by using the specified format provider.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>A string representation of the current rectangle that is determined by the specified format provider.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Transforms the rectangle by applying the specified matrix.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A matrix that specifies the transformation to apply.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Returns the rectangle that results from applying the specified matrix to the specified rectangle.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A rectangle that is the basis for the transformation.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A matrix that specifies the transformation to apply.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The rectangle that results from the operation.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Expands the current rectangle exactly enough to contain the specified point.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The point to include.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Expands the current rectangle exactly enough to contain the specified rectangle.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The rectangle to include.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The rectangle to include.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The point to include.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Creates a rectangle that is exactly large enough to contain the two specified rectangles.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The first rectangle to include.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The second rectangle to include.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The resulting rectangle.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Gets or sets the width of the rectangle.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> cannot not be changed.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A positive number that represents the width of the rectangle.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The default is 0.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Rect.Width"&gt;&lt;/xref&gt;</ph> is set to a negative value.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Rect.Width"&gt;&lt;/xref&gt;</ph> is set on an <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Gets or sets the x-axis value of the left side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Left%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The x-axis value of the left side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Rect.X"&gt;&lt;/xref&gt;</ph> is set on an <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Gets or sets the y-axis value of the top side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Top%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The y-axis value of the top side of the rectangle.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Rect.Y"&gt;&lt;/xref&gt;</ph> is set on an <ph id="ph2">&lt;xref href="System.Windows.Rect.Empty"&gt;&lt;/xref&gt;</ph> rectangle.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Formats the value of the current instance using the specified format.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The format to use.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) to use the default format defined for the type of the <ph id="ph2">&lt;xref href="System.IFormattable"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The provider to use to format the value.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>A string representation of the rectangle.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>