{"nodes":[{"content":"Exposes the public members of the <xref href=\"System.Type\"></xref> class to the unmanaged code.","nodes":[{"pos":[0,95],"content":"Exposes the public members of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> class to the unmanaged code.","source":"Exposes the public members of the <xref href=\"System.Type\"></xref> class to the unmanaged code."}],"pos":[8982,9078],"yaml":true},{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n This interface preserves the vtable order of the <xref:System.Type?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","nodes":[{"pos":[0,111],"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,271],"content":"This interface preserves the vtable order of the <xref:System.Type?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","nodes":[{"content":"This interface preserves the vtable order of the <ph id=\"ph1\">&lt;xref:System.Type?displayProperty=fullName&gt;</ph> class members that can be accessed by unmanaged COM objects.","pos":[0,153],"source":"This interface preserves the vtable order of the <xref:System.Type?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."}]}],"pos":[9089,9365],"yaml":true,"extradata":"MT"},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Assembly\"></xref> property.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.Assembly\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Assembly\"></xref> property."}],"pos":[11036,11148],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.Assembly%2A?displayProperty=fullName> property gets the <xref:System.Reflection.Assembly> in which the type is declared. For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,374],"content":"The <xref:System.Type.Assembly%2A?displayProperty=fullName> property gets the <xref:System.Reflection.Assembly> in which the type is declared. For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined.","nodes":[{"content":"The <xref:System.Type.Assembly%2A?displayProperty=fullName> property gets the <xref:System.Reflection.Assembly> in which the type is declared. For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined.","pos":[0,256],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.Assembly%2A?displayProperty=fullName&gt;</ph> property gets the <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly&gt;</ph> in which the type is declared.","pos":[0,142],"source":"The <xref:System.Type.Assembly%2A?displayProperty=fullName> property gets the <xref:System.Reflection.Assembly> in which the type is declared."},{"content":"For generic types, this property gets the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly&gt;</ph> in which the generic type is defined.","pos":[143,256],"source":" For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined."}]}]}],"pos":[11159,11538],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Reflection.Assembly\"></xref> instance that describes the assembly containing the current type.","nodes":[{"pos":[0,116],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Assembly\"&gt;&lt;/xref&gt;</ph> instance that describes the assembly containing the current type.","source":"An <xref href=\"System.Reflection.Assembly\"></xref> instance that describes the assembly containing the current type."}],"pos":[11683,11800],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.AssemblyQualifiedName\"></xref> property.","nodes":[{"pos":[0,124],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.AssemblyQualifiedName\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.AssemblyQualifiedName\"></xref> property."}],"pos":[12985,13110],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> property gets the assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,340],"content":"The <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> property gets the assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt;</ph> property gets the assembly-qualified name of the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, including the name of the assembly from which the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph> was loaded.","pos":[0,222],"source":"The <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> property gets the assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded."}]}],"pos":[13121,13466],"yaml":true,"extradata":"MT"},{"content":"The assembly-qualified name of the <xref href=\"System.Type\"></xref>, including the name of the assembly from which the <xref href=\"System.Type\"></xref> was loaded.","nodes":[{"pos":[0,163],"content":"The assembly-qualified name of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, including the name of the assembly from which the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> was loaded.","source":"The assembly-qualified name of the <xref href=\"System.Type\"></xref>, including the name of the assembly from which the <xref href=\"System.Type\"></xref> was loaded."}],"pos":[13591,13755],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Attributes\"></xref> property.","nodes":[{"pos":[0,113],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.Attributes\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Attributes\"></xref> property."}],"pos":[14887,15001],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.Attributes%2A?displayProperty=fullName> property gets the attributes associated with the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,248],"content":"The <xref:System.Type.Attributes%2A?displayProperty=fullName> property gets the attributes associated with the <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.Attributes%2A?displayProperty=fullName&gt;</ph> property gets the attributes associated with the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,130],"source":"The <xref:System.Type.Attributes%2A?displayProperty=fullName> property gets the attributes associated with the <xref:System.Type>."}]}],"pos":[15012,15265],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Reflection.TypeAttributes\"></xref> object representing the attribute set of the <xref href=\"System.Type\"></xref>, unless the <xref href=\"System.Type\"></xref> represents a generic type parameter, in which case the value is unspecified.","nodes":[{"pos":[0,255],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.TypeAttributes\"&gt;&lt;/xref&gt;</ph> object representing the attribute set of the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, unless the <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represents a generic type parameter, in which case the value is unspecified.","source":"A <xref href=\"System.Reflection.TypeAttributes\"></xref> object representing the attribute set of the <xref href=\"System.Type\"></xref>, unless the <xref href=\"System.Type\"></xref> represents a generic type parameter, in which case the value is unspecified."}],"pos":[15424,15680],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.BaseType\"></xref> property.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.BaseType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.BaseType\"></xref> property."}],"pos":[16789,16901],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.BaseType%2A?displayProperty=fullName> property gets the type from which the current <xref:System.Type> directly inherits.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,261],"content":"The <xref:System.Type.BaseType%2A?displayProperty=fullName> property gets the type from which the current <xref:System.Type> directly inherits.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.BaseType%2A?displayProperty=fullName&gt;</ph> property gets the type from which the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> directly inherits.","pos":[0,143],"source":"The <xref:System.Type.BaseType%2A?displayProperty=fullName> property gets the type from which the current <xref:System.Type> directly inherits."}]}],"pos":[16912,17178],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> from which the current <xref href=\"System.Type\"></xref> directly inherits, or `null` if the current `Type` represents the <xref href=\"System.Object\"></xref> class.","nodes":[{"pos":[0,200],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> from which the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> directly inherits, or <ph id=\"ph3\">`null`</ph> if the current <ph id=\"ph4\">`Type`</ph> represents the <ph id=\"ph5\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> class.","source":"The <xref href=\"System.Type\"></xref> from which the current <xref href=\"System.Type\"></xref> directly inherits, or `null` if the current `Type` represents the <xref href=\"System.Object\"></xref> class."}],"pos":[17286,17487],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.DeclaringType\"></xref> property.","nodes":[{"pos":[0,116],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.DeclaringType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.DeclaringType\"></xref> property."}],"pos":[18624,18741],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.DeclaringType%2A?displayProperty=fullName> property gets the class that declares this member.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,233],"content":"The <xref:System.Type.DeclaringType%2A?displayProperty=fullName> property gets the class that declares this member.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.DeclaringType%2A?displayProperty=fullName&gt;</ph> property gets the class that declares this member.","pos":[0,115],"source":"The <xref:System.Type.DeclaringType%2A?displayProperty=fullName> property gets the class that declares this member."}]}],"pos":[18752,18990],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> object for the class that declares this member. If the type is a nested type, this property returns the enclosing type.","nodes":[{"pos":[0,156],"content":"The <xref href=\"System.Type\"></xref> object for the class that declares this member. If the type is a nested type, this property returns the enclosing type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object for the class that declares this member.","pos":[0,84],"source":"The <xref href=\"System.Type\"></xref> object for the class that declares this member."},{"content":"If the type is a nested type, this property returns the enclosing type.","pos":[85,156]}]}],"pos":[19103,19260],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Equals(System.Object)\"></xref> method.","nodes":[{"pos":[0,122],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.Equals(System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Equals(System.Object)\"></xref> method."}],"pos":[20427,20550],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,336],"content":"The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt;</ph> method determines if the underlying system type of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is the same as the underlying system type of the specified <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph>.","pos":[0,220],"source":"The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object>."}]}],"pos":[20561,20902],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> whose underlying system type is to be compared with the underlying system type of the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> whose underlying system type is to be compared with the underlying system type of the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> whose underlying system type is to be compared with the underlying system type of the current <xref href=\"System.Type\"></xref>."}],"pos":[21037,21204],"yaml":true},{"content":"`true` if the underlying system type of <code>o</code> is the same as the underlying system type of the current <xref href=\"System.Type\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,165],"content":"<ph id=\"ph1\">`true`</ph> if the underlying system type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the same as the underlying system type of the current <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the underlying system type of <code>o</code> is the same as the underlying system type of the current <xref href=\"System.Type\"></xref>; otherwise, `false`."}],"pos":[21262,21430],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Equals(System.Type)\"></xref> method.","nodes":[{"pos":[0,120],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.Equals(System.Type)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Equals(System.Type)\"></xref> method."}],"pos":[22578,22699],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,334],"content":"The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt;</ph> method determines if the underlying system type of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is the same as the underlying system type of the specified <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","pos":[0,218],"source":"The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Type>."}]}],"pos":[22710,23049],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> whose underlying system type is to be compared with the underlying system type of the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> whose underlying system type is to be compared with the underlying system type of the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Type\"></xref> whose underlying system type is to be compared with the underlying system type of the current <xref href=\"System.Type\"></xref>."}],"pos":[23172,23337],"yaml":true},{"content":"`true` if the underlying system type of <code>o</code> is the same as the underlying system type of the current <xref href=\"System.Type\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,165],"content":"<ph id=\"ph1\">`true`</ph> if the underlying system type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the same as the underlying system type of the current <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the underlying system type of <code>o</code> is the same as the underlying system type of the current <xref href=\"System.Type\"></xref>; otherwise, `false`."}],"pos":[23395,23563],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\"></xref> method.","nodes":[{"pos":[0,159],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\"></xref> method."}],"pos":[24894,25054],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method returns an array of <xref:System.Type> objects representing a filtered list of interfaces implemented or inherited by the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,338],"content":"The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method returns an array of <xref:System.Type> objects representing a filtered list of interfaces implemented or inherited by the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.FindInterfaces%2A?displayProperty=fullName&gt;</ph> method returns an array of <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> objects representing a filtered list of interfaces implemented or inherited by the current <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","pos":[0,222],"source":"The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method returns an array of <xref:System.Type> objects representing a filtered list of interfaces implemented or inherited by the current <xref:System.Type>."}]}],"pos":[25065,25408],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.TypeFilter\"></xref> delegate that compares the interfaces against <code>filterCriteria</code>.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.TypeFilter\"&gt;&lt;/xref&gt;</ph> delegate that compares the interfaces against <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">filterCriteria</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Reflection.TypeFilter\"></xref> delegate that compares the interfaces against <code>filterCriteria</code>."}],"pos":[25615,25744],"yaml":true},{"content":"The search criteria that determines whether an interface should be included in the returned array.","nodes":[{"pos":[0,98],"content":"The search criteria that determines whether an interface should be included in the returned array.","nodes":[{"content":"The search criteria that determines whether an interface should be included in the returned array.","pos":[0,98]}]}],"pos":[25814,25913],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing a filtered list of the interfaces implemented or inherited by the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Type\"></xref>, if no interfaces matching the filter are implemented or inherited by the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,173],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing a filtered list of the interfaces implemented or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Type\"></xref> objects representing a filtered list of the interfaces implemented or inherited by the current <xref href=\"System.Type\"></xref>."},{"pos":[180,184],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[191,362],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, if no interfaces matching the filter are implemented or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An empty array of type <xref href=\"System.Type\"></xref>, if no interfaces matching the filter are implemented or inherited by the current <xref href=\"System.Type\"></xref>."}],"pos":[25970,26347],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\"></xref> method.","nodes":[{"pos":[0,219],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\"></xref> method."}],"pos":[27944,28164],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.FindMembers%2A?displayProperty=fullName> method returns a filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,287],"content":"The <xref:System.Type.FindMembers%2A?displayProperty=fullName> method returns a filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.FindMembers%2A?displayProperty=fullName&gt;</ph> method returns a filtered array of <ph id=\"ph2\">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects of the specified member type.","pos":[0,171],"source":"The <xref:System.Type.FindMembers%2A?displayProperty=fullName> method returns a filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type."}]}],"pos":[28175,28467],"yaml":true,"extradata":"MT"},{"content":"A `MemberTypes` object indicating the type of member to search for.","nodes":[{"pos":[0,67],"content":"A <ph id=\"ph1\">`MemberTypes`</ph> object indicating the type of member to search for.","source":"A `MemberTypes` object indicating the type of member to search for."}],"pos":[28788,28856],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[28940,29118],"yaml":true},{"content":"The delegate that does the comparisons, returning `true` if the member currently being inspected matches the <code>filterCriteria</code> and `false` otherwise. You can use the `FilterAttribute`, `FilterName`, and `FilterNameIgnoreCase` delegates supplied by this class. The first uses the fields of `FieldAttributes`, `MethodAttributes`, and `MethodImplAttributes` as search criteria, and the other two delegates use `String` objects as the search criteria.","nodes":[{"pos":[0,457],"content":"The delegate that does the comparisons, returning `true` if the member currently being inspected matches the <code>filterCriteria</code> and `false` otherwise. You can use the `FilterAttribute`, `FilterName`, and `FilterNameIgnoreCase` delegates supplied by this class. The first uses the fields of `FieldAttributes`, `MethodAttributes`, and `MethodImplAttributes` as search criteria, and the other two delegates use `String` objects as the search criteria.","nodes":[{"content":"The delegate that does the comparisons, returning <ph id=\"ph1\">`true`</ph> if the member currently being inspected matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">filterCriteria</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <ph id=\"ph3\">`false`</ph> otherwise.","pos":[0,159],"source":"The delegate that does the comparisons, returning `true` if the member currently being inspected matches the <code>filterCriteria</code> and `false` otherwise."},{"content":"You can use the <ph id=\"ph1\">`FilterAttribute`</ph>, <ph id=\"ph2\">`FilterName`</ph>, and <ph id=\"ph3\">`FilterNameIgnoreCase`</ph> delegates supplied by this class.","pos":[160,269],"source":" You can use the `FilterAttribute`, `FilterName`, and `FilterNameIgnoreCase` delegates supplied by this class."},{"content":"The first uses the fields of <ph id=\"ph1\">`FieldAttributes`</ph>, <ph id=\"ph2\">`MethodAttributes`</ph>, and <ph id=\"ph3\">`MethodImplAttributes`</ph> as search criteria, and the other two delegates use <ph id=\"ph4\">`String`</ph> objects as the search criteria.","pos":[270,457],"source":" The first uses the fields of `FieldAttributes`, `MethodAttributes`, and `MethodImplAttributes` as search criteria, and the other two delegates use `String` objects as the search criteria."}]}],"pos":[29197,29655],"yaml":true},{"content":"The search criteria that determines whether a member is returned in the array of `MemberInfo` objects.  \n  \n The fields of `FieldAttributes`, `MethodAttributes`, and `MethodImplAttributes` can be used in conjunction with the `FilterAttribute` delegate supplied by this class.","nodes":[{"pos":[0,102],"content":"The search criteria that determines whether a member is returned in the array of <ph id=\"ph1\">`MemberInfo`</ph> objects.","source":"The search criteria that determines whether a member is returned in the array of `MemberInfo` objects."},{"pos":[109,275],"content":"The fields of <ph id=\"ph1\">`FieldAttributes`</ph>, <ph id=\"ph2\">`MethodAttributes`</ph>, and <ph id=\"ph3\">`MethodImplAttributes`</ph> can be used in conjunction with the <ph id=\"ph4\">`FilterAttribute`</ph> delegate supplied by this class.","source":"The fields of `FieldAttributes`, `MethodAttributes`, and `MethodImplAttributes` can be used in conjunction with the `FilterAttribute` delegate supplied by this class."}],"pos":[29725,30005],"yaml":true},{"content":"A filtered array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects of the specified member type.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.MemberInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have members of type <code>memberType</code> that match the filter criteria.","nodes":[{"pos":[0,107],"content":"A filtered array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects of the specified member type.","source":"A filtered array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects of the specified member type."},{"pos":[114,118],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[125,332],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph>, if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> does not have members of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">memberType</ph><ept id=\"p1\">&lt;/code&gt;</ept> that match the filter criteria.","source":"An empty array of type <xref href=\"System.Reflection.MemberInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have members of type <code>memberType</code> that match the filter criteria."}],"pos":[30079,30424],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.FullName\"></xref> property.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.FullName\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.FullName\"></xref> property."}],"pos":[31534,31646],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.FullName%2A?displayProperty=fullName> property gets the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,315],"content":"The <xref:System.Type.FullName%2A?displayProperty=fullName> property gets the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.FullName%2A?displayProperty=fullName&gt;</ph> property gets the fully qualified name of the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, including the namespace of the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph> but not the assembly.","pos":[0,197],"source":"The <xref:System.Type.FullName%2A?displayProperty=fullName> property gets the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly."}]}],"pos":[31657,31977],"yaml":true,"extradata":"MT"},{"content":"A string containing the fully qualified name of the <xref href=\"System.Type\"></xref>, including the namespace of the <xref href=\"System.Type\"></xref> but not the assembly.","nodes":[{"pos":[0,171],"content":"A string containing the fully qualified name of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, including the namespace of the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> but not the assembly.","source":"A string containing the fully qualified name of the <xref href=\"System.Type\"></xref>, including the namespace of the <xref href=\"System.Type\"></xref> but not the assembly."}],"pos":[32089,32261],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetArrayRank\"></xref> method.","nodes":[{"pos":[0,113],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetArrayRank\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetArrayRank\"></xref> method."}],"pos":[33396,33510],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetArrayRank%2A?displayProperty=fullName> method gets the number of dimensions in an <xref:System.Array>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,243],"content":"The <xref:System.Type.GetArrayRank%2A?displayProperty=fullName> method gets the number of dimensions in an <xref:System.Array>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetArrayRank%2A?displayProperty=fullName&gt;</ph> method gets the number of dimensions in an <ph id=\"ph2\">&lt;xref:System.Array&gt;</ph>.","pos":[0,127],"source":"The <xref:System.Type.GetArrayRank%2A?displayProperty=fullName> method gets the number of dimensions in an <xref:System.Array>."}]}],"pos":[33521,33769],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> containing the number of dimensions in the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,121],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> containing the number of dimensions in the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Int32\"></xref> containing the number of dimensions in the current <xref href=\"System.Type\"></xref>."}],"pos":[33895,34017],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.","nodes":[{"pos":[0,261],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method."}],"pos":[35813,36075],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,360],"content":"The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt;</ph> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.","pos":[0,244],"source":"The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention."}]}],"pos":[36086,36451],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[36825,37003],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \n  \n -or-  \n  \n `null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>.","nodes":[{"pos":[0,236],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.","source":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection."},{"pos":[243,247],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[254,320],"content":"<ph id=\"ph1\">`null`</ph>, to use the <ph id=\"ph2\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph>.","source":"`null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>."}],"pos":[37076,37407],"yaml":true},{"content":"The <xref href=\"System.Reflection.CallingConventions\"></xref> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up.","nodes":[{"pos":[0,252],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CallingConventions\"&gt;&lt;/xref&gt;</ph> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up.","source":"The <xref href=\"System.Reflection.CallingConventions\"></xref> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up."}],"pos":[37500,37753],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the constructor to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.","nodes":[{"pos":[0,139],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the constructor to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the constructor to get."},{"pos":[146,150],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[157,301],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters."}],"pos":[37814,38126],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"pos":[0,231],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","pos":[0,179],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array."},{"content":"The default binder does not process this parameter.","pos":[180,231]}]}],"pos":[38215,38447],"yaml":true},{"content":"A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the constructor that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,162],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> object representing the constructor that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the constructor that matches the specified requirements, if found; otherwise, `null`."}],"pos":[38524,38687],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.","nodes":[{"pos":[0,224],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method."}],"pos":[40314,40539],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,323],"content":"The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt;</ph> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.","pos":[0,207],"source":"The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints."}]}],"pos":[40550,40878],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[41199,41377],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \n  \n -or-  \n  \n `null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>.","nodes":[{"pos":[0,236],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.","source":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection."},{"pos":[243,247],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[254,320],"content":"<ph id=\"ph1\">`null`</ph>, to use the <ph id=\"ph2\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph>.","source":"`null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>."}],"pos":[41450,41781],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the constructor to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.  \n  \n -or-  \n  \n <xref href=\"System.Type.EmptyTypes\"></xref>.","nodes":[{"pos":[0,139],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the constructor to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the constructor to get."},{"pos":[146,150],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[157,301],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters."},{"pos":[308,312],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[319,363],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Type.EmptyTypes\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Type.EmptyTypes\"></xref>."}],"pos":[41842,42222],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the parameter type array. The default binder does not process this parameter.","nodes":[{"pos":[0,227],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the parameter type array. The default binder does not process this parameter.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects representing the attributes associated with the corresponding element in the parameter type array.","pos":[0,175],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the parameter type array."},{"content":"The default binder does not process this parameter.","pos":[176,227]}]}],"pos":[42311,42539],"yaml":true},{"content":"A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the constructor that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,162],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> object representing the constructor that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the constructor that matches the specified requirements, if found; otherwise, `null`."}],"pos":[42616,42779],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Type[])\"></xref> method.","nodes":[{"pos":[0,130],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetConstructor(System.Type[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Type[])\"></xref> method."}],"pos":[43995,44126],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a public instance constructor whose parameters match the types in the specified array.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,288],"content":"The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a public instance constructor whose parameters match the types in the specified array.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt;</ph> method searches for a public instance constructor whose parameters match the types in the specified array.","pos":[0,172],"source":"The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a public instance constructor whose parameters match the types in the specified array."}]}],"pos":[44137,44430],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the desired constructor.  \n  \n -or-  \n  \n An empty array of <xref href=\"System.Type\"></xref> objects, to get a constructor that takes no parameters. Such an empty array is provided by the `static` field <xref href=\"System.Type.EmptyTypes\"></xref>.","nodes":[{"pos":[0,140],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the desired constructor.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the desired constructor."},{"pos":[147,151],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[158,363],"content":"An empty array of <xref href=\"System.Type\"></xref> objects, to get a constructor that takes no parameters. Such an empty array is provided by the `static` field <xref href=\"System.Type.EmptyTypes\"></xref>.","nodes":[{"content":"An empty array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects, to get a constructor that takes no parameters.","pos":[0,106],"source":"An empty array of <xref href=\"System.Type\"></xref> objects, to get a constructor that takes no parameters."},{"content":"Such an empty array is provided by the <ph id=\"ph1\">`static`</ph> field <ph id=\"ph2\">&lt;xref href=\"System.Type.EmptyTypes\"&gt;&lt;/xref&gt;</ph>.","pos":[107,205],"source":" Such an empty array is provided by the `static` field <xref href=\"System.Type.EmptyTypes\"></xref>."}]}],"pos":[44602,44978],"yaml":true},{"content":"A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, `null`.","nodes":[{"pos":[0,199],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, `null`."}],"pos":[45055,45255],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructors\"></xref> method.","nodes":[{"pos":[0,116],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetConstructors\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructors\"></xref> method."}],"pos":[46414,46531],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method returns all the public constructors defined for the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,269],"content":"The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method returns all the public constructors defined for the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt;</ph> method returns all the public constructors defined for the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,153],"source":"The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method returns all the public constructors defined for the current <xref:System.Type>."}]}],"pos":[46542,46816],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects representing all the public instance constructors defined for the current <xref href=\"System.Type\"></xref>, but not including the type initializer (static constructor). If no public instance constructors are defined for the current <xref href=\"System.Type\"></xref>, or if the current <xref href=\"System.Type\"></xref> represents a type parameter of a generic type or method definition, an empty array of type <xref href=\"System.Reflection.ConstructorInfo\"></xref> is returned.","nodes":[{"pos":[0,550],"content":"An array of <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects representing all the public instance constructors defined for the current <xref href=\"System.Type\"></xref>, but not including the type initializer (static constructor). If no public instance constructors are defined for the current <xref href=\"System.Type\"></xref>, or if the current <xref href=\"System.Type\"></xref> represents a type parameter of a generic type or method definition, an empty array of type <xref href=\"System.Reflection.ConstructorInfo\"></xref> is returned.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> objects representing all the public instance constructors defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, but not including the type initializer (static constructor).","pos":[0,243],"source":"An array of <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects representing all the public instance constructors defined for the current <xref href=\"System.Type\"></xref>, but not including the type initializer (static constructor)."},{"content":"If no public instance constructors are defined for the current <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, or if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represents a type parameter of a generic type or method definition, an empty array of type <ph id=\"ph3\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> is returned.","pos":[244,550],"source":" If no public instance constructors are defined for the current <xref href=\"System.Type\"></xref>, or if the current <xref href=\"System.Type\"></xref> represents a type parameter of a generic type or method definition, an empty array of type <xref href=\"System.Reflection.ConstructorInfo\"></xref> is returned."}]}],"pos":[47000,47551],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructors(System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,148],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetConstructors(System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructors(System.Reflection.BindingFlags)\"></xref> method."}],"pos":[48843,48992],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method searches for the constructors defined for the current <xref:System.Type>, using the specified <xref:System.Reflection.BindingFlags>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,322],"content":"The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method searches for the constructors defined for the current <xref:System.Type>, using the specified <xref:System.Reflection.BindingFlags>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt;</ph> method searches for the constructors defined for the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, using the specified <ph id=\"ph3\">&lt;xref:System.Reflection.BindingFlags&gt;</ph>.","pos":[0,206],"source":"The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method searches for the constructors defined for the current <xref:System.Type>, using the specified <xref:System.Reflection.BindingFlags>."}]}],"pos":[49003,49330],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[49558,49736],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects representing all constructors defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints, including the type initializer if it is defined. Returns an empty array of type <xref href=\"System.Reflection.ConstructorInfo\"></xref> if no constructors are defined for the current <xref href=\"System.Type\"></xref>, if none of the defined constructors match the binding constraints, or if the current <xref href=\"System.Type\"></xref> represents a type parameter of a generic type or method definition.","nodes":[{"pos":[0,609],"content":"An array of <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects representing all constructors defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints, including the type initializer if it is defined. Returns an empty array of type <xref href=\"System.Reflection.ConstructorInfo\"></xref> if no constructors are defined for the current <xref href=\"System.Type\"></xref>, if none of the defined constructors match the binding constraints, or if the current <xref href=\"System.Type\"></xref> represents a type parameter of a generic type or method definition.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> objects representing all constructors defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that match the specified binding constraints, including the type initializer if it is defined.","pos":[0,256],"source":"An array of <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects representing all constructors defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints, including the type initializer if it is defined."},{"content":"Returns an empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> if no constructors are defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, if none of the defined constructors match the binding constraints, or if the current <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represents a type parameter of a generic type or method definition.","pos":[257,609],"source":" Returns an empty array of type <xref href=\"System.Reflection.ConstructorInfo\"></xref> if no constructors are defined for the current <xref href=\"System.Type\"></xref>, if none of the defined constructors match the binding constraints, or if the current <xref href=\"System.Type\"></xref> represents a type parameter of a generic type or method definition."}]}],"pos":[49815,50425],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\"></xref> method.","nodes":[{"pos":[0,151],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\"></xref> method."}],"pos":[51678,51830],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,255],"content":"The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> method returns all attributes applied to this member.","pos":[0,139],"source":"The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member."}]}],"pos":[51841,52101],"yaml":true,"extradata":"MT"},{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","nodes":[{"pos":[0,83],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]}],"pos":[52256,52340],"yaml":true},{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","nodes":[{"pos":[0,124],"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","nodes":[{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","pos":[0,124]}]}],"pos":[52399,52524],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,165],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method."}],"pos":[53835,54001],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,257],"content":"The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> method returns all attributes applied to this member.","pos":[0,141],"source":"The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member."}]}],"pos":[54012,54274],"yaml":true,"extradata":"MT"},{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","nodes":[{"pos":[0,99],"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","nodes":[{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","pos":[0,99],"nodes":[{"content":"The type of attribute to search for.","pos":[0,36]},{"content":"Only attributes that are assignable to this type are returned.","pos":[37,99]}]}]}],"pos":[54452,54552],"yaml":true},{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","nodes":[{"pos":[0,83],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]}],"pos":[54616,54700],"yaml":true},{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","nodes":[{"pos":[0,124],"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","nodes":[{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","pos":[0,124]}]}],"pos":[54759,54884],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetDefaultMembers\"></xref> method.","nodes":[{"pos":[0,118],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetDefaultMembers\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetDefaultMembers\"></xref> method."}],"pos":[56060,56179],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type> whose <xref:System.Reflection.DefaultMemberAttribute> is set.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,321],"content":"The <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type> whose <xref:System.Reflection.DefaultMemberAttribute> is set.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName&gt;</ph> method searches for the members defined for the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> whose <ph id=\"ph3\">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> is set.","pos":[0,205],"source":"The <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type> whose <xref:System.Reflection.DefaultMemberAttribute> is set."}]}],"pos":[56190,56516],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing all default members of the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.MemberInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have default members.","nodes":[{"pos":[0,151],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects representing all default members of the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing all default members of the current <xref href=\"System.Type\"></xref>."},{"pos":[158,162],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[169,321],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph>, if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> does not have default members.","source":"An empty array of type <xref href=\"System.Reflection.MemberInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have default members."}],"pos":[56692,57028],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetElementType\"></xref> method.","nodes":[{"pos":[0,115],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetElementType\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetElementType\"></xref> method."}],"pos":[58184,58300],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetElementType%2A?displayProperty=fullName> method returns the <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,309],"content":"The <xref:System.Type.GetElementType%2A?displayProperty=fullName> method returns the <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetElementType%2A?displayProperty=fullName&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> of the object encompassed or referred to by the current array, pointer or reference type.","pos":[0,193],"source":"The <xref:System.Type.GetElementType%2A?displayProperty=fullName> method returns the <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type."}]}],"pos":[58311,58625],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of the object encompassed or referred to by the current array, pointer or reference type.  \n  \n -or-  \n  \n `null` if the current <xref href=\"System.Type\"></xref> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the object encompassed or referred to by the current array, pointer or reference type.","source":"The <xref href=\"System.Type\"></xref> of the object encompassed or referred to by the current array, pointer or reference type."},{"pos":[133,137],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[144,348],"content":"<ph id=\"ph1\">`null`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition.","source":"`null` if the current <xref href=\"System.Type\"></xref> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition."}],"pos":[58753,59112],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvent(System.String)\"></xref> method.","nodes":[{"pos":[0,124],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetEvent(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvent(System.String)\"></xref> method."}],"pos":[60292,60417],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,309],"content":"The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt;</ph> method searches for events that are declared or inherited by the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.","pos":[0,193],"source":"The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints."}]}],"pos":[60428,60742],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[60900,61078],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.EventInfo\"></xref> objects representing all events that are declared or inherited by the current <xref href=\"System.Type\"></xref> that match the specified binding constraints.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.EventInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have events, or if none of the events match the binding constraints.","nodes":[{"pos":[0,217],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> objects representing all events that are declared or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that match the specified binding constraints.","source":"An array of <xref href=\"System.Reflection.EventInfo\"></xref> objects representing all events that are declared or inherited by the current <xref href=\"System.Type\"></xref> that match the specified binding constraints."},{"pos":[224,228],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[235,433],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph>, if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> does not have events, or if none of the events match the binding constraints.","source":"An empty array of type <xref href=\"System.Reflection.EventInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have events, or if none of the events match the binding constraints."}],"pos":[61149,61597],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,155],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\"></xref> method."}],"pos":[62906,63062],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method returns the <xref:System.Reflection.EventInfo> object representing the specified event, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,311],"content":"The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method returns the <xref:System.Reflection.EventInfo> object representing the specified event, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Reflection.EventInfo&gt;</ph> object representing the specified event, using the specified binding constraints.","pos":[0,195],"source":"The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method returns the <xref:System.Reflection.EventInfo> object representing the specified event, using the specified binding constraints."}]}],"pos":[63073,63389],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of an event that is declared or inherited by the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of an event that is declared or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.String\"></xref> containing the name of an event that is declared or inherited by the current <xref href=\"System.Type\"></xref>."}],"pos":[63591,63741],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[63825,64003],"yaml":true},{"content":"The <xref href=\"System.Reflection.EventInfo\"></xref> object representing the specified event that is declared or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`.","nodes":[{"pos":[0,200],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> object representing the specified event that is declared or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"The <xref href=\"System.Reflection.EventInfo\"></xref> object representing the specified event that is declared or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`."}],"pos":[64074,64275],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvents\"></xref> method.","nodes":[{"pos":[0,110],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetEvents\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvents\"></xref> method."}],"pos":[65392,65503],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method returns all the public events that are declared or inherited by the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,279],"content":"The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method returns all the public events that are declared or inherited by the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt;</ph> method returns all the public events that are declared or inherited by the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,163],"source":"The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method returns all the public events that are declared or inherited by the current <xref:System.Type>."}]}],"pos":[65514,65798],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Reflection.EventInfo\"></xref> objects representing all the public events that are declared or inherited by the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.EventInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have public events.","nodes":[{"pos":[0,183],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> objects representing all the public events that are declared or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Reflection.EventInfo\"></xref> objects representing all the public events that are declared or inherited by the current <xref href=\"System.Type\"></xref>."},{"pos":[190,194],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[201,350],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph>, if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> does not have public events.","source":"An empty array of type <xref href=\"System.Reflection.EventInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have public events."}],"pos":[65964,66329],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvents(System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,142],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetEvents(System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvents(System.Reflection.BindingFlags)\"></xref> method."}],"pos":[67579,67722],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,310],"content":"The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt;</ph> method searches for events that are declared or inherited by the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.","pos":[0,194],"source":"The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints."}]}],"pos":[67733,68048],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[68264,68442],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.EventInfo\"></xref> objects representing all events that are declared or inherited by the current <xref href=\"System.Type\"></xref> that match the specified binding constraints.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.EventInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have events, or if none of the events match the binding constraints.","nodes":[{"pos":[0,217],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> objects representing all events that are declared or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that match the specified binding constraints.","source":"An array of <xref href=\"System.Reflection.EventInfo\"></xref> objects representing all events that are declared or inherited by the current <xref href=\"System.Type\"></xref> that match the specified binding constraints."},{"pos":[224,228],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[235,433],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph>, if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> does not have events, or if none of the events match the binding constraints.","source":"An empty array of type <xref href=\"System.Reflection.EventInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have events, or if none of the events match the binding constraints."}],"pos":[68515,68963],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetField(System.String)\"></xref> method.","nodes":[{"pos":[0,124],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetField(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetField(System.String)\"></xref> method."}],"pos":[70138,70263],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the public field with the specified name.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,237],"content":"The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the public field with the specified name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt;</ph> method searches for the public field with the specified name.","pos":[0,121],"source":"The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the public field with the specified name."}]}],"pos":[70274,70516],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the data field to get.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the data field to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the data field to get."}],"pos":[70674,70759],"yaml":true},{"content":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the public field with the specified name, if found; otherwise, `null`.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> object representing the public field with the specified name, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the public field with the specified name, if found; otherwise, `null`."}],"pos":[70830,70972],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetField(System.String,System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,155],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetField(System.String,System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetField(System.String,System.Reflection.BindingFlags)\"></xref> method."}],"pos":[72281,72437],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the specified field, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,257],"content":"The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the specified field, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt;</ph> method searches for the specified field, using the specified binding constraints.","pos":[0,141],"source":"The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the specified field, using the specified binding constraints."}]}],"pos":[72448,72710],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the data field to get.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the data field to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the data field to get."}],"pos":[72912,72997],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[73081,73259],"yaml":true},{"content":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the field that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,150],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> object representing the field that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the field that matches the specified requirements, if found; otherwise, `null`."}],"pos":[73330,73481],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetFields(System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,142],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetFields(System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetFields(System.Reflection.BindingFlags)\"></xref> method."}],"pos":[74730,74873],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetFields%2A?displayProperty=fullName> method searches for the fields defined for the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,292],"content":"The <xref:System.Type.GetFields%2A?displayProperty=fullName> method searches for the fields defined for the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt;</ph> method searches for the fields defined for the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.","pos":[0,176],"source":"The <xref:System.Type.GetFields%2A?displayProperty=fullName> method searches for the fields defined for the current <xref:System.Type>, using the specified binding constraints."}]}],"pos":[74884,75181],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[75397,75575],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects representing all fields defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.FieldInfo\"></xref>, if no fields are defined for the current <xref href=\"System.Type\"></xref>, or if none of the defined fields match the binding constraints.","nodes":[{"pos":[0,195],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> objects representing all fields defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that match the specified binding constraints.","source":"An array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects representing all fields defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints."},{"pos":[202,206],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[213,424],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph>, if no fields are defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, or if none of the defined fields match the binding constraints.","source":"An empty array of type <xref href=\"System.Reflection.FieldInfo\"></xref>, if no fields are defined for the current <xref href=\"System.Type\"></xref>, or if none of the defined fields match the binding constraints."}],"pos":[75648,76087],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetFields\"></xref> method.","nodes":[{"pos":[0,110],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetFields\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetFields\"></xref> method."}],"pos":[77205,77316],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetFields%2A?displayProperty=fullName> method returns all the public fields of the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,248],"content":"The <xref:System.Type.GetFields%2A?displayProperty=fullName> method returns all the public fields of the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt;</ph> method returns all the public fields of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,132],"source":"The <xref:System.Type.GetFields%2A?displayProperty=fullName> method returns all the public fields of the current <xref:System.Type>."}]}],"pos":[77327,77580],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects representing all the public fields defined for the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.FieldInfo\"></xref>, if no public fields are defined for the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,161],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> objects representing all the public fields defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Reflection.FieldInfo\"></xref> objects representing all the public fields defined for the current <xref href=\"System.Type\"></xref>."},{"pos":[168,172],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[179,333],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph>, if no public fields are defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An empty array of type <xref href=\"System.Reflection.FieldInfo\"></xref>, if no public fields are defined for the current <xref href=\"System.Type\"></xref>."}],"pos":[77746,78094],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetHashCode\"></xref> method.","nodes":[{"pos":[0,112],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetHashCode\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetHashCode\"></xref> method."}],"pos":[79224,79337],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetHashCode%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,186],"content":"The <xref:System.Type.GetHashCode%2A?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetHashCode%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,70],"source":"The <xref:System.Type.GetHashCode%2A?displayProperty=fullName> method."}]}],"pos":[79348,79539],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> containing the hash code for this instance.","nodes":[{"pos":[0,80],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> containing the hash code for this instance.","source":"An <xref href=\"System.Int32\"></xref> containing the hash code for this instance."}],"pos":[79664,79745],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[81207,81275],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[81286,81473],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[81672,81715],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[81780,81819],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[81881,81914],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[81974,82026],"yaml":true},{"content":"Caller-allocated array that receives the IDs corresponding to the names.","nodes":[{"pos":[0,72],"content":"Caller-allocated array that receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array that receives the IDs corresponding to the names.","pos":[0,72]}]}],"pos":[82090,82163],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterface(System.String)\"></xref> method.","nodes":[{"pos":[0,128],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetInterface(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterface(System.String)\"></xref> method."}],"pos":[83366,83495],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the interface with the specified name..","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,239],"content":"The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the interface with the specified name..","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt;</ph> method searches for the interface with the specified name..","pos":[0,123],"source":"The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the interface with the specified name.."}]}],"pos":[83506,83750],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the interface to get. For generic interfaces, this is the mangled name.","nodes":[{"pos":[0,133],"content":"The <xref href=\"System.String\"></xref> containing the name of the interface to get. For generic interfaces, this is the mangled name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the interface to get.","pos":[0,83],"source":"The <xref href=\"System.String\"></xref> containing the name of the interface to get."},{"content":"For generic interfaces, this is the mangled name.","pos":[84,133]}]}],"pos":[83889,84023],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> object representing the interface with the specified name, implemented or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`.","nodes":[{"pos":[0,196],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the interface with the specified name, implemented or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.Type\"></xref> object representing the interface with the specified name, implemented or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`."}],"pos":[84078,84275],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterface(System.String,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,143],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetInterface(System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterface(System.String,System.Boolean)\"></xref> method."}],"pos":[85549,85693],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the specified interface, specifying whether to do a case-sensitive search.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,274],"content":"The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the specified interface, specifying whether to do a case-sensitive search.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt;</ph> method searches for the specified interface, specifying whether to do a case-sensitive search.","pos":[0,158],"source":"The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the specified interface, specifying whether to do a case-sensitive search."}]}],"pos":[85704,85983],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the interface to get. For generic interfaces, this is the mangled name.","nodes":[{"pos":[0,133],"content":"The <xref href=\"System.String\"></xref> containing the name of the interface to get. For generic interfaces, this is the mangled name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the interface to get.","pos":[0,83],"source":"The <xref href=\"System.String\"></xref> containing the name of the interface to get."},{"content":"For generic interfaces, this is the mangled name.","pos":[84,133]}]}],"pos":[86139,86273],"yaml":true},{"content":"`true` to perform a case-insensitive search for <code>name</code>.  \n  \n -or-  \n  \n `false` to perform a case-sensitive search for <code>name</code>.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> to perform a case-insensitive search for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"`true` to perform a case-insensitive search for <code>name</code>."},{"pos":[73,77],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[84,149],"content":"<ph id=\"ph1\">`false`</ph> to perform a case-sensitive search for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"`false` to perform a case-sensitive search for <code>name</code>."}],"pos":[86340,86496],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> object representing the interface with the specified name, implemented or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`.","nodes":[{"pos":[0,196],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the interface with the specified name, implemented or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.Type\"></xref> object representing the interface with the specified name, implemented or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`."}],"pos":[86551,86748],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterfaceMap(System.Type)\"></xref> method.","nodes":[{"pos":[0,129],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetInterfaceMap(System.Type)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterfaceMap(System.Type)\"></xref> method."}],"pos":[87956,88086],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName> method returns an interface mapping for the specified interface type.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,252],"content":"The <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName> method returns an interface mapping for the specified interface type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName&gt;</ph> method returns an interface mapping for the specified interface type.","pos":[0,136],"source":"The <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName> method returns an interface mapping for the specified interface type."}]}],"pos":[88097,88354],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of the interface of which to retrieve a mapping.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the interface of which to retrieve a mapping.","source":"The <xref href=\"System.Type\"></xref> of the interface of which to retrieve a mapping."}],"pos":[88540,88626],"yaml":true},{"content":"An <xref href=\"System.Reflection.InterfaceMapping\"></xref> object representing the interface mapping for <code>interfaceType</code>.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Reflection.InterfaceMapping\"&gt;&lt;/xref&gt;</ph> object representing the interface mapping for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">interfaceType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.Reflection.InterfaceMapping\"></xref> object representing the interface mapping for <code>interfaceType</code>."}],"pos":[88704,88837],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterfaces\"></xref> method.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetInterfaces\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterfaces\"></xref> method."}],"pos":[89985,90100],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetInterfaces%2A?displayProperty=fullName> method gets all the interfaces implemented or inherited by the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,271],"content":"The <xref:System.Type.GetInterfaces%2A?displayProperty=fullName> method gets all the interfaces implemented or inherited by the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetInterfaces%2A?displayProperty=fullName&gt;</ph> method gets all the interfaces implemented or inherited by the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,155],"source":"The <xref:System.Type.GetInterfaces%2A?displayProperty=fullName> method gets all the interfaces implemented or inherited by the current <xref:System.Type>."}]}],"pos":[90111,90387],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing all the interfaces implemented or inherited by the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Type\"></xref>, if no interfaces are implemented or inherited by the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,158],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing all the interfaces implemented or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Type\"></xref> objects representing all the interfaces implemented or inherited by the current <xref href=\"System.Type\"></xref>."},{"pos":[165,169],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[176,327],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, if no interfaces are implemented or inherited by the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An empty array of type <xref href=\"System.Type\"></xref>, if no interfaces are implemented or inherited by the current <xref href=\"System.Type\"></xref>."}],"pos":[90518,90860],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String)\"></xref> method.","nodes":[{"pos":[0,125],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMember(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String)\"></xref> method."}],"pos":[92045,92171],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the public members with the specified name.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,240],"content":"The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the public members with the specified name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt;</ph> method searches for the public members with the specified name.","pos":[0,124],"source":"The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the public members with the specified name."}]}],"pos":[92182,92427],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public members to get.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public members to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public members to get."}],"pos":[92589,92678],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array.","nodes":[{"pos":[0,163],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.","source":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array."}],"pos":[92752,92916],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String,System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,156],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMember(System.String,System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String,System.Reflection.BindingFlags)\"></xref> method."}],"pos":[94232,94389],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,260],"content":"The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt;</ph> method searches for the specified members, using the specified binding constraints.","pos":[0,144],"source":"The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members, using the specified binding constraints."}]}],"pos":[94400,94665],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the members to get.","nodes":[{"pos":[0,81],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the members to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the members to get."}],"pos":[94871,94953],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return an empty array.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,177],"content":"Zero, to return an empty array.","nodes":[{"content":"Zero, to return an empty array.","pos":[0,31]}]}],"pos":[95037,95223],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array.","nodes":[{"pos":[0,163],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.","source":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array."}],"pos":[95297,95461],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,186],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\"></xref> method."}],"pos":[96906,97093],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members of the specified member type, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,289],"content":"The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members of the specified member type, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt;</ph> method searches for the specified members of the specified member type, using the specified binding constraints.","pos":[0,173],"source":"The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members of the specified member type, using the specified binding constraints."}]}],"pos":[97104,97398],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the members to get.","nodes":[{"pos":[0,81],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the members to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the members to get."}],"pos":[97640,97722],"yaml":true},{"content":"The <xref href=\"System.Reflection.MemberTypes\"></xref> value to search for.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;&lt;/xref&gt;</ph> value to search for.","source":"The <xref href=\"System.Reflection.MemberTypes\"></xref> value to search for."}],"pos":[97798,97874],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return an empty array.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,177],"content":"Zero, to return an empty array.","nodes":[{"content":"Zero, to return an empty array.","pos":[0,31]}]}],"pos":[97958,98144],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array.","nodes":[{"pos":[0,163],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.","source":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array."}],"pos":[98218,98382],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMembers\"></xref> method.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMembers\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMembers\"></xref> method."}],"pos":[99506,99618],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method returns all the public members of the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,250],"content":"The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method returns all the public members of the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt;</ph> method returns all the public members of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,134],"source":"The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method returns all the public members of the current <xref:System.Type>."}]}],"pos":[99629,99884],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing all the public members of the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.MemberInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have public members.","nodes":[{"pos":[0,154],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects representing all the public members of the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing all the public members of the current <xref href=\"System.Type\"></xref>."},{"pos":[161,165],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[172,323],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph>, if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> does not have public members.","source":"An empty array of type <xref href=\"System.Reflection.MemberInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have public members."}],"pos":[100053,100391],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMembers(System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,143],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMembers(System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMembers(System.Reflection.BindingFlags)\"></xref> method."}],"pos":[101648,101792],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,294],"content":"The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt;</ph> method searches for the members defined for the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.","pos":[0,178],"source":"The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type>, using the specified binding constraints."}]}],"pos":[101803,102102],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[102320,102498],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing all members defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.MemberInfo\"></xref>, if no members are defined for the current <xref href=\"System.Type\"></xref>, or if none of the defined members match the binding constraints.","nodes":[{"pos":[0,197],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects representing all members defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that match the specified binding constraints.","source":"An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing all members defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints."},{"pos":[204,208],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[215,429],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph>, if no members are defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, or if none of the defined members match the binding constraints.","source":"An empty array of type <xref href=\"System.Reflection.MemberInfo\"></xref>, if no members are defined for the current <xref href=\"System.Type\"></xref>, or if none of the defined members match the binding constraints."}],"pos":[102572,103016],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Type[])\"></xref> method.","nodes":[{"pos":[0,139],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMethod(System.String,System.Type[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Type[])\"></xref> method."}],"pos":[104264,104404],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,277],"content":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;</ph> method searches for the specified public method whose parameters match the specified argument types.","pos":[0,161],"source":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types."}]}],"pos":[104415,104697],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public method to get.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public method to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public method to get."}],"pos":[104871,104959],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the method to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.","nodes":[{"pos":[0,134],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the method to get."},{"pos":[141,145],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[152,291],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters."}],"pos":[105020,105322],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method whose parameters match the specified argument types, if found; otherwise, `null`.","nodes":[{"pos":[0,171],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the public method whose parameters match the specified argument types, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method whose parameters match the specified argument types, if found; otherwise, `null`."}],"pos":[105394,105566],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.","nodes":[{"pos":[0,270],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method."}],"pos":[107395,107666],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,362],"content":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;</ph> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.","pos":[0,246],"source":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention."}]}],"pos":[107677,108044],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the method to get.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the method to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the method to get."}],"pos":[108397,108478],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[108562,108740],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \n  \n -or-  \n  \n `null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>.","nodes":[{"pos":[0,236],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.","source":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection."},{"pos":[243,247],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[254,320],"content":"<ph id=\"ph1\">`null`</ph>, to use the <ph id=\"ph2\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph>.","source":"`null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>."}],"pos":[108813,109144],"yaml":true},{"content":"The <xref href=\"System.Reflection.CallingConventions\"></xref> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up.","nodes":[{"pos":[0,256],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CallingConventions\"&gt;&lt;/xref&gt;</ph> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up.","source":"The <xref href=\"System.Reflection.CallingConventions\"></xref> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up."}],"pos":[109237,109494],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the method to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.","nodes":[{"pos":[0,134],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the method to get."},{"pos":[141,145],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[152,291],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters."}],"pos":[109555,109857],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"pos":[0,231],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","pos":[0,179],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array."},{"content":"The default binder does not process this parameter.","pos":[180,231]}]}],"pos":[109946,110178],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,152],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`."}],"pos":[110250,110403],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.","nodes":[{"pos":[0,233],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method."}],"pos":[112061,112295],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,325],"content":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;</ph> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.","pos":[0,209],"source":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints."}]}],"pos":[112306,112636],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the method to get.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the method to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the method to get."}],"pos":[112936,113017],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[113101,113279],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \n  \n -or-  \n  \n `null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>.","nodes":[{"pos":[0,236],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.","source":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection."},{"pos":[243,247],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[254,320],"content":"<ph id=\"ph1\">`null`</ph>, to use the <ph id=\"ph2\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph>.","source":"`null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>."}],"pos":[113352,113683],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the method to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.","nodes":[{"pos":[0,134],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the method to get."},{"pos":[141,145],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[152,291],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters."}],"pos":[113744,114046],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"pos":[0,231],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","pos":[0,179],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array."},{"content":"The default binder does not process this parameter.","pos":[180,231]}]}],"pos":[114135,114367],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,152],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`."}],"pos":[114439,114592],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String)\"></xref> method.","nodes":[{"pos":[0,125],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMethod(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String)\"></xref> method."}],"pos":[115773,115899],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the public method with the specified name..","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,240],"content":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the public method with the specified name..","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;</ph> method searches for the public method with the specified name..","pos":[0,124],"source":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the public method with the specified name.."}]}],"pos":[115910,116155],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public method to get.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public method to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public method to get."}],"pos":[116315,116403],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method with the specified name, if found; otherwise, `null`.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the public method with the specified name, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method with the specified name, if found; otherwise, `null`."}],"pos":[116475,116619],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,156],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\"></xref> method."}],"pos":[117935,118092],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,259],"content":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;</ph> method searches for the specified method, using the specified binding constraints.","pos":[0,143],"source":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method, using the specified binding constraints."}]}],"pos":[118103,118367],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the method to get.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the method to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the method to get."}],"pos":[118571,118652],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[118736,118914],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,152],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`."}],"pos":[118986,119139],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.","nodes":[{"pos":[0,177],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method."}],"pos":[120563,120741],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types and modifiers.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,291],"content":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types and modifiers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt;</ph> method searches for the specified public method whose parameters match the specified argument types and modifiers.","pos":[0,175],"source":"The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types and modifiers."}]}],"pos":[120752,121048],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public method to get.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public method to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public method to get."}],"pos":[121271,121359],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the method to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.","nodes":[{"pos":[0,134],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the method to get."},{"pos":[141,145],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[152,291],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters."}],"pos":[121420,121722],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"pos":[0,231],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","pos":[0,179],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array."},{"content":"The default binder does not process this parameter.","pos":[180,231]}]}],"pos":[121811,122043],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,159],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the public method that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method that matches the specified requirements, if found; otherwise, `null`."}],"pos":[122115,122275],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethods\"></xref> method.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMethods\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethods\"></xref> method."}],"pos":[123399,123511],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method returns all the public methods of the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,250],"content":"The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method returns all the public methods of the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt;</ph> method returns all the public methods of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,134],"source":"The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method returns all the public methods of the current <xref:System.Type>."}]}],"pos":[123522,123777],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects representing all the public methods defined for the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.MethodInfo\"></xref>, if no public methods are defined for the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,163],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> objects representing all the public methods defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects representing all the public methods defined for the current <xref href=\"System.Type\"></xref>."},{"pos":[170,174],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[181,337],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph>, if no public methods are defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An empty array of type <xref href=\"System.Reflection.MethodInfo\"></xref>, if no public methods are defined for the current <xref href=\"System.Type\"></xref>."}],"pos":[123946,124298],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethods(System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,143],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetMethods(System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethods(System.Reflection.BindingFlags)\"></xref> method."}],"pos":[125555,125699],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method searches for the methods defined for the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,294],"content":"The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method searches for the methods defined for the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt;</ph> method searches for the methods defined for the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.","pos":[0,178],"source":"The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method searches for the methods defined for the current <xref:System.Type>, using the specified binding constraints."}]}],"pos":[125710,126009],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[126227,126405],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects representing all methods defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.MethodInfo\"></xref>, if no methods are defined for the current <xref href=\"System.Type\"></xref>, or if none of the defined methods match the binding constraints.","nodes":[{"pos":[0,197],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> objects representing all methods defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that match the specified binding constraints.","source":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects representing all methods defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints."},{"pos":[204,208],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[215,429],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph>, if no methods are defined for the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, or if none of the defined methods match the binding constraints.","source":"An empty array of type <xref href=\"System.Reflection.MethodInfo\"></xref>, if no methods are defined for the current <xref href=\"System.Type\"></xref>, or if none of the defined methods match the binding constraints."}],"pos":[126479,126923],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedType(System.String)\"></xref> method.","nodes":[{"pos":[0,129],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetNestedType(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedType(System.String)\"></xref> method."}],"pos":[128129,128259],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the public nested type with the specified name.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,248],"content":"The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the public nested type with the specified name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt;</ph> method searches for the public nested type with the specified name.","pos":[0,132],"source":"The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the public nested type with the specified name."}]}],"pos":[128270,128523],"yaml":true,"extradata":"MT"},{"content":"The string containing the name of the nested type to get.","nodes":[{"pos":[0,57],"content":"The string containing the name of the nested type to get.","nodes":[{"content":"The string containing the name of the nested type to get.","pos":[0,57]}]}],"pos":[128663,128721],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> object representing the public nested type with the specified name, if found; otherwise, `null`.","nodes":[{"pos":[0,131],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the public nested type with the specified name, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Type\"></xref> object representing the public nested type with the specified name, if found; otherwise, `null`."}],"pos":[128776,128908],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,160],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\"></xref> method."}],"pos":[130252,130413],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the specified nested type, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,268],"content":"The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the specified nested type, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt;</ph> method searches for the specified nested type, using the specified binding constraints.","pos":[0,152],"source":"The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the specified nested type, using the specified binding constraints."}]}],"pos":[130424,130697],"yaml":true,"extradata":"MT"},{"content":"The string containing the name of the nested type to get.","nodes":[{"pos":[0,57],"content":"The string containing the name of the nested type to get.","nodes":[{"content":"The string containing the name of the nested type to get.","pos":[0,57]}]}],"pos":[130881,130939],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[131023,131201],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> object representing the nested type that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,140],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the nested type that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Type\"></xref> object representing the nested type that matches the specified requirements, if found; otherwise, `null`."}],"pos":[131256,131397],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedTypes\"></xref> method.","nodes":[{"pos":[0,115],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetNestedTypes\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedTypes\"></xref> method."}],"pos":[132549,132665],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName> method returns all the types nested within the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,256],"content":"The <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName> method returns all the types nested within the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt;</ph> method returns all the types nested within the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,140],"source":"The <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName> method returns all the types nested within the current <xref:System.Type>."}]}],"pos":[132676,132937],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing all the types nested within the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Type\"></xref>, if no types are nested within the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,139],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing all the types nested within the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Type\"></xref> objects representing all the types nested within the current <xref href=\"System.Type\"></xref>."},{"pos":[146,150],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[157,289],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, if no types are nested within the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An empty array of type <xref href=\"System.Type\"></xref>, if no types are nested within the current <xref href=\"System.Type\"></xref>."}],"pos":[133069,133373],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedTypes(System.Reflection.BindingFlags)\"></xref> method, and searches for the types nested within the current <xref href=\"System.Type\"></xref>, using the specified binding constraints.","nodes":[{"pos":[0,275],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetNestedTypes(System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method, and searches for the types nested within the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, using the specified binding constraints.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedTypes(System.Reflection.BindingFlags)\"></xref> method, and searches for the types nested within the current <xref href=\"System.Type\"></xref>, using the specified binding constraints."}],"pos":[134658,134934],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]}],"pos":[134945,135055],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[135253,135431],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing all the types nested within the current <xref href=\"System.Type\"></xref> that match the specified binding constraints.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Type\"></xref>, if no types are nested within the current <xref href=\"System.Type\"></xref>, or if none of the nested types match the binding constraints.","nodes":[{"pos":[0,184],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing all the types nested within the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that match the specified binding constraints.","source":"An array of <xref href=\"System.Type\"></xref> objects representing all the types nested within the current <xref href=\"System.Type\"></xref> that match the specified binding constraints."},{"pos":[191,195],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[202,396],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, if no types are nested within the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, or if none of the nested types match the binding constraints.","source":"An empty array of type <xref href=\"System.Type\"></xref>, if no types are nested within the current <xref href=\"System.Type\"></xref>, or if none of the nested types match the binding constraints."}],"pos":[135488,135899],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperties\"></xref> method.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperties\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperties\"></xref> method."}],"pos":[137046,137161],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method returns all the public properties of the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,256],"content":"The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method returns all the public properties of the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt;</ph> method returns all the public properties of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,140],"source":"The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method returns all the public properties of the current <xref:System.Type>."}]}],"pos":[137172,137433],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects representing all public properties of the current <xref href=\"System.Type\"></xref>.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.PropertyInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have public properties.","nodes":[{"pos":[0,155],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> objects representing all public properties of the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects representing all public properties of the current <xref href=\"System.Type\"></xref>."},{"pos":[162,166],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[173,329],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph>, if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> does not have public properties.","source":"An empty array of type <xref href=\"System.Reflection.PropertyInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have public properties."}],"pos":[137609,137953],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperties(System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,146],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperties(System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperties(System.Reflection.BindingFlags)\"></xref> method."}],"pos":[139231,139378],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method searches for the properties of the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,291],"content":"The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method searches for the properties of the current <xref:System.Type>, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt;</ph> method searches for the properties of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.","pos":[0,175],"source":"The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method searches for the properties of the current <xref:System.Type>, using the specified binding constraints."}]}],"pos":[139389,139685],"yaml":true,"extradata":"MT"},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[139908,140086],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects representing all properties of the current <xref href=\"System.Type\"></xref> that match the specified binding constraints.  \n  \n -or-  \n  \n An empty array of type <xref href=\"System.Reflection.PropertyInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have properties, or if none of the properties match the binding constraints.","nodes":[{"pos":[0,193],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> objects representing all properties of the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that match the specified binding constraints.","source":"An array of <xref href=\"System.Reflection.PropertyInfo\"></xref> objects representing all properties of the current <xref href=\"System.Type\"></xref> that match the specified binding constraints."},{"pos":[200,204],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[211,420],"content":"An empty array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph>, if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> does not have properties, or if none of the properties match the binding constraints.","source":"An empty array of type <xref href=\"System.Reflection.PropertyInfo\"></xref>, if the current <xref href=\"System.Type\"></xref> does not have properties, or if none of the properties match the binding constraints."}],"pos":[140162,140597],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.","nodes":[{"pos":[0,191],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method."}],"pos":[142091,142283],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types and modifiers.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,295],"content":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types and modifiers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;</ph> method searches for the specified public property whose parameters match the specified argument types and modifiers.","pos":[0,179],"source":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types and modifiers."}]}],"pos":[142294,142594],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public property to get.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public property to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public property to get."}],"pos":[142838,142928],"yaml":true},{"content":"The return type of the property.","nodes":[{"pos":[0,32],"content":"The return type of the property.","nodes":[{"content":"The return type of the property.","pos":[0,32]}]}],"pos":[142992,143025],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed.","nodes":[{"pos":[0,144],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get."},{"pos":[151,155],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[162,298],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed."}],"pos":[143086,143395],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"pos":[0,231],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","pos":[0,179],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array."},{"content":"The default binder does not process this parameter.","pos":[180,231]}]}],"pos":[143484,143716],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,163],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object representing the public property that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property that matches the specified requirements, if found; otherwise, `null`."}],"pos":[143790,143954],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.","nodes":[{"pos":[0,247],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method."}],"pos":[145680,145928],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,329],"content":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;</ph> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.","pos":[0,213],"source":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints."}]}],"pos":[145939,146273],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the property to get.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the property to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the property to get."}],"pos":[146594,146677],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[146761,146939],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \n  \n -or-  \n  \n `null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>.","nodes":[{"pos":[0,236],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.","source":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection."},{"pos":[243,247],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[254,320],"content":"<ph id=\"ph1\">`null`</ph>, to use the <ph id=\"ph2\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph>.","source":"`null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>."}],"pos":[147012,147343],"yaml":true},{"content":"The return type of the property.","nodes":[{"pos":[0,32],"content":"The return type of the property.","nodes":[{"content":"The return type of the property.","pos":[0,32]}]}],"pos":[147407,147440],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed.","nodes":[{"pos":[0,144],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get."},{"pos":[151,155],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[162,298],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed."}],"pos":[147501,147810],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"pos":[0,231],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","pos":[0,179],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array."},{"content":"The default binder does not process this parameter.","pos":[180,231]}]}],"pos":[147899,148131],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the property that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,156],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object representing the property that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the property that matches the specified requirements, if found; otherwise, `null`."}],"pos":[148205,148362],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type,System.Type[])\"></xref> method.","nodes":[{"pos":[0,153],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperty(System.String,System.Type,System.Type[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type,System.Type[])\"></xref> method."}],"pos":[149677,149831],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,281],"content":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;</ph> method searches for the specified public property whose parameters match the specified argument types.","pos":[0,165],"source":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types."}]}],"pos":[149842,150128],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public property to get.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public property to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public property to get."}],"pos":[150323,150413],"yaml":true},{"content":"The return type of the property.","nodes":[{"pos":[0,32],"content":"The return type of the property.","nodes":[{"content":"The return type of the property.","pos":[0,32]}]}],"pos":[150477,150510],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed.","nodes":[{"pos":[0,144],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get."},{"pos":[151,155],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[162,298],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed."}],"pos":[150571,150880],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property whose parameters match the specified argument types, if found; otherwise, `null`.","nodes":[{"pos":[0,175],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object representing the public property whose parameters match the specified argument types, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property whose parameters match the specified argument types, if found; otherwise, `null`."}],"pos":[150954,151130],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type)\"></xref> method.","nodes":[{"pos":[0,139],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperty(System.String,System.Type)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type)\"></xref> method."}],"pos":[152379,152519],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name and return type.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,259],"content":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name and return type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;</ph> method searches for the public property with the specified name and return type.","pos":[0,143],"source":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name and return type."}]}],"pos":[152530,152794],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public property to get.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public property to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public property to get."}],"pos":[152975,153065],"yaml":true},{"content":"The return type of the property.","nodes":[{"pos":[0,32],"content":"The return type of the property.","nodes":[{"content":"The return type of the property.","pos":[0,32]}]}],"pos":[153129,153162],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property with the specified name, if found; otherwise, `null`.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object representing the public property with the specified name, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property with the specified name, if found; otherwise, `null`."}],"pos":[153236,153384],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type[])\"></xref> method.","nodes":[{"pos":[0,141],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperty(System.String,System.Type[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type[])\"></xref> method."}],"pos":[154645,154787],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types..","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,282],"content":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types..","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;</ph> method searches for the specified public property whose parameters match the specified argument types..","pos":[0,166],"source":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types.."}]}],"pos":[154798,155085],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public property to get.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public property to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public property to get."}],"pos":[155263,155353],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get.  \n  \n -or-  \n  \n An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed.","nodes":[{"pos":[0,144],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get."},{"pos":[151,155],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[162,298],"content":"An empty array of the type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.","source":"An empty array of the type <xref href=\"System.Type\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed."}],"pos":[155414,155723],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property whose parameters match the specified argument types, if found; otherwise, `null`.","nodes":[{"pos":[0,175],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object representing the public property whose parameters match the specified argument types, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property whose parameters match the specified argument types, if found; otherwise, `null`."}],"pos":[155797,155973],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\"></xref> method.","nodes":[{"pos":[0,158],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\"></xref> method."}],"pos":[157303,157462],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property, using the specified binding constraints.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,263],"content":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property, using the specified binding constraints.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;</ph> method searches for the specified property, using the specified binding constraints.","pos":[0,147],"source":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property, using the specified binding constraints."}]}],"pos":[157473,157741],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the property to get.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the property to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the property to get."}],"pos":[157949,158032],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted.  \n  \n -or-  \n  \n Zero, to return `null`.","nodes":[{"pos":[0,128],"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"pos":[135,139],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[146,169],"content":"Zero, to return <ph id=\"ph1\">`null`</ph>.","source":"Zero, to return `null`."}],"pos":[158116,158294],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the property that matches the specified requirements, if found; otherwise, `null`.","nodes":[{"pos":[0,156],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object representing the property that matches the specified requirements, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the property that matches the specified requirements, if found; otherwise, `null`."}],"pos":[158368,158525],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String)\"></xref> method.","nodes":[{"pos":[0,127],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetProperty(System.String)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String)\"></xref> method."}],"pos":[159720,159848],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,243],"content":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt;</ph> method searches for the public property with the specified name.","pos":[0,127],"source":"The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name."}]}],"pos":[159859,160107],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the public property to get.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the public property to get.","source":"The <xref href=\"System.String\"></xref> containing the name of the public property to get."}],"pos":[160271,160361],"yaml":true},{"content":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property with the specified name, if found; otherwise, `null`.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> object representing the public property with the specified name, if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property with the specified name, if found; otherwise, `null`."}],"pos":[160435,160583],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetType\"></xref> method.","nodes":[{"pos":[0,108],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetType\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetType\"></xref> method."}],"pos":[161691,161800],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GetType%2A?displayProperty=fullName> method gets the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,218],"content":"The <xref:System.Type.GetType%2A?displayProperty=fullName> method gets the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;</ph> method gets the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,102],"source":"The <xref:System.Type.GetType%2A?displayProperty=fullName> method gets the current <xref:System.Type>."}]}],"pos":[161811,162034],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,45],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The current <xref href=\"System.Type\"></xref>."}],"pos":[162155,162201],"yaml":true},{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"pos":[0,114],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]}],"pos":[163524,163639],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[163650,163835],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[164002,164034],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[164094,164142],"yaml":true},{"content":"Receives a pointer to the requested type information object.","nodes":[{"pos":[0,60],"content":"Receives a pointer to the requested type information object.","nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]}],"pos":[164205,164266],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[165494,165587],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[165598,165788],"yaml":true,"extradata":"MT"},{"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,100],"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]}],"pos":[165939,166040],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GUID\"></xref> property.","nodes":[{"pos":[0,107],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GUID\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GUID\"></xref> property."}],"pos":[167131,167239],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.GUID%2A?displayProperty=fullName> property gets the GUID associated with the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,236],"content":"The <xref:System.Type.GUID%2A?displayProperty=fullName> property gets the GUID associated with the <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GUID%2A?displayProperty=fullName&gt;</ph> property gets the GUID associated with the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,118],"source":"The <xref:System.Type.GUID%2A?displayProperty=fullName> property gets the GUID associated with the <xref:System.Type>."}]}],"pos":[167250,167491],"yaml":true,"extradata":"MT"},{"content":"The GUID associated with the <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,62],"content":"The GUID associated with the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The GUID associated with the <xref href=\"System.Type\"></xref>."}],"pos":[167595,167658],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.HasElementType\"></xref> property.","nodes":[{"pos":[0,117],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.HasElementType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.HasElementType\"></xref> property."}],"pos":[168797,168915],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.HasElementType%2A?displayProperty=fullName> property","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,192],"content":"The <xref:System.Type.HasElementType%2A?displayProperty=fullName> property","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.HasElementType%2A?displayProperty=fullName&gt;</ph> property","pos":[0,74],"source":"The <xref:System.Type.HasElementType%2A?displayProperty=fullName> property"}]}],"pos":[168926,169123],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is an array, a pointer, or is passed by reference; otherwise, `false`.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is an array, a pointer, or is passed by reference; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is an array, a pointer, or is passed by reference; otherwise, `false`."}],"pos":[169240,169360],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[170975,171039],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[171050,171230],"yaml":true,"extradata":"MT"},{"content":"Identifies the member.","nodes":[{"pos":[0,22],"content":"Identifies the member.","nodes":[{"content":"Identifies the member.","pos":[0,22]}]}],"pos":[171492,171515],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[171573,171616],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[171676,171728],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[171789,171831],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[171898,172058],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[172124,172182],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[172248,172308],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[172372,172423],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\"></xref> method.","nodes":[{"pos":[0,214],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\"></xref> method."}],"pos":[173997,174212],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,298],"content":"The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list.","pos":[0,182],"source":"The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list."}]}],"pos":[174223,174526],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the constructor, method, property, or field member to invoke.  \n  \n -or-  \n  \n An empty string (\"\") to invoke the default member.  \n  \n -or-  \n  \n For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.","source":"The <xref href=\"System.String\"></xref> containing the name of the constructor, method, property, or field member to invoke."},{"pos":[130,134],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[141,191],"content":"An empty string (\"\") to invoke the default member.","nodes":[{"content":"An empty string (\"\") to invoke the default member.","pos":[0,50]}]},{"pos":[198,202],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[209,291],"content":"For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","nodes":[{"content":"For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","pos":[0,82]}]}],"pos":[174773,175081],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.","nodes":[{"pos":[0,389],"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.","nodes":[{"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","pos":[0,128],"source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"content":"The access can be one of the <ph id=\"ph1\">`BindingFlags`</ph> such as <ph id=\"ph2\">`Public`</ph>, <ph id=\"ph3\">`NonPublic`</ph>, <ph id=\"ph4\">`Private`</ph>, <ph id=\"ph5\">`InvokeMethod`</ph>, <ph id=\"ph6\">`GetField`</ph>, and so on.","pos":[129,253],"source":" The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on."},{"content":"The type of lookup need not be specified.","pos":[254,295]},{"content":"If the type of lookup is omitted, <ph id=\"ph1\">`BindingFlags.Public`</ph><ph id=\"ph2\"> | </ph><ph id=\"ph3\">`BindingFlags.Instance`</ph> will apply.","pos":[296,389],"source":" If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply."}]}],"pos":[175164,175554],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \n  \n -or-  \n  \n `null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>.","nodes":[{"pos":[0,236],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.","source":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection."},{"pos":[243,247],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[254,320],"content":"<ph id=\"ph1\">`null`</ph>, to use the <ph id=\"ph2\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph>.","source":"`null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>."}],"pos":[175627,175958],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> on which to invoke the specified member.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> on which to invoke the specified member.","source":"The <xref href=\"System.Object\"></xref> on which to invoke the specified member."}],"pos":[176020,176100],"yaml":true},{"content":"An array containing the arguments to pass to the member to invoke.","nodes":[{"pos":[0,66],"content":"An array containing the arguments to pass to the member to invoke.","nodes":[{"content":"An array containing the arguments to pass to the member to invoke.","pos":[0,66]}]}],"pos":[176162,176229],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> representing the return value of the invoked member.","nodes":[{"pos":[0,90],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> representing the return value of the invoked member.","source":"An <xref href=\"System.Object\"></xref> representing the return value of the invoked member."}],"pos":[176286,176377],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\"></xref> method.","nodes":[{"pos":[0,247],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\"></xref> method."}],"pos":[178095,178343],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,310],"content":"The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.","pos":[0,194],"source":"The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture."}]}],"pos":[178354,178669],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the constructor, method, property, or field member to invoke.  \n  \n -or-  \n  \n An empty string (\"\") to invoke the default member.  \n  \n -or-  \n  \n For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.","source":"The <xref href=\"System.String\"></xref> containing the name of the constructor, method, property, or field member to invoke."},{"pos":[130,134],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[141,191],"content":"An empty string (\"\") to invoke the default member.","nodes":[{"content":"An empty string (\"\") to invoke the default member.","pos":[0,50]}]},{"pos":[198,202],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[209,291],"content":"For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","nodes":[{"content":"For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","pos":[0,82]}]}],"pos":[178958,179266],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.","nodes":[{"pos":[0,389],"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.","nodes":[{"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","pos":[0,128],"source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"content":"The access can be one of the <ph id=\"ph1\">`BindingFlags`</ph> such as <ph id=\"ph2\">`Public`</ph>, <ph id=\"ph3\">`NonPublic`</ph>, <ph id=\"ph4\">`Private`</ph>, <ph id=\"ph5\">`InvokeMethod`</ph>, <ph id=\"ph6\">`GetField`</ph>, and so on.","pos":[129,253],"source":" The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on."},{"content":"The type of lookup need not be specified.","pos":[254,295]},{"content":"If the type of lookup is omitted, <ph id=\"ph1\">`BindingFlags.Public`</ph><ph id=\"ph2\"> | </ph><ph id=\"ph3\">`BindingFlags.Instance`</ph> will apply.","pos":[296,389],"source":" If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply."}]}],"pos":[179349,179739],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \n  \n -or-  \n  \n `null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>.","nodes":[{"pos":[0,236],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.","source":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection."},{"pos":[243,247],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[254,320],"content":"<ph id=\"ph1\">`null`</ph>, to use the <ph id=\"ph2\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph>.","source":"`null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>."}],"pos":[179812,180143],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> on which to invoke the specified member.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> on which to invoke the specified member.","source":"The <xref href=\"System.Object\"></xref> on which to invoke the specified member."}],"pos":[180205,180285],"yaml":true},{"content":"An array containing the arguments to pass to the member to invoke.","nodes":[{"pos":[0,66],"content":"An array containing the arguments to pass to the member to invoke.","nodes":[{"content":"An array containing the arguments to pass to the member to invoke.","pos":[0,66]}]}],"pos":[180347,180414],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.  \n  \n -or-  \n  \n `null` to use the current thread's <xref href=\"System.Globalization.CultureInfo\"></xref>.","nodes":[{"pos":[0,215],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double."},{"pos":[222,226],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[233,322],"content":"<ph id=\"ph1\">`null`</ph> to use the current thread's <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph>.","source":"`null` to use the current thread's <xref href=\"System.Globalization.CultureInfo\"></xref>."}],"pos":[180496,180829],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> representing the return value of the invoked member.","nodes":[{"pos":[0,90],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> representing the return value of the invoked member.","source":"An <xref href=\"System.Object\"></xref> representing the return value of the invoked member."}],"pos":[180886,180977],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"></xref> method.","nodes":[{"pos":[0,301],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"></xref> method."}],"pos":[182950,183252],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,322],"content":"The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.","pos":[0,206],"source":"The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture."}]}],"pos":[183263,183590],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> containing the name of the constructor, method, property, or field member to invoke.  \n  \n -or-  \n  \n An empty string (\"\") to invoke the default member.  \n  \n -or-  \n  \n For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.","source":"The <xref href=\"System.String\"></xref> containing the name of the constructor, method, property, or field member to invoke."},{"pos":[130,134],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[141,191],"content":"An empty string (\"\") to invoke the default member.","nodes":[{"content":"An empty string (\"\") to invoke the default member.","pos":[0,50]}]},{"pos":[198,202],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[209,291],"content":"For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","nodes":[{"content":"For IDispatch members, a string representing the DispID, for example \"[DispID=3]\".","pos":[0,82]}]}],"pos":[183954,184262],"yaml":true},{"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.","nodes":[{"pos":[0,389],"content":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.","nodes":[{"content":"A bitmask comprised of one or more <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph> that specify how the search is conducted.","pos":[0,128],"source":"A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted."},{"content":"The access can be one of the <ph id=\"ph1\">`BindingFlags`</ph> such as <ph id=\"ph2\">`Public`</ph>, <ph id=\"ph3\">`NonPublic`</ph>, <ph id=\"ph4\">`Private`</ph>, <ph id=\"ph5\">`InvokeMethod`</ph>, <ph id=\"ph6\">`GetField`</ph>, and so on.","pos":[129,253],"source":" The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on."},{"content":"The type of lookup need not be specified.","pos":[254,295]},{"content":"If the type of lookup is omitted, <ph id=\"ph1\">`BindingFlags.Public`</ph><ph id=\"ph2\"> | </ph><ph id=\"ph3\">`BindingFlags.Instance`</ph> will apply.","pos":[296,389],"source":" If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply."}]}],"pos":[184345,184735],"yaml":true},{"content":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \n  \n -or-  \n  \n `null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>.","nodes":[{"pos":[0,236],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.","source":"A <xref href=\"System.Reflection.Binder\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection."},{"pos":[243,247],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[254,320],"content":"<ph id=\"ph1\">`null`</ph>, to use the <ph id=\"ph2\">&lt;xref href=\"System.Type.DefaultBinder\"&gt;&lt;/xref&gt;</ph>.","source":"`null`, to use the <xref href=\"System.Type.DefaultBinder\"></xref>."}],"pos":[184808,185139],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> on which to invoke the specified member.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> on which to invoke the specified member.","source":"The <xref href=\"System.Object\"></xref> on which to invoke the specified member."}],"pos":[185201,185281],"yaml":true},{"content":"An array containing the arguments to pass to the member to invoke.","nodes":[{"pos":[0,66],"content":"An array containing the arguments to pass to the member to invoke.","nodes":[{"content":"An array containing the arguments to pass to the member to invoke.","pos":[0,66]}]}],"pos":[185343,185410],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>args</code> array. A parameter's associated attributes are stored in the member's signature. The default binder does not process this parameter.","nodes":[{"pos":[0,304],"content":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>args</code> array. A parameter's associated attributes are stored in the member's signature. The default binder does not process this parameter.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;&lt;/xref&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","pos":[0,178],"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>args</code> array."},{"content":"A parameter's associated attributes are stored in the member's signature.","pos":[179,252]},{"content":"The default binder does not process this parameter.","pos":[253,304]}]}],"pos":[185499,185804],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.  \n  \n -or-  \n  \n `null` to use the current thread's <xref href=\"System.Globalization.CultureInfo\"></xref>.","nodes":[{"pos":[0,215],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double."},{"pos":[222,226],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[233,322],"content":"<ph id=\"ph1\">`null`</ph> to use the current thread's <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph>.","source":"`null` to use the current thread's <xref href=\"System.Globalization.CultureInfo\"></xref>."}],"pos":[185886,186219],"yaml":true},{"content":"An array containing the names of the parameters to which the values in the <code>args</code> array are passed.","nodes":[{"pos":[0,110],"content":"An array containing the names of the parameters to which the values in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> array are passed.","source":"An array containing the names of the parameters to which the values in the <code>args</code> array are passed."}],"pos":[186292,186403],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> representing the return value of the invoked member.","nodes":[{"pos":[0,90],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> representing the return value of the invoked member.","source":"An <xref href=\"System.Object\"></xref> representing the return value of the invoked member."}],"pos":[186460,186551],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAbstract\"></xref> property.","nodes":[{"pos":[0,113],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsAbstract\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAbstract\"></xref> property."}],"pos":[187674,187788],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsAbstract%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is abstract and must be overridden.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,279],"content":"The <xref:System.Type.IsAbstract%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is abstract and must be overridden.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsAbstract%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is abstract and must be overridden.","pos":[0,161],"source":"The <xref:System.Type.IsAbstract%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is abstract and must be overridden."}]}],"pos":[187799,188083],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is abstract; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is abstract; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is abstract; otherwise, `false`."}],"pos":[188196,188278],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAnsiClass\"></xref> property.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsAnsiClass\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAnsiClass\"></xref> property."}],"pos":[189405,189520],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsAnsiClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `AnsiClass` is selected for the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,301],"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsAnsiClass%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the string format attribute <ph id=\"ph2\">`AnsiClass`</ph> is selected for the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","source":"The <xref:System.Type.IsAnsiClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `AnsiClass` is selected for the <xref:System.Type>."}],"pos":[189531,189837],"yaml":true,"extradata":"MT"},{"content":"`true` if the string format attribute `AnsiClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">`true`</ph> if the string format attribute <ph id=\"ph2\">`AnsiClass`</ph> is selected for the <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the string format attribute `AnsiClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`."}],"pos":[189951,190077],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsArray\"></xref> property.","nodes":[{"pos":[0,110],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsArray\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsArray\"></xref> property."}],"pos":[191181,191292],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsArray%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an array.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,253],"content":"The <xref:System.Type.IsArray%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an array.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsArray%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is an array.","pos":[0,135],"source":"The <xref:System.Type.IsArray%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an array."}]}],"pos":[191303,191561],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is an array; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is an array; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is an array; otherwise, `false`."}],"pos":[191671,191753],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAssignableFrom(System.Type)\"></xref> method.","nodes":[{"pos":[0,130],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsAssignableFrom(System.Type)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAssignableFrom(System.Type)\"></xref> method."}],"pos":[192962,193093],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]}],"pos":[193104,193214],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> to compare with the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Type\"></xref> to compare with the current <xref href=\"System.Type\"></xref>."}],"pos":[193347,193446],"yaml":true},{"content":"`true` if <code>c</code> and the current <xref href=\"System.Type\"></xref> represent the same type, or if the current <xref href=\"System.Type\"></xref> is in the inheritance hierarchy of <code>c</code>, or if the current <xref href=\"System.Type\"></xref> is an interface that <code>c</code> implements, or if <code>c</code> is a generic type parameter and the current <xref href=\"System.Type\"></xref> represents one of the constraints of <code>c</code>. `false` if none of these conditions are the case, or if <code>c</code> is `null`.","nodes":[{"pos":[0,532],"content":"`true` if <code>c</code> and the current <xref href=\"System.Type\"></xref> represent the same type, or if the current <xref href=\"System.Type\"></xref> is in the inheritance hierarchy of <code>c</code>, or if the current <xref href=\"System.Type\"></xref> is an interface that <code>c</code> implements, or if <code>c</code> is a generic type parameter and the current <xref href=\"System.Type\"></xref> represents one of the constraints of <code>c</code>. `false` if none of these conditions are the case, or if <code>c</code> is `null`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> and the current <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represent the same type, or if the current <ph id=\"ph4\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is in the inheritance hierarchy of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">c</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or if the current <ph id=\"ph6\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is an interface that <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph7\">c</ph><ept id=\"p3\">&lt;/code&gt;</ept> implements, or if <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph8\">c</ph><ept id=\"p4\">&lt;/code&gt;</ept> is a generic type parameter and the current <ph id=\"ph9\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represents one of the constraints of <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph10\">c</ph><ept id=\"p5\">&lt;/code&gt;</ept>.","pos":[0,450],"source":"`true` if <code>c</code> and the current <xref href=\"System.Type\"></xref> represent the same type, or if the current <xref href=\"System.Type\"></xref> is in the inheritance hierarchy of <code>c</code>, or if the current <xref href=\"System.Type\"></xref> is an interface that <code>c</code> implements, or if <code>c</code> is a generic type parameter and the current <xref href=\"System.Type\"></xref> represents one of the constraints of <code>c</code>."},{"content":"<ph id=\"ph1\">`false`</ph> if none of these conditions are the case, or if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","pos":[451,532],"source":"`false` if none of these conditions are the case, or if <code>c</code> is `null`."}]}],"pos":[193504,194039],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAutoClass\"></xref> property.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsAutoClass\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAutoClass\"></xref> property."}],"pos":[195172,195287],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsAutoClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `AutoClass` is selected for the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,301],"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsAutoClass%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the string format attribute <ph id=\"ph2\">`AutoClass`</ph> is selected for the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","source":"The <xref:System.Type.IsAutoClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `AutoClass` is selected for the <xref:System.Type>."}],"pos":[195298,195604],"yaml":true,"extradata":"MT"},{"content":"`true` if the string format attribute `AutoClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">`true`</ph> if the string format attribute <ph id=\"ph2\">`AutoClass`</ph> is selected for the <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the string format attribute `AutoClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`."}],"pos":[195718,195844],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAutoLayout\"></xref> property.","nodes":[{"pos":[0,115],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsAutoLayout\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAutoLayout\"></xref> property."}],"pos":[196978,197094],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsAutoLayout%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `AutoLayout` is selected for the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,302],"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsAutoLayout%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the class layout attribute <ph id=\"ph2\">`AutoLayout`</ph> is selected for the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","source":"The <xref:System.Type.IsAutoLayout%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `AutoLayout` is selected for the <xref:System.Type>."}],"pos":[197105,197412],"yaml":true,"extradata":"MT"},{"content":"`true` if the class layout attribute `AutoLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">`true`</ph> if the class layout attribute <ph id=\"ph2\">`AutoLayout`</ph> is selected for the <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the class layout attribute `AutoLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`."}],"pos":[197527,197653],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsByRef\"></xref> property.","nodes":[{"pos":[0,110],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsByRef\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsByRef\"></xref> property."}],"pos":[198758,198869],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsByRef%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is passed by reference.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,264],"content":"The <xref:System.Type.IsByRef%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is passed by reference.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsByRef%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is passed by reference.","pos":[0,146],"source":"The <xref:System.Type.IsByRef%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is passed by reference."}]}],"pos":[198880,199149],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is passed by reference; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is passed by reference; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is passed by reference; otherwise, `false`."}],"pos":[199259,199352],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsClass\"></xref> property.","nodes":[{"pos":[0,110],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsClass\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsClass\"></xref> property."}],"pos":[200452,200563],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsClass%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a class; that is, not a value type or interface.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,292],"content":"The <xref:System.Type.IsClass%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a class; that is, not a value type or interface.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsClass%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is a class; that is, not a value type or interface.","pos":[0,174],"source":"The <xref:System.Type.IsClass%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a class; that is, not a value type or interface."}]}],"pos":[200574,200871],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is a class; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is a class; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is a class; otherwise, `false`."}],"pos":[200981,201062],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsCOMObject\"></xref> property.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsCOMObject\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsCOMObject\"></xref> property."}],"pos":[202186,202301],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsCOMObject%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a COM object.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,261],"content":"The <xref:System.Type.IsCOMObject%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a COM object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsCOMObject%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is a COM object.","pos":[0,143],"source":"The <xref:System.Type.IsCOMObject%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a COM object."}]}],"pos":[202312,202578],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is a COM object; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is a COM object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is a COM object; otherwise, `false`."}],"pos":[202692,202778],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsContextful\"></xref> property.","nodes":[{"pos":[0,115],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsContextful\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsContextful\"></xref> property."}],"pos":[203912,204028],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsContextful%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> can be hosted in a context.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,273],"content":"The <xref:System.Type.IsContextful%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> can be hosted in a context.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsContextful%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> can be hosted in a context.","pos":[0,155],"source":"The <xref:System.Type.IsContextful%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> can be hosted in a context."}]}],"pos":[204039,204317],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> can be hosted in a context; otherwise, `false`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> can be hosted in a context; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> can be hosted in a context; otherwise, `false`."}],"pos":[204432,204529],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,155],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method."}],"pos":[205773,205929],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName> method indicates whether one or more instance of `attributeType` is applied to this member.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,285],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName&gt;</ph> method indicates whether one or more instance of <ph id=\"ph2\">`attributeType`</ph> is applied to this member.","source":"The <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName> method indicates whether one or more instance of `attributeType` is applied to this member."}],"pos":[205940,206230],"yaml":true,"extradata":"MT"},{"content":"The `Type` object to which the custom attributes are applied.","nodes":[{"pos":[0,61],"content":"The <ph id=\"ph1\">`Type`</ph> object to which the custom attributes are applied.","source":"The `Type` object to which the custom attributes are applied."}],"pos":[206394,206456],"yaml":true},{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","nodes":[{"pos":[0,83],"content":"Specifies whether to search this member's inheritance chain to find the attributes.","nodes":[{"content":"Specifies whether to search this member's inheritance chain to find the attributes.","pos":[0,83]}]}],"pos":[206520,206604],"yaml":true},{"content":"`true` if one or more instance of <code>attributeType</code> is applied to this member; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> if one or more instance of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">attributeType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is applied to this member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if one or more instance of <code>attributeType</code> is applied to this member; otherwise, `false`."}],"pos":[206662,206772],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsEnum\"></xref> property.","nodes":[{"pos":[0,109],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsEnum\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsEnum\"></xref> property."}],"pos":[207868,207978],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsEnum%2A?displayProperty=fullName> property gets a value indicating whether the current <xref:System.Type> represents an enumeration.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,274],"content":"The <xref:System.Type.IsEnum%2A?displayProperty=fullName> property gets a value indicating whether the current <xref:System.Type> represents an enumeration.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsEnum%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> represents an enumeration.","pos":[0,156],"source":"The <xref:System.Type.IsEnum%2A?displayProperty=fullName> property gets a value indicating whether the current <xref:System.Type> represents an enumeration."}]}],"pos":[207989,208268],"yaml":true,"extradata":"MT"},{"content":"`true` if the current <xref href=\"System.Type\"></xref> represents an enumeration; otherwise, `false`.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represents an enumeration; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the current <xref href=\"System.Type\"></xref> represents an enumeration; otherwise, `false`."}],"pos":[208377,208481],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsExplicitLayout\"></xref> property.","nodes":[{"pos":[0,119],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsExplicitLayout\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsExplicitLayout\"></xref> property."}],"pos":[209634,209754],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `ExplicitLayout` is selected for the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,310],"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the class layout attribute <ph id=\"ph2\">`ExplicitLayout`</ph> is selected for the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","source":"The <xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `ExplicitLayout` is selected for the <xref:System.Type>."}],"pos":[209765,210080],"yaml":true,"extradata":"MT"},{"content":"`true` if the class layout attribute `ExplicitLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the class layout attribute <ph id=\"ph2\">`ExplicitLayout`</ph> is selected for the <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the class layout attribute `ExplicitLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`."}],"pos":[210199,210329],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsImport\"></xref> property.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsImport\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsImport\"></xref> property."}],"pos":[211444,211556],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsImport%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>, indicating that it was imported from a COM type library.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,360],"content":"The <xref:System.Type.IsImport%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>, indicating that it was imported from a COM type library.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsImport%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> has <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph>, indicating that it was imported from a COM type library.","pos":[0,242],"source":"The <xref:System.Type.IsImport%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>, indicating that it was imported from a COM type library."}]}],"pos":[211567,211932],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> has <xref href=\"System.Runtime.InteropServices.ComImportAttribute\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,142],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> has <ph id=\"ph3\">&lt;xref href=\"System.Runtime.InteropServices.ComImportAttribute\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> has <xref href=\"System.Runtime.InteropServices.ComImportAttribute\"></xref>; otherwise, `false`."}],"pos":[212043,212188],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsInstanceOfType(System.Object)\"></xref> method.","nodes":[{"pos":[0,132],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsInstanceOfType(System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsInstanceOfType(System.Object)\"></xref> method."}],"pos":[213410,213543],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName> method determines whether the specified object is an instance of the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,280],"content":"The <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName> method determines whether the specified object is an instance of the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName&gt;</ph> method determines whether the specified object is an instance of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,164],"source":"The <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName> method determines whether the specified object is an instance of the current <xref:System.Type>."}]}],"pos":[213554,213839],"yaml":true,"extradata":"MT"},{"content":"The object to compare with the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,72],"content":"The object to compare with the current <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The object to compare with the current <xref href=\"System.Type\"></xref>."}],"pos":[213976,214049],"yaml":true},{"content":"`true` if the current <xref href=\"System.Type\"></xref> is in the inheritance hierarchy of the object represented by <code>o</code>, or if the current <xref href=\"System.Type\"></xref> is an interface that <code>o</code> supports. `false` if neither of these conditions is the case, or if <code>o</code> is `null`, or if the current <xref href=\"System.Type\"></xref> is an open generic type (that is, <xref href=\"System.Type.ContainsGenericParameters\"></xref> returns `true`).","nodes":[{"pos":[0,473],"content":"`true` if the current <xref href=\"System.Type\"></xref> is in the inheritance hierarchy of the object represented by <code>o</code>, or if the current <xref href=\"System.Type\"></xref> is an interface that <code>o</code> supports. `false` if neither of these conditions is the case, or if <code>o</code> is `null`, or if the current <xref href=\"System.Type\"></xref> is an open generic type (that is, <xref href=\"System.Type.ContainsGenericParameters\"></xref> returns `true`).","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is in the inheritance hierarchy of the object represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or if the current <ph id=\"ph4\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is an interface that <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">o</ph><ept id=\"p2\">&lt;/code&gt;</ept> supports.","pos":[0,228],"source":"`true` if the current <xref href=\"System.Type\"></xref> is in the inheritance hierarchy of the object represented by <code>o</code>, or if the current <xref href=\"System.Type\"></xref> is an interface that <code>o</code> supports."},{"content":"<ph id=\"ph1\">`false`</ph> if neither of these conditions is the case, or if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>, or if the current <ph id=\"ph4\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is an open generic type (that is, <ph id=\"ph5\">&lt;xref href=\"System.Type.ContainsGenericParameters\"&gt;&lt;/xref&gt;</ph> returns <ph id=\"ph6\">`true`</ph>).","pos":[229,473],"source":"`false` if neither of these conditions is the case, or if <code>o</code> is `null`, or if the current <xref href=\"System.Type\"></xref> is an open generic type (that is, <xref href=\"System.Type.ContainsGenericParameters\"></xref> returns `true`)."}]}],"pos":[214107,214583],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsInterface\"></xref> property.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsInterface\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsInterface\"></xref> property."}],"pos":[215716,215831],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsInterface%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an interface; that is, not a class or a value type.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,299],"content":"The <xref:System.Type.IsInterface%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an interface; that is, not a class or a value type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsInterface%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is an interface; that is, not a class or a value type.","pos":[0,181],"source":"The <xref:System.Type.IsInterface%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an interface; that is, not a class or a value type."}]}],"pos":[215842,216146],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is an interface; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is an interface; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is an interface; otherwise, `false`."}],"pos":[216260,216346],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsLayoutSequential\"></xref> property.","nodes":[{"pos":[0,121],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsLayoutSequential\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsLayoutSequential\"></xref> property."}],"pos":[217516,217638],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `SequentialLayout` is selected for the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,314],"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the class layout attribute <ph id=\"ph2\">`SequentialLayout`</ph> is selected for the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","source":"The <xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `SequentialLayout` is selected for the <xref:System.Type>."}],"pos":[217649,217968],"yaml":true,"extradata":"MT"},{"content":"`true` if the class layout attribute `SequentialLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the class layout attribute <ph id=\"ph2\">`SequentialLayout`</ph> is selected for the <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the class layout attribute `SequentialLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`."}],"pos":[218089,218221],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsMarshalByRef\"></xref> property.","nodes":[{"pos":[0,117],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsMarshalByRef\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsMarshalByRef\"></xref> property."}],"pos":[219374,219492],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName> property gets a value indicating whether the Type is marshaled by reference.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,260],"content":"The <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName> property gets a value indicating whether the Type is marshaled by reference.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the Type is marshaled by reference.","pos":[0,142],"source":"The <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName> property gets a value indicating whether the Type is marshaled by reference."}]}],"pos":[219503,219768],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is marshaled by reference; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is marshaled by reference; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is marshaled by reference; otherwise, `false`."}],"pos":[219885,219981],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedAssembly\"></xref> property.","nodes":[{"pos":[0,119],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsNestedAssembly\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedAssembly\"></xref> property."}],"pos":[221142,221262],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own assembly.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,301],"content":"The <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own assembly.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is nested and visible only within its own assembly.","pos":[0,183],"source":"The <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own assembly."}]}],"pos":[221273,221579],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is nested and visible only within its own assembly; otherwise, `false`.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is nested and visible only within its own assembly; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is nested and visible only within its own assembly; otherwise, `false`."}],"pos":[221698,221819],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamANDAssem\"></xref> property.","nodes":[{"pos":[0,122],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsNestedFamANDAssem\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamANDAssem\"></xref> property."}],"pos":[223000,223123],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,347],"content":"The <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is nested and visible only to classes that belong to both its own family and its own assembly.","pos":[0,229],"source":"The <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly."}]}],"pos":[223134,223486],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, `false`.","nodes":[{"pos":[0,161],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, `false`."}],"pos":[223608,223772],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamily\"></xref> property.","nodes":[{"pos":[0,117],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsNestedFamily\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamily\"></xref> property."}],"pos":[224926,225044],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own family.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,297],"content":"The <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own family.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsNestedFamily%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is nested and visible only within its own family.","pos":[0,179],"source":"The <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own family."}]}],"pos":[225055,225357],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is nested and visible only within its own family; otherwise, `false`.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is nested and visible only within its own family; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is nested and visible only within its own family; otherwise, `false`."}],"pos":[225474,225593],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamORAssem\"></xref> property.","nodes":[{"pos":[0,121],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsNestedFamORAssem\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamORAssem\"></xref> property."}],"pos":[226766,226888],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to either its own family or to its own assembly.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,350],"content":"The <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to either its own family or to its own assembly.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is nested and visible only to classes that belong to either its own family or to its own assembly.","pos":[0,232],"source":"The <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to either its own family or to its own assembly."}]}],"pos":[226899,227254],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, `false`.","nodes":[{"pos":[0,158],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, `false`."}],"pos":[227375,227536],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedPrivate\"></xref> property.","nodes":[{"pos":[0,118],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsNestedPrivate\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedPrivate\"></xref> property."}],"pos":[228695,228814],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and declared private.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,280],"content":"The <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and declared private.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is nested and declared private.","pos":[0,162],"source":"The <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and declared private."}]}],"pos":[228825,229110],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is nested and declared private; otherwise, `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is nested and declared private; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is nested and declared private; otherwise, `false`."}],"pos":[229228,229329],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedPublic\"></xref> property.","nodes":[{"pos":[0,117],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsNestedPublic\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedPublic\"></xref> property."}],"pos":[230479,230597],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName> property gets a value indicating whether a class is nested and declared public.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,263],"content":"The <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName> property gets a value indicating whether a class is nested and declared public.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsNestedPublic%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether a class is nested and declared public.","pos":[0,145],"source":"The <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName> property gets a value indicating whether a class is nested and declared public."}]}],"pos":[230608,230876],"yaml":true,"extradata":"MT"},{"content":"`true` if the class is nested and declared public; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the class is nested and declared public; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the class is nested and declared public; otherwise, `false`."}],"pos":[230993,231066],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNotPublic\"></xref> property.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsNotPublic\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNotPublic\"></xref> property."}],"pos":[232197,232312],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsNotPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is not declared public.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,278],"content":"The <xref:System.Type.IsNotPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is not declared public.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsNotPublic%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the top-level <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is not declared public.","pos":[0,160],"source":"The <xref:System.Type.IsNotPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is not declared public."}]}],"pos":[232323,232606],"yaml":true,"extradata":"MT"},{"content":"`true` if the top-level <xref href=\"System.Type\"></xref> is not declared public; otherwise, `false`.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> if the top-level <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is not declared public; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the top-level <xref href=\"System.Type\"></xref> is not declared public; otherwise, `false`."}],"pos":[232720,232823],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPointer\"></xref> property.","nodes":[{"pos":[0,112],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsPointer\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPointer\"></xref> property."}],"pos":[233939,234052],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsPointer%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a pointer.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,256],"content":"The <xref:System.Type.IsPointer%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a pointer.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsPointer%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is a pointer.","pos":[0,138],"source":"The <xref:System.Type.IsPointer%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a pointer."}]}],"pos":[234063,234324],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is a pointer; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is a pointer; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is a pointer; otherwise, `false`."}],"pos":[234436,234519],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPrimitive\"></xref> property.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsPrimitive\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPrimitive\"></xref> property."}],"pos":[235645,235760],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is one of the primitive types.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,275],"content":"The <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is one of the primitive types.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is one of the primitive types.","pos":[0,157],"source":"The <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is one of the primitive types."}]}],"pos":[235771,236051],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is one of the primitive types; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is one of the primitive types; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is one of the primitive types; otherwise, `false`."}],"pos":[236165,236265],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPublic\"></xref> property.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsPublic\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPublic\"></xref> property."}],"pos":[237375,237487],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is declared public.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,271],"content":"The <xref:System.Type.IsPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is declared public.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsPublic%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the top-level <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is declared public.","pos":[0,153],"source":"The <xref:System.Type.IsPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is declared public."}]}],"pos":[237498,237774],"yaml":true,"extradata":"MT"},{"content":"`true` if the top-level <xref href=\"System.Type\"></xref> is declared public; otherwise, `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if the top-level <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is declared public; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the top-level <xref href=\"System.Type\"></xref> is declared public; otherwise, `false`."}],"pos":[237885,237984],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSealed\"></xref> property.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsSealed\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSealed\"></xref> property."}],"pos":[239091,239203],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsSealed%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is declared sealed.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,261],"content":"The <xref:System.Type.IsSealed%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is declared sealed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsSealed%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is declared sealed.","pos":[0,143],"source":"The <xref:System.Type.IsSealed%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is declared sealed."}]}],"pos":[239214,239480],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is declared sealed; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is declared sealed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is declared sealed; otherwise, `false`."}],"pos":[239591,239680],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSerializable\"></xref> property.","nodes":[{"pos":[0,117],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsSerializable\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSerializable\"></xref> property."}],"pos":[240823,240941],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsSerializable%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is serializable.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,264],"content":"The <xref:System.Type.IsSerializable%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is serializable.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsSerializable%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is serializable.","pos":[0,146],"source":"The <xref:System.Type.IsSerializable%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is serializable."}]}],"pos":[240952,241221],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is serializable; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is serializable; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is serializable; otherwise, `false`."}],"pos":[241338,241424],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSpecialName\"></xref> property.","nodes":[{"pos":[0,116],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsSpecialName\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSpecialName\"></xref> property."}],"pos":[242567,242684],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsSpecialName%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has a name that requires special handling.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,289],"content":"The <xref:System.Type.IsSpecialName%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has a name that requires special handling.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsSpecialName%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> has a name that requires special handling.","pos":[0,171],"source":"The <xref:System.Type.IsSpecialName%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has a name that requires special handling."}]}],"pos":[242695,242989],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> has a name that requires special handling; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> has a name that requires special handling; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> has a name that requires special handling; otherwise, `false`."}],"pos":[243105,243217],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSubclassOf(System.Type)\"></xref> method.","nodes":[{"pos":[0,126],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsSubclassOf(System.Type)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSubclassOf(System.Type)\"></xref> method."}],"pos":[244408,244535],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName> method determines whether the class represented by the current <xref:System.Type> derives from the class represented by the specified <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,333],"content":"The <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName> method determines whether the class represented by the current <xref:System.Type> derives from the class represented by the specified <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsSubclassOf%2A?displayProperty=fullName&gt;</ph> method determines whether the class represented by the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> derives from the class represented by the specified <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","pos":[0,217],"source":"The <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName> method determines whether the class represented by the current <xref:System.Type> derives from the class represented by the specified <xref:System.Type>."}]}],"pos":[244546,244884],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> to compare with the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Type\"></xref> to compare with the current <xref href=\"System.Type\"></xref>."}],"pos":[245013,245112],"yaml":true},{"content":"`true` if the <xref href=\"System.Type\"></xref> represented by the <code>c</code> parameter and the current <xref href=\"System.Type\"></xref> represent classes, and the class represented by the current <xref href=\"System.Type\"></xref> derives from the class represented by <code>c</code>; otherwise, `false`. This method also returns `false` if <code>c</code> and the current <xref href=\"System.Type\"></xref> represent the same class.","nodes":[{"pos":[0,432],"content":"`true` if the <xref href=\"System.Type\"></xref> represented by the <code>c</code> parameter and the current <xref href=\"System.Type\"></xref> represent classes, and the class represented by the current <xref href=\"System.Type\"></xref> derives from the class represented by <code>c</code>; otherwise, `false`. This method also returns `false` if <code>c</code> and the current <xref href=\"System.Type\"></xref> represent the same class.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represented by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter and the current <ph id=\"ph4\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represent classes, and the class represented by the current <ph id=\"ph5\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> derives from the class represented by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph6\">c</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph7\">`false`</ph>.","pos":[0,306],"source":"`true` if the <xref href=\"System.Type\"></xref> represented by the <code>c</code> parameter and the current <xref href=\"System.Type\"></xref> represent classes, and the class represented by the current <xref href=\"System.Type\"></xref> derives from the class represented by <code>c</code>; otherwise, `false`."},{"content":"This method also returns <ph id=\"ph1\">`false`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">c</ph><ept id=\"p1\">&lt;/code&gt;</ept> and the current <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represent the same class.","pos":[307,432],"source":" This method also returns `false` if <code>c</code> and the current <xref href=\"System.Type\"></xref> represent the same class."}]}],"pos":[245170,245605],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsUnicodeClass\"></xref> property.","nodes":[{"pos":[0,117],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsUnicodeClass\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsUnicodeClass\"></xref> property."}],"pos":[246752,246870],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `UnicodeClass` is selected for the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,307],"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the string format attribute <ph id=\"ph2\">`UnicodeClass`</ph> is selected for the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph>.","source":"The <xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `UnicodeClass` is selected for the <xref:System.Type>."}],"pos":[246881,247193],"yaml":true,"extradata":"MT"},{"content":"`true` if the string format attribute `UnicodeClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">`true`</ph> if the string format attribute <ph id=\"ph2\">`UnicodeClass`</ph> is selected for the <ph id=\"ph3\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the string format attribute `UnicodeClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`."}],"pos":[247310,247439],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsValueType\"></xref> property.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.IsValueType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.IsValueType\"></xref> property."}],"pos":[248570,248685],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.IsValueType%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a value type.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,261],"content":"The <xref:System.Type.IsValueType%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a value type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.IsValueType%2A?displayProperty=fullName&gt;</ph> property gets a value indicating whether the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is a value type.","pos":[0,143],"source":"The <xref:System.Type.IsValueType%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a value type."}]}],"pos":[248696,248962],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Type\"></xref> is a value type; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is a value type; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is a value type; otherwise, `false`."}],"pos":[249076,249162],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.MemberType\"></xref> property.","nodes":[{"pos":[0,113],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.MemberType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.MemberType\"></xref> property."}],"pos":[250284,250398],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.MemberType%2A?displayProperty=fullName> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a type or a nested type.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,294],"content":"The <xref:System.Type.MemberType%2A?displayProperty=fullName> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a type or a nested type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.MemberType%2A?displayProperty=fullName&gt;</ph> property gets a <ph id=\"ph2\">&lt;xref:System.Reflection.MemberTypes&gt;</ph> value indicating that this member is a type or a nested type.","pos":[0,176],"source":"The <xref:System.Type.MemberType%2A?displayProperty=fullName> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a type or a nested type."}]}],"pos":[250409,250708],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a type or a nested type.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;&lt;/xref&gt;</ph> value indicating that this member is a type or a nested type.","source":"A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a type or a nested type."}],"pos":[250861,250976],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Module\"></xref> property.","nodes":[{"pos":[0,109],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.Module\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Module\"></xref> property."}],"pos":[252073,252183],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.Module%2A?displayProperty=fullName> property gets the module (the DLL) in which the current <xref:System.Type> is defined.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,262],"content":"The <xref:System.Type.Module%2A?displayProperty=fullName> property gets the module (the DLL) in which the current <xref:System.Type> is defined.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.Module%2A?displayProperty=fullName&gt;</ph> property gets the module (the DLL) in which the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> is defined.","pos":[0,144],"source":"The <xref:System.Type.Module%2A?displayProperty=fullName> property gets the module (the DLL) in which the current <xref:System.Type> is defined."}]}],"pos":[252194,252461],"yaml":true,"extradata":"MT"},{"content":"The name of the module in which the current <xref href=\"System.Type\"></xref> is defined.","nodes":[{"pos":[0,88],"content":"The name of the module in which the current <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is defined.","source":"The name of the module in which the current <xref href=\"System.Type\"></xref> is defined."}],"pos":[252600,252689],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property.","nodes":[{"pos":[0,124],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.Name\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property."}],"pos":[253770,253895],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName> property gets the name of the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,240],"content":"The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName> property gets the name of the <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName&gt;</ph> property gets the name of the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,122],"source":"The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName> property gets the name of the <xref:System.Type>."}]}],"pos":[253906,254151],"yaml":true,"extradata":"MT"},{"content":"The name of the <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,49],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the <xref href=\"System.Type\"></xref>."}],"pos":[254259,254309],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Namespace\"></xref> property.","nodes":[{"pos":[0,112],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.Namespace\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.Namespace\"></xref> property."}],"pos":[255418,255531],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.Namespace%2A?displayProperty=fullName> property gets the namespace of the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,233],"content":"The <xref:System.Type.Namespace%2A?displayProperty=fullName> property gets the namespace of the <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.Namespace%2A?displayProperty=fullName&gt;</ph> property gets the namespace of the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,115],"source":"The <xref:System.Type.Namespace%2A?displayProperty=fullName> property gets the namespace of the <xref:System.Type>."}]}],"pos":[255542,255780],"yaml":true,"extradata":"MT"},{"content":"The namespace of the <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,54],"content":"The namespace of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The namespace of the <xref href=\"System.Type\"></xref>."}],"pos":[255893,255948],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.ReflectedType\"></xref> property.","nodes":[{"pos":[0,116],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.ReflectedType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.ReflectedType\"></xref> property."}],"pos":[257086,257203],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.ReflectedType%2A?displayProperty=fullName> property gets the class object that was used to obtain this member.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,250],"content":"The <xref:System.Type.ReflectedType%2A?displayProperty=fullName> property gets the class object that was used to obtain this member.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.ReflectedType%2A?displayProperty=fullName&gt;</ph> property gets the class object that was used to obtain this member.","pos":[0,132],"source":"The <xref:System.Type.ReflectedType%2A?displayProperty=fullName> property gets the class object that was used to obtain this member."}]}],"pos":[257214,257469],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> object through which this <xref href=\"System.Reflection.MemberInfo\"></xref> object was obtained.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object through which this <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> object was obtained.","source":"The <xref href=\"System.Type\"></xref> object through which this <xref href=\"System.Reflection.MemberInfo\"></xref> object was obtained."}],"pos":[257582,257716],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.ToString\"></xref> method.","nodes":[{"pos":[0,109],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.ToString\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.ToString\"></xref> method."}],"pos":[258832,258942],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.ToString%2A?displayProperty=fullName> method returns the name of the current <xref:System.Type>.","nodes":[{"pos":[0,109],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]}]},{"pos":[116,234],"content":"The <xref:System.Type.ToString%2A?displayProperty=fullName> method returns the name of the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.ToString%2A?displayProperty=fullName&gt;</ph> method returns the name of the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,118],"source":"The <xref:System.Type.ToString%2A?displayProperty=fullName> method returns the name of the current <xref:System.Type>."}]}],"pos":[258953,259192],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> representing the name of the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> representing the name of the current <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.String\"></xref> representing the name of the current <xref href=\"System.Type\"></xref>."}],"pos":[259318,259426],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.TypeHandle\"></xref> property.","nodes":[{"pos":[0,113],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.TypeHandle\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.TypeHandle\"></xref> property."}],"pos":[260545,260659],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.TypeHandle%2A?displayProperty=fullName> property gets the handle for the current <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,240],"content":"The <xref:System.Type.TypeHandle%2A?displayProperty=fullName> property gets the handle for the current <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.TypeHandle%2A?displayProperty=fullName&gt;</ph> property gets the handle for the current <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,122],"source":"The <xref:System.Type.TypeHandle%2A?displayProperty=fullName> property gets the handle for the current <xref:System.Type>."}]}],"pos":[260670,260915],"yaml":true,"extradata":"MT"},{"content":"The handle for the current <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,60],"content":"The handle for the current <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The handle for the current <xref href=\"System.Type\"></xref>."}],"pos":[261051,261112],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.TypeInitializer\"></xref> property.","nodes":[{"pos":[0,118],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.TypeInitializer\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.TypeInitializer\"></xref> property."}],"pos":[262263,262382],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.TypeInitializer%2A?displayProperty=fullName> property gets the initializer for the <xref:System.Type>.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,242],"content":"The <xref:System.Type.TypeInitializer%2A?displayProperty=fullName> property gets the initializer for the <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.TypeInitializer%2A?displayProperty=fullName&gt;</ph> property gets the initializer for the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,124],"source":"The <xref:System.Type.TypeInitializer%2A?displayProperty=fullName> property gets the initializer for the <xref:System.Type>."}]}],"pos":[262393,262640],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Reflection.ConstructorInfo\"></xref> containing the name of the class constructor for the <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph> containing the name of the class constructor for the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Reflection.ConstructorInfo\"></xref> containing the name of the class constructor for the <xref href=\"System.Type\"></xref>."}],"pos":[262806,262950],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.UnderlyingSystemType\"></xref> property.","nodes":[{"pos":[0,123],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.UnderlyingSystemType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.UnderlyingSystemType\"></xref> property."}],"pos":[264136,264260],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \n  \n The <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName> property indicates the type provided by the common language runtime that represents this type.","nodes":[{"pos":[0,111],"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,284],"content":"The <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName> property indicates the type provided by the common language runtime that represents this type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName&gt;</ph> property indicates the type provided by the common language runtime that represents this type.","pos":[0,166],"source":"The <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName> property indicates the type provided by the common language runtime that represents this type."}]}],"pos":[264271,264560],"yaml":true,"extradata":"MT"},{"content":"The underlying system type for the <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,68],"content":"The underlying system type for the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"The underlying system type for the <xref href=\"System.Type\"></xref>."}],"pos":[264680,264749],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices._Type\n  commentId: T:System.Runtime.InteropServices._Type\n  id: _Type\n  children:\n  - System.Runtime.InteropServices._Type.Assembly\n  - System.Runtime.InteropServices._Type.AssemblyQualifiedName\n  - System.Runtime.InteropServices._Type.Attributes\n  - System.Runtime.InteropServices._Type.BaseType\n  - System.Runtime.InteropServices._Type.DeclaringType\n  - System.Runtime.InteropServices._Type.Equals(System.Object)\n  - System.Runtime.InteropServices._Type.Equals(System.Type)\n  - System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  - System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  - System.Runtime.InteropServices._Type.FullName\n  - System.Runtime.InteropServices._Type.GetArrayRank\n  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Runtime.InteropServices._Type.GetConstructor(System.Type[])\n  - System.Runtime.InteropServices._Type.GetConstructors\n  - System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)\n  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._Type.GetDefaultMembers\n  - System.Runtime.InteropServices._Type.GetElementType\n  - System.Runtime.InteropServices._Type.GetEvent(System.String)\n  - System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetEvents\n  - System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetField(System.String)\n  - System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetFields\n  - System.Runtime.InteropServices._Type.GetHashCode\n  - System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._Type.GetInterface(System.String)\n  - System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)\n  - System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)\n  - System.Runtime.InteropServices._Type.GetInterfaces\n  - System.Runtime.InteropServices._Type.GetMember(System.String)\n  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetMembers\n  - System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])\n  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Runtime.InteropServices._Type.GetMethod(System.String)\n  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Runtime.InteropServices._Type.GetMethods\n  - System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetNestedType(System.String)\n  - System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetNestedTypes\n  - System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetProperties\n  - System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])\n  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)\n  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])\n  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)\n  - System.Runtime.InteropServices._Type.GetProperty(System.String)\n  - System.Runtime.InteropServices._Type.GetType\n  - System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)\n  - System.Runtime.InteropServices._Type.GUID\n  - System.Runtime.InteropServices._Type.HasElementType\n  - System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - System.Runtime.InteropServices._Type.IsAbstract\n  - System.Runtime.InteropServices._Type.IsAnsiClass\n  - System.Runtime.InteropServices._Type.IsArray\n  - System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)\n  - System.Runtime.InteropServices._Type.IsAutoClass\n  - System.Runtime.InteropServices._Type.IsAutoLayout\n  - System.Runtime.InteropServices._Type.IsByRef\n  - System.Runtime.InteropServices._Type.IsClass\n  - System.Runtime.InteropServices._Type.IsCOMObject\n  - System.Runtime.InteropServices._Type.IsContextful\n  - System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._Type.IsEnum\n  - System.Runtime.InteropServices._Type.IsExplicitLayout\n  - System.Runtime.InteropServices._Type.IsImport\n  - System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)\n  - System.Runtime.InteropServices._Type.IsInterface\n  - System.Runtime.InteropServices._Type.IsLayoutSequential\n  - System.Runtime.InteropServices._Type.IsMarshalByRef\n  - System.Runtime.InteropServices._Type.IsNestedAssembly\n  - System.Runtime.InteropServices._Type.IsNestedFamANDAssem\n  - System.Runtime.InteropServices._Type.IsNestedFamily\n  - System.Runtime.InteropServices._Type.IsNestedFamORAssem\n  - System.Runtime.InteropServices._Type.IsNestedPrivate\n  - System.Runtime.InteropServices._Type.IsNestedPublic\n  - System.Runtime.InteropServices._Type.IsNotPublic\n  - System.Runtime.InteropServices._Type.IsPointer\n  - System.Runtime.InteropServices._Type.IsPrimitive\n  - System.Runtime.InteropServices._Type.IsPublic\n  - System.Runtime.InteropServices._Type.IsSealed\n  - System.Runtime.InteropServices._Type.IsSerializable\n  - System.Runtime.InteropServices._Type.IsSpecialName\n  - System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)\n  - System.Runtime.InteropServices._Type.IsUnicodeClass\n  - System.Runtime.InteropServices._Type.IsValueType\n  - System.Runtime.InteropServices._Type.MemberType\n  - System.Runtime.InteropServices._Type.Module\n  - System.Runtime.InteropServices._Type.Name\n  - System.Runtime.InteropServices._Type.Namespace\n  - System.Runtime.InteropServices._Type.ReflectedType\n  - System.Runtime.InteropServices._Type.ToString\n  - System.Runtime.InteropServices._Type.TypeHandle\n  - System.Runtime.InteropServices._Type.TypeInitializer\n  - System.Runtime.InteropServices._Type.UnderlyingSystemType\n  langs:\n  - csharp\n  name: _Type\n  nameWithType: _Type\n  fullName: System.Runtime.InteropServices._Type\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Exposes the public members of the <xref href=\"System.Type\"></xref> class to the unmanaged code.\n  remarks: \"This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n This interface preserves the vtable order of the <xref:System.Type?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface _Type\n  derivedClasses:\n  - System.Type\n  implements: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.Assembly\n  commentId: P:System.Runtime.InteropServices._Type.Assembly\n  id: Assembly\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: _Type.Assembly\n  fullName: _Type.Assembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.Assembly\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.Assembly%2A?displayProperty=fullName> property gets the <xref:System.Reflection.Assembly> in which the type is declared. For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined.\"\n  syntax:\n    content: public System.Reflection.Assembly Assembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: An <xref href=\"System.Reflection.Assembly\"></xref> instance that describes the assembly containing the current type.\n  overload: System.Runtime.InteropServices._Type.Assembly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName\n  commentId: P:System.Runtime.InteropServices._Type.AssemblyQualifiedName\n  id: AssemblyQualifiedName\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: AssemblyQualifiedName\n  nameWithType: _Type.AssemblyQualifiedName\n  fullName: _Type.AssemblyQualifiedName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.AssemblyQualifiedName\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> property gets the assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded.\"\n  syntax:\n    content: public string AssemblyQualifiedName { get; }\n    return:\n      type: System.String\n      description: The assembly-qualified name of the <xref href=\"System.Type\"></xref>, including the name of the assembly from which the <xref href=\"System.Type\"></xref> was loaded.\n  overload: System.Runtime.InteropServices._Type.AssemblyQualifiedName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.Attributes\n  commentId: P:System.Runtime.InteropServices._Type.Attributes\n  id: Attributes\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: _Type.Attributes\n  fullName: _Type.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.Attributes\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.Attributes%2A?displayProperty=fullName> property gets the attributes associated with the <xref:System.Type>.\"\n  syntax:\n    content: public System.Reflection.TypeAttributes Attributes { get; }\n    return:\n      type: System.Reflection.TypeAttributes\n      description: A <xref href=\"System.Reflection.TypeAttributes\"></xref> object representing the attribute set of the <xref href=\"System.Type\"></xref>, unless the <xref href=\"System.Type\"></xref> represents a generic type parameter, in which case the value is unspecified.\n  overload: System.Runtime.InteropServices._Type.Attributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.BaseType\n  commentId: P:System.Runtime.InteropServices._Type.BaseType\n  id: BaseType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: BaseType\n  nameWithType: _Type.BaseType\n  fullName: _Type.BaseType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.BaseType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.BaseType%2A?displayProperty=fullName> property gets the type from which the current <xref:System.Type> directly inherits.\"\n  syntax:\n    content: public Type BaseType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> from which the current <xref href=\"System.Type\"></xref> directly inherits, or `null` if the current `Type` represents the <xref href=\"System.Object\"></xref> class.\n  overload: System.Runtime.InteropServices._Type.BaseType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.DeclaringType\n  commentId: P:System.Runtime.InteropServices._Type.DeclaringType\n  id: DeclaringType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: _Type.DeclaringType\n  fullName: _Type.DeclaringType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.DeclaringType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.DeclaringType%2A?displayProperty=fullName> property gets the class that declares this member.\"\n  syntax:\n    content: public Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> object for the class that declares this member. If the type is a nested type, this property returns the enclosing type.\n  overload: System.Runtime.InteropServices._Type.DeclaringType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.Equals(System.Object)\n  commentId: M:System.Runtime.InteropServices._Type.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: _Type.Equals(Object)\n  fullName: _Type.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.Equals(System.Object)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object>.\"\n  syntax:\n    content: public bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> whose underlying system type is to be compared with the underlying system type of the current <xref href=\"System.Type\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the underlying system type of <code>o</code> is the same as the underlying system type of the current <xref href=\"System.Type\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.Equals(System.Type)\n  commentId: M:System.Runtime.InteropServices._Type.Equals(System.Type)\n  id: Equals(System.Type)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: Equals(Type)\n  nameWithType: _Type.Equals(Type)\n  fullName: _Type.Equals(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.Equals(System.Type)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Type>.\"\n  syntax:\n    content: public bool Equals (Type o);\n    parameters:\n    - id: o\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> whose underlying system type is to be compared with the underlying system type of the current <xref href=\"System.Type\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the underlying system type of <code>o</code> is the same as the underlying system type of the current <xref href=\"System.Type\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  commentId: M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  id: FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: FindInterfaces(TypeFilter, Object)\n  nameWithType: _Type.FindInterfaces(TypeFilter, Object)\n  fullName: _Type.FindInterfaces(TypeFilter, Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method returns an array of <xref:System.Type> objects representing a filtered list of interfaces implemented or inherited by the current <xref:System.Type>.\"\n  syntax:\n    content: public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);\n    parameters:\n    - id: filter\n      type: System.Reflection.TypeFilter\n      description: The <xref href=\"System.Reflection.TypeFilter\"></xref> delegate that compares the interfaces against <code>filterCriteria</code>.\n    - id: filterCriteria\n      type: System.Object\n      description: The search criteria that determines whether an interface should be included in the returned array.\n    return:\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing a filtered list of the interfaces implemented or inherited by the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Type\\\"></xref>, if no interfaces matching the filter are implemented or inherited by the current <xref href=\\\"System.Type\\\"></xref>.\"\n  overload: System.Runtime.InteropServices._Type.FindInterfaces*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  commentId: M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  id: FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  nameWithType: _Type.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  fullName: _Type.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.FindMembers%2A?displayProperty=fullName> method returns a filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type.\"\n  syntax:\n    content: public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);\n    parameters:\n    - id: memberType\n      type: System.Reflection.MemberTypes\n      description: A `MemberTypes` object indicating the type of member to search for.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    - id: filter\n      type: System.Reflection.MemberFilter\n      description: The delegate that does the comparisons, returning `true` if the member currently being inspected matches the <code>filterCriteria</code> and `false` otherwise. You can use the `FilterAttribute`, `FilterName`, and `FilterNameIgnoreCase` delegates supplied by this class. The first uses the fields of `FieldAttributes`, `MethodAttributes`, and `MethodImplAttributes` as search criteria, and the other two delegates use `String` objects as the search criteria.\n    - id: filterCriteria\n      type: System.Object\n      description: \"The search criteria that determines whether a member is returned in the array of `MemberInfo` objects.  \\n  \\n The fields of `FieldAttributes`, `MethodAttributes`, and `MethodImplAttributes` can be used in conjunction with the `FilterAttribute` delegate supplied by this class.\"\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: \"A filtered array of <xref href=\\\"System.Reflection.MemberInfo\\\"></xref> objects of the specified member type.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.MemberInfo\\\"></xref>, if the current <xref href=\\\"System.Type\\\"></xref> does not have members of type <code>memberType</code> that match the filter criteria.\"\n  overload: System.Runtime.InteropServices._Type.FindMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.FullName\n  commentId: P:System.Runtime.InteropServices._Type.FullName\n  id: FullName\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: FullName\n  nameWithType: _Type.FullName\n  fullName: _Type.FullName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.FullName\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.FullName%2A?displayProperty=fullName> property gets the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly.\"\n  syntax:\n    content: public string FullName { get; }\n    return:\n      type: System.String\n      description: A string containing the fully qualified name of the <xref href=\"System.Type\"></xref>, including the namespace of the <xref href=\"System.Type\"></xref> but not the assembly.\n  overload: System.Runtime.InteropServices._Type.FullName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetArrayRank\n  commentId: M:System.Runtime.InteropServices._Type.GetArrayRank\n  id: GetArrayRank\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetArrayRank()\n  nameWithType: _Type.GetArrayRank()\n  fullName: _Type.GetArrayRank()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetArrayRank\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetArrayRank%2A?displayProperty=fullName> method gets the number of dimensions in an <xref:System.Array>.\"\n  syntax:\n    content: public int GetArrayRank ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> containing the number of dimensions in the current <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.GetArrayRank*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType: _Type.GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: _Type.GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.\"\n  syntax:\n    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    - id: binder\n      type: System.Reflection.Binder\n      description: \"A <xref href=\\\"System.Reflection.Binder\\\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \\n  \\n -or-  \\n  \\n `null`, to use the <xref href=\\\"System.Type.DefaultBinder\\\"></xref>.\"\n    - id: callConvention\n      type: System.Reflection.CallingConventions\n      description: The <xref href=\"System.Reflection.CallingConventions\"></xref> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up.\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the constructor to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.\"\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the constructor that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetConstructor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])\n  nameWithType: _Type.GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])\n  fullName: _Type.GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    - id: binder\n      type: System.Reflection.Binder\n      description: \"A <xref href=\\\"System.Reflection.Binder\\\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \\n  \\n -or-  \\n  \\n `null`, to use the <xref href=\\\"System.Type.DefaultBinder\\\"></xref>.\"\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the constructor to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.Type.EmptyTypes\\\"></xref>.\"\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the parameter type array. The default binder does not process this parameter.\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the constructor that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetConstructor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])\n  commentId: M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])\n  id: GetConstructor(System.Type[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetConstructor(Type[])\n  nameWithType: _Type.GetConstructor(Type[])\n  fullName: _Type.GetConstructor(Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructor(System.Type[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a public instance constructor whose parameters match the types in the specified array.\"\n  syntax:\n    content: public System.Reflection.ConstructorInfo GetConstructor (Type[] types);\n    parameters:\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the desired constructor.  \\n  \\n -or-  \\n  \\n An empty array of <xref href=\\\"System.Type\\\"></xref> objects, to get a constructor that takes no parameters. Such an empty array is provided by the `static` field <xref href=\\\"System.Type.EmptyTypes\\\"></xref>.\"\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: A <xref href=\"System.Reflection.ConstructorInfo\"></xref> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetConstructor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetConstructors\n  commentId: M:System.Runtime.InteropServices._Type.GetConstructors\n  id: GetConstructors\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetConstructors()\n  nameWithType: _Type.GetConstructors()\n  fullName: _Type.GetConstructors()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructors\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method returns all the public constructors defined for the current <xref:System.Type>.\"\n  syntax:\n    content: public System.Reflection.ConstructorInfo[] GetConstructors ();\n    parameters: []\n    return:\n      type: System.Reflection.ConstructorInfo[]\n      description: An array of <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects representing all the public instance constructors defined for the current <xref href=\"System.Type\"></xref>, but not including the type initializer (static constructor). If no public instance constructors are defined for the current <xref href=\"System.Type\"></xref>, or if the current <xref href=\"System.Type\"></xref> represents a type parameter of a generic type or method definition, an empty array of type <xref href=\"System.Reflection.ConstructorInfo\"></xref> is returned.\n  overload: System.Runtime.InteropServices._Type.GetConstructors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)\n  id: GetConstructors(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetConstructors(BindingFlags)\n  nameWithType: _Type.GetConstructors(BindingFlags)\n  fullName: _Type.GetConstructors(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetConstructors(System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method searches for the constructors defined for the current <xref:System.Type>, using the specified <xref:System.Reflection.BindingFlags>.\"\n  syntax:\n    content: public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.ConstructorInfo[]\n      description: An array of <xref href=\"System.Reflection.ConstructorInfo\"></xref> objects representing all constructors defined for the current <xref href=\"System.Type\"></xref> that match the specified binding constraints, including the type initializer if it is defined. Returns an empty array of type <xref href=\"System.Reflection.ConstructorInfo\"></xref> if no constructors are defined for the current <xref href=\"System.Type\"></xref>, if none of the defined constructors match the binding constraints, or if the current <xref href=\"System.Type\"></xref> represents a type parameter of a generic type or method definition.\n  overload: System.Runtime.InteropServices._Type.GetConstructors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)\n  commentId: M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _Type.GetCustomAttributes(Boolean)\n  fullName: _Type.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member.\"\n  syntax:\n    content: public object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Object[]\n      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.\n  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: _Type.GetCustomAttributes(Type, Boolean)\n  fullName: _Type.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member.\"\n  syntax:\n    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Object[]\n      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.\n  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetDefaultMembers\n  commentId: M:System.Runtime.InteropServices._Type.GetDefaultMembers\n  id: GetDefaultMembers\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetDefaultMembers()\n  nameWithType: _Type.GetDefaultMembers()\n  fullName: _Type.GetDefaultMembers()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetDefaultMembers\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type> whose <xref:System.Reflection.DefaultMemberAttribute> is set.\"\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetDefaultMembers ();\n    parameters: []\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.MemberInfo\\\"></xref> objects representing all default members of the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.MemberInfo\\\"></xref>, if the current <xref href=\\\"System.Type\\\"></xref> does not have default members.\"\n  overload: System.Runtime.InteropServices._Type.GetDefaultMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetElementType\n  commentId: M:System.Runtime.InteropServices._Type.GetElementType\n  id: GetElementType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetElementType()\n  nameWithType: _Type.GetElementType()\n  fullName: _Type.GetElementType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetElementType\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetElementType%2A?displayProperty=fullName> method returns the <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type.\"\n  syntax:\n    content: public Type GetElementType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: \"The <xref href=\\\"System.Type\\\"></xref> of the object encompassed or referred to by the current array, pointer or reference type.  \\n  \\n -or-  \\n  \\n `null` if the current <xref href=\\\"System.Type\\\"></xref> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition.\"\n  overload: System.Runtime.InteropServices._Type.GetElementType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)\n  commentId: M:System.Runtime.InteropServices._Type.GetEvent(System.String)\n  id: GetEvent(System.String)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetEvent(String)\n  nameWithType: _Type.GetEvent(String)\n  fullName: _Type.GetEvent(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvent(System.String)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.EventInfo GetEvent (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.EventInfo\n      description: \"An array of <xref href=\\\"System.Reflection.EventInfo\\\"></xref> objects representing all events that are declared or inherited by the current <xref href=\\\"System.Type\\\"></xref> that match the specified binding constraints.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.EventInfo\\\"></xref>, if the current <xref href=\\\"System.Type\\\"></xref> does not have events, or if none of the events match the binding constraints.\"\n  overload: System.Runtime.InteropServices._Type.GetEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)\n  id: GetEvent(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetEvent(String, BindingFlags)\n  nameWithType: _Type.GetEvent(String, BindingFlags)\n  fullName: _Type.GetEvent(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method returns the <xref:System.Reflection.EventInfo> object representing the specified event, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of an event that is declared or inherited by the current <xref href=\"System.Type\"></xref>.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.EventInfo\n      description: The <xref href=\"System.Reflection.EventInfo\"></xref> object representing the specified event that is declared or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetEvents\n  commentId: M:System.Runtime.InteropServices._Type.GetEvents\n  id: GetEvents\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetEvents()\n  nameWithType: _Type.GetEvents()\n  fullName: _Type.GetEvents()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvents\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method returns all the public events that are declared or inherited by the current <xref:System.Type>.\"\n  syntax:\n    content: public System.Reflection.EventInfo[] GetEvents ();\n    parameters: []\n    return:\n      type: System.Reflection.EventInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.EventInfo\\\"></xref> objects representing all the public events that are declared or inherited by the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.EventInfo\\\"></xref>, if the current <xref href=\\\"System.Type\\\"></xref> does not have public events.\"\n  overload: System.Runtime.InteropServices._Type.GetEvents*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)\n  id: GetEvents(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetEvents(BindingFlags)\n  nameWithType: _Type.GetEvents(BindingFlags)\n  fullName: _Type.GetEvents(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetEvents(System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.EventInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.EventInfo\\\"></xref> objects representing all events that are declared or inherited by the current <xref href=\\\"System.Type\\\"></xref> that match the specified binding constraints.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.EventInfo\\\"></xref>, if the current <xref href=\\\"System.Type\\\"></xref> does not have events, or if none of the events match the binding constraints.\"\n  overload: System.Runtime.InteropServices._Type.GetEvents*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetField(System.String)\n  commentId: M:System.Runtime.InteropServices._Type.GetField(System.String)\n  id: GetField(System.String)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetField(String)\n  nameWithType: _Type.GetField(String)\n  fullName: _Type.GetField(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetField(System.String)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the public field with the specified name.\"\n  syntax:\n    content: public System.Reflection.FieldInfo GetField (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the data field to get.\n    return:\n      type: System.Reflection.FieldInfo\n      description: A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the public field with the specified name, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetField*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)\n  id: GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetField(String, BindingFlags)\n  nameWithType: _Type.GetField(String, BindingFlags)\n  fullName: _Type.GetField(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetField(System.String,System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the specified field, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the data field to get.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.FieldInfo\n      description: A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the field that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetField*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)\n  id: GetFields(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetFields(BindingFlags)\n  nameWithType: _Type.GetFields(BindingFlags)\n  fullName: _Type.GetFields(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetFields(System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetFields%2A?displayProperty=fullName> method searches for the fields defined for the current <xref:System.Type>, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.FieldInfo\\\"></xref> objects representing all fields defined for the current <xref href=\\\"System.Type\\\"></xref> that match the specified binding constraints.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.FieldInfo\\\"></xref>, if no fields are defined for the current <xref href=\\\"System.Type\\\"></xref>, or if none of the defined fields match the binding constraints.\"\n  overload: System.Runtime.InteropServices._Type.GetFields*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetFields\n  commentId: M:System.Runtime.InteropServices._Type.GetFields\n  id: GetFields\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetFields()\n  nameWithType: _Type.GetFields()\n  fullName: _Type.GetFields()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetFields\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetFields%2A?displayProperty=fullName> method returns all the public fields of the current <xref:System.Type>.\"\n  syntax:\n    content: public System.Reflection.FieldInfo[] GetFields ();\n    parameters: []\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.FieldInfo\\\"></xref> objects representing all the public fields defined for the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.FieldInfo\\\"></xref>, if no public fields are defined for the current <xref href=\\\"System.Type\\\"></xref>.\"\n  overload: System.Runtime.InteropServices._Type.GetFields*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetHashCode\n  commentId: M:System.Runtime.InteropServices._Type.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: _Type.GetHashCode()\n  fullName: _Type.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetHashCode\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetHashCode%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> containing the hash code for this instance.\n  overload: System.Runtime.InteropServices._Type.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: _Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: _Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array that receives the IDs corresponding to the names.\n  overload: System.Runtime.InteropServices._Type.GetIDsOfNames*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)\n  commentId: M:System.Runtime.InteropServices._Type.GetInterface(System.String)\n  id: GetInterface(System.String)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetInterface(String)\n  nameWithType: _Type.GetInterface(String)\n  fullName: _Type.GetInterface(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterface(System.String)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the interface with the specified name..\"\n  syntax:\n    content: public Type GetInterface (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the interface to get. For generic interfaces, this is the mangled name.\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the interface with the specified name, implemented or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetInterface*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)\n  commentId: M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)\n  id: GetInterface(System.String,System.Boolean)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetInterface(String, Boolean)\n  nameWithType: _Type.GetInterface(String, Boolean)\n  fullName: _Type.GetInterface(String, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterface(System.String,System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the specified interface, specifying whether to do a case-sensitive search.\"\n  syntax:\n    content: public Type GetInterface (string name, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the interface to get. For generic interfaces, this is the mangled name.\n    - id: ignoreCase\n      type: System.Boolean\n      description: \"`true` to perform a case-insensitive search for <code>name</code>.  \\n  \\n -or-  \\n  \\n `false` to perform a case-sensitive search for <code>name</code>.\"\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the interface with the specified name, implemented or inherited by the current <xref href=\"System.Type\"></xref>, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetInterface*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)\n  commentId: M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)\n  id: GetInterfaceMap(System.Type)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetInterfaceMap(Type)\n  nameWithType: _Type.GetInterfaceMap(Type)\n  fullName: _Type.GetInterfaceMap(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterfaceMap(System.Type)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName> method returns an interface mapping for the specified interface type.\"\n  syntax:\n    content: public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);\n    parameters:\n    - id: interfaceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the interface of which to retrieve a mapping.\n    return:\n      type: System.Reflection.InterfaceMapping\n      description: An <xref href=\"System.Reflection.InterfaceMapping\"></xref> object representing the interface mapping for <code>interfaceType</code>.\n  overload: System.Runtime.InteropServices._Type.GetInterfaceMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetInterfaces\n  commentId: M:System.Runtime.InteropServices._Type.GetInterfaces\n  id: GetInterfaces\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetInterfaces()\n  nameWithType: _Type.GetInterfaces()\n  fullName: _Type.GetInterfaces()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetInterfaces\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetInterfaces%2A?displayProperty=fullName> method gets all the interfaces implemented or inherited by the current <xref:System.Type>.\"\n  syntax:\n    content: public Type[] GetInterfaces ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing all the interfaces implemented or inherited by the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Type\\\"></xref>, if no interfaces are implemented or inherited by the current <xref href=\\\"System.Type\\\"></xref>.\"\n  overload: System.Runtime.InteropServices._Type.GetInterfaces*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMember(System.String)\n  commentId: M:System.Runtime.InteropServices._Type.GetMember(System.String)\n  id: GetMember(System.String)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMember(String)\n  nameWithType: _Type.GetMember(String)\n  fullName: _Type.GetMember(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the public members with the specified name.\"\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMember (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public members to get.\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array.\n  overload: System.Runtime.InteropServices._Type.GetMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)\n  id: GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMember(String, BindingFlags)\n  nameWithType: _Type.GetMember(String, BindingFlags)\n  fullName: _Type.GetMember(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String,System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the members to get.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return an empty array.\"\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array.\n  overload: System.Runtime.InteropServices._Type.GetMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMember(String, MemberTypes, BindingFlags)\n  nameWithType: _Type.GetMember(String, MemberTypes, BindingFlags)\n  fullName: _Type.GetMember(String, MemberTypes, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members of the specified member type, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the members to get.\n    - id: type\n      type: System.Reflection.MemberTypes\n      description: The <xref href=\"System.Reflection.MemberTypes\"></xref> value to search for.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return an empty array.\"\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of <xref href=\"System.Reflection.MemberInfo\"></xref> objects representing the public members with the specified name, if found; otherwise, an empty array.\n  overload: System.Runtime.InteropServices._Type.GetMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMembers\n  commentId: M:System.Runtime.InteropServices._Type.GetMembers\n  id: GetMembers\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMembers()\n  nameWithType: _Type.GetMembers()\n  fullName: _Type.GetMembers()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMembers\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method returns all the public members of the current <xref:System.Type>.\"\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMembers ();\n    parameters: []\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.MemberInfo\\\"></xref> objects representing all the public members of the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.MemberInfo\\\"></xref>, if the current <xref href=\\\"System.Type\\\"></xref> does not have public members.\"\n  overload: System.Runtime.InteropServices._Type.GetMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)\n  id: GetMembers(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMembers(BindingFlags)\n  nameWithType: _Type.GetMembers(BindingFlags)\n  fullName: _Type.GetMembers(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMembers(System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type>, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.MemberInfo\\\"></xref> objects representing all members defined for the current <xref href=\\\"System.Type\\\"></xref> that match the specified binding constraints.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.MemberInfo\\\"></xref>, if no members are defined for the current <xref href=\\\"System.Type\\\"></xref>, or if none of the defined members match the binding constraints.\"\n  overload: System.Runtime.InteropServices._Type.GetMembers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])\n  commentId: M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])\n  id: GetMethod(System.String,System.Type[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMethod(String, Type[])\n  nameWithType: _Type.GetMethod(String, Type[])\n  fullName: _Type.GetMethod(String, Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Type[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public method to get.\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the method to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.\"\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method whose parameters match the specified argument types, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType: _Type.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: _Type.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the method to get.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    - id: binder\n      type: System.Reflection.Binder\n      description: \"A <xref href=\\\"System.Reflection.Binder\\\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \\n  \\n -or-  \\n  \\n `null`, to use the <xref href=\\\"System.Type.DefaultBinder\\\"></xref>.\"\n    - id: callConvention\n      type: System.Reflection.CallingConventions\n      description: The <xref href=\"System.Reflection.CallingConventions\"></xref> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up.\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the method to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.\"\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  nameWithType: _Type.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  fullName: _Type.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the method to get.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    - id: binder\n      type: System.Reflection.Binder\n      description: \"A <xref href=\\\"System.Reflection.Binder\\\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \\n  \\n -or-  \\n  \\n `null`, to use the <xref href=\\\"System.Type.DefaultBinder\\\"></xref>.\"\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the method to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.\"\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)\n  commentId: M:System.Runtime.InteropServices._Type.GetMethod(System.String)\n  id: GetMethod(System.String)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMethod(String)\n  nameWithType: _Type.GetMethod(String)\n  fullName: _Type.GetMethod(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the public method with the specified name..\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public method to get.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method with the specified name, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)\n  id: GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMethod(String, BindingFlags)\n  nameWithType: _Type.GetMethod(String, BindingFlags)\n  fullName: _Type.GetMethod(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the method to get.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the method that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMethod(String, Type[], ParameterModifier[])\n  nameWithType: _Type.GetMethod(String, Type[], ParameterModifier[])\n  fullName: _Type.GetMethod(String, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types and modifiers.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public method to get.\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the method to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.\"\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public method that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMethods\n  commentId: M:System.Runtime.InteropServices._Type.GetMethods\n  id: GetMethods\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMethods()\n  nameWithType: _Type.GetMethods()\n  fullName: _Type.GetMethods()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethods\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method returns all the public methods of the current <xref:System.Type>.\"\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetMethods ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.MethodInfo\\\"></xref> objects representing all the public methods defined for the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.MethodInfo\\\"></xref>, if no public methods are defined for the current <xref href=\\\"System.Type\\\"></xref>.\"\n  overload: System.Runtime.InteropServices._Type.GetMethods*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)\n  id: GetMethods(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetMethods(BindingFlags)\n  nameWithType: _Type.GetMethods(BindingFlags)\n  fullName: _Type.GetMethods(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetMethods(System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method searches for the methods defined for the current <xref:System.Type>, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.MethodInfo\\\"></xref> objects representing all methods defined for the current <xref href=\\\"System.Type\\\"></xref> that match the specified binding constraints.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.MethodInfo\\\"></xref>, if no methods are defined for the current <xref href=\\\"System.Type\\\"></xref>, or if none of the defined methods match the binding constraints.\"\n  overload: System.Runtime.InteropServices._Type.GetMethods*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)\n  commentId: M:System.Runtime.InteropServices._Type.GetNestedType(System.String)\n  id: GetNestedType(System.String)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetNestedType(String)\n  nameWithType: _Type.GetNestedType(String)\n  fullName: _Type.GetNestedType(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedType(System.String)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the public nested type with the specified name.\"\n  syntax:\n    content: public Type GetNestedType (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The string containing the name of the nested type to get.\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the public nested type with the specified name, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetNestedType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n  id: GetNestedType(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetNestedType(String, BindingFlags)\n  nameWithType: _Type.GetNestedType(String, BindingFlags)\n  fullName: _Type.GetNestedType(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the specified nested type, using the specified binding constraints.\"\n  syntax:\n    content: public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The string containing the name of the nested type to get.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the nested type that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetNestedType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetNestedTypes\n  commentId: M:System.Runtime.InteropServices._Type.GetNestedTypes\n  id: GetNestedTypes\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetNestedTypes()\n  nameWithType: _Type.GetNestedTypes()\n  fullName: _Type.GetNestedTypes()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedTypes\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName> method returns all the types nested within the current <xref:System.Type>.\"\n  syntax:\n    content: public Type[] GetNestedTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing all the types nested within the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Type\\\"></xref>, if no types are nested within the current <xref href=\\\"System.Type\\\"></xref>.\"\n  overload: System.Runtime.InteropServices._Type.GetNestedTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)\n  id: GetNestedTypes(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetNestedTypes(BindingFlags)\n  nameWithType: _Type.GetNestedTypes(BindingFlags)\n  fullName: _Type.GetNestedTypes(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetNestedTypes(System.Reflection.BindingFlags)\"></xref> method, and searches for the types nested within the current <xref href=\"System.Type\"></xref>, using the specified binding constraints.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code.\n  syntax:\n    content: public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing all the types nested within the current <xref href=\\\"System.Type\\\"></xref> that match the specified binding constraints.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Type\\\"></xref>, if no types are nested within the current <xref href=\\\"System.Type\\\"></xref>, or if none of the nested types match the binding constraints.\"\n  overload: System.Runtime.InteropServices._Type.GetNestedTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperties\n  commentId: M:System.Runtime.InteropServices._Type.GetProperties\n  id: GetProperties\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperties()\n  nameWithType: _Type.GetProperties()\n  fullName: _Type.GetProperties()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperties\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method returns all the public properties of the current <xref:System.Type>.\"\n  syntax:\n    content: public System.Reflection.PropertyInfo[] GetProperties ();\n    parameters: []\n    return:\n      type: System.Reflection.PropertyInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.PropertyInfo\\\"></xref> objects representing all public properties of the current <xref href=\\\"System.Type\\\"></xref>.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.PropertyInfo\\\"></xref>, if the current <xref href=\\\"System.Type\\\"></xref> does not have public properties.\"\n  overload: System.Runtime.InteropServices._Type.GetProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)\n  id: GetProperties(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperties(BindingFlags)\n  nameWithType: _Type.GetProperties(BindingFlags)\n  fullName: _Type.GetProperties(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperties(System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method searches for the properties of the current <xref:System.Type>, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.PropertyInfo[]\n      description: \"An array of <xref href=\\\"System.Reflection.PropertyInfo\\\"></xref> objects representing all properties of the current <xref href=\\\"System.Type\\\"></xref> that match the specified binding constraints.  \\n  \\n -or-  \\n  \\n An empty array of type <xref href=\\\"System.Reflection.PropertyInfo\\\"></xref>, if the current <xref href=\\\"System.Type\\\"></xref> does not have properties, or if none of the properties match the binding constraints.\"\n  overload: System.Runtime.InteropServices._Type.GetProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperty(String, Type, Type[], ParameterModifier[])\n  nameWithType: _Type.GetProperty(String, Type, Type[], ParameterModifier[])\n  fullName: _Type.GetProperty(String, Type, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types and modifiers.\"\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public property to get.\n    - id: returnType\n      type: System.Type\n      description: The return type of the property.\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed.\"\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  nameWithType: _Type.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  fullName: _Type.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the property to get.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    - id: binder\n      type: System.Reflection.Binder\n      description: \"A <xref href=\\\"System.Reflection.Binder\\\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \\n  \\n -or-  \\n  \\n `null`, to use the <xref href=\\\"System.Type.DefaultBinder\\\"></xref>.\"\n    - id: returnType\n      type: System.Type\n      description: The return type of the property.\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed.\"\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>types</code> array. The default binder does not process this parameter.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the property that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])\n  commentId: M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])\n  id: GetProperty(System.String,System.Type,System.Type[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperty(String, Type, Type[])\n  nameWithType: _Type.GetProperty(String, Type, Type[])\n  fullName: _Type.GetProperty(String, Type, Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type,System.Type[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types.\"\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public property to get.\n    - id: returnType\n      type: System.Type\n      description: The return type of the property.\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed.\"\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property whose parameters match the specified argument types, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)\n  commentId: M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)\n  id: GetProperty(System.String,System.Type)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperty(String, Type)\n  nameWithType: _Type.GetProperty(String, Type)\n  fullName: _Type.GetProperty(String, Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name and return type.\"\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public property to get.\n    - id: returnType\n      type: System.Type\n      description: The return type of the property.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property with the specified name, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])\n  commentId: M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])\n  id: GetProperty(System.String,System.Type[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperty(String, Type[])\n  nameWithType: _Type.GetProperty(String, Type[])\n  fullName: _Type.GetProperty(String, Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Type[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types..\"\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public property to get.\n    - id: types\n      type: System.Type[]\n      description: \"An array of <xref href=\\\"System.Type\\\"></xref> objects representing the number, order, and type of the parameters for the indexed property to get.  \\n  \\n -or-  \\n  \\n An empty array of the type <xref href=\\\"System.Type\\\"></xref> (that is, Type[] types = new Type[0]) to get a property that is not indexed.\"\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property whose parameters match the specified argument types, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)\n  id: GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperty(String, BindingFlags)\n  nameWithType: _Type.GetProperty(String, BindingFlags)\n  fullName: _Type.GetProperty(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property, using the specified binding constraints.\"\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the property to get.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: \"A bitmask comprised of one or more <xref href=\\\"System.Reflection.BindingFlags\\\"></xref> that specify how the search is conducted.  \\n  \\n -or-  \\n  \\n Zero, to return `null`.\"\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the property that matches the specified requirements, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)\n  commentId: M:System.Runtime.InteropServices._Type.GetProperty(System.String)\n  id: GetProperty(System.String)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetProperty(String)\n  nameWithType: _Type.GetProperty(String)\n  fullName: _Type.GetProperty(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetProperty(System.String)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name.\"\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> containing the name of the public property to get.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A <xref href=\"System.Reflection.PropertyInfo\"></xref> object representing the public property with the specified name, if found; otherwise, `null`.\n  overload: System.Runtime.InteropServices._Type.GetProperty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetType\n  commentId: M:System.Runtime.InteropServices._Type.GetType\n  id: GetType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: _Type.GetType()\n  fullName: _Type.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetType\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetType%2A?displayProperty=fullName> method gets the current <xref:System.Type>.\"\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: The current <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.GetType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: _Type.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: _Type.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Runtime.InteropServices._Type.GetTypeInfo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _Type.GetTypeInfoCount(UInt32)\n  fullName: _Type.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Runtime.InteropServices._Type.GetTypeInfoCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.GUID\n  commentId: P:System.Runtime.InteropServices._Type.GUID\n  id: GUID\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: GUID\n  nameWithType: _Type.GUID\n  fullName: _Type.GUID\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GUID\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.GUID%2A?displayProperty=fullName> property gets the GUID associated with the <xref:System.Type>.\"\n  syntax:\n    content: public Guid GUID { get; }\n    return:\n      type: System.Guid\n      description: The GUID associated with the <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.GUID*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.HasElementType\n  commentId: P:System.Runtime.InteropServices._Type.HasElementType\n  id: HasElementType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: HasElementType\n  nameWithType: _Type.HasElementType\n  fullName: _Type.HasElementType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.HasElementType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.HasElementType%2A?displayProperty=fullName> property\"\n  syntax:\n    content: public bool HasElementType { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is an array, a pointer, or is passed by reference; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.HasElementType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: _Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: _Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Runtime.InteropServices._Type.Invoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  commentId: M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[])\n  nameWithType: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[])\n  fullName: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list.\"\n  syntax:\n    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);\n    parameters:\n    - id: name\n      type: System.String\n      description: \"The <xref href=\\\"System.String\\\"></xref> containing the name of the constructor, method, property, or field member to invoke.  \\n  \\n -or-  \\n  \\n An empty string (\\\"\\\") to invoke the default member.  \\n  \\n -or-  \\n  \\n For IDispatch members, a string representing the DispID, for example \\\"[DispID=3]\\\".\"\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.\n    - id: binder\n      type: System.Reflection.Binder\n      description: \"A <xref href=\\\"System.Reflection.Binder\\\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \\n  \\n -or-  \\n  \\n `null`, to use the <xref href=\\\"System.Type.DefaultBinder\\\"></xref>.\"\n    - id: target\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> on which to invoke the specified member.\n    - id: args\n      type: System.Object[]\n      description: An array containing the arguments to pass to the member to invoke.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> representing the return value of the invoked member.\n  overload: System.Runtime.InteropServices._Type.InvokeMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)\n  nameWithType: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)\n  fullName: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.\"\n  syntax:\n    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: name\n      type: System.String\n      description: \"The <xref href=\\\"System.String\\\"></xref> containing the name of the constructor, method, property, or field member to invoke.  \\n  \\n -or-  \\n  \\n An empty string (\\\"\\\") to invoke the default member.  \\n  \\n -or-  \\n  \\n For IDispatch members, a string representing the DispID, for example \\\"[DispID=3]\\\".\"\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.\n    - id: binder\n      type: System.Reflection.Binder\n      description: \"A <xref href=\\\"System.Reflection.Binder\\\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \\n  \\n -or-  \\n  \\n `null`, to use the <xref href=\\\"System.Type.DefaultBinder\\\"></xref>.\"\n    - id: target\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> on which to invoke the specified member.\n    - id: args\n      type: System.Object[]\n      description: An array containing the arguments to pass to the member to invoke.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: \"The <xref href=\\\"System.Globalization.CultureInfo\\\"></xref> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.  \\n  \\n -or-  \\n  \\n `null` to use the current thread's <xref href=\\\"System.Globalization.CultureInfo\\\"></xref>.\"\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> representing the return value of the invoked member.\n  overload: System.Runtime.InteropServices._Type.InvokeMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  commentId: M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  nameWithType: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  fullName: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.\"\n  syntax:\n    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);\n    parameters:\n    - id: name\n      type: System.String\n      description: \"The <xref href=\\\"System.String\\\"></xref> containing the name of the constructor, method, property, or field member to invoke.  \\n  \\n -or-  \\n  \\n An empty string (\\\"\\\") to invoke the default member.  \\n  \\n -or-  \\n  \\n For IDispatch members, a string representing the DispID, for example \\\"[DispID=3]\\\".\"\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: A bitmask comprised of one or more <xref href=\"System.Reflection.BindingFlags\"></xref> that specify how the search is conducted. The access can be one of the `BindingFlags` such as `Public`, `NonPublic`, `Private`, `InvokeMethod`, `GetField`, and so on. The type of lookup need not be specified. If the type of lookup is omitted, `BindingFlags.Public` | `BindingFlags.Instance` will apply.\n    - id: binder\n      type: System.Reflection.Binder\n      description: \"A <xref href=\\\"System.Reflection.Binder\\\"></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.  \\n  \\n -or-  \\n  \\n `null`, to use the <xref href=\\\"System.Type.DefaultBinder\\\"></xref>.\"\n    - id: target\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> on which to invoke the specified member.\n    - id: args\n      type: System.Object[]\n      description: An array containing the arguments to pass to the member to invoke.\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects representing the attributes associated with the corresponding element in the <code>args</code> array. A parameter's associated attributes are stored in the member's signature. The default binder does not process this parameter.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: \"The <xref href=\\\"System.Globalization.CultureInfo\\\"></xref> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.  \\n  \\n -or-  \\n  \\n `null` to use the current thread's <xref href=\\\"System.Globalization.CultureInfo\\\"></xref>.\"\n    - id: namedParameters\n      type: System.String[]\n      description: An array containing the names of the parameters to which the values in the <code>args</code> array are passed.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> representing the return value of the invoked member.\n  overload: System.Runtime.InteropServices._Type.InvokeMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsAbstract\n  commentId: P:System.Runtime.InteropServices._Type.IsAbstract\n  id: IsAbstract\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsAbstract\n  nameWithType: _Type.IsAbstract\n  fullName: _Type.IsAbstract\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAbstract\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsAbstract%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is abstract and must be overridden.\"\n  syntax:\n    content: public bool IsAbstract { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is abstract; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsAbstract*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsAnsiClass\n  commentId: P:System.Runtime.InteropServices._Type.IsAnsiClass\n  id: IsAnsiClass\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsAnsiClass\n  nameWithType: _Type.IsAnsiClass\n  fullName: _Type.IsAnsiClass\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAnsiClass\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsAnsiClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `AnsiClass` is selected for the <xref:System.Type>.\"\n  syntax:\n    content: public bool IsAnsiClass { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the string format attribute `AnsiClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsAnsiClass*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsArray\n  commentId: P:System.Runtime.InteropServices._Type.IsArray\n  id: IsArray\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsArray\n  nameWithType: _Type.IsArray\n  fullName: _Type.IsArray\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsArray\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsArray%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an array.\"\n  syntax:\n    content: public bool IsArray { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is an array; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsArray*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)\n  commentId: M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)\n  id: IsAssignableFrom(System.Type)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsAssignableFrom(Type)\n  nameWithType: _Type.IsAssignableFrom(Type)\n  fullName: _Type.IsAssignableFrom(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAssignableFrom(System.Type)\"></xref> method.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code.\n  syntax:\n    content: public bool IsAssignableFrom (Type c);\n    parameters:\n    - id: c\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to compare with the current <xref href=\"System.Type\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>c</code> and the current <xref href=\"System.Type\"></xref> represent the same type, or if the current <xref href=\"System.Type\"></xref> is in the inheritance hierarchy of <code>c</code>, or if the current <xref href=\"System.Type\"></xref> is an interface that <code>c</code> implements, or if <code>c</code> is a generic type parameter and the current <xref href=\"System.Type\"></xref> represents one of the constraints of <code>c</code>. `false` if none of these conditions are the case, or if <code>c</code> is `null`.'\n  overload: System.Runtime.InteropServices._Type.IsAssignableFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsAutoClass\n  commentId: P:System.Runtime.InteropServices._Type.IsAutoClass\n  id: IsAutoClass\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsAutoClass\n  nameWithType: _Type.IsAutoClass\n  fullName: _Type.IsAutoClass\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAutoClass\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsAutoClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `AutoClass` is selected for the <xref:System.Type>.\"\n  syntax:\n    content: public bool IsAutoClass { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the string format attribute `AutoClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsAutoClass*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsAutoLayout\n  commentId: P:System.Runtime.InteropServices._Type.IsAutoLayout\n  id: IsAutoLayout\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsAutoLayout\n  nameWithType: _Type.IsAutoLayout\n  fullName: _Type.IsAutoLayout\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsAutoLayout\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsAutoLayout%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `AutoLayout` is selected for the <xref:System.Type>.\"\n  syntax:\n    content: public bool IsAutoLayout { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the class layout attribute `AutoLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsAutoLayout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsByRef\n  commentId: P:System.Runtime.InteropServices._Type.IsByRef\n  id: IsByRef\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsByRef\n  nameWithType: _Type.IsByRef\n  fullName: _Type.IsByRef\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsByRef\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsByRef%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is passed by reference.\"\n  syntax:\n    content: public bool IsByRef { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is passed by reference; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsByRef*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsClass\n  commentId: P:System.Runtime.InteropServices._Type.IsClass\n  id: IsClass\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsClass\n  nameWithType: _Type.IsClass\n  fullName: _Type.IsClass\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsClass\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsClass%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a class; that is, not a value type or interface.\"\n  syntax:\n    content: public bool IsClass { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is a class; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsClass*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsCOMObject\n  commentId: P:System.Runtime.InteropServices._Type.IsCOMObject\n  id: IsCOMObject\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsCOMObject\n  nameWithType: _Type.IsCOMObject\n  fullName: _Type.IsCOMObject\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsCOMObject\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsCOMObject%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a COM object.\"\n  syntax:\n    content: public bool IsCOMObject { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is a COM object; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsCOMObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsContextful\n  commentId: P:System.Runtime.InteropServices._Type.IsContextful\n  id: IsContextful\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsContextful\n  nameWithType: _Type.IsContextful\n  fullName: _Type.IsContextful\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsContextful\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsContextful%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> can be hosted in a context.\"\n  syntax:\n    content: public bool IsContextful { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> can be hosted in a context; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsContextful*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsDefined(Type, Boolean)\n  nameWithType: _Type.IsDefined(Type, Boolean)\n  fullName: _Type.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName> method indicates whether one or more instance of `attributeType` is applied to this member.\"\n  syntax:\n    content: public bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The `Type` object to which the custom attributes are applied.\n    - id: inherit\n      type: System.Boolean\n      description: Specifies whether to search this member's inheritance chain to find the attributes.\n    return:\n      type: System.Boolean\n      description: '`true` if one or more instance of <code>attributeType</code> is applied to this member; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsDefined*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsEnum\n  commentId: P:System.Runtime.InteropServices._Type.IsEnum\n  id: IsEnum\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsEnum\n  nameWithType: _Type.IsEnum\n  fullName: _Type.IsEnum\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsEnum\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsEnum%2A?displayProperty=fullName> property gets a value indicating whether the current <xref:System.Type> represents an enumeration.\"\n  syntax:\n    content: public bool IsEnum { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.Type\"></xref> represents an enumeration; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsEnum*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsExplicitLayout\n  commentId: P:System.Runtime.InteropServices._Type.IsExplicitLayout\n  id: IsExplicitLayout\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsExplicitLayout\n  nameWithType: _Type.IsExplicitLayout\n  fullName: _Type.IsExplicitLayout\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsExplicitLayout\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `ExplicitLayout` is selected for the <xref:System.Type>.\"\n  syntax:\n    content: public bool IsExplicitLayout { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the class layout attribute `ExplicitLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsExplicitLayout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsImport\n  commentId: P:System.Runtime.InteropServices._Type.IsImport\n  id: IsImport\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsImport\n  nameWithType: _Type.IsImport\n  fullName: _Type.IsImport\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsImport\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsImport%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>, indicating that it was imported from a COM type library.\"\n  syntax:\n    content: public bool IsImport { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> has <xref href=\"System.Runtime.InteropServices.ComImportAttribute\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsImport*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)\n  commentId: M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)\n  id: IsInstanceOfType(System.Object)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsInstanceOfType(Object)\n  nameWithType: _Type.IsInstanceOfType(Object)\n  fullName: _Type.IsInstanceOfType(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsInstanceOfType(System.Object)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName> method determines whether the specified object is an instance of the current <xref:System.Type>.\"\n  syntax:\n    content: public bool IsInstanceOfType (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to compare with the current <xref href=\"System.Type\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.Type\"></xref> is in the inheritance hierarchy of the object represented by <code>o</code>, or if the current <xref href=\"System.Type\"></xref> is an interface that <code>o</code> supports. `false` if neither of these conditions is the case, or if <code>o</code> is `null`, or if the current <xref href=\"System.Type\"></xref> is an open generic type (that is, <xref href=\"System.Type.ContainsGenericParameters\"></xref> returns `true`).'\n  overload: System.Runtime.InteropServices._Type.IsInstanceOfType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsInterface\n  commentId: P:System.Runtime.InteropServices._Type.IsInterface\n  id: IsInterface\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsInterface\n  nameWithType: _Type.IsInterface\n  fullName: _Type.IsInterface\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsInterface\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsInterface%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an interface; that is, not a class or a value type.\"\n  syntax:\n    content: public bool IsInterface { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is an interface; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsInterface*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsLayoutSequential\n  commentId: P:System.Runtime.InteropServices._Type.IsLayoutSequential\n  id: IsLayoutSequential\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsLayoutSequential\n  nameWithType: _Type.IsLayoutSequential\n  fullName: _Type.IsLayoutSequential\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsLayoutSequential\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `SequentialLayout` is selected for the <xref:System.Type>.\"\n  syntax:\n    content: public bool IsLayoutSequential { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the class layout attribute `SequentialLayout` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsLayoutSequential*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsMarshalByRef\n  commentId: P:System.Runtime.InteropServices._Type.IsMarshalByRef\n  id: IsMarshalByRef\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsMarshalByRef\n  nameWithType: _Type.IsMarshalByRef\n  fullName: _Type.IsMarshalByRef\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsMarshalByRef\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName> property gets a value indicating whether the Type is marshaled by reference.\"\n  syntax:\n    content: public bool IsMarshalByRef { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is marshaled by reference; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsMarshalByRef*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsNestedAssembly\n  commentId: P:System.Runtime.InteropServices._Type.IsNestedAssembly\n  id: IsNestedAssembly\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsNestedAssembly\n  nameWithType: _Type.IsNestedAssembly\n  fullName: _Type.IsNestedAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedAssembly\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own assembly.\"\n  syntax:\n    content: public bool IsNestedAssembly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is nested and visible only within its own assembly; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsNestedAssembly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem\n  commentId: P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem\n  id: IsNestedFamANDAssem\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsNestedFamANDAssem\n  nameWithType: _Type.IsNestedFamANDAssem\n  fullName: _Type.IsNestedFamANDAssem\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamANDAssem\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly.\"\n  syntax:\n    content: public bool IsNestedFamANDAssem { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsNestedFamily\n  commentId: P:System.Runtime.InteropServices._Type.IsNestedFamily\n  id: IsNestedFamily\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsNestedFamily\n  nameWithType: _Type.IsNestedFamily\n  fullName: _Type.IsNestedFamily\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamily\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own family.\"\n  syntax:\n    content: public bool IsNestedFamily { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is nested and visible only within its own family; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsNestedFamily*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem\n  commentId: P:System.Runtime.InteropServices._Type.IsNestedFamORAssem\n  id: IsNestedFamORAssem\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsNestedFamORAssem\n  nameWithType: _Type.IsNestedFamORAssem\n  fullName: _Type.IsNestedFamORAssem\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedFamORAssem\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to either its own family or to its own assembly.\"\n  syntax:\n    content: public bool IsNestedFamORAssem { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsNestedFamORAssem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsNestedPrivate\n  commentId: P:System.Runtime.InteropServices._Type.IsNestedPrivate\n  id: IsNestedPrivate\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsNestedPrivate\n  nameWithType: _Type.IsNestedPrivate\n  fullName: _Type.IsNestedPrivate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedPrivate\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and declared private.\"\n  syntax:\n    content: public bool IsNestedPrivate { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is nested and declared private; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsNestedPrivate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsNestedPublic\n  commentId: P:System.Runtime.InteropServices._Type.IsNestedPublic\n  id: IsNestedPublic\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsNestedPublic\n  nameWithType: _Type.IsNestedPublic\n  fullName: _Type.IsNestedPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNestedPublic\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName> property gets a value indicating whether a class is nested and declared public.\"\n  syntax:\n    content: public bool IsNestedPublic { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the class is nested and declared public; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsNestedPublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsNotPublic\n  commentId: P:System.Runtime.InteropServices._Type.IsNotPublic\n  id: IsNotPublic\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsNotPublic\n  nameWithType: _Type.IsNotPublic\n  fullName: _Type.IsNotPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsNotPublic\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsNotPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is not declared public.\"\n  syntax:\n    content: public bool IsNotPublic { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the top-level <xref href=\"System.Type\"></xref> is not declared public; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsNotPublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsPointer\n  commentId: P:System.Runtime.InteropServices._Type.IsPointer\n  id: IsPointer\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsPointer\n  nameWithType: _Type.IsPointer\n  fullName: _Type.IsPointer\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPointer\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsPointer%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a pointer.\"\n  syntax:\n    content: public bool IsPointer { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is a pointer; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsPointer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsPrimitive\n  commentId: P:System.Runtime.InteropServices._Type.IsPrimitive\n  id: IsPrimitive\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsPrimitive\n  nameWithType: _Type.IsPrimitive\n  fullName: _Type.IsPrimitive\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPrimitive\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is one of the primitive types.\"\n  syntax:\n    content: public bool IsPrimitive { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is one of the primitive types; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsPrimitive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsPublic\n  commentId: P:System.Runtime.InteropServices._Type.IsPublic\n  id: IsPublic\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: _Type.IsPublic\n  fullName: _Type.IsPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsPublic\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is declared public.\"\n  syntax:\n    content: public bool IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the top-level <xref href=\"System.Type\"></xref> is declared public; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsPublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsSealed\n  commentId: P:System.Runtime.InteropServices._Type.IsSealed\n  id: IsSealed\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsSealed\n  nameWithType: _Type.IsSealed\n  fullName: _Type.IsSealed\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSealed\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsSealed%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is declared sealed.\"\n  syntax:\n    content: public bool IsSealed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is declared sealed; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsSealed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsSerializable\n  commentId: P:System.Runtime.InteropServices._Type.IsSerializable\n  id: IsSerializable\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsSerializable\n  nameWithType: _Type.IsSerializable\n  fullName: _Type.IsSerializable\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSerializable\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsSerializable%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is serializable.\"\n  syntax:\n    content: public bool IsSerializable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is serializable; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsSerializable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsSpecialName\n  commentId: P:System.Runtime.InteropServices._Type.IsSpecialName\n  id: IsSpecialName\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: _Type.IsSpecialName\n  fullName: _Type.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSpecialName\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsSpecialName%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has a name that requires special handling.\"\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> has a name that requires special handling; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsSpecialName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)\n  commentId: M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)\n  id: IsSubclassOf(System.Type)\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsSubclassOf(Type)\n  nameWithType: _Type.IsSubclassOf(Type)\n  fullName: _Type.IsSubclassOf(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsSubclassOf(System.Type)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName> method determines whether the class represented by the current <xref:System.Type> derives from the class represented by the specified <xref:System.Type>.\"\n  syntax:\n    content: public bool IsSubclassOf (Type c);\n    parameters:\n    - id: c\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to compare with the current <xref href=\"System.Type\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> represented by the <code>c</code> parameter and the current <xref href=\"System.Type\"></xref> represent classes, and the class represented by the current <xref href=\"System.Type\"></xref> derives from the class represented by <code>c</code>; otherwise, `false`. This method also returns `false` if <code>c</code> and the current <xref href=\"System.Type\"></xref> represent the same class.'\n  overload: System.Runtime.InteropServices._Type.IsSubclassOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsUnicodeClass\n  commentId: P:System.Runtime.InteropServices._Type.IsUnicodeClass\n  id: IsUnicodeClass\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsUnicodeClass\n  nameWithType: _Type.IsUnicodeClass\n  fullName: _Type.IsUnicodeClass\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsUnicodeClass\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `UnicodeClass` is selected for the <xref:System.Type>.\"\n  syntax:\n    content: public bool IsUnicodeClass { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the string format attribute `UnicodeClass` is selected for the <xref href=\"System.Type\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsUnicodeClass*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.IsValueType\n  commentId: P:System.Runtime.InteropServices._Type.IsValueType\n  id: IsValueType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: IsValueType\n  nameWithType: _Type.IsValueType\n  fullName: _Type.IsValueType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.IsValueType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.IsValueType%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a value type.\"\n  syntax:\n    content: public bool IsValueType { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is a value type; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._Type.IsValueType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.MemberType\n  commentId: P:System.Runtime.InteropServices._Type.MemberType\n  id: MemberType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: _Type.MemberType\n  fullName: _Type.MemberType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.MemberType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.MemberType%2A?displayProperty=fullName> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a type or a nested type.\"\n  syntax:\n    content: public System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is a type or a nested type.\n  overload: System.Runtime.InteropServices._Type.MemberType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.Module\n  commentId: P:System.Runtime.InteropServices._Type.Module\n  id: Module\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: Module\n  nameWithType: _Type.Module\n  fullName: _Type.Module\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.Module\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.Module%2A?displayProperty=fullName> property gets the module (the DLL) in which the current <xref:System.Type> is defined.\"\n  syntax:\n    content: public System.Reflection.Module Module { get; }\n    return:\n      type: System.Reflection.Module\n      description: The name of the module in which the current <xref href=\"System.Type\"></xref> is defined.\n  overload: System.Runtime.InteropServices._Type.Module*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.Name\n  commentId: P:System.Runtime.InteropServices._Type.Name\n  id: Name\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: Name\n  nameWithType: _Type.Name\n  fullName: _Type.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName> property gets the name of the <xref:System.Type>.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.Namespace\n  commentId: P:System.Runtime.InteropServices._Type.Namespace\n  id: Namespace\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: _Type.Namespace\n  fullName: _Type.Namespace\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.Namespace\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.Namespace%2A?displayProperty=fullName> property gets the namespace of the <xref:System.Type>.\"\n  syntax:\n    content: public string Namespace { get; }\n    return:\n      type: System.String\n      description: The namespace of the <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.Namespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.ReflectedType\n  commentId: P:System.Runtime.InteropServices._Type.ReflectedType\n  id: ReflectedType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: _Type.ReflectedType\n  fullName: _Type.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.ReflectedType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.ReflectedType%2A?displayProperty=fullName> property gets the class object that was used to obtain this member.\"\n  syntax:\n    content: public Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> object through which this <xref href=\"System.Reflection.MemberInfo\"></xref> object was obtained.\n  overload: System.Runtime.InteropServices._Type.ReflectedType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.ToString\n  commentId: M:System.Runtime.InteropServices._Type.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: _Type.ToString()\n  fullName: _Type.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.ToString\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.ToString%2A?displayProperty=fullName> method returns the name of the current <xref:System.Type>.\"\n  syntax:\n    content: public string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> representing the name of the current <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.TypeHandle\n  commentId: P:System.Runtime.InteropServices._Type.TypeHandle\n  id: TypeHandle\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: TypeHandle\n  nameWithType: _Type.TypeHandle\n  fullName: _Type.TypeHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.TypeHandle\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.TypeHandle%2A?displayProperty=fullName> property gets the handle for the current <xref:System.Type>.\"\n  syntax:\n    content: public RuntimeTypeHandle TypeHandle { get; }\n    return:\n      type: System.RuntimeTypeHandle\n      description: The handle for the current <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.TypeHandle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.TypeInitializer\n  commentId: P:System.Runtime.InteropServices._Type.TypeInitializer\n  id: TypeInitializer\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: TypeInitializer\n  nameWithType: _Type.TypeInitializer\n  fullName: _Type.TypeInitializer\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.TypeInitializer\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.TypeInitializer%2A?displayProperty=fullName> property gets the initializer for the <xref:System.Type>.\"\n  syntax:\n    content: public System.Reflection.ConstructorInfo TypeInitializer { get; }\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: A <xref href=\"System.Reflection.ConstructorInfo\"></xref> containing the name of the class constructor for the <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.TypeInitializer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType\n  commentId: P:System.Runtime.InteropServices._Type.UnderlyingSystemType\n  id: UnderlyingSystemType\n  parent: System.Runtime.InteropServices._Type\n  langs:\n  - csharp\n  name: UnderlyingSystemType\n  nameWithType: _Type.UnderlyingSystemType\n  fullName: _Type.UnderlyingSystemType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.UnderlyingSystemType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code, and should not be called from managed code.  \\n  \\n The <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName> property indicates the type provided by the common language runtime that represents this type.\"\n  syntax:\n    content: public Type UnderlyingSystemType { get; }\n    return:\n      type: System.Type\n      description: The underlying system type for the <xref href=\"System.Type\"></xref>.\n  overload: System.Runtime.InteropServices._Type.UnderlyingSystemType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Runtime.InteropServices._Type.Assembly\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Assembly\n  nameWithType: _Type.Assembly\n  fullName: _Type.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: AssemblyQualifiedName\n  nameWithType: _Type.AssemblyQualifiedName\n  fullName: _Type.AssemblyQualifiedName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices._Type.Attributes\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Attributes\n  nameWithType: _Type.Attributes\n  fullName: _Type.Attributes\n- uid: System.Reflection.TypeAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: TypeAttributes\n  nameWithType: TypeAttributes\n  fullName: System.Reflection.TypeAttributes\n- uid: System.Runtime.InteropServices._Type.BaseType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: BaseType\n  nameWithType: _Type.BaseType\n  fullName: _Type.BaseType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices._Type.DeclaringType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _Type.DeclaringType\n  fullName: _Type.DeclaringType\n- uid: System.Runtime.InteropServices._Type.Equals(System.Object)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: _Type.Equals(Object)\n  fullName: _Type.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices._Type.Equals(System.Type)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Equals(Type)\n  nameWithType: _Type.Equals(Type)\n  fullName: _Type.Equals(Type)\n- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: FindInterfaces(TypeFilter, Object)\n  nameWithType: _Type.FindInterfaces(TypeFilter, Object)\n  fullName: _Type.FindInterfaces(TypeFilter, Object)\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeFilter\n  parent: System.Reflection\n  isExternal: false\n  name: TypeFilter\n  nameWithType: TypeFilter\n  fullName: System.Reflection.TypeFilter\n- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  nameWithType: _Type.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  fullName: _Type.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n- uid: System.Reflection.MemberInfo\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Reflection.MemberInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo[]\n  nameWithType: MemberInfo[]\n  fullName: System.Reflection.MemberInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: System.Reflection.MemberInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.MemberFilter\n  parent: System.Reflection\n  isExternal: false\n  name: MemberFilter\n  nameWithType: MemberFilter\n  fullName: System.Reflection.MemberFilter\n- uid: System.Runtime.InteropServices._Type.FullName\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: FullName\n  nameWithType: _Type.FullName\n  fullName: _Type.FullName\n- uid: System.Runtime.InteropServices._Type.GetArrayRank\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetArrayRank()\n  nameWithType: _Type.GetArrayRank()\n  fullName: _Type.GetArrayRank()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType: _Type.GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: _Type.GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Reflection.ParameterModifier\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier\n- uid: System.Reflection.ParameterModifier[]\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier[]\n  nameWithType: ParameterModifier[]\n  fullName: System.Reflection.ParameterModifier[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    nameWithType: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])\n  nameWithType: _Type.GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])\n  fullName: _Type.GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])\n- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetConstructor(Type[])\n  nameWithType: _Type.GetConstructor(Type[])\n  fullName: _Type.GetConstructor(Type[])\n- uid: System.Runtime.InteropServices._Type.GetConstructors\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetConstructors()\n  nameWithType: _Type.GetConstructors()\n  fullName: _Type.GetConstructors()\n- uid: System.Reflection.ConstructorInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo[]\n  nameWithType: ConstructorInfo[]\n  fullName: System.Reflection.ConstructorInfo[]\n  spec.csharp:\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    nameWithType: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetConstructors(BindingFlags)\n  nameWithType: _Type.GetConstructors(BindingFlags)\n  fullName: _Type.GetConstructors(BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _Type.GetCustomAttributes(Boolean)\n  fullName: _Type.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: _Type.GetCustomAttributes(Type, Boolean)\n  fullName: _Type.GetCustomAttributes(Type, Boolean)\n- uid: System.Runtime.InteropServices._Type.GetDefaultMembers\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetDefaultMembers()\n  nameWithType: _Type.GetDefaultMembers()\n  fullName: _Type.GetDefaultMembers()\n- uid: System.Runtime.InteropServices._Type.GetElementType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetElementType()\n  nameWithType: _Type.GetElementType()\n  fullName: _Type.GetElementType()\n- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetEvent(String)\n  nameWithType: _Type.GetEvent(String)\n  fullName: _Type.GetEvent(String)\n- uid: System.Reflection.EventInfo\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo\n- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetEvent(String, BindingFlags)\n  nameWithType: _Type.GetEvent(String, BindingFlags)\n  fullName: _Type.GetEvent(String, BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetEvents\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetEvents()\n  nameWithType: _Type.GetEvents()\n  fullName: _Type.GetEvents()\n- uid: System.Reflection.EventInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo[]\n  nameWithType: EventInfo[]\n  fullName: System.Reflection.EventInfo[]\n  spec.csharp:\n  - uid: System.Reflection.EventInfo\n    name: EventInfo\n    nameWithType: EventInfo\n    fullName: System.Reflection.EventInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetEvents(BindingFlags)\n  nameWithType: _Type.GetEvents(BindingFlags)\n  fullName: _Type.GetEvents(BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetField(System.String)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetField(String)\n  nameWithType: _Type.GetField(String)\n  fullName: _Type.GetField(String)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetField(String, BindingFlags)\n  nameWithType: _Type.GetField(String, BindingFlags)\n  fullName: _Type.GetField(String, BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetFields(BindingFlags)\n  nameWithType: _Type.GetFields(BindingFlags)\n  fullName: _Type.GetFields(BindingFlags)\n- uid: System.Reflection.FieldInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo[]\n  nameWithType: FieldInfo[]\n  fullName: System.Reflection.FieldInfo[]\n  spec.csharp:\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    nameWithType: FieldInfo\n    fullName: System.Reflection.FieldInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._Type.GetFields\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetFields()\n  nameWithType: _Type.GetFields()\n  fullName: _Type.GetFields()\n- uid: System.Runtime.InteropServices._Type.GetHashCode\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: _Type.GetHashCode()\n  fullName: _Type.GetHashCode()\n- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: _Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: _Type.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetInterface(String)\n  nameWithType: _Type.GetInterface(String)\n  fullName: _Type.GetInterface(String)\n- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetInterface(String, Boolean)\n  nameWithType: _Type.GetInterface(String, Boolean)\n  fullName: _Type.GetInterface(String, Boolean)\n- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetInterfaceMap(Type)\n  nameWithType: _Type.GetInterfaceMap(Type)\n  fullName: _Type.GetInterfaceMap(Type)\n- uid: System.Reflection.InterfaceMapping\n  parent: System.Reflection\n  isExternal: false\n  name: InterfaceMapping\n  nameWithType: InterfaceMapping\n  fullName: System.Reflection.InterfaceMapping\n- uid: System.Runtime.InteropServices._Type.GetInterfaces\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetInterfaces()\n  nameWithType: _Type.GetInterfaces()\n  fullName: _Type.GetInterfaces()\n- uid: System.Runtime.InteropServices._Type.GetMember(System.String)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMember(String)\n  nameWithType: _Type.GetMember(String)\n  fullName: _Type.GetMember(String)\n- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMember(String, BindingFlags)\n  nameWithType: _Type.GetMember(String, BindingFlags)\n  fullName: _Type.GetMember(String, BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMember(String, MemberTypes, BindingFlags)\n  nameWithType: _Type.GetMember(String, MemberTypes, BindingFlags)\n  fullName: _Type.GetMember(String, MemberTypes, BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetMembers\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMembers()\n  nameWithType: _Type.GetMembers()\n  fullName: _Type.GetMembers()\n- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMembers(BindingFlags)\n  nameWithType: _Type.GetMembers(BindingFlags)\n  fullName: _Type.GetMembers(BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethod(String, Type[])\n  nameWithType: _Type.GetMethod(String, Type[])\n  fullName: _Type.GetMethod(String, Type[])\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType: _Type.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: _Type.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  nameWithType: _Type.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n  fullName: _Type.GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[])\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethod(String)\n  nameWithType: _Type.GetMethod(String)\n  fullName: _Type.GetMethod(String)\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethod(String, BindingFlags)\n  nameWithType: _Type.GetMethod(String, BindingFlags)\n  fullName: _Type.GetMethod(String, BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethod(String, Type[], ParameterModifier[])\n  nameWithType: _Type.GetMethod(String, Type[], ParameterModifier[])\n  fullName: _Type.GetMethod(String, Type[], ParameterModifier[])\n- uid: System.Runtime.InteropServices._Type.GetMethods\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethods()\n  nameWithType: _Type.GetMethods()\n  fullName: _Type.GetMethods()\n- uid: System.Reflection.MethodInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo[]\n  nameWithType: MethodInfo[]\n  fullName: System.Reflection.MethodInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    nameWithType: MethodInfo\n    fullName: System.Reflection.MethodInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethods(BindingFlags)\n  nameWithType: _Type.GetMethods(BindingFlags)\n  fullName: _Type.GetMethods(BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetNestedType(String)\n  nameWithType: _Type.GetNestedType(String)\n  fullName: _Type.GetNestedType(String)\n- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetNestedType(String, BindingFlags)\n  nameWithType: _Type.GetNestedType(String, BindingFlags)\n  fullName: _Type.GetNestedType(String, BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetNestedTypes\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetNestedTypes()\n  nameWithType: _Type.GetNestedTypes()\n  fullName: _Type.GetNestedTypes()\n- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetNestedTypes(BindingFlags)\n  nameWithType: _Type.GetNestedTypes(BindingFlags)\n  fullName: _Type.GetNestedTypes(BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetProperties\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperties()\n  nameWithType: _Type.GetProperties()\n  fullName: _Type.GetProperties()\n- uid: System.Reflection.PropertyInfo\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Reflection.PropertyInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo[]\n  nameWithType: PropertyInfo[]\n  fullName: System.Reflection.PropertyInfo[]\n  spec.csharp:\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperties(BindingFlags)\n  nameWithType: _Type.GetProperties(BindingFlags)\n  fullName: _Type.GetProperties(BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperty(String, Type, Type[], ParameterModifier[])\n  nameWithType: _Type.GetProperty(String, Type, Type[], ParameterModifier[])\n  fullName: _Type.GetProperty(String, Type, Type[], ParameterModifier[])\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  nameWithType: _Type.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n  fullName: _Type.GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[])\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperty(String, Type, Type[])\n  nameWithType: _Type.GetProperty(String, Type, Type[])\n  fullName: _Type.GetProperty(String, Type, Type[])\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperty(String, Type)\n  nameWithType: _Type.GetProperty(String, Type)\n  fullName: _Type.GetProperty(String, Type)\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperty(String, Type[])\n  nameWithType: _Type.GetProperty(String, Type[])\n  fullName: _Type.GetProperty(String, Type[])\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperty(String, BindingFlags)\n  nameWithType: _Type.GetProperty(String, BindingFlags)\n  fullName: _Type.GetProperty(String, BindingFlags)\n- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperty(String)\n  nameWithType: _Type.GetProperty(String)\n  fullName: _Type.GetProperty(String)\n- uid: System.Runtime.InteropServices._Type.GetType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetType()\n  nameWithType: _Type.GetType()\n  fullName: _Type.GetType()\n- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: _Type.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: _Type.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _Type.GetTypeInfoCount(UInt32)\n  fullName: _Type.GetTypeInfoCount(UInt32)\n- uid: System.Runtime.InteropServices._Type.GUID\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GUID\n  nameWithType: _Type.GUID\n  fullName: _Type.GUID\n- uid: System.Runtime.InteropServices._Type.HasElementType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: HasElementType\n  nameWithType: _Type.HasElementType\n  fullName: _Type.HasElementType\n- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: _Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: _Type.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[])\n  nameWithType: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[])\n  fullName: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[])\n- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)\n  nameWithType: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)\n  fullName: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  nameWithType: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n  fullName: _Type.InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._Type.IsAbstract\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAbstract\n  nameWithType: _Type.IsAbstract\n  fullName: _Type.IsAbstract\n- uid: System.Runtime.InteropServices._Type.IsAnsiClass\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAnsiClass\n  nameWithType: _Type.IsAnsiClass\n  fullName: _Type.IsAnsiClass\n- uid: System.Runtime.InteropServices._Type.IsArray\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsArray\n  nameWithType: _Type.IsArray\n  fullName: _Type.IsArray\n- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAssignableFrom(Type)\n  nameWithType: _Type.IsAssignableFrom(Type)\n  fullName: _Type.IsAssignableFrom(Type)\n- uid: System.Runtime.InteropServices._Type.IsAutoClass\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAutoClass\n  nameWithType: _Type.IsAutoClass\n  fullName: _Type.IsAutoClass\n- uid: System.Runtime.InteropServices._Type.IsAutoLayout\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAutoLayout\n  nameWithType: _Type.IsAutoLayout\n  fullName: _Type.IsAutoLayout\n- uid: System.Runtime.InteropServices._Type.IsByRef\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsByRef\n  nameWithType: _Type.IsByRef\n  fullName: _Type.IsByRef\n- uid: System.Runtime.InteropServices._Type.IsClass\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsClass\n  nameWithType: _Type.IsClass\n  fullName: _Type.IsClass\n- uid: System.Runtime.InteropServices._Type.IsCOMObject\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsCOMObject\n  nameWithType: _Type.IsCOMObject\n  fullName: _Type.IsCOMObject\n- uid: System.Runtime.InteropServices._Type.IsContextful\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsContextful\n  nameWithType: _Type.IsContextful\n  fullName: _Type.IsContextful\n- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: _Type.IsDefined(Type, Boolean)\n  fullName: _Type.IsDefined(Type, Boolean)\n- uid: System.Runtime.InteropServices._Type.IsEnum\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsEnum\n  nameWithType: _Type.IsEnum\n  fullName: _Type.IsEnum\n- uid: System.Runtime.InteropServices._Type.IsExplicitLayout\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsExplicitLayout\n  nameWithType: _Type.IsExplicitLayout\n  fullName: _Type.IsExplicitLayout\n- uid: System.Runtime.InteropServices._Type.IsImport\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsImport\n  nameWithType: _Type.IsImport\n  fullName: _Type.IsImport\n- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsInstanceOfType(Object)\n  nameWithType: _Type.IsInstanceOfType(Object)\n  fullName: _Type.IsInstanceOfType(Object)\n- uid: System.Runtime.InteropServices._Type.IsInterface\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsInterface\n  nameWithType: _Type.IsInterface\n  fullName: _Type.IsInterface\n- uid: System.Runtime.InteropServices._Type.IsLayoutSequential\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsLayoutSequential\n  nameWithType: _Type.IsLayoutSequential\n  fullName: _Type.IsLayoutSequential\n- uid: System.Runtime.InteropServices._Type.IsMarshalByRef\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsMarshalByRef\n  nameWithType: _Type.IsMarshalByRef\n  fullName: _Type.IsMarshalByRef\n- uid: System.Runtime.InteropServices._Type.IsNestedAssembly\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedAssembly\n  nameWithType: _Type.IsNestedAssembly\n  fullName: _Type.IsNestedAssembly\n- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedFamANDAssem\n  nameWithType: _Type.IsNestedFamANDAssem\n  fullName: _Type.IsNestedFamANDAssem\n- uid: System.Runtime.InteropServices._Type.IsNestedFamily\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedFamily\n  nameWithType: _Type.IsNestedFamily\n  fullName: _Type.IsNestedFamily\n- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedFamORAssem\n  nameWithType: _Type.IsNestedFamORAssem\n  fullName: _Type.IsNestedFamORAssem\n- uid: System.Runtime.InteropServices._Type.IsNestedPrivate\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedPrivate\n  nameWithType: _Type.IsNestedPrivate\n  fullName: _Type.IsNestedPrivate\n- uid: System.Runtime.InteropServices._Type.IsNestedPublic\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedPublic\n  nameWithType: _Type.IsNestedPublic\n  fullName: _Type.IsNestedPublic\n- uid: System.Runtime.InteropServices._Type.IsNotPublic\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNotPublic\n  nameWithType: _Type.IsNotPublic\n  fullName: _Type.IsNotPublic\n- uid: System.Runtime.InteropServices._Type.IsPointer\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsPointer\n  nameWithType: _Type.IsPointer\n  fullName: _Type.IsPointer\n- uid: System.Runtime.InteropServices._Type.IsPrimitive\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsPrimitive\n  nameWithType: _Type.IsPrimitive\n  fullName: _Type.IsPrimitive\n- uid: System.Runtime.InteropServices._Type.IsPublic\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsPublic\n  nameWithType: _Type.IsPublic\n  fullName: _Type.IsPublic\n- uid: System.Runtime.InteropServices._Type.IsSealed\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsSealed\n  nameWithType: _Type.IsSealed\n  fullName: _Type.IsSealed\n- uid: System.Runtime.InteropServices._Type.IsSerializable\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsSerializable\n  nameWithType: _Type.IsSerializable\n  fullName: _Type.IsSerializable\n- uid: System.Runtime.InteropServices._Type.IsSpecialName\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _Type.IsSpecialName\n  fullName: _Type.IsSpecialName\n- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsSubclassOf(Type)\n  nameWithType: _Type.IsSubclassOf(Type)\n  fullName: _Type.IsSubclassOf(Type)\n- uid: System.Runtime.InteropServices._Type.IsUnicodeClass\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsUnicodeClass\n  nameWithType: _Type.IsUnicodeClass\n  fullName: _Type.IsUnicodeClass\n- uid: System.Runtime.InteropServices._Type.IsValueType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsValueType\n  nameWithType: _Type.IsValueType\n  fullName: _Type.IsValueType\n- uid: System.Runtime.InteropServices._Type.MemberType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: MemberType\n  nameWithType: _Type.MemberType\n  fullName: _Type.MemberType\n- uid: System.Runtime.InteropServices._Type.Module\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Module\n  nameWithType: _Type.Module\n  fullName: _Type.Module\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Runtime.InteropServices._Type.Name\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Name\n  nameWithType: _Type.Name\n  fullName: _Type.Name\n- uid: System.Runtime.InteropServices._Type.Namespace\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Namespace\n  nameWithType: _Type.Namespace\n  fullName: _Type.Namespace\n- uid: System.Runtime.InteropServices._Type.ReflectedType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _Type.ReflectedType\n  fullName: _Type.ReflectedType\n- uid: System.Runtime.InteropServices._Type.ToString\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: ToString()\n  nameWithType: _Type.ToString()\n  fullName: _Type.ToString()\n- uid: System.Runtime.InteropServices._Type.TypeHandle\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: TypeHandle\n  nameWithType: _Type.TypeHandle\n  fullName: _Type.TypeHandle\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.Runtime.InteropServices._Type.TypeInitializer\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: TypeInitializer\n  nameWithType: _Type.TypeInitializer\n  fullName: _Type.TypeInitializer\n- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: UnderlyingSystemType\n  nameWithType: _Type.UnderlyingSystemType\n  fullName: _Type.UnderlyingSystemType\n- uid: System.Runtime.InteropServices._Type.Equals*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Equals\n  nameWithType: _Type.Equals\n  fullName: _Type.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetConstructor*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetConstructor\n  nameWithType: _Type.GetConstructor\n  fullName: _Type.GetConstructor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetConstructors*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetConstructors\n  nameWithType: _Type.GetConstructors\n  fullName: _Type.GetConstructors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetCustomAttributes*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: _Type.GetCustomAttributes\n  fullName: _Type.GetCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetEvent*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetEvent\n  nameWithType: _Type.GetEvent\n  fullName: _Type.GetEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetEvents*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetEvents\n  nameWithType: _Type.GetEvents\n  fullName: _Type.GetEvents\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetField*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetField\n  nameWithType: _Type.GetField\n  fullName: _Type.GetField\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetFields*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetFields\n  nameWithType: _Type.GetFields\n  fullName: _Type.GetFields\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetInterface*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetInterface\n  nameWithType: _Type.GetInterface\n  fullName: _Type.GetInterface\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetMember*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMember\n  nameWithType: _Type.GetMember\n  fullName: _Type.GetMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetMembers*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMembers\n  nameWithType: _Type.GetMembers\n  fullName: _Type.GetMembers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetMethod*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethod\n  nameWithType: _Type.GetMethod\n  fullName: _Type.GetMethod\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetMethods*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetMethods\n  nameWithType: _Type.GetMethods\n  fullName: _Type.GetMethods\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetNestedType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetNestedType\n  nameWithType: _Type.GetNestedType\n  fullName: _Type.GetNestedType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetNestedTypes*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetNestedTypes\n  nameWithType: _Type.GetNestedTypes\n  fullName: _Type.GetNestedTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetProperties*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperties\n  nameWithType: _Type.GetProperties\n  fullName: _Type.GetProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetProperty*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetProperty\n  nameWithType: _Type.GetProperty\n  fullName: _Type.GetProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.InvokeMember*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: InvokeMember\n  nameWithType: _Type.InvokeMember\n  fullName: _Type.InvokeMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.Assembly*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Assembly\n  nameWithType: _Type.Assembly\n  fullName: _Type.Assembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: AssemblyQualifiedName\n  nameWithType: _Type.AssemblyQualifiedName\n  fullName: _Type.AssemblyQualifiedName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.Attributes*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Attributes\n  nameWithType: _Type.Attributes\n  fullName: _Type.Attributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.BaseType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: BaseType\n  nameWithType: _Type.BaseType\n  fullName: _Type.BaseType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.DeclaringType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _Type.DeclaringType\n  fullName: _Type.DeclaringType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.FindInterfaces*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: FindInterfaces\n  nameWithType: _Type.FindInterfaces\n  fullName: _Type.FindInterfaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.FindMembers*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: FindMembers\n  nameWithType: _Type.FindMembers\n  fullName: _Type.FindMembers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.FullName*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: FullName\n  nameWithType: _Type.FullName\n  fullName: _Type.FullName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetArrayRank*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetArrayRank\n  nameWithType: _Type.GetArrayRank\n  fullName: _Type.GetArrayRank\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetDefaultMembers*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetDefaultMembers\n  nameWithType: _Type.GetDefaultMembers\n  fullName: _Type.GetDefaultMembers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetElementType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetElementType\n  nameWithType: _Type.GetElementType\n  fullName: _Type.GetElementType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetHashCode*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetHashCode\n  nameWithType: _Type.GetHashCode\n  fullName: _Type.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetIDsOfNames*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _Type.GetIDsOfNames\n  fullName: _Type.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetInterfaceMap*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetInterfaceMap\n  nameWithType: _Type.GetInterfaceMap\n  fullName: _Type.GetInterfaceMap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetInterfaces*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetInterfaces\n  nameWithType: _Type.GetInterfaces\n  fullName: _Type.GetInterfaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetType\n  nameWithType: _Type.GetType\n  fullName: _Type.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetTypeInfo*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _Type.GetTypeInfo\n  fullName: _Type.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _Type.GetTypeInfoCount\n  fullName: _Type.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.GUID*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: GUID\n  nameWithType: _Type.GUID\n  fullName: _Type.GUID\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.HasElementType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: HasElementType\n  nameWithType: _Type.HasElementType\n  fullName: _Type.HasElementType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.Invoke*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Invoke\n  nameWithType: _Type.Invoke\n  fullName: _Type.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsAbstract*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAbstract\n  nameWithType: _Type.IsAbstract\n  fullName: _Type.IsAbstract\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsAnsiClass*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAnsiClass\n  nameWithType: _Type.IsAnsiClass\n  fullName: _Type.IsAnsiClass\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsArray*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsArray\n  nameWithType: _Type.IsArray\n  fullName: _Type.IsArray\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsAssignableFrom*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAssignableFrom\n  nameWithType: _Type.IsAssignableFrom\n  fullName: _Type.IsAssignableFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsAutoClass*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAutoClass\n  nameWithType: _Type.IsAutoClass\n  fullName: _Type.IsAutoClass\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsAutoLayout*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsAutoLayout\n  nameWithType: _Type.IsAutoLayout\n  fullName: _Type.IsAutoLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsByRef*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsByRef\n  nameWithType: _Type.IsByRef\n  fullName: _Type.IsByRef\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsClass*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsClass\n  nameWithType: _Type.IsClass\n  fullName: _Type.IsClass\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsCOMObject*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsCOMObject\n  nameWithType: _Type.IsCOMObject\n  fullName: _Type.IsCOMObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsContextful*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsContextful\n  nameWithType: _Type.IsContextful\n  fullName: _Type.IsContextful\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsDefined*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsDefined\n  nameWithType: _Type.IsDefined\n  fullName: _Type.IsDefined\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsEnum*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsEnum\n  nameWithType: _Type.IsEnum\n  fullName: _Type.IsEnum\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsExplicitLayout*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsExplicitLayout\n  nameWithType: _Type.IsExplicitLayout\n  fullName: _Type.IsExplicitLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsImport*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsImport\n  nameWithType: _Type.IsImport\n  fullName: _Type.IsImport\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsInstanceOfType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsInstanceOfType\n  nameWithType: _Type.IsInstanceOfType\n  fullName: _Type.IsInstanceOfType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsInterface*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsInterface\n  nameWithType: _Type.IsInterface\n  fullName: _Type.IsInterface\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsLayoutSequential*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsLayoutSequential\n  nameWithType: _Type.IsLayoutSequential\n  fullName: _Type.IsLayoutSequential\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsMarshalByRef*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsMarshalByRef\n  nameWithType: _Type.IsMarshalByRef\n  fullName: _Type.IsMarshalByRef\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsNestedAssembly*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedAssembly\n  nameWithType: _Type.IsNestedAssembly\n  fullName: _Type.IsNestedAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedFamANDAssem\n  nameWithType: _Type.IsNestedFamANDAssem\n  fullName: _Type.IsNestedFamANDAssem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsNestedFamily*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedFamily\n  nameWithType: _Type.IsNestedFamily\n  fullName: _Type.IsNestedFamily\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedFamORAssem\n  nameWithType: _Type.IsNestedFamORAssem\n  fullName: _Type.IsNestedFamORAssem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsNestedPrivate*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedPrivate\n  nameWithType: _Type.IsNestedPrivate\n  fullName: _Type.IsNestedPrivate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsNestedPublic*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNestedPublic\n  nameWithType: _Type.IsNestedPublic\n  fullName: _Type.IsNestedPublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsNotPublic*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsNotPublic\n  nameWithType: _Type.IsNotPublic\n  fullName: _Type.IsNotPublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsPointer*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsPointer\n  nameWithType: _Type.IsPointer\n  fullName: _Type.IsPointer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsPrimitive*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsPrimitive\n  nameWithType: _Type.IsPrimitive\n  fullName: _Type.IsPrimitive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsPublic*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsPublic\n  nameWithType: _Type.IsPublic\n  fullName: _Type.IsPublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsSealed*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsSealed\n  nameWithType: _Type.IsSealed\n  fullName: _Type.IsSealed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsSerializable*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsSerializable\n  nameWithType: _Type.IsSerializable\n  fullName: _Type.IsSerializable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsSpecialName*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _Type.IsSpecialName\n  fullName: _Type.IsSpecialName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsSubclassOf*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsSubclassOf\n  nameWithType: _Type.IsSubclassOf\n  fullName: _Type.IsSubclassOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsUnicodeClass*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsUnicodeClass\n  nameWithType: _Type.IsUnicodeClass\n  fullName: _Type.IsUnicodeClass\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.IsValueType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: IsValueType\n  nameWithType: _Type.IsValueType\n  fullName: _Type.IsValueType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.MemberType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: MemberType\n  nameWithType: _Type.MemberType\n  fullName: _Type.MemberType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.Module*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Module\n  nameWithType: _Type.Module\n  fullName: _Type.Module\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.Name*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Name\n  nameWithType: _Type.Name\n  fullName: _Type.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.Namespace*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: Namespace\n  nameWithType: _Type.Namespace\n  fullName: _Type.Namespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.ReflectedType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _Type.ReflectedType\n  fullName: _Type.ReflectedType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.ToString*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: ToString\n  nameWithType: _Type.ToString\n  fullName: _Type.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.TypeHandle*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: TypeHandle\n  nameWithType: _Type.TypeHandle\n  fullName: _Type.TypeHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.TypeInitializer*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: TypeInitializer\n  nameWithType: _Type.TypeInitializer\n  fullName: _Type.TypeInitializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType*\n  parent: System.Runtime.InteropServices._Type\n  isExternal: false\n  name: UnderlyingSystemType\n  nameWithType: _Type.UnderlyingSystemType\n  fullName: _Type.UnderlyingSystemType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_Type.xml\n"}