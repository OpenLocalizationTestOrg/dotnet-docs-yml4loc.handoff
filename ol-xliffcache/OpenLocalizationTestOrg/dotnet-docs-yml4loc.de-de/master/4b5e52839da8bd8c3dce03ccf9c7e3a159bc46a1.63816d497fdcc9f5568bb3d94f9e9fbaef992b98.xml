{"nodes":[{"content":"Contains text and speech attribute information for consumption by a speech synthsizer engine.","nodes":[{"pos":[0,93],"content":"Contains text and speech attribute information for consumption by a speech synthsizer engine.","nodes":[{"content":"Contains text and speech attribute information for consumption by a speech synthsizer engine.","pos":[0,93]}]}],"pos":[717,811],"yaml":true},{"content":"The Speech platform infrastructure unpacks the XML based structure of the SSML input and constructs <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objects.  \n  \n Speech content is available through the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> properties of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance.  \n  \n Speech attribute information, such as emphasis, pitch, and rate, are obtained from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> object returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment><xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property.","nodes":[{"pos":[0,162],"content":"The Speech platform infrastructure unpacks the XML based structure of the SSML input and constructs <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objects.","nodes":[{"content":"The Speech platform infrastructure unpacks the XML based structure of the SSML input and constructs <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph> objects.","pos":[0,162],"source":"The Speech platform infrastructure unpacks the XML based structure of the SSML input and constructs <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objects."}]},{"pos":[169,499],"content":"Speech content is available through the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> properties of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance.","nodes":[{"content":"Speech content is available through the <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A&gt;</ph> properties of a <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph> instance.","pos":[0,330],"source":"Speech content is available through the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> properties of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance."}]},{"pos":[506,796],"content":"Speech attribute information, such as emphasis, pitch, and rate, are obtained from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> object returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment><xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property.","nodes":[{"content":"Speech attribute information, such as emphasis, pitch, and rate, are obtained from the <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph><ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A&gt;</ph> property.","pos":[0,290],"source":"Speech attribute information, such as emphasis, pitch, and rate, are obtained from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> object returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment><xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property."}]}],"pos":[822,1625],"yaml":true,"extradata":"MT"},{"content":"Constructs a new instance of `TextFragment`.","nodes":[{"pos":[0,44],"content":"Constructs a new instance of <ph id=\"ph1\">`TextFragment`</ph>.","source":"Constructs a new instance of `TextFragment`."}],"pos":[7059,7104],"yaml":true},{"content":"Default constructor for <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.","nodes":[{"pos":[0,78],"content":"Default constructor for <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.","nodes":[{"content":"Default constructor for <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph>.","pos":[0,78],"source":"Default constructor for <xref:System.Speech.Synthesis.TtsEngine.TextFragment>."}]}],"pos":[7115,7194],"yaml":true,"extradata":"MT"},{"content":"Gets or sets speech attribute information for a `TextFragment`.","nodes":[{"pos":[0,63],"content":"Gets or sets speech attribute information for a <ph id=\"ph1\">`TextFragment`</ph>.","source":"Gets or sets speech attribute information for a `TextFragment`."}],"pos":[8273,8337],"yaml":true},{"content":"The default value of this property is `null`.  \n  \n Prosody information can be obtained from the instance of <xref:System.Speech.Synthesis.TtsEngine.Prosody> returned by the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A> property on the instance of <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>.","nodes":[{"pos":[0,45],"content":"The default value of this property is <ph id=\"ph1\">`null`</ph>.","source":"The default value of this property is `null`."},{"pos":[52,398],"content":"Prosody information can be obtained from the instance of <xref:System.Speech.Synthesis.TtsEngine.Prosody> returned by the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A> property on the instance of <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>.","nodes":[{"content":"Prosody information can be obtained from the instance of <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.Prosody&gt;</ph> returned by the <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A&gt;</ph> property on the instance of <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState&gt;</ph> returned by <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A&gt;</ph>.","pos":[0,346],"source":"Prosody information can be obtained from the instance of <xref:System.Speech.Synthesis.TtsEngine.Prosody> returned by the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A> property on the instance of <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>."}]}],"pos":[8348,8751],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Speech.Synthesis.TtsEngine.FragmentState\"></xref> instance is returned, or used to set speech attribute information for a <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref>.","nodes":[{"pos":[0,211],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.FragmentState\"&gt;&lt;/xref&gt;</ph> instance is returned, or used to set speech attribute information for a <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Speech.Synthesis.TtsEngine.FragmentState\"></xref> instance is returned, or used to set speech attribute information for a <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref>."}],"pos":[8940,9152],"yaml":true},{"content":"Gets or sets the length of the speech text in the fragment.","nodes":[{"pos":[0,59],"content":"Gets or sets the length of the speech text in the fragment.","nodes":[{"content":"Gets or sets the length of the speech text in the fragment.","pos":[0,59]}]}],"pos":[10195,10255],"yaml":true},{"content":"The default value of this property is 0.","nodes":[{"pos":[0,40],"content":"The default value of this property is 0.","nodes":[{"content":"The default value of this property is 0.","pos":[0,40]}]}],"pos":[10266,10307],"yaml":true,"extradata":"MT"},{"content":"An `int` is returned or can be used to set the length, in character, of the text string associated with this fragment to be spoken.","nodes":[{"pos":[0,131],"content":"An <ph id=\"ph1\">`int`</ph> is returned or can be used to set the length, in character, of the text string associated with this fragment to be spoken.","source":"An `int` is returned or can be used to set the length, in character, of the text string associated with this fragment to be spoken."}],"pos":[14501,14633],"yaml":true},{"content":"Gets or sets the starting location of the text in the fragment.","nodes":[{"pos":[0,63],"content":"Gets or sets the starting location of the text in the fragment.","nodes":[{"content":"Gets or sets the starting location of the text in the fragment.","pos":[0,63]}]}],"pos":[15681,15745],"yaml":true},{"content":"The default value of this property is 0.","nodes":[{"pos":[0,40],"content":"The default value of this property is 0.","nodes":[{"content":"The default value of this property is 0.","pos":[0,40]}]}],"pos":[15756,15797],"yaml":true,"extradata":"MT"},{"content":"An `int` is returned or can be used to set the start location, in character, of the part of text string associated with this fragment to be spoken.","nodes":[{"pos":[0,147],"content":"An <ph id=\"ph1\">`int`</ph> is returned or can be used to set the start location, in character, of the part of text string associated with this fragment to be spoken.","source":"An `int` is returned or can be used to set the start location, in character, of the part of text string associated with this fragment to be spoken."}],"pos":[19991,20139],"yaml":true},{"content":"Sets or gets the speech text of the fragment.","nodes":[{"pos":[0,45],"content":"Sets or gets the speech text of the fragment.","nodes":[{"content":"Sets or gets the speech text of the fragment.","pos":[0,45]}]}],"pos":[21193,21239],"yaml":true},{"content":"The default value of this property is `System.String.Empty`.  \n  \n Applications are free to completely change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>.  \n  \n Resetting the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> will not change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A> and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>.","nodes":[{"pos":[0,60],"content":"The default value of this property is <ph id=\"ph1\">`System.String.Empty`</ph>.","source":"The default value of this property is `System.String.Empty`."},{"pos":[67,192],"content":"Applications are free to completely change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>.","nodes":[{"content":"Applications are free to completely change the value of <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A&gt;</ph>.","pos":[0,125],"source":"Applications are free to completely change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>."}]},{"pos":[199,460],"content":"Resetting the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> will not change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A> and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>.","nodes":[{"content":"Resetting the value of <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A&gt;</ph> will not change the value of <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A&gt;</ph>.","pos":[0,261],"source":"Resetting the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> will not change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A> and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>."}]}],"pos":[21250,21717],"yaml":true,"extradata":"MT"},{"content":"A `System.String` is returned or can be used to set the speech text to be used by a speech synthesis engine to generate audio output.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">`System.String`</ph> is returned or can be used to set the speech text to be used by a speech synthesis engine to generate audio output.","source":"A `System.String` is returned or can be used to set the speech text to be used by a speech synthesis engine to generate audio output."}],"pos":[25916,26050],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment\n  commentId: T:System.Speech.Synthesis.TtsEngine.TextFragment\n  id: TextFragment\n  children:\n  - System.Speech.Synthesis.TtsEngine.TextFragment.#ctor\n  - System.Speech.Synthesis.TtsEngine.TextFragment.State\n  - System.Speech.Synthesis.TtsEngine.TextFragment.TextLength\n  - System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset\n  - System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak\n  langs:\n  - csharp\n  name: TextFragment\n  nameWithType: TextFragment\n  fullName: System.Speech.Synthesis.TtsEngine.TextFragment\n  type: Class\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Contains text and speech attribute information for consumption by a speech synthsizer engine.\n  remarks: \"The Speech platform infrastructure unpacks the XML based structure of the SSML input and constructs <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objects.  \\n  \\n Speech content is available through the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> properties of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance.  \\n  \\n Speech attribute information, such as emphasis, pitch, and rate, are obtained from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> object returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment><xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property.\"\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n     Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public class TextFragment\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.#ctor\n  commentId: M:System.Speech.Synthesis.TtsEngine.TextFragment.#ctor\n  id: '#ctor'\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  langs:\n  - csharp\n  name: TextFragment()\n  nameWithType: TextFragment.TextFragment()\n  fullName: TextFragment.TextFragment()\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Constructs a new instance of `TextFragment`.\n  remarks: Default constructor for <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.\n  syntax:\n    content: public TextFragment ();\n    parameters: []\n  overload: System.Speech.Synthesis.TtsEngine.TextFragment.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.State\n  commentId: P:System.Speech.Synthesis.TtsEngine.TextFragment.State\n  id: State\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  langs:\n  - csharp\n  name: State\n  nameWithType: TextFragment.State\n  fullName: TextFragment.State\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Gets or sets speech attribute information for a `TextFragment`.\n  remarks: \"The default value of this property is `null`.  \\n  \\n Prosody information can be obtained from the instance of <xref:System.Speech.Synthesis.TtsEngine.Prosody> returned by the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A> property on the instance of <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>.\"\n  syntax:\n    content: public System.Speech.Synthesis.TtsEngine.FragmentState State { get; set; }\n    return:\n      type: System.Speech.Synthesis.TtsEngine.FragmentState\n      description: A <xref href=\"System.Speech.Synthesis.TtsEngine.FragmentState\"></xref> instance is returned, or used to set speech attribute information for a <xref href=\"System.Speech.Synthesis.TtsEngine.TextFragment\"></xref>.\n  overload: System.Speech.Synthesis.TtsEngine.TextFragment.State*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextLength\n  commentId: P:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength\n  id: TextLength\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  langs:\n  - csharp\n  name: TextLength\n  nameWithType: TextFragment.TextLength\n  fullName: TextFragment.TextLength\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Gets or sets the length of the speech text in the fragment.\n  remarks: The default value of this property is 0.\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n     Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public int TextLength { get; set; }\n    return:\n      type: System.Int32\n      description: An `int` is returned or can be used to set the length, in character, of the text string associated with this fragment to be spoken.\n  overload: System.Speech.Synthesis.TtsEngine.TextFragment.TextLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset\n  commentId: P:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset\n  id: TextOffset\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  langs:\n  - csharp\n  name: TextOffset\n  nameWithType: TextFragment.TextOffset\n  fullName: TextFragment.TextOffset\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Gets or sets the starting location of the text in the fragment.\n  remarks: The default value of this property is 0.\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n     Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public int TextOffset { get; set; }\n    return:\n      type: System.Int32\n      description: An `int` is returned or can be used to set the start location, in character, of the part of text string associated with this fragment to be spoken.\n  overload: System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak\n  commentId: P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak\n  id: TextToSpeak\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  langs:\n  - csharp\n  name: TextToSpeak\n  nameWithType: TextFragment.TextToSpeak\n  fullName: TextFragment.TextToSpeak\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Sets or gets the speech text of the fragment.\n  remarks: \"The default value of this property is `System.String.Empty`.  \\n  \\n Applications are free to completely change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>.  \\n  \\n Resetting the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> will not change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A> and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>.\"\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n     Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public string TextToSpeak { get; set; }\n    return:\n      type: System.String\n      description: A `System.String` is returned or can be used to set the speech text to be used by a speech synthesis engine to generate audio output.\n  overload: System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.#ctor\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: TextFragment()\n  nameWithType: TextFragment.TextFragment()\n  fullName: TextFragment.TextFragment()\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.State\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: State\n  nameWithType: TextFragment.State\n  fullName: TextFragment.State\n- uid: System.Speech.Synthesis.TtsEngine.FragmentState\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: FragmentState\n  nameWithType: FragmentState\n  fullName: System.Speech.Synthesis.TtsEngine.FragmentState\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextLength\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: TextLength\n  nameWithType: TextFragment.TextLength\n  fullName: TextFragment.TextLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: TextOffset\n  nameWithType: TextFragment.TextOffset\n  fullName: TextFragment.TextOffset\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: TextToSpeak\n  nameWithType: TextFragment.TextToSpeak\n  fullName: TextFragment.TextToSpeak\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.#ctor*\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: TextFragment\n  nameWithType: TextFragment.TextFragment\n  fullName: TextFragment.TextFragment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.State*\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: State\n  nameWithType: TextFragment.State\n  fullName: TextFragment.State\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextLength*\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: TextLength\n  nameWithType: TextFragment.TextLength\n  fullName: TextFragment.TextLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset*\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: TextOffset\n  nameWithType: TextFragment.TextOffset\n  fullName: TextFragment.TextOffset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n- uid: System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak*\n  parent: System.Speech.Synthesis.TtsEngine.TextFragment\n  isExternal: false\n  name: TextToSpeak\n  nameWithType: TextFragment.TextToSpeak\n  fullName: TextFragment.TextToSpeak\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/TextFragment.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}