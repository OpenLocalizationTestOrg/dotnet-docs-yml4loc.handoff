### YamlMime:ManagedReference
items:
- uid: System.ValueTuple
  commentId: T:System.ValueTuple
  id: ValueTuple
  children:
  - System.ValueTuple.CompareTo(System.ValueTuple)
  - System.ValueTuple.Create
  - System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  - System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  - System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)
  - System.ValueTuple.Create``5(``0,``1,``2,``3,``4)
  - System.ValueTuple.Create``4(``0,``1,``2,``3)
  - System.ValueTuple.Create``3(``0,``1,``2)
  - System.ValueTuple.Create``2(``0,``1)
  - System.ValueTuple.Create``1(``0)
  - System.ValueTuple.Equals(System.ValueTuple)
  - System.ValueTuple.Equals(System.Object)
  - System.ValueTuple.GetHashCode
  - System.ValueTuple.ToString
  - System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  - System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  - System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  - System.ValueTuple.System#IComparable#CompareTo(System.Object)
  - System.ValueTuple.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  - System.ValueTuple.System#Runtime#CompilerServices#ITuple#Length
  langs:
  - csharp
  name: ValueTuple
  nameWithType: ValueTuple
  fullName: System.ValueTuple
  type: Struct
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Provides static methods for creating value tuples.
  remarks: "A tuple is a data structure that has a specific number and sequence of elements. An example of a tuple is a data structure with three elements (known as a 3-tuple or triple) that is used to store an identifier such as a person's name in the first element, a year in the second element, and the person's income for that year in the third element.  \n  \nValue tuples are tuple types introduced in the [!INCLUDE[net_v463](~/includes/net-v463-md.md)] to provide the runtime implementation of [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#. They differ from the tuple classes, such as  <xref:System.Tuple%601>, <xref:System.Tuple%602>, etc., as follows:  \n  \n-   They are structures (value types) rather than classes (reference types).  \n  \n-   They are mutable rather than read-only. That is, the value of tuple components can change.  \n  \n-   Their data members, such as `Item1`, `Item2`, etc., are fields rather than properties.  \n  \nThe <xref:System.ValueTuple> structure itself does not represent a value tuple. Instead, it provides static methods for creating instances of value tuple types. It provides helper methods that you can call to instantiate value tuples without having to explicitly specify the type of each value tuple component. By calling its static `Create` methods, you can create value tuples that have from zero to eight components. For value tuples with more than eight components, you must call the <xref:System.ValueTuple%608.%23ctor%2A> constructor."
  syntax:
    content: 'public struct ValueTuple : IComparable, IComparable<ValueTuple>, IEquatable<ValueTuple>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Collections.IStructuralComparable
  - System.Collections.IStructuralEquatable
  - System.IComparable
  - System.IComparable{System.ValueTuple}
  - System.IEquatable{System.ValueTuple}
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.CompareTo(System.ValueTuple)
  commentId: M:System.ValueTuple.CompareTo(System.ValueTuple)
  id: CompareTo(System.ValueTuple)
  parent: System.ValueTuple
  langs:
  - csharp
  name: CompareTo(ValueTuple)
  nameWithType: ValueTuple.CompareTo(ValueTuple)
  fullName: ValueTuple.CompareTo(ValueTuple)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Compares the current <xref href="System.ValueTuple"></xref> instance with a specified object.
  syntax:
    content: public int CompareTo (ValueTuple other);
    parameters:
    - id: other
      type: System.ValueTuple
      description: The object to compare with the current instance.
    return:
      type: System.Int32
      description: Returns 0 if <code>other</code> is a <xref href="System.ValueTuple"></xref> instance and 1 if <code>other</code> is `null`.
  overload: System.ValueTuple.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>other</code> is not a <xref href="System.ValueTuple"></xref> instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create
  commentId: M:System.ValueTuple.Create
  id: Create
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create()
  nameWithType: ValueTuple.Create()
  fullName: ValueTuple.Create()
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with zero components.
  syntax:
    content: public static ValueTuple Create ();
    parameters: []
    return:
      type: System.ValueTuple
      description: A new value tuple with no components.
  overload: System.ValueTuple.Create*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  commentId: M:System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  id: Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create<T1,T2,T3,T4,T5,T6,T7,T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7,T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7,T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with 8 components (an octuple).
  remarks: "<xref:System.ValueTuple.Create%2A> is a helper method that you can call to instantiate an 8-component value tuple without having to explicitly specify the types of its components.  \n  \n> [!NOTE]\n>  You must call the <xref:System.ValueTuple%608.%23ctor%2A> constructor to create a tuple with nine or more components unless your language provides a special syntax for this purpose. The static methods of the <xref:System.ValueTuple> structure cannot be used to create a tuple with nine or more components."
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>> Create<T1,T2,T3,T4,T5,T6,T7,T8> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8);
    parameters:
    - id: item1
      type: T1
      description: The value of the value tuple's first component.
    - id: item2
      type: T2
      description: The value of the value tuple's second component.
    - id: item3
      type: T3
      description: The value of the value tuple's third component.
    - id: item4
      type: T4
      description: The value of the value tuple's fourth component.
    - id: item5
      type: T5
      description: The value of the value tuple's fifth component.
    - id: item6
      type: T6
      description: The value of the value tuple's sixth component.
    - id: item7
      type: T7
      description: The value of the value tuple's seventh component.
    - id: item8
      type: T8
      description: The value of the value tuple's eighth component.
    typeParameters:
    - id: T1
      description: The type of the value tuple's first component.
    - id: T2
      description: The type of the value tuple's second component.
    - id: T3
      description: The type of the value tuple's third component.
    - id: T4
      description: The type of the value tuple's fourth component.
    - id: T5
      description: The type of the value tuple's fifth component.
    - id: T6
      description: The type of the value tuple's sixth component.
    - id: T7
      description: The type of the value tuple's seventh component.
    - id: T8
      description: The type of the value tuple's eighth component.
    return:
      type: System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,System.ValueTuple{T8}}
      description: A value tuple with 8 components.
  overload: System.ValueTuple.Create``8*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  commentId: M:System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  id: Create``7(``0,``1,``2,``3,``4,``5,``6)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with 7 components (a septuple).
  remarks: <xref:System.ValueTuple.Create%2A> is a helper method that you can call to instantiate an 7-component value tuple without having to explicitly specify the types of its components.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4,T5,T6,T7> Create<T1,T2,T3,T4,T5,T6,T7> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);
    parameters:
    - id: item1
      type: T1
      description: The value of the value tuple's first component.
    - id: item2
      type: T2
      description: The value of the value tuple's second component.
    - id: item3
      type: T3
      description: The value of the value tuple's third component.
    - id: item4
      type: T4
      description: The value of the value tuple's fourth component.
    - id: item5
      type: T5
      description: The value of the value tuple's fifth component.
    - id: item6
      type: T6
      description: The value of the value tuple's sixth component.
    - id: item7
      type: T7
      description: The value of the value tuple's seventh component.
    typeParameters:
    - id: T1
      description: The type of the value tuple's first component.
    - id: T2
      description: The type of the value tuple's second component.
    - id: T3
      description: The type of the value tuple's third component.
    - id: T4
      description: The type of the value tuple's fourth component.
    - id: T5
      description: The type of the value tuple's fifth component.
    - id: T6
      description: The type of the value tuple's sixth component.
    - id: T7
      description: The type of the value tuple's seventh component.
    return:
      type: System.ValueTuple`7
      description: A value tuple with 7 components.
  overload: System.ValueTuple.Create``7*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)
  commentId: M:System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)
  id: Create``6(``0,``1,``2,``3,``4,``5)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create<T1,T2,T3,T4,T5,T6>(T1, T2, T3, T4, T5, T6)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6>(T1, T2, T3, T4, T5, T6)
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6>(T1, T2, T3, T4, T5, T6)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with 6 components (a sexuple).
  remarks: <xref:System.ValueTuple.Create%2A> is a helper method that you can call to instantiate a 6-component value tuple without having to explicitly specify the types of its components.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4,T5,T6> Create<T1,T2,T3,T4,T5,T6> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);
    parameters:
    - id: item1
      type: T1
      description: The value of the value tuple's first component.
    - id: item2
      type: T2
      description: The value of the value tuple's second component.
    - id: item3
      type: T3
      description: The value of the value tuple's third component.
    - id: item4
      type: T4
      description: The value of the value tuple's fourth component.
    - id: item5
      type: T5
      description: The value of the value tuple's fifth component.
    - id: item6
      type: T6
      description: The value of the value tuple's sixth component.
    typeParameters:
    - id: T1
      description: The type of the value tuple's first component.
    - id: T2
      description: The type of the value tuple's second component.
    - id: T3
      description: The type of the value tuple's third component.
    - id: T4
      description: The type of the value tuple's fourth component.
    - id: T5
      description: The type of the value tuple's fifth component.
    - id: T6
      description: The type of the value tuple's sixth component.
    return:
      type: System.ValueTuple`6
      description: A value tuple with 6 components.
  overload: System.ValueTuple.Create``6*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create``5(``0,``1,``2,``3,``4)
  commentId: M:System.ValueTuple.Create``5(``0,``1,``2,``3,``4)
  id: Create``5(``0,``1,``2,``3,``4)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create<T1,T2,T3,T4,T5>(T1, T2, T3, T4, T5)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5>(T1, T2, T3, T4, T5)
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5>(T1, T2, T3, T4, T5)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with 5 components (a quintuple).
  remarks: <xref:System.ValueTuple.Create%2A> is a helper method that you can call to instantiate a 5-component value tuple without having to explicitly specify the types of its components.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4,T5> Create<T1,T2,T3,T4,T5> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);
    parameters:
    - id: item1
      type: T1
      description: The value of the value tuple's first component.
    - id: item2
      type: T2
      description: The value of the value tuple's second component.
    - id: item3
      type: T3
      description: The value of the value tuple's third component.
    - id: item4
      type: T4
      description: The value of the value tuple's fourth component.
    - id: item5
      type: T5
      description: The value of the value tuple's fifth component.
    typeParameters:
    - id: T1
      description: The type of the value tuple's first component.
    - id: T2
      description: The type of the value tuple's second component.
    - id: T3
      description: The type of the value tuple's third component.
    - id: T4
      description: The type of the value tuple's fourth component.
    - id: T5
      description: The type of the value tuple's fifth component.
    return:
      type: System.ValueTuple`5
      description: A value tuple with 5 components.
  overload: System.ValueTuple.Create``5*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create``4(``0,``1,``2,``3)
  commentId: M:System.ValueTuple.Create``4(``0,``1,``2,``3)
  id: Create``4(``0,``1,``2,``3)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create<T1,T2,T3,T4>(T1, T2, T3, T4)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4>(T1, T2, T3, T4)
  fullName: ValueTuple.Create<T1,T2,T3,T4>(T1, T2, T3, T4)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with 4 components (a quadruple).
  remarks: <xref:System.ValueTuple.Create%2A> is a helper method that you can call to instantiate an 4-component value tuple without having to explicitly specify the types of its components.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4> Create<T1,T2,T3,T4> (T1 item1, T2 item2, T3 item3, T4 item4);
    parameters:
    - id: item1
      type: T1
      description: The value of the value tuple's first component.
    - id: item2
      type: T2
      description: The value of the value tuple's second component.
    - id: item3
      type: T3
      description: The value of the value tuple's third component.
    - id: item4
      type: T4
      description: The value of the value tuple's fourth component.
    typeParameters:
    - id: T1
      description: The type of the value tuple's first component.
    - id: T2
      description: The type of the value tuple's second component.
    - id: T3
      description: The type of the value tuple's third component.
    - id: T4
      description: The type of the value tuple's fourth component.
    return:
      type: System.ValueTuple`4
      description: A value tuple with 4 components.
  overload: System.ValueTuple.Create``4*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create``3(``0,``1,``2)
  commentId: M:System.ValueTuple.Create``3(``0,``1,``2)
  id: Create``3(``0,``1,``2)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create<T1,T2,T3>(T1, T2, T3)
  nameWithType: ValueTuple.Create<T1,T2,T3>(T1, T2, T3)
  fullName: ValueTuple.Create<T1,T2,T3>(T1, T2, T3)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with 3 components (a triple).
  remarks: <xref:System.ValueTuple.Create%2A> is a helper method that you can call to instantiate an 3-component value tuple without having to explicitly specify the types of its components.
  syntax:
    content: public static ValueTuple<T1,T2,T3> Create<T1,T2,T3> (T1 item1, T2 item2, T3 item3);
    parameters:
    - id: item1
      type: T1
      description: The value of the value tuple's first component.
    - id: item2
      type: T2
      description: The value of the value tuple's second component.
    - id: item3
      type: T3
      description: The value of the value tuple's third component.
    typeParameters:
    - id: T1
      description: The type of the value tuple's first component.
    - id: T2
      description: The type of the value tuple's second component.
    - id: T3
      description: The type of the value tuple's third component.
    return:
      type: System.ValueTuple`3
      description: A value tuple with 3 components.
  overload: System.ValueTuple.Create``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create``2(``0,``1)
  commentId: M:System.ValueTuple.Create``2(``0,``1)
  id: Create``2(``0,``1)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create<T1,T2>(T1, T2)
  nameWithType: ValueTuple.Create<T1,T2>(T1, T2)
  fullName: ValueTuple.Create<T1,T2>(T1, T2)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with 2 components (a pair).
  remarks: <xref:System.ValueTuple.Create%2A> is a helper method that you can call to instantiate an 2-component value tuple without having to explicitly specify the types of its components.
  syntax:
    content: public static ValueTuple<T1,T2> Create<T1,T2> (T1 item1, T2 item2);
    parameters:
    - id: item1
      type: T1
      description: The value of the value tuple's first component.
    - id: item2
      type: T2
      description: The value of the value tuple's second component.
    typeParameters:
    - id: T1
      description: The type of the value tuple's first component.
    - id: T2
      description: The type of the value tuple's second component.
    return:
      type: System.ValueTuple`2
      description: A value tuple with 2 components.
  overload: System.ValueTuple.Create``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Create``1(``0)
  commentId: M:System.ValueTuple.Create``1(``0)
  id: Create``1(``0)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create<T1>(T1)
  nameWithType: ValueTuple.Create<T1>(T1)
  fullName: ValueTuple.Create<T1>(T1)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates a new value tuple with 1 component (a singleton).
  remarks: <xref:System.ValueTuple.Create%2A> is a helper method that you can call to instantiate a 1-component value tuple without having to explicitly specify the type of its component.
  syntax:
    content: public static ValueTuple<T1> Create<T1> (T1 item1);
    parameters:
    - id: item1
      type: T1
      description: The value of the value tuple's only component.
    typeParameters:
    - id: T1
      description: The type of the value tuple's only component.
    return:
      type: System.ValueTuple`1
      description: A value tuple with 1 component.
  overload: System.ValueTuple.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Equals(System.ValueTuple)
  commentId: M:System.ValueTuple.Equals(System.ValueTuple)
  id: Equals(System.ValueTuple)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Equals(ValueTuple)
  nameWithType: ValueTuple.Equals(ValueTuple)
  fullName: ValueTuple.Equals(ValueTuple)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether two <xref href="System.ValueTuple"></xref> instances are equal. This method always returns `true`.
  syntax:
    content: public bool Equals (ValueTuple other);
    parameters:
    - id: other
      type: System.ValueTuple
      description: The value tuple to compare with the current instance.
    return:
      type: System.Boolean
      description: This method always returns `true`.
  overload: System.ValueTuple.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.Equals(System.Object)
  commentId: M:System.ValueTuple.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValueTuple.Equals(Object)
  fullName: ValueTuple.Equals(Object)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether the current <xref href="System.ValueTuple"></xref> instance is equal to a specified object.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to the current instance.
    return:
      type: System.Boolean
      description: '`true` if <code>obj</code> is a <xref href="System.ValueTuple"></xref> instance; otherwise, `false`.'
  overload: System.ValueTuple.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.GetHashCode
  commentId: M:System.ValueTuple.GetHashCode
  id: GetHashCode
  parent: System.ValueTuple
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValueTuple.GetHashCode()
  fullName: ValueTuple.GetHashCode()
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns the hash code for the current <xref href="System.ValueTuple"></xref> instance.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash code for the current <xref href="System.ValueTuple"></xref> instance.
  overload: System.ValueTuple.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.ToString
  commentId: M:System.ValueTuple.ToString
  id: ToString
  parent: System.ValueTuple
  langs:
  - csharp
  name: ToString()
  nameWithType: ValueTuple.ToString()
  fullName: ValueTuple.ToString()
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns the string representation of this <xref href="System.ValueTuple"></xref> instance.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: This method always returns "()".
  overload: System.ValueTuple.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  commentId: M:System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: IStructuralComparable.CompareTo(Object, IComparer)
  nameWithType: ValueTuple.IStructuralComparable.CompareTo(Object, IComparer)
  fullName: ValueTuple.IStructuralComparable.CompareTo(Object, IComparer)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Compares the current <xref href="System.ValueTuple"></xref> instance to a specified object.
  syntax:
    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with the current instance.
    - id: comparer
      type: System.Collections.IComparer
      description: An object that provides custom rules for comparison. This parameter is ignored.
    return:
      type: System.Int32
      description: Returns 0 if <code>other</code> is a <xref href="System.ValueTuple"></xref> instance and 1 if <code>other</code> is `null`.
  overload: System.ValueTuple.System#Collections#IStructuralComparable#CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>other</code> is not a <xref href="System.ValueTuple"></xref> instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  commentId: M:System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: IStructuralEquatable.Equals(Object, IEqualityComparer)
  nameWithType: ValueTuple.IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName: ValueTuple.IStructuralEquatable.Equals(Object, IEqualityComparer)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a value that indicates whether the current <xref href="System.ValueTuple"></xref> instance is equal to a specified object based on a specified comparison method.
  remarks: This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple>t> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface. The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if `other` is not `null`, and if it can be successfully cast to a <xref:System.ValueTuple> object.
  syntax:
    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with this instance.
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: An object that defines the method to use to evaluate whether the two objects are equal.
    return:
      type: System.Boolean
      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'
  overload: System.ValueTuple.System#Collections#IStructuralEquatable#Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  commentId: M:System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: IStructuralEquatable.GetHashCode(IEqualityComparer)
  nameWithType: ValueTuple.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: ValueTuple.IStructuralEquatable.GetHashCode(IEqualityComparer)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns the hash code for this <xref href="System.ValueTuple"></xref> instance.
  syntax:
    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: An object whose <xref href="System.Collections.IEqualityComparer.GetHashCode(System.Object)"></xref> method computes the hash code. This parameter is ignored.
    return:
      type: System.Int32
      description: The hash code for this <xref href="System.ValueTuple"></xref> instance.
  overload: System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.System#IComparable#CompareTo(System.Object)
  commentId: M:System.ValueTuple.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: IComparable.CompareTo(Object)
  nameWithType: ValueTuple.IComparable.CompareTo(Object)
  fullName: ValueTuple.IComparable.CompareTo(Object)
  type: Method
  assemblies:
  - System.ValueTuple
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Compares this <xref href="System.ValueTuple"></xref> instance with a specified object and returns an indication of their relative values.
  syntax:
    content: int IComparable.CompareTo (object other);
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with the current instance
    return:
      type: System.Int32
      description: 0 if <code>other</code> is a <xref href="System.ValueTuple"></xref> instance; otherwise, 1 if <code>other</code> is `null`.
  overload: System.ValueTuple.System#IComparable#CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>other</code> is not a <xref href="System.ValueTuple"></xref> instance.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ValueTuple.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  commentId: P:System.ValueTuple.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  id: System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: ITuple.Item(Int32)
  nameWithType: ValueTuple.ITuple.Item(Int32)
  fullName: ValueTuple.ITuple.Item(Int32)
  type: Property
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: System.Object
      description: ''
  overload: System.ValueTuple.System#Runtime#CompilerServices#ITuple#Item*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.System#Runtime#CompilerServices#ITuple#Length
  commentId: P:System.ValueTuple.System#Runtime#CompilerServices#ITuple#Length
  id: System#Runtime#CompilerServices#ITuple#Length
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: ITuple.Length
  nameWithType: ValueTuple.ITuple.Length
  fullName: ValueTuple.ITuple.Length
  type: Property
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int System.Runtime.CompilerServices.ITuple.Length { get; }
    return:
      type: System.Int32
      description: ''
  overload: System.ValueTuple.System#Runtime#CompilerServices#ITuple#Length*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ValueTuple.CompareTo(System.ValueTuple)
  parent: System.ValueTuple
  isExternal: false
  name: CompareTo(ValueTuple)
  nameWithType: ValueTuple.CompareTo(ValueTuple)
  fullName: ValueTuple.CompareTo(ValueTuple)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueTuple
  parent: System
  isExternal: false
  name: ValueTuple
  nameWithType: ValueTuple
  fullName: System.ValueTuple
- uid: System.ValueTuple.Create
  parent: System.ValueTuple
  isExternal: false
  name: Create()
  nameWithType: ValueTuple.Create()
  fullName: ValueTuple.Create()
- uid: System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4,T5,T6,T7,T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7,T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7,T8>(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: System.ValueTuple`8
  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: System.ValueTuple`1
  name: ValueTuple<T1>
  nameWithType: ValueTuple<T1>
  fullName: System.ValueTuple<T1>
- uid: T8
  name: T8
  nameWithType: T8
  fullName: T8
- uid: System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,System.ValueTuple{T8}}
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,System.ValueTuple<T8>>
  spec.csharp:
  - uid: System.ValueTuple`8
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T4
    name: T4
    nameWithType: T4
    fullName: T4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T5
    name: T5
    nameWithType: T5
    fullName: T5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T6
    name: T6
    nameWithType: T6
    fullName: T6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T7
    name: T7
    nameWithType: T7
    fullName: T7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ValueTuple`1
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: T8
    name: T8
    nameWithType: T8
    fullName: T8
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
- uid: System.ValueTuple`7
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7>
- uid: System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4,T5,T6>(T1, T2, T3, T4, T5, T6)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6>(T1, T2, T3, T4, T5, T6)
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6>(T1, T2, T3, T4, T5, T6)
- uid: System.ValueTuple`6
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4,T5,T6>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>
- uid: System.ValueTuple.Create``5(``0,``1,``2,``3,``4)
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4,T5>(T1, T2, T3, T4, T5)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5>(T1, T2, T3, T4, T5)
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5>(T1, T2, T3, T4, T5)
- uid: System.ValueTuple`5
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4,T5>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5>
- uid: System.ValueTuple.Create``4(``0,``1,``2,``3)
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4>(T1, T2, T3, T4)
  nameWithType: ValueTuple.Create<T1,T2,T3,T4>(T1, T2, T3, T4)
  fullName: ValueTuple.Create<T1,T2,T3,T4>(T1, T2, T3, T4)
- uid: System.ValueTuple`4
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4>
  nameWithType: ValueTuple<T1,T2,T3,T4>
  fullName: System.ValueTuple<T1,T2,T3,T4>
- uid: System.ValueTuple.Create``3(``0,``1,``2)
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3>(T1, T2, T3)
  nameWithType: ValueTuple.Create<T1,T2,T3>(T1, T2, T3)
  fullName: ValueTuple.Create<T1,T2,T3>(T1, T2, T3)
- uid: System.ValueTuple`3
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3>
  nameWithType: ValueTuple<T1,T2,T3>
  fullName: System.ValueTuple<T1,T2,T3>
- uid: System.ValueTuple.Create``2(``0,``1)
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2>(T1, T2)
  nameWithType: ValueTuple.Create<T1,T2>(T1, T2)
  fullName: ValueTuple.Create<T1,T2>(T1, T2)
- uid: System.ValueTuple`2
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2>
  nameWithType: ValueTuple<T1,T2>
  fullName: System.ValueTuple<T1,T2>
- uid: System.ValueTuple.Create``1(``0)
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1>(T1)
  nameWithType: ValueTuple.Create<T1>(T1)
  fullName: ValueTuple.Create<T1>(T1)
- uid: System.ValueTuple.Equals(System.ValueTuple)
  parent: System.ValueTuple
  isExternal: false
  name: Equals(ValueTuple)
  nameWithType: ValueTuple.Equals(ValueTuple)
  fullName: ValueTuple.Equals(ValueTuple)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueTuple.Equals(System.Object)
  parent: System.ValueTuple
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueTuple.Equals(Object)
  fullName: ValueTuple.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueTuple.GetHashCode
  parent: System.ValueTuple
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueTuple.GetHashCode()
  fullName: ValueTuple.GetHashCode()
- uid: System.ValueTuple.ToString
  parent: System.ValueTuple
  isExternal: false
  name: ToString()
  nameWithType: ValueTuple.ToString()
  fullName: ValueTuple.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  parent: System.ValueTuple
  isExternal: false
  name: IStructuralComparable.CompareTo(Object, IComparer)
  nameWithType: ValueTuple.IStructuralComparable.CompareTo(Object, IComparer)
  fullName: ValueTuple.IStructuralComparable.CompareTo(Object, IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  parent: System.ValueTuple
  isExternal: false
  name: IStructuralEquatable.Equals(Object, IEqualityComparer)
  nameWithType: ValueTuple.IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName: ValueTuple.IStructuralEquatable.Equals(Object, IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  parent: System.ValueTuple
  isExternal: false
  name: IStructuralEquatable.GetHashCode(IEqualityComparer)
  nameWithType: ValueTuple.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: ValueTuple.IStructuralEquatable.GetHashCode(IEqualityComparer)
- uid: System.ValueTuple.System#IComparable#CompareTo(System.Object)
  parent: System.ValueTuple
  isExternal: false
  name: IComparable.CompareTo(Object)
  nameWithType: ValueTuple.IComparable.CompareTo(Object)
  fullName: ValueTuple.IComparable.CompareTo(Object)
- uid: System.ValueTuple.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  parent: System.ValueTuple
  isExternal: false
  name: ITuple.Item(Int32)
  nameWithType: ValueTuple.ITuple.Item(Int32)
  fullName: ValueTuple.ITuple.Item(Int32)
- uid: System.ValueTuple.System#Runtime#CompilerServices#ITuple#Length
  parent: System.ValueTuple
  isExternal: false
  name: ITuple.Length
  nameWithType: ValueTuple.ITuple.Length
  fullName: ValueTuple.ITuple.Length
- uid: System.ValueTuple.CompareTo*
  parent: System.ValueTuple
  isExternal: false
  name: CompareTo
  nameWithType: ValueTuple.CompareTo
  fullName: ValueTuple.CompareTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create*
  parent: System.ValueTuple
  isExternal: false
  name: Create
  nameWithType: ValueTuple.Create
  fullName: ValueTuple.Create
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create``8*
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4,T5,T6,T7,T8>
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7,T8>
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7,T8>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create``7*
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4,T5,T6,T7>
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7>
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6,T7>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create``6*
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4,T5,T6>
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5,T6>
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5,T6>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create``5*
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4,T5>
  nameWithType: ValueTuple.Create<T1,T2,T3,T4,T5>
  fullName: ValueTuple.Create<T1,T2,T3,T4,T5>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create``4*
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3,T4>
  nameWithType: ValueTuple.Create<T1,T2,T3,T4>
  fullName: ValueTuple.Create<T1,T2,T3,T4>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create``3*
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2,T3>
  nameWithType: ValueTuple.Create<T1,T2,T3>
  fullName: ValueTuple.Create<T1,T2,T3>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create``2*
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1,T2>
  nameWithType: ValueTuple.Create<T1,T2>
  fullName: ValueTuple.Create<T1,T2>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Create``1*
  parent: System.ValueTuple
  isExternal: false
  name: Create<T1>
  nameWithType: ValueTuple.Create<T1>
  fullName: ValueTuple.Create<T1>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.Equals*
  parent: System.ValueTuple
  isExternal: false
  name: Equals
  nameWithType: ValueTuple.Equals
  fullName: ValueTuple.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.GetHashCode*
  parent: System.ValueTuple
  isExternal: false
  name: GetHashCode
  nameWithType: ValueTuple.GetHashCode
  fullName: ValueTuple.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.ToString*
  parent: System.ValueTuple
  isExternal: false
  name: ToString
  nameWithType: ValueTuple.ToString
  fullName: ValueTuple.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.System#Collections#IStructuralComparable#CompareTo*
  parent: System.ValueTuple
  isExternal: false
  name: System.Collections.IStructuralComparable.CompareTo
  nameWithType: ValueTuple.System.Collections.IStructuralComparable.CompareTo
  fullName: ValueTuple.System.Collections.IStructuralComparable.CompareTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#Equals*
  parent: System.ValueTuple
  isExternal: false
  name: System.Collections.IStructuralEquatable.Equals
  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.Equals
  fullName: ValueTuple.System.Collections.IStructuralEquatable.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode*
  parent: System.ValueTuple
  isExternal: false
  name: System.Collections.IStructuralEquatable.GetHashCode
  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.GetHashCode
  fullName: ValueTuple.System.Collections.IStructuralEquatable.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.System#IComparable#CompareTo*
  parent: System.ValueTuple
  isExternal: false
  name: System.IComparable.CompareTo
  nameWithType: ValueTuple.System.IComparable.CompareTo
  fullName: ValueTuple.System.IComparable.CompareTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.System#Runtime#CompilerServices#ITuple#Item*
  parent: System.ValueTuple
  isExternal: false
  name: System.Runtime.CompilerServices.ITuple.Item
  nameWithType: ValueTuple.System.Runtime.CompilerServices.ITuple.Item
  fullName: ValueTuple.System.Runtime.CompilerServices.ITuple.Item
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.ValueTuple.System#Runtime#CompilerServices#ITuple#Length*
  parent: System.ValueTuple
  isExternal: false
  name: System.Runtime.CompilerServices.ITuple.Length
  nameWithType: ValueTuple.System.Runtime.CompilerServices.ITuple.Length
  fullName: ValueTuple.System.Runtime.CompilerServices.ITuple.Length
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple.xml
- uid: System.Collections.IStructuralComparable
  parent: System.Collections
  isExternal: false
  name: IStructuralComparable
  nameWithType: IStructuralComparable
  fullName: System.Collections.IStructuralComparable
- uid: System.Collections.IStructuralEquatable
  parent: System.Collections
  isExternal: false
  name: IStructuralEquatable
  nameWithType: IStructuralEquatable
  fullName: System.Collections.IStructuralEquatable
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable`1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
- uid: System.IComparable{System.ValueTuple}
  parent: System
  isExternal: false
  name: IComparable<ValueTuple>
  nameWithType: IComparable<ValueTuple>
  fullName: System.IComparable<System.ValueTuple>
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IEquatable`1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
- uid: System.IEquatable{System.ValueTuple}
  parent: System
  isExternal: false
  name: IEquatable<ValueTuple>
  nameWithType: IEquatable<ValueTuple>
  fullName: System.IEquatable<System.ValueTuple>
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
