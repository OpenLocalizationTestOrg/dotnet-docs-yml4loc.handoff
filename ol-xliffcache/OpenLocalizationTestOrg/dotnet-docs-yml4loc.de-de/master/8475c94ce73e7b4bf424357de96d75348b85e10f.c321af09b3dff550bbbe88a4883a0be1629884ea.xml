{"nodes":[{"content":"Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.","nodes":[{"pos":[0,159],"content":"Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.","nodes":[{"content":"Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.","pos":[0,159],"nodes":[{"content":"Represents a collection of shadow properties that should override inherited default or assigned values for specific properties.","pos":[0,127]},{"content":"This class cannot be inherited.","pos":[128,159]}]}]}],"pos":[772,932],"yaml":true},{"content":"<xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> stores a collection of values for specific properties that override any other value for these properties at design time. This is useful for ensuring that a specific property is set to a specific value, for example, in situations when the background form should always have its visible property set to `true`.","nodes":[{"pos":[0,387],"content":"<xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> stores a collection of values for specific properties that override any other value for these properties at design time. This is useful for ensuring that a specific property is set to a specific value, for example, in situations when the background form should always have its visible property set to `true`.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection&gt;</ph> stores a collection of values for specific properties that override any other value for these properties at design time.","pos":[0,199],"source":"<xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> stores a collection of values for specific properties that override any other value for these properties at design time."},{"content":"This is useful for ensuring that a specific property is set to a specific value, for example, in situations when the background form should always have its visible property set to <ph id=\"ph1\">`true`</ph>.","pos":[200,387],"source":" This is useful for ensuring that a specific property is set to a specific value, for example, in situations when the background form should always have its visible property set to `true`."}]}],"pos":[943,1331],"yaml":true,"extradata":"MT"},{"content":"Indicates whether a property matching the specified name exists in the collection.","nodes":[{"pos":[0,82],"content":"Indicates whether a property matching the specified name exists in the collection.","nodes":[{"content":"Indicates whether a property matching the specified name exists in the collection.","pos":[0,82]}]}],"pos":[2954,3037],"yaml":true},{"content":"The name of the property to check for in the collection.","nodes":[{"pos":[0,56],"content":"The name of the property to check for in the collection.","nodes":[{"content":"The name of the property to check for in the collection.","pos":[0,56]}]}],"pos":[3188,3245],"yaml":true},{"content":"`true` if the property exists in the collection; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the property exists in the collection; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property exists in the collection; otherwise, `false`."}],"pos":[3303,3374],"yaml":true},{"content":"Gets or sets the object at the specified index.","nodes":[{"pos":[0,47],"content":"Gets or sets the object at the specified index.","nodes":[{"content":"Gets or sets the object at the specified index.","pos":[0,47]}]}],"pos":[4653,4701],"yaml":true},{"content":"This method returns the current value of a property, if the property has not been shadowed. Therefore, it is important to determine whether the property is shadowed by calling <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.","nodes":[{"pos":[0,267],"content":"This method returns the current value of a property, if the property has not been shadowed. Therefore, it is important to determine whether the property is shadowed by calling <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.","nodes":[{"content":"This method returns the current value of a property, if the property has not been shadowed. Therefore, it is important to determine whether the property is shadowed by calling <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.","pos":[0,267],"nodes":[{"content":"This method returns the current value of a property, if the property has not been shadowed.","pos":[0,91]},{"content":"Therefore, it is important to determine whether the property is shadowed by calling <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A&gt;</ph>.","pos":[92,267],"source":" Therefore, it is important to determine whether the property is shadowed by calling <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>."}]}]}],"pos":[4712,4980],"yaml":true,"extradata":"MT"},{"content":"The name of the property to access in the collection.","nodes":[{"pos":[0,53],"content":"The name of the property to access in the collection.","nodes":[{"content":"The name of the property to access in the collection.","pos":[0,53]}]}],"pos":[5141,5195],"yaml":true},{"content":"The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.","nodes":[{"pos":[0,154],"content":"The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.","nodes":[{"content":"The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.","pos":[0,154],"nodes":[{"content":"The value of the specified property, if it exists in the collection.","pos":[0,68]},{"content":"Otherwise, the value is retrieved from the current value of the nonshadowed property.","pos":[69,154]}]}]}],"pos":[5252,5407],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  commentId: T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  id: ComponentDesigner.ShadowPropertyCollection\n  children:\n  - System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)\n  - System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)\n  langs:\n  - csharp\n  name: ComponentDesigner.ShadowPropertyCollection\n  nameWithType: ComponentDesigner.ShadowPropertyCollection\n  fullName: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.\n  remarks: <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> stores a collection of values for specific properties that override any other value for these properties at design time. This is useful for ensuring that a specific property is set to a specific value, for example, in situations when the background form should always have its visible property set to `true`.\n  syntax:\n    content: protected sealed class ComponentDesigner.ShadowPropertyCollection\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ComponentDesigner+ShadowPropertyCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)\n  commentId: M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: ComponentDesigner.ShadowPropertyCollection.Contains(String)\n  fullName: ComponentDesigner.ShadowPropertyCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Indicates whether a property matching the specified name exists in the collection.\n  syntax:\n    content: public bool Contains (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to check for in the collection.\n    return:\n      type: System.Boolean\n      description: '`true` if the property exists in the collection; otherwise, `false`.'\n  overload: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ComponentDesigner+ShadowPropertyCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)\n  commentId: P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ComponentDesigner.ShadowPropertyCollection.Item(String)\n  fullName: ComponentDesigner.ShadowPropertyCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets or sets the object at the specified index.\n  remarks: This method returns the current value of a property, if the property has not been shadowed. Therefore, it is important to determine whether the property is shadowed by calling <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.\n  syntax:\n    content: public object this[string propertyName] { get; set; }\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to access in the collection.\n    return:\n      type: System.Object\n      description: The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.\n  overload: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ComponentDesigner+ShadowPropertyCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)\n  parent: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: ComponentDesigner.ShadowPropertyCollection.Contains(String)\n  fullName: ComponentDesigner.ShadowPropertyCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)\n  parent: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: ComponentDesigner.ShadowPropertyCollection.Item(String)\n  fullName: ComponentDesigner.ShadowPropertyCollection.Item(String)\n- uid: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains*\n  parent: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ComponentDesigner.ShadowPropertyCollection.Contains\n  fullName: ComponentDesigner.ShadowPropertyCollection.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ComponentDesigner+ShadowPropertyCollection.xml\n- uid: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item*\n  parent: System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection\n  isExternal: false\n  name: Item\n  nameWithType: ComponentDesigner.ShadowPropertyCollection.Item\n  fullName: ComponentDesigner.ShadowPropertyCollection.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ComponentDesigner+ShadowPropertyCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}